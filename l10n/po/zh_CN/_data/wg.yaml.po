# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2024-09-01 08:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Hash Value: working-groups board-url
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "https://github.com/orgs/quarkusio/projects/28"
msgstr ""

#. type: Hash Value: working-groups last-activity
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "2024-08-30"
msgstr ""

#. type: Hash Value: working-groups readme
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid ""
"<p>This working group uses a different board:</p>\n"
"<ul>\n"
"<li>The <code>under discussion</code> column contains the issues we would like to have in the next LTS but are still under consideration.</li>\n"
"<li>The <code>out of scope</code> column contains the issues under discussion' that won't be included. The reason can be time or technical...</li>\n"
"<li>The <code>in progress</code> means that the work has started and should be completed before the TLS cut date</li>\n"
"<li>The <code>done</code> column means that the issues have been completed</li>\n"
"</ul>\n"
msgstr ""

#. type: Hash Value: working-groups short-description
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "This WG focuses on defining the issues we would like to have in the next-to-be LTS (Quarkus 3.14/3.15)"
msgstr ""

#. type: Hash Value: working-groups status
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "at risk"
msgstr ""

#. type: Hash Value: working-groups title
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Quarkus 3.15 LTS"
msgstr ""

#. type: Hash Value: working-groups board-url
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "https://github.com/orgs/quarkusio/projects/24"
msgstr ""

#. type: Hash Value: working-groups last-update
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Approaching completion. Watch [Quarkus Insight"
msgstr ""

#. type: Hash Value: working-groups readme
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid ""
"<p>TLS is becoming increasingly common and recommended. However, for years, each Quarkus extension has been doing its own TLS configuration and management. As a result, the configuration looks different everywhere, and many extensions have incomplete configurations.</p>\n"
"<p>Based on the newly integrated TLS registry, we now have a single place to configure TLS. At runtime, it provides methods to configure Vert.x and &quot;pure&quot; Java clients (using an <code>SSLContext</code>).</p>\n"
"<p>The goal of this focus group is to continue integrating the TLS registry and improve Quarkus integration with certificate providers (Let's Encrypt, Cert-Manager). In addition, we would like to provide a frictionless local experience around TLS (i.e., without the infamous untrusted certificate screen).</p>\n"
"<p><em>Point of contact:</em> @cescoffier (@<strong>Clement Escoffier</strong> on Zulip)</p>\n"
msgstr ""

#. type: Hash Value: working-groups short-description
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Track the progress around the new TLS configuration centralization and new features (like Let's Encrypt, Cert-Manager, and local experience...)"
msgstr ""

#. type: Hash Value: working-groups status
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "on track"
msgstr ""

#. type: Hash Value: working-groups title
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Enhanced TLS support"
msgstr ""

#. type: Hash Value: working-groups board-url
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "https://github.com/orgs/quarkusio/projects/26"
msgstr ""

#. type: Hash Value: working-groups last-update
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "The last outstanding issue is OTel integration. @michalvavrik is working on a [pull request](https://github.com/quarkusio/quarkus/pull/41956). I will meet with Michal and Bruno in the coming weeks. The PR is quite massive and we need to review it carefully."
msgstr ""

#. type: Hash Value: working-groups readme
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid ""
"<p>The WebSocket Next <em>focus group</em> aims to improve our WebSocket experience.</p>\n"
"<p>Recently, we delivered a new approach to dealing with WebSocket (both for the server and client). This was the first step. There are still a few areas to improve, such as documentation, security, observability, and testability. The goal of this focus group is to track these efforts.</p>\n"
"<p>Point of contact: @mkouba (@<strong>Martin Kouba</strong>  on Zulip)</p>\n"
msgstr ""

#. type: Hash Value: working-groups short-description
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "WebSocket-Next related tasks"
msgstr ""

#. type: Hash Value: working-groups title
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "WebSocket Next"
msgstr ""

#. type: Hash Value: working-groups board-url
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "https://github.com/orgs/quarkusio/projects/30"
msgstr ""

#. type: Hash Value: working-groups readme
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid ""
"<p>At the moment, Quarkus tests are invoked using one classloader, and then executed in a different classloader. This mostly works well, but means some use cases don't work: extensions cannot manipulate test classes in the same way that they do normal application classes. For example, anything run via a JUnit @TestTemplate test case will see the un-transformed class.</p>\n"
"<p>It also means we have extra user-facing complexity, such as the QuarkusTest*Callbacks](https://quarkus.io/guides/getting-started-testing#enrichment-via-quarkustestcallback):</p>\n"
"<blockquote>\n"
"<p>While it is possible to use JUnit Jupiter callback interfaces like BeforeEachCallback, you might run into classloading issues because Quarkus has to run tests in a custom classloader which JUnit is not aware of.</p>\n"
"</blockquote>\n"
"<p>A final benefit is a reduction in the internal complexity of our code. Hopping between classloaders during test execution takes a lot of work, and adds a lot of code! It also is brittle in places. For example, because the hop between classloaders relies on serialization in some cases, it's becoming harder to do as the JVM tightens up security restrictions. We used to rely on xstream, but that stopped working in Java 17. In https://github.com/quarkusio/quarkus/pull/40601, @dmlloyd moved us to use the JBoss Serializer, which works better, but might still be affected by future restrictions on class access.</p>\n"
"<p>The goal of this working group is to allow test classes to fully participate in the 'quarkification' of classes. The mechanism for this is probably just to load the test classes with the classloader we intend to run them with, so that JUnit sees the 'correct' version of the class.</p>\n"
msgstr ""

#. type: Hash Value: working-groups short-description
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "The goal of this working group is to rewrite Quarkus's test classloading, so that tests are run in the same classloader as the application under tests, and Quarkus extensions can do \"Quarkus-y\" manipulations of test classes."
msgstr ""

#. type: Hash Value: working-groups title
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Test classloading"
msgstr ""

#. type: Hash Value: working-groups board-url
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "https://github.com/orgs/quarkiverse/projects/6"
msgstr ""

#. type: Hash Value: working-groups last-update
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Good progress so far."
msgstr ""

#. type: Hash Value: working-groups readme
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid ""
"<p>New initiative to allow Static Site Generation with Quarkus.</p>\n"
"<p>Quarkus already provides most of the pieces to create great web applications (https://quarkus.io/guides/web).</p>\n"
"<p>I recently added https://github.com/quarkiverse/quarkus-roq. It will allow generating a static website out of any Quarkus application (it starts the app, fetch all the configured pages and assets, generate a static website and stop), it already works but it is still very alpha.</p>\n"
"<p>What's missing? we now need to incrementally add the toolkit to ease the process of creating static content through Quarkus:</p>\n"
"<ul>\n"
"<li>Static Data</li>\n"
"<li>Markdown/Asciidoc and frontmatter</li>\n"
"<li>SEO</li>\n"
"<li>Image processing</li>\n"
"<li>Easy to configure routing</li>\n"
"</ul>\n"
"<p>This will allow to develop the content using Quarkus dev-mode, and then generate for Github Pages or similar when it's ready.</p>\n"
"<p>Bonus, everything added will benefit any &quot;non-static&quot; Quarkus app and any Static Quarkus app could also become non static.</p>\n"
"<p>This effort is now tracked using a &quot;Working Group&quot; project: https://github.com/orgs/quarkiverse/projects/6</p>\n"
"<p>This is a great opportunity to participate in fun effort and be involved with the Quarkus community, if anyone is interested in being a part of this, please reach out to me ðŸš€</p>\n"
msgstr ""

#. type: Hash Value: working-groups short-description
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Allow Static Site Generation with Quarkus."
msgstr ""

#. type: Hash Value: working-groups title
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Roq :: Quarkus SSG"
msgstr ""

#. type: Hash Value: working-groups board-url
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "https://github.com/orgs/quarkusio/projects/32"
msgstr ""

#. type: Hash Value: working-groups readme
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid ""
"<p>Let's define a format for the files containing the config model we will include in the jars for IDE consumption.</p>\n"
"<p>See https://github.com/quarkusio/quarkus/discussions/42671 for more details.</p>\n"
"<p><em>Point of contact</em>: @gsmet (Zulip: @_<strong>Guillaume Smet</strong> )</p>\n"
msgstr ""

#. type: Hash Value: working-groups short-description
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Let's define a format for the files containing the config model we will include in the jars for IDE consumption."
msgstr ""

#. type: Hash Value: working-groups title
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Quarkus Config and IDEs"
msgstr ""

#. type: Hash Value: working-groups board-url
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "https://github.com/orgs/quarkusio/projects/27"
msgstr ""

#. type: Hash Value: working-groups last-activity
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "2024-08-05"
msgstr ""

#. type: Hash Value: working-groups readme
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid ""
"<p>At the moment, when you create a Quarkus project (from code.quarkus.io or the CLI), a set of <code>Dockerfiles</code> is generated. However,</p>\n"
"<ol>\n"
"<li>Not all these files are used by the user</li>\n"
"<li>These files are very quickly outdated</li>\n"
"<li>It does not allow <em>extensions</em> to customize the content</li>\n"
"</ol>\n"
"<p>This working group aims to replace these `Dockerfiles' with a CLI command that generates an up-to-date Dockerfile and includes extension customization.</p>\n"
"<p>The goal is not to allow updating these files once generated but to provide a one-off generation that the user can consult and use. It will use the recommended and up-to-date <code>FROM</code> image to improve security and, depending on the generated <em>variant</em> (JVM, native, native-micro...), follow good practices (such as using <code>run-java</code> for the JVM one).</p>\n"
"<p>You can find more details about this working group on <a href=\"https://github.com/quarkusio/quarkus/discussions/41352\">this discussion</a>.\n"
"Once completed, this working group will be followed by other initiatives focusing on generating the Github Action and Tekton pipelines.</p>\n"
"<p><em>Point of contact</em>: @iocanel (<code>Ioannis Canellos</code>on Zulip)</p>\n"
msgstr ""

#. type: Hash Value: working-groups short-description
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "A working group focusing on the generation of Dockerfile / ContainerFile"
msgstr ""

#. type: Hash Value: working-groups title
#: upstream/_data/wg.yaml:0
#, no-wrap
msgid "Docker file generation"
msgstr ""
