# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/quartz.adoc:6
#, fuzzy, no-wrap
msgid "Scheduling Periodic Tasks with Quartz"
msgstr "用Quartz调度周期性任务"

#. type: Plain text
#: upstream/_guides/quartz.adoc:13
#, fuzzy
msgid "Modern applications often need to run specific tasks periodically.  In this guide, you learn how to schedule periodic clustered tasks using the http://www.quartz-scheduler.org/[Quartz] extension."
msgstr "现代应用程序经常需要定期运行特定的任务。在本指南中，你将学习如何使用 link:http://www.quartz-scheduler.org/[Quartz] 扩展安排定期集群任务。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:17
#, fuzzy
msgid "If you only need to run in-memory scheduler use the xref:scheduler.adoc[Scheduler] extension."
msgstr "如果你只需要在内存中运行调度程序，请使用 link:scheduler.html[Scheduler] 扩展。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:18
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: upstream/_guides/quartz.adoc:23
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: upstream/_guides/quartz.adoc:26
#, fuzzy
msgid "In this guide, we are going to expose one Rest API `tasks` to visualise the list of tasks created by a Quartz job running every 10 seconds."
msgstr "在本指南中，我们将公开一个Rest API `tasks` ，以可视化地显示每10秒运行的Quartz作业所创建的任务列表。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:27
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/quartz.adoc:31
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "我们建议你按照下面几节的说明，一步一步地创建应用程序。然而，你可以直接进入已完成的例子。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:33
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:35
#, fuzzy
msgid "The solution is located in the `quartz-quickstart` {quickstarts-tree-url}/quartz-quickstart[directory]."
msgstr "该解决方案位于 `quartz-quickstart` {quickstarts-tree-url}/quartz-quickstart[目录]中。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:36
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_guides/quartz.adoc:39
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:45
#, fuzzy
msgid "It generates:"
msgstr "它产生了。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:47
#, fuzzy
msgid "the Maven structure"
msgstr "Maven的结构"

#. type: Plain text
#: upstream/_guides/quartz.adoc:48
#, fuzzy
msgid "a landing page accessible on `http://localhost:8080`"
msgstr "一个可在以下网站上访问的登陆页面 `<a href=\"http://localhost:8080\" class=\"bare\">http://localhost:8080</a>` "

#. type: Plain text
#: upstream/_guides/quartz.adoc:49
#, fuzzy
msgid "example `Dockerfile` files for both `native` and `jvm` modes"
msgstr "示例 `Dockerfile` 文件，用于 `native` 和 `jvm` 模式。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:50
#, fuzzy
msgid "the application configuration file"
msgstr "应用程序的配置文件"

#. type: Plain text
#: upstream/_guides/quartz.adoc:52
#, fuzzy
msgid "The Maven project also imports the Quarkus Quartz extension."
msgstr "Maven项目还导入了Quarkus Quartz扩展。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:55
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `quartz` extension to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `quartz` 扩展到你的项目。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:60
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容。"

#. type: Block title
#: upstream/_guides/quartz.adoc:62
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:68
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-quartz</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/quartz.adoc:71
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:74
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-quartz\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/quartz.adoc:79
#, fuzzy
msgid "To use a JDBC store, the `quarkus-agroal` extension, which provides the datasource support, is also required."
msgstr "要使用JDBC存储，还需要提供数据源支持的 `quarkus-agroal` 扩展。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:81
#, fuzzy, no-wrap
msgid "Creating the Task Entity"
msgstr "创建任务实体"

#. type: Plain text
#: upstream/_guides/quartz.adoc:84
#, fuzzy
msgid "In the `org.acme.quartz` package, create the `Task` class, with the following content:"
msgstr "在 `org.acme.quartz` 包中，创建 `Task` 类，其内容如下。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:88 upstream/_guides/quartz.adoc:118
#: upstream/_guides/quartz.adoc:149 upstream/_guides/quartz.adoc:239
#: upstream/_guides/quartz.adoc:263
#, no-wrap
msgid "package org.acme.quartz;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:92
#, no-wrap
msgid ""
"import javax.persistence.Entity;\n"
"import java.time.Instant;\n"
"import javax.persistence.Table;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:94
#, no-wrap
msgid "import io.quarkus.hibernate.orm.panache.PanacheEntity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:99
#, no-wrap
msgid ""
"@Entity\n"
"@Table(name=\"TASKS\")\n"
"public class Task extends PanacheEntity { <1>\n"
"    public Instant createdAt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:103
#, no-wrap
msgid ""
"    public Task() {\n"
"        createdAt = Instant.now();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:108
#, no-wrap
msgid ""
"    public Task(Instant time) {\n"
"        this.createdAt = time;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:110
#, fuzzy
msgid "Declare the entity using xref:hibernate-orm-panache.adoc[Panache]"
msgstr "使用 link:hibernate-orm-panache.html[Panache] 声明该实体"

#. type: Title ==
#: upstream/_guides/quartz.adoc:111
#, fuzzy, no-wrap
msgid "Creating a scheduled job"
msgstr "创建一个预定的工作"

#. type: Plain text
#: upstream/_guides/quartz.adoc:114
#, fuzzy
msgid "In the `org.acme.quartz` package, create the `TaskBean` class, with the following content:"
msgstr "在 `org.acme.quartz` 包中，创建 `TaskBean` 类，其内容如下。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:120
#, no-wrap
msgid "import javax.enterprise.context.ApplicationScoped;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:122
#, no-wrap
msgid "import javax.transaction.Transactional;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:124
#, no-wrap
msgid "import io.quarkus.scheduler.Scheduled;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:127
#, no-wrap
msgid ""
"@ApplicationScoped <1>\n"
"public class TaskBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:135
#, no-wrap
msgid ""
"    @Transactional\n"
"    @Scheduled(every = \"10s\", identity = \"task-job\") <2>\n"
"    void schedule() {\n"
"        Task task = new Task(); <3>\n"
"        task.persist(); <4>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:137
#, fuzzy
msgid "Declare the bean in the _application_ scope"
msgstr "在 _应用_ 范围内声明Bean"

#. type: Plain text
#: upstream/_guides/quartz.adoc:138
#, fuzzy
msgid "Use the `@Scheduled` annotation to instruct Quarkus to run this method every 10 seconds and set the unique identifier for this job."
msgstr "使用 `@Scheduled` 注释来指示Quarkus每10秒运行一次这个方法，并为这个作业设置唯一的标识符。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:139
#, fuzzy
msgid "Create a new `Task` with the current start time."
msgstr "用当前的开始时间创建一个新的 `Task` 。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:140
#, fuzzy
msgid "Persist the task in database using xref:hibernate-orm-panache.adoc[Panache]."
msgstr "使用 link:hibernate-orm-panache.html[Panache] 将任务持久化在数据库中。"

#. type: Title ===
#: upstream/_guides/quartz.adoc:141
#, fuzzy, no-wrap
msgid "Scheduling Jobs Programmatically"
msgstr "按程序安排工作"

#. type: Plain text
#: upstream/_guides/quartz.adoc:145
#, fuzzy
msgid "It is also possible to leverage the Quartz API directly.  You can inject the underlying `org.quartz.Scheduler` in any bean:"
msgstr "也可以直接利用Quartz API。你可以在任何Bean中注入底层 `org.quartz.Scheduler` 。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:152
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class TaskBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:155
#, no-wrap
msgid ""
"    @Inject\n"
"    org.quartz.Scheduler quartz; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:170
#, no-wrap
msgid ""
"    void onStart(@Observes StartupEvent event) throws SchedulerException {\n"
"       JobDetail job = JobBuilder.newJob(MyJob.class)\n"
"                         .withIdentity(\"myJob\", \"myGroup\")\n"
"                         .build();\n"
"       Trigger trigger = TriggerBuilder.newTrigger()\n"
"                            .withIdentity(\"myTrigger\", \"myGroup\")\n"
"                            .startNow()\n"
"                            .withSchedule(\n"
"                               SimpleScheduleBuilder.simpleSchedule()\n"
"                                  .withIntervalInSeconds(10)\n"
"                                  .repeatForever())\n"
"                            .build();\n"
"       quartz.scheduleJob(job, trigger); <2>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:176
#, no-wrap
msgid ""
"    @Transactional\n"
"    void performTask() {\n"
"        Task task = new Task();\n"
"        task.persist();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:179
#, no-wrap
msgid ""
"    // A new instance of MyJob is created by Quartz for every job execution\n"
"    public static class MyJob implements Job {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:182
#, no-wrap
msgid ""
"       @Inject\n"
"       TaskBean taskBean;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:186
#, no-wrap
msgid ""
"       public void execute(JobExecutionContext context) throws JobExecutionException {\n"
"          taskBean.performTask(); <3>\n"
"       }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:189
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:191
#, fuzzy
msgid "Inject the underlying `org.quartz.Scheduler` instance."
msgstr "注入底层的 `org.quartz.Scheduler` 实例。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:192
#, fuzzy
msgid "Schedule a new job using the Quartz API."
msgstr "使用Quartz API安排一个新工作。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:193
#, fuzzy
msgid "Invoke the `TaskBean#performTask()` method from the job. Jobs are also xref:cdi.adoc[container-managed] beans if they belong to a link:cdi-reference[bean archive]."
msgstr "从作业中调用 `TaskBean#performTask()` 方法。如果作业属于一个 link:cdi-reference[bean archive] ，那么它也是 link:cdi.html[容器管理] 的bean。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:195
#, fuzzy
msgid "By default, the scheduler is not started unless a `@Scheduled` business method is found. You may need to force the start of the scheduler for \"pure\" programmatic scheduling. See also <<quartz-configuration-reference>>."
msgstr "默认情况下，除非找到一个 `@Scheduled` 的业务方法，否则调度器不会被启动。你可能需要为 \"纯 \"程序化调度强制启动调度器。另请参见 link:#quartz-configuration-reference[[quartz-configuration-reference]] 。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:196
#, fuzzy, no-wrap
msgid "Updating the application configuration file"
msgstr "更新应用程序的配置文件"

#. type: Plain text
#: upstream/_guides/quartz.adoc:199
#, fuzzy
msgid "Edit the `application.properties` file and add the below configuration:"
msgstr "编辑 `application.properties` 文件并添加以下配置。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:205
#, no-wrap
msgid ""
"# Quartz configuration\n"
"quarkus.quartz.clustered=true <1>\n"
"quarkus.quartz.store-type=jdbc-cmt <2>\n"
"quarkus.quartz.misfire-policy.task-job=ignore-misfire-policy <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:211
#, no-wrap
msgid ""
"# Datasource configuration.\n"
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=quarkus_test\n"
"quarkus.datasource.password=quarkus_test\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql://localhost/quarkus_test\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:216
#, no-wrap
msgid ""
"# Hibernate configuration\n"
"quarkus.hibernate-orm.database.generation=none\n"
"quarkus.hibernate-orm.log.sql=true\n"
"quarkus.hibernate-orm.sql-load-script=no-file\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:224
#, no-wrap
msgid ""
"# flyway configuration\n"
"quarkus.flyway.connect-retries=10\n"
"quarkus.flyway.table=flyway_quarkus_history\n"
"quarkus.flyway.migrate-at-start=true\n"
"quarkus.flyway.baseline-on-migrate=true\n"
"quarkus.flyway.baseline-version=1.0\n"
"quarkus.flyway.baseline-description=Quartz\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:226
#, fuzzy
msgid "Indicate that the scheduler will be run in clustered mode"
msgstr "表示调度程序将以集群模式运行"

#. type: Plain text
#: upstream/_guides/quartz.adoc:227
#, fuzzy
msgid "Use the database store to persist job related information so that they can be shared between nodes"
msgstr "使用数据库存储来保存工作相关的信息，以便它们可以在节点之间共享。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:228
#, fuzzy
msgid "The misfire policy can be configured for each job. `task-job` is the identity of the job."
msgstr "可以为每个作业配置失误策略。 `task-job` 是作业的身份。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:231
#, fuzzy
msgid "Valid misfire policy for cron jobs are: `smart-policy`, `ignore-misfire-policy`, `fire-now` and `cron-trigger-do-nothing`.  Valid misfire policy for interval jobs are: `smart-policy`, `ignore-misfire-policy`, `fire-now`, `simple-trigger-reschedule-now-with-existing-repeat-count`, `simple-trigger-reschedule-now-with-remaining-repeat-count`, `simple-trigger-reschedule-next-with-existing-count` and `simple-trigger-reschedule-next-with-remaining-count`."
msgstr "cron作业的有效误报策略是。 `smart-policy` , `ignore-misfire-policy` , `fire-now` 和 `cron-trigger-do-nothing` 。对间隔作业来说，有效的失误策略是。 `smart-policy` , `ignore-misfire-policy` , `fire-now` , `simple-trigger-reschedule-now-with-existing-repeat-count` , `simple-trigger-reschedule-now-with-remaining-repeat-count` , `simple-trigger-reschedule-next-with-existing-count` 和 `simple-trigger-reschedule-next-with-remaining-count` 。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:232
#, fuzzy, no-wrap
msgid "Creating a REST resource and a test"
msgstr "创建一个REST资源和一个测试"

#. type: Plain text
#: upstream/_guides/quartz.adoc:235
#, fuzzy
msgid "Create the `org.acme.quartz.TaskResource` class with the following content:"
msgstr "创建具有以下内容的 `org.acme.quartz.TaskResource` 类。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:241
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:246
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:249
#, no-wrap
msgid ""
"@Path(\"/tasks\")\n"
"public class TaskResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:255
#, no-wrap
msgid ""
"    @GET\n"
"    public List<Task> listAll() {\n"
"        return Task.listAll(); <1>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:257
#, fuzzy
msgid "Retrieve the list of created tasks from the database"
msgstr "从数据库中检索已创建的任务列表"

#. type: Plain text
#: upstream/_guides/quartz.adoc:259
#, fuzzy
msgid "You also have the option to create a `org.acme.quartz.TaskResourceTest` test with the following content:"
msgstr "你还可以选择创建一个 `org.acme.quartz.TaskResourceTest` 测试，内容如下。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:265
#, no-wrap
msgid "import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:267
#, no-wrap
msgid "import static org.hamcrest.Matchers.greaterThanOrEqualTo;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:269
#, no-wrap
msgid "import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:272
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:275
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class TaskResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:286
#, no-wrap
msgid ""
"    @Test\n"
"    public void tasks() throws InterruptedException {\n"
"        Thread.sleep(1000); // wait at least a second to have the first task created\n"
"        given()\n"
"                .when().get(\"/tasks\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"size()\", is(greaterThanOrEqualTo(1))); <1>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:288
#, fuzzy
msgid "Ensure that we have a `200` response and at least one task created"
msgstr "确保我们有一个 `200` 响应，并至少创建一个任务"

#. type: Title ==
#: upstream/_guides/quartz.adoc:289
#, fuzzy, no-wrap
msgid "Creating Quartz Tables"
msgstr "创建石英表"

#. type: Plain text
#: upstream/_guides/quartz.adoc:293
#, fuzzy
msgid "Add a SQL migration file named `src/main/resources/db/migration/V2.0.0\\__QuarkusQuartzTasks.sql` with the content copied from file with the content from link:{quickstarts-blob-url}/quartz-quickstart/src/main/resources/db/migration/V2.0.0__QuarkusQuartzTasks.sql[V2.0.0__QuarkusQuartzTasks.sql]."
msgstr "添加一个名为 `src/main/resources/db/migration/V2.0.0__QuarkusQuartzTasks.sql` 的SQL迁移文件，其内容是从 link:{quickstarts-blob-url}/quartz-quickstart/src/main/resources/db/migration/V2.0.0__QuarkusQuartzTasks.sql[V2.0.0__QuarkusQuartzTasks.sql] 中复制的。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:294
#, fuzzy, no-wrap
msgid "Configuring the load balancer"
msgstr "配置负载均衡器"

#. type: Plain text
#: upstream/_guides/quartz.adoc:297
#, fuzzy
msgid "In the root directory, create a `nginx.conf` file with the following content:"
msgstr "在根目录下，创建一个 `nginx.conf` 文件，内容如下。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:301
#, no-wrap
msgid "user  nginx;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:305
#, no-wrap
msgid ""
"events {\n"
"    worker_connections   1000;\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:314
#, no-wrap
msgid ""
"http {\n"
"        server {\n"
"              listen 8080;\n"
"              location / {\n"
"                proxy_pass http://tasks:8080; <1>\n"
"              }\n"
"        }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:316
#, fuzzy
msgid "Route all traffic to our tasks application"
msgstr "将所有的流量导向我们的任务应用程序"

#. type: Title ==
#: upstream/_guides/quartz.adoc:317
#, fuzzy, no-wrap
msgid "Setting Application Deployment"
msgstr "设置应用程序的部署"

#. type: Plain text
#: upstream/_guides/quartz.adoc:320
#, fuzzy
msgid "In the root directory, create a `docker-compose.yml` file with the following content:"
msgstr "在根目录下，创建一个 `docker-compose.yml` 文件，内容如下。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:324
#, no-wrap
msgid "version: '3'\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:337
#, no-wrap
msgid ""
"services:\n"
"  tasks: <1>\n"
"    image: quarkus-quickstarts/quartz:1.0\n"
"    build:\n"
"      context: ./\n"
"      dockerfile: src/main/docker/Dockerfile.${QUARKUS_MODE:-jvm}\n"
"    environment:\n"
"      QUARKUS_DATASOURCE_URL: jdbc:postgresql://postgres/quarkus_test\n"
"    networks:\n"
"      - tasks-network\n"
"    depends_on:\n"
"      - postgres\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:348
#, no-wrap
msgid ""
"  nginx: <2>\n"
"    image: nginx:1.17.6\n"
"    volumes:\n"
"      - ./nginx.conf:/etc/nginx/nginx.conf:ro\n"
"    depends_on:\n"
"      - tasks\n"
"    ports:\n"
"      - 8080:8080\n"
"    networks:\n"
"      - tasks-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:360
#, no-wrap
msgid ""
"  postgres: <3>\n"
"    image: postgres:14.1\n"
"    container_name: quarkus_test\n"
"    environment:\n"
"      - POSTGRES_USER=quarkus_test\n"
"      - POSTGRES_PASSWORD=quarkus_test\n"
"      - POSTGRES_DB=quarkus_test\n"
"    ports:\n"
"      - 5432:5432\n"
"    networks:\n"
"      - tasks-network\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:364
#, no-wrap
msgid ""
"networks:\n"
"  tasks-network:\n"
"    driver: bridge\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:366
#, fuzzy
msgid "Define the tasks service"
msgstr "定义任务服务"

#. type: Plain text
#: upstream/_guides/quartz.adoc:367
#, fuzzy
msgid "Define the nginx load balancer to route incoming traffic to an appropriate node"
msgstr "定义nginx负载平衡器，将进入的流量路由到适当的节点上。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:368
#, fuzzy
msgid "Define the configuration to run the database"
msgstr "定义运行数据库的配置"

#. type: Title ==
#: upstream/_guides/quartz.adoc:369
#, fuzzy, no-wrap
msgid "Running the database"
msgstr "运行数据库"

#. type: Plain text
#: upstream/_guides/quartz.adoc:372
#, fuzzy
msgid "In a separate terminal, run the below command:"
msgstr "在一个单独的终端，运行以下命令。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:376
#, no-wrap
msgid "docker-compose up postgres <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:378
#, fuzzy
msgid "Start the database instance using the configuration options supplied in the `docker-compose.yml` file"
msgstr "使用 `docker-compose.yml` 文件中提供的配置选项启动数据库实例。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:379
#, fuzzy, no-wrap
msgid "Run the application in Dev Mode"
msgstr "在开发模式下运行应用程序"

#. type: Plain text
#: upstream/_guides/quartz.adoc:382
#, fuzzy
msgid "Run the application with:"
msgstr "用以下方式运行应用程序。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:386
#, fuzzy
msgid "After a few seconds, open another terminal and run `curl localhost:8080/tasks` to verify that we have at least one task created."
msgstr "几秒钟后，打开另一个终端，运行 `curl localhost:8080/tasks` ，验证我们至少有一个任务被创建。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:388
#, fuzzy
msgid "As usual, the application can be packaged using:"
msgstr "像往常一样，该应用程序可以用以下方式打包。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:392
#, fuzzy
msgid "and executed with `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "并以 `java -jar target/quarkus-app/quarkus-run.jar` 。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:394 upstream/_guides/quartz.adoc:414
#, fuzzy
msgid "You can also generate the native executable with:"
msgstr "你也可以用以下方法生成本地可执行文件。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:397
#, fuzzy, no-wrap
msgid "Packaging the application and run several instances"
msgstr "将应用程序打包并运行几个实例"

#. type: Plain text
#: upstream/_guides/quartz.adoc:400
#, fuzzy
msgid "The application can be packaged using:"
msgstr "该应用程序可以用以下方式打包。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:404
#, fuzzy
msgid "Once the build is successful, run the below command:"
msgstr "一旦构建成功，运行以下命令。"

#. type: delimited block -
#: upstream/_guides/quartz.adoc:408
#, no-wrap
msgid "docker-compose up --scale tasks=2 --scale nginx=1 <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:410
#, fuzzy
msgid "Start two instances of the application and a load balancer"
msgstr "启动应用程序的两个实例和一个负载平衡器"

#. type: Plain text
#: upstream/_guides/quartz.adoc:412
#, fuzzy
msgid "After a few seconds, in another terminal, run `curl localhost:8080/tasks` to verify that tasks were only created at different instants and in an interval of 10 seconds."
msgstr "几秒钟后，在另一个终端，运行 `curl localhost:8080/tasks` ，以验证任务只在不同的时刻和以10秒的时间间隔创建。"

#. type: Plain text
#: upstream/_guides/quartz.adoc:418
#, fuzzy
msgid "It's the reponsibility of the deployer to clear/remove the previous state, i.e. stale jobs and triggers. Moreover, the applications that form the \"Quartz cluster\" should be identical, otherwise an unpredictable result may occur."
msgstr "部署者有责任清除/删除以前的状态，即过时的作业和触发器。此外，构成 \"石英集群 \"的应用程序应该是相同的，否则可能会出现不可预知的结果。"

#. type: Title ==
#: upstream/_guides/quartz.adoc:420
#, fuzzy, no-wrap
msgid "Registering Plugin and Listeners"
msgstr "注册插件和监听器"

#. type: Plain text
#: upstream/_guides/quartz.adoc:423
msgid "You can register `plugins`, `job-listeners` and `trigger-listeners` through Quarkus configuration."
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:425
msgid "The example below registers the plugin `org.quartz.plugins.history.LoggingJobHistoryPlugin` named as `jobHistory` with the property `jobSuccessMessage` defined as `Job [{1}.{0}] execution complete and reports: {8}`"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:430
#, no-wrap
msgid ""
"quarkus.quartz.plugins.jobHistory.class=org.quartz.plugins.history.LoggingJobHistoryPlugin\n"
"quarkus.quartz.plugins.jobHistory.properties.jobSuccessMessage=Job [{1}.{0}] execution complete and reports: {8}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/quartz.adoc:433
msgid "You can also register a listener programmatically with an injected `org.quartz.Scheduler`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/quartz.adoc:442
#, no-wrap
msgid ""
"public class MyListenerManager {\n"
"    void onStart(@Observes StartupEvent event, org.quartz.Scheduler scheduler) throws SchedulerException {\n"
"        scheduler.getListenerManager().addJobListener(new MyJogListener());\n"
"        scheduler.getListenerManager().addTriggerListener(new MyTriggerListener());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/quartz.adoc:445
#, no-wrap
msgid "Quartz Configuration Reference"
msgstr ""
