# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-04-26 15:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-basic-authentication-concept.adoc:2
#, fuzzy, no-wrap
msgid "Basic authentication"
msgstr "基本认证"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:8
#, fuzzy
msgid "HTTP Basic authentication is one of the least resource-demanding techniques that enforce access controls to web resources.  You can secure your Quarkus application endpoints with HTTP Basic authentication. Quarkus provides a built-in authentication mechanism for Basic authentication."
msgstr "HTTP基本认证是对资源需求最小的技术之一，可以对网络资源实施访问控制。它使用HTTP头中的字段，不需要HTTP cookies、会话标识符或登录页面。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:10
#, fuzzy
msgid "Basic authentication uses fields in the HTTP header and does not require HTTP cookies, session identifiers, or login pages."
msgstr "HTTP基本认证是对资源需求最小的技术之一，可以对网络资源实施访问控制。它使用HTTP头中的字段，不需要HTTP cookies、会话标识符或登录页面。"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-concept.adoc:11
#, fuzzy, no-wrap
msgid "Authorization header"
msgstr "授权标头"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:15
#, fuzzy
msgid "An HTTP user agent, for example, a web browser, uses an `Authorization` header to provide a username and password in each HTTP request.  The header is specified as `Authorization: Basic <credentials>`, where credentials are the Base64 encoding of the user ID and password joined by a colon, as shown in the following example."
msgstr "一个HTTP用户代理，如网络浏览器，使用一个 `Authorization` 标头，在每个HTTP请求中提供一个用户名和密码。该头被指定为 `Authorization: Basic <credentials>` ，其中凭证是用户ID和密码的Base64编码，由冒号连接，如以下例子所示。"

#. type: Block title
#: upstream/_guides/security-basic-authentication-concept.adoc:17
#, no-wrap
msgid "Example"
msgstr "例子"

#. type: delimited block =
#: upstream/_guides/security-basic-authentication-concept.adoc:20
#, fuzzy
msgid "If the user name is `Alice` and the password is `secret`, the HTTP authorization header would be `Authorization: Basic QWxjZTpzZWNyZXQ=`, where `QWxjZTpzZWNyZXQ=` is a Base64 encoded representation of the `Alice:secret` string."
msgstr "如果用户名是 `Alice` ，密码是 `secret` ，HTTP授权头将是 `Authorization: Basic QWxjZTpzZWNyZXQ=` ，其中 `QWxjZTpzZWNyZXQ=` 是 `Alice:secret` 字符串的Base64编码表示。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:25
#, fuzzy
msgid "The Basic authentication mechanism does not provide confidentiality protection for the transmitted credentials.  The credentials are merely encoded with Base64 when in transit and not encrypted or hashed in any way.  Therefore, Basic authentication is used with HTTPS to provide confidentiality."
msgstr "基本认证机制并不为传输的凭证提供保密保护。在传输过程中，证书只是用Base64进行编码，而不是以任何方式进行加密或散列。因此，基本认证与HTTPS一起使用以提供保密性。"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:27
#, fuzzy
msgid "Basic authentication is a well-specified, simple challenge and response scheme that all web browsers and most web servers understand."
msgstr "基本认证是一个明确规定的、简单的挑战和响应方案，所有的网络浏览器和大多数网络服务器都能理解。然而，基本认证有一些相关的限制，其中包括。"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-concept.adoc:28
#, fuzzy, no-wrap
msgid "Limitations with using Basic authentication"
msgstr "基本认证"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:31
#, fuzzy
msgid "The following table outlines some limitations of using HTTP Basic authentication to secure your Quarkus applications:"
msgstr "下表概述了使用HTTP Basic认证来保护你的Quarkus应用程序的一些限制："

#. type: Block title
#: upstream/_guides/security-basic-authentication-concept.adoc:33
#, fuzzy, no-wrap
msgid "Limitations of HTTP Basic authentication"
msgstr "基本认证"

#. type: Table
#: upstream/_guides/security-basic-authentication-concept.adoc:37
#, fuzzy, no-wrap
msgid "Limitation"
msgstr "限制条件"

#. type: Table
#: upstream/_guides/security-basic-authentication-concept.adoc:39
#, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: upstream/_guides/security-basic-authentication-concept.adoc:40
#, fuzzy, no-wrap
msgid "Credentials are sent as plain text"
msgstr "凭证以纯文本形式发送"

#. type: Table
#: upstream/_guides/security-basic-authentication-concept.adoc:44
#, fuzzy, no-wrap
msgid ""
"Use HTTPS with Basic authentication to avoid exposing the credentials.\n"
"The risk of exposing credentials as plain text increases if a load balancer terminates HTTPS, as the request is forwarded to Quarkus over HTTP.\n"
"Also, in multi-hop deployments, the credentials can be exposed if HTTPS is used between the client and the first Quarkus endpoint only, and the credentials are propagated to the next Quarkus endpoint over HTTP."
msgstr "使用HTTPS与基本认证，以避免暴露凭证。如果负载均衡器终止了HTTPS，暴露凭证的风险就会增加，因为请求是通过HTTP转发给Quarkus的。"

#. type: Table
#: upstream/_guides/security-basic-authentication-concept.adoc:45
#, fuzzy, no-wrap
msgid "Credentials are sent with each request"
msgstr "每次请求时都会发送凭证"

#. type: Table
#: upstream/_guides/security-basic-authentication-concept.adoc:47
#, fuzzy, no-wrap
msgid "In Basic authentication, a username and password must be sent with each request, which increases the risk of credentials being exposed."
msgstr "在基本认证中，每次请求都必须发送用户名和密码，这增加了凭证暴露的风险。"

#. type: Table
#: upstream/_guides/security-basic-authentication-concept.adoc:48
#, fuzzy, no-wrap
msgid "Application complexity increases"
msgstr "应用的复杂性增加"

#. type: Table
#: upstream/_guides/security-basic-authentication-concept.adoc:52
#, fuzzy, no-wrap
msgid ""
"The Quarkus application must validate that usernames, passwords, and roles are managed securely.\n"
"This process, however, can introduce significant complexity to the application.\n"
"Depending on the use case, other authentication mechanisms that delegate username, password, and role management to specialized services might be a better choice."
msgstr "Quarkus应用程序必须验证用户名、密码和角色的安全管理。然而，这个过程会给应用程序带来很大的复杂性。根据不同的用例，将用户名、密码和角色管理委托给专门服务的其他认证机制可能是更好的选择。"

#. type: Title ==
#: upstream/_guides/security-basic-authentication-concept.adoc:54
#, fuzzy, no-wrap
msgid "Implementing Basic authentication in Quarkus"
msgstr "在Quarkus中实现基本认证"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:57
#, fuzzy
msgid "For more information about how you can secure your Quarkus applications by using Basic authentication, see the following resources:"
msgstr "关于如何通过使用Basic认证来保护Quarkus应用程序的更多信息，请参见以下资源："

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:59
#, fuzzy
msgid "xref:security-basic-authentication-howto.adoc[Enable Basic authentication]"
msgstr "link:security-basic-authentication-howto.html[启用基本认证]"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:60
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence]"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-basic-authentication-concept.adoc:61
#, no-wrap
msgid "Role-based access control"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:65
msgid "{project-name} also includes built-in security to allow for role-based access control (RBAC) based on the common security annotations @RolesAllowed, @DenyAll, @PermitAll on REST endpoints and CDI beans.  For more information, see xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints]."
msgstr ""

#. type: Title ==
#: upstream/_guides/security-basic-authentication-concept.adoc:66
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:69
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:70
msgid "xref:security-architecture-concept.adoc[Quarkus Security architecture]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:71
msgid "xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:72
msgid "xref:security-identity-providers-concept.adoc[Identity providers]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-basic-authentication-concept.adoc:72
msgid "xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints]"
msgstr ""

#, fuzzy
#~ msgid "Also, in multi-hop deployments, the credentials can be exposed if HTTPS is used between the client and the first Quarkus endpoint only, and the credentials are propagated to the next Quarkus endpoint over HTTP."
#~ msgstr "另外，在多跳部署中，如果客户端和第一个Quarkus端点之间只使用HTTPS，而凭证通过HTTP传播到下一个Quarkus端点，那么凭证就会暴露。"
