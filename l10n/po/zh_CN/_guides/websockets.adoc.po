# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/websockets.adoc:6
#, fuzzy, no-wrap
msgid "Using WebSockets"
msgstr "使用WebSockets"

#. type: Plain text
#: upstream/_guides/websockets.adoc:12
#, fuzzy
msgid "This guide explains how your Quarkus application can utilize web sockets to create interactive web applications.  Because it's the _canonical_ web socket application, we are going to create a simple chat application."
msgstr "本指南解释了你的Quarkus应用程序如何利用网络套接字来创建交互式网络应用。因为它是 _典型的_ 网络套接字应用程序，我们将创建一个简单的聊天应用程序。"

#. type: Title ==
#: upstream/_guides/websockets.adoc:13
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: upstream/_guides/websockets.adoc:17
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: upstream/_guides/websockets.adoc:20
#, fuzzy
msgid "In this guide, we create a straightforward chat application using web sockets to receive and send messages to the other connected users."
msgstr "在本指南中，我们创建了一个直接的聊天应用程序，使用网络套接字来接收和发送消息给其他连接的用户。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:22
#, fuzzy
msgid "image:websocket-guide-architecture.png[alt=Architecture]"
msgstr "image:websocket-guide-architecture.png[alt=\"Architecture\"]"

#. type: Title ==
#: upstream/_guides/websockets.adoc:23
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/websockets.adoc:27
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can skip right to the completed example."
msgstr "我们建议你按照下面几节的说明，一步一步地创建应用程序。不过，你可以直接跳到完成的例子。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:29
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:31
#, fuzzy
msgid "The solution is located in the `websockets-quickstart` {quickstarts-tree-url}/websockets-quickstart[directory]."
msgstr "该解决方案位于 `websockets-quickstart` {quickstarts-tree-url}/websockets-quickstart[目录]中。"

#. type: Title ==
#: upstream/_guides/websockets.adoc:32
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_guides/websockets.adoc:35
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:41
#, fuzzy
msgid "This command generates the project (without any classes) and imports the `websockets` extension."
msgstr "这个命令生成了项目（没有任何类）并导入了 `websockets` 扩展。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:44
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `websockets` extension to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `websockets` 扩展到你的项目。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:49
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容。"

#. type: Block title
#: upstream/_guides/websockets.adoc:51
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/websockets.adoc:57
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-websockets</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/websockets.adoc:60
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/websockets.adoc:63
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-websockets\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/websockets.adoc:66
#, fuzzy
msgid "If you only want to use the WebSocket client you should include `quarkus-websockets-client` instead."
msgstr "如果你只想使用WebSocket客户端，你应该包括 `quarkus-websockets-client` 。"

#. type: Title ==
#: upstream/_guides/websockets.adoc:67
#, fuzzy, no-wrap
msgid "Handling web sockets"
msgstr "处理网络套接字"

#. type: Plain text
#: upstream/_guides/websockets.adoc:72
#, fuzzy
msgid "Our application contains a single class that handles the web sockets.  Create the `org.acme.websockets.ChatSocket` class in the `src/main/java` directory.  Copy the following content into the created file:"
msgstr "我们的应用程序包含一个处理网络套接字的单一类。在 `src/main/java` 目录下创建 `org.acme.websockets.ChatSocket` 类。将以下内容复制到创建的文件中。"

#. type: delimited block -
#: upstream/_guides/websockets.adoc:76 upstream/_guides/websockets.adoc:181
#, no-wrap
msgid "package org.acme.websockets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:79
#, no-wrap
msgid ""
"import java.util.Map;\n"
"import java.util.concurrent.ConcurrentHashMap;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:88
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.websocket.OnClose;\n"
"import javax.websocket.OnError;\n"
"import javax.websocket.OnMessage;\n"
"import javax.websocket.OnOpen;\n"
"import javax.websocket.server.PathParam;\n"
"import javax.websocket.server.ServerEndpoint;\n"
"import javax.websocket.Session;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:92
#, no-wrap
msgid ""
"@ServerEndpoint(\"/chat/{username}\")         // <1>\n"
"@ApplicationScoped\n"
"public class ChatSocket {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:94
#, no-wrap
msgid "    Map<String, Session> sessions = new ConcurrentHashMap<>(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:99
#, no-wrap
msgid ""
"    @OnOpen\n"
"    public void onOpen(Session session, @PathParam(\"username\") String username) {\n"
"        sessions.put(username, session);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:105
#, no-wrap
msgid ""
"    @OnClose\n"
"    public void onClose(Session session, @PathParam(\"username\") String username) {\n"
"        sessions.remove(username);\n"
"        broadcast(\"User \" + username + \" left\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:111
#, no-wrap
msgid ""
"    @OnError\n"
"    public void onError(Session session, @PathParam(\"username\") String username, Throwable throwable) {\n"
"        sessions.remove(username);\n"
"        broadcast(\"User \" + username + \" left on error: \" + throwable);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:120
#, no-wrap
msgid ""
"    @OnMessage\n"
"    public void onMessage(String message, @PathParam(\"username\") String username) {\n"
"        if (message.equalsIgnoreCase(\"_ready_\")) {\n"
"            broadcast(\"User \" + username + \" joined\");\n"
"        } else {\n"
"            broadcast(\">> \" + username + \": \" + message);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:130
#, no-wrap
msgid ""
"    private void broadcast(String message) {\n"
"        sessions.values().forEach(s -> {\n"
"            s.getAsyncRemote().sendObject(message, result ->  {\n"
"                if (result.getException() != null) {\n"
"                    System.out.println(\"Unable to send message: \" + result.getException());\n"
"                }\n"
"            });\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:132 upstream/_guides/websockets.adoc:235
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/websockets.adoc:134
#, fuzzy
msgid "Configures the web socket URL"
msgstr "配置网络套接字的URL"

#. type: Plain text
#: upstream/_guides/websockets.adoc:135
#, fuzzy
msgid "Stores the currently opened web sockets"
msgstr "存储当前打开的网络套接字"

#. type: Title ==
#: upstream/_guides/websockets.adoc:136
#, fuzzy, no-wrap
msgid "A slick web frontend"
msgstr "一个光滑的网络前台"

#. type: Plain text
#: upstream/_guides/websockets.adoc:141
#, fuzzy
msgid "All chat applications need a _nice_ UI, well, this one may not be that nice, but does the work.  Quarkus automatically serves static resources contained in the `META-INF/resources` directory.  Create the `src/main/resources/META-INF/resources` directory and copy this {quickstarts-blob-url}/websockets-quickstart/src/main/resources/META-INF/resources/index.html[index.html] file in it."
msgstr "所有的聊天应用程序都需要一个 _漂亮的_ 用户界面，好吧，这个可能没有那么漂亮，但能起到作用。Quarkus自动提供包含在 `META-INF/resources` 目录中的静态资源。创建 `src/main/resources/META-INF/resources` 目录并将这个{quickstarts-blob-url}/websockets-quickstart/src/main/resources/META-INF/resources/index.html[index.html]文件复制到其中。"

#. type: Title ==
#: upstream/_guides/websockets.adoc:142
#, fuzzy, no-wrap
msgid "Run the application"
msgstr "运行应用程序"

#. type: Plain text
#: upstream/_guides/websockets.adoc:145
#, fuzzy
msgid "Now, let's see our application in action. Run it with:"
msgstr "现在，让我们看看我们的应用程序的运行情况。用以下方式运行它。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:149
#, fuzzy
msgid "Then open your 2 browser windows to http://localhost:8080/:"
msgstr "然后打开你的2个浏览器窗口， http://localhost:8080/ "

#. type: Plain text
#: upstream/_guides/websockets.adoc:151
#, fuzzy
msgid "Enter a name in the top text area (use 2 different names)."
msgstr "在顶部文本区输入一个名字（使用2个不同的名字）。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:152
#, fuzzy
msgid "Click on connect"
msgstr "单击 \"连接\"。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:153
#, fuzzy
msgid "Send and receive messages"
msgstr "发送和接收信息"

#. type: Plain text
#: upstream/_guides/websockets.adoc:155
#, fuzzy
msgid "image:websocket-guide-screenshot.png[alt=Application]"
msgstr "image:websocket-guide-screenshot.png[alt=\"Application\"]"

#. type: Plain text
#: upstream/_guides/websockets.adoc:157
#, fuzzy
msgid "As usual, the application can be packaged using:"
msgstr "像往常一样，该应用程序可以用以下方式打包。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:161
#, fuzzy
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "并使用 `java -jar target/quarkus-app/quarkus-run.jar` 。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:163
#, fuzzy
msgid "You can also build the native executable using:"
msgstr "你也可以用以下方法构建本地可执行文件。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:167
#, fuzzy
msgid "You can also test your web socket applications using the approach detailed {quickstarts-blob-url}/websockets-quickstart/src/test/java/org/acme/websockets/ChatTest.java[here]."
msgstr "你也可以使用详细的{quickstarts-blob-url}/websockets-quickstart/src/test/java/org/acme/websockets/ChatTest.java[here]的方法来测试你的web socket应用程序。"

#. type: Title ==
#: upstream/_guides/websockets.adoc:168
#, fuzzy, no-wrap
msgid "WebSocket Clients"
msgstr "WebSocket客户端"

#. type: Plain text
#: upstream/_guides/websockets.adoc:171
#, fuzzy
msgid "Quarkus also contains a WebSocket client. You can call `ContainerProvider.getWebSocketContainer().connectToServer` to create a websocket connection. By default the `quarkus-websockets` artifact includes both client and server support however if you only want the client you can include `quarkus-websockets-client` instead."
msgstr "Quarkus还包含一个WebSocket客户端。你可以调用 `ContainerProvider.getWebSocketContainer().connectToServer` 来创建一个websocket连接。默认情况下， `quarkus-websockets` 工件包括客户端和服务器支持，但是如果你只想要客户端，你可以包括 `quarkus-websockets-client` 。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:175
#, fuzzy
msgid "When you connect to the server you can either pass in the Class of the annotated client endpoint you want to use, or an instance of `javax.websocket.Endpoint`. If you are using the annotated endpoint then you can use the exact same annotations as you can on the server, except it must be annotated with `@ClientEndpoint` instead of `@ServerEndpoint`."
msgstr "当你连接到服务器时，你可以传入你想使用的有注释的客户端端点的类，或者传入一个 `javax.websocket.Endpoint` 的实例。如果你使用有注释的端点，那么你可以使用与服务器上完全相同的注释，只是它必须用 `@ClientEndpoint` ，而不是 `@ServerEndpoint` 。"

#. type: Plain text
#: upstream/_guides/websockets.adoc:177
msgid "The example below shows the client being used to test the chat endpoint above."
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:185
#, no-wrap
msgid ""
"import java.net.URI;\n"
"import java.util.concurrent.LinkedBlockingDeque;\n"
"import java.util.concurrent.TimeUnit;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:191
#, no-wrap
msgid ""
"import javax.websocket.ClientEndpoint;\n"
"import javax.websocket.ContainerProvider;\n"
"import javax.websocket.OnMessage;\n"
"import javax.websocket.OnOpen;\n"
"import javax.websocket.Session;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:194
#, no-wrap
msgid ""
"import org.junit.jupiter.api.Assertions;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:197
#, no-wrap
msgid ""
"import io.quarkus.test.common.http.TestHTTPResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:200
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class ChatTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:202
#, no-wrap
msgid "    private static final LinkedBlockingDeque<String> MESSAGES = new LinkedBlockingDeque<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:205
#, no-wrap
msgid ""
"    @TestHTTPResource(\"/chat/stu\")\n"
"    URI uri;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:215
#, no-wrap
msgid ""
"    @Test\n"
"    public void testWebsocketChat() throws Exception {\n"
"        try (Session session = ContainerProvider.getWebSocketContainer().connectToServer(Client.class, uri)) {\n"
"            Assertions.assertEquals(\"CONNECT\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"            Assertions.assertEquals(\"User stu joined\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"            session.getAsyncRemote().sendText(\"hello world\");\n"
"            Assertions.assertEquals(\">> stu: hello world\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:218
#, no-wrap
msgid ""
"    @ClientEndpoint\n"
"    public static class Client {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:226
#, no-wrap
msgid ""
"        @OnOpen\n"
"        public void open(Session session) {\n"
"            MESSAGES.add(\"CONNECT\");\n"
"            // Send a message to indicate that we are ready,\n"
"            // as the message handler may not be registered immediately after this callback.\n"
"            session.getAsyncRemote().sendText(\"_ready_\");\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:231
#, no-wrap
msgid ""
"        @OnMessage\n"
"        void message(String msg) {\n"
"            MESSAGES.add(msg);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/websockets.adoc:233
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/websockets.adoc:238
#, no-wrap
msgid "More WebSocket Information"
msgstr ""

#. type: Plain text
#: upstream/_guides/websockets.adoc:241
msgid "The Quarkus WebSocket implementation is an implementation of link:https://jakarta.ee/specifications/websocket/[Jakarta Websockets]."
msgstr ""
