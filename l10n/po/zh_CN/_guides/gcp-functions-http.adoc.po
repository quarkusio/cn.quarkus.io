# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/gcp-functions-http.adoc:6
#, fuzzy, no-wrap
msgid "Google Cloud Functions (Serverless) with RESTEasy Reactive, Undertow, or Reactive Routes"
msgstr "使用RESTEasy Reactive、Undertow或Reactive Routes的谷歌云函数（无服务器）。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:13
#, fuzzy
msgid "The `quarkus-google-cloud-functions-http` extension allows you to write microservices with RESTEasy Reactive (JAX-RS), Undertow (Servlet), Reactive Routes, or xref:funqy-http.adoc[Funqy HTTP], and make these microservices deployable to the Google Cloud Functions runtime."
msgstr " `quarkus-google-cloud-functions-http` 扩展允许你用RESTEasy Reactive（JAX-RS）、Undertow（Servlet）、Reactive Routes或 link:funqy-http.html[Funqy HTTP] 编写微服务，并使这些微服务可部署到Google Cloud Functions运行时。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:15
#, fuzzy
msgid "One Google Cloud Functions deployment can represent any number of JAX-RS, Servlet, Reactive Routes, or xref:funqy-http.adoc[Funqy HTTP] endpoints."
msgstr "一个Google Cloud Functions部署可以代表任何数量的JAX-RS、Servlet、Reactive Routes或 link:funqy-http.html[Funqy HTTP] 端点。"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:18
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:23
#, fuzzy
msgid "https://cloud.google.com/[A Google Cloud Account]. Free accounts work."
msgstr "link:https://cloud.google.com/[一个谷歌云账户] 。免费账户可以使用。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:24
#, fuzzy
msgid "https://cloud.google.com/sdk[Cloud SDK CLI Installed]"
msgstr "link:https://cloud.google.com/sdk[安装了云端SDK CLI]"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:25
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:30
#, fuzzy
msgid "This guide walks you through generating a sample project followed by creating three HTTP endpoints written with JAX-RS APIs, Servlet APIs, Reactive Routes, or xref:funqy-http.adoc[Funqy HTTP] APIs. Once built, you will be able to deploy the project to Google Cloud."
msgstr "本指南将引导你生成一个示例项目，然后创建三个用JAX-RS APIs、Servlet APIs、Reactive Routes或 link:funqy-http.html[Funqy HTTP] APIs编写的HTTP端点。一旦建成，你就可以将项目部署到谷歌云。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:32
#, fuzzy
msgid "If you don't want to follow all these steps, you can go right to the completed example."
msgstr "如果你不想遵循所有这些步骤，你可以直接进入完成的例子。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:34
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:36
#, fuzzy
msgid "The solution is located in the `google-cloud-functions-http-quickstart` {quickstarts-tree-url}/google-cloud-functions-http-quickstart[directory]."
msgstr "该解决方案位于 `google-cloud-functions-http-quickstart` {quickstarts-tree-url}/google-cloud-functions-http-quickstart[目录]中。"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:37
#, fuzzy, no-wrap
msgid "Creating the Maven Deployment Project"
msgstr "创建Maven部署项目"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:41
#, fuzzy
msgid "Create an application with the `quarkus-google-cloud-functions-http` extension.  You can use the following Maven command to create it:"
msgstr "创建一个带有 `quarkus-google-cloud-functions-http` 扩展的应用程序。你可以使用下面的Maven命令来创建它。"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:46
#, fuzzy, no-wrap
msgid "Login to Google Cloud"
msgstr "登录到谷歌云"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:49
#, fuzzy
msgid "Login to Google Cloud is necessary for deploying the application and it can be done as follows:"
msgstr "登录谷歌云对于部署应用程序是必要的，可以按以下方式进行。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:53
#, no-wrap
msgid "gcloud auth login\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:55
#, fuzzy, no-wrap
msgid "Creating the endpoints"
msgstr "创建端点"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:59
#, fuzzy
msgid "For this example project, we will create four endpoints, one for RESTEasy (JAX-RS), one for Undertow (Servlet), one for Reactive routes and one for xref:funqy-http.adoc[Funqy HTTP]."
msgstr "对于这个示例项目，我们将创建四个端点，一个用于RESTEasy（JAX-RS），一个用于Undertow（Servlet），一个用于Reactive路由，一个用于 link:funqy-http.html[Funqy HTTP] 。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:64
#, fuzzy
msgid "These various endpoints are for demonstration purposes.  For real life applications, you should choose one of this technology and stick to it."
msgstr "这些不同的端点是为了演示目的。对于现实生活中的应用，你应该选择其中一种技术并坚持使用。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:67
#, fuzzy
msgid "If you don't need endpoints of each type, you can remove the corresponding extensions from your `pom.xml`."
msgstr "如果你不需要每种类型的端点，你可以从你的 `pom.xml` ，删除相应的扩展。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:69
#, fuzzy
msgid "Quarkus supports Cloud Functions gen 1 and gen 2. For an overview of Cloud Functions gen 2 see https://cloud.google.com/functions/docs/2nd-gen/overview[this page] on the Google Cloud Functions documentation. To use gen 2 you must use `gcloud beta` command and add the `--gen2` parameter."
msgstr "Quarkus支持Cloud Functions gen 1和gen 2。关于Cloud Functions gen 2的概述，请参见Google Cloud Functions文档中的 link:https://cloud.google.com/functions/docs/2nd-gen/overview[这一页] 。要使用gen 2，你必须使用 `gcloud beta` 命令并添加 `--gen2` 参数。"

#. type: Title ===
#: upstream/_guides/gcp-functions-http.adoc:70
#, fuzzy, no-wrap
msgid "The JAX-RS endpoint"
msgstr "JAX-RS端点"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:78
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:81
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class GreetingResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:88
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String hello() {\n"
"        return \"Hello from RESTEasy Reactive\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/gcp-functions-http.adoc:90
#, fuzzy, no-wrap
msgid "The Servlet endpoint"
msgstr "Servlet的端点"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:95
#, no-wrap
msgid "import java.io.IOException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:101
#, no-wrap
msgid ""
"import javax.servlet.ServletException;\n"
"import javax.servlet.annotation.WebServlet;\n"
"import javax.servlet.http.HttpServlet;\n"
"import javax.servlet.http.HttpServletRequest;\n"
"import javax.servlet.http.HttpServletResponse;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:110
#, no-wrap
msgid ""
"@WebServlet(name = \"ServletGreeting\", urlPatterns = \"/servlet/hello\")\n"
"public class GreetingServlet extends HttpServlet {\n"
"    @Override\n"
"    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n"
"        resp.setStatus(200);\n"
"        resp.addHeader(\"Content-Type\", \"text/plain\");\n"
"        resp.getWriter().write(\"hello\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:119
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {\n"
"        String name = req.getReader().readLine();\n"
"        resp.setStatus(200);\n"
"        resp.addHeader(\"Content-Type\", \"text/plain\");\n"
"        resp.getWriter().write(\"hello \" + name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/gcp-functions-http.adoc:121
#, fuzzy, no-wrap
msgid "The Reactive Routes endpoint"
msgstr "反应式路由的端点"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:126
#, no-wrap
msgid "import static io.quarkus.vertx.web.Route.HttpMethod.GET;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:129
#, no-wrap
msgid ""
"import io.quarkus.vertx.web.Route;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:137
#, no-wrap
msgid ""
"public class GreetingRoutes {\n"
"    @Route(path = \"/vertx/hello\", methods = GET)\n"
"    void hello(RoutingContext context) {\n"
"        context.response().headers().set(\"Content-Type\", \"text/plain\");\n"
"        context.response().setStatusCode(200).end(\"hello\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/gcp-functions-http.adoc:139
#, fuzzy, no-wrap
msgid "The Funqy HTTP endpoint"
msgstr "Funqy HTTP端点"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:144
#, no-wrap
msgid "import io.quarkus.funqy.Funq;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:151
#, no-wrap
msgid ""
"public class GreetingFunqy {\n"
"    @Funq\n"
"    public String funqy() {\n"
"        return \"Make it funqy\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:153
#, fuzzy, no-wrap
msgid "Build and Deploy to Google Cloud"
msgstr "构建和部署到谷歌云"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:156
#, fuzzy
msgid "Quarkus forces a packaging of type `uber-jar` for your function as Google Cloud Function deployment requires a single JAR."
msgstr "Quarkus强制为你的函数打包类型为 `uber-jar` ，因为Google Cloud Function的部署需要一个JAR。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:159
#, fuzzy
msgid "Package your application using the standard `mvn clean package` command.  The result of the previous command is a single JAR file inside the `target/deployment` directory that contains the classes and the dependencies of the project."
msgstr "使用标准的 `mvn clean package` 命令打包你的应用程序。前面命令的结果是在 `target/deployment` 目录下的一个JAR文件，其中包含了项目的类和依赖关系。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:161
#, fuzzy
msgid "Then you will be able to use `gcloud` to deploy your function to Google Cloud."
msgstr "然后你就可以使用 `gcloud` ，将你的功能部署到谷歌云。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:167
#, no-wrap
msgid ""
"gcloud functions deploy quarkus-example-http \\\n"
"  --entry-point=io.quarkus.gcp.functions.http.QuarkusHttpFunction \\\n"
"  --runtime=java11 --trigger-http --source=target/deployment\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:172
#, fuzzy
msgid "The entry point must always be set to `io.quarkus.gcp.functions.http.QuarkusHttpFunction` as this is the class that integrates Cloud Functions with Quarkus."
msgstr "入口点必须始终设置为 `io.quarkus.gcp.functions.http.QuarkusHttpFunction` ，因为这是将云功能与Quarkus整合的类。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:177
#, fuzzy
msgid "You can also use the new Java 17 runtime by using `--runtime=java17` in the gcloud command line."
msgstr "你也可以通过在gcloud命令行中使用 `--runtime=java17` ，使用新的Java 17运行时间。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:182
#, fuzzy
msgid "The first time you launch this command, you can have the following error message:"
msgstr "第一次启动这个命令时，你可能会有以下错误信息。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:185
#, no-wrap
msgid "ERROR: (gcloud.functions.deploy) OperationError: code=7, message=Build Failed: Cloud Build has not been used in project <project_name> before or it is disabled. Enable it by visiting https://console.developers.google.com/apis/api/cloudbuild.googleapis.com/overview?project=<my-project> then retry.\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:187
#, fuzzy
msgid "This means that Cloud Build is not activated yet. To overcome this error, open the URL shown in the error, follow the instructions and then wait a few minutes before retrying the command."
msgstr "这意味着Cloud Build还没有被激活。要克服这个错误，请打开错误中显示的URL，按照指示操作，然后等待几分钟再重试命令。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:191
#, fuzzy
msgid "This command will give you as output a `httpsTrigger.url` that points to your function."
msgstr "这条命令将给你输出一个 `httpsTrigger.url` ，指向你的函数。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:193
#, fuzzy
msgid "You can then call your endpoints via:"
msgstr "然后你可以通过以下方式调用你的端点。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:195
#, fuzzy
msgid "For JAX-RS: {httpsTrigger.url}/hello"
msgstr "对于JAX-RS：{httpsTrigger.url}/hello"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:196
#, fuzzy
msgid "For servlet: {httpsTrigger.url}/servlet/hello"
msgstr "对于servlet。{httpsTrigger.url}/servlet/hello"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:197
#, fuzzy
msgid "For Reactive Routes: {httpsTrigger.url}/vertx/hello"
msgstr "对于反应式路由。{httpsTrigger.url}/vertx/hello"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:198
#, fuzzy
msgid "For Funqy: {httpsTrigger.url}/funqy"
msgstr "对于Funqy。{httpsTrigger.url}/funqy"

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:199
#, fuzzy, no-wrap
msgid "Testing locally"
msgstr "本地测试"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:202
#, fuzzy
msgid "The easiest way to locally test your function is using the Cloud Function invoker JAR."
msgstr "本地测试你的函数最简单的方法是使用云函数调用器JAR。"

#. type: delimited block =
#: upstream/_guides/gcp-functions-http.adoc:204
#, fuzzy
msgid "You can download it via Maven using the following command:"
msgstr "你可以使用以下命令通过Maven下载它。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:210
#, no-wrap
msgid ""
"mvn dependency:copy \\\n"
"  -Dartifact='com.google.cloud.functions.invoker:java-function-invoker:1.1.0' \\\n"
"  -DoutputDirectory=.\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:213
#, fuzzy
msgid "Before using the invoker, you first need to build your function via `mvn package`."
msgstr "在使用调用者之前，你首先需要通过 `mvn package` 构建你的函数。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:215
#, fuzzy
msgid "Then you can use it to launch your function locally."
msgstr "然后你可以用它来在本地启动你的功能。"

#. type: delimited block -
#: upstream/_guides/gcp-functions-http.adoc:221
#, no-wrap
msgid ""
"java -jar java-function-invoker-1.1.0.jar \\\n"
"  --classpath target/deployment/google-cloud-functions-http-1.0.0-SNAPSHOT-runner.jar \\\n"
"  --target io.quarkus.gcp.functions.http.QuarkusHttpFunction\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:224
#, fuzzy
msgid "The `--classpath` parameter needs to be set to the previously packaged JAR that contains your function class and all Quarkus related classes."
msgstr " `--classpath` 参数需要被设置为先前打包的JAR，其中包含你的函数类和所有Quarkus相关的类。"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:226
#, fuzzy
msgid "Your endpoints will be available on http://localhost:8080."
msgstr "你的端点将可以在 http://localhost:8080 "

#. type: Title ==
#: upstream/_guides/gcp-functions-http.adoc:227
#, fuzzy, no-wrap
msgid "What's next?"
msgstr "下一步是什么？"

#. type: Plain text
#: upstream/_guides/gcp-functions-http.adoc:230
msgid "You can use our xref:funqy-gcp-functions.adoc[Google Cloud Functions Funqy binding] to use Funqy, a provider agnostic function as a service framework, that allow to deploy HTTP function or Background function to Google Cloud."
msgstr ""
