# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/container-image.adoc:6
#, fuzzy, no-wrap
msgid "Container Images"
msgstr "容器图像"

#. type: Plain text
#: upstream/_guides/container-image.adoc:11
#, fuzzy
msgid "Quarkus provides extensions for building (and pushing) container images. Currently it supports:"
msgstr "Quarkus提供了用于构建（和推送）容器镜像的扩展。目前它支持。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:13
#, fuzzy
msgid "<<#jib,Jib>>"
msgstr "link:#jib[Jib]"

#. type: Plain text
#: upstream/_guides/container-image.adoc:14
#, fuzzy
msgid "<<#docker,Docker>>"
msgstr "link:#docker[码头]"

#. type: Plain text
#: upstream/_guides/container-image.adoc:15
#, fuzzy
msgid "<<#s2i,S2I>>"
msgstr "link:#s2i[S2I]"

#. type: Plain text
#: upstream/_guides/container-image.adoc:16
#, fuzzy
msgid "<<#buildpack,Buildpack>>"
msgstr "link:#buildpack[建站包]"

#. type: Title ==
#: upstream/_guides/container-image.adoc:17
#, fuzzy, no-wrap
msgid "Container Image extensions"
msgstr "容器图像扩展"

#. type: Title ===
#: upstream/_guides/container-image.adoc:20
#, fuzzy, no-wrap
msgid "Jib"
msgstr "Jib"

#. type: Plain text
#: upstream/_guides/container-image.adoc:26
#, fuzzy
msgid "The extension `quarkus-container-image-jib` is powered by https://github.com/GoogleContainerTools/jib[Jib] for performing container image builds.  The major benefit of using Jib with Quarkus is that all the dependencies (everything found under `target/lib`) are cached in a different layer than the actual application making rebuilds really fast and small (when it comes to pushing).  Another important benefit of using this extension is that it provides the ability to create a container image without having to have any dedicated client side tooling (like Docker) or running daemon processes (like the Docker daemon)  when all that is needed is the ability to push to a container image registry."
msgstr "扩展 `quarkus-container-image-jib` 是由 link:https://github.com/GoogleContainerTools/jib[Jib] 提供的，用于执行容器镜像构建。在Quarkus中使用Jib的主要好处是，所有的依赖（在 `target/lib` 下找到的所有东西）都被缓存在与实际应用不同的层中，使得重建非常快速和小（当它涉及到推送时）。使用这个扩展的另一个重要好处是，它提供了创建容器镜像的能力，而不需要任何专门的客户端工具（如Docker）或运行守护进程（如Docker守护进程），而所需要的只是推送到容器镜像注册处的能力。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:28
#, fuzzy
msgid "To use this feature, add the following extension to your project:"
msgstr "要使用这个功能，请在你的项目中添加以下扩展。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:35
#, fuzzy
msgid "In situations where all that is needed to build a container image and no push to a registry is necessary (essentially by having set `quarkus.container-image.build=true` and left `quarkus.container-image.push` unset - it defaults to `false`), then this extension creates a container image and registers it with the Docker daemon. This means that although Docker isn't used to build the image, it is nevertheless necessary. Also note that using this mode, the built container image *will* show up when executing `docker images`."
msgstr "在只需要建立一个容器镜像，而不需要向注册表推送的情况下（基本上是通过设置 `quarkus.container-image.build=true` ，而不设置 `quarkus.container-image.push` --它默认为 `false` ），那么这个扩展会创建一个容器镜像，并向Docker守护进程注册它。这意味着，尽管Docker并不是用来构建镜像的，但它仍然是必要的。还要注意的是，使用这种模式，在执行 `docker images` 时，建立的容器镜像 *会* 显示出来。"

#. type: Title ====
#: upstream/_guides/container-image.adoc:36
#, fuzzy, no-wrap
msgid "Including extra files"
msgstr "包括额外的文件"

#. type: Plain text
#: upstream/_guides/container-image.adoc:42
#, fuzzy
msgid "There are cases when additional files (other than ones produced by the Quarkus build) need to be added to a container image.  To support these cases, Quarkus copies any file under `src/main/jib` into the built container image (which is essentially the same idea that the Jib Maven and Gradle plugins support).  For example, the presence of `src/main/jib/foo/bar` would result in `/foo/bar` being added into the container filesystem."
msgstr "在某些情况下，需要将额外的文件（除Quarkus构建产生的文件外）添加到容器镜像中。为了支持这些情况，Quarkus将 `src/main/jib` 下的任何文件复制到构建的容器镜像中（这与Jib Maven和Gradle插件支持的理念基本相同）。例如， `src/main/jib/foo/bar` 的存在会导致 `/foo/bar` 被添加到容器文件系统中。"

#. type: Title ====
#: upstream/_guides/container-image.adoc:43
#, fuzzy, no-wrap
msgid "JVM Debugging"
msgstr "JVM调试"

#. type: Plain text
#: upstream/_guides/container-image.adoc:46
#, fuzzy
msgid "There are cases where the built container image may need to have Java debugging conditionally enabled at runtime."
msgstr "有些情况下，构建的容器镜像可能需要在运行时有条件地启用Java调试。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:49
#, fuzzy
msgid "When the base image has not been changed (and therefore `ubi8/openjdk-11-runtime` or `ubi8/openjdk-17-runtime` is used), then the `quarkus.jib.jvm-additional-arguments` configuration property can be used in order to make the JVM listen on the debug port at startup."
msgstr "当基本镜像没有被改变（因此使用 `ubi8/openjdk-11-runtime` 或 `ubi8/openjdk-17-runtime` ），那么可以使用 `quarkus.jib.jvm-additional-arguments` 配置属性，以便使JVM在启动时监听调试端口。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:51
#, fuzzy
msgid "The exact configuration is:"
msgstr "确切的配置是。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:55
#, no-wrap
msgid "quarkus.jib.jvm-additional-arguments=-agentlib:jdwp=transport=dt_socket\\\\,server=y\\\\,suspend=n\\\\,address=*:5005\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:58
#, fuzzy
msgid "Other base images might provide launch scripts that enable debugging when an environment variable is set, in which case you would set than environment variable when launching the container."
msgstr "其他的基础镜像可能会提供启动脚本，当环境变量被设置后就可以进行调试，在这种情况下，你会在启动容器时设置比环境变量。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:60
#, fuzzy
msgid "Finally, the `quarkus.jib.jvm-entrypoint` configuration property can be used to completely override the container entry point and can thus be used to either hard code the JVM debug configuration or point to a script that handles the details."
msgstr "最后， `quarkus.jib.jvm-entrypoint` 配置属性可用于完全覆盖容器入口点，因此可用于硬编码JVM调试配置或指向一个处理细节的脚本。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:62
#, fuzzy, no-wrap
msgid "Docker"
msgstr "码头"

#. type: Plain text
#: upstream/_guides/container-image.adoc:65
#, fuzzy
msgid "The extension `quarkus-container-image-docker` is using the Docker binary and the generated Dockerfiles under `src/main/docker` in order to perform Docker builds."
msgstr "扩展 `quarkus-container-image-docker` ，在 `src/main/docker` ，使用Docker二进制文件和生成的Dockerfiles，以便进行Docker构建。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:67
#: upstream/_guides/container-image.adoc:80
#: upstream/_guides/container-image.adoc:110
#, fuzzy
msgid "To use this feature, add the following extension to your project."
msgstr "要使用这个功能，请在你的项目中添加以下扩展。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:72
#, fuzzy, no-wrap
msgid "S2I"
msgstr "S2I"

#. type: Plain text
#: upstream/_guides/container-image.adoc:76
#, fuzzy
msgid "The extension `quarkus-container-image-s2i` is using S2I binary builds in order to perform container builds inside the OpenShift cluster.  The idea behind the binary build is that you just upload the artifact and its dependencies to the cluster and during the build they will be merged to a builder image (defaults to `fabric8/s2i-java`)."
msgstr "扩展 `quarkus-container-image-s2i` ，使用S2I二进制构建，以便在OpenShift集群内执行容器构建。二进制构建背后的想法是，你只需将工件及其依赖项上传到集群中，在构建过程中，它们将被合并到一个构建器镜像（默认为 `fabric8/s2i-java` ）。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:78
#, fuzzy
msgid "The benefit of this approach, is that it can be combined with OpenShift's `DeploymentConfig` that makes it easy to roll out changes to the cluster."
msgstr "这种方法的好处是，它可以与OpenShift的 `DeploymentConfig` ，这使得它很容易向集群推出变化。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:86
#, fuzzy
msgid "S2I builds require creating a `BuildConfig` and two `ImageStream` resources, one for the builder image and one for the output image.  The creation of such objects is being taken care of by the Quarkus Kubernetes extension."
msgstr "S2I构建需要创建一个 `BuildConfig` 和两个 `ImageStream` 资源，一个用于构建者镜像，一个用于输出镜像。这些对象的创建由Quarkus Kubernetes扩展负责。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:89
#, fuzzy, no-wrap
msgid "Buildpack"
msgstr "建站包"

#. type: Plain text
#: upstream/_guides/container-image.adoc:94
#, fuzzy
msgid "The extension `quarkus-container-image-buildpack` is using buildpacks in order to perform container image builds.  Under the hood buildpacks will use a Docker daemon for the actual build.  While buildpacks support alternatives to Docker, this extension will only work with Docker."
msgstr "扩展 `quarkus-container-image-buildpack` ，使用buildpacks来执行容器镜像构建。在引擎盖下，buildpacks将使用Docker守护程序来进行实际构建。虽然buildpacks支持Docker的替代方案，但这个扩展只与Docker一起工作。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:96
#, fuzzy
msgid "Additionally, the user will have to configure which build image to use (no default image is provided). For example:"
msgstr "此外，用户将不得不配置使用哪种构建图像（没有提供默认图像）。比如说。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:100
#, no-wrap
msgid "quarkus.buildpack.jvm-builder-image=<jvm builder image>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:103
#, fuzzy
msgid "or for native:"
msgstr "或为本地人。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:107
#, no-wrap
msgid "quarkus.buildpack.native-builder-image=<native builder image>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:115
#, fuzzy
msgid "When using the buildpack container image extension it is strongly advised to avoid adding `quarkus.container-image.build=true` in your properties configuration as it might trigger nesting builds within builds. It's preferable to pass it as an option to the build command instead."
msgstr "当使用 buildpack 容器镜像扩展时，强烈建议避免在你的属性配置中添加 `quarkus.container-image.build=true` ，因为它可能会触发构建中的嵌套构建。最好是把它作为一个选项传递给构建命令。"

#. type: Title ==
#: upstream/_guides/container-image.adoc:116
#, fuzzy, no-wrap
msgid "Building"
msgstr "建筑物"

#. type: Plain text
#: upstream/_guides/container-image.adoc:119
#, fuzzy
msgid "To build a container image for your project, `quarkus.container-image.build=true` needs to be set using any of the ways that Quarkus supports."
msgstr "为了给你的项目建立一个容器镜像， `quarkus.container-image.build=true` ，需要使用Quarkus支持的任何一种方式进行设置。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:125
#, fuzzy
msgid "If you ever want to build a native container image and already have an existing native image you can set `-Dquarkus.native.reuse-existing=true` and the native image build will not be re-run."
msgstr "如果你想构建一个本地容器镜像，并且已经有一个现有的本地镜像，你可以设置 `-Dquarkus.native.reuse-existing=true` ，本地镜像的构建将不会被重新运行。"

#. type: Title ==
#: upstream/_guides/container-image.adoc:126
#, fuzzy, no-wrap
msgid "Using @QuarkusIntegrationTest"
msgstr "使用@QuarkusIntegrationTest"

#. type: Plain text
#: upstream/_guides/container-image.adoc:129
#, fuzzy
msgid "To run tests on the resulting image, `quarkus.container-image.build=true` needs to be set using any of the ways that Quarkus supports."
msgstr "为了在生成的图像上运行测试， `quarkus.container-image.build=true` ，需要使用Quarkus支持的任何一种方式进行设置。"

#. type: Block title
#: upstream/_guides/container-image.adoc:131
#, fuzzy, no-wrap
msgid "Maven"
msgstr "雯雯"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:134
#, no-wrap
msgid "./mvnw verify -Dquarkus.container-image.build=true\n"
msgstr ""

#. type: Block title
#: upstream/_guides/container-image.adoc:136
#, fuzzy, no-wrap
msgid "Gradle"
msgstr "渐进式"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:139
#, no-wrap
msgid "./gradlew quarkusIntTest -Dquarkus.container-image.build=true\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/container-image.adoc:142
#, fuzzy, no-wrap
msgid "Pushing"
msgstr "推进"

#. type: Plain text
#: upstream/_guides/container-image.adoc:145
#, fuzzy
msgid "To push a container image for your project, `quarkus.container-image.push=true` needs to be set using any of the ways that Quarkus supports."
msgstr "为了给你的项目推送一个容器镜像， `quarkus.container-image.push=true` ，需要使用Quarkus支持的任何一种方式进行设置。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:151
#, fuzzy
msgid "If no registry is set (using `quarkus.container-image.registry`) then `docker.io` will be used as the default."
msgstr "如果没有设置注册表（使用 `quarkus.container-image.registry` ），那么 `docker.io` 将被作为默认值使用。"

#. type: Title ==
#: upstream/_guides/container-image.adoc:152
#, fuzzy, no-wrap
msgid "Selecting among multiple extensions"
msgstr "在多个分机中进行选择"

#. type: Plain text
#: upstream/_guides/container-image.adoc:155
#, fuzzy
msgid "It does not make sense to use multiple extension as part of the same build. When multiple container image extensions are present, an error will be raised to inform the user. The user can either remove the unneeded extensions or select one using `application.properties`."
msgstr "使用多个扩展作为同一构建的一部分是没有意义的。当出现多个容器镜像扩展时，会出现一个错误来通知用户。用户可以删除不需要的扩展或使用 `application.properties` 。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:157
#, fuzzy
msgid "For example, if both `container-image-docker` and `container-image-s2i` are present and the user needs to use `container-image-docker`:"
msgstr "例如，如果 `container-image-docker` 和 `container-image-s2i` 都存在，而用户需要使用 `container-image-docker` 。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:161
#, no-wrap
msgid "quarkus.container-image.builder=docker\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/container-image.adoc:163
#, fuzzy, no-wrap
msgid "Customizing"
msgstr "定制"

#. type: Plain text
#: upstream/_guides/container-image.adoc:166
#, fuzzy
msgid "The following properties can be used to customize the container image build process."
msgstr "以下属性可用于定制容器镜像构建过程。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:167
#, fuzzy, no-wrap
msgid "Container Image Options"
msgstr "容器图像选项"

#. type: Title ====
#: upstream/_guides/container-image.adoc:171
#, fuzzy, no-wrap
msgid "Using CI Environments"
msgstr "使用CI环境"

#. type: Plain text
#: upstream/_guides/container-image.adoc:175
#, fuzzy
msgid "Various CI environments provide a ready to use container-image registry which can be combined with the container-image Quarkus extensions in order to effortlessly create and push a Quarkus application to said registry."
msgstr "各种CI环境提供了一个现成的容器图像注册表，它可以与容器图像Quarkus扩展相结合，以便毫不费力地创建和推送一个Quarkus应用程序到所述注册表。"

#. type: Plain text
#: upstream/_guides/container-image.adoc:179
#, fuzzy
msgid "For example, https://gitlab.com/[GitLab] provides such a registry and in the provided CI environment, makes available the `CI_REGISTRY_IMAGE` environment variable (see GitLab's https://docs.gitlab.com/ee/ci/variables/[documentation]) for more information), which can be used in Quarkus like so:"
msgstr "例如， link:https://gitlab.com/[GitLab] 提供了这样一个注册表，在所提供的CI环境中，提供了 `CI_REGISTRY_IMAGE` 环境变量（更多信息见GitLab的 link:https://docs.gitlab.com/ee/ci/variables/[文档] ）），可以像这样在Quarkus中使用它。"

#. type: delimited block -
#: upstream/_guides/container-image.adoc:183
#, no-wrap
msgid "quarkus.container-image.image=${CI_REGISTRY_IMAGE}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:186
#, fuzzy
msgid "See xref:config.adoc#combine-property-env-var[this] for more information on how to combine properties with environment variables."
msgstr "关于如何将属性与环境变量结合起来的更多信息， link:config.html#combine-property-env-var[见此] 。"

#. type: Title ===
#: upstream/_guides/container-image.adoc:187
#, no-wrap
msgid "Jib Options"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:190
msgid "In addition to the generic container image options, the `container-image-jib` also provides the following options:"
msgstr ""

#. type: Title ===
#: upstream/_guides/container-image.adoc:193
#, no-wrap
msgid "Docker Options"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:196
msgid "In addition to the generic container image options, the `container-image-docker` also provides the following options:"
msgstr ""

#. type: Title ===
#: upstream/_guides/container-image.adoc:199
#, no-wrap
msgid "S2I  Options"
msgstr ""

#. type: Plain text
#: upstream/_guides/container-image.adoc:202
msgid "In addition to the generic container image options, the `container-image-s2i` also provides the following options:"
msgstr ""
