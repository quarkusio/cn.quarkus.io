# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Redis Extension Reference Guide"
msgstr "Redis参考指南"

#: _guides/redis-reference.adoc
msgid ""
"Redis is an in-memory data store used as a database, cache, streaming engine, and message broker.\n"
"The Quarkus Redis extension allows integrating Quarkus applications with Redis."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"To use this extension, the user must be familiar with Redis, especially understanding the mechanism of commands and how they are organized.\n"
"Typically, we recommend:"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The https://try.redis.io/[interactive tutorial] introducing Redis."
msgstr "介绍Redis的 link:https://try.redis.io/[互动教程] 。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The https://redis.io/commands/[command references] explains Redis commands and contains links to reference documentation."
msgstr "link:https://redis.io/commands/[命令参考] 解释了Redis命令，并包含参考文档的链接。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "This extension provides imperative and reactive APIs and low-level and high-level (type-safe) clients."
msgstr "这个扩展提供了命令式和反应式API以及低级和高级（类型安全）客户端。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use the Redis Client"
msgstr "Vert.x Redis客户端"

#: _guides/redis-reference.adoc
msgid ""
"If you want to use this extension, you need to add the `io.quarkus:quarkus-redis` extension first.\n"
"In your `pom.xml` file, add:"
msgstr ""

#. type: Block title
#: _guides/redis-reference.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/redis-reference.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "With this dependency, you can then inject Redis clients or _datasource_ (high-level, type-safe API), such as:"
msgstr "有了这个依赖关系，你就可以注入Redis客户端或 _数据源_ （高级别的、类型安全的API），例如。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "More details about the various APIs offered by the quarkus-redis extension are available in the xref:apis[One extension, multiple APIs] section."
msgstr "关于quarkus-redis扩展提供的各种API的更多细节可在 link:#apis[[apis]] 部分找到。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To use Redis as a cache backend, refer to the xref:cache-redis-reference.adoc[Redis Cache Backend reference]."
msgstr ""

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "One extension, multiple APIs"
msgstr "一个扩展，多个API"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "This extension provides multiple ways to interact with Redis:"
msgstr "这个扩展提供了与Redis互动的多种方式。"

#: _guides/redis-reference.adoc
msgid ""
"the _low-level_ Vert.x client: it's a fully reactive, non-blocking, and asynchronous client.\n"
"More details on https://vertx.io/docs/vertx-redis-client/java/[the Vert.x Redis Client documentation].\n"
"Two APIs are exposed: `io.vertx.redis.client.Redis`, and `io.vertx.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"the _low-level_ Mutiny variant of the Vert.x API: Unlike the previous one, it exposes a Mutiny API and provides both reactive and imperative methods (suffixed with `andAwait()`).\n"
"Two APIs are exposed: `io.vertx.mutiny.redis.client.Redis` and `io.vertx.mutiny.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"a _high-level_ reactive data source: A type-safe, high-level API to interact with Redis.\n"
"This API is fully reactive and asynchronous.\n"
"It exposes a Mutiny API.\n"
"It exposes the `io.quarkus.redis.datasource.ReactiveRedisDataSource` interface."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"a _high-level_ imperative data source: A type-safe, high-level API to interact with Redis.\n"
"It is the imperative variant of the reactive data source.\n"
"It exposes the `io.quarkus.redis.datasource.RedisDataSource` interface."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "To help you select the suitable API for you, here are some recommendations:"
msgstr "为了帮助你选择适合你的API，这里有一些建议。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "If you are building an imperative (_classic_) Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.RedisDataSource`."
msgstr "如果你正在构建一个与Redis集成的命令式 _（经典_ ）Quarkus应用程序：使用 `io.quarkus.redis.datasource.RedisDataSource` 。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "If you are building a reactive Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.ReactiveRedisDataSource`."
msgstr "如果你正在建立一个与Redis集成的反应式Quarkus应用程序：使用 `io.quarkus.redis.datasource.RedisReactiveDataSource` 。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "If you need fine-grain control, or execute commands in a generic way: use `io.vertx.mutiny.redis.client.RedisAPI`"
msgstr "如果你需要细粒度的控制，或以通用方式执行命令：使用 `io.vertx.mutiny.redis.client.RedisAPI` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "If you have existing Vert.x code, use `io.vertx.redis.client.RedisAPI`"
msgstr "如果你有现有的Vert.x代码，使用 `io.vertx.redis.client.RedisAPI` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "If you need to emit custom commands, you can either use the data sources (reactive or imperative) or the `io.vertx.mutiny.redis.client.Redis`."
msgstr "如果你需要发射自定义命令，你可以使用数据源（反应式或命令式）或 `io.vertx.mutiny.redis.client.Redis` 。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Inject the default and named clients"
msgstr "默认和命名的客户"

#: _guides/redis-reference.adoc
msgid ""
"This extension lets you configure a _default_ Redis client/data sources or _named_ ones.\n"
"The latter is essential when you need to connect to multiple Redis instances."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"The default connection is configured using the `quarkus.redis.*` properties.\n"
"For example, to configure the default Redis client, use:"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "When using the default connection, you can inject the various APIS using a _plain_ `@Inject`:"
msgstr "当使用默认连接时，你可以使用一个 _普通的_ `@Inject` ，注入各种APIS。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "In general, you inject a single one; the previous snippet is just an example."
msgstr "一般来说，你注入一个；前面的片段只是一个例子。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "_Named_ clients are configured using the `quarkus.redis.<name>.*` properties:"
msgstr " _命名的_ 客户端是使用 `quarkus.redis.<name>.*` 属性配置的。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "To access the APIs, you need to use the `@RedisClientName` qualifier:"
msgstr "要访问API，你需要使用 `@RedisClientName` 修饰语。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "You can omit the `@Inject` annotation when using `@RedisClientName`."
msgstr "当使用 `@RedisClientName` ，你可以省略 `@Inject` 注释。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Connect to the Redis server"
msgstr "连接到Redis"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The Redis extension can operate in 4 distinct modes:"
msgstr "Redis扩展可以在4种不同的模式下运行。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Simple client (probably what most users need)."
msgstr "简单的客户端（可能是大多数用户需要的）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Sentinel (when working with Redis in High Availability mode)."
msgstr "Sentinel（当在高可用性模式下与Redis一起工作时）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Cluster (when working with Redis in Clustered mode)."
msgstr "群集（当在群集模式下与Redis一起工作时）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Replication (single shard, one node write, multiple read)."
msgstr "复制（单分片，一个节点写，多个读）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The connection url is configured with the `quarkus.redis.hosts` (or `quarkus.redis.<name>.hosts`) as follows:"
msgstr "连接网址是用 `quarkus.redis.hosts` （或 `quarkus.redis.<name>.hosts` ）配置的，如下所示。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use Unix Socket"
msgstr "使用Unix插座"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "When using unix-socket, you need:"
msgstr "当使用unix-socket时，你需要。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use the Sentinel Mode"
msgstr "哨兵模式"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "When using Sentinel, you need to pass multiple _host urls_ and configure the client type to `sentinel`:"
msgstr "当使用Sentinel时，你需要传递多个 _主机urls_ 并将客户端类型配置为 `sentinel` 。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use the Cluster Mode"
msgstr "集群模式"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "When using Redis in cluster mode, you need to pass multiple _host urls_, configure the client type to `cluster` and configure the `replicas` mode:"
msgstr "当在集群模式下使用Redis时，你需要传递多个 _主机Url_ ，将客户端类型配置为 `cluster` ，并配置 `replicas` 模式。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use the replication Mode"
msgstr "复制模式"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "When using the replication mode, you need to pass a single host url and configure the type to be `replication`:"
msgstr "当使用复制模式时，你需要传递一个单一的主机网址，并将类型配置为 `replication` 。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Connect to Redis Cloud"
msgstr "连接到Redis"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "To connect to redis cloud, you need the following properties:"
msgstr "要连接到redis云，你需要以下属性。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use TLS"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To use TLS, you need to:"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Set the `quarkus.redis.tls.enabled=true` property"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "Make sure that your URL starts with `rediss://` (with two `s`)"
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Configure the authentication"
msgstr "配置参考"

#: _guides/redis-reference.adoc
msgid ""
"The Redis password can be set in the `redis://` URL or with the `quarkus.redis.password` property.\n"
"We recommend the latter, and if possible, using secrets or an environment variable to configure the password."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The associated environment variable is `QUARKUS_REDIS_PASSWORD`, or `QUARKUS_REDIS_<NAME>_PASSWORD` for named clients."
msgstr "相关的环境变量是 `QUARKUS_REDIS_PASSWORD` ，或者 `QUARKUS_REDIS_<NAME>_PASSWORD` ，用于命名的客户端。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use Redis data sources"
msgstr "注入数据源"

#: _guides/redis-reference.adoc
msgid ""
"Quarkus exposes a high-level API on top of Redis.\n"
"This API is type-safe and structured around the notion of _group_, inherited from the https://redis.io/commands/command-docs/[Redis command organization].\n"
"This API lets you execute Redis commands more conveniently and safely."
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Inject data sources"
msgstr "注入数据源"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "For each configured Redis client, two Redis data sources are exposed:"
msgstr "对于每个配置的Redis客户端，有两个Redis数据源被暴露。"

#: _guides/redis-reference.adoc
msgid ""
"`io.quarkus.redis.datasource.RedisDataSource` - an imperative (blocking) Redis data source.\n"
"Each operation blocks until a response is received or a timeout is reached"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`io.quarkus.redis.datasource.ReactiveRedisDataSource` - a reactive Redis data source returning `Uni<X>` or `Multi<X>`."
msgstr " `io.quarkus.redis.datasource.ReactiveRedisDataSource` - 一个反应式Redis数据源返回 或 。 `Uni<X>` `Multi<X>` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "If you configured the _default_ Redis client, you could inject the data sources using:"
msgstr "如果你配置了 _默认的_ Redis客户端，你可以使用注入数据源。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "If you configured a _named_ Redis client, you need to use the `io.quarkus.redis.RedisClientName` qualifier to select the right client:"
msgstr "如果你配置了一个 _命名的_ Redis客户端，你需要使用 `io.quarkus.redis.RedisClientName` 修饰语来选择正确的客户端。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "When using the _blocking_ variant, you can configure the default timeout with:"
msgstr "当使用 _阻断_ 变体时，你可以用以下方法配置默认超时。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The default timeout is configured to 10s."
msgstr "默认超时被配置为10秒。"

#. type: Block title
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "All about delegation"
msgstr "关于代表团的一切"

#: _guides/redis-reference.adoc
msgid ""
"The blocking data source (`io.quarkus.redis.datasource.RedisDataSource`) is implemented on top of the reactive one (`io.quarkus.redis.datasource.ReactiveRedisDataSource`).\n"
"The `ReactiveRedisDataSource` is implemented on top of the `io.vertx.mutiny.redis.Redis` API."
msgstr ""

#. type: Title ====
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Data Source groups"
msgstr "数据源组"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "As mentioned above, the API is divided into groups:"
msgstr "如上所述，API被分为几组。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "bitmap - `.bitmap()`"
msgstr "位图 - `.bitmap()` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "key (generic) - `.key()`"
msgstr "键（通用）- `.key()` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "geo - `.geo(memberType)`"
msgstr "地缘 - `.geo(memberType)` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "hash - `.hash(`valueType)`"
msgstr "哈希 - `.hash(`valueType)` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "hyperloglog - `.hyperloglog(memberType)`"
msgstr "超级日志 - `.hyperloglog(memberType)` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "list - `.list(memberType)`"
msgstr "列表 - `.list(memberType)` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "pubsub - `pubsub()`"
msgstr "pubsub - `pubsub()` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "set - `.set(memberType)`"
msgstr "设置- `.set(memberType)` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "sorted-set - `.sortedSet(memberType)`"
msgstr "排序集- `.sortedSet(memberType)` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "string - `.value(valueType)`"
msgstr "字符串 - `.string(valueType)` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "stream - `.stream(`valueType`)"
msgstr "字符串 - `.string(valueType)` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "transactions - `withTransaction`"
msgstr "交易 - `withTransaction` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "json - `.json()` (requires the https://redis.com/modules/redis-json/[RedisJSON] module on the server side)"
msgstr "json - `.json()` （需要服务器端的 link:https://redis.com/modules/redis-json/[redis-json] 模块）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "bloom - `.bloom()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side)"
msgstr "bloom - `.bloom()` （需要服务器端的 link:https://redis.com/modules/redis-bloom/[redis-bloom] 模块）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "cuckoo - `.cuckoo()` (requires the https://redis.com/modules/redis-bloom/[rRedisBloom] module on the server side, which also provides the cuckoo filter commands)"
msgstr "cuckoo - `.cuckoo()` (需要服务器端的 link:https://redis.com/modules/redis-bloom/[redis-bloom] 模块，它也提供了cuckoo过滤命令)"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "count-min - `.countmin()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side, which also provides the count-min filter commands)"
msgstr "count-min - `.countmin()` （需要服务器端的 link:https://redis.com/modules/redis-bloom/[redis-bloom] 模块，该模块也提供count-min过滤命令）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "top-k - `.topk()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side, which also provides the top-k filter commands)"
msgstr "top-k - `.topk()` （需要服务器端的 link:https://redis.com/modules/redis-bloom/[redis-bloom] 模块，它也提供top-k过滤命令）。"

#: _guides/redis-reference.adoc
msgid ""
"graph - `.graph()` (requires the https://redis.com/modules/redis-graph/[RedisGraph] module on the server side).\n"
"These commands are marked as experimental.\n"
"Also the module has been declared _end of life_ by https://redis.com/blog/redisgraph-eol/[Redis]."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "search - `.search()` (requires the https://redis.com/modules/redis-search/[RedisSearch] module on the server side)."
msgstr "json - `.json()` （需要服务器端的 link:https://redis.com/modules/redis-json/[redis-json] 模块）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "auto-suggest - `.autosuggest()` (requires the https://redis.com/modules/redis-search/[RedisSearch] module on the server side)."
msgstr "json - `.json()` （需要服务器端的 link:https://redis.com/modules/redis-json/[redis-json] 模块）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "time-series - `.timeseries()` (requires the https://redis.com/modules/redis-timeseries/[Redis Time Series] module on the server side)."
msgstr "json - `.json()` （需要服务器端的 link:https://redis.com/modules/redis-json/[redis-json] 模块）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "These commands are marked as experimental, as we would need feedback before making them stable."
msgstr "top-k - `.topk()` （需要服务器端的 link:https://redis.com/modules/redis-bloom/[redis-bloom] 模块，它也提供top-k过滤命令）。"

#: _guides/redis-reference.adoc
msgid ""
"Each of these methods returns an object that lets you execute the commands related to the group.\n"
"The following snippet demonstrates how to use the _hash_ group:"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Inject the `RedisDataSource` in the constructor"
msgstr "在构造函数中注入 `RedisDataSource` "

#: _guides/redis-reference.adoc
msgid ""
"Creates the `HashCommands` object.\n"
"This object has three type parameters: the type of the key, the type of the field, and the type of the member"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Use the created `commands` to associate the field `field` with the value `value`"
msgstr "使用创建的 `commands` ，将字段 `field` 与值联系起来。 `value` "

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Use the created `commands` to retrieve the field `field` value."
msgstr "使用创建的 `commands` ，检索字段 `field` 值。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Serializing and Deserializing data"
msgstr "序列化和反序列化"

#: _guides/redis-reference.adoc
msgid ""
"The data source APIs handle the serialization and deserialization automatically.\n"
"By default, non-standard types are serialized into JSON and deserialized from JSON.\n"
"In this case, `quarkus-jackson` is used."
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Binary"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "To store or retrieve binary data, use `byte[]`."
msgstr "要存储二进制数据，使用 `byte[]` 。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Custom codec"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You can register custom codec by providing a CDI _bean_ implementing the `io.quarkus.redis.datasource.codecs.Codec` interface:"
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"The `canHandle` method is called to check if the codec can handle a specific type.\n"
"The parameter received in the `encode` method matches that type.\n"
"The object returned by the `decode` method must also match that type."
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Use type reference"
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"Each group can be configured with `Class`, or with `TypeReference` objects.\n"
"`TypeReference` are useful when dealing with Java generics:"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "You cannot use type references when using transaction. This is a known limitation."
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Manipulate cached and binary data with the `value` group"
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"The `value` group is used to manipulate https://redis.io/docs/manual/data-types/#strings[Redis Strings].\n"
"Thus, this group is not limited to Java Strings but can be used for integers (like a counter) or binary content (like images)."
msgstr ""

#. type: Title ====
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Work with cached values"
msgstr "使用缓存值的工作"

#: _guides/redis-reference.adoc
msgid ""
"You can use Redis as a cache using the `setex` command, which stores a given value to a given key for a given duration.\n"
"The following snippet shows how such a command can be used to store `BusinessObject` for 1 second."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "You can use the `setnx` method only to set the value if no value has been stored for the given key."
msgstr "如果没有为给定的键存储值，你只能使用 `setnx` 方法来设置值。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The `key` group provides more fine-grain control on expiration and ttl of each key."
msgstr " `key` 组对每个密钥的过期和tl提供了更细粒度的控制。"

#. type: delimited block =
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The `set` method can also receive a `SetArgs` argument that modify the behavior:"
msgstr " `set` 方法也可以接收一个 `SetArgs` 参数，修改行为。"

#. type: delimited block =
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`ex(seconds)` - Set the specified expire time, in seconds."
msgstr " `ex(seconds)` - 设置指定的过期时间，单位为秒。"

#. type: delimited block =
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`px(milliseconds)` - Set the specified expire time, in milliseconds."
msgstr " `px(milliseconds)` - 设置指定的过期时间，以毫秒为单位。"

#. type: delimited block =
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`exat(timestamp-seconds)` - Set the specified Unix time at which the key will expire, in seconds."
msgstr " `exat(timestamp-seconds)` - 设置指定的Unix时间，在该时间内密钥将过期，单位为秒。"

#. type: delimited block =
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`pxat(timestamp-milliseconds)` - Set the specified Unix time at which the key will expire, in milliseconds."
msgstr " `pxat(timestamp-milliseconds)` - 设置指定的Unix时间，在该时间段内密钥将过期，单位为毫秒。"

#. type: delimited block =
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`nx()` - Only set the key if it does not already exist."
msgstr " `nx()` - 只有在钥匙不存在的情况下，才会设置它。"

#. type: delimited block =
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`xx()` - Only set the key if it already exists."
msgstr " `xx()` - 只有在钥匙已经存在的情况下才设置。"

#. type: delimited block =
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`keepttl()` - Retain the time to live associated with the key."
msgstr " `keepttl()` - 保留与钥匙相关的生存时间。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Store binary data"
msgstr "存储二进制数据"

#: _guides/redis-reference.adoc
msgid ""
"Redis _strings_ can be used to store binary data, such as images.\n"
"In this case, we will use `byte[]` as value type:"
msgstr ""

#. type: Title ====
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Store a counter"
msgstr "储存一个计数器"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "You can store counters in Redis as demonstrated below:"
msgstr "你可以在Redis中存储计数器，如下图所示。"

#: _guides/redis-reference.adoc
msgid ""
"Retrieve the commands.\n"
"This time we will manipulate `Long` values"
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"Retrieve the counter associated with the given `key`.\n"
"Return `0L` when no counter is stored."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"Increment the value.\n"
"If there are no counter stored for the key, the `incr` command considers 0 as value (so `incr` sets the value to 1)."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "There are other methods that can be useful to manipulate counters, such as:"
msgstr "还有其他一些方法可以用来操作计数器，例如。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`incrby` - allows setting the increment value (positive or negative)"
msgstr " `incrby` - 允许设置增量值（正或负）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`incrbyfloat` - allows setting the increment value as a float/ double (the stored value will be a double)"
msgstr " `incrbyfloat` - 允许将增量值设置为浮点数/双数（存储的值将是双数）。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`set` - to set an initial value if needed"
msgstr " `set` - 来设置一个初始值，如果需要的话"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`decr` and `decrby` - allows decrementing the stored value"
msgstr " `decr` 和 - 允许递减存储的值 `decrby` "

#. type: Title ====
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Communicate with pub/sub"
msgstr "与酒吧/分局沟通"

#: _guides/redis-reference.adoc
msgid ""
"Redis allows sending _messages_ to channels and listening for these messages.\n"
"These features are available from the `pubsub` group."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The following snippets shows how a _cache_ can emit a `Notification` after every `set`, and how a subscriber can receive the notification."
msgstr " `Notification` 下面的片段显示了一个 _缓存_ 如何在每次 `set` ，以及订阅者如何接收通知。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use Redis transactions"
msgstr "使用交易"

#: _guides/redis-reference.adoc
msgid ""
"Redis transactions are slightly different from relational database transactions.\n"
"Redis transactions are a batch of commands executed altogether."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "A Redis transaction can _watch_ a set of keys, which would _discard_ the transaction is one of these keys are updated during the transaction execution."
msgstr "一个Redis事务可以 _监视_ 一组键，如果这些键中的一个在事务执行过程中被更新，它将 _放弃_ 该事务。"

#: _guides/redis-reference.adoc
msgid ""
"Commands enqueued in a transaction are not executed before the whole transaction is executed.\n"
"It means that you cannot retrieve a result during the transaction.\n"
"Results are accumulated in a `TransactionResult` object you will access after the completion of the transaction.\n"
"This object contains whether the transaction succeeded or was discarded, and in the former case the result of each command (indexed by the command order)."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"To start a transaction, you use the `withTransaction` method.\n"
"This method receives a `Consumer<TransactionalRedisDataSource>`, which follows the same API as the regular `RedisDataSource` except that the commands return `void` (`Uni<Void>` for the reactive variant).\n"
"When that consumer returns, the transaction is _executed_."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The following snippet shows how to create a transaction executing two related _writes_:"
msgstr "下面的片段显示了如何创建一个事务，执行两个相关的 _写操作_ 。"

#: _guides/redis-reference.adoc
msgid ""
"The received `tx` object can also be used to _discard_ the transaction, using: `tx.discard();`.\n"
"The returned `TransactionResult` lets you retrieve the result of each command."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "When using the reactive variant of the data source, the passed callback is a `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>`:"
msgstr "当使用数据源的反应式变体时，传递的回调是一个 `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>` 。"

#: _guides/redis-reference.adoc
msgid ""
"Transaction execution can be conditioned by _keys_.\n"
"When a passed key gets modified during the execution of a transaction, the transaction is discarded.\n"
"The keys are passed as `String` as a second parameter to the `withTransaction` method:"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "You cannot use the pub/sub feature from within a transaction."
msgstr "你不能在一个交易中使用pub/sub功能。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Implement the optimistic locking pattern"
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"To use optimistic locking, you need to use a variant of the `withTransaction` method, allowing the execution of code before the transaction starts.\n"
"In other words, it will be executed as follows:"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "For example, if you need to update a value in a hash only if the field exists, you will use the following API:"
msgstr "例如，如果你需要更新一个哈希值，只有当该字段存在时，你将使用以下API。"

#: _guides/redis-reference.adoc
msgid ""
"If one of the watched keys is touched before or during the execution of the pre-transaction or transactional blocks, the transaction is aborted.\n"
"The pre-transactional block produces a result that the transactional block can use.\n"
"This construct is necessary because, within a transaction, the commands do not produce a result.\n"
"Results can only be retrieved after the execution of the transaction."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"The pre-transaction and transactional blocks are invoked on the same Redis connection.\n"
"Consequently, the pre-transaction block must use the passed data source to execute commands.\n"
"Thus, the commands are emitted from that connection.\n"
"These commands must not modify the watched keys."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The transaction is aborted if the pre-transaction block throws an exception (or produces a failure when using the reactive API)."
msgstr "如果预交易块抛出一个异常（或者在使用反应式API时产生一个失败），交易将被中止。"

#. type: Title ====
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Execute custom commands"
msgstr "执行自定义命令"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "To execute a custom command, or a command not supported by the API, use the following approach:"
msgstr "要执行一个自定义的命令，或一个API不支持的命令，请使用以下方法。"

#: _guides/redis-reference.adoc
msgid ""
"The `execute` method sends the command to Redis and retrieves the `Response`.\n"
"The command name is passed as first parameters.\n"
"You can add an arbitrary number of **String** parameters to your command.\n"
"The result is wrapped into a `Response` object."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The reactive variant returns a `Uni<Response>`."
msgstr "反应式变体返回一个 `Uni<Response>` 。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "You can also execute custom command in a transaction."
msgstr "你也可以在一个事务中执行自定义命令。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Preload data into Redis"
msgstr "预装数据到Redis"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "On startup, you can configure the Redis client to preload data into the Redis database."
msgstr "在启动时，你可以配置Redis客户端将数据预加载到Redis数据库。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configure the load scripts"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Specify the _load script_ you want to load using:"
msgstr "指定你要使用的 _加载脚本_ 。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "`load-script` is a build time property than cannot be overridden at runtime."
msgstr " `load-script` 是一个构建时的属性，在运行时不能被重写。"

#: _guides/redis-reference.adoc
msgid ""
"Note that each client can have a different script, even a list of scripts.\n"
"In the case of a list, the data is imported in the list order (for example, first `actors.redis`, then `movies.redis` for the `my-redis` client)."
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Write load scripts"
msgstr "加载脚本"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "The `.redis` file follows a _one command per line_ format:"
msgstr " `.redis` 文件遵循 _每行一个命令_ 的格式。"

#: _guides/redis-reference.adoc
msgid ""
"Quarkus batches all the commands from a single file and sends all the commands.\n"
"The loading process fails if there is any error, but the previous instructions may have been executed.\n"
"To avoid that, you can wrap your command into a Redis _transaction_:"
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configure the pre-loading"
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"The data is loaded when the application starts.\n"
"By default, it drops the whole database before importing.\n"
"You can prevent this using `quarkus.redis.flush-before-load=false`."
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"Also, the import process only runs if the database is empty (no key).\n"
"You can force to import even if there is data using the `quarkus.redis.load-only-if-empty=false`"
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Distinguish dev/test vs. prod when pre-loading"
msgstr ""

#: _guides/redis-reference.adoc
msgid ""
"As mentioned above, in dev and test modes, Quarkus tries to import data by looking for the `src/main/resources/import.redis`.\n"
"This behavior is disabled in _prod_ mode, and if you want to import even in production, add:"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "Before importing in _prod_ mode, make sure you configured `quarkus.redis.flush-before-load` accordingly."
msgstr "在以 _prod_ 模式导入之前，确保你相应地配置了 `quarkus.redis.flush-before-load` 。"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "In dev mode, to reload the content of the `.redis` load scripts, you need to add: `%dev.quarkus.vertx.caching=false`"
msgstr "在开发模式下，为了重新加载 `.redis` 加载脚本的内容，你需要添加。 `%dev.quarkus.vertx.caching=false` "

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use the Vert.x redis client"
msgstr "Vert.x Redis客户端"

#: _guides/redis-reference.adoc
msgid ""
"In addition to the high-level API, you can use the Vertx Redis clients directly in your code.\n"
"The documentation of the Vert.x Redis Client is available on the https://vertx.io/docs/vertx-redis-client/java/[Vert.x Web Site]."
msgstr ""

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Configure Redis hosts programmatically"
msgstr "以编程方式设定Redis主机"

#: _guides/redis-reference.adoc
msgid ""
"The `RedisHostsProvider` programmatically provides redis hosts.\n"
"This allows for configuration of properties like redis connection password coming from other sources."
msgstr ""

#. type: delimited block =
#: _guides/redis-reference.adoc
msgid "This is useful as it removes the need to store sensitive data in application.properties."
msgstr "这样可以避免在application.properties中存储敏感数据，很实用。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The host provider can be used to configure the redis client like shown below"
msgstr "`RedisHostsProvider` 可用于配置Redis客户端，如下图所示："

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Customize the Redis options programmatically"
msgstr "以编程方式设定Redis主机"

#: _guides/redis-reference.adoc
msgid ""
"You can expose a bean implementing the `io.quarkus.redis.client.RedisOptionsCustomizer` interface to customize the Redis client options.\n"
"The bean is called for each configured Redis client:"
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Use the Redis Dev Services"
msgstr "开发服务"

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "See xref:redis-dev-services.adoc[Redis Dev Service]."
msgstr "见 link:redis-dev-services.html[Redis Dev Service] 。"

#. type: Title ==
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Configure Redis observability"
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, no-wrap
msgid "Enable the health checks"
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-redis` will automatically add a readiness health check to validate the connection to the Redis server."
msgstr "如果你使用 `quarkus-smallrye-health` 扩展， `quarkus-redis` 将自动添加一个准备就绪健康检查，以验证与Redis服务器的连接。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr "因此，当你访问应用程序的 `/q/health/ready` 端点时，可获得有关于连接验证状态的信息。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "This behavior can be disabled by setting the `quarkus.redis.health.enabled` property to `false` in your `application.properties`."
msgstr "可以通过在 `application.properties` 中设置 `quarkus.redis.health.enabled` 属性为 `false` 来禁用这个连接健康检查。"

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Enable metrics"
msgstr "启用指标收集"

#: _guides/redis-reference.adoc
msgid ""
"Redis client metrics are automatically enabled when the application also uses the xref:telemetry-micrometer.adoc[`quarkus-micrometer`] extension.\n"
"Micrometer collects the metrics of all the Redis clients implemented by the application."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
#, fuzzy
msgid "As an example, if you export the metrics to Prometheus, you will get:"
msgstr "举例来说，如果你把指标导出到Prometheus，你会得到。"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The Redis client name can be found in the _tags_."
msgstr ""

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "The metrics contain both the Redis connection pool metrics (`redis_pool_*`) and the metrics about the command execution (`redis_commands_*`) such as the number of command, successes, failures, and durations."
msgstr ""

#. type: Title ===
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Disable metrics"
msgstr "Redis客户端指标"

#. type: Plain text
#: _guides/redis-reference.adoc
msgid "To disable the Redis client metrics when `quarkus-micrometer` is used, add the following property to the application configuration:"
msgstr ""

#. type: Title ==
#: _guides/redis-reference.adoc
#, fuzzy, no-wrap
msgid "Configuration reference"
msgstr "配置参考"

#: _guides/redis-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
