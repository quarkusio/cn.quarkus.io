msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _guides/assistant.adoc
msgid "Dev Assistant"
msgstr ""

#: _guides/assistant.adoc
msgid "General overview"
msgstr ""

#: _guides/assistant.adoc
msgid "The Quarkus Dev Assistant is an AI-powered helper built directly into Quarkus Dev Mode. Its goal is to make you more productive by helping you troubleshoot and assisting with development tasks."
msgstr ""

#: _guides/assistant.adoc
msgid "The assistant runs **only** within dev mode and never affects your production application."
msgstr ""

#: _guides/assistant.adoc
msgid "What Can It Do?"
msgstr ""

#: _guides/assistant.adoc
msgid "The Dev Assistant can help with:"
msgstr ""

#: _guides/assistant.adoc
msgid "Troubleshooting exceptions and stack traces"
msgstr ""

#: _guides/assistant.adoc
msgid "Generating example client code (e.g., `javascript` client for REST endpoints)"
msgstr ""

#: _guides/assistant.adoc
msgid "Generating javadoc for your code"
msgstr ""

#: _guides/assistant.adoc
msgid "Generating test code for your application"
msgstr ""

#: _guides/assistant.adoc
msgid "Generating test data for your application"
msgstr ""

#: _guides/assistant.adoc
msgid "Explain existing code in you application"
msgstr ""

#: _guides/assistant.adoc
msgid "Complete `//TODO` sections in your code"
msgstr ""

#: _guides/assistant.adoc
msgid "... and more to come !"
msgstr ""

#: _guides/assistant.adoc
msgid "How to Add the Dev Assistant"
msgstr ""

#: _guides/assistant.adoc
msgid "To enable the Dev Assistant in your Quarkus project, add the `quarkus-chappie` extension:"
msgstr ""

#: _guides/assistant.adoc
msgid "Replace `${chappie-extension-version}` with the latest available version. You can find the latest version on https://search.maven.org/artifact/io.quarkiverse.chappie/quarkus-chappie[search.maven.org]."
msgstr ""

#: _guides/assistant.adoc
msgid "Once added, open the Dev UI to start using the assistant."
msgstr ""

#: _guides/assistant.adoc
msgid "The assistant interfaces are defined in Quarkus \"core\", but their implementation are located in Quarkiverse (Chappie). You can, if needed, provide an alternative implementation of the assistant."
msgstr ""

#: _guides/assistant.adoc
msgid "Configuration and Providers"
msgstr ""

#: _guides/assistant.adoc
msgid "By default, the assistant is disabled until configured. You can choose from supported AI providers:"
msgstr ""

#: _guides/assistant.adoc
msgid "OpenAI (e.g., ChatGPT, Openshift AI, Podman AI Lab, ...)"
msgstr ""

#: _guides/assistant.adoc
msgid "Ollama (local models like `llama3`)"
msgstr ""

#: _guides/assistant.adoc
msgid "Configuration can be done directly in Dev UI via the assistant settings pane. You'll need:"
msgstr ""

#: _guides/assistant.adoc
msgid "An API key (for OpenAI)"
msgstr ""

#: _guides/assistant.adoc
msgid "A local running model (for Ollama or Podman AI)"
msgstr ""

#: _guides/assistant.adoc
msgid "Settings are stored in local storage per browser."
msgstr ""

#: _guides/assistant.adoc
msgid "Usage"
msgstr ""

#: _guides/assistant.adoc
msgid "The Dev Assistant integrates seamlessly into various parts of the Dev UI. Wherever assistant features are available, they are highlighted using a distinctive *pink theme*, making it easy to spot AI-powered interactions."
msgstr ""

#: _guides/assistant.adoc
msgid "Currently, assistant functions are available in:"
msgstr ""

#: _guides/assistant.adoc
msgid "The *Workspace* view"
msgstr ""

#: _guides/assistant.adoc
msgid "Extension pages that support AI-driven help"
msgstr ""

#: _guides/assistant.adoc
msgid "Look for pink-highlighted buttons or badges - these indicate actions powered by the Dev Assistant."
msgstr ""

#: _guides/assistant.adoc
msgid "Exception help"
msgstr ""

#: _guides/assistant.adoc
msgid "When an error or exception occurs, the error page includes a `Get help with this` button."
msgstr ""

#: _guides/assistant.adoc
msgid "Clicking it takes you directly to the Dev UI's Assistant panel, pre-filled with relevant error context. This allows the assistant to help you:"
msgstr ""

#: _guides/assistant.adoc
msgid "Understand what the exception means"
msgstr ""

#: _guides/assistant.adoc
msgid "Suggest likely causes"
msgstr ""

#: _guides/assistant.adoc
msgid "Recommend how to fix the issue"
msgstr ""

#: _guides/assistant.adoc
msgid "This provides a fast and focused troubleshooting workflow without needing to copy and paste logs manually."
msgstr ""

#: _guides/assistant.adoc
msgid "Assistant log"
msgstr ""

#: _guides/assistant.adoc
msgid "You can access the log of the assistant in the Dev UI Footer:"
msgstr ""

#: _guides/assistant.adoc
msgid "Guide for Extension Developers"
msgstr ""

#: _guides/assistant.adoc
msgid "Quarkus extensions can enhance the developer experience by contributing to the Dev Assistant. This section explains how to integrate your extension with the Dev Assistant, covering:"
msgstr ""

#: _guides/assistant.adoc
msgid "Workspace-based assistant actions"
msgstr ""

#: _guides/assistant.adoc
msgid "Assistant-specific pages"
msgstr ""

#: _guides/assistant.adoc
msgid "Backend integration via JSON-RPC"
msgstr ""

#: _guides/assistant.adoc
msgid "UI features for assistant-aware components"
msgstr ""

#: _guides/assistant.adoc
msgid "An extension can define Assistant features without depending on Chappie directly. The interfaces and associated structures are located in the `assistant` extension."
msgstr ""

#: _guides/assistant.adoc
msgid "Workspace participation"
msgstr ""

#: _guides/assistant.adoc
msgid "You can add an assistant function to a workspace item using the same approach as regular https://quarkus.io/guides/dev-ui#workspace[workspace actions], with one key difference: instead of using `.function(...)`, you use `.assistantFunction(...)`."
msgstr ""

#: _guides/assistant.adoc
msgid "Use `assistantFunction` to receive the `Assistant` instance and https://quarkus.io/guides/dev-ui#input[input] parameters."
msgstr ""

#: _guides/assistant.adoc
msgid "Provide an optional *system message* to guide the assistant's behavior."
msgstr ""

#: _guides/assistant.adoc
msgid "Provide a *user message* as the primary prompt."
msgstr ""

#: _guides/assistant.adoc
msgid "Assistant pages"
msgstr ""

#: _guides/assistant.adoc
msgid "To add a standalone assistant-powered page to the Dev UI, use the https://quarkus.io/guides/dev-ui#card[`CardPageBuildItem`] and `Page.assistantPageBuilder()`:"
msgstr ""

#: _guides/assistant.adoc
msgid "Use the assistant page builder."
msgstr ""

#: _guides/assistant.adoc
msgid "Communicating to the backend"
msgstr ""

#: _guides/assistant.adoc
msgid "You can invoke the assistant from backend code using https://quarkus.io/guides/dev-ui#communicating-to-the-backend[standard Dev UI JSON-RPC] patterns â€” both against the *runtime* and *deployment* classpaths."
msgstr ""

#: _guides/assistant.adoc
msgid "JsonRPC against the Runtime classpath"
msgstr ""

#: _guides/assistant.adoc
msgid "To use the assistant in a https://quarkus.io/guides/dev-ui#jsonrpc-against-the-runtime-classpath[`JsonRpcService`] on the runtime classpath, inject the `Assistant` like this:"
msgstr ""

#: _guides/assistant.adoc
msgid "Inject the assistant as optional, it will only be present if a provider is added and configured."
msgstr ""

#: _guides/assistant.adoc
msgid "You can now use this assistant in any JsonRPC method, example:"
msgstr ""

#: _guides/assistant.adoc
msgid "JsonRPC against the Deployment classpath"
msgstr ""

#: _guides/assistant.adoc
msgid "In https://quarkus.io/guides/dev-ui#jsonrpc-against-the-deployment-classpath[deployment-time] code, use the `BuildTimeActionBuildItem` and register assistant actions via `.addAssistantAction(...)`:"
msgstr ""

#: _guides/assistant.adoc
msgid "Use `addAssistantAction` instead of `addAction` to access the assistant context."
msgstr ""

#: _guides/assistant.adoc
msgid "Assistant State in the UI"
msgstr ""

#: _guides/assistant.adoc
msgid ""
"To conditionally render assistant UI in your Web Component, you can use the https://quarkus.io/guides/dev-ui#assistant-state[assistant state] to\n"
"check the state of the assistant. The state can be:"
msgstr ""

#: _guides/assistant.adoc
msgid "notAvailable: No assistant implementation (like Chappie) is present."
msgstr ""

#: _guides/assistant.adoc
msgid "available: Assistant is available but not yet configured."
msgstr ""

#: _guides/assistant.adoc
msgid "ready: Assistant is configured and ready to use."
msgstr ""

#: _guides/assistant.adoc
msgid "To use this state in your page:"
msgstr ""

#: _guides/assistant.adoc
msgid "import observeState from the LitState library."
msgstr ""

#: _guides/assistant.adoc
msgid "import the state you are interested in, in this case assistant state."
msgstr ""

#: _guides/assistant.adoc
msgid "Wrap the LitElement in `observerState`"
msgstr ""

#: _guides/assistant.adoc
msgid "Now you can access the assistant state anywhere in your page, and when that state changes it will act exactly the same as a local state - re-render the relevant parts of the page:"
msgstr ""

#: _guides/assistant.adoc
msgid "Assistant themes and UI Components"
msgstr ""

#: _guides/assistant.adoc
msgid "To maintain visual consistency with other Dev Assistant features, use the following components and styles:"
msgstr ""

#: _guides/assistant.adoc
msgid "`<qui-assistant-button>`: A pre-styled pink button with a robot icon."
msgstr ""

#: _guides/assistant.adoc
msgid "`<qui-assistant-warning>`: A standard warning message with the text: `\"Quarkus assistant can make mistakes. Check responses.\"`"
msgstr ""

#: _guides/assistant.adoc
msgid "You can also use the CSS var `--quarkus-assistant` anywhere you want to apply the assistant's theme color."
msgstr ""

#: _guides/assistant.adoc
msgid "Feedback"
msgstr ""

#: _guides/assistant.adoc
msgid "The Dev Assistant is evolving! If it gives incorrect answers or misses something obvious, please report it at:"
msgstr ""

#: _guides/assistant.adoc
msgid "https://github.com/quarkusio/quarkus/issues"
msgstr ""
