# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-29 11:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Configuring Well-Known OpenID Connect Providers"
msgstr "配置知名的OpenId连接供应商"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "This document explains how to configure well-known social OIDC and OAuth2 providers."
msgstr ""

#. type: Title ==
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "Introduction"
msgstr "简介"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "If you use xref:security-oidc-code-flow-authentication.adoc[OpenID Connect Authorization Code Flow] to protect Quarkus endpoints, then you need to configure Quarkus to tell it how to connect to OpenID Connect providers, how to authenticate to such providers, which scopes to use, and so on."
msgstr "如果你使用 link:security-openid-connect-web-authentication.html[OpenId Connect授权代码流] 来保护Quarkus端点，那么你需要配置Quarkus，告诉它如何连接到OpenId Connect提供商，如何对这些提供商进行认证，使用哪些作用域，等等。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Sometimes you need to use the configuration to work around the fact that some providers do not implement OpenID Connect completely or when they are in fact xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers only]."
msgstr "有时你需要使用配置来解决一些提供者没有完全实现 `OpenId Connect` ，或者它们实际上 link:security-openid-connect-web-authentication.html#oauth2[只是OAuth2提供者的] 情况。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "The configuration of such providers can become complex, very technical and difficult to understand."
msgstr "这类供应商的配置可能变得复杂，非常具有技术性，难以理解。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "`quarkus.oidc.provider` configuration property has been introduced to refer to well-known OpenID Connect and OAuth2 providers. This property can be used to refer to a provider such as `github` with only a minimum number of customizations required, typically, an account specific `client id`, `client secret` and some properties have to be set to complete the configuration."
msgstr " `quarkus.oidc.provider` 配置属性已被引入，以参考众所周知的 和 提供商。这个属性可以用来指代诸如 ，只需要最低数量的定制，通常情况下，必须设置一个特定账户 、 和一些属性来完成配置。 `OpenId Connect` `OAuth2` `github` `client id` `client secret` "

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "This property can be used in `application.properties`, in xref:security-openid-connect-multitenancy.adoc[multi-tenant] set-ups if more than one provider has to be configured (for example, see https://quarkiverse.github.io/quarkiverse-docs/quarkus-renarde/dev/security.html#_using_oidc_for_login[Quarkus Renarde security documentation]), in custom xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[TenantConfigResolvers] if the tenant configurations are created dynamically."
msgstr "这个属性可以在 `application.properties` ，在 link:security-openid-connect-multitenancy.html[多租户] 设置中，如果需要配置一个以上的供应商（例如，见 link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-renarde/dev/security.html#_using_oidc_for_login[Quarkus Renarde安全文档] ），在自定义 link:security-openid-connect-web-multitenancy.html#tenant-config-resolver[TenantConfigResolvers] 中，如果租户配置是动态创建的。"

#. type: Title ==
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Well Known Providers"
msgstr "知名的供应商"

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "GitHub"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "In order to set up OIDC for GitHub you need to create a new OAuth application in your https://github.com/settings/applications/new[GitHub developer settings]:"
msgstr "为了给Github设置OIDC，你需要在 link:https://github.com/settings/applications/new[GitHub开发者设置] 中创建一个新的OAuth应用。"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Make sure to fill in the appropriate details, but more importantly the Authorization Callback URL, set to `http://localhost:8080/_renarde/security/github-success`\n"
"(if you intend to test this using the Quarkus DEV mode)."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now click on `Register application` and you'll be shown your application page:"
msgstr "现在点击 `Register application` ，你就会看到你的申请页面。"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"You need to click on `Generate a new client secret`, confirm your credentials, and write down\n"
"your Client ID and Client secret (especially that one, because you will not be able to see it again\n"
"later from that page, but you can always recreate one, do don't worry too much):"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now add the following configuration to your `application.properties`:"
msgstr "现在将以下配置添加到你的 `application.properties` 。"

#: _guides/security-openid-connect-providers.adoc
msgid "`quarkus.oidc.provider=github` will request `GitHub` to add a `user:email` scope to issued access tokens. For information about overriding this scope or requesting more scopes, see the  xref:provider-scope[Provider scopes] section."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "You can also send access tokens issued by `GitHub` to `quarkus.oidc.application-type=service` or `quarkus.oidc.application-type=hybrid` Quarkus applications."
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Google"
msgstr "谷歌"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "In order to set up OIDC for Google you need to create a new project in your https://console.cloud.google.com/projectcreate[Google Cloud Platform console]:"
msgstr "为了设置谷歌的OIDC，你需要在 link:https://console.cloud.google.com/projectcreate[谷歌云平台控制台] 创建一个新项目。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Pick a project name and click on `CREATE`."
msgstr "选择一个项目名称并点击 `CREATE` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now make sure you select your project in the top selector, and click on the left-hand bar menu on `APIs and Services > OAuth consent screen`:"
msgstr "现在，确保你在顶部选择器中选择你的项目，并点击左侧栏的菜单 `APIs and Services > OAuth consent screen` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Select `External` to authorise any Google user to log in to your application and press `CREATE`:"
msgstr "选择 `External` ，授权任何谷歌用户登录你的应用程序，并按 `CREATE` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now you can fill in your application name, your support email, your developer contact information and press `SAVE AND CONTINUE`:"
msgstr "现在你可以填写你的申请名称、你的支持电子邮件、你的开发者联系信息，然后按 `SAVE AND CONTINUE` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Do not add any scopes on the next page, and press `SAVE AND CONTINUE`:"
msgstr "不要在下一页添加任何作用域，并按 `SAVE AND CONTINUE` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Do not add any test user on the next page, and press `SAVE AND CONTINUE`:"
msgstr "不要在下一页添加任何测试用户，并按 `SAVE AND CONTINUE` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Click on the top menu `CREATE CREDENTIALS` > `OAuth client ID`:"
msgstr "点击顶部菜单 `CREATE CREDENTIALS` > `OAuth client ID` 。"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Select `Web application` as `Application type`, and add `http://localhost:8080/_renarde/security/oidc-success` in\n"
"the `Authorised redirect URIs` list, then press `CREATE`:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Copy your Client ID and Client Secret:"
msgstr "复制你的客户ID和客户秘密。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "You can now configure your `application.properties`:"
msgstr "你现在可以配置你的 `application.properties` 。"

#: _guides/security-openid-connect-providers.adoc
msgid "`quarkus.oidc.provider=google` will request `Google` to add `openid`, `email` and `profile` scopes to issued access tokens. For information about overriding these scopes or requesting more scopes, see the  xref:provider-scope[Provider scopes] section."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "You can also send access tokens issued by `Google` to `quarkus.oidc.application-type=service` or `quarkus.oidc.application-type=hybrid` Quarkus applications."
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "Mastodon"
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Create a https://joinmastodon.org/[Mastodon account]. You must https://joinmastodon.org/servers[pick a server], for example, `mastodon.social`.\n"
"Select a `Development` option in your account and register an application, for example:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Select the registered application:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "and note its client id and client secret properties, use them to configure your `application.properties`:"
msgstr "你现在可以配置你的 `application.properties` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "By default, `quarkus.oidc.provider=mastodon` sets `quarkus.oidc.auth-server-url` to the `https://mastodon.social` Mastodon server address."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "You can override `quarkus.oidc.auth-server-url` if you have created your account in another Mastodon server, for example:"
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Microsoft"
msgstr "微软"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"In order to set up OIDC for Microsoft you need to go to your https://portal.azure.com[Microsoft Azure Portal],\n"
"and search for `Azure Active Directory`, then click on it:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Once there, on the left side under `Manage`, click on `App registrations` then click on `New registration`:"
msgstr "一旦到了那里，在左边的 `Manage` ，点击 `App registrations` ，然后点击 `New registration` 。"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Fill in your application name, select `Accounts in any organizational directory (Any Azure AD directory - Multitenant) and personal Microsoft accounts (e.g. Skype, Xbox)` to allow anyone to log in, and add a `Web` Redirect URI as `http://localhost:8080/_renarde/security/oidc-success`,\n"
"then click on `Register`:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "On that resulting page, copy the `Client Id` (under `Application (client) ID`, then click on `Add a certificate or secret`:"
msgstr "在该结果页面上，复制 `Client Id` （在 `Application (client) ID` ，然后点击 `Add a certificate or secret` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now, under `Client secrets (0)`, click on `New client secret`:"
msgstr "现在，在 `Client secrets (0)` ，点击 `New client secret` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Click on `Add` in that dialog without changing anything:"
msgstr "在该对话框中点击 `Add` ，不做任何更改。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "On the resulting page, copy your `Secret Value`:"
msgstr "在产生的页面上，复制你的 `Secret ID` 。"

#: _guides/security-openid-connect-providers.adoc
msgid "`quarkus.oidc.provider=microsoft` will request `Microsoft` to add `openid`, `email` and `profile` scopes to issued access tokens. For information about overriding these scopes or requesting more scopes, see the  xref:provider-scope[Provider scopes] section."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "You can also send access tokens issued by `Microsoft` to `quarkus.oidc.application-type=service` or `quarkus.oidc.application-type=hybrid` Quarkus applications but you may need to set `quarkus.oidc.verify-access-token-with-user-info` configuration property to `true` if access tokens issued by Microsoft are not in JWT format."
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Some Microsoft services may issue tokens whose signatures can only be verified if the current token's `nonce` header is reset with its SHA-256 digest value.\n"
"If your application has to deal with such tokens then please enable an Azure token customizer:"
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Apple"
msgstr "苹果公司"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"In order to set up OIDC for Apple you need to create a developer account, and sign up for the 99€/year program, but you cannot test your application on `localhost` like most other OIDC providers:\n"
"you will need to run it over `https` and make it publicly accessible, so for development purposes\n"
"you may want to use a service such as https://ngrok.com."
msgstr ""

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Go to https://developer.apple.com/account/resources/identifiers/list[Create a new identifier] and press `+`"
msgstr "进入 \" link:https://developer.apple.com/account/resources/identifiers/list[创建一个新的标识符] \"并按 `+` "

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Don't touch anything, keep `App IDs` selected, and press `Continue`:"
msgstr "不要碰任何东西，保持 `App IDs` ，然后按 `Continue` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Don't touch anything, keep `App` selected, and press `Continue`:"
msgstr "不要碰任何东西，保持 `App` ，然后按 `Continue` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Enter a description and a Bundle ID (use your application package name):"
msgstr "输入描述和捆绑ID（使用你的应用程序包名称）。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Then scroll down to find the `Sign in with Apple` Capability, select it, and press `Continue`:"
msgstr "然后向下滚动，找到 `Sign in with Apple` 能力，选择它，并按 `Continue` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Write down your App ID Prefix, then press `Register`:"
msgstr "写下你的应用程序ID前缀，然后按 `Register` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Back on the `Identifiers` page, press `+`:"
msgstr "回到 `Identifiers` 页面，按 `+` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Select `Service IDs` and press `Continue`:"
msgstr "选择 `Service IDs` 并按 `Continue` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Enter a description and Bundle ID (use your application package name), then press `Continue`:"
msgstr "输入描述和捆绑ID（使用你的应用程序包名称），然后按 `Continue` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now press `Register`:"
msgstr "现在按 `Register` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Back on the service list, click on your newly created service:"
msgstr "回到服务列表中，点击你新创建的服务。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Enable `Sign in with Apple` and press `Configure`:"
msgstr "启用 `Sign in with Apple` 并按 `Configure` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Add your domain and return URL (set to `<host>/_renarde/security/oidc-success`) and press `Next`:"
msgstr "添加你的域名和返回的URL（设置为 `<host>/_renarde/security/oidc-success` ）并按 `Next` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now press `Done`:"
msgstr "现在按 `Done` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now press `Continue`:"
msgstr "现在按 `Continue` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "And now press `Save`:"
msgstr "而现在按 `Save` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Go to the https://developer.apple.com/account/resources/authkeys/list[Keys] page on the left menu, and press `+`:"
msgstr "进入左边菜单的 link:https://developer.apple.com/account/resources/authkeys/list[钥匙] 页，按 `+` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Fill in a key name, enable `Sign in with Apple`, and press `Configure`:"
msgstr "填入一个键名，启用 `Sign in with Apple` ，然后按 `Configure` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Select your Primary App ID and press `Save`:"
msgstr "选择您的主应用程序ID，并按 `Save` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Back on the key page, press `Continue`:"
msgstr "回到按键页面，按 `Continue` 。"

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Write down your `Key ID`, download your key and save it to your Quarkus application in `src/main/resources/AuthKey_<KEYID>.p8`:"
msgstr "写下你的 `Key ID` ，下载你的密钥并将其保存在你的Quarkus应用程序中， `src/main/resources/AuthKey_<KEYID>.p8` 。"

#: _guides/security-openid-connect-providers.adoc
msgid "`quarkus.oidc.provider=apple` will request `Apple` to add `openid`, `email` and `name` scopes to issued access tokens. For information about overriding these scopes or requesting more scopes, see the  xref:provider-scope[Provider scopes] section."
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Facebook"
msgstr "脸书"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Facebook you will not be let you test your application on `localhost` like most other OIDC providers:\n"
"you will need to run it over `https` and make it publicly accessible, so for development purposes\n"
"you may want to use a service such as https://ngrok.com."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "In order to set up OIDC for Facebook start by https://developers.facebook.com/apps/create/[Creating an application], select `None` as an app type, and press `Next`:"
msgstr "为了设置Facebook的OIDC，首先要 link:https://developers.facebook.com/apps/create/[创建一个应用程序] ，选择 `None` 作为应用程序类型，然后按 `Next` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now enter an application name, and contact email, and press `Create app`:"
msgstr "现在输入一个申请名称，和联系电子邮件，然后按 `Create app` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "On the app page, click `Set up` on the `Facebook login` product:"
msgstr "在应用程序页面，点击 `Set up` ，在 `Facebook login` 产品。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Quick the `Quickstarts` page and click on `Facebook login > Settings` on the left menu:"
msgstr "快速进入 `Quickstarts` 页面，点击左侧菜单上的 `Facebook login > Settings` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Enter your `Redirect URIs` (set to `<host>/_renarde/security/oidc-success`) and press `Save changes`:"
msgstr "输入你的 `Redirect URIs` （设置为 `<host>/_renarde/security/oidc-success` ），然后按 `Save changes` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now go to `Settings > Basic` on the left-hand menu, and write down your `App ID` and `App secret`:"
msgstr "现在去左手菜单上的 `Settings > Basic` ，并写下你的 `App ID` 和 `App secret` 。"

#: _guides/security-openid-connect-providers.adoc
msgid "`quarkus.oidc.provider=facebook` will request `Facebook` to add `email` and `public_profile` scopes to issued access tokens. For information about overriding these scopes or requesting more scopes, see the  xref:provider-scope[Provider scopes] section."
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Twitter"
msgstr "推特"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"You can use Twitter for OIDC login, but at the moment, it restricts access to the user's email, which means you\n"
"will have to obtain it and verify it yourself."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "In order to set up OIDC for Twitter start by https://developer.twitter.com/en/portal/projects/new[Creating a project], enter a project name, and press `Next`:"
msgstr "为了给Twitter设置OIDC，首先要 link:https://developer.twitter.com/en/portal/projects/new[创建一个项目] ，输入一个项目名称，然后按 `Next` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Enter a use case, and press `Next`:"
msgstr "输入一个用例，并按 `Next` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Enter a project description, and press `Next`:"
msgstr "输入项目描述，并按 `Next` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now enter an application name, and press `Next`:"
msgstr "现在输入一个应用程序名称，并按 `Next` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Write down your keys, because they will not be displayed again, and press `App Settings`:"
msgstr "写下你的按键，因为它们不会再被显示，然后按 `App Settings` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Navigate down to the `User authentication settings` section and press `Set up`:"
msgstr "向下导航到 `User authentication settings` 部分，按 `Set up` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Check the `OAuth 2.0` check box:"
msgstr "勾选 `OAuth 2.0` 复选框。"

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Select `Web App` as application type, then fill in your application details (use `<host>/_renarde/security/twitter-success`\n"
"for the `Callback URI`)."
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Twitter doesn't require https usage in practice, but won't accept your `Website URL` without it, so\n"
"you can still use ngrok for it."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Now press `Save`:"
msgstr "现在按 `Save` 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "You can now copy your `Client ID` and `Client Secret` and press `Done`:"
msgstr "现在你可以复制你的 `Client ID` 和 `Client Secret` ，然后按 `Done` 。"

#: _guides/security-openid-connect-providers.adoc
msgid "`quarkus.oidc.provider=twitter` will request `Twitter` to add `offline.access`, `tweet.read` and `users.read` scopes to issued access tokens. For information about overriding these scopes or requesting more scopes, see the  xref:provider-scope[Provider scopes] section."
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Twitter provider requires Proof Key for Code Exchange (PKCE) which is supported by the `quarkus.oidc.provider=twitter` declaration.\n"
"Quarkus has to encrypt the current PKCE code verifier in a state cookie while the authorization code flow with Twitter is in progress and it will\n"
"generate a secure random secret key for encrypting it."
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid ""
"You can provide your own secret key for encrypting the PKCE code verifier if you prefer with the `quarkus.oidc.authentication.state-secret` property but\n"
"note that this secret should be 32 characters long, and an error will be reported if it is less than 16 characters long."
msgstr ""

#. type: delimited block =
#: _guides/security-openid-connect-providers.adoc
msgid "`X` is a new name for `Twitter`, see xref:x[X]. You can continue using `quarkus.oidc.provider=twitter` but it might need to be changed to `quarkus.oidc.provider=x` in the future."
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "X"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "`X` is a new name for `Twitter`. You can currently use either `quarkus.oidc.provider=x` or `quarkus.oidc.provider=twitter` but only `quarkus.oidc.provider=x` may end up supported in the future."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Please see xref:twitter[Twitter] for more information about registering your Quarkus application in `X` (`Twitter`)."
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Spotify"
msgstr "焦点网"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Create a https://developer.spotify.com/documentation/general/guides/authorization/app-settings/[Spotify application]:"
msgstr "创建一个 link:https://developer.spotify.com/documentation/general/guides/authorization/app-settings/[Spotify应用程序] 。"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "Don't forget to add `http://localhost:8080` as a redirect URI for testing during development purposes. You should get a client id and secret generated once a Spotify application setup has been complete, for example:"
msgstr "不要忘记添加 `<a href=\"http://localhost:8080\" class=\"bare\">http://localhost:8080</a>` 作为一个重定向URI，以便在开发过程中进行测试。例如，一旦Spotify应用程序设置完成，你应该得到一个客户端ID和秘密的生成。"

#: _guides/security-openid-connect-providers.adoc
msgid "`quarkus.oidc.provider=spotiify` will request `Spotify` to add `user-read-private` and `user-read-email` scopes to issued access tokens. For information about overriding these scopes or requesting more scopes, see the  xref:provider-scope[Provider scopes] section."
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, fuzzy, no-wrap
msgid "Twitch"
msgstr "推特"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Create a https://dev.twitch.tv/console/apps[Twitch application]:"
msgstr ""

#. type: Title ===
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "Discord"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Create a https://discord.com/developers/applications[Discord application]:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
#, fuzzy
msgid "You now can get your client id and secret:"
msgstr "复制你的客户ID和客户秘密。"

#. type: Title ==
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "Provider scopes"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Each provider declaration will request one or more token scopes added to access tokens issued by a given provider. For example, `quarkus.oidc.provider=google` will request `Google` to add `openid`, `email` and `profile` scopes."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "You can override these scopes with `quarkus.oidc.authentication.scopes` property, for example, if you work with `Google` and would not like to have an `email` scope added to access tokens:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "You may also want to add one or more scopes in addition to the scopes requested by default. For example, if you would like to use an access token issued by `Google` to access `Google Calendar` service, you can do it like this:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "It is simpler than using `quarkus.oidc.authentication.scopes` to add a new scope, because `quarkus.oidc.authentication.scopes` overrides the scopes already set by the provider declaration, which is why you need to list all the required scopes in this case:"
msgstr ""

#. type: Title ==
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "Support for multiple providers"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "If you would like to support authenticating users with more than one provider then a provider-specific tenant configuration resolution must be supported."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "For more information, see the Quarkus xref:security-openid-connect-multitenancy.adoc#static-tenant-resolution[Using OpenID Connect (OIDC) Multi-Tenancy] guide."
msgstr ""

#. type: Title ==
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "Access provider services with token propagation"
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid ""
"Sometimes, only authenticating users with a social provider is not enough.\n"
"A provider-specific service also needs to be accessed for the Quarkus OIDC `web-app` application to fetch or update data from the provider service on behalf of the currently authenticated user."
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid ""
"As mentioned in the xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications] guide, ID and access tokens are returned after the authorization code flow has been completed, with some providers like `GitHub` returning an access token only.\n"
"It is this access token that has to be propagated to services such as `Google Calendar`, or `Spotify Playlists` for the currently authenticated user to be able to use such services."
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid ""
"You do not have to bring provider-specific libraries in order to achieve this, but instead you can use a reactive `Token Propagation` filter, which can be bound to a given REST client with a simple annotation.\n"
"For more information, see the Quarkus xref:security-openid-connect-client-reference.adoc#token-propagation-reactive[Access token propagation] guide."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "For example, after you have configured the xref:google[Google] provider, you can have events added to the user's Google Calendar by using a REST client as shown in the following example:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "The `@AccessToken` annotation enables an access token propagation to the target service."
msgstr ""

#: _guides/security-openid-connect-providers.adoc
msgid "Finally,  you need to configure the Google Calendar address and request  the Google Calendar scope for an access token, as outlined in the following example:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Now you are ready to have users authenticated with Google and support updating their `Google` calendars on their behalf, for example:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "You must update the application registered with the xref:google[Google] provider to list `http://localhost:8080/calendar/event` as one of the authorized redirect URIs if you would like to test this endpoint on the local host, for example:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "You might also have to register one or more test users:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Follow the same approach if the endpoint must access other Google services."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "The pattern of authenticating with a given provider, where the endpoint uses either an ID token or UserInfo (especially if an OAuth2-only provider such as `GitHub` is used) to get some information about the currently authenticated user and using an access token to access some downstream services (provider or application specific ones) on behalf of this user can be universally applied, irrespectively of which provider is used to secure the application."
msgstr ""

#. type: Title ==
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "HTTPS Redirect URL"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Some providers will only accept HTTPS-based redirect URLs. Tools such as https://ngrok.com/[ngrok] https://linuxhint.com/set-up-use-ngrok/[can be set up] to help testing such providers with Quarkus endpoints running on localhost in devmode."
msgstr ""

#. type: Title ==
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "Rate Limiting"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Depending on your developer API subscription level, some providers may enforce a rather strict request rate limiting policy."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "It may not be a problem when Quarkus fetches public verification keys from OIDC-compliant providers like the xref:google[Google] provider and keeps verifying the user session with these keys locally. However, for pure OAuth2 providers where only an access token is available and which has to be verified indirectly by requesting UserInfo from the provider endpoint on every request done by an already authenticated user, it can become a problem."
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "In such cases consider xref:security-oidc-bearer-token-authentication#token-introspection-userinfo-cache[caching UserInfo], using either a default or custom cache implementation or even embedding UserInfo in an internally generated ID token which is encrypted by default, for example:"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "Cache UserInfo by embedding it in the internally generated ID token"
msgstr ""

#. type: Title ==
#: _guides/security-openid-connect-providers.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr ""

#. type: Plain text
#: _guides/security-openid-connect-providers.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
