# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with Apache Kafka"
msgstr "开始使用Apache Kafka的SmallRye Reactive Messaging。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with Apache Kafka."
msgstr "本指南演示了您的Quarkus应用程序如何利用SmallRye Reactive Messaging与Apache Kafka进行交互。"

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"In this guide, we are going to develop two applications communicating with Kafka.\n"
"The first application sends a _quote request_ to Kafka and consumes Kafka messages from the _quote_ topic.\n"
"The second application receives the _quote request_ and sends a _quote_ back."
msgstr ""

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"The first application, the _producer_, will let the user request some quotes over an HTTP endpoint.\n"
"For each quote request a random identifier is generated and returned to the user, to mark the quote request as _pending_.\n"
"At the same time, the generated request id is sent over a Kafka topic `quote-requests`."
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "The second application, the _processor_, will read from the `quote-requests` topic, put a random price to the quote, and send it to a Kafka topic named `quotes`."
msgstr "第二个应用程序，即 _处理器_ ，将从 `quote-requests` 主题中读取，给报价加上一个随机价格，并将其发送到一个名为 `quotes` 的Kafka主题。"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"Lastly, the _producer_ will read the quotes and send them to the browser using server-sent events.\n"
"The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr ""

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create applications step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "The solution is located in the `kafka-quickstart` link:{quickstarts-tree-url}/kafka-quickstart[directory]."
msgstr "该解决方案位于 `kafka-quickstart` {quickstarts-tree-url}/kafka-quickstart[目录]中。"

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "首先，我们需要创建两个项目： _生产者_ 和 _处理器_ 。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "To create the _producer_ project, in a terminal run:"
msgstr "要创建 _生产者_ 项目，在终端运行。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "This command creates the project structure and selects two Quarkus extensions we will be using:"
msgstr "这个命令创建了项目结构，并选择了我们要使用的两个Quarkus扩展。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "RESTEasy Reactive and its Jackson support (to handle JSON) to serve the HTTP endpoint."
msgstr "RESTEasy Reactive及其Jackson支持（处理JSON）为HTTP端点提供服务。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "The Kafka connector for Reactive Messaging"
msgstr "用于反应式消息传递的Kafka连接器"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "要创建 _处理器_ 项目，在同一目录下，运行。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "At that point, you should have the following structure:"
msgstr "在这一点上，你应该有以下结构。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Open the two projects in your favorite IDE."
msgstr "在你喜欢的IDE中打开这两个项目。"

#. type: Block title
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Dev Services"
msgstr "开发服务"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"No need to start a Kafka broker when using the dev mode or for tests.\n"
"Quarkus starts a broker for you automatically.\n"
"See xref:kafka-dev-services.adoc[Dev Services for Kafka] for details."
msgstr ""

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "The Quote object"
msgstr "报价对象"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"The `Quote` class will be used in both _producer_ and _processor_ projects.\n"
"For the sake of simplicity, we will duplicate the class.\n"
"In both projects, create the `src/main/java/org/acme/kafka/model/Quote.java` file, with the following content:"
msgstr ""

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"JSON representation of `Quote` objects will be used in messages sent to the Kafka topic\n"
"and also in the server-sent events sent to web browsers."
msgstr ""

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"Quarkus has built-in capabilities to deal with JSON Kafka messages.\n"
"In a following section, we will create serializer/deserializer classes for Jackson."
msgstr ""

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Sending quote request"
msgstr "发出报价请求"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Inside the _producer_ project, create the `src/main/java/org/acme/kafka/producer/QuotesResource.java` file and add the following content:"
msgstr "在 _生产者_ 项目中，创建 `src/main/java/org/acme/kafka/producer/QuotesResource.java` 文件并添加以下内容。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "注入一个Reactive Messaging `Emitter` ，向 `quote-requests` 通道发送消息。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "On a post request, generate a random UUID and send it to the Kafka topic using the emitter."
msgstr "在一个post请求中，生成一个随机的UUID并使用发射器将其发送到Kafka主题。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Return the same UUID to the client."
msgstr "向客户端返回相同的UUID。"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"The `quote-requests` channel is going to be managed as a Kafka topic, as that's the only connector on the classpath.\n"
"If not indicated otherwise, like in this example, Quarkus uses the channel name as topic name.\n"
"So, in this example, the application writes into the `quote-requests` topic.\n"
"Quarkus also configures the serializer automatically, because it finds that the `Emitter` produces `String` values."
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "When you have multiple connectors, you would need to indicate which connector you want to use in the application configuration."
msgstr "当你有多个连接器时，你需要指出你想在应用程序配置中使用哪个连接器。"

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Processing quote requests"
msgstr "处理报价请求"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"Now let's consume the quote request and give out a price.\n"
"Inside the _processor_ project, create the `src/main/java/org/acme/kafka/processor/QuotesProcessor.java` file and add the following content:"
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Indicates that the method consumes the items from the `requests` channel."
msgstr "表示该方法从 `requests` 通道消耗项目。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel."
msgstr "表示方法返回的对象被发送到 `quotes` 通道。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "表示该处理是 _阻塞的_ ，不能在调用者线程上运行。"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"For every Kafka _record_ from the `quote-requests` topic, Reactive Messaging calls the `process` method, and sends the returned `Quote` object to the `quotes` channel.\n"
"In this case, we need to configure the channel in the `application.properties` file, to configures the `requests` and `quotes` channels:"
msgstr ""

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.\n"
"The configuration keys are structured as follows:"
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr " `mp.messaging.[outgoing|incoming].{channel-name}.property=value` "

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr " `channel-name` 段必须与 `@Incoming` 和 `@Outgoing` 注释中设定的值相匹配。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "`quote-requests` -> Kafka topic from which we read the quote requests"
msgstr " `quote-requests` → Kafka主题，我们从中读取报价请求"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "`quotes` -> Kafka topic in which we write the quotes"
msgstr " `quotes` → 我们在其中写引文的卡夫卡主题"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"More details about this configuration is available on the https://kafka.apache.org/documentation/#producerconfigs[Producer configuration] and https://kafka.apache.org/documentation/#consumerconfigs[Consumer configuration] section from the Kafka documentation. These properties are configured with the prefix `kafka`.\n"
"An exhaustive list of configuration properties is available in xref:kafka.adoc#kafka-configuration[Kafka Reference Guide - Configuration]."
msgstr ""

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"`mp.messaging.incoming.requests.auto.offset.reset=earliest` instructs the application to start reading the topics from the first offset, when there is no committed offset for the consumer group.\n"
"In other words, it will also process messages sent before we start the processor application."
msgstr ""

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"There is no need to set serializers or deserializers.\n"
"Quarkus detects them, and if none are found, generates them using JSON serialization."
msgstr ""

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Receiving quotes"
msgstr "接收报价"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"Back to our _producer_ project.\n"
"Let's modify the `QuotesResource` to consume quotes from Kafka and send them back to the client via Server-Sent Events:"
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "使用 `@Channel` 修饰语注入 `quotes` 通道。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "表示内容是用 `Server Sent Events` "

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Returns the stream (_Reactive Stream_)"
msgstr "返回流 _（Reactive Stream_ ）。"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"No need to configure anything, as Quarkus will automatically associate the `quotes` channel to the `quotes` Kafka topic.\n"
"It will also generate a deserializer for the `Quote` class."
msgstr ""

#. type: Block title
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Message serialization in Kafka"
msgstr "Kafka中的消息序列化"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"In this example we used Jackson to serialize/deserialize Kafka messages.\n"
"For more options on message serialization, see xref:kafka.adoc#kafka-serialization[Kafka Reference Guide - Serialization]."
msgstr ""

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"We strongly suggest adopting a contract-first approach using a schema registry.\n"
"To learn more about how to use Apache Kafka with the schema registry and Avro, follow the\n"
"xref:kafka-schema-registry-avro.adoc[Using Apache Kafka with Schema Registry and Avro] guide."
msgstr ""

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "The HTML page"
msgstr "HTML页面"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Final touch, the HTML page requesting quotes and displaying the prices obtained over SSE."
msgstr "最后的润色，是要求报价的HTML页面，并显示通过SSE获得的价格。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Inside the _producer_ project, create the `src/main/resources/META-INF/resources/quotes.html` file with the following content:"
msgstr "在 _生产者_ 项目中，创建 `src/main/resources/META-INF/resources/quotes.html` 文件，内容如下。"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"Nothing spectacular here.\n"
"When the user clicks the button, HTTP request is made to request a quote, and a pending quote is added to the list.\n"
"On each quote received over SSE, the corresponding item in the list is updated."
msgstr ""

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Get it running"
msgstr "让它运行"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"You just need to run both applications.\n"
"In one terminal, run:"
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "In another terminal, run:"
msgstr "在另一个终端，运行。"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"Quarkus starts a Kafka broker automatically, configures the application and shares the Kafka broker instance between different applications.\n"
"See xref:kafka-dev-services.adoc[Dev Services for Kafka] for more details."
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "打开 `<a href=\"http://localhost:8080/quotes.html\" class=\"bare\">http://localhost:8080/quotes.html</a>` 在你的浏览器中，通过点击按钮要求一些报价。"

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy, no-wrap
msgid "Running in JVM or Native mode"
msgstr "在JVM或本地模式下运行"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"When not running in dev or test mode, you will need to start your Kafka broker.\n"
"You can follow the instructions from the https://kafka.apache.org/quickstart[Apache Kafka website] or create a `docker-compose.yaml` file with the following content:"
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Make sure you first build both applications in JVM mode with:"
msgstr "请确保你首先在JVM模式下构建两个应用程序，并使用。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Once packaged, run `docker-compose up`."
msgstr "一旦打包好，运行 `docker-compose up` 。"

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "This is a development cluster, do not use in production."
msgstr "这是一个开发集群，不要在生产中使用。"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"You can also build and run our applications as native executables.\n"
"First, compile both applications as native:"
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
#, fuzzy
msgid "Run the system with:"
msgstr "用以下方式运行系统。"

#. type: Title ==
#: _guides/kafka-reactive-getting-started.adoc
#, no-wrap
msgid "Going further"
msgstr "进一步探索"

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"This guide has shown how you can interact with Kafka using Quarkus.\n"
"It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr ""

#. type: Plain text
#: _guides/kafka-reactive-getting-started.adoc
msgid "For the exhaustive list of features and configuration options, check the xref:kafka.adoc[Reference guide for Apache Kafka Extension]."
msgstr ""

#: _guides/kafka-reactive-getting-started.adoc
msgid ""
"In this guide we explore Smallrye Reactive Messaging framework to interact with Apache Kafka.\n"
"Quarkus extension for Kafka also allows\n"
"xref:kafka.adoc#kafka-bare-clients[using Kafka clients directly]."
msgstr ""
