# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "Simplified MongoDB with Panache and Kotlin"
msgstr "用Panache和Kotlin简化MongoDB"

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"MongoDB is a well known NoSQL Database that is widely used. MongoDB with Panache offers a\n"
"new layer atop this familiar framework.  This guide will not dive in to the specifics of either as those are already\n"
"covered in the xref:mongodb-panache.adoc[MongoDB with Panache guide].  In this guide, we'll cover the Kotlin specific changes\n"
"needed to use MongoDB with Panache in your Kotlin-based Quarkus applications."
msgstr ""

#. type: Title ==
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "First: an example"
msgstr "第一：一个例子"

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"As we saw in the MongoDB with Panache guide, it allows us to extend the functionality in our entities and repositories (also known as DAOs) with some automatically\n"
"provided functionality.  When using Kotlin, the approach is very similar to what we see in the Java version with a slight\n"
"change or two.  To Panache-enable your entity, you would define it something like:"
msgstr ""

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"As you can see our entities remain simple.  There is, however, a slight difference from the Java version.  The Kotlin\n"
"language doesn't support the notion of static methods in quite the same way as Java does.  Instead, we must use a\n"
"https://kotlinlang.org/docs/tutorials/kotlin-for-py/objects-and-companion-objects.html#companion-objects[companion object]:"
msgstr ""

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"The companion object holds all the methods not related to a specific instance allowing for general management and\n"
"querying bound to a specific type."
msgstr ""

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"Here there are options, but we've chosen the `lateinit` approach.  This allows us to declare these fields as non-null\n"
"knowing they will be properly assigned either by the constructor (not shown) or by the MongoDB POJO codec loading data from the\n"
"database."
msgstr ""

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"These types differ from the Java types mentioned in those tutorials.  For Kotlin support, all the Panache\n"
"types will be found in the `io.quarkus.mongodb.panache.kotlin` package.  This subpackage allows for the distinction\n"
"between the Java and Kotlin variants and allows for both to be used unambiguously in a single project."
msgstr ""

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"In the Kotlin version, we've simply moved the bulk of the link:https://www.martinfowler.com/eaaCatalog/activeRecord.html[`active record pattern`]\n"
"functionality to the `companion object`.  Apart from this slight change, we can then work with our types in ways that map easily\n"
"from the Java side of world."
msgstr ""

#. type: Title ==
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "Using the repository pattern"
msgstr "使用资源库模式"

#. type: Title ===
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "Defining your entity"
msgstr "定义你的实体"

#. type: Plain text
#: _guides/mongodb-panache-kotlin.adoc
msgid "When using the repository pattern, you can define your entities as regular POJO."
msgstr "当使用存储库模式时，你可以将你的实体定义为普通的POJO。"

#. type: Title ===
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "Defining your repository"
msgstr "定义你的存储库"

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"When using Repositories, you get the exact same convenient methods as with the active record pattern, injected in your Repository,\n"
"by making them implement `PanacheMongoRepository`:"
msgstr ""

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"All the operations that are defined on `PanacheMongoEntityBase` are available on your repository, so using it\n"
"is exactly the same as using the active record pattern, except you need to inject it:"
msgstr ""

#. type: Title ===
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "Most useful operations"
msgstr "最有用的操作"

#. type: Plain text
#: _guides/mongodb-panache-kotlin.adoc
msgid "Once you have written your repository, here are the most common operations you will be able to perform:"
msgstr "编写存储库后，您可以执行以下最常见的操作："

#. type: Plain text
#: _guides/mongodb-panache-kotlin.adoc
msgid "All `list` methods have equivalent `stream` versions."
msgstr "所有 `list` 方法都有相对应的 `stream` 版本。"

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"For more examples, please consult the xref:mongodb-panache.adoc[Java version] for complete details.  Both APIs\n"
"are the same and work identically except for some Kotlin-specific tweaks to make things feel more natural to\n"
"Kotlin developers.  These tweaks include things like better use of nullability and the lack of `Optional` on API\n"
"methods."
msgstr ""

#. type: Title ==
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "Setting up and configuring MongoDB with Panache"
msgstr "使用 Panache 设置和配置 MongoDB"

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"To get started using MongoDB with Panache with Kotlin, you can, generally, follow the steps laid out in the Java tutorial.  The biggest\n"
"change to configuring your project is the Quarkus artifact to include.  You can, of course, keep the Java version if you\n"
"need but if all you need are the Kotlin APIs then include the following dependency instead:"
msgstr ""

#. type: Block title
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#: _guides/mongodb-panache-kotlin.adoc
msgid ""
"Note the addition of `-kotlin` on the end.  Generally you'll only need this version but if your project will be using\n"
"both Java and Kotlin code, you can safely include both artifacts."
msgstr ""

#. type: Block title
#: _guides/mongodb-panache-kotlin.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"
