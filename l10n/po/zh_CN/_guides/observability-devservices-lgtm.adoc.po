msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Observability Dev Services with Grafana OTel LGTM"
msgstr "使用 Grafana OTel LGTM 提供可观察性开发服务"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid ""
"This Dev Service provides the https://github.com/grafana/docker-otel-lgtm[Grafana OTel-LGTM], an `all-in-one` Docker image containing an https://opentelemetry.io/docs/collector[OpenTelemetry Collector] receiving and then forwarding telemetry data to Prometheus (metrics), Tempo (traces) and Loki (logs).\n"
"This data can then be visualized by https://github.com/grafana/grafana[Grafana]. The LGTM abbreviation stands for:"
msgstr "该开发服务提供 link:https://github.com/grafana/docker-otel-lgtm[Grafana OTel-LGTM] ，这是一个 `all-in-one` Docker 映像，包含一个 link:https://opentelemetry.io/docs/collector[OpenTelemetry 收集器] ，用于接收遥测数据，然后将数据转发给 Prometheus（度量）、Tempo（跟踪）和 Loki（日志）。这些数据随后可由 link:https://github.com/grafana/grafana[Grafana] 可视化。LGTM 缩写代表"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "L -> https://github.com/grafana/loki[Loki] (logs)"
msgstr "L → link:https://github.com/grafana/loki[洛基] （日志）"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "G -> https://github.com/grafana/grafana[Grafana] (metrics visualization)"
msgstr "G → link:https://github.com/grafana/grafana[Grafana] （度量可视化）"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "T -> https://github.com/grafana/tempo[Tempo] (traces)"
msgstr "T → link:https://github.com/grafana/tempo[节奏] （踪迹）"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "M -> https://grafana.com/oss/mimir[Mimir] (long term storage for Prometheus)"
msgstr "M → link:https://grafana.com/oss/mimir[米米尔] （普罗米修斯的长期储存地）"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Configuring your project"
msgstr "配置项目"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Add the Quarkus Grafana OTel LGTM sink (where data goes) extension to your build file:"
msgstr "在构建文件中添加 Quarkus Grafana OTel LGTM sink（数据去向）扩展："

#: _guides/observability-devservices-lgtm.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _guides/observability-devservices-lgtm.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Micrometer"
msgstr "千分尺"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The https://quarkus.io/guides/telemetry-micrometer[Micrometer Quarkus extension] provides metrics from automatic instrumentation implemented in Quarkus and its extensions."
msgstr "link:https://quarkus.io/guides/telemetry-micrometer[Micrometer Quarkus 扩展] 程序提供来自 Quarkus 及其扩展程序实施的自动仪器的度量指标。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "There are multiple ways to output Micrometer metrics. Next there are some examples:"
msgstr "有多种方法可以输出千分尺度量值。下面是一些示例："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Using the Micrometer Prometheus registry"
msgstr "使用千分尺普罗米修斯登记表"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "This is the most common way to output metrics from Micrometer and the default way in Quarkus. The Micrometer Prometheus registry will publish data in the `/q/metrics` endpoint and a scraper inside the Grafana LGTM Dev Service will grab it (*pull* data from the service)."
msgstr "这是从 Micrometer 输出指标的最常见方式，也是 Quarkus 的默认方式。Micrometer Prometheus 注册表将在 `/q/metrics` 端点中发布数据，Grafana LGTM Dev 服务中的刮板将抓取这些数据 *（* 从服务中 *提取* 数据）。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Using the Micrometer OTLP registry"
msgstr "使用千分尺 OTLP 登记表"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/micrometer-registry-otlp.html[Quarkiverse Micrometer OTLP registry] will output data using the OpenTelemetry OTLP protocol to the Grafana LGTM Dev Service. This will *push* data out of the service:"
msgstr "link:https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/micrometer-registry-otlp.html[Quarkiverse Micrometer OTLP 注册表] 将使用 OpenTelemetry OTLP 协议向 Grafana LGTM Dev 服务输出数据。这将从服务中 *推送* 数据："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "When using the https://micrometer.io/[Micrometer's] Quarkiverse OTLP registry to push metrics to Grafana OTel LGTM, the `quarkus.micrometer.export.otlp.url` property is automatically set to OTel collector endpoint as seen from the outside of the Docker container."
msgstr "使用 link:https://micrometer.io/[Micrometer 的] Quarkiverse OTLP 注册表将度量指标推送到 Grafana OTel LGTM 时，从 Docker 容器外部看到的 `quarkus.micrometer.export.otlp.url` 属性会自动设置为 OTel 收集器端点。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "OpenTelemetry"
msgstr "OpenTelemetry"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "With OpenTelemetry, metrics, traces and logs can be created and sent to the Grafana LGTM Dev Service."
msgstr "通过 OpenTelemetry，可以创建度量、跟踪和日志，并将其发送到 Grafana LGTM Dev Service。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "By default, the https://quarkus.io/guides/opentelemetry[OpenTelemetry extension] will produce https://quarkus.io/guides/opentelemetry-tracing[traces]. https://quarkus.io/guides/opentelemetry-metrics[Metrics] and https://quarkus.io/guides/opentelemetry-logging[logs] must be enabled separately."
msgstr "默认情况下， link:https://quarkus.io/guides/opentelemetry[OpenTelemetry 扩展] 将生成 link:https://quarkus.io/guides/opentelemetry-tracing[跟踪记录] 。必须单独启用 link:https://quarkus.io/guides/opentelemetry-metrics[指标] 和 link:https://quarkus.io/guides/opentelemetry-logging[日志] 。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The `quarkus-opentelemetry` extension can be added to your build file like this:"
msgstr "`quarkus-opentelemetry` 扩展名可以这样添加到构建文件中："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The `quarkus.otel.exporter.otlp.endpoint` property is automatically set to the OTel collector endpoint as seen from the outside of the Docker container."
msgstr "`quarkus.otel.exporter.otlp.endpoint` 属性会自动设置为从 Docker 容器外部看到的 OTel 收集器端点。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The `quarkus.otel.exporter.otlp.protocol` is set to `http/protobuf`."
msgstr "`quarkus.otel.exporter.otlp.protocol` 设置为 `http/protobuf` 。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Micrometer to OpenTelemetry bridge"
msgstr "千分表至 OpenTelemetry 桥接器"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "This extension provides Micrometer metrics and OpenTelemetry metrics, traces and logs. All data is managed and sent out by the OpenTelemetry extension."
msgstr "该扩展提供 Micrometer 指标和 OpenTelemetry 指标、跟踪和日志。所有数据均由 OpenTelemetry 扩展管理和发送。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "**All signals are enabled by default.**"
msgstr "*默认启用所有信号。*"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The extension can be added to your build file like this:"
msgstr "可以像这样将扩展名添加到构建文件中："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Grafana"
msgstr "Grafana"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Grafana UI access"
msgstr "访问 Grafana 用户界面"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Once you start your app in dev mode:"
msgstr "在开发模式下启动应用程序后"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "You will see a log entry like this:"
msgstr "您将看到这样一条日志记录："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Remember that Grafana is accessible in an ephemeral port, so you need to check the logs to see which port is being used. In this example, the grafana endpoint is `grafana.endpoint=http://localhost:42797`."
msgstr "请记住，Grafana 是通过短暂端口访问的，因此需要检查日志以查看使用的端口。在本例中，Grafana 端点是 `grafana.endpoint=http://localhost:42797` 。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Another option is to use the *Dev UI* (http://localhost:8080/q/dev-ui/extensions) as the Grafana URL link will be available and if selected it will open a new browser tab directly to the running Grafana instance:"
msgstr "另一种方法是使用 *开发人员用户界面* （ link:http://localhost:8080/q/dev-ui/extensions[http://localhost:8080/q/dev-ui/extensions）] ，因为将提供 Grafana URL 链接，如果选择该链接，将直接打开一个新的浏览器标签页，进入正在运行的 Grafana 实例："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Explore"
msgstr "探索"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "In the explore section, you can query the data for all the data sources."
msgstr "在探索部分，您可以查询所有数据源的数据。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "To see traces, select the `tempo` data source and query for data:"
msgstr "要查看跟踪，请选择 `tempo` 数据源并查询数据："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "For logs, select the `loki` data source and query for data:"
msgstr "对于日志，请选择 `loki` 数据源并查询数据："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The dashboards"
msgstr "仪表板"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The Dev Service includes a set of dashboards."
msgstr "开发服务包括一套仪表板。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Each dashboard is tuned for the specific application setup. The available dashboards are:"
msgstr "每个仪表盘都针对特定的应用程序设置进行了调整。可用的仪表盘有"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "*Quarkus Micrometer OpenTelemetry*: to be used with the Micrometer and OpenTelemetry extension."
msgstr "*Quarkus Micrometer OpenTelemetry* ：与 Micrometer 和 OpenTelemetry 扩展一起使用。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "*Quarkus Micrometer OTLP registry*: to be used with the Micrometer OTLP registry extension."
msgstr "*Quarkus Micrometer OTLP 注册表* ：与 Micrometer OTLP 注册表扩展一起使用。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "*Quarkus Micrometer Prometheus registry*: to be used with the Micrometer Prometheus registry extension."
msgstr "*Quarkus Micrometer Prometheus 注册表* ：与 Micrometer Prometheus 注册表扩展一起使用。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "*Quarkus OpenTelemetry Logging*: to view logs coming from the OpenTelemetry extension."
msgstr "*Quarkus OpenTelemetry 日志* ：查看来自 OpenTelemetry 扩展的日志。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Some panels in the dashboards might take a few minutes to show accurate data when their values are calculated over a sliding  time window."
msgstr "当仪表板中的某些面板的值是在滑动时间窗口中计算的，可能需要几分钟才能显示准确的数据。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Custom dashboards"
msgstr "自定义仪表板"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Users can add their own Grafana dashboards aka their configuration. All you need to do is to place a `grafana-dashboard-[your name].json` into a `META-INF/grafana` directory in your application, and LGTM DevResource will pick this up automatically, and include this dashboard configuration in the overall Grafana dashboards yaml configuration."
msgstr "用户可以添加自己的 Grafana 面板，又称其配置。您只需将 `grafana-dashboard-[your name].json` 放入应用程序中的 `META-INF/grafana` 目录，LGTM DevResource 就会自动接收，并将此仪表盘配置包含在整个 Grafana 仪表盘 yaml 配置中。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "e.g. /META-INF/grafana/grafana-dashboard-my-simple-prometheus-dashboard.json configuration file creates `My Simple Promeheus Dashboard` titled dashboard"
msgstr "例如，/META-INF/grafana/grafana-dashboard-my-simple-prometheus-dashboard.json 配置文件会创建 `My Simple Promeheus Dashboard` ，标题为 dashboard"

#: _guides/observability-devservices-lgtm.adoc
msgid "Additional configuration"
msgstr "其他配置"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "This extension will configure your `quarkus-opentelemetry` and `quarkus-micrometer-registry-otlp` extensions to send data to the OTel Collector bundled with the Grafana OTel LGTM image."
msgstr "该扩展将配置您的 `quarkus-opentelemetry` 和 `quarkus-micrometer-registry-otlp` 扩展，以便将数据发送到与 Grafana OTel LGTM 映像捆绑在一起的 OTel 收集器。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you don't want all the hassle with Dev Services (e.g. lookup and re-use of existing running containers, etc) you can simply disable Dev Services and enable just Dev Resource usage:"
msgstr "如果你不想要开发服务带来的所有麻烦（如查找和重复使用现有运行的容器等），你可以直接禁用开发服务，只启用开发资源使用："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "By default Quarkus lets Testcontainers expose random ports for Grafana and OTel, but you can force the usage of user-side fixed ports via setting the ports yourself - but then be aware of port conflicts."
msgstr "默认情况下，Quarkus 会让 Testcontainers 为 Grafana 和 OTel 暴露随机端口，但也可以通过自行设置端口来强制使用用户端固定端口，但要注意端口冲突问题。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Internal container ports stay the same; e.g. 3000 for Grafana, 4317 for OTel gRPC, 4318 for OTel HTTP, etc"
msgstr "内部容器端口保持不变；例如，3000 用于 Grafana，4317 用于 OTel gRPC，4318 用于 OTel HTTP 等。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Tests"
msgstr "测试"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "And for the least 'auto-magical' usage in the tests, simply disable both (Dev Resources are already disabled by default):"
msgstr "如果想在测试中使用最少的 \"自动魔法\"，只需禁用这两种功能即可（默认情况下已禁用 \"开发资源\"）："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "And then explicitly list LGTM Dev Resource in the test as a `@QuarkusTestResource` resource:"
msgstr "然后在测试中将 LGTM Dev Resource 明确列为 `@QuarkusTestResource` 资源："

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Testing full Grafana OTel LGTM stack - example"
msgstr "测试完整的 Grafana OTel LGTM 堆栈 - 示例"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Use existing Quarkus MicroMeter OTLP registry"
msgstr "使用现有的 Quarkus MicroMeter OTLP 注册表"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Simply inject the Meter registry into your code -- it will periodically push metrics to Grafana LGTM's OTLP HTTP endpoint."
msgstr "只需在代码中注入 Meter 注册表，它就会定期将指标推送到 Grafana LGTM 的 OTLP HTTP 端点。"

#: _guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Where you can then check Grafana's datasource API for existing metrics data."
msgstr "然后，您可以检查 Grafana 的数据源 API，查看现有的度量数据。"
