# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/funqy-amazon-lambda-http.adoc:6
#, fuzzy, no-wrap
msgid "Funqy HTTP Binding with Amazon Lambda "
msgstr "Funqy HTTP与亚马逊Lambda的绑定"

#. type: Plain text
#: upstream/_guides/funqy-amazon-lambda-http.adoc:14
#, fuzzy
msgid "If you want to allow HTTP clients to invoke on your Funqy functions on AWS Lambda, Quarkus allows you to expose multiple Funqy functions through HTTP deployed as one AWS Lambda.  This approach does add overhead over the regular Funqy AWS Lambda integration and also requires you to use AWS API Gateway."
msgstr "如果你想让HTTP客户端在AWS Lambda上调用你的Funqy函数，Quarkus允许你通过HTTP暴露多个Funqy函数，作为一个AWS Lambda部署。这种方法确实比常规的Funqy AWS Lambda集成增加了开销，而且还需要你使用AWS API Gateway。"

#. type: Plain text
#: upstream/_guides/funqy-amazon-lambda-http.adoc:19
#, fuzzy
msgid "Follow the xref:amazon-lambda-http.adoc[Amazon Lambda Http Guide].  It walks through using a variety of HTTP frameworks on Amazon Lambda, including Funqy."
msgstr "遵循 link:amazon-lambda-http.html[Amazon Lambda Http指南] 。它讲述了在Amazon Lambda上使用各种HTTP框架，包括Funqy。"

#. type: Plain text
#: upstream/_guides/funqy-amazon-lambda-http.adoc:25
#, fuzzy
msgid "The Funqy HTTP + AWS Lambda binding is not a replacement for REST over HTTP.  Because Funqy needs to be portable across a lot of different protocols and function providers its HTTP binding is very minimalistic and you will lose REST features like linking and the ability to leverage HTTP features like cache-control and conditional GETs.  You may want to consider using Quarkus's JAX-RS, Spring MVC, or Vert.x Web Reactive Route xref:amazon-lambda-http.adoc[support] instead.  They also work with Quarkus and AWS Lambda."
msgstr "Funqy HTTP + AWS Lambda绑定并不是HTTP上REST的替代品。因为Funqy需要在很多不同的协议和功能提供者之间进行移植，它的HTTP绑定是非常简约的，你将失去REST功能，如链接和利用HTTP功能的能力，如缓存控制和条件GET。你可以考虑使用Quarkus的JAX-RS、Spring MVC或Vert.x Web Reactive Route link:amazon-lambda-http.html[支持] 来代替。它们也可以与Quarkus和AWS Lambda一起工作。"

#. type: Title ==
#: upstream/_guides/funqy-amazon-lambda-http.adoc:26
#, fuzzy, no-wrap
msgid "An additional Quickstart"
msgstr "一个额外的快速入门"

#. type: Plain text
#: upstream/_guides/funqy-amazon-lambda-http.adoc:30
#, fuzzy
msgid "Beyond generating an AWS project that is covered in the xref:amazon-lambda-http.adoc[Amazon Lambda Http Guide], there's also a quickstart for running Funqy HTTP on AWS Lambda."
msgstr "除了在 link:amazon-lambda-http.html[Amazon Lambda Http指南] 中涉及的生成AWS项目，还有一个在AWS Lambda上运行Funqy HTTP的快速入门。"

#. type: Plain text
#: upstream/_guides/funqy-amazon-lambda-http.adoc:32
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个{quickstarts-archive-url}[存档]。"

#. type: Plain text
#: upstream/_guides/funqy-amazon-lambda-http.adoc:34
msgid "The solution is located in the `funqy-amazon-lambda-quickstart` {quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-http-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_guides/funqy-amazon-lambda-http.adoc:35
#, no-wrap
msgid "The Code"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-amazon-lambda-http.adoc:39
msgid "There is nothing special about the code and more importantly nothing AWS specific.  Funqy functions can be deployed to many different environments and AWS Lambda is one of them.  The Java code is actually the same exact code as the {quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[funqy-http-quickstart]."
msgstr ""

#. type: Title ==
#: upstream/_guides/funqy-amazon-lambda-http.adoc:40
#, no-wrap
msgid "Getting Started"
msgstr ""

#. type: Plain text
#: upstream/_guides/funqy-amazon-lambda-http.adoc:44
msgid "The steps to get this quickstart running are exactly the same as defined in the xref:amazon-lambda-http.adoc[Amazon Lambda HTTP Guide].  This differences are that you are running from a quickstart and the maven dependencies are slightly different."
msgstr ""

#. type: Block title
#: upstream/_guides/funqy-amazon-lambda-http.adoc:46
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_guides/funqy-amazon-lambda-http.adoc:56
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-funqy-http</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-amazon-lambda-http</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/funqy-amazon-lambda-http.adoc:59
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_guides/funqy-amazon-lambda-http.adoc:63
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-funqy-http\")\n"
"implementation(\"io.quarkus:quarkus-amazon-lambda-http\")\n"
msgstr ""
