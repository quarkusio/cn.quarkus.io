# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Using Hibernate ORM and Jakarta Persistence"
msgstr "使用Hibernate ORM和JPA"

#: _guides/hibernate-orm.adoc
msgid ""
"Hibernate ORM is the de facto standard Jakarta Persistence (formerly known as JPA) implementation and offers you the full breadth of an Object Relational Mapper.\n"
"It works beautifully in Quarkus."
msgstr ""

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/hibernate-orm.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The solution is located in the `hibernate-orm-quickstart` link:{quickstarts-tree-url}/hibernate-orm-quickstart[directory]."
msgstr "该解决方案位于 `hibernate-orm-quickstart` {quickstarts-tree-url}/hibernate-orm-quickstart[目录]中。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Setting up and configuring Hibernate ORM"
msgstr "设置和配置Hibernate ORM"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "When using Hibernate ORM in Quarkus, you don't need to have a `persistence.xml` resource to configure it."
msgstr "在Quarkus中使用Hibernate ORM时，你不需要有 `persistence.xml` 资源来配置它。"

#: _guides/hibernate-orm.adoc
msgid ""
"Using such a classic configuration file is an option, but unnecessary unless you have specific advanced needs;\n"
"so we'll see first how Hibernate ORM can be configured without a `persistence.xml` resource."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "In Quarkus, you only need to:"
msgstr "在Quarkus，你只需要。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "add your configuration settings in `{config-file}`"
msgstr "中添加你的配置设置。 `{config-file}` "

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "annotate your entities with `@Entity` and any other mapping annotation as usual"
msgstr "像往常一样用 `@Entity` 和任何其他的映射注解来注解你的实体"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Other configuration needs have been automated: Quarkus will make some opinionated choices and educated guesses."
msgstr "其他的配置需求已经自动化了。Quarkus会做出一些有意见的选择和有根据的猜测。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Add the following dependencies to your project:"
msgstr "在你的项目中添加以下依赖项。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "the Hibernate ORM extension: `io.quarkus:quarkus-hibernate-orm`"
msgstr "Hibernate ORM扩展。 `io.quarkus:quarkus-hibernate-orm` "

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "your JDBC driver extension; the following options are available:"
msgstr "你的JDBC驱动扩展；以下是可用的选项。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-db2` for link:https://www.ibm.com/products/db2-database[IBM DB2]"
msgstr " `quarkus-jdbc-db2` 用于 link:https://www.ibm.com/products/db2-database[IBM DB2]"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-derby` for link:https://db.apache.org/derby/[Apache Derby]"
msgstr " `quarkus-jdbc-derby` 为 link:https://db.apache.org/derby/[阿帕奇德比]"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-h2` for link:https://www.h2database.com/html/main.html[H2]"
msgstr " `quarkus-jdbc-h2` 为 link:https://www.h2database.com/html/main.html[H2]"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-mariadb` for link:https://mariadb.com/[MariaDB]"
msgstr " `quarkus-jdbc-mariadb` 用于 link:https://mariadb.com/[MariaDB]"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-mssql` for link:https://www.microsoft.com/en-gb/sql-server/[Microsoft SQL Server]"
msgstr " `quarkus-jdbc-mssql` 适用于 link:https://www.microsoft.com/en-gb/sql-server/[Microsoft SQL Server]"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-mysql` for link:https://www.mysql.com/[MySQL]"
msgstr " `quarkus-jdbc-mysql` 用于 link:https://www.mysql.com/[MySQL]"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-oracle` for link:https://www.oracle.com/database/[Oracle Database]"
msgstr " `quarkus-jdbc-oracle` 用于 link:https://www.oracle.com/database/[Oracle数据库]"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-postgresql` for link:https://www.postgresql.org/[PostgreSQL]"
msgstr " `quarkus-jdbc-postgresql` 用于 link:https://www.postgresql.org/[PostgreSQL]"

#. type: Plain text
#: _guides/hibernate-orm.adoc
msgid "For instance:"
msgstr "比如："

#. type: Block title
#: _guides/hibernate-orm.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/hibernate-orm.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/hibernate-orm.adoc
msgid ""
"Annotate your persistent objects with `@Entity`,\n"
"then add the relevant configuration properties in `{config-file}`."
msgstr ""

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Example `{config-file}`"
msgstr "例子 `{config-file}` "

#: _guides/hibernate-orm.adoc
msgid ""
"Note that these configuration properties are not the same ones as in your typical Hibernate ORM configuration file.\n"
"They will often map to Hibernate ORM configuration properties but could have different names and don't necessarily map 1:1 to each other."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Also, Quarkus will set many Hibernate ORM configuration settings automatically, and will often use more modern defaults."
msgstr "另外，Quarkus会自动设置许多Hibernate ORM的配置设置，并经常使用更现代的默认值。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "For a list of the items that you can set in `{config-file}`, see xref:hibernate-configuration-properties[Hibernate ORM configuration properties]."
msgstr "关于你可以在 `{config-file}` 中设置的项目列表，请参见 link:#hibernate-configuration-properties[Hibernate ORM配置属性] 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "An `EntityManagerFactory` will be created based on the Quarkus `datasource` configuration as long as the Hibernate ORM extension is listed among your project dependencies."
msgstr "只要Hibernate ORM扩展被列在你的项目依赖中，就会根据Quarkus `datasource` 配置创建一个 `EntityManagerFactory` 。"

#: _guides/hibernate-orm.adoc
msgid ""
"The dialect will be selected and configured automatically based on your datasource;\n"
"you may want to xref:hibernate-dialect[configure it to more precisely match your database]."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "You can then happily inject your `EntityManager`:"
msgstr "然后，你可以愉快地注入你的 `EntityManager` 。"

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Example application bean using Hibernate"
msgstr "使用Hibernate的应用豆实例"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Inject your entity manager and have fun"
msgstr "注入你的实体管理人并获得乐趣"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Mark your CDI bean method as `@Transactional` and the `EntityManager` will enlist and flush at commit."
msgstr "将你的CDI Bean方法标记为 `@Transactional` ， `EntityManager` ，并在提交时进行enlist和flush。"

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Example Entity"
msgstr "实体实例"

#: _guides/hibernate-orm.adoc
msgid ""
"To load SQL statements when Hibernate ORM starts, add an `import.sql` file to the root of your `resources` directory.\n"
"This script can contain any SQL DML statements.\n"
"Make sure to terminate each statement with a semicolon."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "This is useful to have a data set ready for your tests or demos."
msgstr "这对于为你的测试或演示准备一个数据集是很有用的。"

#: _guides/hibernate-orm.adoc
msgid ""
"Make sure to wrap methods modifying your database (e.g. `entity.persist()`) within a transaction. Marking a\n"
"CDI bean method `@Transactional` will do that for you and make that method a transaction boundary. We recommend doing\n"
"so at your application entry point boundaries like your REST endpoint controllers."
msgstr "请确保修改数据库的方法（例如： `entity.persist()` ）处于同一个事务中。给一个CDI bean方法增加 `@Transactional` 注解，可以确保该方法即事务边界。我们建议在应用端点的边界这样做，比如REST端点的Controller。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Dialect"
msgstr "方言"

#. type: Title ====
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Supported databases"
msgstr "支持的数据库"

#: _guides/hibernate-orm.adoc
msgid ""
"For xref:datasource.adoc#extensions-and-database-drivers-reference[supported databases],\n"
"the link:{hibernate-orm-docs-url}#database-dialect[Hibernate ORM dialect]\n"
"does not need to be set explicitly:\n"
"it is selected automatically based on the datasource."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "By default, the dialect is configured to target the minimum supported version of the database."
msgstr "默认情况下，方言被配置为针对数据库的最小支持版本。"

#: _guides/hibernate-orm.adoc
msgid ""
"In order for Hibernate ORM to generate more efficient SQL,\n"
"to avoid workarounds and to take advantage of more database features,\n"
"you can set the database version explicitly:"
msgstr ""

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "`{config-file}` with an explicit `db-version`"
msgstr " `{config-file}` 有一个明确的 `db-version` "

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Set the database version. The Hibernate ORM dialect will target that version."
msgstr "设置数据库的版本。Hibernate ORM方言将针对该版本。"

#: _guides/hibernate-orm.adoc
msgid ""
"As a rule, the version set here should be as high as possible,\n"
"but must be lower than or equal to the version of any database your application will connect to."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"When a version is set explicitly,\n"
"Quarkus will try to check this version against the actual database version on startup,\n"
"leading to a startup failure when the actual version is lower."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"This is because Hibernate ORM may generate SQL that is invalid\n"
"for versions of the database older than what is configured,\n"
"which would lead to runtime exceptions."
msgstr ""

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "If the database cannot be reached, a warning will be logged but startup will proceed."
msgstr "如果不能到达数据库，将记录一个警告，但启动将继续。"

#. type: Title ====
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Other databases"
msgstr "其他数据库"

#: _guides/hibernate-orm.adoc
msgid ""
"If xref:datasource.adoc#other-databases[your database does not have a corresponding Quarkus extension],\n"
"or if the defaults do not match your needs for some reason,\n"
"you will need to set the link:{hibernate-orm-docs-url}#database-dialect[Hibernate ORM dialect] explicitly:"
msgstr ""

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "`{config-file}` with an explicit `dialect`"
msgstr " `{config-file}` 有一个明确的 `dialect` "

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Set the Hibernate ORM dialect."
msgstr "设置Hibernate ORM方言。"

#: _guides/hibernate-orm.adoc
msgid ""
"In that case, keep in mind that the JDBC driver or Hibernate ORM dialect\n"
"may not work properly in GraalVM native executables."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"As with xref:hibernate-dialect-supported-databases[supported databases],\n"
"you can configure the DB version explicitly to get the most out of Hibernate ORM:"
msgstr ""

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "`{config-file}` with an explicit `dialect` and `db-version`"
msgstr " `{config-file}` 有一个明确的 和 `dialect` `db-version` "

#: _guides/hibernate-orm.adoc
msgid ""
"Set the database version. The Hibernate ORM dialect will target that version.\n"
"Since we're targeting CockroachDB here, we're passing the CockroachDB version, not the PostgreSQL version."
msgstr ""

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Hibernate ORM configuration properties"
msgstr "Hibernate ORM配置属性"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "There are various optional properties useful to refine your `EntityManagerFactory` or guide guesses of Quarkus."
msgstr "有各种可选的属性，对完善你的 `EntityManagerFactory` ，或指导猜测Quarkus很有用。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "There are no required properties, as long as a default datasource is configured."
msgstr "只要配置了一个默认的数据源，就没有必要的属性。"

#: _guides/hibernate-orm.adoc
msgid ""
"When no property is set, Quarkus can typically infer everything it needs to set up Hibernate ORM\n"
"and will have it use the default datasource."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The configuration properties listed here allow you to override such defaults, and customize and tune various aspects."
msgstr "这里列出的配置属性允许你覆盖这些默认值，并自定义和调整各方面。"

#: _guides/hibernate-orm.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"Do not mix xref:persistence-xml[`persistence.xml`] and `quarkus.hibernate-orm.*` properties in `{config-file}`.\n"
"Quarkus will raise an exception.\n"
"Make up your mind on which approach you want to use."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"If your classpath contains a `persistence.xml` that you want to ignore,\n"
"set the following configuration property:"
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Want to start a PostgreSQL server on the side with Docker?"
msgstr "想用Docker启动一个PostgreSQL服务器吗？"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "This will start a non-durable empty database: ideal for a quick experiment!"
msgstr "这将启动一个非持久性的空数据库：是快速实验的理想选择。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Multiple persistence units"
msgstr "多个持久性单元"

#. type: Title ====
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Setting up multiple persistence units"
msgstr "设置多个持久性单元"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "It is possible to define multiple persistence units using the Quarkus configuration properties."
msgstr "可以使用Quarkus配置属性来定义多个持久化单元。"

#: _guides/hibernate-orm.adoc
msgid ""
"The properties at the root of the `quarkus.hibernate-orm.` namespace define the default persistence unit.\n"
"For instance, the following snippet defines a default datasource and a default persistence unit:"
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Using a map based approach, it is possible to define named persistence units:"
msgstr "使用基于地图的方法，有可能定义命名的持久化单元。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Define a datasource named `users`."
msgstr "定义一个名为 `users` 的数据源。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Define a datasource named `inventory`."
msgstr "定义一个名为 `inventory` 的数据源。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Define a persistence unit called `users`."
msgstr "定义一个名为 `users` 的持久化单元。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Define the datasource used by the persistence unit."
msgstr "定义持久化单元所使用的数据源。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "This configuration property is important, but we will discuss it a bit later."
msgstr "这个配置属性很重要，但我们稍后会讨论它。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Define a persistence unit called `inventory` pointing to the `inventory` datasource."
msgstr "定义一个名为 `inventory` 的持久化单元，指向 `inventory` 数据源。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "You can mix the default datasource and named datasources or only have one or the other."
msgstr "你可以混合使用默认数据源和命名数据源，也可以只使用其中一种。"

#: _guides/hibernate-orm.adoc
msgid ""
"The default persistence unit points to the default datasource by default.\n"
"For named persistence units, the `datasource` property is mandatory.\n"
"You can point your persistence unit to the default datasource by setting it to `<default>`\n"
"(which is the internal name of the default datasource)."
msgstr ""

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "It is perfectly valid to have several persistence units pointing to the same datasource."
msgstr "有几个持久化单元指向同一个数据源是完全有效的。"

#. type: Title ====
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Attaching model classes to persistence units"
msgstr "将模型类附加到持久性单元"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "There are two ways to attach model classes to persistence units, and they should not be mixed:"
msgstr "有两种方法可以将模型类附加到持久化单元上，它们不应该被混合使用。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Via the `packages` configuration property;"
msgstr "通过 `packages` 配置属性。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Via the `@io.quarkus.hibernate.orm.PersistenceUnit` package-level annotation."
msgstr "通过 `@io.quarkus.hibernate.orm.PersistenceUnit` 包级注解。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "If both are mixed, the annotations are ignored and only the `packages` configuration properties are taken into account."
msgstr "如果两者混合在一起，注释将被忽略，只考虑 `packages` 配置属性。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Using the `packages` configuration property is simple:"
msgstr "使用 `packages` 配置属性很简单。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "This configuration snippet will create two persistence units:"
msgstr "这个配置片段将创建两个持久化单元。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The default one which will contain all the model classes under the `org.acme.model.defaultpu` package, subpackages included."
msgstr "默认的将包含 `org.acme.model.defaultpu` 包下的所有模型类，包括子包。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "A named `users` persistence unit which will contain all the model classes under the `org.acme.model.user` package, subpackages included."
msgstr "一个名为 `users` 的持久化单元，它将包含 `org.acme.model.user` 包下的所有模型类，包括子包。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "You can attach several packages to a persistence unit:"
msgstr "你可以在一个持久化单元上附加几个包。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "All the model classes under the `org.acme.model.shared` and `org.acme.model.user` packages will be attached to the `users` persistence unit."
msgstr " `org.acme.model.shared` 和 `org.acme.model.user` 包下的所有模型类将被附加到 `users` 持久性单元。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "It is also supported to attach a given model class to several persistence units."
msgstr "它也支持将一个给定的模型类附加到几个持久化单元。"

#: _guides/hibernate-orm.adoc
msgid ""
"Model classes need to be consistently added to a given persistence unit.\n"
"That meant that all dependent model classes of a given entity (mapped super classes, embeddables...) are required to be attached to the persistence unit.\n"
"As we are dealing with the persistence unit at the package level, it should be simple enough."
msgstr ""

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Panache entities can be attached to only one persistence unit."
msgstr "Panache实体只能连接到一个持久性单元。"

#: _guides/hibernate-orm.adoc
msgid ""
"For entities attached to several persistence units, you cannot use Panache.\n"
"You can mix the two approaches though and mix Panache entities and traditional entities where multiple persistence units are required."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"If you have a use case for that and clever ideas about how to implement it without cluttering the simplified Panache approach,\n"
"contact us on the link:{quarkus-mailing-list-index}[quarkus-dev mailing list]."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"The second approach to attach model classes to a persistence unit is to use package-level `@io.quarkus.hibernate.orm.PersistenceUnit` annotations.\n"
"Again, the two approaches cannot be mixed."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "To obtain a configuration similar to the one above with the `packages` configuration property, create a `package-info.java` file with the following content:"
msgstr "为了获得类似于上述 `packages` 配置属性的配置，请创建一个 `package-info.java` 文件，内容如下。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Be careful, use the `@io.quarkus.hibernate.orm.PersistenceUnit` annotation, not the Jakarta Persistence one."
msgstr "请注意，使用 `@io.quarkus.hibernate.orm.PersistenceUnit` 注解，而不是JPA注解。"

#: _guides/hibernate-orm.adoc
msgid ""
"We only support defining the `@PersistenceUnit` for model classes at the package level,\n"
"using the `@PersistenceUnit` annotation at the class level is not supported in this case."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Note that, similarly to what we do with the configuration property, we take into account the annotated package but also all its subpackages."
msgstr "请注意，与我们对配置属性所做的类似，我们不仅考虑到被注释的包，还考虑到它的所有子包。"

#. type: Title ====
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "CDI integration"
msgstr "CDI整合"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "If you are familiar with using Hibernate ORM in Quarkus, you probably already have injected the `EntityManager` using CDI:"
msgstr "如果你熟悉在Quarkus中使用Hibernate ORM，你可能已经使用CDI注入了 `EntityManager` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "This will inject the `EntityManager` of the default persistence unit."
msgstr "这将注入默认持久化单元的 `EntityManager` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Injecting the `EntityManager` of a named persistence unit (`users` in our example) is as simple as:"
msgstr "注入一个命名的持久化单元（ `users` 在我们的例子中）的 `EntityManager` ，就像这样简单。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Here again, we use the same `@io.quarkus.hibernate.orm.PersistenceUnit` annotation."
msgstr "在这里，我们再次使用相同的 `@io.quarkus.hibernate.orm.PersistenceUnit` 注释。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "You can inject the `EntityManagerFactory` of a named persistence unit using the exact same mechanism:"
msgstr "你可以使用完全相同的机制注入一个命名的持久化单元的 `EntityManagerFactory` 。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Setting up and configuring Hibernate ORM with a `persistence.xml`"
msgstr "设置和配置Hibernate ORM与一个 `persistence.xml` "

#: _guides/hibernate-orm.adoc
msgid ""
"Alternatively, you can use a `META-INF/persistence.xml` to set up Hibernate ORM.\n"
"This is useful for:"
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "migrating existing code"
msgstr "迁移现有代码"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "when you have relatively complex settings requiring the full flexibility of the configuration"
msgstr "当你有相对复杂的设置需要配置的全部灵活性时"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "or if you like it the good old way"
msgstr "或者，如果你喜欢用老方法"

#: _guides/hibernate-orm.adoc
msgid ""
"If you use a `persistence.xml`, then you cannot use the `quarkus.hibernate-orm.*` properties\n"
"and only persistence units defined in `persistence.xml` will be taken into account."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"Your `pom.xml` dependencies as well as your Java code would be identical to the precedent example. The only\n"
"difference is that you would specify your Hibernate ORM configuration in `META-INF/persistence.xml`:"
msgstr ""

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Example persistence.xml resource"
msgstr "例子 persistence.xml 资源"

#: _guides/hibernate-orm.adoc
msgid ""
"When using the `persistence.xml` configuration you are configuring Hibernate ORM directly,\n"
"so in this case the appropriate reference is the link:{hibernate-orm-docs-url}#configurations[documentation on hibernate.org]."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"Please remember these are not the same property names as the ones used in the Quarkus `{config-file}`, nor will\n"
"the same defaults be applied."
msgstr ""

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "XML mapping"
msgstr "XML映射"

#: _guides/hibernate-orm.adoc
msgid ""
"Hibernate ORM in Quarkus supports XML mapping.\n"
"You can add mapping files following\n"
"the https://jakarta.ee/specifications/persistence/3.0/jakarta-persistence-spec-3.0.html#a16944[`orm.xml` format (Jakarta Persistence)]\n"
"or the http://hibernate.org/dtd/hibernate-mapping-3.0.dtd[`hbm.xml` format (specific to Hibernate ORM, deprecated)]:"
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "in `application.properties` through the (build-time) link:#quarkus-hibernate-orm_quarkus.hibernate-orm.mapping-files[`quarkus.hibernate-orm.mapping-files`] property."
msgstr "在 `application.properties` ，通过（构建时间）的 link:#quarkus-hibernate-orm_quarkus.hibernate-orm.mapping-files[`quarkus.hibernate-orm.mapping-files`] 属性。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "in xref:persistence-xml[`persistence.xml`] through the `<mapping-file>` element."
msgstr "在 link:#persistence-xml[`persistence.xml`] 通过 `<mapping-file>` 元素。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "XML mapping files are parsed at build time."
msgstr "XML映射文件在构建时被解析。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The file `META-INF/orm.xml` will always be included by default, if it exists in the classpath."
msgstr "文件 `META-INF/orm.xml` ，如果它存在于classpath中，将总是被默认包含。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "If that is not what you want, use `quarkus.hibernate-orm.mapping-files = no-file` or `<mapping-file>no-file</mapping-file>`."
msgstr "如果这不是你想要的，请使用 `quarkus.hibernate-orm.mapping-files = no-file` 或 `<mapping-file>no-file</mapping-file>` 。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, no-wrap
msgid "Defining entities in external projects or jars"
msgstr "在外部项目或jar中定义实体"

#: _guides/hibernate-orm.adoc
msgid ""
"Hibernate ORM in Quarkus relies on compile-time bytecode enhancements to your entities. If you define your entities in the\n"
"same project where you build your Quarkus application, everything will work fine."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"If the entities come from external projects\n"
"or jars, you can make sure that your jar is treated like a Quarkus application library by adding an empty `META-INF/beans.xml` file."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "This will allow Quarkus to index and enhance your entities as if they were inside the current project."
msgstr "这将允许Quarkus对你的实体进行索引和增强，就像它们在当前项目中一样。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Hibernate ORM in development mode"
msgstr "开发模式下的Hibernate ORM"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Quarkus development mode is really useful for applications that mix front end or services and database access."
msgstr "Quarkus开发模式对于混合了前端或服务和数据库访问的应用程序来说确实非常有用。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "There are a few common approaches to make the best of it."
msgstr "有几种常见的方法可以使其达到最佳效果。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The first choice is to use `quarkus.hibernate-orm.database.generation=drop-and-create` in conjunction with `import.sql`."
msgstr "第一种选择是将 `quarkus.hibernate-orm.database.generation=drop-and-create` ，与 `import.sql` 。"

#: _guides/hibernate-orm.adoc
msgid ""
"That way for every change to your app and in particular to your entities, the database schema will be properly recreated\n"
"and your data fixture (stored in `import.sql`) will be used to repopulate it from scratch.\n"
"This is best to perfectly control your environment and works magic with Quarkus live reload mode:\n"
"your entity changes or any change to your `import.sql` is immediately picked up and the schema updated without restarting the application!"
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"By default, in `dev` and `test` modes, Hibernate ORM, upon boot, will read and execute the SQL statements in the `/import.sql` file (if present).\n"
"You can change the file name by changing the property `quarkus.hibernate-orm.sql-load-script` in `application.properties`."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"The second approach is to use `quarkus.hibernate-orm.database.generation=update`.\n"
"This approach is best when you do many entity changes but\n"
"still need to work on a copy of the production data\n"
"or if you want to reproduce a bug that is based on specific database entries.\n"
"`update` is a best effort from Hibernate ORM and will fail in specific situations\n"
"including altering your database structure which could lead to data loss.\n"
"For example if you change structures which violate a foreign key constraint, Hibernate ORM might have to bail out.\n"
"But for development, these limitations are acceptable."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"The third approach is to use `quarkus.hibernate-orm.database.generation=none`.\n"
"This approach is best when you are working on a copy of the production data but want to fully control the schema evolution.\n"
"Or if you use a database schema migration tool like xref:flyway.adoc[Flyway] or xref:liquibase.adoc[Liquibase]."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"With this approach when making changes to an entity, make sure to adapt the database schema accordingly;\n"
"you could also use `validate` to have Hibernate verify the schema matches its expectations."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Do not use `quarkus.hibernate-orm.database.generation` `drop-and-create` and `update` in your production environment."
msgstr "不要在你的生产环境中使用 `quarkus.hibernate-orm.database.generation` `drop-and-create` 和 `update` 。"

#: _guides/hibernate-orm.adoc
msgid ""
"These approaches become really powerful when combined with Quarkus configuration profiles.\n"
"You can define different xref:config-reference.adoc#profiles[configuration profiles]\n"
"to select different behaviors depending on your environment.\n"
"This is great because you can define different combinations of Hibernate ORM properties matching the development style you currently need."
msgstr ""

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "application.properties"
msgstr "应用程序.属性"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "You can start dev mode using a custom profile:"
msgstr "你可以使用自定义配置文件启动开发模式。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Hibernate ORM in production mode"
msgstr "生产模式下的Hibernate ORM"

#: _guides/hibernate-orm.adoc
msgid ""
"Quarkus comes with default profiles (`dev`, `test` and `prod`).\n"
"And you can add your own custom profiles to describe various environments (`staging`, `prod-us`, etc)."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The Hibernate ORM Quarkus extension sets some default configurations differently in dev and test modes than in other environments."
msgstr "Hibernate ORM Quarkus扩展在开发和测试模式下设置的一些默认配置与其他环境下不同。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus.hibernate-orm.sql-load-script` is set to `no-file` for all profiles except the `dev` and `test` ones."
msgstr " `quarkus.hibernate-orm.sql-load-script` 除了 和 ，所有的配置文件都被设置为 。 `dev` `test` `no-file` "

#: _guides/hibernate-orm.adoc
msgid ""
"You can override it in your `application.properties` explicitly\n"
"(e.g. `%prod.quarkus.hibernate-orm.sql-load-script = import.sql`)\n"
"but we wanted you to avoid overriding your database by accident in prod :)"
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"Speaking of, make sure to not drop your database schema in production!\n"
"Add the following in your properties file."
msgstr ""

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Automatically transitioning to Flyway to Manage Schemas"
msgstr "自动过渡到Flyway来管理模式"

#: _guides/hibernate-orm.adoc
msgid ""
"If you have the xref:flyway.adoc[Flyway extension] installed when running in development mode, Quarkus provides a simple way to turn\n"
"your Hibernate ORM auto generated schema into a Flyway migration file. This is intended to make is easy to move from\n"
"the early development phase, where Hibernate can be used to quickly set up the schema, to the production phase, where\n"
"Flyway is used to manage schema changes."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"To use this feature simply open the Dev UI when the `quarkus-flyway` extension is installed and click in the `Datasources`\n"
"link in the Flyway pane. Hit the `Create Initial Migration` button and the following will happen:"
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "A `db/migration/V1.0.0__\\{appname\\}.sql` file will be created, containing the SQL Hibernate is running to generate the schema"
msgstr "将创建一个 `db/migration/V1.0.0__{appname}.sql` 文件，其中包含Hibernate正在运行的SQL，以生成模式。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus.flyway.baseline-on-migrate` will be set, telling Flyway to automatically create its baseline tables"
msgstr " `quarkus.flyway.baseline-on-migrate` 将被设置，告诉Flyway自动创建其基线表"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus.flyway.migrate-at-start` will be set, telling Flyway to automatically apply migrations on application startup"
msgstr " `quarkus.flyway.migrate-at-start` 将被设置，告诉Flyway在应用程序启动时自动应用迁移。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "`%dev.quarkus.flyway.clean-at-start` and `%test.quarkus.flyway.clean-at-start` will be set, to clean the DB after reload in dev/test mode"
msgstr " `%dev.quarkus.flyway.clean-at-start` 和 ，以便在dev/test模式下重新加载后清理DB。 ``%test.quarkus.flyway.clean-at-start` "

#: _guides/hibernate-orm.adoc
msgid ""
"This button is simply a convenience to quickly get you started with Flyway, it is up to you to determine how you want to\n"
"manage your database schemas in production. In particular the `migrate-at-start` setting may not be right for all environments."
msgstr ""

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Caching"
msgstr "缓存"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Applications that frequently read the same entities can see their performance improved when the Hibernate ORM second-level cache is enabled."
msgstr "当启用Hibernate ORM二级缓存时，经常读取相同实体的应用程序可以看到其性能得到改善。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Caching of entities"
msgstr "缓存的实体"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "To enable second-level cache, mark the entities that you want cached with `@jakarta.persistence.Cacheable`:"
msgstr "要启用二级缓存，请用 `@javax.persistence.Cacheable` 标记您想要缓存的实体。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "When an entity is annotated with `@Cacheable`, all its field values are cached except for collections and relations to other entities."
msgstr "当一个实体被注解为 `@Cacheable` ，除了集合和与其他实体的关系，它的所有字段值都被缓存。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "This means the entity can be loaded without querying the database, but be careful as it implies the loaded entity might not reflect recent changes in the database."
msgstr "这意味着可以在不查询数据库的情况下加载实体，但要小心，因为这意味着加载的实体可能无法反映数据库中最近的变化。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Caching of collections and relations"
msgstr "集合和关系的缓存"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Collections and relations need to be individually annotated to be cached; in this case the Hibernate specific `@org.hibernate.annotations.Cache` should be used, which requires also to specify the `CacheConcurrencyStrategy`:"
msgstr "集合和关系需要单独注释才能被缓存；在这种情况下，应该使用Hibernate特有的 `@org.hibernate.annotations.Cache` ，这也需要指定 `CacheConcurrencyStrategy` 。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Caching of queries"
msgstr "缓存查询"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Queries can also benefit from second-level caching. Cached query results can be returned immediately to the caller, avoiding to run the query on the database."
msgstr "查询也可以从第二级缓存中受益。缓存的查询结果可以立即返回给调用者，避免了在数据库上运行查询。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Be careful as this implies the results might not reflect recent changes."
msgstr "要小心，因为这意味着结果可能不反映最近的变化。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "To cache a query, mark it as cacheable on the `Query` instance:"
msgstr "要缓存一个查询，在 `Query` 实例上把它标记为可缓存。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "If you have a `NamedQuery` then you can enable caching directly on its definition, which will usually be on an entity:"
msgstr "如果你有一个 `NamedQuery` ，那么你可以直接在其定义上启用缓存，这通常是在一个实体上。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "That's all! Caching technology is already integrated and enabled by default in Quarkus, so it's enough to set which ones are safe to be cached."
msgstr "这就是全部!缓存技术已经在Quarkus中集成并默认启用，所以只需设置哪些是安全的缓存。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Tuning of Cache Regions"
msgstr "缓存区域的调整"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Caches store the data in separate regions to isolate different portions of data; such regions are assigned a name, which is useful for configuring each region independently, or to monitor their statistics."
msgstr "缓存将数据存储在不同的区域中，以隔离不同的数据部分；这些区域被分配了一个名称，这对于独立配置每个区域或监控它们的统计数据很有用。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "By default, entities are cached in regions named after their fully qualified name, e.g. `org.acme.Country`."
msgstr "默认情况下，实体被缓存在以其全称命名的区域中，例如： `org.acme.Country` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Collections are cached in regions named after the fully qualified name of their owner entity and collection field name, separated by `#` character, e.g. `org.acme.Country#cities`."
msgstr "收藏品被缓存在以其所有者实体的全称和收藏品字段名命名的区域中，用 `#` 字符分隔，例如： `org.acme.Country#cities` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "All cached queries are by default kept in a single region dedicated to them called `default-query-results-region`."
msgstr "默认情况下，所有的缓存查询都保存在一个专门的区域内，称为 `default-query-results-region` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "All regions are bounded by size and time by default. The defaults are `10000` max entries, and `100` seconds as maximum idle time."
msgstr "所有区域都默认以大小和时间为界限。默认情况下， `10000` 最大条目， `100` 秒作为最大空闲时间。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The size of each region can be customized via the `quarkus.hibernate-orm.cache.\"<region_name>\".memory.object-count` property (Replace _<region_name>_ with the actual region name)."
msgstr "每个区域的大小可以通过 `quarkus.hibernate-orm.cache.\"<region_name>\".memory.object-count` 属性来定制（用实际的区域名称替换 _<region_name>_ ）。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "To set the maximum idle time, provide the duration (see note on duration's format below) via the `quarkus.hibernate-orm.cache.\"<region_name>\".expiration.max-idle` property (Replace _<region_name>_ with the actual region name)."
msgstr "要设置最大空闲时间，通过 `quarkus.hibernate-orm.cache.\"<region_name>\".expiration.max-idle` 属性提供持续时间（见下文关于持续时间格式的说明）（用实际区域名称替换 _<region_name>_ ）。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The double quotes are mandatory if your region name contains a dot. For instance:"
msgstr "如果你的区域名称包含一个点，那么双引号是必须的。例如。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Limitations of Caching"
msgstr "缓存的局限性"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The caching technology provided within Quarkus is currently quite rudimentary and limited."
msgstr "Quarkus中提供的缓存技术目前是相当初级和有限的。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The team thought it was better to have _some_ caching capability to start with, than having nothing; you can expect better caching solution to be integrated in future releases, and any help and feedback in this area is very welcome."
msgstr "团队认为一开始就有 _一些_ 缓存能力，比什么都没有要好；你可以期待在未来的版本中集成更好的缓存解决方案，我们非常欢迎在这方面的任何帮助和反馈。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "These caches are kept locally, so they are not invalidated or updated when changes are made to the persistent store by other applications."
msgstr "这些缓存被保存在本地，所以当其他应用程序对持久性存储进行更改时，它们不会被废止或更新。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Also, when running multiple copies of the same application (in a cluster, for example on Kubernetes/OpenShift), caches in separate copies of the application aren't synchronized."
msgstr "此外，当运行同一应用程序的多个副本时（在集群中，例如在Kubernetes/OpenShift上），应用程序的不同副本中的缓存并不同步。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "For these reasons, enabling caching is only suitable when certain assumptions can be made: we strongly recommend that only entities, collections and queries which never change are cached. Or at most, that when indeed such an entity is mutated and allowed to be read out of date (stale) this has no impact on the expectations of the application."
msgstr "由于这些原因，只有在可以做出某些假设的情况下，启用缓存才是合适的：我们强烈建议，只有永远不会改变的实体、集合和查询被缓存。或者最多，当这样的实体确实发生变化并被允许读出过时（stale）时，这对应用程序的预期没有影响。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Following this advice guarantees applications get the best performance out of the second-level cache and yet avoid unexpected behaviour."
msgstr "遵循这个建议可以保证应用程序从二级缓存中获得最好的性能，同时又能避免意外行为。"

#: _guides/hibernate-orm.adoc
msgid ""
"On top of immutable data, in certain contexts it might be acceptable to enable caching also on mutable data; this could be a necessary tradeoff on selected\n"
" entities which are read frequently and for which some degree of staleness is acceptable; this \" acceptable degree of staleness\" can be tuned by setting eviction properties.\n"
" This is however not recommended and should be done with extreme care, as it might\n"
" produce unexpected and unforeseen effects on the data."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Rather than enabling caching on mutable data, ideally a better solution would be to use a clustered cache; however at this time Quarkus doesn't provide any such implementation: feel free to get in touch and let this need known so that the team can take this into account."
msgstr "与其在易变数据上启用缓存，理想情况下，更好的解决方案是使用集群缓存；但目前Quarkus没有提供任何这样的实现：请随时联系并告知这一需求，以便团队能够考虑到这一点。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Finally, the second-level cache can be disabled globally by setting `hibernate.cache.use_second_level_cache` to `false`; this is a setting that needs to be specified in the `persistence.xml` configuration file."
msgstr "最后，可以通过将 `hibernate.cache.use_second_level_cache` 设置为 `false` 来全局禁用二级缓存；这是一个需要在 `persistence.xml` 配置文件中指定的设置。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "When second-level cache is disabled, all cache annotations are ignored and all queries are run ignoring caches; this is generally useful only to diagnose issues."
msgstr "当二级缓存被禁用时，所有的缓存注释都会被忽略，所有的查询都会忽略缓存的运行；这通常只对诊断问题有用。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Hibernate Envers"
msgstr "冬眠的环境"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The Envers extension to Hibernate ORM aims to provide an easy auditing / versioning solution for entity classes."
msgstr "Hibernate ORM的Envers扩展旨在为实体类提供一个简单的审计/版本管理解决方案。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "In Quarkus, Envers has a dedicated Quarkus Extension `io.quarkus:quarkus-hibernate-envers`; you just need to add this to your project to start using it."
msgstr "在Quarkus中，Envers有一个专门的Quarkus扩展 `io.quarkus:quarkus-hibernate-envers` ；你只需要把它添加到你的项目中就可以开始使用它。"

#. type: Block title
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Additional dependency to enable Hibernate Envers"
msgstr "启用Hibernate Envers的额外依赖性"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "At this point the extension does not expose additional configuration properties."
msgstr "在这一点上，该扩展并没有暴露出额外的配置属性。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "For more information about Hibernate Envers, see link:https://hibernate.org/orm/envers/[hibernate.org/orm/envers/]."
msgstr "关于Hibernate Envers的更多信息，见 link:https://hibernate.org/orm/envers/[hibernate.org/orm/envers/] 。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, no-wrap
msgid "Metrics"
msgstr "指标"

#: _guides/hibernate-orm.adoc
msgid ""
"Either xref:telemetry-micrometer.adoc[Micrometer] or xref:microprofile-metrics.adoc[SmallRye Metrics] are\n"
"capable of exposing metrics that Hibernate ORM collects at runtime. To enable exposure of Hibernate metrics\n"
"on the `/q/metrics` endpoint, make sure your project depends on a metrics extension and set the configuration property `quarkus.hibernate-orm.metrics.enabled` to `true`.\n"
"When using link:microprofile-metrics[SmallRye Metrics], metrics will be available under the `vendor` scope."
msgstr ""

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Limitations and other things you should know"
msgstr "限制和其他你应该知道的事情"

#: _guides/hibernate-orm.adoc
msgid ""
"Quarkus does not modify the libraries it uses; this rule applies to Hibernate ORM as well: when using\n"
"this extension you will mostly have the same experience as using the original library."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"But while they share the same code, Quarkus does configure some components automatically and injects custom implementations\n"
"for some extension points; this should be transparent and useful but if you're an expert of Hibernate you might want to\n"
"know what is being done."
msgstr ""

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Automatic build time enhancement"
msgstr "自动构建时间增强"

#: _guides/hibernate-orm.adoc
msgid ""
"Hibernate ORM can use build time enhanced entities; normally this is not mandatory, but it's useful and will have your\n"
"applications perform better."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"Typically, you would need to adapt your build scripts to include the Hibernate Enhancement plugins; in Quarkus this is\n"
"not necessary as the enhancement step is integrated in the build and analysis of the Quarkus application."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"Due to the usage of enhancement, using the `clone()` method on entities is currently not supported\n"
"as it will also clone some enhancement-specific fields that are specific to the entity."
msgstr ""

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "This limitation might be removed in the future."
msgstr "这一限制可能会在将来被取消。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Automatic integration"
msgstr "自动整合"

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Transaction Manager integration"
msgstr "交易管理器集成"

#: _guides/hibernate-orm.adoc
msgid ""
"You don't need to set this up, Quarkus automatically injects the reference to the Narayana Transaction Manager.\n"
"The dependency is included automatically as a transitive dependency of the Hibernate ORM extension.\n"
"All configuration is optional; for more details see xref:transaction.adoc[Using Transactions in Quarkus]."
msgstr ""

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Connection pool"
msgstr "连接池"

#: _guides/hibernate-orm.adoc
msgid ""
"Don't need to choose one either. Quarkus automatically includes the Agroal connection pool;\n"
"configure your datasource as in the above examples and it will set up Hibernate ORM to use Agroal.\n"
"More details about this connection pool can be found in xref:datasource.adoc[Quarkus - Datasources]."
msgstr ""

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Second Level Cache"
msgstr "第二级缓存"

#: _guides/hibernate-orm.adoc
msgid ""
"As explained earlier in the xref:caching[Caching section], you don't need to pick an implementation.\n"
"A suitable implementation based on technologies from link:https://infinispan.org/[Infinispan] and link:https://github.com/ben-manes/caffeine[Caffeine] is included as a transitive dependency of the Hibernate ORM extension, and automatically integrated during the build."
msgstr ""

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Limitations"
msgstr "限制条件"

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "XML mapping with duplicate files in the classpath"
msgstr "XML映射与classpath中的重复文件"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "xref:xml-mapping[XML mapping] files are expected to have a unique path."
msgstr "link:#xml-mapping[XML映射] 文件应该有一个唯一的路径。"

#: _guides/hibernate-orm.adoc
msgid ""
"In practice, it's only possible to have duplicate XML mapping files in the classpath in very specific scenarios.\n"
"For example, if two JARs include a `META-INF/orm.xml` file (with the exact same path but in different JARs),\n"
"then the mapping file path `META-INF/orm.xml` can only be referenced from a `persistence.xml`\n"
"**in the same JAR as the `META-INF/orm.xml` file**."
msgstr ""

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "JMX"
msgstr "JMX"

#: _guides/hibernate-orm.adoc
msgid ""
"Management beans are not working in GraalVM native images;\n"
"therefore, Hibernate's capability to register statistics and management operations with the JMX bean is disabled when compiling into a native image.\n"
"This limitation is likely permanent, as it's not a goal for native images\n"
"to implement support for JMX. All such metrics can be accessed in other ways."
msgstr ""

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "JACC Integration"
msgstr "JACC整合"

#: _guides/hibernate-orm.adoc
msgid ""
"Hibernate ORM's capability to integrate with JACC is disabled when building GraalVM native images,\n"
"as JACC is not available - nor useful - in native mode."
msgstr ""

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Binding the Session to ThreadLocal context"
msgstr "将会话绑定到ThreadLocal上下文"

#: _guides/hibernate-orm.adoc
msgid ""
"It is impossible to use the `ThreadLocalSessionContext` helper of Hibernate ORM as support for it is not implemented.\n"
"Since Quarkus provides out-of-the-box CDI support, injection or programmatic CDI lookup is a better approach.\n"
"This feature also didn't integrate well with reactive components and more modern context propagation techniques, making us believe this legacy feature has no future.\n"
"If you badly need to bind it to a ThreadLocal, it should be trivial to implement in your own code."
msgstr ""

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "JNDI"
msgstr "JNDI"

#: _guides/hibernate-orm.adoc
msgid ""
"The JNDI technology is commonly used in other runtimes to integrate different components.\n"
"A common use case is Java Enterprise servers to bind the TransactionManager and the Datasource components to a name and then have Hibernate ORM configured to look these components up by name.\n"
"But in Quarkus, this use case doesn't apply as components are injected directly, making JNDI support an unnecessary legacy.\n"
"To avoid unexpected use of JNDI, full support for JNDI has been disabled in the Hibernate ORM extension for Quarkus.\n"
"This is both a security precaution and an optimization."
msgstr ""

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Other notable differences"
msgstr "其他值得注意的差异"

#. type: Labeled list
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Format of `import.sql`"
msgstr "样式 `import.sql` "

#: _guides/hibernate-orm.adoc
msgid ""
"When importing a `import.sql` to set up your database, keep in mind that Quarkus reconfigures Hibernate ORM so to require a semicolon (`;`) to terminate each statement.\n"
"The default in Hibernate is to have a statement per line, without requiring a terminator other than newline: remember to convert your scripts to use the `;` terminator character if you're reusing existing scripts.\n"
"This is useful so to allow multi-line statements and human friendly formatting."
msgstr ""

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Simplifying Hibernate ORM with Panache"
msgstr "用Panache简化Hibernate ORM"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] extension facilitates the usage of Hibernate ORM by providing active record style entities (and repositories) and focuses on making your entities trivial and fun to write in Quarkus."
msgstr "link:hibernate-orm-panache.html[Hibernate ORM with Panache] 扩展通过提供活动记录风格的实体（和资源库）来促进Hibernate ORM的使用，并专注于使你的实体在Quarkus中编写得简单而有趣。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Configure your datasource"
msgstr "配置你的数据源"

#: _guides/hibernate-orm.adoc
msgid ""
"Datasource configuration is extremely simple, but is covered in a different guide as technically\n"
"it's implemented by the Agroal connection pool extension for Quarkus."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Jump over to xref:datasource.adoc[Quarkus - Datasources] for all details."
msgstr "跳到 link:datasource.html[Quarkus - 数据源] 了解所有细节。"

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Multitenancy"
msgstr "多租户"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "\"The term multitenancy, in general, is applied to software development to indicate an architecture in which a single running instance of an application simultaneously serves multiple clients (tenants). This is highly common in SaaS solutions. Isolating information (data, customizations, etc.) pertaining to the various tenants is a particular challenge in these systems. This includes the data owned by each tenant stored in the database\" (link:{hibernate-orm-docs-url}#multitenacy[Hibernate User Guide])."
msgstr "\"多租户 \"一词，一般适用于软件开发，表示一种架构，其中一个应用程序的单个运行实例同时为多个客户（租户）服务。这在SaaS解决方案中是非常常见的。在这些系统中，隔离与不同租户有关的信息（数据、定制等）是一个特别的挑战。这包括存储在数据库中的每个租户拥有的数据\" link:{orm-doc-url-prefix}#multitenacy[（Hibernate用户指南] ）。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Quarkus currently supports the link:{hibernate-orm-docs-url}#multitenacy-separate-database[separate database] approach, the link:{hibernate-orm-docs-url}#multitenacy-separate-schema[separate schema] approach and the link:{hibernate-orm-docs-url}#multitenacy-discriminator[discriminator] approach."
msgstr "Quarkus目前支持 link:{orm-doc-url-prefix}#multitenacy-separate-database[独立数据库] 和 link:{orm-doc-url-prefix}#multitenacy-separate-schema[独立模式] 的方法。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "To see multitenancy in action, you can check out the link:{quickstarts-tree-url}/hibernate-orm-multi-tenancy-quickstart[hibernate-orm-multi-tenancy-quickstart] quickstart."
msgstr "要看多租户的操作，你可以查看{quickstarts-tree-url}/hibernate-orm-multi-tenancy-quickstart[hibernate-orm-multi-tenancy-quickstart]快速入门。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, no-wrap
msgid "Writing the application"
msgstr "编写应用程序"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Let's start by implementing the `/{tenant}` endpoint. As you can see from the source code below it is just a regular Jakarta REST resource:"
msgstr "让我们从实现 `/{tenant}` 端点开始。从下面的源代码可以看出，它只是一个普通的JAX-RS资源。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "In order to resolve the tenant from incoming requests and map it to a specific tenant configuration, you need to create an implementation for the `io.quarkus.hibernate.orm.runtime.tenant.TenantResolver` interface."
msgstr "为了从传入的请求中解析租户并将其映射到特定的租户配置，你需要为 `io.quarkus.hibernate.orm.runtime.tenant.TenantResolver` 接口创建一个实现。"

#: _guides/hibernate-orm.adoc
msgid ""
"Annotate the TenantResolver implementation with the `@PersistenceUnitExtension` qualifier\n"
"to tell Quarkus it should be used in the default persistence unit."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "For xref:multiple-persistence-units[named persistence units], use `@PersistenceUnitExtension(\"nameOfYourPU\")`."
msgstr "对于 link:#multiple-persistence-units[命名的持久性单元] ，使用 `@PersistenceUnitExtension(\"nameOfYourPU\")` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "The bean is made `@RequestScoped` as the tenant resolution depends on the incoming request."
msgstr "由于租户的分辨率取决于传入的请求，所以Bean被做成 `@RequestScoped` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "From the implementation above, tenants are resolved from the request path so that in case no tenant could be inferred, the default tenant identifier is returned."
msgstr "从上面的实现来看，租户是从请求路径中解析出来的，因此，如果不能推断出租户，就会返回默认的租户标识。"

#. type: delimited block =
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "If you also use xref:security-openid-connect-multitenancy.adoc[OIDC multitenancy] and both OIDC and Hibernate ORM tenant IDs are the same and must be extracted from the Vert.x `RoutingContext` then you can pass the tenant id from the OIDC Tenant Resolver to the Hibernate ORM Tenant Resolver as a `RoutingContext` attribute, for example:"
msgstr "如果你也使用 link:security-openid-connect-multitenancy.html[OIDC多租户] ，并且OIDC和Hibernate ORM租户ID都是一样的，必须从Vert.x `RoutingContext` ，那么你可以把租户ID从OIDC租户解析器传递给Hibernate ORM租户解析器，作为一个 `RoutingContext` 属性，例如。"

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "配置该应用程序"

#: _guides/hibernate-orm.adoc
msgid ""
"In general, it is not possible to use the Hibernate ORM database generation feature in conjunction with a multitenancy setup.\n"
"Therefore, you have to disable it, and you need to make sure that the tables are created per schema.\n"
"The following setup will use the xref:flyway.adoc[Flyway] extension to achieve this goal."
msgstr ""

#. type: Title ====
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "SCHEMA approach"
msgstr "SCHEMA方法"

#: _guides/hibernate-orm.adoc
msgid ""
"The same data source will be used for all tenants and a schema has to be created for every tenant inside that data source.\n"
"CAUTION: Some databases like MariaDB/MySQL do not support database schemas. In these cases you have to use the DATABASE approach below."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Here is an example of the Flyway SQL (`V1.0.0__create_fruits.sql`) to be created in the configured folder `src/main/resources/schema`."
msgstr "下面是一个例子，Flyway SQL ( `V1.0.0__create_fruits.sql` )要在配置的文件夹 `src/main/resources/schema` 中创建。"

#. type: Title ====
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "DATABASE approach"
msgstr "DATABASE方法"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "For every tenant you need to create a named data source with the same identifier that is returned by the `TenantResolver`."
msgstr "对于每个租户，你需要创建一个命名的数据源，其标识符与 `TenantResolver` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Following are examples of the Flyway SQL files to be created in the configured folder `src/main/resources/database`."
msgstr "以下是在配置的文件夹 `src/main/resources/database` ，创建Flyway SQL文件的例子。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Default schema (`src/main/resources/database/default/V1.0.0__create_fruits.sql`):"
msgstr "默认模式( `src/main/resources/database/default/V1.0.0__create_fruits.sql` )。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Mycompany schema (`src/main/resources/database/mycompany/V1.0.0__create_fruits.sql`):"
msgstr "我的公司模式( `src/main/resources/database/mycompany/V1.0.0__create_fruits.sql` )。"

#. type: Title ====
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "DISCRIMINATOR approach"
msgstr "SCHEMA方法"

#. type: Plain text
#: _guides/hibernate-orm.adoc
msgid "The default data source will be used for all tenants. All entities defining a field annotated with `@TenantId` will have that field populated automatically, and will get filtered automatically in queries."
msgstr ""

#. type: Title ===
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Programmatically Resolving Tenants Connections"
msgstr "有计划地解决租户的联系"

#: _guides/hibernate-orm.adoc
msgid ""
"If you need a more dynamic configuration for the different tenants you want to support and don't want to end up with multiple entries in your configuration file,\n"
"you can use the `io.quarkus.hibernate.orm.runtime.tenant.TenantConnectionResolver` interface to implement your own logic for retrieving a connection.\n"
"Creating an application-scoped bean that implements this interface\n"
"and annotating it with `@PersistenceUnitExtension` (or `@PersistenceUnitExtension(\"nameOfYourPU\")` for a xref:multiple-persistence-units[named persistence unit])\n"
"will replace the current Quarkus default implementation `io.quarkus.hibernate.orm.runtime.tenant.DataSourceTenantConnectionResolver`.\n"
"Your custom connection resolver would allow for example to read tenant information from a database and create a connection per tenant at runtime based on it."
msgstr ""

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, fuzzy, no-wrap
msgid "Interceptors"
msgstr "拦截器"

#: _guides/hibernate-orm.adoc
msgid ""
"You can assign an link:{hibernate-orm-docs-url}#events-interceptors[`org.hibernate.Interceptor`]\n"
"to your `SessionFactory` by simply defining a CDI bean with the appropriate qualifier:"
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"Annotate the interceptor implementation with the `@PersistenceUnitExtension` qualifier\n"
"to tell Quarkus it should be used in the default persistence unit."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "For xref:multiple-persistence-units[named persistence units], use `@PersistenceUnitExtension(\"nameOfYourPU\")`"
msgstr "对于 link:#multiple-persistence-units[命名的持久化单元] ，使用 `@PersistenceUnitExtension(\"nameOfYourPU\")` "

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Either extend `org.hibernate.EmptyInterceptor` or implement `org.hibernate.Interceptor` directly."
msgstr "要么扩展 `org.hibernate.EmptyInterceptor` ，要么直接实现 `org.hibernate.Interceptor` 。"

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "Implement methods as necessary."
msgstr "必要时实施方法。"

#: _guides/hibernate-orm.adoc
msgid ""
"By default, interceptor beans annotated with `@PersistenceUnitExtension` are application-scoped,\n"
"which means only one interceptor instance will be created per application\n"
"and reused across all entity managers.\n"
"For this reason, the interceptor implementation must be thread-safe."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"In order to create one interceptor instance per entity manager instead,\n"
"annotate your bean with `@Dependent`.\n"
"In that case, the interceptor implementation doesn't need to be thread-safe."
msgstr ""

#: _guides/hibernate-orm.adoc
msgid ""
"Due to a limitation in Hibernate ORM itself,\n"
"`@PreDestroy` methods on `@Dependent`-scoped interceptors will never get called."
msgstr ""

#. type: Title ==
#: _guides/hibernate-orm.adoc
#, no-wrap
msgid "Statement Inspectors"
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
#, fuzzy
msgid "You can assign a `org.hibernate.engine.jdbc.spi.StatementInspector` to your `SessionFactory` by simply defining a CDI bean with the appropriate qualifier:"
msgstr "你可以为你的 link:{orm-doc-url-prefix}#events-interceptors[`org.hibernate.Interceptor`] 到你的 `SessionFactory` ，只需用适当的限定符定义一个CDI bean。"

#: _guides/hibernate-orm.adoc
msgid ""
"Annotate the statement inspector implementation with the `@PersistenceUnitExtension` qualifier\n"
"to tell Quarkus it should be used in the default persistence unit."
msgstr ""

#. type: Plain text
#: _guides/hibernate-orm.adoc
msgid "Implement `org.hibernate.engine.jdbc.spi.StatementInspector`."
msgstr ""
