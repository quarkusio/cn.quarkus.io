msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OpenId Connect (OIDC) Expanded Configuration Reference"
msgstr "Quarkus OpenId Connect (OIDC) 扩展配置参考"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC `quarkus-oidc` extension provides a comprehensive, highly adaptable and configurable OIDC and OAuth2 adapter implementation.\n"
"It supports many OIDC and OAuth2 providers, bearer access token and authorization code flows, various provider client authentication mechanisms, token verification and introspection requirements, and much more."
msgstr "Quarkus OIDC `quarkus-oidc` 扩展提供了一个全面、高度适应性和可配置的 OIDC 和 OAuth2 适配器实现。它支持许多 OIDC 和 OAuth2 提供商、承载访问令牌和授权代码流、各种提供商客户端验证机制、令牌验证和反省要求等。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus-oidc` prioritizes on letting users meet most of requirements without having to write custom code, while also letting users customize and filter different parts of the OIDC flows. But the OIDC and OAuth2 space is huge and supporting many of required combinations with configuration propertes has its cost."
msgstr "`quarkus-oidc` OIDC 和 OAuth2 优先考虑的是让用户无需编写自定义代码就能满足大部分要求，同时让用户自定义和过滤 OIDC 流程的不同部分。但是，OIDC 和 OAuth2 的空间非常大，支持多种所需配置组合需要付出代价。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "As you can see from the xref:security-oidc-configuration-properties-reference.adoc[OIDC Configuration properties reference] document which contains OIDC properties generated from JavaDocs, a number of properties in the `quarkus.oidc.*` namespace is large. Even though only a very minimum number of properties may be required to cover most typical requirements, users may find it difficult to find the right combination."
msgstr "从 xref:security-oidc-configuration-properties-reference.adoc[OIDC 配置属性参考] 文档（其中包含从 JavaDocs 生成的 OIDC 属性）中可以看出， `quarkus.oidc.*` 命名空间中的属性数量非常多。即使只需要极少量的属性就能满足大多数典型要求，用户也可能会发现很难找到合适的组合。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Many properties, which may look unusual or redundant in one specific deployment, have been added to address concrete requirements to support other deployments. Some important properties may have weaker default values to avoid breaking deployments whose providers do not support such properties by default, or provide limited or non-standard support."
msgstr "许多属性在某一特定部署中可能会显得不寻常或多余，但为了满足支持其他部署的具体要求，我们添加了这些属性。一些重要属性的默认值可能较弱，以避免破坏提供商默认不支持这些属性或提供有限或非标准支持的部署。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This document provides an expanded description of the xref:security-oidc-configuration-properties-reference.adoc[OIDC Configuration properties], explains why some properties have been introduced, why they have current default values, and suggests typical property combinations."
msgstr "本文件对 xref:security-oidc-configuration-properties-reference.adoc[OIDC 配置属性] 进行了扩展说明，解释了引入某些属性的原因、这些属性当前默认值的原因，并提出了典型的属性组合建议。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Core properties"
msgstr "核心属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enablement"
msgstr "启用"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC enablement property"
msgstr "OIDC 启用属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Property name"
msgstr "财产名称"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "Default"
msgstr "默认值"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "Description"
msgstr "描述"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.enabled"
msgstr "quarkus.oidc.enabled"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "true"
msgstr "真"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If the OIDC extension is enabled"
msgstr "如果启用了 OIDC 扩展"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This build-time property is about controlling if the whole OIDC extension should be enabled. If it is disabled at build-time then the OIDC extension is unavailable at runtime."
msgstr "该构建时属性用于控制是否启用整个 OIDC 扩展。如果在构建时禁用，则 OIDC 扩展在运行时不可用。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tenant"
msgstr "租户"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC tenant configuration represents specific requirements associated with a single OIDC provider, an individual tenant or realm among multiple OIDC provider tenants or realms."
msgstr "Quarkus OIDC 租户配置表示与单个 OIDC 提供商、多个 OIDC 提供商租户或领域中的单个租户或领域相关的特定要求。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC tenant properties"
msgstr "OIDC 租户物业"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.tenant-enabled"
msgstr "quarkus.oidc.tenant-enabled"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If the tenant is enabled"
msgstr "如果租户已启用"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.tenant-id"
msgstr "quarkus.oidc.tenant-id"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tenant id"
msgstr "租户 ID"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "These two properties allow to specify if the OIDC tenant configuration should be enabled and the OIDC tenant name."
msgstr "这两个属性允许指定是否启用 OIDC 租户配置和 OIDC 租户名称。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.tenant-enabled` property can be useful even if you work with a single default OIDC tenant, for example, when the OIDC integration in the container should be activated only on the container startup."
msgstr "`quarkus.oidc.tenant-enabled` 属性非常有用，即使您使用的是单个默认 OIDC 租户，例如，容器中的 OIDC 集成只应在容器启动时激活。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In most cases, you do not need to deal with the `quarkus.oidc.tenant-id` property unless you have multiple OIDC tenant configuration requirements and create an OIDC tenant configuration `programmatically`. If you configure OIDC tenants in `application.properties`, then, as you can see from the xref:security-oidc-configuration-properties-reference.adoc[OIDC Configuration properties reference] document, the tenant id is declared as a 3rd token in the tenant-specific group of properties."
msgstr "在大多数情况下，您不需要处理 `quarkus.oidc.tenant-id` 属性，除非您有多个 OIDC 租户配置需求并创建了 OIDC 租户配置 `programmatically` 。如果您在 `application.properties` 中配置 OIDC 租户，那么，正如您从 xref:security-oidc-configuration-properties-reference.adoc[OIDC 配置属性参考] 文档中看到的那样，租户 id 被声明为租户特定属性组中的第 3 个标记。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, the following configuration sets the OIDC `tenant-1` configuration requirements:"
msgstr "例如，以下配置设置了 OIDC `tenant-1` 配置要求："

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can configure or create as many tenant configurations as you need and have them resolved at the request time."
msgstr "您可以根据需要配置或创建任意数量的租户配置，并在请求时解决它们。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See the <<multi-tenancy>> section for more details."
msgstr "详情请参见 <<multi-tenancy>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Metadata"
msgstr "元数据"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC Metadata properties"
msgstr "OIDC 元数据属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.auth-server-url"
msgstr "quarkus.oidc.auth-server-url"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC base URL"
msgstr "OIDC 基本 URL"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.discovery-enabled"
msgstr "quarkus.oidc.discovery-enabled"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enable discovery"
msgstr "启用发现功能"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authorization-path"
msgstr "quarkus.oidc.authorization-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization path"
msgstr "授权路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-path"
msgstr "quarkus.oidc.token-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token path"
msgstr "令牌路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks-path"
msgstr "quarkus.oidc.jwks-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JSON Web Key Set (JWKS) path"
msgstr "JSON 网络密钥集 (JWKS) 路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.introspection-path"
msgstr "quarkus.oidc.introspection-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection path"
msgstr "令牌反省路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.user-info-path"
msgstr "quarkus.oidc.user-info-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "UserInfo path"
msgstr "用户信息路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.end-session-path"
msgstr "quarkus.oidc.end-session-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "End session (logout) path"
msgstr "结束会话（注销）路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.revoke-path"
msgstr "quarkus.oidc.revoke-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token revocation path"
msgstr "令牌撤销路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.registration-path"
msgstr "quarkus.oidc.registration-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC client registration path"
msgstr "OIDC 客户端注册路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.auth-server-url` is a key base OIDC URL property. By default, Quarkus OIDC adds a `.well-known/openid-configuration` path segment to this URL and discovers the OIDC provider metadata."
msgstr "`quarkus.oidc.auth-server-url` 是一个关键的基础 OIDC URL 属性。默认情况下，Quarkus OIDC 会在此 URL 中添加 路径段，并发现 OIDC 提供商元数据。 `.well-known/openid-configuration` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can disable metadata discovery with `quarkus.oidc.discovery-enabled=false` when the provider does not support it (most OAuth2 providers do not), when you would like to optimize start up time by skipping a remote discovery call and configure individual OIDC provider endpoint URLs instead."
msgstr "如果提供商不支持元数据发现（大多数 OAuth2 提供商不支持），或者您希望通过跳过远程发现调用来优化启动时间，并配置单个 OIDC 提供商端点 URL，您可以通过 `quarkus.oidc.discovery-enabled=false` 禁用元数据发现。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Individual OIDC endpoint URLs such as `quarkus.oidc.authorization-path` can also be set when you need to override one of the discovered OIDC endpoint URLs or when the discovered OIDC metadata does not include a required endpoint URL."
msgstr "当需要覆盖某个已发现的 OIDC 端点 URL 或已发现的 OIDC 元数据不包括所需的端点 URL 时，也可以设置单个 OIDC 端点 URL，如 `quarkus.oidc.authorization-path` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "These URLs can be either relative to the base `quarkus.oidc.auth-server-url` URL or absolute."
msgstr "这些 URL 可以是相对于基础 `quarkus.oidc.auth-server-url` URL 的，也可以是绝对的。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, usually you need to disable the discovery and specify individual endpoint URLs when working with OAuth2 providers, see the xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers] section for more details."
msgstr "例如，在使用 OAuth2 提供商时，通常需要禁用发现功能并指定单个端点 URL，详情请参见 xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 提供商] 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The individual OIDC endpoint URLs that you may need to configure depends on the OIDC <<application-type>> and expected token formats."
msgstr "您可能需要配置的各个 OIDC 端点 URL 取决于 OIDC <<application-type>> 和预期令牌格式。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authorization-path`, `quarkus.oidc.token-path` and `quarkus.oidc.end-session-path` are only relevant when the <<authorization-code-flow> authentication is enabled with `quarkus.oidc.application-type=web-app`."
msgstr "`quarkus.oidc.authorization-path` 只有在使用 `quarkus.oidc.application-type=web-app` 启用 <<authorization-code-flow> 身份验证时， `quarkus.oidc.token-path` 和 `quarkus.oidc.end-session-path` 才相关。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.jwks-path` is needed to fetch JSON Web Key Set (JWKS) but only if the tokens are JSON Web Tokens (JWT). When it is `quarkus.oidc.application-type=web-app`, ID tokens representing the user authentication are always in JWT format, and in most cases JWK keys are needed to verify them. The JWKS path is not needed if you work with opaque (binary) bearer access tokens which are usually remotely introspected instead."
msgstr "`quarkus.oidc.jwks-path` 需要获取 JSON 网络密钥集 (JWKS)，但前提是令牌是 JSON 网络令牌 (JWT)。在 时，代表用户身份验证的 ID 标记总是采用 JWT 格式，在大多数情况下需要 JWK 密钥来验证它们。如果使用不透明（二进制）的承载访问令牌，则不需要 JWKS 路径，因为这些令牌通常是远程反省的。 `quarkus.oidc.application-type=web-app`"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.introspection-path` is required in most cases when an opaque (binary) access token must be introspected remotely because such tokens can not have attached signatures that can be verified. It is worth setting `quarkus.oidc.introspection-path` even if you work with JWT tokens and your provider supports the remote token introspection. In such cases, JWT tokens can be introspected remotely as a fallback, when no matching JWK verification key has been found to verify JWT locally."
msgstr "`quarkus.oidc.introspection-path` 在大多数情况下，当必须远程反省不透明（二进制）访问令牌时都需要使用，因为此类令牌无法附加可验证的签名。即使您使用的是 JWT 令牌，而且您的提供商支持远程令牌反省，也值得设置 。在这种情况下，如果找不到匹配的 JWK 验证密钥来验证本地 JWT，则可以远程反省 JWT 标记作为备用。 `quarkus.oidc.introspection-path` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.user-info-path` is usually required after the <<authorization-code-flow> completion, when `UserInfo` must be requested to get more information about the user, in addition to what is already available in the ID token.\n"
"Requesting `UserInfo` is also possible for the bearer access token flow."
msgstr "`quarkus.oidc.user-info-path` 通常需要在 <<authorization-code-flow> 完成后请求 ，以获取 ID 令牌中已有信息之外的更多用户信息。承载访问令牌流程也可以请求 。 `UserInfo` `UserInfo` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When you work with OAuth2 providers which issue binary access tokens but do not support the remote introspection, and do not have standard `UserInfo` support, `quarkus.oidc.user-info-path` must point to the OAuth2 provider specific endpoint returning information about the current user, in order to support an indirect access token verification. See the xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers] section for more details."
msgstr "如果您使用的 OAuth2 提供商发放二进制访问令牌，但不支持远程自省，也不支持标准 `UserInfo` ，那么 `quarkus.oidc.user-info-path` 必须指向返回当前用户信息的 OAuth2 提供商特定端点，以支持间接访问令牌验证。更多详情，请参阅 xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 提供商] 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.revoke-path` and `quarkus.oidc.registration-path` are currently not used directly by Quarkus OIDC.\n"
"Applications xref:security-openid-connect-client-reference.adoc#revoke-access-tokens[can revoke tokens] on logout, and other security events.\n"
"Applications that already work with `quarkus-oidc` can use `quarkus.oidc.registration-path` to xref:security-openid-connect-client-registration.adoc[dynamically register OIDC clients]."
msgstr "`quarkus.oidc.revoke-path` 和 目前不被 Quarkus OIDC 直接使用。应用程序 `quarkus.oidc.registration-path` xref:security-openid-connect-client-reference.adoc#revoke-access-tokens[可以] 在注销和其他安全事件时 xref:security-openid-connect-client-reference.adoc#revoke-access-tokens[撤销令牌] 。已经使用 的应用程序可以使用 `quarkus-oidc` `quarkus.oidc.registration-path` xref:security-openid-connect-client-registration.adoc[动态注册 OIDC 客户端] 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "But please remember, all or some of these OIDC endpoint specific URLs may be discoverable when your provider supports the metadata discovery."
msgstr "但请记住，当您的提供商支持元数据发现时，所有或部分 OIDC 端点特定 URL 都可能被发现。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<resource-metadata-properties>> section about accessing the protected resource metadata."
msgstr "另请参阅 <<resource-metadata-properties>> 部分关于访问受保护资源元数据的内容。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Application type"
msgstr "应用类型"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Application type property"
msgstr "应用类型属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.application-type"
msgstr "quarkus.oidc.application-type"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "service"
msgstr "服务"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC application type determines how the the current request is authenticated."
msgstr "OIDC 应用程序类型决定当前请求的验证方式。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The default `service` application type is used when a `bearer` access token is sent with an HTTP `Authorization: Bearer <token>` header to access the Quarkus application. For example, a `Single-page application` (SPA) can use access tokens to access Quarkus on behalf of the currently logged-in SPA user."
msgstr "当 `bearer` 访问令牌与 HTTP `Authorization: Bearer <token>` 标头一起发送以访问 Quarkus 应用程序时，将使用默认的 `service` 应用程序类型。例如， `Single-page application` (SPA) 可以使用访问令牌代表当前登录的 SPA 用户访问 Quarkus。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `web-app` application type is used when the `quarkus-oidc` extension uses an <<authorization-code-flow> to authenticate users to Quarkus and create session cookies."
msgstr "`web-app` 应用程序类型用于 `quarkus-oidc` 扩展使用 <<authorization-code-flow> 对 Quarkus 用户进行身份验证并创建会话 Cookie 时。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"The `hybrid` application type can be used to support both bearer access token and authorization code flows at the same time.\n"
"If the current request has an HTTP `Authorization: Bearer <token>` header then the bearer access token is verified, otherwise, if no session cookie is available, the user is redirected to the OIDC provider to authenticate."
msgstr "`hybrid` 应用程序类型可用于同时支持承载访问令牌和授权码流。如果当前请求有 HTTP `Authorization: Bearer <token>` 标头，则会验证不记名访问令牌，否则，如果没有会话 cookie，用户会被重定向到 OIDC 提供商处进行身份验证。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client"
msgstr "客户"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"The `quarkus-oidc` extension represents a registered OIDC application client.\n"
"This client needs to authenticate to the OIDC provider when acquiring, introspecting or revoking tokens."
msgstr "`quarkus-oidc` 扩展代表已注册的 OIDC 应用程序客户端。该客户端在获取、自省或撤销令牌时需要向 OIDC 提供商进行身份验证。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client id and secret properties"
msgstr "客户 ID 和秘密属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.client-id"
msgstr "quarkus.oidc.client-id"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client id"
msgstr "客户 ID"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.client-name"
msgstr "quarkus.oidc.client-name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client name"
msgstr "客户名称"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.secret"
msgstr "quarkus.oidc.credentials.secret"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client secret"
msgstr "客户秘密"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Registered OIDC client has a client id and usually, a client secret."
msgstr "注册的 OIDC 客户端有一个客户 ID，通常还有一个客户秘密。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Both `quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` are optional when JWT bearer access tokens are accepted since they can be verified locally with the JWK verification keys available from a public OIDC JWKS key set endpoint. However, configuring `quarkus.oidc.client-id` is RECOMMENDED in this case anyway to make the OIDC log messages more informative."
msgstr "当接受 JWT 承载访问令牌时， `quarkus.oidc.client-id` 和 `quarkus.oidc.credentials.secret` 都是可选的，因为它们可以通过公共 OIDC JWKS 密钥集端点提供的 JWK 验证密钥在本地进行验证。不过，无论如何，在这种情况下都建议配置 `quarkus.oidc.client-id` ，以便使 OIDC 日志信息更加翔实。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.client-name` is a user-friendly client name and is currently only used  to make the log messages more informative."
msgstr "`quarkus.oidc.client-name` 是一个方便用户使用的客户端名称，目前仅用于使日志信息更加翔实。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If you enable an <<authorization-code-flow>> authentication with `quarkus.oidc.application-type=web-app`, then configuring `quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` (or other type of client credentials) is required in order to complete the current authorization code flow, because the OIDC token endpoint requires the client authentication."
msgstr "如果使用 `quarkus.oidc.application-type=web-app` 启用 <<authorization-code-flow>> 身份验证，则需要配置 `quarkus.oidc.client-id` 和 `quarkus.oidc.credentials.secret` （或其他类型的客户端凭证）才能完成当前的授权代码流，因为 OIDC 令牌端点需要客户端身份验证。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Both of these properties are also usually required if the tokens must be introspected, both for the bearer access token and authorization code flows."
msgstr "如果必须反省令牌，通常也需要这两个属性，包括承载访问令牌和授权代码流。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<client-credentials>> section for a complete description of supported OIDC provider client authentication options."
msgstr "有关支持的 OIDC 提供商客户端身份验证选项的完整说明，另请参阅 <<client-credentials>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client authentication options"
msgstr "客户端验证选项"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `quarkus.oidc.credentials.secret` client secret property was already introduced in the previous <<client-id-secret>> section and using this property alone maybe sufficient to authenticate to many OIDC and OAuth2 compliant providers."
msgstr "`quarkus.oidc.credentials.secret` 客户端秘密属性已在上一节 <<client-id-secret>> 中介绍过，仅使用该属性就足以对许多兼容 OIDC 和 OAuth2 的提供商进行身份验证。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "However, even this single OIDC client secret property may be treated in four different ways, depending on how a specific provider expects it be used: be sent alongside `quarkus.oidc.client-id` as an HTTP `Authorization: Basic` credentials pair (default), as an HTTP POST form parameter, or even as a query parameter (as expected by the xref:security-openid-connect-providers.adoc#strava[Strava OAuth2 provider]), or is used as a placeholder for a generated JWT token for the xref:security-oidc-code-flow-authentication.adoc#apple-post-jwt[Apple client authentication]."
msgstr "不过，即使是这个单一的 OIDC 客户端秘密属性，也可能会有四种不同的处理方式，具体取决于特定提供商希望如何使用它：作为 HTTP `Authorization: Basic` 凭据对（默认）与 `quarkus.oidc.client-id` 一起发送，作为 HTTP POST 表单参数，甚至作为查询参数（如 xref:security-openid-connect-providers.adoc#strava[Strava OAuth2 提供商] 所期望的那样），或者用作生成的 JWT 令牌的占位符，用于 xref:security-oidc-code-flow-authentication.adoc#apple-post-jwt[Apple 客户端身份验证] 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Have a look at the complete overview of the authentication properties below and check the xref:security-oidc-code-flow-authentication.adoc#oidc-provider-client-authentication[OIDC provider client authentication] section for more details."
msgstr "请参阅下面关于身份验证属性的完整概述，并查看 xref:security-oidc-code-flow-authentication.adoc#oidc-provider-client-authentication[OIDC 提供商客户端身份验证] 部分了解更多详情。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client secret credentials"
msgstr "客户秘密凭证"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client secret - use it if the HTTP `Authorization: Basic` client id and secret pair is expected"
msgstr "客户端密文 - 如果 HTTP `Authorization: Basic` 客户端 ID 和密文对是预期的，则使用该密文"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.value"
msgstr "quarkus.oidc.credentials.client-secret.value"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client secret value"
msgstr "客户端秘密值"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.method"
msgstr "quarkus.oidc.credentials.client-secret.method"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Basic"
msgstr "基本"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "How client secret should be submitted or used"
msgstr "客户秘密应如何提交或使用"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.provider.name"
msgstr "quarkus.oidc.credentials.client-secret.provider.name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The CredentialsProvider bean name"
msgstr "CredentialsProvider Bean 名称"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.provider.keyring-name"
msgstr "quarkus.oidc.credentials.client-secret.provider.keyring-name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The keyring name"
msgstr "钥匙圈名称"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.client-secret.provider.key"
msgstr "quarkus.oidc.credentials.client-secret.provider.key"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The client secret key"
msgstr "客户密匙"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When a client secret is configured with `quarkus.oidc.credentials.secret`, it is sent alongside `quarkus.oidc.client-id` as an HTTP `Authorization: Basic` credentials pair. However, some providers can only accept the client id and secret if they are sent as POST form parameters, when you need to use the `quarkus.oidc.credentials.client-secret.method=post` configuration."
msgstr "当使用 `quarkus.oidc.credentials.secret` 配置客户端秘密时，它将作为 HTTP `Authorization: Basic` 凭据对与 `quarkus.oidc.client-id` 一起发送。不过，有些提供商只能接受作为 POST 表单参数发送的客户 ID 和客户秘密，这时就需要使用 `quarkus.oidc.credentials.client-secret.method=post` 配置。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The remaining three properties in the `quarkus.oidc.credentials.client-secret.provider.*` namespace allow to customize how a custom xref:credentials-provider.adoc[CredentialsProvider] can be used to provide secrets stored in secure locations. Alternatively, you can use Quarkus Configuration system to manage secrets, see the xref:config-secrets.adoc[Secrets in Configuration] guide."
msgstr "`quarkus.oidc.credentials.client-secret.provider.*` 命名空间中的其余三个属性允许自定义如何使用自定义 xref:credentials-provider.adoc[CredentialsProvider] 来提供存储在安全位置的秘密。或者，你也可以使用 Quarkus 配置系统来管理秘密，请参阅 xref:config-secrets.adoc[配置中的秘密] 指南。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT client credentials"
msgstr "JWT 客户端证书"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Instead of sending a client secret, Quarkus OIDC can authenticate to OIDC providers by sending a generated JWT authentication token signed with either a client secret or private key."
msgstr "Quarkus OIDC 不发送客户机秘密，而是通过发送用客户机秘密或私钥签名的生成 JWT 身份验证令牌来验证 OIDC 提供商。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Client Secret JWT"
msgstr "客户端秘密 JWT"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[client_secret_jwt client authentication option] requires creating a JWT token signed with a symmetric key also known to the OIDC provider."
msgstr "JWT link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[client_secret_jwt 客户端验证选项] 要求创建一个用 OIDC 提供商也知道的对称密钥签名的 JWT 令牌。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT client_secret_jwt method properties"
msgstr "JWT 客户端_secret_jwt 方法属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.secret"
msgstr "quarkus.oidc.credentials.jwt.secret"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If provided, indicates that JWT is signed using a secret key."
msgstr "如果提供，则表示 JWT 使用秘钥签名。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.signature-algorithm"
msgstr "quarkus.oidc.credentials.jwt.signature-algorithm"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "HS256"
msgstr "HS256"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Signature algorithm"
msgstr "签名算法"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.provider.name"
msgstr "quarkus.oidc.credentials.jwt.provider.name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.provider.keyring-name"
msgstr "quarkus.oidc.credentials.jwt.provider.keyring-name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.provider.key"
msgstr "quarkus.oidc.credentials.jwt.provider.key"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, the OIDC client secret acts as the shared symmetric key, and can be configured with `quarkus.oidc.credentials.jwt.secret`. This is the same secret one can declare, for example, with the `quarkus.oidc.credentials.secret` property but having an option to define it in the `quarkus.oidc.credentials.jwt.*` namespace is better for the JWT `client_secret_jwt` authentication, as one may also need to customize the headers and claims added to JWT with setting more properties in the `quarkus.oidc.credentials.jwt.*` namespace, see the <<jwt-authentication-headers-claims>> section below for more details."
msgstr "默认情况下，OIDC 客户端密钥作为共享对称密钥，可通过 `quarkus.oidc.credentials.jwt.secret` 进行配置。例如，可以使用 `quarkus.oidc.credentials.secret` 属性声明相同的密钥，但在 `quarkus.oidc.credentials.jwt. **` *命名空间中定义，更有利于 JWT<code>client_secret_jwt</code> 身份验证，因为人们可能还需要在<code>quarkus.oidc.credentials.jwt.</code>* 命名空间 *中设置更多属性，以自定义添加到 JWT 的标头和声明* ，详见下文 <<jwt-authentication-headers-claims>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The remaining three properties in the `quarkus.oidc.credentials.jwt.provider.*` namespace allow to customize how a custom xref:credentials-provider.adoc[CredentialsProvider] can be used to provide `quarkus.oidc.credentials.jwt.secret` secrets stored in secure locations. Alternatively, you can use Quarkus Configuration system to manage secrets, see the xref:config-secrets.adoc[Secrets in Configuration] guide."
msgstr "`quarkus.oidc.credentials.jwt.provider.*` 命名空间中的其余三个属性允许自定义如何使用自定义 xref:credentials-provider.adoc[CredentialsProvider] 来提供存储在安全位置的 `quarkus.oidc.credentials.jwt.secret` 秘密。或者，你也可以使用 Quarkus 配置系统来管理秘密，请参阅 xref:config-secrets.adoc[配置中的秘密] 指南。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, `HS256` algorithm requiring a 32 characters long secret is used to sign generated authentication tokens but it can be strengthened with an algorithm such as `HS512` using the `quarkus.oidc.credentials.jwt.signature-algorithm` property."
msgstr "默认情况下，使用 `HS256` 算法签署生成的身份验证令牌，该算法需要 32 个字符长的密文，但可以使用 `quarkus.oidc.credentials.jwt.signature-algorithm` 属性，使用 `HS512` 等算法对其进行强化。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Private Key JWT"
msgstr "私钥 JWT"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[private_key_jwt client authentication option] requires creating a JWT token signed with the client private key, with the client public key registered in the OIDC provider."
msgstr "JWT link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[private_key_jwt 客户端身份验证选项] 要求创建一个用客户端私钥签名的 JWT 令牌，客户端公钥已在 OIDC 提供商处注册。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT private_key_jwt method properties"
msgstr "JWT private_key_jwt 方法属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key"
msgstr "quarkus.oidc.credentials.jwt.key"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The inlined key"
msgstr "下划线键"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-file"
msgstr "quarkus.oidc.credentials.jwt.key-file"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The key file"
msgstr "关键文件"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-store-file"
msgstr "quarkus.oidc.credentials.jwt.key-store-file"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The key store file"
msgstr "密钥存储文件"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-store-password"
msgstr "quarkus.oidc.credentials.jwt.key-store-password"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-id"
msgstr "quarkus.oidc.credentials.jwt.key-id"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The key id"
msgstr "键 id"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.key-password"
msgstr "quarkus.oidc.credentials.jwt.key-password"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The key password"
msgstr "关键密码"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "RS256"
msgstr "RS256"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.credentials.jwt.key` contains an inlined Base64-encoded private key representation, and is especially useful when you need to supply it as an environment property.\n"
"`quarkus.oidc.credentials.jwt.key-file` point to a PEM file containing the private key."
msgstr "`quarkus.oidc.credentials.jwt.key` `quarkus.oidc.credentials.jwt.key-file` 指向包含私钥的 PEM 文件。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.credentials.jwt.key-store-file`, `quarkus.oidc.credentials.jwt.key-store-password`, `quarkus.oidc.credentials.jwt.key-id` and `quarkus.oidc.credentials.jwt.key-password` can be used to extract the private key from a keystore."
msgstr "`quarkus.oidc.credentials.jwt.key-store-file` , `quarkus.oidc.credentials.jwt.key-store-password` , `quarkus.oidc.credentials.jwt.key-id` 和 `quarkus.oidc.credentials.jwt.key-password` 可用于从密钥库中提取私钥。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, RSA `RS256` algorithm is used to sign a JWT authentication token but it can be changed with `quarkus.oidc.credentials.jwt.signature-algorithm`, for example, to Elliptic Curve `ES256`."
msgstr "默认情况下，JWT 身份验证令牌使用 RSA `RS256` 算法签名，但也可以通过 `quarkus.oidc.credentials.jwt.signature-algorithm` 进行更改，例如改为椭圆曲线 `ES256` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<jwt-authentication-headers-claims>> section below for details about customizing the generated JWT token."
msgstr "有关定制生成的 JWT 令牌的详情，请参阅 <<jwt-authentication-headers-claims>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT authentication headers and claims"
msgstr "JWT 身份验证标头和声明"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[Standard OIDC client authentication text] describes the claims that the generated token must contain but the values of these claims may have to be overridden."
msgstr "link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[标准 OIDC 客户端验证文本] 描述了生成的令牌必须包含的权利要求，但这些权利要求的值可能需要重写。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT header and claim properties"
msgstr "JWT 标头和声明属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.token-key-id"
msgstr "quarkus.oidc.credentials.jwt.token-key-id"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The token key id (`kid`) header value"
msgstr "令牌密钥 ID( `kid` ) 标头值"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.audience"
msgstr "quarkus.oidc.credentials.jwt.audience"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC token endpoint address"
msgstr "OIDC 令牌端点地址"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Audience (`aud`) claim value"
msgstr "受众 ( `aud` ) 索赔价值"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.issuer"
msgstr "quarkus.oidc.credentials.jwt.issuer"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC client id"
msgstr "OIDC 客户 ID"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Issuer (`iss`) claim value"
msgstr "发行人 ( `iss` ) 索赔值"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.subject"
msgstr "quarkus.oidc.credentials.jwt.subject"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Subject (`sub`) cliam value"
msgstr "主题 ( `sub` ) cliam 值"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.lifespan"
msgstr "quarkus.oidc.credentials.jwt.lifespan"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "10 seconds"
msgstr "10 秒钟"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Lifespan added to the `issued at` (`iat`) claim value to calculate the expiry (`exp`) claim value"
msgstr "寿命加上 `issued at` ( `iat` ) 索赔值，以计算到期 ( `exp` ) 索赔值"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.claims"
msgstr "quarkus.oidc.credentials.jwt.claims"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Map of extra string claims that must be added to the token"
msgstr "必须添加到令牌中的额外字符串要求的映射"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.credentials.jwt.token-key-id` can be used to set a key identifier (`kid`) header value to help the OIDC provider with fidning a token verification key.\n"
"All other properties listed in the table above can be used to customize JWT claim values."
msgstr "`quarkus.oidc.credentials.jwt.token-key-id` 可用于设置密钥标识符（ ）标头值，以帮助 OIDC 提供商查找令牌验证密钥。上表中列出的所有其他属性都可用于自定义 JWT 权利要求值。 `kid`"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT Bearer"
msgstr "JWT 承载器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, when a client JWT authentication token must be produced, it is generated by Quarkus OIDC. In some cases, the JWT bearer token may be provided and periodically updated by Kubernetes."
msgstr "默认情况下，客户端 JWT 身份验证令牌必须由 Quarkus OIDC 生成。在某些情况下，JWT 承载令牌可能由 Kubernetes 提供并定期更新。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWT source properties"
msgstr "JWT 源属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.source"
msgstr "quarkus.oidc.credentials.jwt.source"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Generated by quarkus-oidc"
msgstr "由 quarkus-oidc 生成"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "How the authentication JWT token is produced"
msgstr "如何生成验证 JWT 令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.credentials.jwt.token-path"
msgstr "quarkus.oidc.credentials.jwt.token-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If the token source is BEARER then this path must point to a JWT bearer token in the file system"
msgstr "如果令牌源是承载器，则该路径必须指向文件系统中的 JWT 承载令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Set `quarkus.oidc.credentials.jwt.source=bearer` if the client authentication token is provided by Kubernetes, and use `quarkus.oidc.credentials.jwt.token-path` to point to the file resource containing this token."
msgstr "如果客户端身份验证令牌由 Kubernetes 提供，则设置 `quarkus.oidc.credentials.jwt.source=bearer` ，并使用 `quarkus.oidc.credentials.jwt.token-path` 指向包含该令牌的文件资源。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Mutual TLS"
msgstr "相互 TLS"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See the <<tls-properties>> section if the MTLS authentication is required."
msgstr "如果需要 MTLS 验证，请参阅 <<tls-properties>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Introspection credentials"
msgstr "自省证书"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the tokens must be introspected, some providers may require the introspection specific authentication credentials, as opposed to the already configured OIDC client id and one of the OIDC client authentication credentials:"
msgstr "当必须反省令牌时，一些提供商可能会要求反省特定的身份验证凭据，而不是已经配置的 OIDC 客户端 ID 和其中一个 OIDC 客户端身份验证凭据："

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Introspection credentials properties"
msgstr "自省凭证属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.introspection-credentials.name"
msgstr "quarkus.oidc.introspection-credentials.name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Introspection name"
msgstr "自省名称"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.introspection-credentials.secret"
msgstr "quarkus.oidc.introspection-credentials.secret"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Introspection secret"
msgstr "自省的秘密"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.introspection-credentials.include-client-id"
msgstr "quarkus.oidc.introspection-credentials.include-client-id"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Include client id"
msgstr "包括客户 ID"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.introspection-credentials.name` and `quarkus.oidc.introspection-credentials.secret` must be used only if your provider requires the introspection specific authentication credentials. In this case, the introspection endpoint may also require a `quarkus.oidc.client-id`  property sent as a `client_id` parameter."
msgstr "`quarkus.oidc.introspection-credentials.name` 和 必须仅在提供商要求使用自省特定身份验证凭据时使用。在这种情况下，自省端点可能还需要作为 参数发送的 属性。 `quarkus.oidc.introspection-credentials.secret` `client_id` `quarkus.oidc.client-id` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Currently, introspection credentials, if configured, can only be sent as HTTP POST form parameters."
msgstr "目前，自省凭证（如果已配置）只能作为 HTTP POST 表单参数发送。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Connection properties"
msgstr "连接属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.use-blocking-dns-lookup"
msgstr "quarkus.oidc.use-blocking-dns-lookup"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "false"
msgstr "false"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use Blocking DNS lookup"
msgstr "使用阻止 DNS 查询"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.connection-delay"
msgstr "quarkus.oidc.connection-delay"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Connection delay"
msgstr "连接延迟"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.connection-retry-count"
msgstr "quarkus.oidc.connection-retry-count"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "3"
msgstr "3"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Connection retry count"
msgstr "连接重试次数"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.connection-time-out"
msgstr "quarkus.oidc.connection-time-out"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Connection time out"
msgstr "连接超时"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.proxy-host"
msgstr "quarkus.oidc.proxy-host"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Proxy host"
msgstr "代理主机"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.proxy-port"
msgstr "quarkus.oidc.proxy-port"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "80"
msgstr "80"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Proxy port"
msgstr "代理端口"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.proxy-username"
msgstr "quarkus.oidc.proxy-username"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Proxy username"
msgstr "代理用户名"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.proxy-password"
msgstr "quarkus.oidc.proxy-password"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Proxy password"
msgstr "代理密码"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.use-blocking-dns-lookup` should be set to `true` to avoid a Vert'x thread getting blocked when an OIDC provider connection is established on the slow network."
msgstr "`quarkus.oidc.use-blocking-dns-lookup` 应设置为 ，以避免在慢速网络上建立 OIDC 提供商连接时阻塞 Vert'x 线程。 `true` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.connection-retry-count` sets a number of connection retries and `quarkus.oidc.connection-time-out` sets a duration after which the current OIDC connection request times out. `quarkus.oidc.connection-delay` establishes a delay for an initial connection request only."
msgstr "`quarkus.oidc.connection-retry-count` 设置连接重试次数， 设置当前 OIDC 连接请求超时的持续时间。 仅为初始连接请求设置延迟。 `quarkus.oidc.connection-time-out` `quarkus.oidc.connection-delay` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Four properties in the `quarkus.oidc.proxy.*` namespace can be used to control access to HTTP proxies."
msgstr "`quarkus.oidc.proxy.*` 命名空间中的四个属性可用于控制对 HTTP 代理的访问。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In some cases, OIDC provider, after accepting HTTP GET requests to either discovery or UserInfo endpoints, initiates a redirect exactly to the same endpoint address while also supplying some additional cookies."
msgstr "在某些情况下，OIDC 提供商在接受了向发现或用户信息端点发出的 HTTP GET 请求后，会将其重定向到相同的端点地址，同时提供一些额外的 cookie。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Redirect control properties"
msgstr "重定向控件属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Property"
msgstr "物业"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.follow-redirects"
msgstr "quarkus.oidc.follow-redirects"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Follow OIDC provider redirects"
msgstr "遵循 OIDC 提供商重定向"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC supports such redirects by default but you are RECOMMENDED to disable it with `quarkus.oidc.follow-redirects=false` if you do not expect HTTP redirects during Quarkus OIDC communicating with the OIDC provider."
msgstr "Quarkus OIDC 默认支持此类重定向，但如果在 Quarkus OIDC 与 OIDC 提供商通信时不希望出现 HTTP 重定向，则建议通过 `quarkus.oidc.follow-redirects=false` 将其禁用。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "TLS properties"
msgstr "TLS 属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.tls-configuration-name"
msgstr "quarkus.oidc.tls-configuration-name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "TLS Registry name"
msgstr "TLS 注册表名称"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use `quarkus.oidc.tls-configuration-name` to reference a xref:tls-registry-reference.adoc[TLS Registry] configuration that can be required when the OIDC provider requires an HTTPS connection or Quarkus OIDC provider client must use MTLS authentication."
msgstr "使用 `quarkus.oidc.tls-configuration-name` 引用 xref:tls-registry-reference.adoc[TLS 注册表] 配置，当 OIDC 提供商需要 HTTPS 连接或 Quarkus OIDC 提供商客户端必须使用 MTLS 身份验证时，可能需要该配置。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow"
msgstr "授权码流程"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow is a complex, multi-step process which may work with a few properties only but require a lot of tuning to deal with the specific OIDC or OAuth2 provider's implementation and deployment constraints."
msgstr "授权代码流是一个复杂的多步骤流程，可能只需几个属性就能运行，但需要进行大量调整，以应对特定 OIDC 或 OAuth2 提供商的实施和部署限制。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The authorization code flow is enabled with the `quarkus.oidc.application-type=web-app` application type."
msgstr "`quarkus.oidc.application-type=web-app` 应用程序类型启用了授权码流。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow initiation"
msgstr "启动授权码流程"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "An initial stage (first leg) of the authorization code flow requires Quarkus OIDC to build a correct redirect URL and redirect the user to the OIDC provider to authenticate."
msgstr "授权代码流的初始阶段（第一段）要求 Quarkus OIDC 建立一个正确的重定向 URL，并将用户重定向到 OIDC 提供商进行身份验证。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.redirect-path"
msgstr "quarkus.oidc.authentication.redirect-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC callback URL"
msgstr "OIDC 回调 URL"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.response-mode"
msgstr "quarkus.oidc.authentication.response-mode"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "query"
msgstr "询问"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC response mode"
msgstr "OIDC 响应模式"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.scopes"
msgstr "quarkus.oidc.authentication.scopes"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "openid"
msgstr "公开码"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Required OIDC scopes"
msgstr "所需的 OIDC 范围"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.add-openid-scope"
msgstr "quarkus.oidc.authentication.add-openid-scope"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Add `openid` scope"
msgstr "添加 `openid` 范围"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.scope-separator"
msgstr "quarkus.oidc.authentication.scope-separator"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "' '"
msgstr "' '"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Scope separator"
msgstr "范围分离器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.extra-params"
msgstr "quarkus.oidc.authentication.extra-params"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Extra parameters"
msgstr "额外参数"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.forward-params"
msgstr "quarkus.oidc.authentication.forward-params"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Forward parameters"
msgstr "前向参数"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.force-redirect-https-scheme"
msgstr "quarkus.oidc.authentication.force-redirect-https-scheme"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Force redirect HTTPS scheme"
msgstr "强制重定向 HTTPS 方案"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.allow-multiple-code-flows"
msgstr "quarkus.oidc.authentication.allow-multiple-code-flow"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Multi-tab support"
msgstr "支持多标签"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.redirect-path` relative path points to the Quarkus endpoint where the user is redirected to by OIDC provider, after the user completed the authentication challenge. The absolute address of this endpoint is the one you set during the OIDC application registration as a callback URL. For example, if the Quarkus endpoint is running at `https://myservice.com` and you have the `quarkus.oidc.authentication.redirect-path=service` redirect path then `https://myservice.com/service` is an absolute callback URL."
msgstr "`quarkus.oidc.authentication.redirect-path` 相对路径指向 OIDC 提供商在用户完成身份验证挑战后将用户重定向到的 Quarkus 端点。该端点的绝对地址是你在 OIDC 应用程序注册时设置的回调 URL。例如，如果 Quarkus 端点运行在 `https://myservice.com` `quarkus.oidc.authentication.redirect-path=service` 重定向路径，那么 `https://myservice.com/service` 就是一个绝对回调 URL。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.response-mode` defines how the OIDC provider returns the authorization code flow properties such as `code`. Usually, these parameters are returned as query parameters, for example, `https://myservice.com/service?code=somecode&state=somestate`. It is a `query` response mode which is supported by default."
msgstr "`quarkus.oidc.authentication.response-mode` 定义了 OIDC 提供商如何返回授权码流属性，如 。通常，这些参数作为查询参数返回，例如 `code` `https://myservice.com/service?code=somecode&state=somestate` .这是一种默认支持的 `query` 响应模式。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"However, such parameters may also be returned to Quarkus with the POST form payload directly in the request body. It is achieved by the provider returning an HTML page to the user and this page auto-submitting the form payload to Quarkus. Some providers such as xref:security-openid-connect-providers.adoc#apple[Apple] can enforce this response mode.\n"
"Set `quarkus.oidc.authentication.response-mode=form` if supporting this mode is required. Also note that in this case, setting `quarkus.oidc.authentication.remove-redirect-parameters=true` is not necessary, since the `code` and other parameters are submitted in the request body."
msgstr "不过，这些参数也可以直接在请求体中与 POST 表单有效载荷一起返回给 Quarkus。这是通过提供商向用户返回一个 HTML 页面，并由该页面自动将表单有效载荷提交给 Quarkus 来实现的。一些提供商（如 xref:security-openid-connect-providers.adoc#apple[苹果公司] ）可以强制执行这种响应模式。如果需要支持这种模式，请设置 `quarkus.oidc.authentication.response-mode=form` 。另外请注意，在这种情况下，设置 `quarkus.oidc.authentication.remove-redirect-parameters=true` 是不必要的，因为 `code` 和其他参数是在请求正文中提交的。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Most OIDC providers expect a `scope=openid` parameter in the initial redirect URL, and Quarkus always adds it itself by default, there is no need to do `quarkus.oidc.authentication.scopes=openid`, but quite often you may have to provide an additional scope or a comma separated list of scopes to request additional permissions for the access token that will be issued (alongside ID and refresh tokens) once the authorization code flow is completed.\n"
"For example, if you need Quarkus application to read your Google Calendar on your behalf, you can do `quarkus.oidc.authentication.scopes=https://www.googleapis.com/auth/calendar.readonly`."
msgstr "大多数 OIDC 提供商都希望在初始重定向 URL 中添加 `scope=openid` 参数，Quarkus 默认会自行添加该参数，因此无需执行 `quarkus.oidc.authentication.scopes=openid` ，但通常情况下，您可能需要提供一个额外的作用域或一个逗号分隔的作用域列表，以便在授权代码流程完成后，为将要发布的访问令牌（与 ID 和刷新令牌一起）请求额外的权限。例如，如果你需要 Quarkus 应用程序代表你读取 Google 日历，你可以使用 `quarkus.oidc.authentication.scopes=https://www.googleapis.com/auth/calendar.readonly` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If more than one scope has to be submitted to the OIDC provider, then a ` ` space character (URL encoded as `%20`) is used to separate multiple scope values, for example, `scope=openid%20scope=read`. Some OAuth2 providers, notably xref:security-openid-connect-providers.adoc#strava[Strava OAuth2] expect a comma `,` separator, thus you can do `quarkus.oidc.authentication.scope-separator=,`, etc."
msgstr "如果必须向 OIDC 提供商提交一个以上的范围，则使用```空格字符（URL 编码为 `%20` ）来分隔多个范围值，例如 `scope=openid%20scope=read` 。有些 OAuth2 提供商（特别是 xref:security-openid-connect-providers.adoc#strava[Strava OAuth2] ）希望使用逗号 `,` 分隔符，因此可以使用 `quarkus.oidc.authentication.scope-separator=,` 等。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Most OAuth2 providers fail if they see an `openid` scope but this scope is expected by default by most OIDC providers. This is when `quarkus.oidc.authentication.add-openid-scope=false` may have to be set."
msgstr "大多数 OAuth2 提供商在看到 `openid` 范围时都会失败，但大多数 OIDC 提供商默认情况下都会使用该范围。这时可能需要设置 `quarkus.oidc.authentication.add-openid-scope=false` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Apart from the usual `scope`, `redirect_uri` and `state` query initial redirect parameters, other parameters may have to be included, and the map `quarkus.oidc.authentication.extra-params` property can help, for example, `quarkus.oidc.authentication.extra-params.prompt=consent`, etc."
msgstr "除了常用的 `scope` , `redirect_uri` 和 `state` 查询初始重定向参数外，可能还需要包含其他参数，地图 `quarkus.oidc.authentication.extra-params` 属性可以提供帮助，例如 `quarkus.oidc.authentication.extra-params.prompt=consent` 等。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `quarkus.oidc.authentication.forward-params` map parameter can be used to choose which of the original user request URL's query parameters are included in the redirect URI that Quarkus creates before redirecting the user to authenticate. Use this property with care."
msgstr "`quarkus.oidc.authentication.forward-params` 映射参数可用于选择将哪些原始用户请求 URL 的查询参数包含在 Quarkus 创建的重定向 URI 中，然后再重定向用户以进行身份验证。请谨慎使用此属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.force-redirect-https-scheme` can be used to build a correct redirect URI when the original user request is made over HTTPS but the firewall terminates it and Quarkus sees the `http://` scheme.\n"
"By setting `quarkus.oidc.authentication.force-redirect-https-scheme=true`, you tell Quarkus to use the `https://` scheme, even when Quarkus OIDC sees the `http://` scheme in the current request URL, to ensure the user is correctly redirected to the HTTPS based OIDC authorization endpoint. Setting this property may not be necessary if you already enabled Quarkus to recognize adoc:http-reference#reverse-proxy[Forwarded or X-Forwarded headers]."
msgstr "`quarkus.oidc.authentication.force-redirect-https-scheme` 可用于在原始用户请求是通过 HTTPS 发出，但防火墙终止了它，Quarkus 看到 方案时，建立一个正确的重定向 URI。通过设置 ，你可以告诉 Quarkus 使用 方案，即使 Quarkus OIDC 在当前请求 URL 中看到 方案，以确保用户被正确重定向到基于 HTTPS 的 OIDC 授权端点。如果你已经启用了 Quarkus 来识别 adoc:http-reference#reverse-proxy[转发或 X-Forwarded 头信息]，则可能不需要设置此属性。 `http://` `quarkus.oidc.authentication.force-redirect-https-scheme=true` `https://` `http://` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.allow-multiple-code-flows` allows multi-tab authentication by default. For example, a user starts an authorization code flow in one tab, is about to enter the requested credentials, does not complete it because of some interruption, later opens another tab and starts and completes another authorization code flow, with the original one still pending in the first tab. Now, the already authenticated user returns to the first tab and completes it as well. If this kind of authentication flow flexibility is considered too much for the stricter authentication policies you may have, set `quarkus.oidc.authentication.allow-multiple-code-flows=false`. See also the `quarkus.oidc.authentication.fail-on-missing-kid` property description below."
msgstr "`quarkus.oidc.authentication.allow-multiple-code-flows` 默认情况下允许多标签页身份验证。例如，用户在一个标签页中启动一个授权码流程，准备输入请求的凭据，但由于某些中断而没有完成，随后打开另一个标签页，启动并完成另一个授权码流程，而原来的流程仍在第一个标签页中等待。现在，已通过身份验证的用户返回到第一个标签页，也完成了这一操作。如果您认为这种身份验证流程的灵活性太大，不适合您的严格身份验证策略，请设置 。另请参阅下面的 属性说明。 `quarkus.oidc.authentication.allow-multiple-code-flows=false` `quarkus.oidc.authentication.fail-on-missing-kid` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow completion"
msgstr "授权码流程完成"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A completion stage (second leg) of the authorization code flow requires Quarkus OIDC to exchange the authorizaion code for ID, access and refresh tokens."
msgstr "授权代码流的完成阶段（第二段）要求 Quarkus OIDC 将授权代码与 ID、访问和刷新令牌进行交换。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow completion properties"
msgstr "授权码流程完成属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.code-grant.extra-params"
msgstr "quarkus.oidc.code-grant.extra-params"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.code-grant.headers"
msgstr "quarkus.oidc.code-grant.headers"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Extra headers"
msgstr "额外页眉"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.restore-path-after-redirect"
msgstr "quarkus.oidc.authentication.restore-path-after-redirect"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Restore path after redirect"
msgstr "重定向后恢复路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.remove-redirect-parameters"
msgstr "quarkus.oidc.authentication.remove-redirect-parameters"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Remove redirect parameters after redirect"
msgstr "重定向后删除重定向参数"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.nonce-required"
msgstr "quarkus.oidc.authentication.nonce-required"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If nonce is required"
msgstr "如果需要 nonce"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.pkce-required"
msgstr "quarkus.oidc.authentication.pkce-required"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If Proof Key for Code Exchange (PKCE) is required"
msgstr "如果需要代码交换证明密钥 (PKCE)"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.user-info-required"
msgstr "quarkus.oidc.authentication.user-info-required"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If UserInfo is required"
msgstr "如果需要用户信息"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.code-grant.extra-params` is a map property which can be used to set additional parameters that must be sent to the OIDC token endpoint to complete the authorization code flow, after the user authenticated and got redirected to Quarkus with the authorization `code`. Often, this `code` and the `redirect_uri` which must match the one included in the initial authorization code flow redirect are sent as form parameters, in addition to the client authentication credentials."
msgstr "`quarkus.oidc.code-grant.extra-params` 是一个映射属性，可用于设置附加参数，这些参数必须在用户通过身份验证并使用授权 重定向到 Quarkus 之后发送到 OIDC 令牌端点，以完成授权代码流。通常情况下，除了客户端认证凭证外，该 和 （必须与初始授权码流重定向中包含的内容相匹配）还会作为表单参数发送。 `code` `code` `redirect_uri` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Sometimes, additional HTTP headers must also be provided to complete the authorization code flow. Use the `quarkus.oidc.code-grant.headers` map property in such cases."
msgstr "有时，还必须提供额外的 HTTP 标头来完成授权代码流。在这种情况下，请使用 `quarkus.oidc.code-grant.headers` map 属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.restore-path-after-redirect` can be used to restore the original request path which was used to initiate the authorization code flow.\n"
"For example, let's assume your application provides a lot of endpoints that require a secured access, and registering all possible initial secure Quarkus endpoint URLs as OIDC callback URLs is not possible. In such cases, `quarkus.oidc.authentication.restore-path-after-redirect=true` can be set to get Quarkus OIDC redirect the authenticated user to the original request URL after this user was returned to the callback URL configured with `quarkus.oidc.authenticaion.redirect-path`. In this case, the callback URL is expected to be virtual, there is no need to allocate a JAX-RS callback endpoint to support it."
msgstr "`quarkus.oidc.authentication.restore-path-after-redirect` 可用于恢复用于启动授权代码流的原始请求路径。例如，假设您的应用程序提供了大量需要安全访问的端点，而将所有可能的初始安全 Quarkus 端点 URL 注册为 OIDC 回调 URL 是不可能的。在这种情况下，可以设置 ，让 Quarkus OIDC 在将经过验证的用户返回到用 配置的回调 URL 之后，将该用户重定向到原始请求 URL。在这种情况下，回调 URL 预计是虚拟的，无需分配一个 JAX-RS 回调端点来支持它。 `quarkus.oidc.authentication.restore-path-after-redirect=true` `quarkus.oidc.authenticaion.redirect-path`"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.remove-redirect-parameters` forces an additional redirect after the authenticated user got redirected to Quarkus and the authorization code got exchanged for tokens and a session was established. This is done to drop the authorization code flow specific properties such as `code` and `state` from the URL, which, if the application does not follow with its own redirects, may remain visible in the browser as URL query parameters.\n"
"Note though that the `code` is a one time token that can only be exchanged by Quarkus OIDC which knows the client credentials required to complete the authorization code flow. However, in general, dropping these is RECOMMENDED and should be done by default."
msgstr "`quarkus.oidc.authentication.remove-redirect-parameters` 在通过验证的用户被重定向到 Quarkus、授权码与令牌交换并建立会话后，强制进行额外的重定向。这样做是为了从 URL 中删除授权代码流的特定属性，如 和 ，如果应用程序不遵循自己的重定向，这些属性可能会作为 URL 查询参数保留在浏览器中。需要注意的是， 是一次性令牌，只能由知道完成授权代码流所需客户端凭证的 Quarkus OIDC 进行交换。不过，一般情况下，我们建议并应该在默认情况下删除这些内容。 `code` `state` `code` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.nonce-required` is an authorization code flow security hardening property that can prevent replay attacks. If Quarkus is asked to generate it and include a `nonce=<generated_nonce>` query parameter during an initial authentication redirect, the OIDC provider must return an ID token which includes a `nonce` claim with a matching `nonce` value. It is set to `false` by default because it is not guaranteed to be supported by default by all OIDC and especially OAuth2 providers. Setting this property to `true` is `RECOMMENDED` if your provider supports this feature."
msgstr "`quarkus.oidc.authentication.nonce-required` 是一种授权代码流安全加固属性，可以防止重放攻击。如果在初始身份验证重定向过程中要求 Quarkus 生成它并包含 查询参数，则 OIDC 提供商必须返回一个 ID 令牌，其中包含一个与 值匹配的 声明。之所以默认设置为 ，是因为不能保证所有 OIDC（尤其是 OAuth2 提供商）都默认支持该属性。如果您的提供商支持此功能，则可将此属性设置为 ， 。 `nonce=<generated_nonce>` `nonce` `nonce` `false` `true` `RECOMMENDED` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.pkce-required` can be used to enable https://www.rfc-editor.org/rfc/rfc7636[Proof Key for Code Exchange (PKCE)]. PKCE is of primary interest to public SPA OIDC clients running in a browser. Typically, Quarkus OIDC acts as a confidential OIDC client which can prove to the OIDC provider that it knows the client secret, when PKCE is not strictly necessary. However you may have to enable it when your provider enforces PKCE for all authorization code flow clients."
msgstr "`quarkus.oidc.authentication.pkce-required` 可用于启用 link:https://www.rfc-editor.org/rfc/rfc7636[代码交换证明密钥（PKCE）] 。在浏览器中运行的公共 SPA OIDC 客户端对 PKCE 最感兴趣。通常情况下，Quarkus OIDC 作为一个保密的 OIDC 客户端，可以向 OIDC 提供商证明它知道客户秘密，此时 PKCE 并不是绝对必要的。但是，如果您的提供商对所有授权代码流客户端强制执行 PKCE，您可能就必须启用它。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the authorization code flow is completed, Quarkus gets access to the `ID token` which can provide sufficient information about the currently authenticated user. However, quite often, an additional remote request to the OIDC provider's https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] endpoint is required to get more details about the user."
msgstr "授权代码流程完成后，Quarkus 将访问 `ID token` ，该网站可提供有关当前已通过身份验证的用户的足够信息。不过，为了获得更多关于用户的详细信息，通常还需要向 OIDC 提供商的 link:https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] 端点发出额外的远程请求。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.user-info-required` can be used to enable an additional remote `UserInfo` request."
msgstr "`quarkus.oidc.authentication.user-info-required` 可用于启用额外的远程 请求。 `UserInfo` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"When you work with pure OAuth2 providers such as GitHub, setting `quarkus.oidc.authentication.user-info-required=true` is always required. The reason is that `OAuth2` does not provide `ID token`, but only an `access token`. In the OAuth2-only world alone, the access token is not even meant for the current client, which is the Quarkus endpoint which acquired it, but for this endpoint to access some downstream service on behalf of the current user.\n"
"But Quarkus needs to have an access to the current user identity, therefore this property must be set in such cases.\n"
"But since OAuth2 providers do not have a standard OIDC `UserInfo` endpoint, `quarkus.oidc.user-info-path` must be configured to point to the OAuth2 provider specific endpoint returning information about the current user, for example, in case of GitHub, it is `https://api.github.com/user`.\n"
"See the xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers] section for more informatiom."
msgstr "在使用纯 OAuth2 提供商（如 GitHub）时，总是需要设置 `quarkus.oidc.authentication.user-info-required=true` 。原因是 `OAuth2` 并不提供 `ID token` ，而只提供 `access token` 。仅在 OAuth2 的世界里，访问令牌甚至不是为当前客户端（即获取它的 Quarkus 端点）准备的，而是为该端点代表当前用户访问某些下游服务准备的。但 Quarkus 需要访问当前用户的身份，因此在这种情况下必须设置该属性。但是，由于 OAuth2 提供商没有标准的 OIDC `UserInfo` 端点，因此必须将 `quarkus.oidc.user-info-path` 配置为指向返回当前用户信息的 OAuth2 提供商特定端点，例如，在 GitHub 的情况下，它是 `https://api.github.com/user` .更多信息请参阅 xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 提供商] 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.user-info-required` is enabled automatically if it is detected that the Quarkus endpoint has `quarkus.oidc.UserInfo` injected - you `do not have to enable` this property in this case."
msgstr "`quarkus.oidc.authentication.user-info-required` 如果检测到 Quarkus 端点已注入 ，该属性将自动启用--在这种情况下， 。 `quarkus.oidc.UserInfo` `do not have to enable` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This property is also enabled automatically if you have to <<verify-access-token-with-user-info>> or work with OAuth2 providers that do not return an ID token but a binary access token only that must be indirectly verified with `UserInfo`, see the <<id-token-availability>> section for more details."
msgstr "如果您需要 <<verify-access-token-with-user-info>> 或使用 OAuth2 提供商，而这些提供商不返回 ID 令牌，只返回二进制访问令牌，且必须通过 `UserInfo` 进行间接验证，则该属性也会自动启用，详情请参阅 <<id-token-availability>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow errors"
msgstr "授权代码流程错误"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow is not always completed successfully. The user may cancel the authentication challenge or fail to provide the correct credentials. In such cases, instead of the `code` parameter, the `error` and `error_description` parameters are returned to Quarkus."
msgstr "授权代码流并非总能成功完成。用户可能会取消验证挑战或无法提供正确的凭证。在这种情况下，返回给 Quarkus 的不是 `code` 参数，而是 `error` 和 `error_description` 参数。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow error properties"
msgstr "授权码流错误属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.error-path"
msgstr "quarkus.oidc.authentication.error-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Error path"
msgstr "错误路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.fail-on-missing-state-param"
msgstr "quarkus.oidc.authentication.fail-on-missing-state-param"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Fail on missing state parameter"
msgstr "因缺少状态参数而失败"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.fail-on-missing-kid"
msgstr "quarkus.oidc.authentication.fail-on-missing-kid"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Fail on missing key"
msgstr "键丢失时失败"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the authorization code flow fails, the user gets HTTP 401 status error by default, but a better user experience can be provided by returning a formatted page explaining to the user what happened. You can use `quarkus.oidc.authentication.error-path` to point to the endpoint resource which can access the `error` and `error_description` parameters forwarded to it by Quarkus OIDC to create such a page."
msgstr "当授权代码流失败时，用户默认会收到 HTTP 401 状态错误，但通过返回一个格式化的页面向用户解释发生了什么，可以提供更好的用户体验。你可以使用 `quarkus.oidc.authentication.error-path` 来指向端点资源，该端点资源可以访问 Quarkus OIDC 转发给它的 `error` 和 `error_description` 参数，从而创建这样一个页面。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.fail-on-missing-state-param` is about controlling what should happen when the state cookie is detected, thus indicating that the first leg of the authorization code flow is about to be completed, but no matching `state` query parameter is found in what is expected a return redirect from the OIDC provider to Quarkus OIDC.\n"
"This property is set to `false` by default because it is the case with a multi-tab authentication, where a state cookie related to one tab is available but the current request represents a new tab authentication request (see also the `quarkus.oidc.authentication.allow-multiple-code-flows` property description in the <<authorization-code-flow-initiation>> section above).\n"
"It also makes it much easier to develop and test OIDC secured endpoints, since otherwise, trying to access Quarkus again after the failed or abandoned authentication attempts at the OIDC provider site can cause difficult to explain HTTP 401 status errors due to the loose state cookies, requiring cleaning the browser cache."
msgstr "`quarkus.oidc.authentication.fail-on-missing-state-param` 是为了控制当检测到状态 cookie，从而表明授权代码流的第一段即将完成，但在预期从 OIDC 提供商到 Quarkus OIDC 的返回重定向中没有找到匹配的 查询参数时应该发生的情况。该属性默认设置为 ，因为在多标签页认证中，与一个标签页相关的状态 cookie 是可用的，但当前请求代表一个新标签页认证请求（另请参阅上文 部分中的 属性描述）。这也使得开发和测试 OIDC 安全端点变得更加容易，否则，在 OIDC 提供商网站上尝试验证失败或放弃验证后，再次尝试访问 Quarkus 时，可能会因状态 cookie 的松散而导致难以解释的 HTTP 401 状态错误，这就需要清理浏览器缓存。 `state` `false` <<authorization-code-flow-initiation>> `quarkus.oidc.authentication.allow-multiple-code-flows` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.fail-on-missing-state-param=true` does not relax the security, it is primarily about the user experience: if, for whatever reasons, the authorization code flow can not be completed due to a misssing `state` query parameter, the user is redirected to the OIDC provider to re-authenticate, rather than returning a blank HTTP 401 response to the user."
msgstr "`quarkus.oidc.authentication.fail-on-missing-state-param=true` 并不放松安全性，它主要关注的是用户体验：如果由于 查询参数错误等任何原因导致授权代码流程无法完成，用户将被重定向到 OIDC 提供商处重新进行身份验证，而不是向用户返回一个空白的 HTTP 401 响应。 `state` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.fail-on-missing-kid` property is related to the mult-tab authentication. It can happen that the session's ID token signature can no longer be verified because the authentication in another tab caused a verification key refresh, and the key identifier for the current ID token can no longer be found, causing HTTP `401`. To request the user re-authentication instead, you may want to set this property to `false`. It is set to `true` by default to stress that a situation where a token's signature can not be verified should be treated with care."
msgstr "`quarkus.oidc.authentication.fail-on-missing-kid` 属性与多标签页身份验证有关。可能会出现会话的 ID 令牌签名无法再验证的情况，因为另一个标签页的身份验证导致验证密钥刷新，而当前 ID 令牌的密钥标识符无法再找到，从而导致 HTTP 。要请求用户重新进行身份验证，可能需要将此属性设置为 。默认设置为 是为了强调应谨慎处理令牌签名无法验证的情况。 `401` `false` `true` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "SPA integration"
msgstr "SPA 集成"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.java-script-auto-redirect"
msgstr "quarkus.oidc.authentication.java-script-auto-redirect"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "if Java Script auto redirect is required"
msgstr "如果需要 Java Script 自动重定向"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When you use SPA to delegate to Quarkus OIDC to manage the authorization code flow, `quarkus.oidc.authentication.java-script-auto-redirect` can be used to work around the fact that many OIDC providers do not support CORS for their authorization endpoints which challenge the user with the authentication screen. By setting`quarkus.oidc.authentication.java-script-auto-redirect=true`, you request Quarkus to return HTTP  `499` status, instead of the `302` redirect that would be blocked due to the lack of CORS support for such redirects on the OIDC provider's side, when this redirect is managed by the SPA XHR. The SPA can catch the `499` error and use the `window` API to bypass the browser script restrictions."
msgstr "当您使用 SPA 委托 Quarkus OIDC 管理授权代码流时， `quarkus.oidc.authentication.java-script-auto-redirect` 可用于绕过许多 OIDC 提供商不支持其授权端点的 CORS 这一事实，这些授权端点通过验证屏幕向用户提出挑战。通过设置 \"quarkus.oidc.authentication.java-script-auto-redirect=true\"，您可以要求 Quarkus 返回 HTTP `499` 状态，而不是 `302` 重定向，因为当该重定向由 SPA XHR 管理时，由于 OIDC 提供商方面不支持 CORS，这种重定向会被阻止。SPA 可以捕捉到 `499` 错误，并使用 `window` API 绕过浏览器脚本限制。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See the <<custom-java-script-request-checker>> section for details about customizing Java Script request checks."
msgstr "有关自定义 Java Script 请求检查的详细信息，请参阅 <<custom-java-script-request-checker>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "ID token availability"
msgstr "ID 令牌可用性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.id-token-required"
msgstr "quarkus.oidc.authentication.id-token-required"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "if ID token is required"
msgstr "如果需要 ID 标记"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.internal-id-token-lifespan"
msgstr "quarkus.oidc.authentication.internal-id-token-lifespan"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "access token `expires_in` property"
msgstr "访问令牌 `expires_in` 属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "internal ID token lifespan"
msgstr "内部 ID 令牌寿命"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"OIDC is different from OAuth2 because it adds a new type of token representing the user authentication, `ID token`.\n"
"`quarkus-oidc` works with compliant OIDC providers which return an ID token but also has to support OAuth2 providers which do not return it. Use `quarkus.oidc.authentication.id-token-required=false` to tell Quarkus that your provider can not provide a required ID token.\n"
"In this case, Quarkus generates an internal ID token to represent a session.\n"
"Quarkus OIDC also expects that the OAuth2 provider specific `UserInfo` endpoint path is configured with `quarkus.oidc.user-info-path` to fetch information about the current user."
msgstr "OIDC 与 OAuth2 不同，因为它增加了一种代表用户身份验证的新令牌类型，即 `ID token` 。 `quarkus-oidc` 与返回 ID 令牌的 OIDC 提供商兼容，但也必须支持不返回 ID 令牌的 OAuth2 提供商。使用 `quarkus.oidc.authentication.id-token-required=false` 告诉 Quarkus 你的提供商无法提供所需的 ID 令牌。在这种情况下，Quarkus 会生成一个内部 ID 标记来代表一个会话。Quarkus OIDC 还希望 OAuth2 提供商特定的 `UserInfo` 端点路径配置为 `quarkus.oidc.user-info-path` ，以获取当前用户的信息。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Since the session has to be created but the OAuth2 provider does not return an ID token which can be used to calculate the session age, an `quarkus.oidc.authentication.internal-id-token-lifespan` duration property can be used to set the session lifespan. When the OAuth2 server returns an access token `expires_in` property then this property is used as a session age property, if `quarkus.oidc.authentication.internal-id-token-lifespan` is not configured."
msgstr "由于会话必须创建，但 OAuth2 提供商不会返回可用于计算会话年龄的 ID 标记，因此可使用 `quarkus.oidc.authentication.internal-id-token-lifespan` duration 属性来设置会话寿命。当 OAuth2 服务器返回访问令牌 `expires_in` 属性时，如果未配置 `quarkus.oidc.authentication.internal-id-token-lifespan` ，该属性将用作会话年龄属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Authorization code flow cookies"
msgstr "授权码流 cookie"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC creates a `state` cookie when an authorization code flow is started and a `session` cookie when it is completed."
msgstr "Quarkus OIDC 在授权码流开始时创建 `state` cookie，在授权码流结束时创建 `session` cookie。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Common cookie properties"
msgstr "常见的 cookie 属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The common cookie properties impact both the authorization code flow session and state cookies."
msgstr "通用 cookie 属性对授权代码流程会话和状态 cookie 都有影响。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-path"
msgstr "quarkus.oidc.authentication.cookie-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "'/'"
msgstr "'/'"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie path"
msgstr "cookie 路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-domain"
msgstr "quarkus.oidc.authentication.cookie-domain"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie domain"
msgstr "cookie 域名"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-path-header"
msgstr "quarkus.oidc.authentication.cookie-path-header"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie path header"
msgstr "cookie 路径标头"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-same-site"
msgstr "quarkus.oidc.authentication.cookie-same-site"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "lax"
msgstr "涣散"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie SameSite status"
msgstr "cookie 的 SameSite 状态"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-suffix"
msgstr "quarkus.oidc.authentication.cookie-suffix"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie suffix"
msgstr "cookie 后缀"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.cookie-force-secure"
msgstr "quarkus.oidc.authentication.cookie-force-secure"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The cookie force secure"
msgstr "cookie 强制安全"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.authentication.cookie-path` and `quarkus.oidc.authentication.cookie-domain` properties control which application paths the state and session cookies will be available at. The wider the cookie-path is (\"/\"), the wider the application secured space can be. You may want to restrict it to more specific paths such as `/secured`, to make it easier to handle the public space available at paths such as `/public`.\n"
"You may also want to restrict it when the specific endpoint paths should only be accessible by users who authenticated with specific providers only. For example, `/keycloak` path can only accessible by users authenticated with Keycloak, `/google` - with Google, etc. See also the <<multi-tenancy>> section for more information."
msgstr "`quarkus.oidc.authentication.cookie-path` 和 属性控制着状态和会话 cookie 的应用路径。Cookie 路径越宽（\"/\"），应用程序的安全空间就越宽。您可能希望将其限制在更具体的路径（如 ）上，以便更容易处理在路径（如 ）上可用的公共空间。当特定端点路径只能由通过特定提供商验证的用户访问时，也可能需要对其进行限制。例如， 路径只能由通过 Keycloak 验证的用户访问， - 通过 Google 等。更多信息，请参阅 部分。 `quarkus.oidc.authentication.cookie-domain` `/secured` `/public` `/keycloak` `/google` <<multi-tenancy>> "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-path-header` can be used to dynamically set the required cookie path - this property should be used with care and only when it fits your deployment requirements."
msgstr "`quarkus.oidc.authentication.cookie-path-header` 可用于动态设置所需的 cookie 路径--应谨慎使用该属性，只有在符合部署要求时才可使用。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-same-site` defines a `Same-Site` attribute as `lax` by default, since setting it to `strict` proved to be breaking some deployments. However, setting it to `strict` is RECOMMENDED when it is known to work in your deployment, for example, when the OIDC provider is hosted in the same domain as the application, etc."
msgstr "`quarkus.oidc.authentication.cookie-same-site` 将 属性默认定义为 ，因为将其设置为 会破坏某些部署。不过，如果已知该属性在部署中有效，例如 OIDC 提供商与应用程序托管在同一域中，则建议将其设置为 。 `Same-Site` `lax` `strict` `strict` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-suffix` can be used to customize the state and session cookie names. For example, by setting `%test.quarkus.oidc.authentication.cookie-suffix=test` you can have the session cookie name qualified with the `_test` suffix in the test profile only."
msgstr "`quarkus.oidc.authentication.cookie-suffix` 可用于自定义状态和会话 cookie 名称。例如，通过设置 ，就可以只在测试配置文件中使用 后缀限定会话 cookie 名称。 `%test.quarkus.oidc.authentication.cookie-suffix=test` `_test` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-force-secure` may only be relevant in some deployments if Quarkus is listening on non-secure HTTP protocol but running behind HTTPS terminating reverse proxy. This property has no impact if Quarkus is listening on HTTPS, when cookies are always secure."
msgstr "`quarkus.oidc.authentication.cookie-force-secure` 只有在 Quarkus 监听非安全 HTTP 协议但运行在 HTTPS 终止反向代理后面的情况下，才可能与某些部署相关。如果 Quarkus 监听的是 HTTPS，cookie 始终是安全的，则此属性不会产生任何影响。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "State cookie"
msgstr "国家 cookie"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "State cookie properties"
msgstr "状态 cookie 属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.state-secret"
msgstr "quarkus.oidc.authentication.state-secret"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "State cookie encryption secret"
msgstr "状态 cookie 加密密文"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.state-cookie-age"
msgstr "quarkus.oidc.authentication.state-cookie-age"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "5 min"
msgstr "5 分钟"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "State cookie age"
msgstr "国家 cookie 年龄"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC creates a state cookie whose value must match the `state` query parameter passed between Quarkus and the OIDC provider during two redirects.\n"
"In addition to the actual state value, the state cookie may need to keep the `nonce` value if an ID token is required to contain a `nonce` claim with `quarkus.oidc.authentication.nonce-required=true` and a Proof Key for Code Exchange (PKCE) `code-verifier` if PKCE is required with `quarkus.oidc.authentication.pkce-required=true`. Both of these values must be encrypted. In such cases, the state cookie is encrypted with a generated secret key but you can provide your own, typically a 32 characters long, state cookie encryption secret with `quarkus.oidc.authentication.state-secret`."
msgstr "Quarkus OIDC 会创建一个状态 cookie，其值必须与两次重定向期间在 Quarkus 和 OIDC 提供商之间传递的 `state` 查询参数相匹配。除了实际的状态值外，如果要求 ID 令牌包含 `nonce` 索赔（ `quarkus.oidc.authentication.nonce-required=true` ），则状态 cookie 可能需要保留 `nonce` 的值，如果要求 PKCE 包含 `quarkus.oidc.authentication.pkce-required=true` ，则状态 cookie 可能需要保留代码交换证明密钥（PKCE） `code-verifier` 的值。这两个值都必须加密。在这种情况下，状态 cookie 会使用生成的密钥加密，但您也可以通过 `quarkus.oidc.authentication.state-secret` 提供自己的状态 cookie 加密密钥（通常为 32 个字符）。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.state-cookie-age` defines a state cookie lifespan."
msgstr "`quarkus.oidc.authentication.state-cookie-age` 定义了状态 cookie 的生命周期。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session cookie and refresh"
msgstr "会话 cookie 和刷新"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session cookie is created after an authorizaion code flow is completed. An expired session cookie can be refreshed."
msgstr "会话 cookie 在授权代码流程完成后创建。过期的会话 cookie 可以刷新。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session properties"
msgstr "会议属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.refresh-expired"
msgstr "quarkus.oidc.token.refresh-expired"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow refreshing token"
msgstr "允许刷新令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.refresh-token-time-skew"
msgstr "quarkus.oidc.token.refresh-token-time-skew"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Refresh token time skew"
msgstr "刷新令牌时间偏差"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.session-age-extension"
msgstr "quarkus.oidc.authentication.session-age-extension"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "5 minutes"
msgstr "5 分钟"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session age extension"
msgstr "会龄延长"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.session-expired-path"
msgstr "quarkus.oidc.authentication.session-expired-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Session expired path"
msgstr "会话过期路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.refresh-expired` can be used to enable automatic user session renewal when the user session has expired and the refresh token is available. This property is not enabled by default because with the automatic renewal, the user, after authenticating once, may not be asked to re-authenticate for a very long time. Therefore an admin level decision may be required to enable an automatic session renewal."
msgstr "`quarkus.oidc.token.refresh-expired` 可用于在用户会话过期且刷新令牌可用时启用自动用户会话更新。默认情况下不启用此属性，因为在自动更新的情况下，用户认证一次后，可能在很长一段时间内都不会被要求重新认证。因此，启用会话自动更新可能需要管理员级别的决定。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If you prefer the users to re-authenticate after some rather long idle period of time, consider configuring `quarkus.oidc.authentication.session-expired-path` instead, see below for more details."
msgstr "如果希望用户在一段较长的闲置时间后重新进行身份验证，可考虑配置 `quarkus.oidc.authentication.session-expired-path` ，详情请见下文。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.token.refresh-token-time-skew` can be used to force the refresh when it is allowed with `quarkus.oidc.token.refresh-expired` and the ID token in the session cookie is still valid.\n"
"You can use this property to request the refresh if a still valid ID token is due to expire within the next hour. If you would like to auto-refresh user sessions, then having this property minimizes the risk of the user missing out on the session refresh if the session cookie itself got expired and removed by the browser. When you use SPA, you can have a background thread pinging Quarkus periodically, leading to a session refresh once Quarkus determines the ID token will expire soon within a configured `quarkus.oidc.token.refresh-token-time-skew` period of time."
msgstr "`quarkus.oidc.token.refresh-token-time-skew` 可用于在 允许刷新且会话 cookie 中的 ID 标记仍然有效时强制刷新。如果仍然有效的 ID 标记将在下一小时内过期，则可使用此属性请求刷新。如果您想自动刷新用户会话，那么如果会话 cookie 本身过期并被浏览器删除，使用此属性可最大限度地降低用户错过会话刷新的风险。使用 SPA 时，可以让后台线程定期 ping Quarkus，一旦 Quarkus 确定 ID 标记即将在配置的 时间段内过期，就会刷新会话。 `quarkus.oidc.token.refresh-expired` `quarkus.oidc.token.refresh-token-time-skew` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, let's assume the ID token age is 6 hours and therefore the session cookie age is also 6 hours. If the user accessed Quarkus 1 hour before it was about to expire, and then stayed idle for 2 hours, then, after the user accesses Quarkus again, 7 hours after the session cookie was created and 1 hour after it and the ID token got expired and removed by the browser, Quarkus OIDC can only request the user re-authentication since it can no longer see the session cookie. To minimize a number of re-authentication attempts, consider extending the session age, for example, by 3 hours. Now, given the last example, Quarkus OIDC may still get access to the expired ID token and do somethnig useful with it if required - refresh it or offer a user a session expired page, instead of immediately requesting a new authentication."
msgstr "例如，假设 ID 令牌的有效期为 6 小时，因此会话 cookie 的有效期也是 6 小时。如果用户在过期前 1 小时访问了夸克，然后闲置了 2 小时，那么在用户再次访问夸克时，即会话 cookie 创建 7 小时后、会话 cookie 和 ID 令牌过期并被浏览器删除 1 小时后，夸克 OIDC 只能请求用户重新认证，因为它再也看不到会话 cookie 了。为了尽量减少重新认证尝试的次数，可以考虑延长会话年龄，例如延长 3 小时。现在，在上一个例子中，Quarkus OIDC 仍然可以访问过期的 ID 令牌，并在需要时对其进行一些有用的操作--刷新它或向用户提供会话过期页面，而不是立即请求新的身份验证。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `quarkus.oidc.token.refresh-token` property is automatically enabled if the `quarkus.oidc.token.refresh-token-time-skew` property is configured."
msgstr "如果配置了 `quarkus.oidc.token.refresh-token-time-skew` 属性，则会自动启用 `quarkus.oidc.token.refresh-token` 属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.session-expired-path` can be used to present the user whose session has expired with the page explaining that the session has expired and letting user follow a link to re-authenticate. It improves the user experience, since otherwise, the authenticated user, whose session has expired, may get surprised after getting an unexpected OIDC provider's authentication challenge screen, when accessing the Quarkus application, following some delay after successfully authenticating earlier."
msgstr "`quarkus.oidc.authentication.session-expired-path` 可用于向会话已过期的用户显示解释会话已过期的页面，并让用户点击链接重新认证。这可以改善用户体验，因为否则的话，会话已过期的已认证用户在访问夸克应用程序时，可能会在之前成功认证后的一些延迟之后，意外收到 OIDC 提供商的认证挑战屏幕，从而大吃一惊。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<token-state-manager>> section for more information about managing session cookies."
msgstr "另请参阅 <<token-state-manager>> 部分，了解有关管理会话 cookie 的更多信息。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Store authorization code flow tokens"
msgstr "存储授权代码流令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "After the authorization code flow is finished, ID token, access token, and refresh token must be retained to support the user session."
msgstr "授权代码流程结束后，必须保留 ID 令牌、访问令牌和刷新令牌，以支持用户会话。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"By defaut, Quarkus OIDC stores all three tokens in an encrypted session cookie, making Quarkus OIDC stateless.\n"
"Quarkus OIDC also provides the stateful xref:security-oidc-code-flow-authentication.adoc#db-token-state-manager[Database TokenStateManager] to store tokens in your database of choice and the xref:security-oidc-code-flow-authentication.adoc#redis-token-state-manager[Redis TokenStateManager] to store them in the Redis cache. Users can also register custom `quarkus.oidc.TokenStateManager` to store these tokens as required."
msgstr "根据定义，Quarkus OIDC 将所有三个令牌都存储在加密的会话 cookie 中，使 Quarkus OIDC 成为无状态。Quarkus OIDC 还提供了有状态 xref:security-oidc-code-flow-authentication.adoc#db-token-state-manager[数据库令牌状态管理器] （ xref:security-oidc-code-flow-authentication.adoc#redis-token-state-manager[Database] xref:security-oidc-code-flow-authentication.adoc#db-token-state-manager[TokenStateManager] ）和 xref:security-oidc-code-flow-authentication.adoc#redis-token-state-manager[Redis 令牌状态管理器（Redis TokenStateManager] ），前者可将令牌存储在你所选择的数据库中，后者可将令牌存储在 Redis 缓存中。用户还可以根据需要注册自定义 `quarkus.oidc.TokenStateManager` 来存储这些令牌。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default TokenStateManager"
msgstr "默认令牌状态管理器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.encryption-required"
msgstr "quarkus.oidc.token-state-manager.encryption-required"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Encrypt session cookie by default"
msgstr "默认情况下加密会话 cookie"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.encryption-secret"
msgstr "quarkus.oidc.token-state-manager.encryption-secret"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Encryption secret, with falling back to the client secret and finally a generated secret key"
msgstr "加密密文，回退到客户端密文，最后是生成的密钥"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.encryption-algorithm"
msgstr "quarkus.oidc.token-state-manager.encryption-algorithm"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A256GCMKW"
msgstr "A256GCMKW"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Encryption algorithm"
msgstr "加密算法"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.split-tokens"
msgstr "quarkus.oidc.token-state-manager.split-tokens"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Cookie per token"
msgstr "每个令牌的 Cookie"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-state-manager.strategy"
msgstr "quarkus.oidc.token-state-manager.strategy"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Keep ID, access and refresh tokens"
msgstr "保存 ID、访问和刷新令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Keep all or some of ID, access and refresh tokens"
msgstr "保留全部或部分 ID、访问和刷新令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default `TokenStateManager` keeps tokens in an encrypted session cookie by default. Encrypting the tokens increases the session cookie size - you might want to consider disabling the session cookie encryption when the Quarkus application and its clients all operate within an internal, secure network."
msgstr "默认情况下， `TokenStateManager` 会将令牌保存在加密的会话 cookie 中。对令牌进行加密会增加会话 cookie 的大小--当 Quarkus 应用程序及其客户端都在内部安全网络中运行时，你可能需要考虑禁用会话 cookie 加密。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A session cookie encryption secret can be configured with `quarkus.oidc.token-state-manager.encryption-secret`. Quarkus OIDC fallbacks to the configured client secret if the encryption secret is not configured, and, if the client secret is also not available (for example, when the JWT `private_key_jwt` or MTLS client authentication method is used) -  generates a secure random secret itself. Be aware that generating an encryption secret can cause re-authentication failures in a multi-pod container deployment where one pod may not be able to decrypt a session cookie encrypted by the secret known to another pod only."
msgstr "会话 cookie 的加密秘密可以通过 `quarkus.oidc.token-state-manager.encryption-secret` 进行配置。如果没有配置加密秘 密，Quarkus OIDC 会回退到已配置的客户端秘密；如果客户端秘密也不可用（例如，在使用 JWT `private_key_jwt` 或 MTLS 客户端验证方法时），则会自行生成一个安全的随机秘密。请注意，在多 pod 容器部署中，生成加密密文可能会导致重新身份验证失败，因为一个 pod 可能无法解密由仅另一个 pod 知晓的密文加密的会话 cookie。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWE encryption is used to encrypt the session cookie, using the `A256GCMKW` algorithm to wrap the generated content encryption key by default. You can try to use the JWE `dir` encryption with `quarkus.oidc.token-state-manager.encryption-algorithm=dir` which can produce shorter JWE sequences as the encryption and decryption is done with the same session cookie encryption key directly, avoiding the need to generate and wrap a content encryption key."
msgstr "JWE 加密用于加密会话 cookie，默认情况下使用 `A256GCMKW` 算法来封装生成的内容加密密钥。您可以尝试使用 `quarkus.oidc.token-state-manager.encryption-algorithm=dir` 的 JWE `dir` 加密，这可以产生更短的 JWE 序列，因为加密和解密是直接使用相同的会话 cookie 加密密钥完成的，无需生成和封装内容加密密钥。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The encrypted session cookie with up to three tokens may exceed a 4096 bytes cookie size limit, causing the browser to drop it. If it happens, Quarkus OIDC attempts to split the large session cookie into individual session cookie chunks by default and re-assemble them into a single session cookie when the user returns, before decrypting it. But you can try the `quarkus.oidc.token-state-manager.split-tokens=true` option in order to have one session cookie per token - where the main session cookie keeps an ID token, and two more session cookies - access and refresh tokens."
msgstr "包含最多三个令牌的加密会话 Cookie 可能会超过 4096 字节的 Cookie 大小限制，从而导致浏览器将其丢弃。如果发生这种情况，Quarkus OIDC 默认会尝试将大的会话 Cookie 分割成单独的会话 Cookie 块，并在用户返回时将它们重新组合成一个会话 Cookie，然后再解密。不过，你可以试试 `quarkus.oidc.token-state-manager.split-tokens=true` 选项，以便每个令牌都有一个会话 Cookie，其中主会话 Cookie 保留 ID 令牌，另外两个会话 Cookie 保留访问令牌和刷新令牌。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token-state-manager.strategy` can be used to optimize the token storage by not storing the tokens your application does not intend to use."
msgstr "`quarkus.oidc.token-state-manager.strategy` 可用于优化令牌存储，不存储应用程序不打算使用的令牌。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, you can do `quarkus.oidc.token-state-manager.strategy=id-refresh-tokens` which means that your application is not intending to use an access token directly or propagate it to downstream services, all it wants is to use ID token to interact with the user and keep refreshing the session."
msgstr "例如，您可以使用 `quarkus.oidc.token-state-manager.strategy=id-refresh-tokens` ，这意味着您的应用程序不打算直接使用访问令牌或将其传播给下游服务，它只想使用 ID 令牌与用户交互并不断刷新会话。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If your application does not need to use access tokens but only interact with the authenticated user who must always re-authenticate when the session expires, consider `quarkus.oidc.token-state-manager.strategy=idtoken` - which retains ID token only, ignoring both access and refresh tokens."
msgstr "如果您的应用程序不需要使用访问令牌，只需要与已通过身份验证的用户交互，而该用户必须在会话过期时重新进行身份验证，那么可以考虑使用 `quarkus.oidc.token-state-manager.strategy=idtoken` ，它只保留 ID 令牌，而忽略访问令牌和刷新令牌。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Logout"
msgstr "注销"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC supports three standard OIDC logout options: <<rp-initiated-logout>>, <<back-channel-logout>>, and <<front-channel-logout>>, as well as a local logout option. See the xref:security-oidc-code-flow-authentication.adoc#logout-and-expiration[OIDC logout] section for more information."
msgstr "Quarkus OIDC 支持三种标准 OIDC 注销选项： <<rp-initiated-logout>> , <<back-channel-logout>> , 和 <<front-channel-logout>> , 以及一个本地注销选项。更多信息，请参阅 xref:security-oidc-code-flow-authentication.adoc#logout-and-expiration[OIDC 注销] 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "RP-initiated Logout"
msgstr "RP 启动的注销"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`RP-initiated` logout involves the logged-in user initiating a logout request by calling an application logout endpoint. Quarkus OIDC intercepts this request, clears the session cookie and redirects the user to the OIDC provider's logout endpoint."
msgstr "`RP-initiated` 注销是指登录用户通过调用应用程序注销端点发起注销请求。Quarkus OIDC 会拦截该请求，清除会话 cookie，并将用户重定向到 OIDC 提供商的注销端点。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "RP-initiated logout properties"
msgstr "RP 启动的注销属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.path"
msgstr "quarkus.oidc.logout.path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Logout path"
msgstr "注销路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.post-logout-path"
msgstr "quarkus.oidc.logout.post-logout-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Post logout path"
msgstr "注销后路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.post-logout-uri-param"
msgstr "quarkus.oidc.logout.post-logout-uri-param"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Post logout uri param"
msgstr "登出后的 uri 参数"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.extra-params"
msgstr "quarkus.oidc.logout.extra-params"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Logout extra params"
msgstr "注销额外参数"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.logout-mode"
msgstr "quarkus.oidc.logout.logout-mode"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Logout mode"
msgstr "注销模式"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.path` is a relative path where a user logout request should be sent to. For example, given `quarkus.oidc.logout.path=/logout`, a `Logout` link in the SPA page can point to `http://localhost:8080/logout`. This path can be virtual, you do not have to create a JAX-RS endpoint or route handler listening on `/logout`. But for the `quarkus.oidc.logout.path` be effective, it must be secured, see the https://quarkus.io/guides/security-oidc-code-flow-authentication#user-initiated-logout[User-initiated logout] section for more details."
msgstr "`quarkus.oidc.logout.path` 是用户注销请求应发送到的相对路径。例如，给定 ，SPA 页面中的 链接可指向 `quarkus.oidc.logout.path=/logout` `Logout` `http://localhost:8080/logout` .该路径可以是虚拟的，您不必在 `/logout` 上创建 JAX-RS 端点或路由处理程序。但要使 `quarkus.oidc.logout.path` 有效，必须确保其安全，详情请参阅 \" link:https://quarkus.io/guides/security-oidc-code-flow-authentication#user-initiated-logout[用户主动注销] \"部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.logout.post-logout-path` points to a public endpoint where you would like the provider redirect the looged-out user to.\n"
"For example, the logged out user can be returned to the application's welcome page with `quarkus.oidc.logout.post-logout-path=/welcome.html` where this user can choose to login again.\n"
"For the post logout redirect to work, OIDC providers usually require registering absolute post logout URLs such as `http://localhost:8080/welcome.html`. Please do not forget, it must be a public endpoint, otherwise the user will be requested to login immediately after choosing to logout."
msgstr "`quarkus.oidc.logout.post-logout-path` 指向一个公共端点，您希望提供程序将注销用户重定向到该端点。例如，注销用户可以返回到应用程序的欢迎页面（ ），在该页面上用户可以选择再次登录。为使注销后重定向有效，OIDC 提供商通常要求注册绝对注销后 URL，如 `quarkus.oidc.logout.post-logout-path=/welcome.html` `http://localhost:8080/welcome.html` .请不要忘记，这必须是一个公共端点，否则用户在选择注销后将被要求立即登录。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.post-logout-uri-param` and `quarkus.oidc.logout.extra-params` can be used to customize the RP-initiated logout query parameters, for example, Auth0 might expect Auth0-specific logout query parameters, see the https://quarkus.io/guides/security-oidc-code-flow-authentication#user-initiated-logout[User-initiated logout] section for more details."
msgstr "`quarkus.oidc.logout.post-logout-uri-param` 和 可用于定制 RP 启动的注销查询参数，例如，Auth0 可能需要特定于 Auth0 的注销查询参数，详情请参阅 `quarkus.oidc.logout.extra-params` link:https://quarkus.io/guides/security-oidc-code-flow-authentication#user-initiated-logout[用户] 启动的注销部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"By default, all the logout parameters are serialized as logout URL query parameters.\n"
"Some OIDC providers may require that logout parameters are encoded as HTML form values and auto-submitted in the browser with the HTTP POST method and the `application/x-www-form-urlencoded` content type: set `quarkus.oidc.logout.logout-mode=form-post` in this case."
msgstr "默认情况下，所有注销参数都序列化为注销 URL 查询参数。某些 OIDC 提供商可能要求将注销参数编码为 HTML 表单值，并通过 HTTP POST 方法和 `application/x-www-form-urlencoded` 内容类型在浏览器中自动提交：在这种情况下，请设置 `quarkus.oidc.logout.logout-mode=form-post` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel Logout"
msgstr "后方通道注销"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Back-channel logout should be used for complex Quarkus applications involving several services, possibly on different hosts or ports, when supporting a global logout is required. The user, by choosing to logout from one of the services, also gets logged out from all other services.\n"
"The OIDC provider detects the logout request (for example, an RP-initiated one) from one of the services and sends back-channel notifications to all other Quarkus OIDC applications. See the xref:security-oidc-code-flow-authentication.adoc#back-channel-logout[OIDC Back-channel logout] section for more details."
msgstr "当需要支持全局注销时，应将后信道注销用于涉及多个服务（可能在不同主机或端口上）的复杂 Quarkus 应用程序。用户选择从其中一个服务注销后，也会从所有其他服务注销。OIDC 提供商会检测到来自其中一个服务的注销请求（例如，由 RP 发起的注销请求），并向所有其他 Quarkus OIDC 应用程序发送后端通知。有关详细信息，请参阅 \" xref:security-oidc-code-flow-authentication.adoc#back-channel-logout[OIDC 后端通道注销] \"部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "PLease be aware that supporting the back-channel logout option requires managing a cache of pending back-channel notifications. It may take awhile to clear them as it requires a user whose back-channel logout is pending to access Quarkus. The more users your application deals with, the larger the cache size can be."
msgstr "请注意，支持后退通道注销选项需要管理待处理后退通道通知的缓存。清除这些缓存可能需要一段时间，因为这需要正在等待后退通道注销的用户访问 Quarkus。应用程序处理的用户越多，缓存的大小就越大。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout properties"
msgstr "后方通道注销属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.path"
msgstr "quarkus.oidc.logout.backchannel.path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout path"
msgstr "后信道注销路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.logout-token-key"
msgstr "quarkus.oidc.logout.backchannel.logout-token-key"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`sub` claim"
msgstr "`sub` 声称"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout token key"
msgstr "后信道注销令牌密钥"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.token-cache-size"
msgstr "quarkus.oidc.logout.backchannel.token-cache-size"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "10"
msgstr "10"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout token cache size"
msgstr "后向通道注销令牌缓存大小"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.token-cache-time-to-live"
msgstr "quarkus.oidc.logout.backchannel.token-cache-time-to-live"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "10 minutes"
msgstr "10 分钟"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout token cache time to live"
msgstr "后信道注销令牌缓存有效时间"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.backchannel.clean-up-timer-interval"
msgstr "quarkus.oidc.logout.backchannel.clean-up-timer-interval"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Back-channel logout token cache clean up interval"
msgstr "后方信道注销令牌缓存清理时间间隔"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.backchannel.path` is a relative path the OIDC provider must send the back-channel logout notifications to."
msgstr "`quarkus.oidc.logout.backchannel.path` 是 OIDC 提供商必须向其发送后向通道注销通知的相对路径。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The back-channel notification contains a logout token. It must be cached so that when one of the authenticated users tries to access Quarkus, this user's ID token can be matched against this logout token. The subject (`sub`) claim value is used by default to match the ID and logout tokens, but the session id (`sid`) claim can be used instead."
msgstr "后方通道通知包含注销令牌。它必须被缓存起来，以便当某个已通过身份验证的用户尝试访问 Quarkus 时，可以将该用户的 ID 标记与注销标记进行匹配。默认情况下使用主题 ( `sub` ) 索赔值来匹配 ID 和注销令牌，但也可以使用会话 ID ( `sid` ) 索赔值来代替。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.backchannel.token-cache-size`, `quarkus.oidc.logout.backchannel.token-cache-time-to-live` and `quarkus.oidc.logout.backchannel.clean-up-timer-interval` are properties for managing the back-channel notification cache."
msgstr "`quarkus.oidc.logout.backchannel.token-cache-size` 、 `quarkus.oidc.logout.backchannel.token-cache-time-to-live` 和 `quarkus.oidc.logout.backchannel.clean-up-timer-interval` 是用于管理后向通道通知缓存的属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Front-channel logout"
msgstr "前置通道注销"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Front-channel logout is conceptually similar to the <<back-channel-logout>> but the notifications are forwarded to Quarkus via the browser. See the xref:security-oidc-code-flow-authentication.adoc#front-channel-logout[OIDC Front-channel logout] section for more details."
msgstr "前台注销在概念上与 <<back-channel-logout>> 相似，但通知是通过浏览器转发到 Quarkus 的。更多详情，请参阅 xref:security-oidc-code-flow-authentication.adoc#front-channel-logout[OIDC 前端通道注销] 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Front-channel logout properties"
msgstr "前置通道注销属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.frontchannel.path"
msgstr "quarkus.oidc.logout.frontchannel.path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Front-channel logout path"
msgstr "前置通道注销路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.logout.frontchannel.path` is a secure path where the browser will send the front-channel logout request to."
msgstr "`quarkus.oidc.logout.frontchannel.path` 是浏览器发送前台注销请求的安全路径。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Clear site data"
msgstr "清除站点数据"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "After the logout, you can request Quarkus OIDC to send a https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Clear-Site-Data[Clear-Site-Data] response header with one or more directives instructing the browser how to clear the browser cache."
msgstr "注销后，您可以请求 Quarkus OIDC 发送一个 link:https://developer.mozilla.org/en-US/docs/Web/HTTP/Reference/Headers/Clear-Site-Data[Clear-Site-Data] 响应头，其中包含一个或多个指令，指示浏览器如何清除浏览器缓存。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Clear-Site-Data header directives"
msgstr "清除站点数据头指令"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.logout.clear-site-data"
msgstr "quarkus.oidc.logout.clear-site-data"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A list of Clear-Site-Data header directives"
msgstr "Clear-Site-Data 标头指令列表"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The `cache`, `client-hints`, `cookies`, `execution-contexts` and wildcard `*` directives can be configured."
msgstr "可配置 `cache` , `client-hints` , `cookies` , `execution-contexts` 和通配符 `*` 指令。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token verification"
msgstr "令牌验证"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token properties cover a lot of requirements related to the token verification, introspection, key verification management, etc."
msgstr "令牌属性涵盖了与令牌验证、自省、密钥验证管理等相关的大量要求。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token preprocessing"
msgstr "代币预处理"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "ID and access tokens may have to be decrypted or their headers preprocessed for the verification process to start and succeed."
msgstr "身份和访问令牌可能需要解密或对其标头进行预处理，才能启动验证程序并取得成功。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token preprocessing properties"
msgstr "令牌预处理属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.decryption-key-location"
msgstr "quarkus.oidc.token.decryption-key-location"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Decryption key location"
msgstr "解密密钥位置"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.decrypt-id-token"
msgstr "quarkus.oidc.token.decrypt-id-token"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Decrypt ID token if this property is `true` or if `quarkus.oidc.token.decryption-key-location` is set"
msgstr "如果该属性为 `true` 或设置了 `quarkus.oidc.token.decryption-key-location` ，则 ID 令牌解密"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.decrypt-access-token"
msgstr "quarkus.oidc.token.decrypt-access-token"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Decrypt access token"
msgstr "解密访问令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.customizer-name"
msgstr "quarkus.oidc.token.customizer-name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Customizer name"
msgstr "自定义名称"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC providers usually issue signed ID and access tokens but may also additionally encrypt these tokens which Quarkus needs to decrypt to verify them. Choose which token types must be decrypted: the ID token with `quarkus.oidc.token.decrypt-id-token`, or the access token with `quarkus.oidc.token.decrypt-access-token`."
msgstr "OIDC 提供商通常会签发已签名的 ID 和访问令牌，但也可能会对这些令牌进行额外加密，Quarkus 需要对其进行解密以验证。选择必须解密的令牌类型：ID 令牌（ `quarkus.oidc.token.decrypt-id-token` ）或访问令牌（ `quarkus.oidc.token.decrypt-access-token` ）。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Both ID and access tokens are considered encrypted if they contain 5 parts separated by the dot character, indicating that the JWE encryption was used."
msgstr "如果 ID 和访问令牌包含 5 个由点字符分隔的部分，则这两个令牌都被认为是加密的，表示使用了 JWE 加密。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For backward compatibility reasons, ID token decryption is attempted if  `quarkus.oidc.token.decryption-key-location` is configured, but using an optional `quarkus.oidc.token.decrypt-id-token` boolean property is RECOMMENDED instead, to allow for more flexibility in selecting decryption keys."
msgstr "出于向后兼容的原因，如果配置了 `quarkus.oidc.token.decryption-key-location` ，则会尝试对 ID 令牌进行解密，但建议使用可选的 `quarkus.oidc.token.decrypt-id-token` 布尔运算属性，以便更灵活地选择解密密钥。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When either ID or access token must be decrypted, `quarkus.oidc.token.decryption-key-location` is checked first. If this property is not configured, then the <<jwt-client-credentials>> key, if available, is used. Finally, if the decryption key is still not initialized, the configured client secret is used as a decryption key."
msgstr "必须解密 ID 或访问令牌时，首先检查 `quarkus.oidc.token.decryption-key-location` 。如果未配置该属性，则使用 <<jwt-client-credentials>> 密钥（如果可用）。最后，如果解密密钥仍未初始化，则使用已配置的客户端秘密作为解密密钥。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.customizer-name` is an advanced property that may be used to select a specific `io.quarkus.oidc.TokenCustomizer` implementation which can pre-process JWT token headers before its signature can be verified. The main use-case is to support verifying legacy Azure JWT tokens which must have their `nonce` header recalculated for the signature verification to succeed."
msgstr "`quarkus.oidc.token.customizer-name` 是一个高级属性，可用于选择特定的 实现，该实现可在验证签名前预处理 JWT 标记头。主要用例是支持验证传统的 Azure JWT 标记，这些标记必须重新计算其 标头才能成功进行签名验证。 `io.quarkus.oidc.TokenCustomizer` `nonce` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token claims"
msgstr "代币索赔"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token verification claim properties impact the core token verification process, where the token claims or introspection properties must meet specific issuer, audience, age and other restrictions."
msgstr "令牌验证主张属性会影响核心令牌验证流程，令牌主张或反省属性必须符合特定的发行方、受众、年龄和其他限制。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token claims properties"
msgstr "令牌索赔属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.issuer"
msgstr "quarkus.oidc.token.issuer"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Discovered value"
msgstr "发现价值"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token issuer"
msgstr "代币发行人"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.audience"
msgstr "quarkus.oidc.token.audience"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "List of audiences"
msgstr "受众名单"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.subject-required"
msgstr "quarkus.oidc.token.subject-required"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "if the subject ('sub') claim is required"
msgstr "如果需要主体（'子'）索赔"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.issued-at-required"
msgstr "quarkus.oidc.token.issued-at-required"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "if the issued at ('iat') claim is required"
msgstr "如果需要提出已签发 ('IAT') 的索赔"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.age"
msgstr "quarkus.oidc.token.age"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token age"
msgstr "令牌年龄"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.lifespan-grace"
msgstr "quarkus.oidc.token.lifespan-grace"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Lifespan grace"
msgstr "寿命恩典"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.token-type"
msgstr "quarkus.oidc.token.token-type"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token type"
msgstr "令牌类型"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.principal-claim"
msgstr "quarkus.oidc.token.principal-claim"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Principal claim"
msgstr "主要索赔"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.required-claims"
msgstr "quarkus.oidc.token.required-claims"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Map of required string claims"
msgstr "所需字符串索赔图"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.signature-algorithm"
msgstr "quarkus.oidc.token.signature-algorithm"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Required signature algorithm"
msgstr "所需的签名算法"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enforcing that a token has been issued by the specific issuer is RECOMMENDED. The token issuer is discovered when the provider supports the discovery, otherwise `quarkus.oidc.token.issuer` can be set to a specific value."
msgstr "建议强制规定令牌由特定发行方发行。如果提供商支持发现令牌发行者，则可发现令牌发行者，否则 `quarkus.oidc.token.issuer` 可设置为特定值。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enforcing that a token is intended for a specific audience is RECOMMENDED. ID tokens are required to have an audience value matching the `quarkus.oidc.client-id` property by default. For bearer access tokens, the audiences are not standardized, for example, they can be URLs representing a target endpoint. When possible, bearer access tokens should also be restricted to have specific audience values."
msgstr "建议强制规定令牌针对特定受众。默认情况下，ID 令牌必须有一个与 `quarkus.oidc.client-id` 属性匹配的受众值。对于不记名访问令牌，受众没有标准化，例如可以是代表目标端点的 URL。在可能的情况下，也应限制不记名访问令牌具有特定的受众值。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.subject-required` can be used to enforce that a token has a unique subject value. If your provider allocates a subject to the token then requiring it is RECOMMENDED, especially when you deal with multiple OIDC and OAuth2 providers and would like to get a unique user identifier. This property is not set by defaul since some providers may not always set it. For example, a Keycloak lightweight access token may not have a subject (`sub`) claim set."
msgstr "`quarkus.oidc.token.subject-required` 可用于强制令牌具有唯一的主题值。如果您的提供商为令牌分配了主题，那么建议您要求它，尤其是当您使用多个 OIDC 和 OAuth2 提供商并希望获得唯一的用户标识符时。该属性不是默认设置，因为有些提供商可能并不总是设置它。例如，Keycloak 轻量级访问令牌可能没有设置主题 ( ) 索赔。 `sub`"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.issued-at-required` can be set to `false` when you have to deal with the providers which do not set a token `issued at time` (`iat`) claim."
msgstr "`quarkus.oidc.token.issued-at-required` 可设置为 ，以应对不设置令牌 ( ) 索赔的提供商。 `false` `issued at time` `iat`"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.age` property can be used to enforce how long an otherwise valid token can be used for. For example, some providers may issue tokens that are valid for several months - what if you do not want your users be able to access Quarkus with access tokens valid for a very long time ? In this case you can set a token age to some reasonable value such as 1 day, etc."
msgstr "`quarkus.oidc.token.age` 属性可用于强制执行原本有效的令牌的有效期限。例如，有些供应商可能会发放有效期长达数月的令牌--如果你不希望你的用户使用有效期很长的令牌访问 Quarkus，该怎么办呢？在这种情况下，你可以将令牌有效期设置为某个合理的值，如 1 天等。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.lifespan-grace` property should only be used to avoid token verification failures due to the possible clock skews."
msgstr "`quarkus.oidc.token.lifespan-grace` 属性只能用于避免因可能的时钟偏移而导致令牌验证失败。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.token-type` can be used to enforce the token type when you know the provider sets a type (`typ`) claim. For example, Keycloak issues the ID token, access token and refresh token in JWT format, how how can you prevent SPA sending an ID token to Quarkus as if it were a bearer access token ? Setting `quarkus.oidc.token.token-type=bearer` enforces that only a JWT access token that contains a type (`typ`) claim with the `bearer` value can be accepted."
msgstr "`quarkus.oidc.token.token-type` 可以用来在知道提供商设置了类型 ( ) 声明时强制执行令牌类型。例如，Keycloak 以 JWT 格式发布 ID 令牌、访问令牌和刷新令牌，那么如何防止 SPA 将 ID 令牌当作不记名访问令牌发送给 Quarkus 呢？设置 后，只有包含类型 ( ) 和 值的 JWT 访问令牌才能被接受。 `typ` `quarkus.oidc.token.token-type=bearer` `typ` `bearer` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.principal-claim` can be used to customize which token claim should be used to support Java Security `Principal` and MicroProfile JWT  `JsonWebToken` APIs for getting the principal name. The `upn`, `preferred_username`, `sub` are some of the claims that are used to find the principal name by default, but some tokens may have it in the `name` or some other claim, which is when you can set `quarkus.oidc.token.principal-claim=name`, etc."
msgstr "`quarkus.oidc.token.principal-claim` 可用于自定义哪个令牌声明应被用于支持 Java Security 和 MicroProfile JWT API 以获取委托人名称。 , , 是默认用于查找 principal name 的一些声明，但有些令牌可能在 或其他声明中包含 principal name，这时可以设置 等。 `Principal` `JsonWebToken` `upn` `preferred_username` `sub` `name` `quarkus.oidc.token.principal-claim=name`"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.required-claims` map property can be used to provide an additional simple check that the token contains specific string claim values."
msgstr "`quarkus.oidc.token.required-claims` map 属性可用于提供额外的简单检查，确保标记包含特定的字符串声明值。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<custom-jose4j-validator>> section for details about customizing the JWT token verification."
msgstr "另请参阅 <<custom-jose4j-validator>> 部分，了解有关自定义 JWT 令牌验证的详细信息。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "By default, Quarkus uses available verification keys to verify JWT token signatures with whatever assymetric algorithm is supported by the OIDC provider and the available key set. For example, a token signed with either `RS256` or `PS256` algorithm can be accepted if the JWK set constains a public key that can verify the RSA signature created with either of these two algorithms. However, you may have a policy that requires that only a specific algorithm such as `RS512` must be used - use `quarkus.oidc.token.signature-algorithm=RS512` to enforce it."
msgstr "默认情况下，Quarkus 使用可用的验证密钥来验证 JWT 令牌签名，无论 OIDC 提供商和可用密钥集支持哪种不对称算法。例如，如果 JWK 集包含的公钥可以验证用 `RS256` 或 `PS256` 算法创建的 RSA 签名，那么用这两种算法签名的令牌就可以被接受。但是，您可能有一项政策，要求只能使用特定算法，如 `RS512` - 使用 `quarkus.oidc.token.signature-algorithm=RS512` 来执行该政策。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Code flow access token"
msgstr "代码流访问令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Code flow access token verification"
msgstr "代码流访问令牌验证"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.authentication.verify-access-token"
msgstr "quarkus.oidc.authentication.verify-access-token"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Verify code flow access token"
msgstr "验证代码流访问令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC has a concept of a `primary` token. The bearer access token is a primary token because it is the only token which is used in the bearer access token flow and it is used by the external client to access Quarkus. Bearer access token `is always verified`.\n"
"ID token is a `primary` token in the authorizaion code flow - it represents the current authenticated user. ID token is `always verified`."
msgstr "Quarkus OIDC 有一个 `primary` 令牌的概念。不记名访问令牌是主要令牌，因为它是不记名访问令牌流中使用的唯一令牌，外部客户端使用它访问夸克斯。不记名访问令牌 `is always verified` 。ID 令牌是授权代码流中的 `primary` 令牌--它代表当前通过验证的用户。ID 令牌是 `always verified` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Code flow access token is not a primary token because it is not meant to be used to access the current Quarkus application which has completed the authorization code flow. Be it OIDC or OAuth2, the code flow access token is meant to be used to access another service on behalf of the currently authenticated user. For example, sending an `openid` scope during the authentication redirect to the provider leads to it issuing an access token that Quarkus application can use to fetch UserInfo from this provider on behalf of the user."
msgstr "代码流访问令牌不是主令牌，因为它不是用来访问已完成授权代码流的当前 Quarkus 应用程序的。无论是 OIDC 还是 OAuth2，代码流访问令牌都是用来代表当前通过身份验证的用户访问其他服务的。例如，在验证重定向过程中向提供商发送 `openid` 范围，提供商就会发出一个访问令牌，Quarkus 应用程序可以用它来代表用户从该提供商获取 UserInfo。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "It is the job of the OIDC provider or one of the downstream Quarkus services that this Quarkus application needs to access with the code flow access token to verify it. This is one of the reasons the code flow access tokens are often provided as binary tokens."
msgstr "OIDC 提供商或该 Quarkus 应用程序需要使用代码流访问令牌访问的某个下游 Quarkus 服务需要对其进行验证。这也是代码流访问令牌通常作为二进制令牌提供的原因之一。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "However, if you have designed your application with an expectation that the code flow access token, typically in JWT format, can be used as a source of roles or other information relevant to your application then do `quarkus.oidc.authentication.verify-access-token=true`. Quarkus enables this property automatically if it can detect that `JsonWebToken` without an `@IdToken` qualifier is injected in the application code, indicating that the application intends to access a code flow access token."
msgstr "但是，如果您在设计应用程序时希望将代码流访问令牌（通常为 JWT 格式）用作角色源或与应用程序相关的其他信息源，那么请使用 `quarkus.oidc.authentication.verify-access-token=true` 。如果 Quarkus 能够检测到应用程序代码中注入了不含 `@IdToken` 限定符的 `JsonWebToken` ，表明应用程序打算访问代码流访问令牌，那么 Quarkus 就会自动启用该属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Verify access token with UserInfo"
msgstr "使用用户信息验证访问令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.verify-access-token-with-user-info"
msgstr "quarkus.oidc.token.verify-access-token-with-user-info"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Verify access token indirectly by requesting UserInfo"
msgstr "通过请求用户信息间接验证访问令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the incoming bearer access token is in binary format or when you login users with OAuth2 providers which give Quarkus only a binary access token, with no remote introspection endpoint available in both cases, how to verify this binary token ?"
msgstr "当传入的承载访问令牌是二进制格式时，或者当你使用 OAuth2 提供商登录用户时，该提供商只向 Quarkus 提供了二进制访问令牌，而在这两种情况下都没有可用的远程自省端点，那么如何验证这个二进制令牌呢？"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The only option is an indirect access token verification by attempting to use this binary token to access an OIDC standard or OAuth2 provider specific UserInfo endpoint, when a valid access token must be forwarded to the UserInfo endpoint. Set `quarkus.oidc.token.verify-access-token-with-user-info=true` if it is what is necessary in your case."
msgstr "唯一的选择是间接访问令牌验证，即尝试使用该二进制令牌访问 OIDC 标准或 OAuth2 提供商特定的 UserInfo 端点，此时必须将有效的访问令牌转发到 UserInfo 端点。如果需要，请设置 `quarkus.oidc.token.verify-access-token-with-user-info=true` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 providers] section for more information."
msgstr "另请参阅 xref:security-oidc-code-flow-authentication.adoc#oauth2[OAuth2 提供者] 部分了解更多信息。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Verification key refresh"
msgstr "验证密钥刷新"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token verification key refresh properties"
msgstr "令牌验证密钥刷新属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.forced-jwk-refresh-interval"
msgstr "quarkus.oidc.token.forced-jwk-refresh-interval"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWK refresh interval"
msgstr "JWK 刷新间隔"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"When the JWT token's signature must be verified, this token's key identifier (`kid`) header value is used to find a matching JWK key from the local verification public key set. However, since providers tend to periodically recycle signing key pairs and start signing newly issued tokens with new private keys, at some point the local key set may not have the matching public key to verify the current JWT.\n"
"In this case, Quarkus attempts to refresh the verification key set, but blocks additional JWK key set refresh attempts for the `quarkus.oidc.token.forced-jwk-refresh-interval` period of time, to minimize the risk of many random tokens causing too many remote JWK set refresh attempts."
msgstr "当必须验证 JWT 令牌的签名时，该令牌的密钥标识符（ `kid` ）标头值将用于从本地验证公钥集中查找匹配的 JWK 密钥。不过，由于提供商往往会定期回收签名密钥对，并开始用新的私钥签署新发布的令牌，因此本地密钥集可能在某些时候没有匹配的公钥来验证当前的 JWT。在这种情况下，Quarkus 会尝试刷新验证密钥集，但会在 `quarkus.oidc.token.forced-jwk-refresh-interval` 一段时间内阻止额外的 JWK 密钥集刷新尝试，以尽量减少许多随机令牌导致过多远程 JWK 集刷新尝试的风险。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection"
msgstr "代币反省"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection properties"
msgstr "令牌反省属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.allow-jwt-introspection"
msgstr "quarkus.oidc.token.allow-jwt-introspection"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow JWT introspection"
msgstr "允许 JWT 自省"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.require-jwt-introspection-only"
msgstr "quarkus.oidc.token.require-jwt-introspection-only"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Require JWT introspection only"
msgstr "仅要求 JWT 自省"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.allow-opaque-token-introspection"
msgstr "quarkus.oidc.token.allow-opaque-token-introspection"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Some OIDC providers support remote token introspecion endpoints and Quarkus fallbacks to introspecting JWT tokens if it can not find a matching JWK verification key even after refreshing the key set. However, just because the provider supports the introspection endpoint, your deployment policy may forbid the remote JWT token introspection: because the token may have sensitive claims, or for performance reasons, especially if you know that, for example, ID tokens can not be introspected remotely, but only verified locally with the JWK keys. Set `quarkus.oidc.token.allow-jwt-introspection=false` if you do not want JWT tokens sent for the remote introspection."
msgstr "有些 OIDC 提供商支持远程令牌反省端点，如果 Quarkus 在刷新密钥集后仍找不到匹配的 JWK 验证密钥，它就会回退到反省 JWT 令牌。不过，正因为提供商支持反省端点，你的部署策略可能会禁止远程 JWT 令牌反省：因为令牌可能有敏感的声明，或者出于性能原因，尤其是当你知道 ID 令牌不能远程反省，而只能在本地用 JWK 密钥验证时。如果不想为远程自省发送 JWT 令牌，请设置 `quarkus.oidc.token.allow-jwt-introspection=false` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "On the other hand, `quarkus.oidc.token.require-jwt-introspection-only` enforces that a decision as to whether the current JWT token is valid or not can only be taken by the OIDC provider itself, for example, in order to immediately recognize that the current token has already been revoked, etc. In this case you would also likely disable the discovery with `quarkus.oidc.discovery-enabled=false` to prevent Quarkus discovering the JWKs endpoint and fetching the verification keys which are not going to be used anyway."
msgstr "另一方面， `quarkus.oidc.token.require-jwt-introspection-only` 强制规定，只有 OIDC 提供商自己才能决定当前 JWT 令牌是否有效，例如，为了立即识别当前令牌是否已被撤销等。在这种情况下，您还可能通过 `quarkus.oidc.discovery-enabled=false` 禁用发现功能，以防止 Quarkus 发现 JWKs 端点并获取无论如何都不会使用的验证密钥。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.allow-opaque-token-introspection` is a hardening type of property. Quarkus OIDC attempts to verify any access token which comes its way by default. But if you deal with JWT tokens, especially if you prefer to verify them only locally with `quarkus.oidc.token.allow-jwt-introspection=false`, then what if someone sends a binary (opaque) access token which your application does not really expect ? Setting `quarkus.oidc.token.allow-opaque-token-introspection=false` prevents possibly disruptive remote introspection calls and causes an immediate verification error when an opaque token is received."
msgstr "`quarkus.oidc.token.allow-opaque-token-introspection` 是一种加固类型的属性。Quarkus OIDC 默认会尝试验证任何访问令牌。但是，如果你处理的是 JWT 令牌，尤其是如果你倾向于只在本地使用 进行验证，那么如果有人发送了二进制（不透明）访问令牌，而你的应用程序并不真正期待这种令牌，那该怎么办呢？设置 可以防止可能造成破坏的远程反省调用，并在收到不透明令牌时立即导致验证错误。 `quarkus.oidc.token.allow-jwt-introspection=false` `quarkus.oidc.token.allow-opaque-token-introspection=false` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token roles"
msgstr "令牌作用"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.roles.role-claim-path"
msgstr "quarkus.oidc.roles.role-claim-path"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Role claim path"
msgstr "角色主张路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.roles.role-claim-separator"
msgstr "quarkus.oidc.roles.role-claim-separator"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Role claim separator"
msgstr "角色主张分离器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.roles.source"
msgstr "quarkus.oidc.roles.source"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Primary token"
msgstr "主令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Source of roles"
msgstr "角色来源"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"By default, a token `groups` array claim is expected to contain roles. The `realm_access/roles` and `realm_access/<client-id>/roles` claims are also checked in case the token was issued by Keycloak. But if the token has another custom claim containing roles, you can point to it with `quarkus.oidc.roles.role-claim-path`. It can be used to select a top-level array claim or a nested claim using a `/` path separator.\n"
"Make sure to use double quotes for namespace qualified claim names, for example, `quarkus.oidc.roles.role-claim-path=\"http://auth0.customroles/roles\"`."
msgstr "默认情况下，令牌 `groups` 数组声明应包含角色。如果令牌是由 Keycloak 签发的，还会检查 `realm_access/roles` 和 `realm_access/<client-id>/roles` 声明。但如果令牌有另一个包含角色的自定义权利要求，则可以用 `quarkus.oidc.roles.role-claim-path` 来指向它。它可以用来选择顶层数组权利要求，也可以用 `/` 路径分隔符来选择嵌套权利要求。确保对名称空间限定的权利要求名称使用双引号，例如 `quarkus.oidc.roles.role-claim-path=\"http://auth0.customroles/roles\"` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If you would like to treat a `scope` claim as a source of roles, then each space separated value in the `scope` claim is a role name. But string claims containing multiple role values can also be separated by the comma `,` or other characters. Use `quarkus.oidc.roles.role-claim-separator=,`, etc, in such cases."
msgstr "如果要将 `scope` 索赔视为角色来源，那么 `scope` 索赔中的每个空格分隔值就是一个角色名称。但包含多个角色值的字符串声明也可以用逗号 `,` 或其他字符分隔。在这种情况下，请使用 `quarkus.oidc.roles.role-claim-separator=,` 等。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Primary token is a source of roles by default: ID token is checked for roles in the authorization code flow and the access token is checked for roles in the bearer token flow.\n"
"If the application uses the authorization code flow, and you need to check the access token, as opposed to the primary ID token, then you can do `quarkus.oidc.roles.source=access_token` - you do not need to set this property if you deal with bearer access tokens."
msgstr "默认情况下，主令牌是角色的来源：在授权代码流程中检查 ID 令牌的角色，在不记名令牌流程中检查访问令牌的角色。如果应用程序使用授权代码流，而您需要检查访问令牌，而不是主 ID 令牌，则可以 `quarkus.oidc.roles.source=access_token` - 如果您处理的是不记名访问令牌，则无需设置此属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Sometimes the roles are contained in the UserInfo response - do `quarkus.oidc.roles.source=userinfo` in this case."
msgstr "有时，角色包含在 UserInfo 响应中，在这种情况下，请访问 `quarkus.oidc.roles.source=userinfo` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token binding"
msgstr "令牌绑定"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token bindings are tools for sender-constraining access tokens."
msgstr "令牌绑定是发送者限制访问令牌的工具。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "MTLS token binding"
msgstr "MTLS 令牌绑定"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.binding.certificate"
msgstr "quarkus.oidc.token.binding.certificate"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.binding.certificate=true` can be used to constrain the bearer access token to the MTLS client which is sending it as described in the https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705: Mutual TLS token binding] specification."
msgstr "`quarkus.oidc.token.binding.certificate=true` 可用于将承载访问令牌约束到发送令牌的 MTLS 客户端，如 link:https://datatracker.ietf.org/doc/html/rfc8705[RFC 8705：相互 TLS 令牌绑定] 规范所述。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Please see the xref:security-oidc-bearer-token-authentication.adoc#mutual-tls-token-binding[Mutual TLS token binding] section for more information."
msgstr "更多信息，请参阅 xref:security-oidc-bearer-token-authentication.adoc#mutual-tls-token-binding[相互 TLS 令牌绑定] 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<bearer-token-source-properties>> section for details about enabling a Demonstrating Proof of Posession (DPoP) binding."
msgstr "另请参阅 <<bearer-token-source-properties>> 部分，了解启用 \"展示持有证明\"（DPoP）绑定的详情。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Bearer token header"
msgstr "承载标记标头"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"HTTP `Authorization` header with the `Bearer` scheme is typically used to send the bearer access token.\n"
"For example: `Authorization: Bearer <token>`."
msgstr "带有 `Bearer` 方案的 HTTP `Authorization` 标头通常用于发送承载访问令牌。例如： `Authorization: Bearer <token>` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In some cases, both the header and the scheme may have to customized."
msgstr "在某些情况下，可能需要对标头和方案进行定制。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Bearer token header properties"
msgstr "承载标记头属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.header"
msgstr "quarkus.oidc.token.header"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "Authorization"
msgstr "授权"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token header"
msgstr "令牌头"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token.authorization-scheme"
msgstr "quarkus.oidc.token.authorization-scheme"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Bearer"
msgstr "承载者"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token authorization scheme"
msgstr "令牌授权方案"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token.header` and `quarkus.oidc.token.authorization-scheme` can be used to customize which HTTP header contains a bearer access token. You can customize the header and, when the HTTP `Authorization` is used - the scheme."
msgstr "`quarkus.oidc.token.header` 和 可用于自定义哪个 HTTP 标头包含承载访问令牌。您可以自定义标头，当使用 HTTP 时，还可以自定义方案。 `quarkus.oidc.token.authorization-scheme` `Authorization` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"For example, you can set `quarkus.oidc.token.authorization-scheme=DPoP` to accept the DPoP access tokens sent as `Authorization: DPoP <token>`.\n"
"See the xref:security-oidc-bearer-token-authentication#demonstrating-proof-of-possession-dpop[Demonstrating Proof of Posession] section for more information."
msgstr "例如，可以将 `quarkus.oidc.token.authorization-scheme=DPoP` 设置为接受以 `Authorization: DPoP <token>` 发送的 DPoP 访问令牌。更多信息，请参阅 \" xref:security-oidc-bearer-token-authentication.adoc#demonstrating-proof-of-possession-dpop[演示占有证明] \"部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<token-binding>> section."
msgstr "另请参见 <<token-binding>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection and UserInfo cache"
msgstr "令牌反省和用户信息缓存"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Caching verification and Userinfo results"
msgstr "缓存验证和用户信息结果"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.default-token-cache-enabled"
msgstr "quarkus.oidc.default-token-cache-enabled"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enable default token introspection and userinfo cache"
msgstr "启用默认令牌自省和用户信息缓存"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-cache.max-size"
msgstr "quarkus.oidc.token-cache.max-size"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "0"
msgstr "0"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default token cache size"
msgstr "默认令牌缓存大小"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-cache.time-to-live"
msgstr "quarkus.oidc.token-cache.time-to-live"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "3 minutes"
msgstr "3 分钟"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default token cache time-to-live"
msgstr "默认令牌缓存的有效时间"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.token-cache.clean-up-timer-interval"
msgstr "quarkus.oidc.token-cache.clean-up-timer-interval"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Default token cache clean up time interval"
msgstr "默认令牌缓存清理时间间隔"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.allow-token-introspection-cache"
msgstr "quarkus.oidc.allow-token-introspection-cache"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow token introspection cache"
msgstr "允许令牌自省缓存"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.allow-user-info-cache"
msgstr "quarkus.oidc.allow-user-info-cache"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow UserInfo cache"
msgstr "允许用户信息缓存"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.cache-user-info-in-idtoken"
msgstr "quarkus.oidc.cache-user-info-in-idtoken"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Allow caching UserInfo in the internal ID token"
msgstr "允许在内部 ID 标记中缓存用户信息"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Remote token introspection and UserInfo results can be shared across multiple requests to avoid doing remote introspection and/or UserInfo calls for every token all the time.\n"
"By doing so the application may miss out on the immediate token status changes, for example, the token could have been revoked or de-activated, or the current user may not be actually working for the organization which issued this token any longer, making the cached token introspection or `UserInfo` information stale. Therefore, the properties related to caching token introspection and UserInfo results must be enabled by users after carefully evaluating the risks."
msgstr "远程令牌反省和用户信息结果可在多个请求中共享，以避免一直对每个令牌进行远程反省和/或用户信息调用。这样做，应用程序可能会错过令牌状态的即时变化，例如，令牌可能已被撤销或停用，或者当前用户可能不再为签发该令牌的机构工作，从而使缓存的令牌反省或 `UserInfo` 信息过时。因此，用户必须在仔细评估风险后才能启用与缓存令牌反省和 UserInfo 结果有关的属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC provides a default token introspection and `UserInfo` cache for `all` OIDC tenants. For example, if you support GitHub and Strava OAuth2 authentication, the GitHib and Strava UserInfo responses can be stored in the same default cache, keyed by either GitHib or Strava access tokens.\n"
"This cache is enabled by default with the `quarkus.oidc.default-token-cache-enabled` build-time property, but no entries are added to it unless you choose to cache either the token introspection or UserInfo or both in this cache."
msgstr "Quarkus OIDC 为 `all` OIDC 租户提供了默认的令牌反省和 `UserInfo` 缓存。例如，如果你支持 GitHub 和 Strava OAuth2 身份验证，那么 GitHib 和 Strava UserInfo 响应可以存储在同一个默认缓存中，并以 GitHib 或 Strava 访问令牌为关键字。该缓存默认通过 `quarkus.oidc.default-token-cache-enabled` build-time 属性启用，但不会向其中添加条目，除非你选择在该缓存中缓存令牌反省或 UserInfo 或两者。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.allow-token-introspection-cache` and `quarkus.oidc.allow-user-info-cache` can be used to enable caching token introspection and UserInfo results respectively on a `per OIDC tenant` basis."
msgstr "`quarkus.oidc.allow-token-introspection-cache` 和 可分别用于在 的基础上缓存 token 自省和 UserInfo 结果。 `quarkus.oidc.allow-user-info-cache` `per OIDC tenant` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.token-cache.max-size`, `quarkus.oidc.token-cache.time-to-live` and `quarkus.oidc.token-cache.clean-up-timer-interval` are properties for managing the default token introspection and `UserInfo` cache."
msgstr "`quarkus.oidc.token-cache.max-size` `quarkus.oidc.token-cache.time-to-live` 和 是管理默认令牌反省和 缓存的属性。 `quarkus.oidc.token-cache.clean-up-timer-interval` `UserInfo` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<custom-token-introspection-cache>> and <<custom-user-info-cache>> sections for details about customizing both the token introspection and `UserInfo` result caches."
msgstr "有关定制令牌反省和 `UserInfo` 结果缓存的详情，请参阅 <<custom-token-introspection-cache>> 和 <<custom-user-info-cache>> 章节。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.cache-user-info-in-idtoken` is a possible cache optimization option when you work with OAuth2 providers, when an internal ID token is generated and encrypted in the session cookie. In this case, the UserInfo JSON can be saved directly in the generated ID token, before it is encrypted, avoiding the need for keeping the server-side `UserInfo` cache."
msgstr "`quarkus.oidc.cache-user-info-in-idtoken` 是使用 OAuth2 提供商时一种可能的缓存优化选项，此时会生成一个内部 ID 令牌并在会话 cookie 中加密。在这种情况下，UserInfo JSON 可以在加密前直接保存在生成的 ID 标记中，从而避免了保留服务器端 缓存的需要。 `UserInfo` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tokens with certificate chain"
msgstr "带有证书链的令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"In some cases, incoming JWT tokens have no matching verification keys at all, and they can not be introspected.\n"
"These tokens only have an `x5c` claim which contains a certificate chain with a public key that can be used to verify this token's signature.\n"
"For example, SCIM provisioning agents, WebAuthn systems might produce such tokens."
msgstr "在某些情况下，传入的 JWT 标记根本没有匹配的验证密钥，因此无法对其进行反省。这些令牌只有一个 `x5c` 声明，其中包含一个可用于验证令牌签名的公钥证书链。例如，SCIM 供应代理、WebAuthn 系统可能会生成此类令牌。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC can not use the public key inlined in the token until it proves that the applications trusts the token certificate chain which contains this public key."
msgstr "在证明应用程序信任包含该公钥的令牌证书链之前，Quarkus OIDC 无法使用令牌中内嵌的公钥。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tokens with certificate chains"
msgstr "带有证书链的令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.trust-store-file"
msgstr "quarkus.oidc.certificate-chain.trust-store-file"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Trust store file"
msgstr "信任存储文件"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.trust-store-file-type"
msgstr "quarkus.oidc.certificate-chain.trust-store-file-type"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Trust store file type"
msgstr "信任存储文件类型"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.trust-store-password"
msgstr "quarkus.oidc.certificate-chain.trust-store-password"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Trust store password"
msgstr "信托商店密码"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.trust-store-cert-alias"
msgstr "quarkus.oidc.certificate-chain.trust-store-cert-alias"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Trust store certificate alias"
msgstr "信任存储证书别名"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.certificate-chain.leaf-certificate-name"
msgstr "quarkus.oidc.certificate-chain.leaf-certificate-name"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Leaf certificate name"
msgstr "叶证书名称"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.certificate-chain.trust-store-file` must be available and point to the file containing `at least` a root certificate. `quarkus.oidc.certificate-chain.trust-store-password` and `quarkus.oidc.certificate-chain.trust-store-file-type` can be used to facilitate access to this truststore."
msgstr "`quarkus.oidc.certificate-chain.trust-store-file` 必须可用，并指向包含 根证书的文件。可使用 和 来方便访问该信任库。 `at least` `quarkus.oidc.certificate-chain.trust-store-password` `quarkus.oidc.certificate-chain.trust-store-file-type` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.certificate-chain.trust-store-cert-alias` can be used to select a specific certificate to match the token's certificate chain root certificate."
msgstr "`quarkus.oidc.certificate-chain.trust-store-cert-alias` 可用于选择与令牌证书链根证书匹配的特定证书。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.certificate-chain.leaf-certificate-name` can also require that the trustore contains a leaf chain certificate."
msgstr "`quarkus.oidc.certificate-chain.leaf-certificate-name` 还可以要求信任核心包含叶子链证书。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC enforces the root certificate match, and also runs other certificate chain checks to confirm that each certificate in the chain is not expired, and correctly signed by the next certificate in the chain (except the root certificate)."
msgstr "Quarkus OIDC 会强制执行根证书匹配，并运行其他证书链检查，以确认证书链中的每张证书都没有过期，并由证书链中的下一张证书（根证书除外）正确签名。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<custom-certificate-validator>> section for details about providing additional certificate chain checks."
msgstr "有关提供额外证书链检查的详情，另请参阅 <<custom-certificate-validator>> 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "Local verification"
msgstr "本地验证"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Local verification properties"
msgstr "本地验证特性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.public-key"
msgstr "quarkus.oidc.public-key"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Public verification key"
msgstr "公共验证密钥"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.public-key` can contain an inlined public verification key and used for OIDC tests."
msgstr "`quarkus.oidc.public-key` 可以包含一个内嵌的公开验证密钥，并用于 OIDC 测试。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Managing JWK keys"
msgstr "管理 JWK 密钥"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.resolve-early"
msgstr "quarkus.oidc.jwks.resolve-early"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Resolve verification keys on start-up"
msgstr "在启动时解决验证密钥问题"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.cache-size"
msgstr "quarkus.oidc.jwks.cache-size"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWK cache size"
msgstr "JWK 缓存大小"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.cache-time-to-live"
msgstr "quarkus.oidc.jwks.cache-time-to-live"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWK cache time to live"
msgstr "JWK 缓存生活时间"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.clean-up-timer-interval"
msgstr "quarkus.oidc.jwks.clean-up-timer-interval"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JWK clean-up timer interval"
msgstr "JWK 清理计时器间隔"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.jwks.try-all"
msgstr "quarkus.oidc.jwks.try-all"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Check all JWKS if no ley matching the token key id ('kid') is found"
msgstr "如果没有找到与令牌密钥 ID（'kid'）匹配的 ley，则检查所有 JWKS"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token JWK verification keys are resolved at the application start-up by default and perodically refreshed when no matching key is available to verify the current token."
msgstr "令牌 JWK 验证密钥默认在应用程序启动时解析，当没有匹配的密钥验证当前令牌时，会定期刷新。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"However, some applications require access to the current JWT token in order to formulate a correct JWK key request.\n"
"`quarkus.oidc.jwks.resolve-early=false` delays the JWK key retrieval until the moment the first JWT token arrives.\n"
"And since the token content determines which JWK keys should be used to verify it, a number of verification keys can be potentially large, therefore, when the JWKs have to be retrieved at the request time,  `quarkus.oidc.jwks.cache-size`, `quarkus.oidc.jwks.cache-time-to-live` and `quarkus.oidc.jwks.clean-up-timer-interval` properties can be used to control the JWK cache."
msgstr "`quarkus.oidc.jwks.resolve-early=false` 会将 JWK 密钥检索延迟到第一个 JWT 令牌到达之时。由于令牌内容决定了哪些 JWK 密钥应被用于验证令牌，验证密钥的数量可能会很大，因此，当必须在请求时检索 JWK 时，可使用 `quarkus.oidc.jwks.cache-size` 、 `quarkus.oidc.jwks.cache-time-to-live` 和 `quarkus.oidc.jwks.clean-up-timer-interval` 属性来控制 JWK 缓存。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In most cases, when the token arrives, its key identifier `kid` header value is used to find a matching JWK verification key. However, some providers do not set a token `kid` header but provide a JWK key set which may contain more than one verification key. Set `quarkus.oidc.jwks.try-all=true` only to support such cases, letting Quarkus OIDC iterate over all the keys in the JWK set and find the key that can be used to verify the current token's signature."
msgstr "在大多数情况下，令牌到达时，其密钥标识符 `kid` 标头值用于查找匹配的 JWK 验证密钥。但是，有些提供商不设置令牌 `kid` 标头，而是提供一个 JWK 密钥集，其中可能包含多个验证密钥。设置 `quarkus.oidc.jwks.try-all=true` 只是为了支持这种情况，让 Quarkus OIDC 遍历 JWK 中的所有密钥，并找到可用于验证当前令牌签名的密钥。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Composite provider properties"
msgstr "复合提供商属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Provider properties"
msgstr "提供商属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.provider"
msgstr "quarkus.oidc.provider"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Provider"
msgstr "提供商"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC simplifies working with many xref:security-openid-connect-providers.adoc[well known OIDC and OAuth2 providers] by offering a `quarkus.oidc.provider` configuration option."
msgstr "Quarkus OIDC 通过提供 `quarkus.oidc.provider` 配置选项，简化了与许多 xref:security-openid-connect-providers.adoc[知名 OIDC 和 OAuth2 提供商] 的合作。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.provider` is a composite property. For example, when you do `quarkus.oidc.provider=github`, it is expanded into many more properties that are required to have Quarkus OIDC successfully working with the GitHub OAuth2 provider."
msgstr "`quarkus.oidc.provider` 是一个复合属性。例如，当你执行 时，它会扩展为更多属性，这些属性是 Quarkus OIDC 与 GitHub OAuth2 提供商成功合作所必需的。 `quarkus.oidc.provider=github`"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Everything that can be covered by a provider declaration such as `quarkus.oidc.provider=github` can be directly supported by individual configuration properties. Each property set internally by the `quarkus.oidc.provider` declarations can be overridden, for example, see the xref:security-openid-connect-providers.adoc#provider-scope[Provider scopes] section."
msgstr "`quarkus.oidc.provider=github` 等提供程序声明所能涵盖的所有内容，都可以直接由单个配置属性来支持。 `quarkus.oidc.provider` 声明内部设置的每个属性都可以重写，例如，请参阅 \" xref:security-openid-connect-providers.adoc#provider-scope[提供] 程序 xref:security-openid-connect-providers.adoc#provider-scope[作用域] \"部分。"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "Multi-tenancy"
msgstr "多租户"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "As mentioned in the <<tenant-properties>> section, when you configure OIDC tenants in `application.properties`, the tenant name is declared directly in the property name, for example, a `keycloak-realm-a` tenant is a 3rd token in the property name: `quarkus.oidc.keycloak-realm-a.auth-server-url=${keycloak-realm-a.url}`, etc."
msgstr "如 <<tenant-properties>> 部分所述，在 `application.properties` 中配置 OIDC 租户时，租户名称直接在属性名中声明，例如， `keycloak-realm-a` 租户是属性名中的第 3 个标记： `quarkus.oidc.keycloak-realm-a.auth-server-url=${keycloak-realm-a.url}` 等。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Each OIDC tenant configuration represents specific requirements associated with a single OIDC provider, an individual tenant or realm among multiple OIDC provider tenants or realms.\n"
"For example, you may have one tenant for Keycloak, another tenant for Azure. Or you can have many tenants representing individual Keycloak realms or clients in a single Keycloak realm, or multiple Azure tenants."
msgstr "每个 OIDC 租户配置都代表与单个 OIDC 提供商、多个 OIDC 提供商租户或领域中的单个租户或领域相关的特定要求。例如，你可以为 Keycloak 设置一个租户，为 Azure 设置另一个租户。也可以有多个租户，代表单个 Keycloak 领域中的单个 Keycloak 领域或客户端，或多个 Azure 租户。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Quarkus OIDC must decide which tenant configuration can support the current request and it provides many security-openid-connect-multitenancy.adoc#tenant-resolution[tenant resolution options]. Some of these resilution options must be enabled through the configuration."
msgstr "Quarkus OIDC 必须决定哪个租户配置可以支持当前请求，它提供了许多 security-openid-connect-multitenancy.adoc#tenant-resolution[租户解决选项]。其中一些解决选项必须通过配置启用。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Tenant resolution properties"
msgstr "租户解决方案"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resolve-tenants-with-issuer"
msgstr "quarkus.oidc.resolve-tenants-with-issuer"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Issuer based tenant resolution"
msgstr "基于发行人的租户解决方案"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.tenant-paths"
msgstr "quarkus.oidc.tenant-paths"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The tenant-paths"
msgstr "租户路径"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.resolve-tenants-with-issuer` tenant resolution property allows Quarkus to iterate over all tenants configured in `application.properties` until it finds the one with a discovered or configured `issuer` property which matches the current token's issuer (`iss`) claim."
msgstr "`quarkus.oidc.resolve-tenants-with-issuer` 租户解析属性允许 Quarkus 遍历 中配置的所有租户，直到找到与当前令牌的发行者 ( ) 声明相匹配的已发现或已配置 属性的租户。 `application.properties` `iss` `issuer` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.tenant-paths` tenant resolution property can be used to restrict a given tenant to specific request paths only. Quarkus OIDC will know which tenant configuration to choose if the current request is made to one of the paths listed in the `quarkus.oidc.tenant-paths` property."
msgstr "`quarkus.oidc.tenant-paths` 租户解析属性可用于限制给定租户只能访问特定的请求路径。如果当前请求是向 属性中列出的路径之一提出的，Quarkus OIDC 将知道要选择哪个租户配置。 `quarkus.oidc.tenant-paths` "

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Creating configuration programmatically"
msgstr "以编程方式创建配置"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Would you rather create OIDC tenants programmatically, instead of having to deal with all the required configuration properties in `application.properties` ? Quarkus OIDC offers two options if it is what you prefer to do."
msgstr "您是否愿意以编程方式创建 OIDC 租户，而不是在 `application.properties` 中处理所有必要的配置属性？如果您愿意，Quarkus OIDC 提供了两种选择。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Create OIDC configuration at start-up"
msgstr "启动时创建 OIDC 配置"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can observe an https://quarkus.io/guides/security-openid-connect-multitenancy#programmatic-startup[Oidc startup event] and register one or more OIDC tenants using `OicTenantConfig` builder API."
msgstr "您可以使用 `OicTenantConfig` builder API 观察 link:https://quarkus.io/guides/security-openid-connect-multitenancy#programmatic-startup[Oidc 启动事件] 并注册一个或多个 OIDC 租户。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Create OIDC configuration at request time"
msgstr "在请求时创建 OIDC 配置"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[TenantConfigResolver] and build the configuration dynamically, using `OicTenantConfig` builder API, using the request properties such as request path and headers for additional hints or retrieve the matching configuration from the external sources."
msgstr "您可以使用 `OicTenantConfig` builder API 注册 xref:security-openid-connect-multitenancy.adoc#tenant-config-resolver[TenantConfigResolver] 并动态构建配置，使用请求路径和标头等请求属性来获得额外提示，或者从外部来源检索匹配的配置。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC Health Check"
msgstr "OIDC 健康检查"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.health.enabled"
msgstr "quarkus.oidc.health.enabled"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If the OIDC Health Readiness Check must be registered."
msgstr "如果必须注册 OIDC 健康就绪检查。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This build-time property can be used to register an `OIDC Provider Health Readiness Check` when the `quarkus-smallrye-health` dependency is included. When the health check is registered, it uses HTTP HEAD to ping the well-known OIDC provider configuration endpoint for every configured OIDC tenant."
msgstr "当 `quarkus-smallrye-health` 依赖关系包含在内时，该构建时属性可用于注册 `OIDC Provider Health Readiness Check` 。注册健康检查时，它会使用 HTTP HEAD 为每个已配置的 OIDC 租户 ping 众所周知的 OIDC 提供商配置端点。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Individual OIDC tenant statuses are `OK`, `Not Ready`, `Disabled`, `Unknown` and `Error`."
msgstr "个别 OIDC 租户状态为 `OK` , `Not Ready` , `Disabled` , `Unknown` 和 `Error` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "The OIDC Health check status is `UP` if at least one of the OIDC tenants has an `OK` status and `DOWN` otherwise."
msgstr "如果至少有一个 OIDC 租户的状态为 `OK` ，则 OIDC 健康检查状态为 `UP` ，否则为 `DOWN` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Typical property combinations"
msgstr "典型的物业组合"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "A number of OIDC property combinations required to address various OIDC and OAuth2 requirements can be very large."
msgstr "满足各种 OIDC 和 OAuth2 要求所需的 OIDC 属性组合可能非常多。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Here are four options which you may want to consider, and we will continue expanding this list."
msgstr "以下是您可以考虑的四种方案，我们还将继续扩大这份清单。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Simple bearer access token support"
msgstr "支持简单的承载访问令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You only need one property to get started with supporting bearer access tokens:"
msgstr "您只需要一个属性就可以开始支持不记名访问令牌："

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This single property combination works if your OIDC provider supports the metadata discovery and the incoming bearer access tokens are in JWT format which can be verified by the keys fetched from the provider's JWK endpoint."
msgstr "如果 OIDC 提供商支持元数据发现，而且传入的承载访问令牌是 JWT 格式，可以通过从提供商的 JWK 端点获取的密钥进行验证，那么这种单一属性组合就能发挥作用。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You do not have to configure anything at all to get started with bearer access tokens xref:security-openid-connect-dev-services.adoc[in the dev mode]."
msgstr "要 xref:security-openid-connect-dev-services.adoc[在开发模式下] 开始使用承载访问令牌，您根本不需要进行任何配置。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Simple authorizaion code flow support"
msgstr "支持简单的授权代码流"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You need four properties to get started with the authorization code flow:"
msgstr "要开始使用授权代码流程，您需要四个属性："

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This property combination works if your OIDC provider supports the metadata discovery."
msgstr "如果您的 OIDC 提供商支持元数据发现，该属性组合就会起作用。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Very often, when your application secure space is wider than a single URL, you have to add a redirect-path property to support OIDC providers requiring that only specific callback URLs can be registered, for example: `quarkus.oidc.authentication.redirect-path=/callback`."
msgstr "通常，当应用程序的安全空间大于单个 URL 时，您必须添加重定向路径属性，以支持要求只能注册特定回调 URL 的 OIDC 提供商，例如： `quarkus.oidc.authentication.redirect-path=/callback` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You only have to configure `quarkus.oidc.application-type=web-app` to get started with the authorization code flow xref:security-openid-connect-dev-services.adoc[in the dev mode]."
msgstr "您只需配置 `quarkus.oidc.application-type=web-app` ，即可 xref:security-openid-connect-dev-services.adoc[在开发模式下] 开始使用授权代码流。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Strict bearer access token support"
msgstr "严格的承载访问令牌支持"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Strict bearer access token support implies enforcing that the claims such as issuer, audience and other key claims are set to specific values or available."
msgstr "严格的不记名访问令牌支持意味着强制要求将签发人、受众和其他关键要求设置为特定值或可用值。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Strict authorization code flow support"
msgstr "支持严格的授权代码流"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Strict authorization code flow support implies enforcing that the claims such as issuer, audience and other key claims are set to specific values or available."
msgstr "严格的授权代码流支持意味着强制要求将签发人、受众和其他关键要求设置为特定值或可用值。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Even stricter configuration setup"
msgstr "更严格的配置设置"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "What constitues a strict bearer access token or authorization code flow support can vary significantly between deployments. For example, one OIDC provider may require MTLS client authentication, another one - DPoP binding or PKCE support. There are too many combinations for us to cover in this document."
msgstr "在不同的部署中，构成严格的承载访问令牌或授权码流支持的因素可能有很大不同。例如，一个 OIDC 提供商可能需要 MTLS 客户端验证，而另一个则需要 DPoP 绑定或 PKCE 支持。本文档无法涵盖太多的组合。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"We are here to help should you require further guidance with creating stricter, tighter OIDC configurations.\n"
"Do open issues, and reach out to the team on Quarkus Discussions, Zulip users channel."
msgstr "如果您在创建更严格、更严密的 OIDC 配置方面需要进一步指导，我们将竭诚为您服务。请在 Quarkus Discussions 和 Zulip 用户频道上公开问题并联系我们的团队。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "When the configuration is not enough"
msgstr "配置不足时"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "This expanded configuration reference document demonstrates that Quarkus OIDC supports a lot of OIDC requirements with properties alone. But it is impossible to cover all the possible requirements only with the properties."
msgstr "这份扩展配置参考文档表明，仅通过属性，Quarkus OIDC 就能支持许多 OIDC 要求。但仅靠属性不可能涵盖所有可能的要求。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In this section we will look at how your real world OIDC requirements can be supported by complementing the configuration with the custom code."
msgstr "在本节中，我们将探讨如何通过自定义代码对配置进行补充，以支持您的实际 OIDC 需求。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token validation"
msgstr "令牌验证"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Jose4 Validator"
msgstr "Jose4 验证器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register a custom xref:security-oidc-bearer-token-authentication.adoc#jose4j-validator-bearer[Jose4j Validator] to verify the JWT token content, in addition to the checks described in the <<token-verification>> section above."
msgstr "除了上文 <<token-verification>> 部分所述的检查外，您还可以注册一个自定义的 xref:security-oidc-bearer-token-authentication.adoc#jose4j-validator-bearer[Jose4j 验证器来] 验证 JWT 令牌内容。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Certificate chain validation"
msgstr "证书链验证"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register a custom xref:security-oidc-bearer-token-authentication.adoc#jwt-token-certificate-chain[TokenCertificateValidator] to provide inlined  certificate chain checks, in addition to the checks described in the <<tokens-with-certificate-chains>> section above."
msgstr "你可以注册一个自定义的 xref:security-oidc-bearer-token-authentication.adoc#jwt-token-certificate-chain[TokenCertificateValidator] ，除了上面 <<tokens-with-certificate-chains>> 部分描述的检查外，还提供内嵌的证书链检查。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For example, you may want to enforce that the token is bound to the inlined certificate chain with one of its claims."
msgstr "例如，您可能希望强制令牌与内联证书链的一个权利要求绑定。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token header customizer"
msgstr "令牌头定制器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Custom `quarkus.oidc.TokenCustomizer` can be used in advanced cases requiring JWT token header pre-processing for the token signature verification to succeed."
msgstr "在需要对 JWT 令牌标头进行预处理以便令牌签名验证成功的高级情况下，可以使用自定义 `quarkus.oidc.TokenCustomizer` 。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token authorization"
msgstr "令牌授权"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"As discussed in the <<token-roles>> section above, a token `groups` claims is used by default to check the identity roles, and custom claims containing the roles can also be selected with the configuration.\n"
"However, additional customization and checks may be required in order to correctly determine the roles and permissions associated with the current token identity."
msgstr "如上文 <<token-roles>> 部分所述，默认情况下使用令牌 `groups` 索赔来检查身份角色，也可通过配置选择包含角色的自定义索赔。不过，为了正确确定与当前令牌身份相关的角色和权限，可能还需要额外的定制和检查。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-customization.adoc#security-identity-customization[io.quarkus.security.identity.SecurityIdentityAugmentor] to augment the identity created from the primary ID or access token."
msgstr "使用 xref:security-customization.adoc#security-identity-customization[io.quarkus.security.identity.SecurityIdentityAugmentor] 来增强通过主 ID 或访问令牌创建的身份。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the xref:security-authorize-web-endpoints-reference.adoc#custom-http-security-policy[HttpSecurityPolicy] and xref:security-authorize-web-endpoints-reference.adoc#permission-checker[PermissionChecker] sections for more authorization control options."
msgstr "另请参阅 xref:security-authorize-web-endpoints-reference.adoc#custom-http-security-policy[HttpSecurityPolicy] 和 xref:security-authorize-web-endpoints-reference.adoc#permission-checker[PermissionChecker] 章节，了解更多授权控制选项。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token introspection cache"
msgstr "令牌反省缓存"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register a `quarkus.oidc.TokenIntrospectionCache` provider to support a custom token introspection cache implementation, as an alternative to the default cache implementation described in the <<caching-verification-results>> section."
msgstr "您可以注册 `quarkus.oidc.TokenIntrospectionCache` 提供程序，以支持自定义令牌反省缓存实现，作为 <<caching-verification-results>> 部分所述默认缓存实现的替代。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "UserInfo cache"
msgstr "用户信息缓存"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can register a `quarkus.oidc.UserInfoCache` provider to support a custom `UserInfo` cache implementation, as an alternative to the default cache implementation described in the <<caching-verification-results>> section."
msgstr "您可以注册 `quarkus.oidc.UserInfoCache` 提供程序，以支持自定义的 `UserInfo` 缓存实现，作为 <<caching-verification-results>> 部分所述默认缓存实现的替代。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "TokenStateManager"
msgstr "令牌状态管理器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"As discussed in the <<token-state-manager>> section above, Quarkus OIDC already provides stateless (default) and stateful options for storing  authorization code flow tokens.\n"
"You can also provide your own custom `quarkus.oidc.TokenStateManager` implementation."
msgstr "如上文 <<token-state-manager>> 部分所述，Quarkus OIDC 已经为存储授权代码流令牌提供了无状态（默认）和有状态选项。你也可以提供自己的自定义 `quarkus.oidc.TokenStateManager` 实现。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Request, response and redirect filters"
msgstr "请求、响应和重定向过滤器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can use OIDC filters to observe requests and responses to all OIDC endpoints."
msgstr "您可以使用 OIDC 过滤器观察所有 OIDC 端点的请求和响应。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can also intercept OIDC redirect requests."
msgstr "您还可以拦截 OIDC 重定向请求。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC requests"
msgstr "OIDC 的要求"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can use OIDC request filters to observe requests, add additional headers, and set context properties for coordinating with OIDC response filters."
msgstr "您可以使用 OIDC 请求过滤器来观察请求、添加附加标头和设置上下文属性，以便与 OIDC 响应过滤器协调。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-oidc-code-flow-authentication.adoc#code-flow-oidc-request-filters[quarkus.oidc.common.OidcRequestFilter] to implement a request filter and if necessary, restrict it to the specific OIDC endpoint or endpoints only with the `quarkus.oidc.common.OidcEndpoint` annotation."
msgstr "使用 xref:security-oidc-code-flow-authentication.adoc#code-flow-oidc-request-filters[quarkus.oidc.common.OidcRequestFilter] 来实现请求过滤器，如有必要，还可通过 `quarkus.oidc.common.OidcEndpoint` 注释将其限制为特定的 OIDC 端点或仅有的端点。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC responses"
msgstr "OIDC 的答复"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can use OIDC response filters to observe responses, and use the context properties for coordinating with OIDC request filters."
msgstr "您可以使用 OIDC 响应过滤器来观察响应，并使用上下文属性与 OIDC 请求过滤器进行协调。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-oidc-code-flow-authentication.adoc#code-flow-oidc-response-filters[quarkus.oidc.common.OidcResponseFilter] to implement a response filter and if necessary, restrict it to the specific OIDC endpoint or endpoints only with the `quarkus.oidc.common.OidcEndpoint` annotation."
msgstr "使用 xref:security-oidc-code-flow-authentication.adoc#code-flow-oidc-response-filters[quarkus.oidc.common.OidcResponseFilter] 实现响应过滤器，并在必要时通过 `quarkus.oidc.common.OidcEndpoint` 注释将其限制为特定的 OIDC 端点或仅有的端点。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "OIDC redirects"
msgstr "OIDC 重定向"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "You can use OIDC redirect filters to observe redirect requests to both OIDC authorization and logout endpoints."
msgstr "您可以使用 OIDC 重定向过滤器来观察对 OIDC 授权和注销端点的重定向请求。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-oidc-code-flow-authentication.adoc#oidc-redirect-filters[quarkus.oidc.OidcRedirectFilter] to implement a redirect filter and if necessary, restrict it to the specific OIDC endpoint only with the `quarkus.oidc.Redirect` annotation."
msgstr "使用 xref:security-oidc-code-flow-authentication.adoc#oidc-redirect-filters[quarkus.oidc.OidcRedirectFilter] 实现重定向过滤器，并在必要时使用 `quarkus.oidc.Redirect` 注解将其限制为只针对特定 OIDC 端点。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "JavaScript request checker"
msgstr "JavaScript 请求检查器"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"As described in the <<authorization-code-flow-spa>> section, Quarkus OIDC can return an error to initiate an authorization code flow for SPA\n"
"to intercept it and work around the fact that some OIDC providers do not support CORS for the authorization endpoint."
msgstr "如 <<authorization-code-flow-spa>> 部分所述，Quarkus OIDC 可以返回错误以启动授权代码流，让 SPA 进行拦截，并解决某些 OIDC 提供商不支持授权端点 CORS 的问题。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "For Quarkus OIDC to do it, it needs to know if the request came from SPA. By default. it checks if the `X-Requested-With` request header with its value set to either `JavaScript` or `XMLHttpRequest` is available."
msgstr "Quarkus OIDC 需要知道请求是否来自 SPA。默认情况下，它会检查 `X-Requested-With` 请求头（其值设置为 `JavaScript` 或 `XMLHttpRequest` ）是否可用。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See the xref:security-oidc-code-flow-authentication.adoc#single-page-applications[Integrating with SPA] documentation for more information about customizing JavaScript request checks with custom `quarkus.oidc.JavaScriptRequestChecker` request checkers."
msgstr "有关使用自定义 `quarkus.oidc.JavaScriptRequestChecker` 请求检查器自定义 JavaScript 请求检查的更多信息，请参阅 xref:security-oidc-code-flow-authentication.adoc#single-page-applications[与 SPA 集成] 文档。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Local logout"
msgstr "本地注销"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"The logout configuration described in the <<logout-properties>> section supports standard OIDC logout mechanism, with the Quarkus endpoint coordinating the logout process with the OIDC provider.\n"
"Sometimes, you may want to do the xref:security-oidc-code-flow-authentication.adoc#local-logout[local logout] only to clear the local session cookie."
msgstr "<<logout-properties>> 部分描述的注销配置支持标准的 OIDC 注销机制，由 Quarkus 端点与 OIDC 提供商协调注销过程。有时，你可能只想 xref:security-oidc-code-flow-authentication.adoc#local-logout[在本地注销] ，以清除本地会话 cookie。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Listen to OIDC events"
msgstr "收听 OIDC 活动"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"You can observe OIDC events related to the authentication, logout, etc.\n"
"See the xref:security-oidc-code-flow-authentication.adoc#listen-to-authentication-events[Listento OIDC events] section for more information."
msgstr "您可以观察到与身份验证、注销等相关的 OIDC 事件。有关详细信息，请参阅 xref:security-oidc-code-flow-authentication.adoc#listen-to-authentication-events[Listento OIDC 事件] 部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Token propagation and exchange"
msgstr "代币传播和交换"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Use xref:security-openid-connect-client-reference.adoc#token-propagation-rest[Quarkus OIDC token propagation feature] if you need to propagate the current bearer or authorization code flow access token to the downstream service. The tokens which must be propagated can be exchanged."
msgstr "如果需要将当前的承载或授权码流访问 xref:security-openid-connect-client-reference.adoc#token-propagation-rest[令牌传播] 到下游服务，请使用 xref:security-openid-connect-client-reference.adoc#token-propagation-rest[Quarkus OIDC 令牌传播功能] 。必须传播的令牌可以交换。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Revoke OIDC tokens"
msgstr "撤销 OIDC 令牌"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"You may need to revoke access tokens, for example, in case of the local logout.\n"
"See the xref:security-oidc-code-flow-authentication#oidc-token-revocation[Token revocation] section for more information."
msgstr "您可能需要撤销访问令牌，例如在本地注销的情况下。更多信息，请参阅 \" xref:security-oidc-code-flow-authentication.adoc#oidc-token-revocation[令牌撤销] \"部分。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Protected Resource Metadata"
msgstr "受保护资源元数据"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "https://datatracker.ietf.org/doc/rfc9728/[OAuth2 Protected Resource Metadata] specification defines a metadata format enabling OAuth 2.0 clients to obtain information needed to interact with an OAuth 2.0 protected resource."
msgstr "link:https://datatracker.ietf.org/doc/rfc9728/[OAuth2 受保护资源元数据] 规范定义了一种元数据格式，使 OAuth 2.0 客户端能够获取与 OAuth 2.0 受保护资源交互所需的信息。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"Quarkus OIDC provides an initial https://datatracker.ietf.org/doc/rfc9728/[Protected Resource Metadata] support allowing a Quarkus endpoint to return a URL of the OIDC or OAuth2 provider that secures this endpoint.\n"
"In turn, a client that requested the protected resource metadata can use its properties, such as an authorization server URL, to discover the provider's metadata and bootstrap itself to work with this provider, for example, to login SPA users and access Quarkus on their behalf with bearer access tokens."
msgstr "Quarkus OIDC 提供初始 link:https://datatracker.ietf.org/doc/rfc9728/[受保护资源元数据] 支持，允许 Quarkus 端点返回保护该端点的 OIDC 或 OAuth2 提供商的 URL。反过来，请求受保护资源元数据的客户端可以使用其属性（如授权服务器 URL）来发现提供商的元数据，并引导自己与该提供商合作，例如，登录 SPA 用户并代表他们使用不记名访问令牌访问 Quarkus。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Resource Metadata properties"
msgstr "资源元数据属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resource-metadata.enabled"
msgstr "quarkus.oidc.resource-metadata.enabled"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Enable resource metadata properties"
msgstr "启用资源元数据属性"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resource-metadata.resource"
msgstr "quarkus.oidc.resource-metadata.resource"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Resource identifier"
msgstr "资源标识符"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "quarkus.oidc.resource-metadata.force-https-scheme"
msgstr "quarkus.oidc.resource-metadata.force-https-scheme"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "Force that a resource identifier URL has an HTTPS scheme"
msgstr "强制资源标识符 URL 采用 HTTPS 方案"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.resource-metadata.enabled` property allows Quarkus OIDC to return the protected resource metadata and it is disabled by default. The reason behind it is that letting public clients see a list of authorization server(s) that the endpoint is secured with can be considered a security information leak, therefore it should only be enabled when publishing such information is considered to be safe."
msgstr "`quarkus.oidc.resource-metadata.enabled` 属性允许 Quarkus OIDC 返回受保护的资源元数据，默认情况下是禁用的。其背后的原因是，让公共客户端看到端点所使用的授权服务器列表可能会被视为安全信息泄露，因此只有在发布此类信息被认为是安全的情况下才应启用该属性。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid ""
"`quarkus.oidc.resource-metadata.resource` represents a protected resource identifier.\n"
"According to the https://datatracker.ietf.org/doc/rfc9728/[OAuth2 Protected Resource Metadata] specification, it must be presented as an HTTPS-based URL in the published metadata and the structure of this URL must be aligned with the well-known URL that the client used to access the protected resource metadata."
msgstr "`quarkus.oidc.resource-metadata.resource` 表示受保护资源标识符。根据 link:https://datatracker.ietf.org/doc/rfc9728/[OAuth2 受保护资源元数据] 规范，它必须在发布的元数据中以基于 HTTPS 的 URL 的形式呈现，且该 URL 的结构必须与客户端用来访问受保护资源元数据的知名 URL 一致。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "`quarkus.oidc.resource-metadata.resource` can be configured as an absolute URL."
msgstr "`quarkus.oidc.resource-metadata.resource` 可以配置为绝对 URL。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "If it is configured as a relative path then it is added to the current request URL's host and port to build a resource identifier URL. If it is not configured at all then, unless it is a default tenant id, the tenand id is added to the current request URL's host and port to build a resource identifier URL."
msgstr "如果配置为相对路径，则会将其添加到当前请求 URL 的主机和端口中，以创建资源标识符 URL。如果根本没有配置，除非是默认租户 ID，否则租户 ID 会添加到当前请求 URL 的主机和端口中，以创建资源标识符 URL。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "In such cases, the `quarkus.oidc.resource-metadata.force-https-scheme` property can be used to set a correct URL scheme, which is set to HTTPS by default."
msgstr "在这种情况下，可使用 `quarkus.oidc.resource-metadata.force-https-scheme` 属性设置正确的 URL 方案，默认情况下该方案设置为 HTTPS。"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "See also the <<oidc-metadata-properties>> for details about the OIDC provider metadata that Quarkus OIDC uses for its work."
msgstr "有关 Quarkus OIDC 在工作中使用的 OIDC 提供商元数据的详情，请参阅 <<oidc-metadata-properties>> 。"

#: _guides/security-oidc-expanded-configuration.adoc
msgid "References"
msgstr "参考文献"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC 承载令牌验证]"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC Authorization code flow authentication]"
msgstr "xref:security-oidc-code-flow-authentication.adoc[OIDC 授权码流程认证]"

#: _guides/security-oidc-expanded-configuration.adoc
#, fuzzy
msgid "xref:security-oidc-configuration-properties-reference.adoc[Generated OIDC Configuration]"
msgstr "xref:security-oidc-configuration-properties-reference.adoc[生成的 OIDC 配置]"
