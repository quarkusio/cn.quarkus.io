# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-29 11:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _guides/security-identity-providers.adoc
#, no-wrap
msgid "Identity providers"
msgstr "身份提供者（Identity Providers）"

#: _guides/security-identity-providers.adoc
msgid ""
"In the Quarkus Security framework, identity providers play a crucial role in authentication and authorization by  verifying user identities.\n"
"`IdentityProvider` creates a `SecurityIdentity` instance, which gets used during user authentication to verify and authorize access requests to your Quarkus application."
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "`IdentityProvider` converts the authentication credentials provided by `HttpAuthenticationMechanism` to a `SecurityIdentity` instance."
msgstr "`IdentityProvider` 将 `HttpAuthenticationMechanism` 提供的认证凭证转换为 `SecurityIdentity` 实例。"

#: _guides/security-identity-providers.adoc
msgid ""
"Some extensions, for example, `OIDC`, `OAuth2`, and `SmallRye JWT`, have inline `IdentityProvider` implementations specific to the supported authentication flow.\n"
"For example, `quarkus-oidc` uses its own `IdentityProvider` to convert a token to a `SecurityIdentity` instance."
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "If you use Basic or form-based authentication, you must add an `IdentityProvider` instance to convert a username and password to a `SecurityIdentity` instance."
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "To get started with security in Quarkus, consider combining the Quarkus built-in Basic HTTP authentication with the Jakarta Persistence identity provider to enable role-based access control (RBAC)."
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "For more information about Basic authentication, its mechanisms, and related identity providers, see the following resources:"
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "xref:security-jpa.adoc[Quarkus Security with Jakarta Persistence]"
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "xref:security-getting-started-tutorial.adoc[Getting Started with Security using Basic authentication and Jakarta Persistence]"
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "xref:security-authentication-mechanisms.adoc#form-auth[Form-based authentication]"
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "xref:security-jdbc.adoc[Using security with JDBC]"
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "xref:security-ldap.adoc[Using security with an LDAP realm]"
msgstr ""

#. type: Plain text
#: _guides/security-identity-providers.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
