# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Using Security with WebAuthn"
msgstr "使用WebAuthn的安全性"

#: _guides/security-webauthn.adoc
msgid ""
"This guide demonstrates how your Quarkus application can use WebAuthn authentication instead of\n"
"passwords."
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Introduction to WebAuthn"
msgstr "WebAuthn简介"

#: _guides/security-webauthn.adoc
msgid ""
"https://webauthn.guide/[WebAuthn] is an authentication mechanism designed to replace passwords. In short, every\n"
"time you write a service for registering new users, or logging them in, instead of asking for a password, you\n"
"use WebAuthn, which will replace the password."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"WebAuthn replaces the password with a proof of identity. In practice, users, instead of having to invent a password,\n"
"store it or remember it, will use a hardware token that will generate a proof of identity specifically for your\n"
"service or website. This can be done by asking users to press their thumb on their phone, or pressing a button\n"
"on a https://www.yubico.com[YubiKey] on a computer."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"So, when you register your user, you use your browser to enter your user information (username, your name, etc…)\n"
"and instead of typing a password to identify yourself, you click a button which will invoke the WebAuthn browser\n"
"API which will ask you to do something (press a button, use your fingerprint). Then, your browser will generate\n"
"a proof of identity which you can send to your service instead of a password."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"This proof of identity, when you register, consists mostly in a public key. Actually there's a lot of stuff in\n"
"there but the most interesting is the public key. This public key is not stored on your device, or your browser.\n"
"It is generated especially for the target service (tied to its URI), and derived from the hardware authenticator.\n"
"So the association of the hardware authenticator and the target service will always derive the same private and\n"
"public key pair, none of which are stored anywhere. You can for example, take your YubiKey to another computer\n"
"and it will keep generating the same private/public keys for the same target service."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"So, when you register, you send (mostly) a public key instead of a password, and the service stores that information\n"
"as WebAuthn credentials for your new user account, and this is what will identify you later."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"Then, when you need to log in to that service, instead of typing your password (which doesn't exist, remember?),\n"
"you press a button on the login form, and the browser will ask you to do something, and then it will send\n"
"a signature to your service instead of a password. That signature requires the private key that is derived from\n"
"your authenticator hardware and the target service, and so when your service receives it, it can verify that it\n"
"corresponds to the signature of the public key you stored as credentials."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"So, to recap: registration sends a generated public key instead of a password, and login sends a signature for\n"
"that public key, allowing you to verify that the user is who they were when they registered."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"In practice, it's a little more complex, because there needs to be a handshake with the server before you\n"
"can use the hardware authenticator (ask for a challenge and other things), so there are always two calls to your\n"
"service: one before login or registration, before calling the hardware authenticator, and then the normal\n"
"login or registration."
msgstr ""

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "And also there are a lot more fields to store than just a public key, but we will help you with that."
msgstr "还有，除了公钥，还有很多字段需要存储，但我们会帮助你解决这个问题。"

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "In this example, we build a very simple microservice which offers four endpoints:"
msgstr "在这个例子中，我们建立了一个非常简单的微服务，提供四个端点。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/public`"
msgstr " `/api/public` "

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/public/me`"
msgstr " `/api/public/me` "

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/users/me`"
msgstr " `/api/users/me` "

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/admin`"
msgstr " `/api/admin` "

#: _guides/security-webauthn.adoc
msgid ""
"The `/api/public` endpoint can be accessed anonymously.\n"
"The `/api/public/me` endpoint can be accessed anonymously and returns the current username if there is one, or `<not logged in>` if not.\n"
"The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.\n"
"The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/security-webauthn.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "The solution is located in the `security-webauthn-quickstart` link:{quickstarts-tree-url}/security-webauthn-quickstart[directory]."
msgstr "该解决方案位于 `security-webauthn-quickstart` {quickstarts-tree-url}/security-webauthn-quickstart[目录]中。"

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目。"

#. type: delimited block =
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
msgstr "不要忘记添加选择的数据库连接器库。这里我们使用PostgreSQL作为身份存储。"

#: _guides/security-webauthn.adoc
msgid ""
"This command generates a Maven project, importing the `security-webauthn` extension\n"
"which allows you to use WebAuthn to authenticate users."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `security-webauthn` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容。"

#. type: Block title
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Writing the application"
msgstr "编写应用程序"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular Jakarta REST resource:"
msgstr "让我们从实现 `/api/public` 端点开始。正如你从下面的源代码中看到的，它只是一个普通的JAX-RS资源。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr " `/api/admin` 端点的源代码也非常简单。这里的主要区别是，我们使用 `@RolesAllowed` 注释来确保只有被授予 `admin` 角色的用户才能访问该端点。"

#: _guides/security-webauthn.adoc
msgid ""
"Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.\n"
"We are using `SecurityContext` to get access to the current authenticated Principal and we return the user's name. This information is loaded from the database."
msgstr ""

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Storing our WebAuthn credentials"
msgstr "储存我们的WebAuthn凭证"

#: _guides/security-webauthn.adoc
msgid ""
"We can now describe how our WebAuthn credentials are stored in our database with three entities. Note that we've\n"
"simplified the model in order to only store one credential per user (who could actually have more than one WebAuthn credential\n"
"and other data such as roles):"
msgstr ""

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "We also need a second entity for the credentials:"
msgstr "我们还需要第二个实体的凭证。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "And last but not least, our user entity:"
msgstr "最后但并非最不重要的是，我们的用户实体。"

#. type: Title ====
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "A note about usernames and credential IDs"
msgstr "关于用户名和凭证ID的说明"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "WebAuthn relies on a combination of usernames (unique per user) and credential IDs (unique per authenticator device)."
msgstr "WebAuthn依赖于用户名（每个用户唯一）和凭证ID（每个认证器设备唯一）的组合。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "The reasons why there are two such identifiers, and why they are not unique keys for the credentials themselves are:"
msgstr "为什么有两个这样的标识符，以及为什么它们不是凭证本身的唯一键，原因是。"

#: _guides/security-webauthn.adoc
msgid ""
"A single user can have more than one authenticator device, which means a single username can map to multiple credential IDs,\n"
"all of which identify the same user."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"An authenticator device may be shared by multiple users, because a single person may want multiple user accounts with different\n"
"usernames, all of which having the same authenticator device. So a single credential ID may be used by multiple different users."
msgstr ""

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "The combination of username and credential ID should be a unicity constraint for your credentials table, though."
msgstr "不过，用户名和凭证ID的组合应该是你的凭证表的单一性约束。"

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Exposing your entities to Quarkus WebAuthn"
msgstr "将你的实体暴露给Quarkus WebAuthn"

#: _guides/security-webauthn.adoc
msgid ""
"You need to define a bean implementing the `WebAuthnUserProvider` in order to allow the Quarkus WebAuthn\n"
"extension to load and store credentials. This is where you tell Quarkus how to turn your data model into the\n"
"WebAuthn security model:"
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Writing the HTML application"
msgstr "编写HTML应用程序"

#: _guides/security-webauthn.adoc
msgid ""
"We now need to write a web page with links to all our APIs, as well as a way to register a new user, login, and logout,\n"
"in `src/main/resources/META-INF/resources/index.html`:"
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Testing the application"
msgstr "测试应用程序"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "The application is now protected and the identities are provided by our database."
msgstr "现在，该应用程序受到保护，身份由我们的数据库提供。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "Run your application in dev mode with:"
msgstr "在开发模式下运行你的应用程序。"

#: _guides/security-webauthn.adoc
msgid ""
"which will start a PostgreSQL Dev Service container,\n"
"and open http://localhost:8080 in your browser."
msgstr ""

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "Initially, you will have no credentials registered, and no current user:"
msgstr "最初，你将没有注册的凭证，也没有当前用户。"

#: _guides/security-webauthn.adoc
msgid ""
"The current user is displayed on the left, and you can use the top menu to try accessing the public API, which\n"
"should work, while the user and admin APIs will fail and redirect you to the current page."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"Start by registering your WebAuthn credentials by entering a username, first and last names on the `Register`\n"
"form on the right, then pressing the `Register` button:"
msgstr ""

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "Your browser will ask you to activate your WebAuthn authenticator:"
msgstr "你的浏览器会要求你激活你的WebAuthn认证器。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "You will then be logged in, and can check that the user API is now accessible:"
msgstr "然后你将被登录，并可以检查用户API现在是否可以访问。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "At this stage you can `Logout` and enter your username in the `Login` form:"
msgstr "在这个阶段，你可以 `Logout` ，并在 `Login` 表格中输入你的用户名。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "Then press the `Login` button, and you will be logged in:"
msgstr "然后按 `Login` 按钮，你就可以登录了。"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "The admin API is only accessible if you register with the `admin` user name."
msgstr "只有当你用 `admin` 用户名注册时，才能访问管理API。"

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "WebAuthn endpoints"
msgstr "WebAuthn端点"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "The Quarkus WebAuthn extension comes out of the box with these REST endpoints pre-defined:"
msgstr "Quarkus WebAuthn扩展开箱即预设了这些REST端点。"

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Obtain a registration challenge"
msgstr "获得登记挑战"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`POST /q/webauthn/register`: Set up and obtain a registration challenge"
msgstr " `POST /q/webauthn/register` :设置并获得注册挑战"

#. type: Block title
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Request"
msgstr "要求"

#. type: Block title
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Response"
msgstr "响应"

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Obtain a login challenge"
msgstr "获得一个登录挑战"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`POST /q/webauthn/login`: Set up and obtain a login challenge"
msgstr " `POST /q/webauthn/login` :设置并获得一个登录挑战"

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Trigger a registration"
msgstr "触发注册"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`POST /q/webauthn/callback`: Trigger a registration"
msgstr " `POST /q/webauthn/callback` :触发注册"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "This returns a 204 with no body."
msgstr "这将返回一个没有主体的204。"

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Trigger a login"
msgstr "触发一次登录"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`POST /q/webauthn/callback`: Trigger a login"
msgstr " `POST /q/webauthn/callback` :触发一次登录"

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Logout"
msgstr "登出"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "`GET /q/webauthn/logout`: Logs you out"
msgstr " `GET /q/webauthn/logout` :将你的信息记录下来"

#. type: Plain text
#: _guides/security-webauthn.adoc
#, fuzzy
msgid "This returns a 302 redirect to the root URI of your application."
msgstr "这将返回一个302重定向到你的应用程序的根URI。"

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "WebAuthn JavaScript library"
msgstr "WebAuthn JavaScript库"

#: _guides/security-webauthn.adoc
msgid ""
"Because there's so much JavaScript needed to set WebAuthn up in the browser, the Quarkus WebAuthn extension ships with\n"
"a JavaScript library to help you talk to the WebAuthn endpoints, at `/q/webauthn/webauthn.js`. You can set it up like this:"
msgstr ""

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Invoke registration"
msgstr "调用注册"

#: _guides/security-webauthn.adoc
msgid ""
"The `webAuthn.register` method invokes the registration challenge endpoint, then calls the authenticator and invokes the callback endpoint\n"
"for that registration, and returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object]:"
msgstr ""

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Invoke login"
msgstr "调用登录"

#: _guides/security-webauthn.adoc
msgid ""
"The `webAuthn.login` method invokes the login challenge endpoint, then calls the authenticator and invokes the callback endpoint\n"
"for that login, and returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object]:"
msgstr ""

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Only invoke the registration challenge and authenticator"
msgstr "只调用注册挑战和认证器"

#: _guides/security-webauthn.adoc
msgid ""
"The `webAuthn.registerOnly` method invokes the registration challenge endpoint, then calls the authenticator and returns\n"
"a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object] containing a\n"
"JSON object suitable for being sent to the callback endpoint. You can use that JSON object in order to store the credentials\n"
"in hidden form `input` elements, for example, and send it as part of a regular HTML form:"
msgstr ""

#. type: Title ===
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Only invoke the login challenge and authenticator"
msgstr "只调用注册挑战和认证器"

#: _guides/security-webauthn.adoc
msgid ""
"The `webAuthn.loginOnly` method invokes the login challenge endpoint, then calls the authenticator and returns\n"
"a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object] containing a\n"
"JSON object suitable for being sent to the callback endpoint. You can use that JSON object in order to store the credentials\n"
"in hidden form `input` elements, for example, and send it as part of a regular HTML form:"
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Handling login and registration endpoints yourself"
msgstr "自己处理登录和注册端点"

#: _guides/security-webauthn.adoc
msgid ""
"Sometimes, you will want to ask for more data than just a username in order to register a user,\n"
"or you want to deal with login and registration with custom validation, and so the WebAuthn callback\n"
"endpoint is not enough."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"In this case, you can use the `WebAuthn.loginOnly` and `WebAuthn.registerOnly` methods from the JavaScript\n"
"library, store the authenticator data in hidden form elements, and send them as part of your form payload\n"
"to the server to your custom login or registration endpoints."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"If you are storing them in form input elements, you can then use the `WebAuthnLoginResponse` and\n"
"`WebAuthnRegistrationResponse` classes, mark them as `@BeanParam` and then use the `WebAuthnSecurity.login`\n"
"and `WebAuthnSecurity.register` methods. For example, here's how you can handle a custom login and register:"
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"The `WebAuthnSecurity` methods do not set or read the user cookie, so you will have to take care\n"
"of it yourself, but it allows you to use other means of storing the user, such as JWT. You can use the\n"
"`rememberUser(String userName, RoutingContext ctx)` and `logout(RoutingContext ctx)` methods on the same\n"
"`WebAuthnSecurity` class if you want to manually set up login cookies."
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Blocking version"
msgstr "封锁版本"

#: _guides/security-webauthn.adoc
msgid ""
"If you're using a blocking data access to the database, you can safely block on the `WebAuthnSecurity` methods,\n"
"with `.await().indefinitely()`, because nothing is async in the `register` and `login` methods, besides the\n"
"data access with your `WebAuthnUserProvider`."
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"You will have to add the `@Blocking` annotation on your `WebAuthnUserProvider` class in order to tell the\n"
"Quarkus WebAuthn endpoints to defer those calls to the worker pool."
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Testing WebAuthn"
msgstr "测试WebAuthn"

#: _guides/security-webauthn.adoc
msgid ""
"Testing WebAuthn can be complicated because normally you need a hardware token, which is why we've made the\n"
"`quarkus-test-security-webauthn` helper library:"
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"With this, you can use `WebAuthnHardware` to emulate an authenticator token, as well as the\n"
"`WebAuthnEndpointHelper` helper methods in order to invoke the WebAuthn endpoints, or even fill your form\n"
"data for custom endpoints:"
msgstr ""

#: _guides/security-webauthn.adoc
msgid ""
"For this test, since we're testing both the provided callback endpoint, which updates users\n"
"in its `WebAuthnUserProvider` and the manual `LoginResource` endpoint, which deals with users\n"
"manually, we need to override the `WebAuthnUserProvider` with one that doesn't update the\n"
"`scooby` user:"
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _guides/security-webauthn.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#. type: Title ==
#: _guides/security-webauthn.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _guides/security-webauthn.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
