# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Quarkus Extension for Spring DI API"
msgstr "Quarkus对Spring DI API的扩展"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "While users are encouraged to use CDI annotations for injection, Quarkus provides a compatibility layer for Spring dependency injection in the form of the `spring-di` extension."
msgstr "虽然我们鼓励用户使用CDI注解进行注入，但Quarkus以 `spring-di` 扩展的形式为Spring依赖注入提供了一个兼容层。"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "This guide explains how a Quarkus application can leverage the well known Dependency Injection annotations included in the Spring Framework."
msgstr "本指南解释了Quarkus应用程序如何利用众所周知的Spring框架中的依赖注入注解。"

#. type: Title ==
#: _guides/spring-di.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _guides/spring-di.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/spring-di.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "The solution is located in the `spring-di-quickstart` link:{quickstarts-tree-url}/spring-di-quickstart[directory]."
msgstr "该解决方案位于 `spring-di-quickstart` {quickstarts-tree-url}/spring-di-quickstart[目录]中。"

#. type: Title ==
#: _guides/spring-di.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的工程项目。用以下命令创建一个新项目："

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "This command generates a project which imports the `spring-di` extension."
msgstr "该命令生成了一个导入 `spring-di` 扩展的项目。"

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `spring-di` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果已经配置了 Quarkus 项目，可以在项目基本目录下运行以下命令，将 `spring-di` 扩展添加到项目中："

#. type: Plain text
#: _guides/spring-di.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _guides/spring-di.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/spring-di.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Add beans using Spring annotations"
msgstr "使用Spring注解添加Bean"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "Let's proceed to create some beans using various Spring annotations."
msgstr "让我们继续使用各种Spring注释来创建一些Bean。"

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"First we will create a `StringFunction` interface that some of our beans will implement and which will be injected into another bean later on.\n"
"Create a `src/main/java/org/acme/spring/di/StringFunction.java` file and set the following content:"
msgstr "首先，我们将创建一个 `StringFunction` 接口，我们的一些 Bean 将实现该接口，稍后该接口将被注入到另一个 Bean 中。创建 `src/main/java/org/acme/spring/di/StringFunction.java` 文件并设置以下内容："

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"With the interface in place, we will add an `AppConfiguration` class which will use the Spring's Java Config style for defining a bean.\n"
"It will be used to create a `StringFunction` bean that will capitalize the text passed as parameter.\n"
"Create a `src/main/java/org/acme/spring/di/AppConfiguration.java` file with the following content:"
msgstr "界面就绪后，我们将添加一个 `AppConfiguration` 类，该类将使用 Spring 的 Java Config 风格来定义 Bean。它将用于创建一个 `StringFunction` Bean，该 Bean 将对作为参数传递的文本进行大写处理。创建一个 `src/main/java/org/acme/spring/di/AppConfiguration.java` 文件，内容如下："

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"As a Spring developer, you might be tempted to add the `@ComponentScan` annotation in order to define specific packages to scan for additional beans. Do note that `@ComponentScan` is entirely unnecessary since Quarkus performs xref:cdi-reference.adoc#bean_discovery[bean discovery] only in `annotated` mode with no visibility boundaries. Moreover, note that the bean discovery in Quarkus happens at build time.\n"
"In the same vein, Quarkus does not support the Spring `@Import` annotation."
msgstr "作为 Spring 开发人员，您可能很想添加 `@ComponentScan` 注解，以便定义特定的包来扫描其他 Bean。请注意， `@ComponentScan` 完全没有必要，因为 Quarkus 仅在 `annotated` 模式下执行 Bean xref:cdi-reference.adoc#bean_discovery[发现] ，没有可见性边界。此外，请注意，Quarkus 中的 Bean 发现是在构建时进行的。同样，Quarkus 也不支持 Spring `@Import` 注解。"

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"Now we define another bean that will implement `StringFunction` using Spring's stereotype annotation style.\n"
"This bean will effectively be a no-op bean that simply returns the input as is.\n"
"Create a `src/main/java/org/acme/spring/di/NoOpSingleStringFunction.java` file and set the following content:"
msgstr "现在，我们使用 Spring 的定型注解样式定义了另一个将实现 `StringFunction` 的 Bean。这个 Bean 实际上是一个无操作 Bean，只需按原样返回输入即可。创建 `src/main/java/org/acme/spring/di/NoOpSingleStringFunction.java` 文件并设置以下内容："

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"Quarkus also provides support for injecting configuration values using Spring's `@Value` annotation.\n"
"To see that in action, first edit the `src/main/resources/application.properties` with the following content:"
msgstr "Quarkus 还支持使用 Spring 的 `@Value` 注解注入配置值。要查看实际操作，首先编辑 `src/main/resources/application.properties` ，内容如下："

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "Next create a new Spring bean in `src/main/java/org/acme/spring/di/MessageProducer.java` with the following content:"
msgstr "接下来在 `src/main/java/org/acme/spring/di/MessageProducer.java` ，创建一个新的Spring Bean，内容如下。"

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"The final bean we will create ties together all the previous beans.\n"
"Create a `src/main/java/org/acme/spring/di/GreeterBean.java` file and copy the following content:"
msgstr "我们将创建的最后一个 Bean 将前面所有的 Bean 连接在一起。创建 `src/main/java/org/acme/spring/di/GreeterBean.java` 文件并复制以下内容："

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"In the code above, we see that both field injection and constructor injection are being used (note that constructor injection does not need the `@Autowired` annotation since there is a single constructor).\n"
"Furthermore, the `@Value` annotation on `suffix` has also a default value defined, which in this case will be used since we have not defined `greeting.suffix` in `application.properties`."
msgstr "在上面的代码中，我们看到同时使用了字段注入和构造函数注入（注意，构造函数注入不需要 `@Autowired` 注解，因为只有一个构造函数）。此外， `suffix` 上的 `@Value` 注解还定义了一个默认值，由于我们没有在 `application.properties` 中定义 `greeting.suffix` ，因此在本例中将使用默认值。"

#. type: Title ===
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Create the Jakarta REST resource"
msgstr "创建JAX-RS资源"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "Create the `src/main/java/org/acme/spring/di/GreeterResource.java` file with the following content:"
msgstr "创建具有以下内容的 `src/main/java/org/acme/spring/di/GreeterResource.java` 文件。"

#. type: Title ==
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Update the test"
msgstr "更新测试"

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"We also need to update the functional test to reflect the changes made to the endpoint.\n"
"Edit the `src/test/java/org/acme/spring/di/GreetingResourceTest.java` file and change the content of the `testHelloEndpoint` method to:"
msgstr "我们还需要更新功能测试，以反映端点所做的更改。编辑 `src/test/java/org/acme/spring/di/GreetingResourceTest.java` 文件，将 `testHelloEndpoint` 方法的内容改为："

#. type: Title ==
#: _guides/spring-di.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "Run the application with:"
msgstr "使用以下命令运行该应用程序:"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "Open your browser to http://localhost:8080/greeting."
msgstr "在你的浏览器中打开 http://localhost:8080/greeting 网页。"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "The result should be: `HELLO WORLD!`."
msgstr "结果应该是： `HELLO WORLD!` 。"

#. type: Title ==
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Run the application as a native"
msgstr "作为一个本地的应用程序运行"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "You can of course create a native image using instructions similar to xref:building-native-image.adoc[this] guide."
msgstr "当然，你可以使用与 link:building-native-image.html[本] 指南类似的说明创建一个本地图像。"

#. type: Title ==
#: _guides/spring-di.adoc
#, no-wrap
msgid "Important Technical Note"
msgstr "重要技术说明"

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.\n"
"Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.\n"
"What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover, Spring infrastructure\n"
"classes (like `org.springframework.beans.factory.config.BeanPostProcessor` , `org.springframework.context.ApplicationContext` for example) will not be executed.\n"
"Regarding the dependency injection in particular, Quarkus uses a Dependency Injection mechanism (called ArC) based on the https://jakarta.ee/specifications/cdi/4.1/jakarta-cdi-spec-4.1.html[Jakarta Contexts and Dependency Injection 4.1] specification. If you want to learn more about it, we recommend you to read the xref:cdi.adoc[Quarkus introduction to CDI] and the xref:cdi-reference.adoc#arc-configuration-reference[CDI reference guide]\n"
"The various Spring Boot test features are not supported by Quarkus. For testing purposes, please, check the xref:getting-started-testing.adoc[Quarkus testing guide]."
msgstr "请注意，Quarkus 中的 Spring 支持不会启动 Spring 应用程序上下文，也不会运行任何 Spring 基础架构类。Spring 类和注解仅用于读取元数据和/或用作用户代码方法返回类型或参数类型。这对最终用户来说意味着，任意添加 Spring 库不会产生任何影响。此外，Spring 基础架构类（例如 `org.springframework.beans.factory.config.BeanPostProcessor` 、 `org.springframework.context.ApplicationContext` ）也不会被执行。特别是在依赖注入方面，Quarkus 使用了基于 link:https://jakarta.ee/specifications/cdi/4.1/jakarta-cdi-spec-4.1.html[Jakarta Contexts 和依赖注入 4.1] 规范的依赖注入机制（称为 ArC）。 xref:cdi.adoc[Quarkus] 不支持各种 Spring Boot xref:cdi-reference.adoc#arc-configuration-reference[测试] 功能。如需测试，请查看 Quarkus xref:getting-started-testing.adoc[测试指南] 。"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "Some known limitations:"
msgstr "一些已知的限制："

#: _guides/spring-di.adoc
#, fuzzy
msgid ""
"In case of ambiguity, Spring uses a fallback match of the bean name against the injection point field name or parameter name.\n"
"This is not supported, thus `@Named` annotation needs to be used to explicitly solve any ambiguity."
msgstr "如果存在歧义，Spring 会使用 Bean 名称与注入点字段名称或参数名称进行后备匹配。但这并不支持，因此需要使用 `@Named` 注释来明确解决任何歧义。"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "Injecting all beans of a particular type is limited to `List<Bean>`. Injecting `Set<Bean>` or `Map<String, Bean>` is not supported."
msgstr "注入某一特定类型的所有豆子仅限于 `List<Bean>` 。不支持注入 `Set<Bean>` 或 `Map<String, Bean>` 。"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "Optional injection using `@Autowired(required=false)` is not supported. Use `javax.enterprise.inject.Instance` and then test `Instance.isResolvable()`."
msgstr "不支持使用 `@Autowired(required=false)` 的可选注入。使用 `javax.enterprise.inject.Instance` ，然后测试 `Instance.isResolvable()` 。"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "`@Conditional` is ignored, since dependency injection gets resolved at build time. An alternative is to use xref:cdi-reference.adoc#enable_build_profile[conditional build profiles]."
msgstr " `@Conditional` 会被忽略，因为依赖注入会在构建时被解决。另一种方法是使用 link:cdi-reference.html#enable_build_profile[有条件的构建配置文件] 。"

#. type: Title ==
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Conversion Table"
msgstr "转换表"

#. type: Plain text
#: _guides/spring-di.adoc
#, fuzzy
msgid "The following table shows how Spring DI annotations can be converted to CDI and / or MicroProfile annotations."
msgstr "下表显示了Spring DI注解如何被转换为CDI和/或MicroProfile注解。"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Spring"
msgstr "春天"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "CDI / MicroProfile"
msgstr "CDI / MicroProfile"

#. type: Table
#: _guides/spring-di.adoc
#, no-wrap
msgid "Comments"
msgstr "备注"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Autowired"
msgstr "@自动连线"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Inject"
msgstr "@Inject"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "If the type is `java.util.List`, the `io.quarkus.arc.All` qualifier is added."
msgstr "如果类型是 `java.util.List` ，则会添加 `io.quarkus.arc.All` 修饰语。"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Qualifier"
msgstr "@Qualifier"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Named"
msgstr "@Named"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Value"
msgstr "@价值"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@ConfigProperty"
msgstr "@ConfigProperty"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@ConfigProperty doesn't support an expression language the way @Value does, but makes the typical use cases much easier to handle"
msgstr "@ConfigProperty并不像@Value那样支持表达式语言，但它使典型的使用情况更容易处理。"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Component"
msgstr "@组件"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Singleton"
msgstr "@Singleton"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "By default Spring stereotype annotations are singleton beans"
msgstr "默认情况下，Spring定型注释是单子豆"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Service"
msgstr "@服务"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Repository"
msgstr "@存储库"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Configuration"
msgstr "@配置"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@ApplicationScoped"
msgstr "@ApplicationScoped"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "In CDI a producer bean isn't limited to the application scope, it could just as well be @Singleton or @Dependent"
msgstr "在CDI中，生产者Bean并不局限于应用范围，它也可以是@Singleton或@Dependent。"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Bean"
msgstr "@豆豆"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Produces"
msgstr "@制片人"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Scope"
msgstr "@Scope"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Doesn't have a one-to-one mapping to a CDI annotation. Depending on the value of @Scope, one of the @Singleton, @ApplicationScoped, @SessionScoped, @RequestScoped, @Dependent could be used"
msgstr "没有与CDI注解的一对一映射。根据@Scope的值，可以使用@Singleton, @ApplicationScoped, @SessionScoped, @RequestScoped, @Dependent中的一个。"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@ComponentScan"
msgstr "@ComponentScan"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Doesn't have a one-to-one mapping to a CDI annotation. It is not used in Quarkus because Quarkus does all classpath scanning at build time."
msgstr "没有与CDI注释的一对一映射。在Quarkus中不使用它，因为Quarkus在构建时进行所有的classpath扫描。"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "@Import"
msgstr "@进口"

#. type: Table
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Doesn't have a one-to-one mapping to a CDI annotation."
msgstr "与CDI注解没有一对一的映射。"

#. type: Title ==
#: _guides/spring-di.adoc
#, fuzzy, no-wrap
msgid "Spring DI Configuration Reference"
msgstr "弹簧 DI 配置参考"

#: _guides/spring-di.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _guides/spring-di.adoc
#, no-wrap
msgid "More Spring guides"
msgstr "更多 Spring 指南"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkus拥有更多的Spring兼容特性。获取更多细节请参阅以下指南:"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr "link:spring-web.html[Quarkus - Spring Web 扩展]"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"
msgstr "xref:spring-data-jpa.adoc[Quarkus - Spring Data JPA 扩展]"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr "xref:spring-data-rest.adoc[Quarkus - Spring Data REST 扩展]"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "xref:spring-security.adoc[Quarkus - Extension for Spring Security]"
msgstr "xref:spring-security.adoc[Quarkus - Spring Security 扩展]"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr "xref:spring-cloud-config-client.adoc[Quarkus - 从Spring Cloud Config Server 中读取配置]"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"
msgstr "xref:spring-boot-properties.adoc[Quarkus - Spring Boot properties 扩展]"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr "xref:spring-cache.adoc[Quarkus - Spring Cache 扩展]"

#. type: Plain text
#: _guides/spring-di.adoc
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr "xref:spring-scheduled.adoc[Quarkus - Spring Scheduled 扩展]"
