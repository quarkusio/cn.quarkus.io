# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-12 16:07+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Dev Services and Dev UI for OpenID Connect (OIDC)"
msgstr "OpenID Connect (OIDC) 的开发服务和开发用户界面"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"You can use Dev Services for Keycloak and the Dev UI for the OpenID Connect (OIDC) Keycloak provider and adapt these services for other OpenID Connect providers.\n"
"You can also use the Dev UI with OpenID Connect providers that have already been started before you run Quarkus in development mode."
msgstr "你可以使用 Keycloak 的开发服务和 OpenID Connect (OIDC) Keycloak 提供商的开发用户界面，并为其他 OpenID Connect 提供商调整这些服务。你也可以将开发用户界面用于在开发模式下运行 Quarkus 之前已经启动的 OpenID Connect 提供程序。"

#. type: Title ==
#: _guides/security-openid-connect-dev-services.adoc
#, no-wrap
msgid "Introduction"
msgstr "简介"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Quarkus provides the Dev Services for Keycloak feature, which is enabled by default when the `quarkus-oidc` extension is started in dev mode, the integration tests are running in test mode, and when no `quarkus.oidc.auth-server-url` property is configured.\n"
"The Dev Services for Keycloak feature starts a Keycloak container for both the dev and test modes.\n"
"It initializes them by registering the existing Keycloak realm or creating a new realm with the client and users required for you to start developing your Quarkus application secured by Keycloak immediately.\n"
"The container restarts when the `application.properties` or the realm file changes have been detected."
msgstr "Quarkus 提供了用于 Keycloak 的开发服务功能，当 `quarkus-oidc` 扩展在开发模式下启动、集成测试在测试模式下运行以及未配置 `quarkus.oidc.auth-server-url` 属性时，该功能默认启用。Keycloak Dev 服务功能会在开发和测试模式下启动 Keycloak 容器。它通过注册现有的 Keycloak 领域或创建一个新领域来初始化它们，并提供客户端和用户，以便你立即开始开发由 Keycloak 保护的 Quarkus 应用程序。当检测到 `application.properties` 或 Realm 文件发生变化时，容器会重新启动。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Additionally, xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev[/q/dev] complements this feature with a Dev UI page, which helps to acquire the tokens from Keycloak and test your Quarkus application."
msgstr "此外，位于 link:http://localhost:8080/q/dev[/q/dev] 的 xref:dev-ui.adoc[Dev UI] 通过 Dev UI 页面对该功能进行了补充，有助于从 Keycloak 获取令牌并测试你的 Quarkus 应用程序。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"If `quarkus.oidc.auth-server-url` is already set, then a generic OpenID Connect Dev Console, which can be used with all OpenID Connect providers, is activated.\n"
"For more information, see <<dev-ui-all-oidc-providers,Dev UI for all OpenID Connect providers>>."
msgstr "如果已设置 `quarkus.oidc.auth-server-url` ，则会激活通用 OpenID Connect 开发控制台，该控制台可用于所有 OpenID Connect 提供商。更多信息，请参阅 xref:dev-ui-all-oidc-providers[适用于所有 OpenID Connect 提供商的 Dev UI] 。"

#. type: Title ==
#: _guides/security-openid-connect-dev-services.adoc
#, no-wrap
msgid "Dev Services for Keycloak"
msgstr "为Keycloak提供的开发服务"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Start your application without configuring `quarkus.oidc` properties in the `application.properties` file:"
msgstr "在 `application.properties` 文件中不配置 `quarkus.oidc` 属性的情况下启动应用程序："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The console displays output similar to this:"
msgstr "控制台显示类似下面的输出："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "When logging in to the Keycloak admin console, the username is `admin`, and the password is `admin`."
msgstr "登录 Keycloak 管理控制台时，用户名是 `admin` ，密码是 `admin` 。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Be aware that Dev Services for Keycloak defaults to not initiating a new container if it detects an existing container labeled `quarkus-dev-service-keycloak`.\n"
"It connects to this container provided the value of the `quarkus.keycloak.devservices.service-name` property matches the label's value (default `quarkus`).\n"
"In such cases, expect a slightly altered output when you run the following:"
msgstr "请注意，Dev Services for Keycloak 在检测到标有 `quarkus-dev-service-keycloak` 的现有容器时，默认不启动新容器。如果 `quarkus.keycloak.devservices.service-name` 属性的值与标签值（默认为 `quarkus` ）匹配，它就会连接到该容器。在这种情况下，运行以下命令时，输出结果可能会略有不同："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"If the Keycloak container is not ready within the default 60-second timeout, you can resolve this by extending the timeout period.\n"
"For instance, set it to 2 minutes with `quarkus.devservices.timeout=2M`."
msgstr "如果 Keycloak 容器没有在默认的 60 秒超时时间内准备就绪，可以通过延长超时时间来解决。例如，使用 `quarkus.devservices.timeout=2M` 将其设置为 2 分钟。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can turn off sharing of the containers by specifying `quarkus.keycloak.devservices.shared=false`."
msgstr "您可以通过指定 `quarkus.keycloak.devservices.shared=false` 关闭共享容器。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Now, open the main link:http://localhost:8080/q/dev[Dev UI page] and observe the *OpenID Connect* card linking to a Keycloak page.\n"
"For example:"
msgstr "现在，打开 link:http://localhost:8080/q/dev[Dev UI] 主 link:http://localhost:8080/q/dev[页面] ，观察 *OpenID Connect* 卡链接到 Keycloak 页面的情况。例如"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Click the *Keycloak provider* link.\n"
"This action opens a Keycloak page whose appearance varies depending on how the Dev Services for Keycloak feature is configured."
msgstr "单击 *Keycloak 提供商* 链接。此操作将打开一个 Keycloak 页面，该页面的外观因 Keycloak Dev Services 功能的配置方式而异。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Developing service applications"
msgstr "开发服务应用程序"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "By default, the Keycloak page can be used to support the development of a xref:security-oidc-bearer-token-authentication.adoc[Quarkus OIDC service application]."
msgstr "默认情况下，Keycloak页面可用于支持 link:security-openid-connect.html[Quarkus OIDC服务应用程序] 的开发。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Authorization code grant"
msgstr "授权码授予"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"If you set `quarkus.oidc.devui.grant.type=code` in the `application.properties` file (this is a default value), then an `authorization_code` grant is used to acquire both access and ID tokens.\n"
"Using this grant is recommended to emulate a typical flow where a single page application (SPA) acquires the tokens and uses them to access Quarkus services."
msgstr "如果在 `application.properties` 文件中设置了 `quarkus.oidc.devui.grant.type=code` （这是默认值），那么 `authorization_code` 授予将用于获取访问和 ID 标记。建议使用该授权来模拟单页应用程序（SPA）获取令牌并使用它们访问 Quarkus 服务的典型流程。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"First, you see an option to *Log into Single Page Application*.\n"
"For example:"
msgstr "首先，你会看到一个 *登录单页应用程序* 的选项。例如"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Choose the Keycloak realm and client ID to use during the authentication process."
msgstr "选择要在身份验证过程中使用的 Keycloak 领域和客户端 ID。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This SPA represents a public OpenID Connect client; therefore, the client IDs you enter must identify public Keycloak clients that have no secrets.\n"
"This is because SPA is not a web application and cannot securely handle the secrets it needs to complete the authorization code flow if the client secret is also expected to complete the authorization code flow."
msgstr "此 SPA 代表公共 OpenID Connect 客户端；因此，您输入的客户端 ID 必须标识没有秘密的公共 Keycloak 客户端。这是因为 SPA 不是网络应用程序，如果客户端秘密也要完成授权代码流，就无法安全地处理完成授权代码流所需的秘密。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"The clients requiring secrets can only be supported with this SPA if a default realm has been created or if `quarkus.oidc.credentials.secret` is configured and a single custom realm is used.\n"
"In both cases, the SPA can figure out the client secret it might need to complete the authorization code flow after Keycloak redirects the user back to it."
msgstr "只有在创建了默认域或配置了 `quarkus.oidc.credentials.secret` 并使用了单个自定义域的情况下，该 SPA 才能支持需要秘密的客户端。在这两种情况下，SPA 都能在 Keycloak 将用户重定向后，找出完成授权代码流可能需要的客户端秘密。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Next, after selecting *Log into Single Page Application*, you are redirected to Keycloak to authenticate, for example, as `alice:alice`.\n"
"Then, you are returned to the page representing the SPA:"
msgstr "接下来，在选择 *登录到单页面应用程序* 后，您将被重定向到 Keycloak 进行身份验证，例如，以 `alice:alice` 的身份。然后，你将返回到代表 SPA 的页面："

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can view the acquired access and ID tokens, for example:"
msgstr "例如，你可以查看获得的访问和ID令牌。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This view shows the encoded JSON Web Token (JWT) token on the left side and highlights the headers in red, payload or claims in green, and signature in blue.\n"
"It also shows the decoded JWT token on the right side, where you can see the header, claim names, and their values."
msgstr "该视图在左侧显示已编码的 JSON 网络令牌（JWT）标记，并用红色标出标头，用绿色标出有效载荷或权利要求，用蓝色标出签名。它还会在右侧显示解码后的 JWT 令牌，您可以看到标头、权利要求名称及其值。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Next, test the service by entering a relative service path and sending a token.\n"
"SPA usually sends access tokens to the application endpoint, so choose the *With Access Token* option, for example:"
msgstr "接下来，通过输入相对服务路径和发送令牌来测试服务。SPA 通常会向应用程序端点发送访问令牌，因此请选择 \" *使用访问令牌* \"选项："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "To clear the test results area, use the eraser icon in the lower right corner."
msgstr "要清除测试结果区域，请使用右下角的橡皮擦图标。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Sometimes, ID tokens are forwarded to application frontends as bearer tokens.\n"
"This helps endpoints identify the user logged into SPA or perform out-of-band token verification.\n"
"Choose the *With ID Token* option in such cases."
msgstr "有时，ID 令牌会作为承载令牌转发到应用程序前端。这有助于端点识别登录 SPA 的用户或执行带外令牌验证。在这种情况下，请选择 \" *使用 ID 令牌* \"选项。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Manually entering the service paths is not ideal.\n"
"For information about enabling Swagger or GraphQL UI for testing the service with the access token already acquired by the OIDC Dev UI, see the <<test-with-swagger-graphql,Test with Swagger UI or GraphQL UI>> section."
msgstr "手动输入服务路径并不理想。有关启用 Swagger 或 GraphQL UI 以使用 OIDC Dev UI 已获取的访问令牌测试服务的信息，请参阅 \" xref:test-with-swagger-graphql[使用 Swagger UI 或 GraphQL UI 测试] \"部分。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Finally, you can click *Log Out* image::dev-ui-keycloak-logout.png[alt=Dev UI Keycloak - Log Out,role=\"center\"] so you can authenticate to Keycloak as a different user."
msgstr "最后，你可以点击 *注销* image::dev-ui-keycloak-logout.png[alt=Dev UI Keycloak - 注销,role=\"center\"]，这样你就可以用不同的用户身份验证 Keycloak。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Keycloak might return an error when you try to *Log into Single Page Application*.\n"
"For example, `quarkus.oidc.client-id` might not match the client ID in the realm imported to Keycloak, or the client in this realm might not be configured correctly to support the authorization code flow.\n"
"In such cases, Keycloak returns an `error_description` query parameter, and the Dev UI also shows this error description.\n"
"For example:"
msgstr "当您尝试 *登录单页应用程序* 时，Keycloak 可能会返回错误。例如， `quarkus.oidc.client-id` 可能与导入 Keycloak 的领域中的客户端 ID 不匹配，或者此领域中的客户端可能未正确配置以支持授权码流。在这种情况下，Keycloak 会返回 `error_description` 查询参数，开发人员用户界面也会显示此错误描述。例如"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the error occurs, log in to Keycloak by using the *Keycloak Admin* option, update the realm configuration as necessary, and check the `application.properties`."
msgstr "如果发生错误，请使用 Keycloak *管理* 选项登录 *Keycloak* ，必要时更新领域配置，然后检查 `application.properties` 。"

#. type: Title =====
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Test with Swagger UI or GraphQL UI"
msgstr "用Swagger UI或GrapghQL UI进行测试"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"You can avoid manually entering the service paths and test your service with Swagger UI or GraphQL UI if `quarkus-smallrye-openapi` or `quarkus-smallrye-graphql` are used in your project.\n"
"For example, start Quarkus in dev mode with both `quarkus-smallrye-openapi` and `quarkus-smallrye-graphql` dependencies.\n"
"You can see the following options after logging in to Keycloak:"
msgstr "如果项目中使用了 `quarkus-smallrye-openapi` 或 `quarkus-smallrye-graphql` ，则可以避免手动输入服务路径，而是使用 Swagger UI 或 GraphQL UI 测试服务。例如，在开发模式下启动同时依赖 `quarkus-smallrye-openapi` 和 `quarkus-smallrye-graphql` 的 Quarkus。登录 Keycloak 后，你可以看到以下选项："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"For example, clicking *Swagger UI* opens the Swagger UI in a new browser tab where you can test the service by using the token acquired by Dev UI for Keycloak.\n"
"The Swagger UI does not try to re-authenticate again.\n"
"In the Swagger UI, do not choose a Swagger UI `Authorize` option; the OIDC Dev UI has authorized and provided the access token for Swagger UI to use for testing."
msgstr "例如，单击 Sw *agger UI* 会在新的浏览器标签页中打开 Swagger UI，您可以在其中使用 Dev UI 为 Keycloak 获取的令牌测试服务。Swagger UI 不会再次尝试重新验证。在 Swagger UI 中，不要选择 Swagger UI `Authorize` 选项；OIDC Dev UI 已授权并提供了访问令牌供 Swagger UI 用于测试。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Integration with GraphQL UI works similarly; the access token acquired by Dev UI for Keycloak is used."
msgstr "与 GraphQL UI 集成的工作原理类似；使用的是 Dev UI 为 Keycloak 获取的访问令牌。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"You might need to register a redirect URI for the authorization code flow initiated by Dev UI for Keycloak to work.\n"
"This is because Keycloak might enforce that the authenticated users are redirected only to the configured redirect URI.\n"
"It is recommended to do this in production to avoid the users being redirected to the wrong endpoints, which might happen if the correct `redirect_uri` parameter in the authentication request URI has been manipulated."
msgstr "您可能需要为 Dev UI 启动的授权码流注册一个重定向 URI，这样 Keycloak 才能工作。这是因为 Keycloak 可能会强制将已验证用户重定向到配置的重定向 URI。建议在生产中这样做，以避免用户被重定向到错误的端点，如果认证请求 URI 中正确的 `redirect_uri` 参数被篡改，可能会发生这种情况。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If Keycloak enforces it, you see an authentication error informing you that the `redirect_uri` value is wrong."
msgstr "如果 Keycloak 强制执行，则会出现验证错误，提示您 `redirect_uri` 值错误。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"In this case, select the *Keycloak Admin* option in the top right corner, login as `admin:admin`, select the test realm and the client which Dev UI for Keycloak is configured with, and add `http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/keycloak-provider` to `Valid Redirect URIs`.\n"
"If you used `-Dquarkus.http.port` when starting Quarkus, then change `8080` to the value of `quarkus.http.port`"
msgstr "在这种情况下，选择右上角的 *Keycloak 管理* 选项，以 `admin:admin` 登录，选择测试域和配置了 Keycloak 的 Dev UI 的客户端，然后添加 `http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/keycloak-provider` 到 `Valid Redirect URIs` 。如果在启动 Quarkus 时使用的是 `-Dquarkus.http.port` ，那么将 `8080` 更改为 `quarkus.http.port`"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the container is shared between multiple applications running on different ports, you must register `redirect_uri` values for each application."
msgstr "如果在不同端口上运行的多个应用程序共享容器，则必须为每个应用程序注册 `redirect_uri` 值。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can set the `redirect_uri` value to `*` only for test purposes, especially when the containers are shared between multiple applications."
msgstr "您可以将 `redirect_uri` 值设置为 `*` ，仅用于测试目的，尤其是在多个应用程序共享容器时。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If no custom realm is imported, Dev Services for Keycloak sets the `redirect_uri` value to `*` when it creates a default realm."
msgstr "如果没有导入自定义域，Dev Services for Keycloak 会在创建默认域时将 `redirect_uri` 值设置为 `*` 。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Implicit grant"
msgstr "隐性赠款"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"If you set `quarkus.oidc.devui.grant.type=implicit` in the `application.properties` file, then an `implicit` grant is used to acquire both access and ID tokens.\n"
"Use this grant to emulate a single page application only if the authorization code grant does not work; for example, when a client is configured in Keycloak to support an implicit grant."
msgstr "如果在 `application.properties` 文件中设置了 `quarkus.oidc.devui.grant.type=implicit` ，则 `implicit` 授权将用于获取访问和 ID 标记。只有在授权代码授权不起作用的情况下（例如，客户端在 Keycloak 中配置为支持隐式授权），才能使用此授权来模拟单页应用程序。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Password grant"
msgstr "密码授予"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=password` in the `application.properties` file, then you see a screen similar to this one:"
msgstr "如果在 `application.properties` 文件中设置 `quarkus.oidc.devui.grant.type=password` ，就会看到类似下面的屏幕："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Select a realm, enter a client ID and secret, user name and password, a relative service endpoint path, and click *Test service*.\n"
"It returns a status code, such as `200`, `403`, `401`, or `404`.\n"
"If the username is also set in the `quarkus.keycloak.devservices.users` map property containing usernames and passwords, then you do not have to set a password when testing the service.\n"
"Be aware that you do not have to initialize `quarkus.keycloak.devservices.users` to test the service by using the `password` grant."
msgstr "选择一个领域，输入客户端 ID 和秘密、用户名和密码、相对服务端点路径，然后单击 *测试服务* 。它会返回一个状态代码，如 `200` , `403` , `401` 或 `404` 。如果在包含用户名和密码的 `quarkus.keycloak.devservices.users` 映射属性中也设置了用户名，那么测试服务时就无需设置密码。请注意，使用 `password` grant 测试服务时，不必初始化 `quarkus.keycloak.devservices.users` 。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "In the Dev UI console, you can also see output similar to the following:"
msgstr "在 Dev UI 控制台中，您还可以看到类似下面的输出："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "A token is acquired from Keycloak by using a `password` grant and is sent to the service endpoint."
msgstr "通过 `password` 授权从 Keycloak 获取令牌，并将其发送到服务端点。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Client credentials grant"
msgstr "客户证书授予"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=client`, then a `client_credentials` grant is used to acquire a token, with the page showing no *User* field in this case:"
msgstr "如果设置 `quarkus.oidc.devui.grant.type=client` ，则使用 `client_credentials` 授予来获取令牌，在这种情况下，页面不显示 *用户* 字段："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Select a realm, enter the client ID and secret, a relative service endpoint path, and click *Test service*.\n"
"It returns a status code, such as `200`, `403`, `401`, or `404`."
msgstr "选择一个域，输入客户端 ID 和密 码、相对服务端点路径，然后单击 *测试服务* 。它会返回一个状态代码，如 `200` , `403` , `401` 或 `404` 。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Developing OpenID Connect web-app applications"
msgstr "开发 OpenID Connect 网络应用程序"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "To develop a xref:security-oidc-code-flow-authentication.adoc[Quarkus OIDC web application], set `quarkus.oidc.application-type=web-app` in the `application.properties` file before starting the application."
msgstr "要开发 xref:security-oidc-code-flow-authentication.adoc[Quarkus OIDC 网络应用程序] ，请在启动应用程序之前在 `application.properties` 文件中设置 `quarkus.oidc.application-type=web-app` 。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Starting the application displays a screen similar to this one:"
msgstr "启动应用程序时，会显示与此类似的屏幕："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Set a relative service endpoint path and click *Log in to your web application*.\n"
"You are redirected to Keycloak to enter a username and password in a new browser tab before you get a response from the Quarkus application."
msgstr "设置相对服务端点路径，然后单击 \" *登录网络应用程序* \"。在收到 Quarkus 应用程序的响应之前，你会被重定向到 Keycloak，在新的浏览器标签页中输入用户名和密码。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "In this case, the Dev UI is not very helpful because the Quarkus OIDC `web-app` application controls the authorization code flow and acquires the tokens."
msgstr "在这种情况下，由于 Quarkus OIDC `web-app` 应用程序会控制授权代码流并获取令牌，因此 Dev UI 没有太大帮助。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "To make Dev UI more helpful in supporting the development of OIDC `web-app` applications, consider setting profile-specific values for `quarkus.oidc.application-type`:"
msgstr "为使 Dev UI 更有助于支持 OIDC `web-app` 应用程序的开发，请考虑为 `quarkus.oidc.application-type` 设置特定于配置文件的值："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This profile ensures that all Dev UI options described in <<develop-service-applications,Developing service applications>> are available when your `web-app` application is run in dev mode.\n"
"The limitation of this approach is that both access and ID tokens returned with the code flow and acquired with Dev UI are sent to the endpoint as HTTP `Bearer` tokens - which does not work well if your endpoint requires the injection of `IdToken`.\n"
"However, it works as expected if your `web-app` application only uses the access token, for example, as a source of roles or to get `UserInfo`, even if it is assumed to be a `service` application in dev mode."
msgstr "当 `web-app` 应用程序以 xref:develop-service-applications[开发] 模式运行时，该配置文件可确保 \" xref:develop-service-applications[开发服务应用程序] \"中描述的所有开发用户界面选项可用。这种方法的局限性在于，通过代码流返回的访问令牌和 ID 令牌以及通过 Dev UI 获取的访问令牌都会以 HTTP `Bearer` 令牌的形式发送到端点--如果端点需要注入 `IdToken` ，这种方法就不能很好地发挥作用。不过，如果 `web-app` 应用程序仅使用访问令牌，例如作为角色来源或获取 `UserInfo` ，即使假定它是开发模式下的 `service` 应用程序，它也能按预期运行。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "For dev mode, an even better option is to set the `application-type` property to `hybrid`:"
msgstr "对于开发模式，更好的办法是将 `application-type` 属性设置为 `hybrid` ："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This type ensures that if you access the application from the browser in dev mode without the OIDC Dev UI, Quarkus OIDC also performs the authorization code flow as in the production mode.\n"
"The OIDC Dev UI is also more beneficial because hybrid applications can also accept the bearer access tokens."
msgstr "这种类型可确保在不使用 OIDC Dev UI 的开发模式下从浏览器访问应用程序时，Quarkus OIDC 也能像在生产模式下一样执行授权代码流。OIDC Dev UI 的好处还在于，混合应用程序也可以接受不记名访问令牌。"

#. type: Title ===
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Running the tests"
msgstr "运行测试"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can run the tests against a Keycloak container started in a test mode in a xref:continuous-testing.adoc[Continuous Testing] mode."
msgstr "你可以在 link:continuous-testing.html[持续测试] 模式下针对以测试模式启动的Keycloak容器运行测试。"

#: _guides/security-openid-connect-dev-services.adoc
msgid ""
"It is also recommended to run the integration tests against Keycloak by using Dev Services for Keycloak.\n"
"For more information, see xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing-keycloak-devservices[Testing OpenID Connect Service Applications with Dev Services] and xref:security-oidc-code-flow-authentication.adoc#code-flow-integration-testing-keycloak-devservices[Testing OpenID Connect WebApp Applications with Dev Services]."
msgstr ""

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Keycloak initialization"
msgstr "键帽初始化"

#: _guides/security-openid-connect-dev-services.adoc
msgid ""
"The `quay.io/keycloak/keycloak:25.0.0` image which contains a Keycloak distribution powered by Quarkus is used to start a container by default.\n"
"`quarkus.keycloak.devservices.image-name` can be used to change the Keycloak image name.\n"
"For example, set it to `quay.io/keycloak/keycloak:19.0.3-legacy` to use a Keycloak distribution powered by WildFly.\n"
"Be aware that a Quarkus-based Keycloak distribution is only available starting from Keycloak `20.0.0`."
msgstr ""

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Dev Services for Keycloak initializes a launched Keycloak server next."
msgstr "接下来，Keycloak 的 Dev Services 会初始化已启动的 Keycloak 服务器。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "By default, the `quarkus` and `quarkus-app` client with a `secret` password, `alice` and `bob` users (with the passwords matching the names), and `user` and `admin` roles are created, with `alice` given both `admin` and `user` roles and `bob` - the `user` role."
msgstr "默认情况下，会创建 `quarkus` 和 `quarkus-app` 客户端（密码为 `secret` ）、 `alice` 和 `bob` 用户（密码与名称一致）、 `user` 和 `admin` 角色，其中 `alice` 同时拥有 `admin` 和 `user` 角色， `bob` - `user` 角色。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Usernames, secrets, and their roles can be customized with `quarkus.keycloak.devservices.users` (the map which contains usernames and secrets) and `quarkus.keycloak.devservices.roles` (the map which contains usernames and comma-separated role values)."
msgstr "用户名、保密信息及其角色可通过 `quarkus.keycloak.devservices.users` （包含用户名和保密信息的映射）和 `quarkus.keycloak.devservices.roles` （包含用户名和以逗号分隔的角色值的映射）自定义。"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
msgid "For example:"
msgstr "例如："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This configuration creates two users:\n"
" * `duke` with a `dukePassword` password and a `reader` role\n"
" * `john` with a `johnPassword` password and `reader` and `writer` roles"
msgstr "该配置创建了两个用户：* `duke` ，密码为 `dukePassword` ，角色为 `reader` * `john` ，密码为 `johnPassword` ，角色为 `reader` 和 `writer`"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "To customize the client ID and secret, you can use the `quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` properties."
msgstr "要自定义客户端 ID 和秘密，可以使用 `quarkus.oidc.client-id` 和 `quarkus.oidc.credentials.secret` 属性。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "However, it is likely that your Keycloak configuration is more complex and requires setting more properties."
msgstr "不过，您的 Keycloak 配置可能更为复杂，需要设置更多属性。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This is why `quarkus.keycloak.devservices.realm-path` is always checked before initializing Keycloak with the default or configured realm, client, user, and roles properties.\n"
"If the realm file exists on the file system or classpath, then only this realm is used to initialize Keycloak, for example:"
msgstr "因此，在使用默认或配置的 realm、客户端、用户和角色属性初始化 Keycloak 之前， `quarkus.keycloak.devservices.realm-path` 。如果 realm 文件存在于文件系统或 classpath 中，那么在初始化 Keycloak 时将只使用该 realm："

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can use `quarkus.keycloak.devservices.realm-path` to initialize Keycloak with multiple realm files by providing a comma-separated list of files:"
msgstr "你可以使用 `quarkus.keycloak.devservices.realm-path` ，通过提供一个逗号分隔的文件列表，用多个境界文件来初始化Keycloak。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm1.json,quarkus-realm2.json"
msgstr "quarkus.keycloak.devservices.realm-path=quarkus-realm1.json,quarkus-realm2.json"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Also, the Keycloak page offers an option to `Sign In To Keycloak To Configure Realms` by using a *Keycloak Admin* option in the right top corner:"
msgstr "此外，Keycloak 页面还提供了一个选项，可通过右上角的 *Keycloak 管理* 选项访问 `Sign In To Keycloak To Configure Realms` ："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Sign in to Keycloak as `admin:admin` to further customize the realm properties, create or import a new realm, or export the realm."
msgstr "以 `admin:admin` 登录 Keycloak，进一步自定义领域属性，创建或导入新领域，或导出领域。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"You can also copy classpath and file system resources to the container.\n"
"For example, if your application configures Keycloak authorization with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed to Keycloak in a jar file, then you can configure `Dev Services for Keycloak` to copy this jar to the Keycloak container as follows:"
msgstr "您还可以将类路径和文件系统资源复制到容器中。例如，如果您的应用程序使用 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript 策略] 配置 Keycloak 授权，这些 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[策略] 以 jar 文件的形式部署到 Keycloak，那么您可以配置 `Dev Services for Keycloak` ，将此 jar 复制到 Keycloak 容器，如下所示："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`policies` alias is created for the classpath `/policies.jar` resource."
msgstr "`policies` 为 classpath 资源创建了别名。 `/policies.jar` "

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Policy jars can also be located in the file system.\n"
"<2> The policies jar is mapped to the `/opt/keycloak/providers/policies.jar` container location."
msgstr "策略 jar 也可以位于文件系统中。 <2> 策略 jar 被映射到 `/opt/keycloak/providers/policies.jar` 容器位置。"

#. type: Title ==
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Disable Dev Services for Keycloak"
msgstr "禁用Keycloak的开发服务"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Dev Services for Keycloak is not activated if either `quarkus.oidc.auth-server-url` is already initialized or the default OIDC tenant is disabled with `quarkus.oidc.tenant.enabled=false`, regardless of whether you work with Keycloak or not."
msgstr "如果 `quarkus.oidc.auth-server-url` 已经初始化，或者使用 `quarkus.oidc.tenant.enabled=false` 禁用了默认 OIDC 租户，则无论您是否使用 Keycloak，都不会激活 Keycloak 的 Dev Services。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you prefer not to have a Dev Services for Keycloak container started or do not work with Keycloak, then you can also disable this feature with `quarkus.keycloak.devservices.enabled=false` - it is only necessary if you expect to start `quarkus:dev` without `quarkus.oidc.auth-server-url`."
msgstr "如果不希望启动 Keycloak 的 Dev Services 容器，或者不与 Keycloak 合作，也可以通过 `quarkus.keycloak.devservices.enabled=false` 禁用此功能 - 只有在希望在不使用 `quarkus.oidc.auth-server-url` 的情况下启动 `quarkus:dev` 时才有必要这样做。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The main Dev UI page includes an empty *OpenID Connect* card when Dev Services for Keycloak is disabled and the `quarkus.oidc.auth-server-url` property has not been initialized:"
msgstr "如果禁用了 Keycloak 的 Dev 服务，且 `quarkus.oidc.auth-server-url` 属性尚未初始化，则主 Dev UI 页面会出现一个空的 *OpenID Connect* 卡："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"If `quarkus.oidc.auth-server-url` is already set, then a generic OpenID Connect Dev Console, which can be used with all OpenID Connect providers, can be activated.\n"
"For more information, see the <<dev-ui-all-oidc-providers,Dev UI for all OpenID Connect providers>> section."
msgstr "如果已设置 `quarkus.oidc.auth-server-url` ，则可激活通用 OpenID Connect 开发控制台，该控制台可用于所有 OpenID Connect 提供商。有关详细信息，请参阅 \" xref:dev-ui-all-oidc-providers[适用于所有 OpenID Connect 提供商的开发人员用户界面] \"部分。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Dev UI for all OpenID Connect providers"
msgstr "适用于所有 OpenID Connect 提供商的开发用户界面"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The Dev UI for all OpenID Connect providers is activated if the following conditions are met:"
msgstr "如果满足以下条件，所有 OpenID Connect 提供商的 Dev UI 都会激活："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The `quarkus.oidc.auth-server-url` points to an already started OpenID Connect provider, which can be Keycloak or other provider."
msgstr "`quarkus.oidc.auth-server-url` 指向已启动的 OpenID Connect 提供商，可以是 Keycloak 或其他提供商。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The `quarkus.oidc.application-type` is set to `service`, the default value, or `hybrid`."
msgstr "`quarkus.oidc.application-type` 设置为 `service` （默认值）或 `hybrid` 。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The `quarkus.oidc.client-id` is set."
msgstr "`quarkus.oidc.client-id` 已设定。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Setting `quarkus.oidc.credentials.secret` is most likely required for Keycloak and other providers for the authorization code flow initiated from Dev UI to complete unless the client identified with `quarkus.oidc.client-id` is configured as a public client in your OpenID Connect provider's administration console."
msgstr "除非在 OpenID Connect 提供商的管理控制台中将 `quarkus.oidc.client-id` 标识的客户端配置为公共客户端，否则 Keycloak 和其他提供商很可能需要设置 `quarkus.oidc.credentials.secret` 才能完成从 Dev UI 发起的授权代码流。"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "For example, you can use Dev UI to test Google authentication with this configuration:"
msgstr "例如，您可以使用 Dev UI 通过此配置测试 Google 身份验证："

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Run:"
msgstr "运行。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "This command outputs a message similar to the following example:"
msgstr "该命令将输出与下例类似的信息："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the provider metadata discovery has been successful, then after you open the main link:http://localhost:8080/q/dev[Dev UI page], you can see the following *OpenID Connect* card referencing a `Google` provider:"
msgstr "如果成功发现了提供商元数据，那么在打开 link:http://localhost:8080/q/dev[Dev UI] 主 link:http://localhost:8080/q/dev[页面] 后，就可以看到以下引用 `Google` 提供商的 *OpenID Connect* 卡："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Follow the link to log in to your provider, get the tokens, and test the application.\n"
"The experience is the same as described in the <<keycloak-authorization-code-grant,Authorization code grant for Keycloak>> section, where the Dev Services for Keycloak container has been started, especially if you work with Keycloak."
msgstr "按照链接登录你的提供商，获取令牌并测试应用程序。体验与 xref:keycloak-authorization-code-grant[Keycloak 授权代码授予] 部分所述相同，其中 Keycloak 的 Dev Services 容器已启动，尤其是在使用 Keycloak 的情况下。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"You likely need to configure your OpenID Connect provider to support redirecting back to the `Dev Console`.\n"
"You add `http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/<providerName>-provider` as one of the supported redirect and logout URLs, where `<providerName>` must be replaced by the name of the provider shown in the Dev UI, for example, `auth0`."
msgstr "您可能需要配置 OpenID Connect 提供商，使其支持重定向回 `Dev Console` 。您可以添加 `http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/<providerName>-provider` 作为支持的重定向和注销 URL 之一，其中 `<providerName>` 必须替换为开发人员用户界面中显示的提供程序名称，例如 `auth0` 。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"The Dev UI experience described in the <<keycloak-authorization-code-grant,Authorization code grant for Keycloak>> section might differ slightly if you work with other providers.\n"
"For example, an access token might not be in JWT format, so it would not be possible to show its internal content.\n"
"However, all providers should return ID tokens in the JWT format."
msgstr "如果您使用的是其他提供商， xref:keycloak-authorization-code-grant[Keycloak 授权代码授予] 部分中描述的 Dev UI 体验可能会略有不同。例如，访问令牌可能不是 JWT 格式，因此无法显示其内部内容。不过，所有提供商都应返回 JWT 格式的 ID 标记。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"The current access token is used by default to test the service with Swagger UI or GrapghQL UI.\n"
"If the provider (other than Keycloak) returns a binary access token, then it is used with Swagger UI or GrapghQL UI only if this provider has a token introspection endpoint; otherwise, an `IdToken`, which is always in a JWT format is passed to Swagger UI or GrapghQL UI.\n"
"In such cases, you can verify with the manual Dev UI test that `401` is always returned for the current binary access token.\n"
"Also, note that using `IdToken` as a fallback with either of these user interfaces is only possible with the authorization code flow."
msgstr "在使用 Swagger UI 或 GrapghQL UI 测试服务时，默认使用当前访问令牌。如果提供程序（Keycloak 除外）返回的是二进制访问令牌，那么只有在该提供程序有令牌自省端点的情况下，Swagger UI 或 GrapghQL UI 才会使用该令牌；否则，将向 Swagger UI 或 GrapghQL UI 传递始终为 JWT 格式的 `IdToken` 。在这种情况下，您可以使用手动 Dev UI 测试来验证 `401` 是否总是返回当前二进制访问令牌。此外，请注意只有在授权代码流中使用 `IdToken` 作为这些用户界面的后备方案。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Some providers, such as `Auth0` do not support a standard RP-initiated logout, so the provider-specific logout properties must be configured for a logout option to be visible.\n"
"For more information, see xref:security-oidc-code-flow-authentication.adoc#user-initiated-logout[User-initiated logout] section in the \"OpenID Connect authorization code flow mechanism for protecting web applications\" guide."
msgstr "某些提供商（如 `Auth0` ）不支持标准的 RP 启动注销，因此必须配置提供商特定的注销属性，才能显示注销选项。有关详细信息，请参阅 \"用于保护网络应用程序的 OpenID Connect 授权代码流机制 \"指南中的 xref:security-oidc-code-flow-authentication.adoc#user-initiated-logout[用户发起] 注销部分。"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Similarly, if you want to use a `password` or `client_credentials` grant for Dev UI to acquire the tokens, then you might need to configure some extra provider-specific properties, for example:"
msgstr "同样，如果要使用 `password` 或 `client_credentials` grant 为 Dev UI 获取令牌，则可能需要配置一些额外的特定于提供程序的属性："

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Non-application root path considerations"
msgstr "非应用程序根路径考虑因素"

#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This document refers to the `http://localhost:8080/q/dev-ui` Dev UI URL in several places where `q` is a default non-application root path.\n"
"If you customize `quarkus.http.root-path` or `quarkus.http.non-application-root-path` properties, then replace `q` accordingly.\n"
"For more information, see the https://quarkus.io/blog/path-resolution-in-quarkus/[Path resolution in Quarkus] blog post."
msgstr "本文档在多处提及 `http://localhost:8080/q/dev-ui` Dev UI URL，其中 `q` 是默认的非应用程序根路径。如果您自定义了 `quarkus.http.root-path` 或 `quarkus.http.non-application-root-path` 属性，请相应替换 `q` 。更多信息，请参阅 link:https://quarkus.io/blog/path-resolution-in-quarkus/[Quarkus 中的路径解析] 博文。"

#. type: Title ==
#: _guides/security-openid-connect-dev-services.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:dev-ui.adoc[Dev UI]"
msgstr "link:dev-ui.html[开发用户界面]"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak 文档]"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC 承载令牌验证]"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr "xref:security-oidc-code-flow-authentication.adoc[保护网络应用程序的 OIDC 代码流机制]"

#. type: Plain text
#: _guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"
