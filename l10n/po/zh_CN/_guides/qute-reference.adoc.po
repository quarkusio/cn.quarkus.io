# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/qute-reference.adoc:6
#, fuzzy, no-wrap
msgid "Qute Reference Guide"
msgstr "衢州参考指南"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:20
#, fuzzy
msgid "Qute is a templating engine designed specifically to meet the Quarkus needs.  The usage of reflection is minimized to reduce the size of native images.  The API combines both the imperative and the non-blocking reactive style of coding.  In the development mode, all files located in the `src/main/resources/templates` folder are watched for changes and modifications are immediately visible in your application.  Furthermore, Qute attempts to detect most of the template problems at build time and fail fast."
msgstr "Qute是一个专门为满足Quarkus需求而设计的模板引擎。反射的使用被最小化，以减少本地图像的大小。该API结合了命令式和非阻塞反应式的编码风格。在开发模式下，位于 `src/main/resources/templates` 文件夹中的所有文件都会被监视，并在你的应用程序中立即看到修改。此外，Qute试图在构建时检测大部分的模板问题，并快速失败。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:22
#, fuzzy
msgid "In this guide, you will find an <<hello_world_example,introductory example>>, the description of the <<core_features,core features>> and <<quarkus_integration,Quarkus integration>> details."
msgstr "在本指南中，你会发现一个介绍性的 link:#hello_world_example[例子] ， link:#core_features[核心功能] 的描述和 link:#quarkus_integration[Quarkus集成] 的细节。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:24
#, fuzzy
msgid "Qute is primarily designed as a Quarkus extension. It is possible to use it as a \"standalone\" library too. However, in such case some of the features are not available. In general, any feature mentioned under the <<quarkus_integration>> section is missing. You can find more information about the limitations and possibilities in the <<standalone>> section."
msgstr "Qute主要被设计为Quarkus的一个扩展。它也可以作为一个 \"独立的 \"库使用。然而，在这种情况下，一些功能是不可用的。一般来说，在 link:#quarkus_integration[[quarkus_integration]] 部分提到的任何功能都是缺失的。你可以在 link:#standalone[[独立]] 部分找到更多关于限制和可能性的信息。"

#. type: Title ==
#: upstream/_guides/qute-reference.adoc:26
#, fuzzy, no-wrap
msgid "The Simplest Example"
msgstr "最简单的例子"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:29
#, fuzzy
msgid "The easiest way to try Qute is to use the convenient `io.quarkus.qute.Qute` class and call one of its `fmt()` static methods that can be used to format simple messages:"
msgstr "尝试Qute的最简单的方法是使用方便的 `io.quarkus.qute.Qute` 类，并调用它的一个 `fmt()` 静态方法，可以用来格式化简单的消息。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:33
#, no-wrap
msgid "import io.quarkus.qute.Qute;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:36
#, no-wrap
msgid ""
"Qute.fmt(\"Hello {}!\", \"Lucy\"); <1>\n"
"// => Hello Lucy!\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:39
#, no-wrap
msgid ""
"Qute.fmt(\"Hello {name} {surname ?: 'Default'}!\", Map.of(\"name\", \"Andy\")); <2>\n"
"// => Hello Andy Default!\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:42
#, no-wrap
msgid ""
"Qute.fmt(\"<html>{header}</html>\").contentType(\"text/html\").data(\"header\", \"<h1>My header</h1>\").render(); <3>\n"
"// <html>&lt;h1&gt;Header&lt;/h1&gt;</html> <4>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:45
#, no-wrap
msgid ""
"Qute.fmt(\"I am {#if ok}happy{#else}sad{/if}!\", Map.of(\"ok\", true)); <5>\n"
"// => I am happy!\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:47
#, fuzzy
msgid "The empty expression `{}` is a placeholder that is replaced with an index-based array accessor, i.e. `{data[0]}`."
msgstr "空表达式 `{}` 是一个占位符，被替换为基于索引的数组访问器，即 `{data[0]}` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:48
#, fuzzy
msgid "You can provide a data map instead."
msgstr "你可以提供一个数据地图来代替。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:49
#, fuzzy
msgid "A builder-like API is available for more complex formatting requirements."
msgstr "对于更复杂的格式化要求，有一个类似于构建器的API可用。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:50
#, fuzzy
msgid "Note that for a \"text/html\" template the special chars are replaced with html entities by default."
msgstr "请注意，对于 \"text/html \"模板，特殊字符默认为html实体所取代。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:51
#, fuzzy
msgid "You can use any <<basic-building-blocks,building block>> in the template. In this case, the <<if_section>> is used to render the appropriate part of the message based on the input data."
msgstr "你可以在模板中使用任何 link:#basic-building-blocks[构建块] 。在这种情况下， link:#if_section[[if_section]] 被用来根据输入数据渲染消息的适当部分。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:53
#, fuzzy
msgid "In <<quarkus_integration,Quarkus>>, the engine used to format the messages is the same as the one injected by `@Inject Engine`. Therefore, you can make use of any Quarkus-specific integration feature such as <<template_extension_methods>>, <<injecting-beans-directly-in-templates>> or even <<type-safe-message-bundles>>."
msgstr "在 link:#quarkus_integration[Quarkus] 中，用于格式化消息的引擎与由 `@Inject Engine` 注入的引擎相同。因此，你可以利用任何Quarkus特有的集成功能，如 link:#template_extension_methods[[template_extension_methods]] ， link:#injecting-beans-directly-in-templates[[injecting-beans-directly-in-templates]] 甚至 link:#type-safe-message-bundles[[type-safe-message-bundles]] 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:56
#, fuzzy
msgid "The format object returned by the `Qute.fmt(String)` method can be evaluated lazily and used e.g. as a log message:"
msgstr "由 `Qute.fmt(String)` 方法返回的格式对象可以被懒惰地评估，并作为日志信息等使用。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:61
#, no-wrap
msgid ""
"LOG.info(Qute.fmt(\"Hello {name}!\").data(\"name\", \"Foo\"));\n"
"// => Hello Foo! and the message template is only evaluated if the log level INFO is used for the specific logger\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:64
#, fuzzy
msgid "Please read the javadoc of the `io.quarkus.qute.Qute` class for more details."
msgstr "请阅读 `io.quarkus.qute.Qute` 类的javadoc以了解更多细节。"

#. type: Title ==
#: upstream/_guides/qute-reference.adoc:66
#, fuzzy, no-wrap
msgid "Hello World Example"
msgstr "Hello World实例"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:71
#, fuzzy
msgid "In this example, we would like to demonstrate the _basic workflow_ when working with Qute templates.  Let's start with a simple \"hello world\" example.  We will always need some *template contents*:"
msgstr "在这个例子中，我们想演示一下使用Qute模板时的 _基本工作流程_ 。让我们从一个简单的 \"hello world \"例子开始。我们总是需要一些 *模板内容* 。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:72
#, fuzzy, no-wrap
msgid "hello.html"
msgstr "ǞǞǞ"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:78
#, no-wrap
msgid ""
"<html>\n"
"  <p>Hello {name}! <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:80
#, fuzzy
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr " `{name}` 是一个值表达式，在模板渲染时被评估。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:83
#, fuzzy
msgid "Then, we will need to parse the contents into a *template definition* Java object.  A template definition is an instance of `io.quarkus.qute.Template`."
msgstr "然后，我们需要将其内容解析为一个 *模板定义的* Java对象。模板定义是 `io.quarkus.qute.Template` 的一个实例。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:87
#, fuzzy
msgid "If using Qute \"standalone\" you'll need to create an instance of `io.quarkus.qute.Engine` first.  The `Engine` represents a central point for template management with dedicated configuration.  Let's use the convenient builder:"
msgstr "如果使用Qute \"独立\"，你需要先创建一个 `io.quarkus.qute.Engine` 的实例。 `Engine` 代表一个具有专门配置的模板管理中心点。让我们使用方便的构建器。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:91
#, no-wrap
msgid "Engine engine = Engine.builder().addDefaults().build();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:94
#, fuzzy
msgid "In Quarkus, there is a preconfigured `Engine` available for injection - see <<quarkus_integration>>."
msgstr "在Quarkus中，有一个预先配置好的 `Engine` ，可供注入 - 见 link:#quarkus_integration[[quarkus_integration]] 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:96
#, fuzzy
msgid "Once we have an `Engine` instance we could parse the template contents:"
msgstr "一旦我们有了一个 `Engine` 实例，我们就可以解析模板内容。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:100
#, no-wrap
msgid "Template hello = engine.parse(helloHtmlContent);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:103
#, fuzzy
msgid "In Quarkus, you can simply inject the template definition. The template is automatically parsed and cached - see <<quarkus_integration>>."
msgstr "在Quarkus中，你可以简单地注入模板定义。模板会被自动解析和缓存 - 参见 link:#quarkus_integration[[quarkus_integration]] 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:105
#, fuzzy
msgid "Finally, create a *template instance*, set the data and render the output:"
msgstr "最后，创建一个 *模板实例* ，设置数据并渲染输出。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:110
#, no-wrap
msgid ""
"// Renders <html><p>Hello Jim!</p></html>\n"
"hello.data(\"name\", \"Jim\").render(); <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:112
#, fuzzy
msgid "`Template.data(String, Object)` is a convenient method that creates a template instance and sets the data in one step."
msgstr " `Template.data(String, Object)` 是一个方便的方法，它在一个步骤中创建一个模板实例并设置数据。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:113
#, fuzzy
msgid "`TemplateInstance.render()` triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished. However, there are also asynchronous ways to trigger the rendering and consume the results. For example there is the `TemplateInstance.renderAsync()` method that returns `CompletionStage<String>` or `TemplateInstance.createMulti()` that returns Mutiny's `Multi<String>`."
msgstr " `TemplateInstance.render()` 触发同步渲染，也就是说，当前线程被阻塞，直到渲染完成。然而，也有一些异步的方法来触发渲染并消耗结果。例如，有一个 方法返回 ，或者 返回Mutiny的 。 `TemplateInstance.renderAsync()` `CompletionStage<String>` `TemplateInstance.createMulti()` `Multi<String>` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:115
#, fuzzy
msgid "So the workflow is simple:"
msgstr "所以工作流程很简单。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:117
#, fuzzy
msgid "Create the template contents (`hello.html`),"
msgstr "创建模板内容( `hello.html` )。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:118
#, fuzzy
msgid "Parse the template definition (`io.quarkus.qute.Template`),"
msgstr "解析模板定义( `io.quarkus.qute.Template` )。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:119
#, fuzzy
msgid "Create a template instance (`io.quarkus.qute.TemplateInstance`),"
msgstr "创建一个模板实例( `io.quarkus.qute.TemplateInstance` )。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:120
#, fuzzy
msgid "Render the output."
msgstr "渲染输出。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:122
#, fuzzy
msgid "The `Engine` is able to cache the template definitions so that it's not necessary to parse the contents again and again. In Quarkus, the caching is done automatically."
msgstr " `Engine` ，能够缓存模板定义，这样就不需要反复解析内容了。在Quarkus中，缓存是自动完成的。"

#. type: Title ==
#: upstream/_guides/qute-reference.adoc:124
#, fuzzy, no-wrap
msgid "Core Features"
msgstr "核心功能"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:127
#, fuzzy, no-wrap
msgid "Basic Building Blocks"
msgstr "基本构件"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:130
#, fuzzy
msgid "The dynamic parts of a template include comments, expressions, sections and unparsed character data."
msgstr "模板的动态部分包括注释、表达式、章节和未解析的字符数据。"

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:131
#, fuzzy, no-wrap
msgid "Comments"
msgstr "评论"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:135
#, fuzzy
msgid "A comment starts with the sequence `{!` and ends with the sequence `!}`, e.g. `{! This is a comment !}`.  Can be multiline and may contain expressions and sections: `{! {#if true} !}`.  The content of a comment is completely ignored when rendering the output."
msgstr "评论以序列 `{!` 开始，以序列 `!}` 结束，例如： `{! This is a comment !}` 。可以是多行，可以包含表达式和章节： `{! {#if true} !}` 。渲染输出时，注释的内容被完全忽略。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:136
#: upstream/_guides/qute-reference.adoc:253
#, fuzzy, no-wrap
msgid "Expressions"
msgstr "表达方式"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:141
#, fuzzy
msgid "An <<expressions,expression>> outputs an evaluated value.  It consists of one or more parts.  A part may represent simple properties: `{foo}`, `{item.name}`, and virtual methods: `{item.get(name)}`, `{name ?: 'John'}`.  An expression may also start with a namespace: `{inject:colors}`."
msgstr "一个 link:#expressions[表达式] 输出一个被评估的值。它由一个或多个部分组成。一个部分可以代表简单的属性。 `{foo}` , `{item.name}` , 和虚拟方法。 `{item.get(name)}` , `{name ?: 'John'}` 。一个表达式也可以以命名空间开始： `{inject:colors}` 。"

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:142
#: upstream/_guides/qute-reference.adoc:567
#: upstream/_guides/qute-reference.adoc:2192
#, fuzzy, no-wrap
msgid "Sections"
msgstr "栏目"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:147
#, fuzzy
msgid "A <<sections,section>> may contain static text, expressions and nested sections: `{#if foo.active}{foo.name}{/if}`.  The name in the closing tag is optional: `{#if active}ACTIVE!{/}`.  A section can be empty: `{#myTag image=true /}`.  A section may also declare nested section blocks: `{#if item.valid} Valid. {#else} Invalid. {/if}` and decide which block to render."
msgstr "一个 link:#sections[部分] 可以包含静态文本、表达式和嵌套部分： `{#if foo.active}{foo.name}{/if}` 。结束标签中的名称是可选的： `{#if active}ACTIVE!{/}` 。一个部分可以是空的： `{#myTag image=true /}` 。一个部分也可以声明嵌套的部分块： `{#if item.valid} Valid. {#else} Invalid. {/if}` ，并决定渲染哪个块。"

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:148
#, fuzzy, no-wrap
msgid "Unparsed Character Data"
msgstr "未解析的字符数据"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:151
#, fuzzy
msgid "It is used to mark the content that should be rendered but _not parsed_.  It starts with the sequence `{|` and ends with the sequence `|}`: `{| <script>if(true){alert('Qute is cute!')};</script> |}`, and could be multi-line."
msgstr "它用于标记应该被渲染但 _不被解析的_ 内容。它以序列 `{|` 开始，以序列 `|}` : `{| <script>if(true){alert('Qute is cute!')};</script> |}` 结束，可以是多行。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:153
#, fuzzy
msgid "Previously, unparsed character data had to start with `{[` and end with `]}`. This syntax is still supported but we encourage users to switch to the new syntax to avoid some common collisions with constructs from other languages."
msgstr "以前，未解析的字符数据必须以 `{[` 开始，以 `]}` 结束。这种语法仍然被支持，但我们鼓励用户改用新的语法，以避免与其他语言的构造发生一些常见的碰撞。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:155
#, fuzzy, no-wrap
msgid "Identifiers and Tags"
msgstr "识别器和标签"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:160
#, fuzzy
msgid "Identifiers are used in expressions and section tags.  A valid identifier is a sequence of non-whitespace characters.  However, users are encouraged to only use valid Java identifiers in expressions."
msgstr "标识符在表达式和章节标签中使用。一个有效的标识符是一串非空格的字符。然而，我们鼓励用户只在表达式中使用有效的Java标识符。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:162
#, fuzzy
msgid "You can use bracket notation if you need to specify an identifier that contains a dot, e.g. `{map['my.key']}`."
msgstr "如果你需要指定一个包含点的标识符，你可以使用括号符号，例如： `{map['my.key']}` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:166
#, fuzzy
msgid "When parsing a template document the parser identifies all _tags_.  A tag starts and ends with a curly bracket, e.g. `{foo}`.  The content of a tag must start with:"
msgstr "当解析一个模板文档时，解析器会识别所有的 _标签_ 。一个标签以大括号开始和结束，例如： `{foo}` 。一个标签的内容必须以:"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:168
#, fuzzy
msgid "a digit, or"
msgstr "一个数字，或"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:169
#, fuzzy
msgid "an alphabet character, or"
msgstr "一个字母字符，或"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:170
#, fuzzy
msgid "underscore, or"
msgstr "下划线，或"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:171
#, fuzzy
msgid "a built-in command: `#`, `!`, `@`, `/`."
msgstr "一个内置的命令。 `#` , `!` , `@` , `/` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:173
#, fuzzy
msgid "If it does not start with any of the above it is ignored by the parser."
msgstr "如果它不是以上述任何一项开始，它就会被分析器忽略。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:174
#, fuzzy, no-wrap
msgid "Tag Examples"
msgstr "标签示例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:186
#, no-wrap
msgid ""
"<html>\n"
"   <body>\n"
"   {_foo.bar}   <1>\n"
"   {! comment !}<2>\n"
"   {  foo}      <3>\n"
"   {{foo}}      <4>\n"
"   {\"foo\":true} <5>\n"
"   </body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:188
#, fuzzy
msgid "Parsed: an expression that starts with underscore."
msgstr "解析：一个以下划线开头的表达式。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:189
#, fuzzy
msgid "Parsed: a comment"
msgstr "已解析：一个评论"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:190
#, fuzzy
msgid "Ignored: starts with whitespace."
msgstr "忽略：以空白开头。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:191
#, fuzzy
msgid "Ignored: starts with `{`."
msgstr "忽略了：以 `{` 开始。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:192
#, fuzzy
msgid "Ignored: starts with `\"`."
msgstr "忽略了：以 `\"` 开始。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:194
#, fuzzy
msgid "It is also possible to use escape sequences `\\{` and `\\}` to insert delimiters in the text. In fact, an escape sequence is usually only needed for the start delimiter, ie. `\\\\{foo}` will be rendered as `{foo}` (no parsing/evaluation will happen)."
msgstr "也可以使用转义序列 `\\{` 和 `\\}` 来在文本中插入分隔符。事实上，转义序列通常只需要用于起始定界符，即 `\\{foo}` 将被呈现为 `{foo}` （不会发生解析/评估）。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:195
#, fuzzy, no-wrap
msgid "Removing Standalone Lines From the Template"
msgstr "从模板中删除独立的行"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:201
#, fuzzy
msgid "By default, the parser removes standalone lines from the template output.  A *standalone line* is a line that contains at least one section tag (e.g. `{#each}` and `{/each}`), parameter declaration (e.g. `{@org.acme.Foo foo}`) or comment but no expression and no non-whitespace character.  In other words, a line that contains no section tag or a parameter declaration is *not* a standalone line.  Likewise, a line that contains an _expression_ or a _non-whitespace character_ is *not* a standalone line."
msgstr "默认情况下，解析器会从模板输出中删除独立的行。 *独立* 行是指至少包含一个章节标签（例如： `{#each}` 和 `{/each}` ）、参数声明（例如： `{@org.acme.Foo foo}` ）或注释，但没有表达式和非空格字符的行。换句话说，一个不包含章节标签或参数声明的行 *不是* 一个独立的行。同样地，包含 _表达式_ _或非空白字符_ 的行也 *不是* 独立行。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:202
#, fuzzy, no-wrap
msgid "Template Example"
msgstr "模板实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:215
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
"     {#for item in items} <1>\n"
"       <li>{item.name} {#if item.active}{item.price}{/if}</li>  <2>\n"
"                          <3>\n"
"     {/for}               <4>\n"
"     </ul>\n"
"   <body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:217
#, fuzzy
msgid "This is a standalone line and will be removed."
msgstr "这是一个独立的项目，将被删除。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:218
#, fuzzy
msgid "Not a standalone line - contains an expression and non-whitespace characters"
msgstr "不是一个独立的行 - 包含一个表达式和非空白字符"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:219
#, fuzzy
msgid "Not a standalone line - contains no section tag/parameter declaration"
msgstr "不是一个独立的行 - 不包含章节标签/参数声明"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:220
#, fuzzy
msgid "This is a standalone line."
msgstr "这是一条独立的线路。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:221
#, fuzzy, no-wrap
msgid "Default Output"
msgstr "默认输出"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:228
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
"       <li>Foo 100</li>  \n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:232
#: upstream/_guides/qute-reference.adoc:250
#, no-wrap
msgid ""
"     </ul>\n"
"   <body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:236
#, fuzzy
msgid "In Quarkus, the default behavior can be disabled by setting the property `quarkus.qute.remove-standalone-lines` to `false`.  In this case, all whitespace characters from a standalone line will be printed to the output."
msgstr "在Quarkus中，可以通过将属性 `quarkus.qute.remove-standalone-lines` 设为 `false` 来禁用默认行为。在这种情况下，独立行中的所有空白字符将被打印到输出。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:237
#, fuzzy, no-wrap
msgid "Output with `quarkus.qute.remove-standalone-lines=false`"
msgstr "输出与 `quarkus.qute.remove-standalone-lines=false` "

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:243
#, no-wrap
msgid ""
"<html>\n"
"  <body>\n"
"     <ul>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:245
#, no-wrap
msgid "       <li>Foo 100</li>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:257
#, fuzzy
msgid "An expression is evaluated and outputs the value.  It has one or more parts, where each part represents either a property accessor (aka Field Access Expression) or a virtual method invocation (aka Method Invocation Expression)."
msgstr "一个表达式被评估并输出值。它有一个或多个部分，其中每个部分代表一个属性访问器（又称字段访问表达式）或一个虚拟方法调用（又称方法调用表达式）。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:261
#, fuzzy
msgid "When accessing the properties you can either use the dot notation or bracket notation.  In the `object.property` (dot notation) syntax, the `property` must be a <<identifiers,valid identifier>>.  In the `object[property_name]` (bracket notation) syntax, the `property_name` has to be a non-null <<literals, literal>> value."
msgstr "当访问属性时，你可以使用点符号或括号符号。在 `object.property` （点符号）的语法中， `property` 必须是一个 link:#identifiers[有效的标识符] 。在 `object[property_name]` （括号符号）的语法中， `property_name` 必须是一个非空的 link:#literals[字面值] 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:265
#, fuzzy
msgid "An expression can start with an optional namespace followed by a colon (`:`).  A valid namespace consist of alphanumeric characters and underscores.  Namespace expressions are resolved differently - see also <<expression_resolution>>."
msgstr "一个表达式可以以一个可选的命名空间开始，后面跟一个冒号( `:` )。有效的命名空间由字母数字字符和下划线组成。命名空间表达式的解析方式不同--参见 link:#expression_resolution[[expression_resolution]] 。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:266
#, fuzzy, no-wrap
msgid "Property Accessor Examples"
msgstr "属性访问器实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:273
#, no-wrap
msgid ""
"{name} <1>\n"
"{item.name} <2>\n"
"{item['name']} <3>\n"
"{global:colors} <4> \n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:275
#, fuzzy
msgid "no namespace, one part: `name`"
msgstr "没有命名空间，只有一个部分。 `name` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:276
#, fuzzy
msgid "no namespace, two parts: `item`, `name`"
msgstr "没有命名空间，有两个部分。 `item` , `name` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:277
#, fuzzy
msgid "equivalent to `{item.name}` but using the bracket notation"
msgstr "相当于 `{item.name}` ，但使用括号符号"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:278
#, fuzzy
msgid "namespace `global`, one part: `colors`"
msgstr "命名空间 `global` ，一个部分。 `colors` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:283
#, fuzzy
msgid "A part of an expression can be a _virtual method_ in which case the name can be followed by a list of comma-separated parameters in parentheses.  A parameter of a virtual method can be either a nested expression or a <<literals, literal>> value.  We call these method _\"virtual\"_ because they does not have to be backed by a real Java method.  You can learn more about virtual methods in the <<virtual_methods,following section>>."
msgstr "表达式的一部分可以是一个 _虚拟方法_ ，在这种情况下，名称后面可以有一个用括号分隔的参数列表。虚拟方法的参数可以是一个嵌套的表达式，也可以是一个 link:#literals[字面值] 。我们称这些方法为 _\"虚拟\"_ ，因为它们不需要由真正的Java方法来支持。你可以在 link:#virtual_methods[下一节] 中了解更多关于虚拟方法的信息。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:284
#: upstream/_guides/qute-reference.adoc:473
#, fuzzy, no-wrap
msgid "Virtual Method Example"
msgstr "虚拟方法实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:289
#, no-wrap
msgid ""
"{item.getLabels(1)} <1>\n"
"{name or 'John'} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:291
#, fuzzy
msgid "no namespace, two parts - `item`, `getLabels(1)`, the second part is a virtual method with name `getLabels` and params `1`"
msgstr "没有命名空间，有两部分 - `item` , `getLabels(1)` , 第二部分是一个虚拟方法，名称为 `getLabels` 和参数 `1` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:292
#, fuzzy
msgid "infix notation that can be used for virtual methods with single parameter, translated to `name.or('John')`; no namespace, two parts - `name`, `or('John')`"
msgstr "可用于单参数的虚拟方法的infix符号，翻译为 `name.or('John')` ；没有命名空间，有两个部分 - `name` 。 `or('John')` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:294
#, fuzzy, no-wrap
msgid "Supported Literals"
msgstr "支持的字词"

#. type: Table
#: upstream/_guides/qute-reference.adoc:297
#, fuzzy, no-wrap
msgid "Literal"
msgstr "字面意思"

#. type: Table
#: upstream/_guides/qute-reference.adoc:299
#: upstream/_guides/qute-reference.adoc:388
#, fuzzy, no-wrap
msgid "Examples"
msgstr "实例"

#. type: Table
#: upstream/_guides/qute-reference.adoc:300
#, fuzzy, no-wrap
msgid "boolean"
msgstr "布尔型"

#. type: Table
#: upstream/_guides/qute-reference.adoc:302
#, fuzzy, no-wrap
msgid "`true`, `false`"
msgstr " `true` , `false` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:303
#, fuzzy, no-wrap
msgid "null"
msgstr "无"

#. type: Table
#: upstream/_guides/qute-reference.adoc:305
#, fuzzy, no-wrap
msgid "`null`"
msgstr " `null` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:306
#, fuzzy, no-wrap
msgid "string"
msgstr "绳子"

#. type: Table
#: upstream/_guides/qute-reference.adoc:308
#, fuzzy, no-wrap
msgid "`'value'`, `\"string\"`"
msgstr " `'value'` , `\"string\"` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:309
#, fuzzy, no-wrap
msgid "integer"
msgstr "整数"

#. type: Table
#: upstream/_guides/qute-reference.adoc:311
#, fuzzy, no-wrap
msgid "`1`, `-5`"
msgstr " `1` , `-5` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:312
#, fuzzy, no-wrap
msgid "long"
msgstr "长"

#. type: Table
#: upstream/_guides/qute-reference.adoc:314
#, fuzzy, no-wrap
msgid "`1l`, `-5L`"
msgstr " `1l` , `-5L` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:315
#, fuzzy, no-wrap
msgid "double"
msgstr "双"

#. type: Table
#: upstream/_guides/qute-reference.adoc:317
#, fuzzy, no-wrap
msgid "`1D`, `-5d`"
msgstr " `1D` , `-5d` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:318
#, fuzzy, no-wrap
msgid "float"
msgstr "浮动"

#. type: Table
#: upstream/_guides/qute-reference.adoc:320
#, fuzzy, no-wrap
msgid "`1f`, `-5F`"
msgstr " `1f` , `-5F` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:323
#, fuzzy, no-wrap
msgid "Resolution"
msgstr "决议"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:330
#, fuzzy
msgid "The first part of the expression is always resolved against the <<current_context_object, current context object>>.  If no result is found for the first part it's resolved against the parent context object (if available).  For an expression that starts with a namespace the current context object is found using all the available ``NamespaceResolver``s.  For an expression that does not start with a namespace the current context object is *derived from the position* of the tag.  All other parts of an expression are resolved using all ``ValueResolver``s against the result of the previous resolution."
msgstr "表达式的第一部分总是针对 link:#current_context_object[当前上下文对象] 进行解析。如果没有找到第一部分的结果，就会针对父上下文对象（如果有的话）进行解析。对于以命名空间开始的表达式，将使用所有可用的 `NamespaceResolver` s 找到当前上下文对象。对于不以命名空间开始的表达式，将 *从* 标签的 *位置推导出* 当前上下文对象。表达式的所有其它部分都是使用所有的 `ValueResolver` ，与之前的解析结果相对照来解析的。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:336
#, fuzzy
msgid "For example, expression `{name}` has no namespace and single part - `name`.  The \"name\" will be resolved using all available value resolvers against the current context object.  However, the expression `{global:colors}` has the namespace `global` and single part - `colors`.  First, all available ``NamespaceResolver``s will be used to find the current context object.  And afterwards value resolvers will be used to resolve \"colors\" against the context object found."
msgstr "例如，表达式 `{name}` 没有命名空间，只有一个部分 - `name` 。名称 \"将使用所有可用的值解析器针对当前上下文对象进行解析。然而，表达式 `{global:colors}` 具有名称空间 `global` 和单一部分 - `colors` 。首先，所有可用的 `NamespaceResolver` s 将被用来查找当前的上下文对象。之后，价值解析器将被用来针对找到的上下文对象解析 \"颜色\"。"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:341
#, fuzzy
msgid "Data passed to the template instance are always accessible using the `data` namespace.  This could be useful to access data for which the key is overridden:"
msgstr "传递给模板实例的数据总是可以使用 `data` 名称空间来访问。这对于访问键被重写的数据来说可能很有用。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:356
#, no-wrap
msgid ""
"<html>\n"
"{item.name} <1>\n"
"<ul>\n"
"{#for item in item.derivedItems} <2>\n"
"  <li>\n"
"  {item.name} <3> \n"
"  is derived from\n"
"  {data:item.name} <4>\n"
"  </li>\n"
"{/for}\n"
"</ul>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:358
#, fuzzy
msgid "`item` is passed to the template instance as a data object."
msgstr " `item` 被作为一个数据对象传递给模板实例。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:359
#, fuzzy
msgid "Iterate over the list of derived items."
msgstr "遍历派生项目的列表。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:360
#, fuzzy
msgid "`item` is an alias for the iterated element."
msgstr " `item` 是迭代元素的一个别名。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:361
#, fuzzy
msgid "Use the `data` namespace to access the `item` data object."
msgstr "使用 `data` 名称空间来访问 `item` 数据对象。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:365
#, fuzzy, no-wrap
msgid "Current Context"
msgstr "当前的背景"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:371
#, fuzzy
msgid "If an expression does not specify a namespace the _current context object_ is derived from the position of the tag.  By default, the current context object represents the data passed to the template instance.  However, sections may change the current context object.  A typical example is the <<let_section,`let`>> section that can be used to define named local variables:"
msgstr "如果表达式没有指定命名空间，那么 _当前上下文对象_ 将从标签的位置派生出来。默认情况下，当前上下文对象表示传递给模板实例的数据。然而，章节可以改变当前上下文对象。一个典型的例子是 link:#let_section[`let`] 节，它可以用来定义命名的局部变量。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:378
#, no-wrap
msgid ""
"{#let myParent=order.item.parent myPrice=order.price} <1>\n"
"  <h1>{myParent.name}</h1>\n"
"  <p>Price: {myPrice}</p>\n"
"{/let}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:380
#, fuzzy
msgid "The current context object inside the section is the map of resolved parameters."
msgstr "节内的当前上下文对象是已解决参数的映射。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:382
#, fuzzy
msgid "The current context can be accessed via the implicit binding `this`."
msgstr "当前的上下文可以通过隐式绑定来访问 `this` 。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:383
#, fuzzy, no-wrap
msgid "Built-in Resolvers"
msgstr "内置调解器"

#. type: Table
#: upstream/_guides/qute-reference.adoc:386
#, fuzzy, no-wrap
msgid "Name"
msgstr "命名"

#. type: Table
#: upstream/_guides/qute-reference.adoc:386
#, fuzzy, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: upstream/_guides/qute-reference.adoc:389
#, fuzzy, no-wrap
msgid "Elvis Operator"
msgstr "Elvis Operator"

#. type: Table
#: upstream/_guides/qute-reference.adoc:390
#, fuzzy, no-wrap
msgid "Outputs the default value if the previous part cannot be resolved or resolves to `null`."
msgstr "如果前面的部分不能解决或解决到 `null` ，则输出默认值。"

#. type: Table
#: upstream/_guides/qute-reference.adoc:392
#, fuzzy, no-wrap
msgid "`{person.name ?: 'John'}`, `{person.name or 'John'}`, `{person.name.or('John')}`"
msgstr " `{person.name ?: 'John'}` , `{person.name or 'John'}` 。 `{person.name.or('John')}` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:393
#, fuzzy, no-wrap
msgid "orEmpty"
msgstr "orEmpty"

#. type: Table
#: upstream/_guides/qute-reference.adoc:394
#, fuzzy, no-wrap
msgid "Outputs an empty list if the previous part cannot be resolved or resolves to `null`."
msgstr "如果前面的部分不能解决或解决为 `null` ，则输出一个空列表。"

#. type: Table
#: upstream/_guides/qute-reference.adoc:396
#, fuzzy, no-wrap
msgid "`{pets.orEmpty.size}` outputs `0` if `pets` is not resolvable or `null`"
msgstr " `{pets.orEmpty.size}` 如果 不能解决，则输出 。 `pets` `0` `null` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:397
#, fuzzy, no-wrap
msgid "Ternary Operator"
msgstr "三元运算符"

#. type: Table
#: upstream/_guides/qute-reference.adoc:398
#, fuzzy, no-wrap
msgid "Shorthand for if-then-else statement. Unlike in <<if_section>> nested operators are not supported."
msgstr "if-then-else语句的简写。与 link:#if_section[[if_section]] 不同，不支持嵌套运算符。"

#. type: Table
#: upstream/_guides/qute-reference.adoc:400
#, fuzzy, no-wrap
msgid "`{item.isActive ? item.name : 'Inactive item'}` outputs the value of `item.name` if `item.isActive` resolves to `true`."
msgstr " `{item.isActive ? item.name : 'Inactive item'}` 如果 解析为 ，则输出 的值。 `item.isActive` `true` `item.name` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:401
#, fuzzy, no-wrap
msgid "Logical AND Operator"
msgstr "逻辑与运算符"

#. type: Table
#: upstream/_guides/qute-reference.adoc:402
#, fuzzy, no-wrap
msgid "Outputs `true` if both parts are not `falsy` as described in the <<if_section>>. The parameter is only evaluated if needed."
msgstr "如果两部分都没有 `falsy` ，则输出 `true` ，如 link:#if_section[[if_section]] 中所述。该参数仅在需要时被评估。"

#. type: Table
#: upstream/_guides/qute-reference.adoc:404
#, fuzzy, no-wrap
msgid "`{person.isActive && person.hasStyle}`"
msgstr " `{person.isActive && person.hasStyle}` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:405
#, fuzzy, no-wrap
msgid "Logical OR Operator"
msgstr "逻辑OR运算符"

#. type: Table
#: upstream/_guides/qute-reference.adoc:406
#, fuzzy, no-wrap
msgid "Outputs `true` if any of the parts is not `falsy` as described in the <<if_section>>. The parameter is only evaluated if needed."
msgstr "如果任何一个部分没有按照 link:#if_section[[if_section]] 中的描述 `falsy` ，则输出 `true` 。该参数仅在需要时被评估。"

#. type: Table
#: upstream/_guides/qute-reference.adoc:406
#, fuzzy, no-wrap
msgid "`{person.isActive \\"
msgstr "`{person.isActive\\"

#. type: Table
#: upstream/_guides/qute-reference.adoc:406
#: upstream/_guides/qute-reference.adoc:751
#, fuzzy, no-wrap
msgid "\\"
msgstr "\\"

#. type: Table
#: upstream/_guides/qute-reference.adoc:408
#, fuzzy, no-wrap
msgid "person.hasStyle}`"
msgstr "person.hasStyle}`"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:411
#, fuzzy
msgid "The condition in a ternary operator evaluates to `true` if the value is not considered `falsy` as described in the <<if_section>>."
msgstr "如果值不被认为是 `falsy` ，那么三元运算符中的条件评估为 `true` ，如 link:#if_section[[if_section]] 中所述。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:413
#, fuzzy
msgid "In fact, the operators are implemented as \"virtual methods\" that consume one parameter and can be used with infix notation. For example `{person.name or 'John'}` is translated to `{person.name.or('John')}` and `{item.isActive ? item.name : 'Inactive item'}` is translated to `{item.isActive.ifTruthy(item.name).or('Inactive item')}`"
msgstr "事实上，运算符被实现为 \"虚拟方法\"，消耗一个参数，可以使用infix符号。例如， `{person.name or 'John'}` 被翻译成 `{person.name.or('John')}` ， `{item.isActive ? item.name : 'Inactive item'}` 被翻译成 `{item.isActive.ifTruthy(item.name).or('Inactive item')}` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:414
#, fuzzy, no-wrap
msgid "Arrays"
msgstr "数组"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:419
#, fuzzy
msgid "You can iterate over elements of an array with the <<loop_section>>.  Moreover, it's also possible to get the length of the specified array and access the elements directly via an index value.  Additionaly, you can access the first/last `n` elements via the `take(n)/takeLast(n)` methods."
msgstr "你可以用 link:#loop_section[[loop_section]] 来迭代数组中的元素。此外，也可以获得指定数组的长度，并通过索引值直接访问元素。另外，你可以通过 `take(n)/takeLast(n)` 方法访问第一个/最后一个 `n` 元素。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:420
#, fuzzy, no-wrap
msgid "Array Examples"
msgstr "阵列实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:435
#, no-wrap
msgid ""
"<h1>Array of length: {myArray.length}</h1> <1>\n"
"<ul>\n"
"  <li>First: {myArray.0}</li> <2>\n"
"  <li>Second: {myArray[1]}</li> <3>\n"
"  <li>Third: {myArray.get(2)}</li> <4>\n"
"</ul>\n"
"<ol>\n"
" {#for element in myArray}\n"
" <li>{element}</li>\n"
" {/for}\n"
"</ol>\n"
"First two elements: {#each myArray.take(2)}{it}{/each} <5>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:437
#, fuzzy
msgid "Outputs the length of the array."
msgstr "输出数组的长度。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:438
#, fuzzy
msgid "Outputs the first element of the array."
msgstr "输出数组的第一个元素。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:439
#, fuzzy
msgid "Outputs the second element of the array using the bracket notation."
msgstr "使用括号符号输出数组的第二个元素。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:440
#, fuzzy
msgid "Outputs the third element of the array via the virtual method `get()`."
msgstr "通过虚拟方法 `get()` ，输出数组的第三个元素。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:441
#, fuzzy
msgid "Outputs the first two elements of the array."
msgstr "输出数组的前两个元素。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:442
#, fuzzy, no-wrap
msgid "Character Escapes"
msgstr "角色逃亡"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:445
#, fuzzy
msgid "For HTML and XML templates the `'`, `\"`, `<`, `>`, `&` characters are escaped by default if a template variant is set."
msgstr "对于HTML和XML模板，如果设置了模板变量， `'` , `\"` , `<` , `>` , `&` 字符会被默认转义。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:447
#, fuzzy
msgid "In Quarkus, a variant is set automatically for templates located in the `src/main/resources/templates`. By default, the `java.net.URLConnection#getFileNameMap()` is used to determine the content type of a template file. The additional map of suffixes to content types can be set via `quarkus.qute.content-types`."
msgstr "在Quarkus中，位于 `src/main/resources/templates` 的模板会自动设置一个变体。默认情况下， `java.net.URLConnection#getFileNameMap()` ，以确定模板文件的内容类型。后缀与内容类型的附加映射可以通过 `quarkus.qute.content-types` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:449
#, fuzzy
msgid "If you need to render the unescaped value:"
msgstr "如果你需要渲染未转义的值。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:451
#, fuzzy
msgid "Either use the `raw` or `safe` properties implemented as extension methods of the `java.lang.Object`,"
msgstr "要么使用作为 `java.lang.Object` 的扩展方法实现的 `raw` 或 `safe` 属性。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:452
#, fuzzy
msgid "Or wrap the `String` value in a `io.quarkus.qute.RawString`."
msgstr "或者将 `String` 值包裹在一个 `io.quarkus.qute.RawString` 。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:459
#, no-wrap
msgid ""
"<html>\n"
"<h1>{title}</h1> <1>\n"
"{paragraph.raw} <2>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:461
#, fuzzy
msgid "`title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`"
msgstr " `title` 解析为 ，将被呈现为 `Expressions & Escapes` `Expressions &amp; Escapes` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:462
#, fuzzy
msgid "`paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`"
msgstr " `paragraph` 解析为 ，将被呈现为 `<p>My text!</p>` `<p>My text!</p>` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:464
#, fuzzy
msgid "By default, a template with one of the following content types is escaped: `text/html`, `text/xml`, `application/xml` and `application/xhtml+xml`. However, it's possible to extend this list via the `quarkus.qute.escape-content-types` configuration property."
msgstr "默认情况下，具有以下内容类型之一的模板会被转义。 `text/html` , `text/xml` , `application/xml` 和 `application/xhtml+xml` 。然而，可以通过 `quarkus.qute.escape-content-types` 配置属性来扩展这个列表。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:466
#, fuzzy, no-wrap
msgid "Virtual Methods"
msgstr "虚拟方法"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:472
#, fuzzy
msgid "A virtual method is a *part of an expression* that looks like a regular Java method invocation.  It's called \"virtual\" because it does not have to match the actual method of a Java class.  In fact, like normal properties a virtual method is also handled by a value resolver.  The only difference is that for virtual methods a value resolver consumes parameters that are also expressions."
msgstr "虚方法是 *一个表达式的一部分* ，它看起来像一个普通的Java方法调用。它被称为 \"虚拟\"，因为它不需要与Java类的实际方法相匹配。事实上，像普通的属性一样，虚拟方法也是由一个值解析器来处理的。唯一的区别是，对于虚拟方法，价值解析器消耗的参数也是表达式。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:479
#, no-wrap
msgid ""
"<html>\n"
"<h1>{item.buildName(item.name,5)}</h1> <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:481
#, fuzzy, no-wrap
msgid "`buildName(item.name,5)` represents a virtual method with name `buildName` and two parameters: `item.name` and `5` . The virtual method could be evaluated by a value resolver generated for the following Java class:   \n"
msgstr " `buildName(item.name,5)` 表示一个虚拟方法，名称为 ，有两个参数： 和 。这个虚拟方法可以由一个为以下Java类生成的值解析器来评估。 `buildName` `item.name` `5` "

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:489
#, no-wrap
msgid ""
"class Item {\n"
"   String buildName(String name, int age) {\n"
"      return name + \":\" + age;\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:492
#, fuzzy
msgid "Virtual methods are usually evaluated by value resolvers generated for <<template_extension_methods,@TemplateExtension methods>>, <<template_data,@TemplateData>> or classes used in <<typesafe_expressions,parameter declarations>>. However, a custom value resolver that is not backed by any Java class/method can be registered as well."
msgstr "虚拟方法通常由为 link:#template_extension_methods[@TemplateExtension方法] 、 link:#template_data[@TemplateData] 或在 link:#typesafe_expressions[参数] 声明中使用的类生成的值解析器来评估。然而，也可以注册一个没有任何Java类/方法支持的自定义值解析器。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:494
#, fuzzy
msgid "A virtual method with single parameter can be called using the infix notation:"
msgstr "一个有单参数的虚拟方法可以用infix符号来调用。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:495
#, fuzzy, no-wrap
msgid "Infix Notation Example"
msgstr "Infix记号的例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:501
#, no-wrap
msgid ""
"<html>\n"
"<p>{item.price or 5}</p>  <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:503
#, fuzzy
msgid "`item.price or 5` is translated to `item.price.or(5)`."
msgstr " `item.price or 5` 被翻译成 。 `item.price.or(5)` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:505
#, fuzzy
msgid "Virtual method parameters can be \"nested\" virtual method invocations."
msgstr "虚拟方法参数可以是 \"嵌套 \"的虚拟方法调用。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:506
#, fuzzy, no-wrap
msgid "Nested Virtual Method Example"
msgstr "嵌套虚拟方法实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:512
#, no-wrap
msgid ""
"<html>\n"
"<p>{item.subtractPrice(item.calculateDiscount(10))}</p>  <1>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:514
#, fuzzy
msgid "`item.calculateDiscount(10)` is evaluated first and then passed as an argument to `item.subtractPrice()`."
msgstr " `item.calculateDiscount(10)` 首先被评估，然后作为参数传递给 。 `item.subtractPrice()` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:515
#, fuzzy, no-wrap
msgid "Evaluation of `CompletionStage` and `Uni` Objects"
msgstr "对 `CompletionStage` 和 `Uni` 物体的评价"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:521
#, fuzzy
msgid "Objects that implement `java.util.concurrent.CompletionStage` and `io.smallrye.mutiny.Uni` are evaluated in a special way.  If a part of an expression resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.  For example, if there is an expression `{foo.size}` and `foo` resolves to `CompletionStage<List<String>>` then `size` is resolved against the completed result, i.e. `List<String>`.  If a part of an expression resolves to a `Uni`, a `CompletionStage` is first created from `Uni` using `Uni#subscribeAsCompletionStage()` and then evaluated as described above."
msgstr "实现 `java.util.concurrent.CompletionStage` 和 `io.smallrye.mutiny.Uni` 的对象以一种特殊的方式被评估。如果一个表达式的一部分解析到 `CompletionStage` ，一旦这个阶段完成，解析就会继续进行，表达式的下一部分（如果有的话）会针对已完成的阶段的结果进行评估。例如，如果有一个表达式 `{foo.size}` ，并且 `foo` 解析为 `CompletionStage<List<String>>` ，那么 `size` 将针对已完成的结果，即 `List<String>` ，进行解析。如果一个表达式的一部分解析为 `Uni` ，那么首先用 `Uni#subscribeAsCompletionStage()` 从 `Uni` 创建一个 `CompletionStage` ，然后如上所述进行评估。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:526
#, fuzzy
msgid "It can happen that a `CompletionStage` never completes or a `Uni` emits no item/failure.  In this case, the rendering methods (such as `TemplateInstance#render()` and `TemplateInstance#createUni()`) fail after a specific timeout.  The timeout can be specified as a template instance `timeout` attribute.  If no `timeout` attribute is set the global rendering timeout is used."
msgstr "可能会发生这样的情况：一个 `CompletionStage` 永远不会完成，或者一个 `Uni` 没有发出项目/失败。在这种情况下，渲染方法（如 `TemplateInstance#render()` 和 `TemplateInstance#createUni()` ）会在一个特定的超时后失败。该超时可以作为模板实例 `timeout` 属性来指定。如果没有设置 `timeout` 属性，就使用全局渲染超时。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:528
#, fuzzy
msgid "In Quarkus, the default timeout can be set via the `io.quarkus.qute.timeout` configuration property. If using Qute standalone then the `EngineBuilder#timeout()` method can be used."
msgstr "在Quarkus中，默认超时可以通过 `io.quarkus.qute.timeout` 配置属性设置。如果使用Qute单机版，那么可以使用 `EngineBuilder#timeout()` 方法。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:530
#, fuzzy
msgid "In previous versions, only the `TemplateInstance#render()` method honored the timeout attribute. You can use the `io.quarkus.qute.useAsyncTimeout=false` config property to preserve the old behavior and take care of the timeout yourself, for example `templateInstance.createUtni().ifNoItem().after(Duration.ofMillis(500)).fail()`."
msgstr "在以前的版本中，只有 `TemplateInstance#render()` 方法会尊重超时属性。你可以使用 `io.quarkus.qute.useAsyncTimeout=false` 配置属性来保留旧的行为，并自行处理超时的问题，例如 `templateInstance.createUtni().ifNoItem().after(Duration.ofMillis(500)).fail()` 。"

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:531
#, fuzzy, no-wrap
msgid "How to Identify a Problematic Part of the Template"
msgstr "如何识别模板中的问题部分"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:535
#, fuzzy
msgid "It's not easy to find the problematic part of a template when a timeout occurs.  You can set the `TRACE` level for the logger `io.quarkus.qute.nodeResolve` and try analyze the log output afterwards."
msgstr "当超时发生时，要找到模板中的问题部分并不容易。你可以为记录器 `io.quarkus.qute.nodeResolve` ，设置 `TRACE` 级别，然后试着分析一下之后的日志输出。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:536
#, fuzzy, no-wrap
msgid "`application.properties` Example"
msgstr " `application.properties` 例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:541
#, no-wrap
msgid ""
"quarkus.log.category.\"io.quarkus.qute.nodeResolve\".min-level=TRACE\n"
"quarkus.log.category.\"io.quarkus.qute.nodeResolve\".level=TRACE\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:544
#, fuzzy
msgid "You should see the following pair of log messages for every expression and section used in a template:"
msgstr "对于模板中使用的每个表达式和部分，你应该看到以下一对日志信息。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:547
#, no-wrap
msgid ""
"TRACE [io.qua.qut.nodeResolve] Resolve {name} started: Template hello.html at line 8\n"
"TRACE [io.qua.qut.nodeResolve] Resolve {name} completed: Template hello.html at line 8\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:550
#, fuzzy
msgid "If a `completed` log message is missing then you have a good candidate to explore."
msgstr "如果缺少一个 `completed` 的日志信息，那么你就有一个很好的候选者来探索。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:551
#, fuzzy, no-wrap
msgid "Missing Properties"
msgstr "缺少的属性"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:556
#, fuzzy
msgid "It can happen that an expression may not be evaluated at runtime.  For example, if there is an expression `{person.age}` and there is no property `age` declared on the `Person` class.  The behavior differs based on whether the <<strict_rendering>> is enabled or not."
msgstr "可能发生的情况是，一个表达式在运行时可能不会被评估。例如，如果有一个表达式 `{person.age}` ，而在 `Person` 类上没有声明任何属性 `age` 。根据是否启用了 link:#strict_rendering[[strict_rendering]] ，其行为是不同的。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:559
#, fuzzy
msgid "If enabled then a missing property will always result in a `TemplateException` and the rendering is aborted.  You can use _default values_ and _safe expressions_ in order to suppress the error."
msgstr "如果启用，那么缺失的属性将总是导致 `TemplateException` ，并且渲染被中止。你可以使用 _默认值_ 和 _安全表达式_ 来抑制该错误。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:561
#, fuzzy
msgid "If disabled then the special constant `NOT_FOUND` is written to the output by default."
msgstr "如果禁用，则默认将特殊常数 `NOT_FOUND` 写到输出。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:563
#, fuzzy
msgid "In Quarkus, it's possible to change the default strategy via the `quarkus.qute.property-not-found-strategy` as described in the <<configuration-reference>>."
msgstr "在Quarkus中，可以通过 `quarkus.qute.property-not-found-strategy` ，如 link:#configuration-reference[[配置-参考]] 中所述，改变默认策略。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:565
#, fuzzy
msgid "Similar errors are detected at build time if <<typesafe_expressions>> and <<typesafe_templates>> are used."
msgstr "如果使用 link:#typesafe_expressions[[typesafe_expressions]] 和 link:#typesafe_templates[[typesafe_templates]] ，在构建时也会检测到类似的错误。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:570
#, fuzzy
msgid "A section:"
msgstr "A节。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:572
#, fuzzy
msgid "has a start tag"
msgstr "有一个起始标签"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:573
#, fuzzy
msgid "starts with `#`, followed by the name of the section such as `{#if}` and `{#each}`,"
msgstr "以 `#` 开始，后面是章节的名称，如 `{#if}` 和 `{#each}` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:574
#, fuzzy
msgid "may be empty"
msgstr "可能是空的"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:575
#, fuzzy
msgid "tag ends with `/`, ie. `{#emptySection /}`"
msgstr "标签以 `/` 结尾，即。 `{#emptySection /}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:576
#, fuzzy
msgid "may contain other expression, sections, etc."
msgstr "可能包含其他表达方式、章节等。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:577
#, fuzzy
msgid "the end tag starts with `/` and contains the name of the section (optional): `{#if foo}Foo!{/if}` or `{#if foo}Foo!{/}`,"
msgstr "结尾标签以 `/` 开始，并包含该节的名称（可选）： `{#if foo}Foo!{/if}` 或 `{#if foo}Foo!{/}` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:584
#, fuzzy
msgid "The start tag can also define parameters.  The parameters have optional names.  A section may contain several content *blocks*.  The \"main\" block is always present.  Additional/nested blocks also start with `#` and can have parameters too - `{#else if item.isActive}`.  A section helper that defines the logic of a section can \"execute\" any of the blocks and evaluate the parameters."
msgstr "start标签也可以定义参数。这些参数的名称是可选的。一个部分可以包含几个内容 *块* 。\"主 \"块总是存在的。附加/嵌套块也以 `#` 开始，也可以有参数 - `{#else if item.isActive}` 。定义一个部分的逻辑的部分助手可以 \"执行 \"任何一个块并评估参数。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:594
#, no-wrap
msgid ""
"{#if item.name is 'sword'}\n"
"  It's a sword!\n"
"{#else if item.name is 'shield'}\n"
"  It's a shield!\n"
"{#else}\n"
"  Item is neither a sword nor a shield.\n"
"{/if}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:597
#, fuzzy, no-wrap
msgid "Loop Section"
msgstr "循环部分"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:601
#, fuzzy
msgid "The loop section makes it possible to iterate over an instance of `Iterable`, `Iterator`, array, `Map` (element is a `Map.Entry`), `Stream`, `Integer` and `int` (primitive value).  A `null` parameter value results in a no-op."
msgstr "循环部分使得在 `Iterable` 、 `Iterator` 、数组、 `Map` （元素是 `Map.Entry` ）、 `Stream` 、 `Integer` 和 `int` （原始值）的实例上进行迭代成为可能。一个 `null` 的参数值会导致一个no-op。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:604
#, fuzzy
msgid "This section has two flavors.  The first one is using the name `each` and `it` is an implicit alias for the iteration element."
msgstr "本节有两种味道。第一种是使用名称 `each` ， `it` ，是迭代元素的隐含别名。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:610
#, no-wrap
msgid ""
"{#each items}\n"
"  {it.name} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:612
#, fuzzy
msgid "`name` is resolved against the current iteration element."
msgstr " `name` 是针对当前迭代元素进行解析的。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:614
#, fuzzy
msgid "The other form is using the name `for` and specifies the alias used to reference the iteration element:"
msgstr "另一种形式是使用名称 `for` ，并指定用于引用迭代元素的别名。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:620
#, no-wrap
msgid ""
"{#for item in items} <1>\n"
"  {item.name} \n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:622
#, fuzzy
msgid "`item` is the alias used for the iteration element."
msgstr " `item` 是用于迭代元素的别名。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:624
#, fuzzy
msgid "It's also possible to access the iteration metadata inside the loop via the following keys:"
msgstr "也可以通过以下键来访问循环内部的迭代元数据。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:626
#, fuzzy
msgid "`count` - 1-based index"
msgstr " `count` - 基于1的指数"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:627
#, fuzzy
msgid "`index` - zero-based index"
msgstr " `index` - 零基指数"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:628
#, fuzzy
msgid "`hasNext` - `true` if the iteration has more elements"
msgstr " `hasNext` - ，如果该迭代有更多的元素 `true` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:629
#, fuzzy
msgid "`isLast` - `true` if `hasNext == false`"
msgstr " `isLast` - ，如果 `true` `hasNext == false` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:630
#, fuzzy
msgid "`isFirst` - `true` if `count == 1`"
msgstr " `isFirst` - ，如果 `true` `count == 1` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:631
#, fuzzy
msgid "`odd` - `true` if the zero-based index is odd"
msgstr " `odd` - ，如果基于零的索引是奇数 `true` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:632
#, fuzzy
msgid "`even` - `true` if the zero-based index is even"
msgstr " `even` - ，如果基于零的指数是偶数 `true` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:633
#, fuzzy
msgid "`indexParity` - outputs `odd` or `even` based on the zero-based index value"
msgstr " `indexParity` - 根据基于零的指数值，输出 或 。 `odd` `even` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:638
#, fuzzy
msgid "However, the keys cannot be used directly.  Instead, a prefix is used to avoid possible collisions with variables from the outer scope.  By default, the alias of an iterated element suffixed with an underscore is used as a prefix.  For example, the `hasNext` key must be prefixed with `it_` inside an `{#each}` section: `{it_hasNext}`."
msgstr "然而，这些键不能直接使用。相反，一个前缀被用来避免与外部作用域的变量发生可能的碰撞。默认情况下，迭代元素的别名以下划线为后缀，被用作前缀。例如， `hasNext` 键必须在 `{#each}` 部分内用 `it_` 作为前缀： `{it_hasNext}` 。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:639
#, fuzzy, no-wrap
msgid "`each` Iteration Metadata Example"
msgstr " `each` 迭代元数据实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:646
#, no-wrap
msgid ""
"{#each items}\n"
"  {it_count}. {it.name} <1>\n"
"  {#if it_hasNext}<br>{/if} <2>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:648
#, fuzzy
msgid "`it_count` represents one-based index."
msgstr " `it_count` 代表一基指数。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:649
#: upstream/_guides/qute-reference.adoc:662
#, fuzzy
msgid "`<br>` is only rendered if the iteration has more elements."
msgstr " `<br>` 只有在迭代有更多元素时才会呈现。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:651
#, fuzzy
msgid "And must be used in a form of `{item_hasNext}` inside a `{#for}` section with the `item` element alias."
msgstr "而且必须以 `{item_hasNext}` 的形式在 `{#for}` 部分内使用，并有 `item` 的元素别名。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:652
#, fuzzy, no-wrap
msgid "`for` Iteration Metadata Example"
msgstr " `for` 迭代元数据实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:659
#, no-wrap
msgid ""
"{#for item in items}\n"
"  {item_count}. {item.name} <1>\n"
"  {#if item_hasNext}<br>{/if} <2>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:661
#, fuzzy
msgid "`item_count` represents one-based index."
msgstr " `item_count` 代表一基指数。"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:666
#, fuzzy
msgid "The iteration metadata prefix is configurable either via `EngineBuilder.iterationMetadataPrefix()` for standalone Qute or via the `quarkus.qute.iteration-metadata-prefix` configuration property in a Quarkus application. Three special constants can be used:"
msgstr "迭代元数据的前缀可以通过独立的Qute的 `EngineBuilder.iterationMetadataPrefix()` ，或者通过Quarkus应用程序的 `quarkus.qute.iteration-metadata-prefix` 配置属性进行配置。有三个特殊的常数可以使用。"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:668
#, fuzzy
msgid "`<alias_>` - the alias of an iterated element suffixed with an underscore is used (default)"
msgstr " `<alias_>` - 使用以下划线为后缀的迭代元素的别名（默认）。"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:669
#, fuzzy
msgid "`<alias?>` - the alias of an iterated element suffixed with a question mark is used"
msgstr " `<alias?>` - 使用以问号为后缀的迭代元素的别名。"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:670
#, fuzzy
msgid "`<none>` - no prefix is used"
msgstr " `<none>` - 不使用前缀"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:673
#, fuzzy
msgid "The `for` statement also works with integers, starting from 1. In the example below, considering that `total = 3`:"
msgstr " `for` 语句也适用于整数，从1开始。在下面的例子中，考虑到 `total = 3` :"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:679
#, no-wrap
msgid ""
"{#for i in total}\n"
"  {i}:\n"
"{/for}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:682
#, fuzzy
msgid "And the output will be:"
msgstr "而输出将是。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:686
#, no-wrap
msgid "1:2:3:\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:689
#, fuzzy
msgid "A loop section may also define the `{#else}` block that is executed when there are no items to iterate:"
msgstr "循环部分也可以定义 `{#else}` ，当没有项目需要迭代时，就执行这个块。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:697
#, no-wrap
msgid ""
"{#for item in items}\n"
"  {item.name}\n"
"{#else}\n"
"  No items.\n"
"{/for}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:700
#, fuzzy, no-wrap
msgid "If Section"
msgstr "如果第"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:705
#, fuzzy
msgid "The `if` section represents a basic control flow section.  The simplest possible version accepts a single parameter and renders the content if the condition is evaluated to `true`.  A condition without an operator evaluates to `true` if the value is not considered `falsy`, i.e. if the value is not `null`, `false`, an empty collection, an empty map, an empty array, an empty string/char sequence or a number equal to zero."
msgstr " `if` 部分代表一个基本的控制流部分。最简单的版本是接受一个参数，如果条件被评估为 `true` ，就会渲染内容。一个没有运算符的条件如果不被认为是 `falsy` ，即如果值不是 `null` 、 `false` 、空集合、空地图、空数组、空字符串/字符序列或等于零的数字，则评估为 `true` 。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:711
#, no-wrap
msgid ""
"{#if item.active}\n"
"  This item is active.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:714
#, fuzzy
msgid "You can also use the following operators in a condition:"
msgstr "你也可以在一个条件中使用以下运算符。"

#. type: Table
#: upstream/_guides/qute-reference.adoc:716
#: upstream/_guides/qute-reference.adoc:858
#, fuzzy, no-wrap
msgid "Operator"
msgstr "运营商"

#. type: Table
#: upstream/_guides/qute-reference.adoc:716
#: upstream/_guides/qute-reference.adoc:858
#, fuzzy, no-wrap
msgid "Aliases"
msgstr "别名"

#. type: Table
#: upstream/_guides/qute-reference.adoc:718
#, fuzzy, no-wrap
msgid "Precedence (higher wins)"
msgstr "优先权（较高者获胜）"

#. type: Table
#: upstream/_guides/qute-reference.adoc:719
#, fuzzy, no-wrap
msgid "logical complement"
msgstr "逻辑补充"

#. type: Table
#: upstream/_guides/qute-reference.adoc:720
#, fuzzy, no-wrap
msgid "`!`"
msgstr " `!` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:722
#, fuzzy, no-wrap
msgid "4"
msgstr "4"

#. type: Table
#: upstream/_guides/qute-reference.adoc:723
#: upstream/_guides/qute-reference.adoc:865
#, fuzzy, no-wrap
msgid "greater than"
msgstr "大于"

#. type: Table
#: upstream/_guides/qute-reference.adoc:724
#: upstream/_guides/qute-reference.adoc:866
#, fuzzy, no-wrap
msgid "`gt`, `>`"
msgstr " `gt` , `>` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:726
#: upstream/_guides/qute-reference.adoc:730
#: upstream/_guides/qute-reference.adoc:734
#: upstream/_guides/qute-reference.adoc:738
#, fuzzy, no-wrap
msgid "3"
msgstr "3"

#. type: Table
#: upstream/_guides/qute-reference.adoc:727
#: upstream/_guides/qute-reference.adoc:869
#, fuzzy, no-wrap
msgid "greater than or equal to"
msgstr "大于或等于"

#. type: Table
#: upstream/_guides/qute-reference.adoc:728
#: upstream/_guides/qute-reference.adoc:870
#, fuzzy, no-wrap
msgid "`ge`, `>=`"
msgstr " `ge` , `>=` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:731
#: upstream/_guides/qute-reference.adoc:873
#, fuzzy, no-wrap
msgid "less than"
msgstr "不到"

#. type: Table
#: upstream/_guides/qute-reference.adoc:732
#: upstream/_guides/qute-reference.adoc:874
#, fuzzy, no-wrap
msgid "`lt`, `<`"
msgstr " `lt` , `<` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:735
#: upstream/_guides/qute-reference.adoc:877
#, fuzzy, no-wrap
msgid "less than or equal to"
msgstr "小于或等于"

#. type: Table
#: upstream/_guides/qute-reference.adoc:736
#: upstream/_guides/qute-reference.adoc:878
#, fuzzy, no-wrap
msgid "`le`, `\\<=`"
msgstr " `le` , `<=` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:739
#, fuzzy, no-wrap
msgid "equals"
msgstr "等同于"

#. type: Table
#: upstream/_guides/qute-reference.adoc:740
#, fuzzy, no-wrap
msgid "`eq`, `==`, `is`"
msgstr " `eq` , `==` 。 `is` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:742
#: upstream/_guides/qute-reference.adoc:746
#, fuzzy, no-wrap
msgid "2"
msgstr "2"

#. type: Table
#: upstream/_guides/qute-reference.adoc:743
#, fuzzy, no-wrap
msgid "not equals"
msgstr "不等于"

#. type: Table
#: upstream/_guides/qute-reference.adoc:744
#, fuzzy, no-wrap
msgid "`ne`, `!=`"
msgstr " `ne` , `!=` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:747
#, fuzzy, no-wrap
msgid "logical AND (short-circuiting)"
msgstr "逻辑和(短路)"

#. type: Table
#: upstream/_guides/qute-reference.adoc:748
#, fuzzy, no-wrap
msgid "`&&`, `and`"
msgstr " `&&` , `and` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:750
#: upstream/_guides/qute-reference.adoc:754
#, fuzzy, no-wrap
msgid "1"
msgstr "1"

#. type: Table
#: upstream/_guides/qute-reference.adoc:751
#, fuzzy, no-wrap
msgid "logical OR (short-circuiting)"
msgstr "逻辑OR(短路)"

#. type: Table
#: upstream/_guides/qute-reference.adoc:751
#, fuzzy, no-wrap
msgid "`\\"
msgstr "`\\"

#. type: Table
#: upstream/_guides/qute-reference.adoc:752
#, fuzzy, no-wrap
msgid "`, `or`"
msgstr " `, `or` "

#. type: Block title
#: upstream/_guides/qute-reference.adoc:756
#, fuzzy, no-wrap
msgid "A simple operator example"
msgstr "一个简单的操作者例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:762
#, no-wrap
msgid ""
"{#if item.age > 10}\n"
"  This item is very old.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:765
#, fuzzy
msgid "Multiple conditions are also supported."
msgstr "也支持多种条件。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:766
#, fuzzy, no-wrap
msgid "Multiple conditions example"
msgstr "多个条件的例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:772
#, no-wrap
msgid ""
"{#if item.age > 10 && item.price > 500}\n"
"  This item is very old and expensive.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:775
#, fuzzy
msgid "Precedence rules can be overridden by parentheses."
msgstr "顺序规则可以被括号所覆盖。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:776
#, fuzzy, no-wrap
msgid "Parentheses example"
msgstr "括号内的例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:782
#, no-wrap
msgid ""
"{#if (item.age > 10 || item.price > 500) && user.loggedIn}\n"
"  User must be logged in and item age must be > 10 or price must be > 500.\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:786
#, fuzzy
msgid "You can also add any number of `else` blocks:"
msgstr "你也可以添加任何数量的 `else` 块。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:798
#, no-wrap
msgid ""
"{#if item.age > 10}\n"
"  This item is very old.\n"
"{#else if item.age > 5}\n"
"  This item is quite old.\n"
"{#else if item.age > 2}\n"
"  This item is old.\n"
"{#else}\n"
"  This item is not old at all!\n"
"{/if}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:801
#, fuzzy, no-wrap
msgid "When Section"
msgstr "当科"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:807
#, fuzzy
msgid "This section is similar to Java's `switch` or Kotlin's `when` constructs.  It matches a _tested value_ against all blocks sequentially until a condition is satisfied.  The first matching block is executed.  All other blocks are ignored (this behavior differs to the Java `switch` where a `break` statement is necessary)."
msgstr "这一部分类似于Java的 `switch` 或Kotlin的 `when` 结构。它将一个 _测试值_ 与所有块依次匹配，直到满足一个条件。第一个匹配的块被执行。所有其他的块都被忽略（这种行为与Java的 `switch` 不同，在那里需要一个 `break` 语句）。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:808
#, fuzzy, no-wrap
msgid "Example using the `when`/`is` name aliases"
msgstr "使用 `when` / `is` 名称别名的例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:819
#, no-wrap
msgid ""
"{#when items.size}\n"
"  {#is 1} <1>\n"
"    There is exactly one item!\n"
"  {#is > 10} <2>\n"
"    There are more than 10 items!\n"
"  {#else} <3>\n"
"    There are 2 -10 items!\n"
"{/when}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:821
#, fuzzy
msgid "If there is exactly one parameter it's tested for equality."
msgstr "如果正好有一个参数，它将被测试为平等。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:822
#, fuzzy
msgid "It's possible to use <<when_operators,an operator>> to specify the matching logic. Unlike in the <<if_section>> nested operators are not supported."
msgstr "可以使用 link:#when_operators[运算符] 来指定匹配逻辑。与 link:#if_section[[if_section]] 中不同的是，不支持嵌套运算符。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:823
#, fuzzy
msgid "`else` is block is executed if no other block matches the value."
msgstr " `else` 如果没有其他区块与该值匹配，则执行该区块。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:824
#, fuzzy, no-wrap
msgid "Example using the `switch`/`case` name aliases"
msgstr "使用 `switch` / `case` 名称别名的例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:833
#, no-wrap
msgid ""
"{#switch person.name}\n"
"  {#case 'John'} <1>\n"
"    Hey John!\n"
"  {#case 'Mary'}\n"
"    Hey Mary!\n"
"{/switch}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:835
#, fuzzy
msgid "`case` is an alias for `is`."
msgstr " `case` 是 的一个别名。 `is` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:838
#, fuzzy
msgid "A tested value that resolves to an enum is handled specifically.  The parameters of an `is`/`case` block are not evaluated as expressions but compared with the result of `toString()` invocation upon the tested value."
msgstr "一个被测试的值如果解析为一个枚举，将被特别处理。 `is` / `case` 块的参数不作为表达式被评估，而是与被测试值的 `toString()` 调用结果进行比较。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:847
#, no-wrap
msgid ""
"{#when machine.status}\n"
"  {#is ON} \n"
"    It's running. <1>\n"
"  {#is in OFF BROKEN}\n"
"    It's broken or OFF. <2>\n"
"{/when}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:849
#, fuzzy
msgid "This block is executed if `machine.status.toString().equals(\"ON\")`."
msgstr "如果 `machine.status.toString().equals(\"ON\")` ，则执行该块。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:850
#, fuzzy
msgid "This block is executed if `machine.status.toString().equals(\"OFF\")` or `machine.status.toString().equals(\"BROKEN\")`."
msgstr "如果 `machine.status.toString().equals(\"OFF\")` 或 `machine.status.toString().equals(\"BROKEN\")` ，则执行该块。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:852
#, fuzzy
msgid "An enum constant is validated if the tested value has a type information available and resolves to an enum type."
msgstr "如果被测试的值有可用的类型信息，并且可以解析为一个枚举类型，那么枚举常量就会被验证。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:854
#, fuzzy
msgid "The following operators are supported in `is`/`case` block conditions:"
msgstr "在 `is` / `case` 块条件下，支持以下运算符。"

#. type: Table
#: upstream/_guides/qute-reference.adoc:860
#, fuzzy, no-wrap
msgid "Example"
msgstr "例子"

#. type: Table
#: upstream/_guides/qute-reference.adoc:861
#, fuzzy, no-wrap
msgid "not equal"
msgstr "不等"

#. type: Table
#: upstream/_guides/qute-reference.adoc:862
#, fuzzy, no-wrap
msgid "`!=`, `not`, `ne`"
msgstr " `!=` , `not` 。 `ne` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:864
#, fuzzy, no-wrap
msgid "`{#is not 10}`,`{#case != 10}`"
msgstr " `{#is not 10}` , `{#case != 10}` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:868
#: upstream/_guides/qute-reference.adoc:880
#, fuzzy, no-wrap
msgid "`{#case le 10}`"
msgstr " `{#case le 10}` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:872
#, fuzzy, no-wrap
msgid "`{#is >= 10}`"
msgstr " `{#is >= 10}` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:876
#, fuzzy, no-wrap
msgid "`{#is < 10}`"
msgstr " `{#is < 10}` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:881
#, fuzzy, no-wrap
msgid "in"
msgstr "在"

#. type: Table
#: upstream/_guides/qute-reference.adoc:882
#, fuzzy, no-wrap
msgid "`in`"
msgstr " `in` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:884
#, fuzzy, no-wrap
msgid "`{#is in 'foo' 'bar' 'baz'}`"
msgstr " `{#is in 'foo' 'bar' 'baz'}` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:885
#, fuzzy, no-wrap
msgid "not in"
msgstr "不在"

#. type: Table
#: upstream/_guides/qute-reference.adoc:886
#, fuzzy, no-wrap
msgid "`ni`,`!in`"
msgstr " `ni` , `!in` "

#. type: Table
#: upstream/_guides/qute-reference.adoc:888
#, fuzzy, no-wrap
msgid "`{#is !in 1 2 3}`"
msgstr " `{#is !in 1 2 3}` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:891
#, fuzzy, no-wrap
msgid "Let Section"
msgstr "让科"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:894
#, fuzzy
msgid "This section allows you to define named local variables:"
msgstr "本节允许你定义命名的局部变量。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:901
#, no-wrap
msgid ""
"{#let myParent=order.item.parent isActive=false age=10} <1>\n"
"  <h1>{myParent.name}</h1>\n"
"  Is active: {isActive}\n"
"  Age: {age}\n"
"{/let} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:903
#, fuzzy
msgid "The local variable is initialized with an expression that can also represent a <<literals,literal>>."
msgstr "本地变量用一个表达式初始化，这个表达式也可以代表一个 link:#literals[字面] 意思。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:904
#, fuzzy
msgid "Keep in mind that the variable is not available outside the `let` section that defines it."
msgstr "请记住，该变量在定义它的 `let` 部分之外是不可用的。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:906
#, fuzzy
msgid "The section tag is also registered under the `set` alias:"
msgstr "该部分标签也被注册在 `set` 别名下。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:913
#, no-wrap
msgid ""
"{#set myParent=item.parent price=item.price}\n"
"  <h1>{myParent.name}</h1>\n"
"  <p>Price: {price}\n"
"{/set}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:916
#, fuzzy, no-wrap
msgid "With Section"
msgstr "有科室"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:920
#, fuzzy
msgid "This section can be used to set the current context object.  This could be useful to simplify the template structure:"
msgstr "本节可用于设置当前的上下文对象。这对于简化模板结构可能很有用。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:927
#, no-wrap
msgid ""
"{#with item.parent}\n"
"  <h1>{name}</h1>  <1>\n"
"  <p>{description}</p> <2>\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:929
#, fuzzy
msgid "The `name` will be resolved against the `item.parent`."
msgstr " `name` ，将解决对 `item.parent` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:930
#, fuzzy
msgid "The `description` will be also resolved against the `item.parent`."
msgstr " `description` ，也将针对 `item.parent` 。"

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:936
#, fuzzy
msgid "Note that the `with` section should not be used in <<typesafe_templates>> or templates that define <<typesafe_expressions>>.  The reason is that it prevents Qute from validating the nested expressions.  If possible it should be replaced with the `{#let}` section which declares an explicit binding:"
msgstr "请注意， `with` 部分不应该在 link:#typesafe_templates[[typesafe_templates]] 或定义 link:#typesafe_expressions[[typesafe_expressions]] 的模板中使用。原因是它阻止了Qute对嵌套表达式的验证。如果可能的话，应该用声明显式绑定的 `{#let}` 部分来代替它。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:943
#, no-wrap
msgid ""
"{#let it=item.parent}\n"
"  <h1>{it.name}</h1>\n"
"  <p>{it.description}</p>\n"
"{/let}\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/qute-reference.adoc:947
#, fuzzy
msgid "This section might also come in handy when we'd like to avoid multiple expensive invocations:"
msgstr "当我们想避免多次昂贵的调用时，这一部分也可能会派上用场。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:957
#, no-wrap
msgid ""
"{#with item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)}\n"
"  {#if this is \"fun\"} <1>\n"
"    <h1>Yay!</h1>\n"
"  {#else}\n"
"    <h1>{this} is not fun at all!</h1>\n"
"  {/if}\n"
"{/with}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:959
#, fuzzy
msgid "`this` is the result of `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)`. The method is only invoked once even though the result may be used in multiple expressions."
msgstr " `this` 是 的结果。该方法只被调用一次，尽管结果可能被用于多个表达式。 `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:961
#, fuzzy, no-wrap
msgid "Include Section"
msgstr "包含的部分"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:964
#, fuzzy
msgid "This section can be used to include another template and possibly override some parts of the template (template inheritance)."
msgstr "这一部分可以用来包括另一个模板，并可能覆盖模板的某些部分（模板继承）。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:965
#, fuzzy, no-wrap
msgid "Simple Example"
msgstr "简单的例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:977
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Simple Include</title>\n"
"</head>\n"
"<body>\n"
"  {#include foo limit=10 /} <1><2>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:979
#, fuzzy
msgid "Include a template with id `foo`. The included template can reference data from the current context."
msgstr "包括一个ID为 `foo` 的模板。包含的模板可以引用当前上下文中的数据。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:980
#, fuzzy
msgid "It's also possible to define optional parameters that can be used in the included template."
msgstr "也可以定义可选的参数，可以在包含的模板中使用。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:982
#, fuzzy
msgid "Template inheritance makes it possible to reuse template layouts."
msgstr "模板的继承性使得重复使用模板布局成为可能。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:983
#, fuzzy, no-wrap
msgid "Template \"base\""
msgstr "模板 \"基地\""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:995
#, no-wrap
msgid ""
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>{#insert title}Default Title{/}</title> <1>\n"
"</head>\n"
"<body>\n"
"  {#insert}No body!{/} <2>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:997
#, fuzzy
msgid "`insert` sections are used to specify parts that could be overridden by a template that includes the given template."
msgstr " `insert` 部分用于指定可以被包含给定模板的模板所覆盖的部分。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:998
#, fuzzy
msgid "An `insert` section may define the default content that is rendered if not overridden. If no name parameter is supplied then the main block of the relevant `{#include}` section is used."
msgstr "一个 `insert` 部分可以定义默认的内容，如果没有被覆盖，就会被渲染。如果没有提供名称参数，那么将使用相关 `{#include}` 部分的主块。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:999
#, fuzzy, no-wrap
msgid "Template \"detail\""
msgstr "模板 \"细节\""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1008
#, no-wrap
msgid ""
"{#include base} <1>\n"
"  {#title}My Title{/title} <2>\n"
"  <div> <3>\n"
"    My body.\n"
"  </div>\n"
"{/include}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1010
#, fuzzy
msgid "`include` section is used to specify the extended template."
msgstr " `include` 部分用于指定扩展模板。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1011
#, fuzzy
msgid "Nested blocks are used to specify the parts that should be overridden."
msgstr "嵌套块被用来指定应该被覆盖的部分。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1012
#, fuzzy
msgid "The content of the main block is used for an `{#insert}` section with no name parameter specified."
msgstr "主块的内容被用于没有指定名称参数的 `{#insert}` 部分。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1014
#, fuzzy
msgid "Section blocks can also define an optional end tag - `{/title}`."
msgstr "节块还可以定义一个可选的结束标签 - `{/title}` 。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1015
#, fuzzy, no-wrap
msgid "Eval Section"
msgstr "评估部分"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1019
#, fuzzy
msgid "This section can be used to parse and evaluate a template dynamically.  The behavior is very similar to the <<include_helper>> but:"
msgstr "这一部分可以用来动态解析和评估一个模板。其行为与 link:#include_helper[[include_helper]] 非常相似，但是。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1021
#, fuzzy
msgid "The template content is passed directly, i.e. not obtained via an `io.quarkus.qute.TemplateLocator`,"
msgstr "模板内容是直接传递的，也就是说，不是通过 `io.quarkus.qute.TemplateLocator` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1022
#, fuzzy
msgid "It's not possible to override parts of the evaluated template."
msgstr "不可能覆盖已评估模板的部分内容。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1026
#, no-wrap
msgid "{#eval myData.template name='Mia' /} <1><2><3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1028
#, fuzzy
msgid "The result of `myData.template` will be used as the template. The template is executed with the <<current_context_object>>, i.e. can reference data from the template it's included into."
msgstr " `myData.template` 的结果将被作为模板使用。模板是以 link:#current_context_object[[current_context_object]] 执行的，也就是说，可以引用它所包含的模板中的数据。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1029
#, fuzzy
msgid "It's also possible to define optional parameters that can be used in the evaluated template."
msgstr "也可以定义可选的参数，可以在评估的模板中使用。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1030
#, fuzzy
msgid "The content of the section is always ignored."
msgstr "该部分的内容总是被忽略。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1032
#, fuzzy
msgid "The evaluated template is parsed and evaluated every time the section is executed. In other words, it's not possible to cache the parsed value to conserve resources and optimize the performance."
msgstr "评估的模板在每次执行该部分时都会被解析和评估。换句话说，不可能为了节约资源和优化性能而缓存解析的值。"

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:1034
#: upstream/_guides/qute-reference.adoc:2207
#, fuzzy, no-wrap
msgid "User-defined Tags"
msgstr "用户定义的标签"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1038
#, fuzzy
msgid "User-defined tags can be used to include a tag template and optionally pass some parameters.  Let's suppose we have a tag template called `itemDetail.html`:"
msgstr "用户定义的标签可以用来包含一个标签模板，并可以选择传递一些参数。假设我们有一个名为 `itemDetail.html` 的标签模板。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1045
#, no-wrap
msgid ""
"{#if showImage} <1>\n"
"  {it.image} <2>\n"
"  {nested-content} <3>\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1047
#, fuzzy
msgid "`showImage` is a named parameter."
msgstr " `showImage` 是一个命名的参数。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1048
#, fuzzy
msgid "`it` is a special key that is replaced with the first unnamed parameter of the tag."
msgstr " `it` 是一个特殊的键，被替换为标签的第一个未命名的参数。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1049
#, fuzzy
msgid "(optional) `nested-content` is a special key that will be replaced by the content of the tag."
msgstr "(可选) `nested-content` 是一个特殊的键，将被标签的内容所取代。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1052
#, fuzzy
msgid "In Quarkus, all files from the `src/main/resources/templates/tags` are registered and monitored automatically.  For Qute standalone, you need to put the parsed template under the name `itemDetail.html` and register a relevant `UserTagSectionHelper` to the engine:"
msgstr "在Quarkus中，所有来自 `src/main/resources/templates/tags` 的文件都被自动注册和监控。对于Qute单机版，你需要把解析后的模板放在 `itemDetail.html` ，并向引擎注册一个相关的 `UserTagSectionHelper` 。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1059
#, no-wrap
msgid ""
"Engine engine = Engine.builder()\n"
"                   .addSectionHelper(new UserTagSectionHelper.Factory(\"itemDetail\",\"itemDetail.html\"))\n"
"                   .build();\n"
"engine.putTemplate(\"itemDetail.html\", engine.parse(\"...\"));\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1062
#, fuzzy
msgid "Then, we can call the tag like this:"
msgstr "然后，我们可以像这样调用这个标签。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1074
#, no-wrap
msgid ""
"<ul>\n"
"{#for item in items}\n"
"  <li>\n"
"  {#itemDetail item showImage=true} <1>\n"
"    = <b>{item.name}</b> <2>\n"
"  {/itemDetail}\n"
"  </li>\n"
"{/for}\n"
"</ul>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1076
#, fuzzy
msgid "`item` is resolved to an iteration element and can be referenced using the `it` key in the tag template."
msgstr " `item` 被解析为一个迭代元素，可以使用标签模板中的 关键来引用。 `it` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1077
#, fuzzy
msgid "Tag content injected using the `nested-content` key in the tag template."
msgstr "使用标签模板中的 `nested-content` 键注入的标签内容。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1082
#, fuzzy
msgid "By default, the tag template can reference data from the parent context.  For example, the tag above could use the following expression `{items.size}`.  However, sometimes it might be useful to disable this behavior and execute the tag as an _isolated_ template, i.e. without access to the context of the template that calls the tag.  In this case, just add `_isolated` or `_isolated=true` argument to the call site, e.g. `{#itemDetail item showImage=true _isolated /}`."
msgstr "默认情况下，标记模板可以引用来自父环境的数据。例如，上面的标记可以使用下面的表达式 `{items.size}` 。然而，有时禁用这种行为并将标记作为一个 _孤立的_ 模板来执行可能是有用的，也就是说，不能访问调用标记的模板的上下文。在这种情况下，只需向调用站点添加 `_isolated` 或 `_isolated=true` 参数，例如 `{#itemDetail item showImage=true _isolated /}` 。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1083
#, fuzzy, no-wrap
msgid "Rendering Output"
msgstr "渲染输出"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1089
#, fuzzy
msgid "`TemplateInstance` provides several ways to trigger the rendering and consume the result.  The most straightforward approach is represented by `TemplateInstance.render()`.  This method triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished, and returns the output.  By contrast, `TemplateInstance.renderAsync()` returns a `CompletionStage<String>` which is completed when the rendering is finished."
msgstr " `TemplateInstance` 提供了几种触发渲染和消费结果的方法。最直接的方法是由 。这个方法触发了一个同步渲染，即当前线程被阻塞，直到渲染完成，并返回输出。相比之下， 返回一个 ，该方法在渲染结束后完成。 `TemplateInstance.render()` `TemplateInstance.renderAsync()` `CompletionStage<String>` "

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1090
#, fuzzy, no-wrap
msgid "`TemplateInstance.renderAsync()` Example"
msgstr " `TemplateInstance.renderAsync()` 例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1100
#, no-wrap
msgid ""
"template.data(foo).renderAsync().whenComplete((result, failure) -> { <1>\n"
"   if (failure == null) {\n"
"      // consume the output...\n"
"   } else {\n"
"      // process failure...\n"
"   }\n"
"};\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1102
#, fuzzy
msgid "Register a callback that is executed once the rendering is finished."
msgstr "注册一个回调，一旦渲染完成就会执行。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1107
#, fuzzy
msgid "There are also two methods that return https://smallrye.io/smallrye-mutiny/[Mutiny] types.  `TemplateInstance.createUni()` returns a new `Uni<String>` object.  If you call `createUni()` the template is not rendered right away.  Instead, every time `Uni.subscribe()` is called a new rendering of the template is triggered."
msgstr "还有两个方法可以返回 link:https://smallrye.io/smallrye-mutiny/[Mutiny] 类型。 `TemplateInstance.createUni()` ，返回一个新的 `Uni<String>` 对象。如果你调用 `createUni()` ，模板不会立即被渲染。相反，每次调用 `Uni.subscribe()` ，都会触发对模板的新的渲染。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1108
#, fuzzy, no-wrap
msgid "`TemplateInstance.createUni()` Example"
msgstr " `TemplateInstance.createUni()` 例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1112
#, no-wrap
msgid "template.data(foo).createUni().subscribe().with(System.out::println);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1118
#, fuzzy
msgid "`TemplateInstance.createMulti()` returns a new `Multi<String>` object.  Each item represents a part/chunk of the rendered template.  Again, `createMulti()` does not trigger rendering.  Instead, every time a computation is triggered by a subscriber the template is rendered again."
msgstr " `TemplateInstance.createMulti()` 返回一个新的 对象。每一项都代表渲染后的模板的一个部分/块。同样， 并不触发渲染。相反，每次计算被用户触发时，模板会被再次渲染。 `Multi<String>` `createMulti()` "

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1119
#, fuzzy, no-wrap
msgid "`TemplateInstance.createMulti()` Example"
msgstr " `TemplateInstance.createMulti()` 例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1123
#, no-wrap
msgid "template.data(foo).createMulti().subscribe().with(buffer:append,buffer::flush);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1126
#, fuzzy
msgid "The template rendering is divided in two phases. During the first phase, which is asynchronous, all expressions in the template are resolved and a _result tree_ is built. In the second phase, which is synchronous, the result tree is _materialized_, i.e. one by one the result nodes emit chunks that are consumed/buffered by the specific consumer."
msgstr "模板的渲染分为两个阶段。在第一阶段，即异步阶段，模板中的所有表达式被解析，并建立一个 _结果树_ 。在第二阶段，也就是同步阶段，结果树被 _具体化_ ，也就是说，结果节点一个接一个地发射出被特定消费者消费/缓冲的块。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1127
#, fuzzy, no-wrap
msgid "Engine Configuration"
msgstr "发动机配置"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1130
#, fuzzy, no-wrap
msgid "Value Resolvers"
msgstr "价值解析器"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1134
#, fuzzy
msgid "Value resolvers are used when evaluating expressions.  A custom `io.quarkus.qute.ValueResolver` can be registered programmatically via `EngineBuilder.addValueResolver()`."
msgstr "值解析器是在评估表达式时使用的。可以通过 `EngineBuilder.addValueResolver()` ，以编程方式注册一个自定义的 `io.quarkus.qute.ValueResolver` 。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1135
#, fuzzy, no-wrap
msgid "`ValueResolver` Builder Example"
msgstr " `ValueResolver` 建筑商实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1142
#, no-wrap
msgid ""
"engineBuilder.addValueResolver(ValueResolver.builder()\n"
"    .appliesTo(ctx -> ctx.getBase() instanceof Long && ctx.getName().equals(\"tenTimes\"))\n"
"    .resolveSync(ctx -> (Long) ctx.getBase() * 10)\n"
"    .build());\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1145
#, fuzzy, no-wrap
msgid "Template Locator"
msgstr "模板定位器"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1150
#, fuzzy
msgid "Manual registration is sometimes handy but it's also possible to register a template locator using `EngineBuilder.addLocator()`.  This locator is used whenever the `Engine.getTemplate()` method is called and the engine has no template for a given id stored in the cache.  The locator is responsible to use the correct character encoding when reading the contents of a template."
msgstr "手动注册有时很方便，但也可以使用 `EngineBuilder.addLocator()` 注册一个模板定位器。这个定位器在调用 `Engine.getTemplate()` 方法时被使用，并且引擎在缓存中没有存储给定id的模板。定位器负责在读取模板的内容时使用正确的字符编码。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1152
#, fuzzy
msgid "In Quarkus, all templates from the `src/main/resources/templates` are located automatically and the encoding set via `quarkus.qute.default-charset` (UTF-8 by default) is used."
msgstr "在Quarkus中，所有来自 `src/main/resources/templates` 的模板都被自动定位，并使用通过 `quarkus.qute.default-charset` （默认为UTF-8）设置的编码。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1153
#, fuzzy, no-wrap
msgid "Content Filters"
msgstr "内容过滤器"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1156
#, fuzzy
msgid "Content filters can be used to modify the template contents before parsing."
msgstr "内容过滤器可以用来在解析前修改模板内容。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1157
#, fuzzy, no-wrap
msgid "Content Filter Example"
msgstr "内容过滤器实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1166
#, no-wrap
msgid ""
"engineBuilder.addParserHook(new ParserHook() {\n"
"    @Override\n"
"    public void beforeParsing(ParserHelper parserHelper) {\n"
"        parserHelper.addContentFilter(contents -> contents.replace(\"${\", \"$\\\\{\")); <1>\n"
"    }\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1168
#, fuzzy
msgid "Escape all occurences of `${`."
msgstr "逃避所有出现的 `${` 。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1170
#, fuzzy, no-wrap
msgid "Strict Rendering"
msgstr "严格的渲染"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1175
#, fuzzy
msgid "The strict rendering enables the developers to catch insidious errors caused by typos and invalid expressions.  If enabled then any expression that cannot be resolved, i.e. is evaluated to an instance of `io.quarkus.qute.Results.NotFound`, will always result in a `TemplateException` and the rendering is aborted.  A `NotFound` value is considered an error because it basically means that no value resolver was able to resolve the expression correctly."
msgstr "严格渲染使开发人员能够捕捉到由错别字和无效表达式引起的隐蔽错误。如果启用，那么任何不能被解析的表达式，即被评估为 `io.quarkus.qute.Results.NotFound` 的实例，将总是导致 `TemplateException` ，并且渲染被中止了。 `NotFound` 值被认为是一个错误，因为它基本上意味着没有一个值解析器能够正确解析表达式。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1177
#, fuzzy
msgid "`null` is a valid value though. It is considered `falsy` as described in the <<if_section>> and does not produce any output."
msgstr " `null` 是一个有效的值，但是。如 link:#if_section[[if_section]] 中所述，它被认为是 ，不产生任何输出。 `falsy` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1180
#, fuzzy
msgid "Strict rendering is enabled by default.  However, you can disable this functionality via `io.quarkus.qute.EngineBuilder.strictRendering(boolean)`."
msgstr "严格渲染在默认情况下是启用的。然而，你可以通过 `io.quarkus.qute.EngineBuilder.strictRendering(boolean)` 来停用这个功能。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1182
#, fuzzy
msgid "In Quarkus, a dedicated config property can be used instead: `quarkus.qute.strict-rendering`."
msgstr "在Quarkus中，可以使用一个专门的配置属性来代替： `quarkus.qute.strict-rendering` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1189
#, fuzzy
msgid "If you really need to use an expression which can potentially lead to a \"not found\" error, you can use _default values_ and _safe expressions_ in order to suppress the error.  A default value is used if the previous part of an expression cannot be resolved or resolves to `null`.  You can use the elvis operator to output the default value: `{foo.bar ?: 'baz'}`, which is effectively the same as the following virtual method: `{foo.bar.or('baz')}`.  A safe expression ends with the `??` suffix and results in `null` if the expression cannot be resolved.  It can be very useful e.g. in `{#if}` sections: `{#if valueNotFound??}Only rendered if valueNotFound is truthy!{/if}`.  In fact, `??` is just a shorthand notation for `.or(null)`, i.e. `{#if valueNotFound??}` becomes `{#if valueNotFound.or(null)}`."
msgstr "如果你真的需要使用一个有可能导致 \"未找到 \"错误的表达式，你可以使用 _默认值_ 和 _安全表达式_ ，以便抑制错误。如果表达式的前一部分不能被解析或解析为 `null` ，则使用默认值。你可以使用elvis操作符来输出默认值。 `{foo.bar ?: 'baz'}` ，这实际上与下面的虚拟方法相同： `{foo.bar.or('baz')}` 。一个安全的表达式以 `??` 后缀结尾，如果表达式不能被解析，则结果为 `null` 。它可以非常有用，例如在 `{#if}` 部分： `{#if valueNotFound??}Only rendered if valueNotFound is truthy!{/if}` 。事实上， `??` 只是 `.or(null)` 的一个速记符号，即 `{#if valueNotFound??}` 变成 `{#if valueNotFound.or(null)}` 。"

#. type: Title ==
#: upstream/_guides/qute-reference.adoc:1191
#, fuzzy, no-wrap
msgid "Quarkus Integration"
msgstr "Quarkus集成"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1194
#, fuzzy
msgid "If you want to use Qute in your Quarkus application add the following dependency to your project:"
msgstr "如果你想在你的Quarkus应用程序中使用Qute，请在你的项目中添加以下依赖关系。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1201
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1205
#, fuzzy
msgid "In Quarkus, a preconfigured engine instance is provided and available for injection - a bean with scope `@ApplicationScoped`, bean type `io.quarkus.qute.Engine` and qualifier `@Default` is registered automatically.  Moreover, all templates located in the `src/main/resources/templates` directory are validated and can be easily injected."
msgstr "在Quarkus中，一个预配置的引擎实例被提供并可用于注入--一个具有范围 `@ApplicationScoped` 、bean类型 `io.quarkus.qute.Engine` 和限定符 `@Default` 的bean被自动注册。此外，位于 `src/main/resources/templates` 目录中的所有模板都经过验证，可以很容易地被注入。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1211
#, no-wrap
msgid ""
"import io.quarkus.qute.Engine;\n"
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.Location;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1213
#: upstream/_guides/qute-reference.adoc:1236
#, no-wrap
msgid "class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1216
#, no-wrap
msgid ""
"    @Inject \n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1219
#, no-wrap
msgid ""
"    @Location(\"detail/items2_v1.html\") <2>\n"
"    Template items2;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1223
#, no-wrap
msgid ""
"    @Inject\n"
"    Engine engine; <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1225
#, fuzzy
msgid "If there is no `Location` qualifier provided, the field name is used to locate the template. In this particular case, the container will attempt to locate a template with path `src/main/resources/templates/items.html`."
msgstr "如果没有提供 `Location` 修饰语，则使用字段名来定位模板。在这种特殊情况下，容器将试图定位一个路径为 `src/main/resources/templates/items.html` 的模板。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1226
#, fuzzy
msgid "The `Location` qualifier instructs the container to inject a template from a path relative from `src/main/resources/templates`. In this case, the full path is `src/main/resources/templates/detail/items2_v1.html`."
msgstr " `Location` 修饰语指示容器从与 `src/main/resources/templates` 相对的路径中注入一个模板。在这种情况下，全路径是 `src/main/resources/templates/detail/items2_v1.html` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1227
#, fuzzy
msgid "Inject the configured `Engine` instance."
msgstr "注入配置的 `Engine` 实例。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1229
#, fuzzy
msgid "It's also possible to contribute to the engine configuration via a CDI observer method."
msgstr "也可以通过CDI观察者的方法对发动机的配置作出贡献。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1230
#, fuzzy, no-wrap
msgid "`EngineBuilder` Observer Example"
msgstr " `EngineBuilder` 观察者实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1234
#, no-wrap
msgid "import io.quarkus.qute.EngineBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1244
#, no-wrap
msgid ""
"    void configureEngine(@Observes EngineBuilder builder) {\n"
"       builder.addValueResolver(ValueResolver.builder()\n"
"                .appliesTo(ctx -> ctx.getBase() instanceof Long && ctx.getName().equals(\"tenTimes\"))\n"
"                .resolveSync(ctx -> (Long) ec.getBase() * 10)\n"
"                .build());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1246
#, fuzzy, no-wrap
msgid "Template Variants"
msgstr "模板变体"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1250
#, fuzzy
msgid "Sometimes it's useful to render a specific variant of the template based on the content negotiation.  This can be done by setting a special attribute via `TemplateInstance.setAttribute()`:"
msgstr "有时，根据内容协商来渲染模板的特定变体是很有用的。这可以通过设置一个特殊的属性来实现，通过 `TemplateInstance.setAttribute()` 。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1254
#, no-wrap
msgid "class MyService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1257
#, no-wrap
msgid ""
"    @Inject\n"
"    Template items; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1260
#, no-wrap
msgid ""
"    @Inject\n"
"    ItemManager manager;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1265
#, no-wrap
msgid ""
"    String renderItems() {\n"
"       return items.data(\"items\",manager.findItems()).setAttribute(TemplateInstance.SELECTED_VARIANT, new Variant(Locale.getDefault(),\"text/html\",\"UTF-8\")).render();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1268
#, fuzzy
msgid "When using `quarkus-resteasy-qute` the content negotiation is performed automatically. See <<resteasy_integration>>."
msgstr "当使用 `quarkus-resteasy-qute` ，内容协商会自动进行。参见 link:#resteasy_integration[[resteasy_integration]] 。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1270
#, fuzzy, no-wrap
msgid "Injecting Beans Directly In Templates"
msgstr "在模板中直接注入豆类"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1273
#, fuzzy
msgid "A CDI bean annotated with `@Named` can be referenced in any template through `cdi` and/or `inject` namespaces:"
msgstr "一个用 `@Named` 注释的CDI Bean可以通过 `cdi` 和/或 `inject` 命名空间在任何模板中被引用。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1278
#, no-wrap
msgid ""
"{cdi:personService.findPerson(10).name} <1>\n"
"{inject:foo.price} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1280
#, fuzzy
msgid "First, a bean with name `personService` is found and then used as the base object."
msgstr "首先，找到一个名字为 `personService` 的bean，然后将其作为基础对象。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1281
#, fuzzy
msgid "First, a bean with name `foo` is found and then used as the base object."
msgstr "首先，找到一个名字为 `foo` 的bean，然后将其作为基础对象。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1283
#, fuzzy
msgid "`@Named @Dependent` beans are shared across all expressions in a template for a single rendering operation, and destroyed after the rendering finished."
msgstr " `@Named @Dependent` beans在一个模板中的所有表达式中共享，用于一次渲染操作，并在渲染完成后销毁。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1287
#, fuzzy
msgid "All expressions with `cdi` and `inject` namespaces are validated during build.  For the expression `cdi:personService.findPerson(10).name` the implementation class of the injected bean must either declare the `findPerson` method or a matching <<template_extension_methods,template extension method>> must exist.  For the expression `inject:foo.price` the implementation class of the injected bean must either have the `price` property (e.g. a `getPrice()` method) or a matching <<template_extension_methods,template extension method>> must exist."
msgstr "所有带有 `cdi` 和 `inject` 命名空间的表达式都会在构建期间被验证。对于表达式 `cdi:personService.findPerson(10).name` ，被注入的Bean的实现类必须声明 `findPerson` 方法或者必须存在一个匹配的 link:#template_extension_methods[模板扩展方法] 。对于表达式 `inject:foo.price` ，被注入的Bean的实现类必须有 `price` 属性（例如： `getPrice()` 方法）或者必须存在一个匹配的 link:#template_extension_methods[模板扩展方法] 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1289
#, fuzzy
msgid "A `ValueResolver` is also generated for all beans annotated with `@Named` so that it's possible to access its properties without reflection."
msgstr "对于所有用 `@Named` 注释的Bean，也会生成一个 `ValueResolver` ，这样就有可能在没有反射的情况下访问其属性。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1291
#, fuzzy
msgid "If your application serves xref:http-reference.adoc[HTTP requests] you can also inject the current `io.vertx.core.http.HttpServerRequest` via the `inject` namespace, e.g. `{inject:vertxRequest.getParam('foo')}`."
msgstr "如果你的应用程序提供 link:http-reference.html[HTTP请求] ，你也可以通过 `inject` 命名空间注入当前的 `io.vertx.core.http.HttpServerRequest` ，例如 `{inject:vertxRequest.getParam('foo')}` 。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1293
#, fuzzy, no-wrap
msgid "Type-safe Expressions"
msgstr "类型安全的表达式"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1298
#, fuzzy
msgid "Template expressions can be optionally type-safe.  Which means that an expression is validated against the existing Java types and template extension methods.  If an invalid/incorrect expression is found then the build fails."
msgstr "模板表达式可以是可选的类型安全的。这意味着一个表达式会根据现有的Java类型和模板扩展方法进行验证。如果发现一个无效的/不正确的表达式，则构建失败。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1300
#, fuzzy
msgid "For example, if there is an expression `item.name` where `item` maps to `org.acme.Item` then `Item` must have a property `name` or a matching template extension method must exist."
msgstr "例如，如果有一个表达式 `item.name` ，其中 `item` 映射到 `org.acme.Item` ，那么 `Item` 必须有一个属性 `name` ，或者必须存在一个匹配的模板扩展方法。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1303
#, fuzzy
msgid "An optional _parameter declaration_ is used to bind a Java type to expressions whose first part matches the parameter name.  Parameter declarations are specified directly in a template."
msgstr "可选的 _参数声明_ 用于将一个Java类型与表达式绑定，表达式的第一部分与参数名称相匹配。参数声明可以直接在模板中指定。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1308
#, fuzzy
msgid "A Java type should be always identified with a _fully qualified name_ unless it's a JDK type from the `java.lang` package - in this case, the package name is optional.  Parameterized types are supported, however wildcards are always ignored - only the upper/lower bound is taken into account.  For example, the parameter declaration `{@java.util.List<? extends org.acme.Foo> list}` is recognized as `{@java.util.List<org.acme.Foo> list}`.  Type variables are not handled in a special way and should never be used."
msgstr "一个Java类型应该总是用一个 _完全合格的名称_ 来标识，除非它是来自 `java.lang` 包的JDK类型--在这种情况下，包的名称是可选的。支持参数化的类型，但是通配符总是被忽略--只考虑上/下界。例如，参数声明 `{@java.util.List<? extends org.acme.Foo> list}` 被识别为 `{@java.util.List<org.acme.Foo> list}` 。类型变量没有得到特殊的处理，也不应该被使用。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1309
#, fuzzy, no-wrap
msgid "Parameter Declaration Example"
msgstr "参数声明示例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1324
#, no-wrap
msgid ""
"{@org.acme.Foo foo} <1>\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{title}</h1> <2>\n"
"  Hello {foo.message.toLowerCase}! <3> <4>\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1326
#, fuzzy
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr "参数声明--将 `foo` 到 `org.acme.Foo` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1327
#, fuzzy
msgid "Not validated - not matching a param declaration."
msgstr "未验证 - 不匹配参数声明。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1328
#, fuzzy
msgid "This expression is validated. `org.acme.Foo` must have a property `message` or a matching template extension method must exist."
msgstr "这个表达式被验证。 `org.acme.Foo` ，必须有一个属性 `message` ，或者必须存在一个匹配的模板扩展方法。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1329
#, fuzzy
msgid "Likewise, the Java type of the object resolved from `foo.message` must have a property `toLowerCase` or a matching template extension method must exist."
msgstr "同样，从 `foo.message` 中解析的对象的Java类型必须有一个属性 `toLowerCase` ，或者必须存在一个匹配的模板扩展方法。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1331
#, fuzzy
msgid "A value resolver is automatically generated for all types used in parameter declarations so that it's possible to access its properties without reflection."
msgstr "对于参数声明中使用的所有类型，会自动生成一个值解析器，这样就有可能在没有反射的情况下访问其属性。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1333
#, fuzzy
msgid "Method parameters of <<typesafe_templates,type-safe templates>> are automatically turned into parameter declarations."
msgstr "link:#typesafe_templates[类型安全模板] 的方法参数会自动转为参数声明。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1335
#, fuzzy
msgid "Note that sections can override names that would otherwise match a parameter declaration:"
msgstr "请注意，章节可以覆盖那些本来与参数声明相匹配的名称。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1352
#, no-wrap
msgid ""
"{@org.acme.Foo foo}\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Qute Hello</title>\n"
"</head>\n"
"<body>\n"
"  <h1>{foo.message}</h1> <1>\n"
"  {#for foo in baz.foos}\n"
"    <p>Hello {foo.message}!</p> <2>\n"
"  {/for}\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1354
#, fuzzy
msgid "Validated against `org.acme.Foo`."
msgstr "根据 `org.acme.Foo` 验证。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1355
#, fuzzy
msgid "Not validated - `foo` is overridden in the loop section."
msgstr "未验证 - `foo` 在循环部分被覆盖。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1356
#, fuzzy, no-wrap
msgid "More Parameter Declarations Examples "
msgstr "更多参数声明的例子"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1363
#, no-wrap
msgid ""
"{@int pages} <1>\n"
"{@java.util.List<String> strings} <2>\n"
"{@java.util.Map<String,? extends Number> numbers} <3>\n"
"{@java.util.Optional<?> param} <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1365
#, fuzzy
msgid "A primitive type."
msgstr "一个原始的类型。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1366
#, fuzzy
msgid "`String` is replaced with `java.lang.String`: `{@java.util.List<java.lang.String> strings}`"
msgstr " `String` 被替换成 。 `java.lang.String` `{@java.util.List<java.lang.String> strings}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1367
#, fuzzy
msgid "The wildcard is ignored and the upper bound is used instead: `{@java.util.Map<String,Number>}`"
msgstr "通配符被忽略，而使用上界。 `{@java.util.Map<String,Number>}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1368
#, fuzzy
msgid "The wildcard is ignored and the `java.lang.Object` is used instead: `{@java.util.Optional<java.lang.Object>}`"
msgstr "通配符被忽略，而是使用 `java.lang.Object` 。 `{@java.util.Optional<java.lang.Object>}` "

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1370
#, fuzzy, no-wrap
msgid "Type-safe Templates"
msgstr "类型安全的模板"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1373
#, fuzzy
msgid "You can also define type-safe templates in your Java code.  If using <<resteasy_integration,templates in JAX-RS resources>>, you can rely on the following convention:"
msgstr "你也可以在你的Java代码中定义类型安全的模板。如果 link:#resteasy_integration[在 JAX-RS 资源中] 使用模板，你可以依靠以下约定。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1377
#, fuzzy
msgid "Organise your template files in the `/src/main/resources/templates` directory, by grouping them into one directory per resource class. So, if your `ItemResource` class references two templates `hello` and `goodbye`, place them at `/src/main/resources/templates/ItemResource/hello.txt` and `/src/main/resources/templates/ItemResource/goodbye.txt`. Grouping templates per resource class makes it easier to navigate to them."
msgstr "在 `/src/main/resources/templates` 目录中组织你的模板文件，将它们归入每个资源类的一个目录。因此，如果你的 `ItemResource` 类引用了两个模板 `hello` 和 `goodbye` ，把它们放在 `/src/main/resources/templates/ItemResource/hello.txt` 和 `/src/main/resources/templates/ItemResource/goodbye.txt` 。将模板按资源类分组可以使它们更容易被浏览到。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1378
#, fuzzy
msgid "In each of your resource class, declare a `@CheckedTemplate static class Template {}` class within your resource class."
msgstr "在你的每个资源类中，在你的资源类中声明一个 `@CheckedTemplate static class Template {}` 类。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1379
#, fuzzy
msgid "Declare one `public static native TemplateInstance method();` per template file for your resource."
msgstr "为你的资源在每个模板文件中声明一个 `public static native TemplateInstance method();` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1380
#, fuzzy
msgid "Use those static methods to build your template instances."
msgstr "使用这些静态方法来构建你的模板实例。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1381
#, fuzzy, no-wrap
msgid "ItemResource.java"
msgstr "ItemResource.java"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1385
#: upstream/_guides/qute-reference.adoc:1425
#: upstream/_guides/qute-reference.adoc:1444
#: upstream/_guides/qute-reference.adoc:1937
#, no-wrap
msgid "package org.acme.quarkus.sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1391
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1395
#: upstream/_guides/qute-reference.adoc:1429
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.CheckedTemplate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1398
#, no-wrap
msgid ""
"@Path(\"item\")\n"
"public class ItemResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1403
#, no-wrap
msgid ""
"    @CheckedTemplate\n"
"    public static class Templates {\n"
"        public static native TemplateInstance item(Item item); <1> <2>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1411
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"{id}\")\n"
"    @Produces(MediaType.TEXT_HTML)\n"
"    public TemplateInstance get(Integer id) {\n"
"        return Templates.item(service.findItem(id)); <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1413
#, fuzzy
msgid "Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template."
msgstr " `TemplateInstance` 声明一个方法，给我们一个 `templates/ItemResource/item.html` ，并声明其 `Item item` 参数，以便我们可以验证模板。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1414
#, fuzzy
msgid "The `item` parameter is automatically turned into a <<typesafe_expressions,parameter declaration>> and so all expressions that reference this name will be validated."
msgstr " `item` 参数会自动变成一个 link:#typesafe_expressions[参数声明] ，因此所有引用这个名字的表达式都会被验证。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1415
#, fuzzy
msgid "Make the `Item` object accessible in the template."
msgstr "使 `Item` 对象在模板中可以访问。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1417
#, fuzzy
msgid "By default, the templates defined in a class annotated with `@CheckedTemplate` can only contain type-safe expressions, i.e. expressions that can be validated at build time. You can use `@CheckedTemplate(requireTypeSafeExpressions = false)` to relax this requirement."
msgstr "默认情况下，用 `@CheckedTemplate` 注释的类中定义的模板只能包含类型安全的表达式，即在构建时可以被验证的表达式。你可以使用 `@CheckedTemplate(requireTypeSafeExpressions = false)` 来放松这一要求。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1420
#, fuzzy
msgid "You can also declare a top-level Java class annotated with `@CheckedTemplate`:"
msgstr "你也可以声明一个顶层的Java类，并注有 `@CheckedTemplate` 。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1421
#, fuzzy, no-wrap
msgid "Top-level checked templates"
msgstr "顶层检查的模板"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1434
#, no-wrap
msgid ""
"@CheckedTemplate\n"
"public class Templates {\n"
"    public static native TemplateInstance hello(String name); <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1436
#, fuzzy
msgid "This declares a template with path `templates/hello.txt`. The `name` parameter is automatically turned into a <<typesafe_expressions,parameter declaration>> and so all expressions that reference this name will be validated."
msgstr "这声明了一个路径为 `templates/hello.txt` 的模板。 `name` 参数被自动转化为 link:#typesafe_expressions[参数声明] ，因此所有引用此名称的表达式都将被验证。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1439
#, fuzzy
msgid "Then declare one `public static native TemplateInstance method();` per template file.  Use those static methods to build your template instances:"
msgstr "然后为每个模板文件声明一个 `public static native TemplateInstance method();` 。使用这些静态方法来构建你的模板实例。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1440
#: upstream/_guides/qute-reference.adoc:1933
#, fuzzy, no-wrap
msgid "HelloResource.java"
msgstr "HelloResource.java"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1450
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
"import io.quarkus.qute.TemplateInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1453
#: upstream/_guides/qute-reference.adoc:1948
#, no-wrap
msgid ""
"@Path(\"hello\")\n"
"public class HelloResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1460
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return Templates.hello(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1463
#, fuzzy, no-wrap
msgid "Template Extension Methods"
msgstr "模板扩展方法"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1467
#, fuzzy
msgid "Extension methods can be used to extend the data classes with new functionality (to extend the set of accessible properties and methods) or to resolve expressions for a specific <<namespace_extension_methods,namespace>>.  For example, it is possible to add _computed properties_ and _virtual methods_."
msgstr "扩展方法可以用来用新的功能扩展数据类（扩展可访问的属性和方法集）或解决特定 link:#namespace_extension_methods[命名空间] 的表达。例如，可以添加 _计算的属性_ 和 _虚拟方法_ 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1472
#, fuzzy
msgid "A value resolver is automatically generated for a method annotated with `@TemplateExtension`.  If a class is annotated with `@TemplateExtension` then a value resolver is generated for every _non-private static method_ declared on the class.  Method-level annotations override the behavior defined on the class.  Methods that do not meet the following requirements are ignored."
msgstr "对于用 `@TemplateExtension` 注释的方法，会自动生成一个值解析器。如果一个类用 `@TemplateExtension` 注释，那么会对该类上声明的每个 _非私有静态方法_ 生成一个值解析器。方法级注解覆盖了类上定义的行为。不符合以下要求的方法会被忽略。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1474
#, fuzzy
msgid "A template extension method:"
msgstr "一种模板扩展方法。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1476
#, fuzzy
msgid "must not be `private`"
msgstr "不得 `private` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1477
#, fuzzy
msgid "must be static,"
msgstr "必须是静态的。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1478
#, fuzzy
msgid "must not return `void`."
msgstr "不得返回 `void` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1480
#, fuzzy
msgid "If there is no namespace defined the class of the first parameter that is not annotated with `@TemplateAttribute` is used to match the base object. Otherwise the namespace is used to match an expression."
msgstr "如果没有定义命名空间，那么第一个参数中没有注解的类 `@TemplateAttribute` ，用来匹配基础对象。否则，命名空间被用来匹配一个表达式。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1487
#, fuzzy
msgid "The method name is used to match the property name by default.  However, it is possible to specify the matching name with `TemplateExtension#matchName()`.  A special constant - `TemplateExtension#ANY` - may be used to specify that the extension method matches any name.  It is also possible to match the name against a regular expression specified in `TemplateExtension#matchRegex()`.  In both cases, an additional string method parameter must be used to pass the property name.  If both `matchName()` and `matchRegex()` are set the regular expression is used for matching."
msgstr "默认情况下，方法名被用来匹配属性名。然而，可以用 `TemplateExtension#matchName()` 来指定匹配的名称。一个特殊的常数 - `TemplateExtension#ANY` - 可以用来指定扩展方法匹配任何名称。也可以用 `TemplateExtension#matchRegex()` 中指定的正则表达式来匹配名称。在这两种情况下，必须使用一个额外的字符串方法参数来传递属性名称。如果同时设置了 `matchName()` 和 `matchRegex()` ，则使用正则表达式进行匹配。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1488
#, fuzzy, no-wrap
msgid "Extension Method Example"
msgstr "扩展方法示例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1492
#: upstream/_guides/qute-reference.adoc:1688
#, no-wrap
msgid "package org.acme;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1494
#, no-wrap
msgid "class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1496
#: upstream/_guides/qute-reference.adoc:1693
#: upstream/_guides/qute-reference.adoc:1724
#, no-wrap
msgid "    public final BigDecimal price;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1501
#: upstream/_guides/qute-reference.adoc:1729
#, no-wrap
msgid ""
"    public Item(BigDecimal price) {\n"
"        this.price = price;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1504
#, no-wrap
msgid ""
"@TemplateExtension\n"
"class MyExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1509
#, no-wrap
msgid ""
"    static BigDecimal discountedPrice(Item item) { <1>\n"
"        return item.getPrice().multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1511
#, fuzzy
msgid "This method matches an expression with base object of the type `Item.class` and the `discountedPrice` property name."
msgstr "该方法与类型为 `Item.class` 的基础对象和 `discountedPrice` 属性名称的表达式相匹配。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1513
#, fuzzy
msgid "This template extension method makes it possible to render the following template:"
msgstr "这个模板扩展方法使得渲染以下模板成为可能。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1517
#, no-wrap
msgid "{item.discountedPrice} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1519
#, fuzzy
msgid "`item` is resolved to an instance of `org.acme.Item`."
msgstr " `item` 被解析为 的一个实例。 `org.acme.Item` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1520
#, fuzzy, no-wrap
msgid "Method Parameters"
msgstr "方法参数"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1527
#, fuzzy
msgid "An extension method may declare parameters.  If no namespace is specified then the first parameter that is not annotated with `@TemplateAttribute` is used to pass the base object, i.e. `org.acme.Item` in the first example.  If matching any name or using a regular expression then a string method parameter needs to be used to pass the property name.  Parameters annotated with `@TemplateAttribute` are obtained via `TemplateInstance#getAttribute()`.  All other parameters are resolved when rendering the template and passed to the extension method."
msgstr "一个扩展方法可以声明参数。如果没有指定命名空间，那么第一个没有注解的参数 `@TemplateAttribute` ，用来传递基础对象，即第一个例子中的 `org.acme.Item` 。如果匹配任何名称或使用正则表达式，那么需要使用一个字符串方法参数来传递属性名称。用 `@TemplateAttribute` 注释的参数是通过 `TemplateInstance#getAttribute()` 获得的。所有其他的参数在渲染模板时被解析并传递给扩展方法。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1528
#, fuzzy, no-wrap
msgid "Multiple Parameters Example"
msgstr "多参数实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1533
#, no-wrap
msgid ""
"@TemplateExtension\n"
"class BigDecimalExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1538
#, no-wrap
msgid ""
"    static BigDecimal scale(BigDecimal val, int scale, RoundingMode mode) { <1>\n"
"        return val.setScale(scale, mode);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1540
#, fuzzy
msgid "This method matches an expression with base object of the type `BigDecimal.class`, with the `scale` virtual method name and two virtual method parameters."
msgstr "该方法与类型为 `BigDecimal.class` ，具有 `scale` 虚方法名称和两个虚方法参数的基对象的表达式匹配。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1544
#, no-wrap
msgid "{item.discountedPrice.scale(2,mode)} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1546
#, fuzzy
msgid "`item.discountedPrice` is resolved to an instance of `BigDecimal`."
msgstr " `item.discountedPrice` 被解析为 的一个实例。 `BigDecimal` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1548
#, fuzzy, no-wrap
msgid "Namespace Extension Methods"
msgstr "名称空间扩展方法"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1553
#, fuzzy
msgid "If `TemplateExtension#namespace()` is specified then the extension method is used to resolve expressions with the given <<expressions,namespace>>.  Template extension methods that share the same namespace are grouped in one resolver ordered by `TemplateExtension#priority()`.  The first matching extension method is used to resolve an expression."
msgstr "如果指定了 `TemplateExtension#namespace()` ，那么该扩展方法将被用于解析具有给定 link:#expressions[名称空间] 的表达式。共享相同名称空间的模板扩展方法被分组在一个解析器中，按 `TemplateExtension#priority()` 排序。第一个匹配的扩展方法被用来解析一个表达式。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1554
#, fuzzy, no-wrap
msgid "Namespace Extension Method Example"
msgstr "命名空间扩展方法实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1559
#, no-wrap
msgid ""
"@TemplateExtension(namespace = \"str\")\n"
"public class StringExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1563
#, no-wrap
msgid ""
"   static String format(String fmt, Object... args) {\n"
"      return String.format(fmt, args);\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1568
#, no-wrap
msgid ""
"   static String reverse(String val) {\n"
"      return new StringBuilder(val).reverse().toString();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1571
#, fuzzy
msgid "These extension methods can be used as follows."
msgstr "这些扩展方法可按以下方式使用。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1576
#, no-wrap
msgid ""
"{str:format('%s %s!','Hello', 'world')} <1>\n"
"{str:reverse('hello')} <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1578
#, fuzzy
msgid "The output is `Hello world!`"
msgstr "输出是 `Hello world!` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1579
#, fuzzy
msgid "The output is `olleh`"
msgstr "输出是 `olleh` "

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1581
#, fuzzy, no-wrap
msgid "Built-in Template Extensions"
msgstr "内置模板扩展"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1584
#, fuzzy
msgid "Quarkus provides a set of built-in extension methods."
msgstr "Quarkus提供了一套内置的扩展方法。"

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1585
#, fuzzy, no-wrap
msgid "Maps"
msgstr "地图"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1588
#, fuzzy
msgid "`keys` or `keySet`: Returns a Set view of the keys contained in a map"
msgstr " `keys` 或 。返回一个地图中包含的键的Set视图 `keySet` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1589
#, fuzzy
msgid "`{#for key in map.keySet}`"
msgstr " `{#for key in map.keySet}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1591
#, fuzzy
msgid "`values`: Returns a Collection view of the values contained in a map"
msgstr " `values` :返回一个地图中包含的数值的集合视图"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1592
#, fuzzy
msgid "`{#for value in map.values}`"
msgstr " `{#for value in map.values}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1594
#, fuzzy
msgid "`size`: Returns the number of key-value mappings in a map"
msgstr " `size` :返回一个地图中的键值映射的数量"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1595
#, fuzzy
msgid "`{map.size}`"
msgstr " `{map.size}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1597
#, fuzzy
msgid "`isEmpty`: Returns true if a map contains no key-value mappings"
msgstr " `isEmpty` :如果一个地图不包含键值映射，则返回true"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1598
#, fuzzy
msgid "`{#if map.isEmpty}`"
msgstr " `{#if map.isEmpty}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1600
#, fuzzy
msgid "`get(key)`: Returns the value to which the specified key is mapped"
msgstr " `get(key)` :返回指定键所映射的值"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1601
#, fuzzy
msgid "`{map.get('foo')}`"
msgstr " `{map.get('foo')}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1603
#, fuzzy
msgid "A map value can be also accessed directly: `{map.myKey}`. Use the bracket notation for keys that are not legal identifiers: `{map['my key']}`."
msgstr "一个地图值也可以直接访问： `{map.myKey}` 。对于不是法定标识符的键，使用括号符号： `{map['my key']}` 。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1604
#, fuzzy, no-wrap
msgid "Lists"
msgstr "列表"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1607
#, fuzzy
msgid "`get(index)`: Returns the element at the specified position in a list"
msgstr " `get(index)` :返回列表中指定位置的元素"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1608
#, fuzzy
msgid "`{list.get(0)}`"
msgstr " `{list.get(0)}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1610
#, fuzzy
msgid "`reversed`: Returns a reversed iterator over a list"
msgstr " `reversed` :返回列表上的反转迭代器"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1611
#, fuzzy
msgid "`{#for r in recordsList.reversed}`"
msgstr " `{#for r in recordsList.reversed}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1613
#, fuzzy
msgid "`take`: Returns the first `n` elements from the given list; throws an `IndexOutOfBoundsException` if `n` is out of range"
msgstr " `take` :返回给定列表中的第一个 `n` 元素；如果 `n` 超出范围，则抛出一个 `IndexOutOfBoundsException` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1614
#, fuzzy
msgid "`{#for r in recordsList.take(3)}`"
msgstr " `{#for r in recordsList.take(3)}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1616
#, fuzzy
msgid "`takeLast`: Returns the last `n` elements from the given list; throws an `IndexOutOfBoundsException` if `n` is out of range"
msgstr " `takeLast` :返回给定列表中的最后一个 `n` 元素；如果 `n` 超出范围，则抛出一个 `IndexOutOfBoundsException` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1617
#, fuzzy
msgid "`{#for r in recordsList.takeLast(3)}`"
msgstr " `{#for r in recordsList.takeLast(3)}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1619
#, fuzzy
msgid "`first`: Returns the first element of the given list; throws an `NoSuchElementException` if the list is empty"
msgstr " `first` :返回给定列表的第一个元素；如果列表为空，则抛出一个 `NoSuchElementException` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1620
#, fuzzy
msgid "`{recordsList.first}`"
msgstr " `{recordsList.first}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1622
#, fuzzy
msgid "`last`: Returns the last element of the given list; throws an `NoSuchElementException` if the list is empty"
msgstr " `last` :返回给定列表的最后一个元素；如果列表为空，则抛出一个 `NoSuchElementException` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1623
#, fuzzy
msgid "`{recordsList.last}`"
msgstr " `{recordsList.last}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1625
#, fuzzy
msgid "A list element can be accessed directly via an index: `{list.10}` or even `{list[10]}`."
msgstr "一个列表元素可以直接通过索引访问： `{list.10}` ，甚至 `{list[10]}` 。"

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1626
#, fuzzy, no-wrap
msgid "Numbers"
msgstr "数字"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1629
#, fuzzy
msgid "`mod`: Modulo operation"
msgstr " `mod` :模数操作"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1630
#, fuzzy
msgid "`{#if counter.mod(5) == 0}`"
msgstr " `{#if counter.mod(5) == 0}` "

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1631
#, fuzzy, no-wrap
msgid "Strings"
msgstr "弦乐"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1634
#, fuzzy
msgid "`fmt` or `format`: format the string instance via `java.lang.String.format()`"
msgstr " `fmt` 或 ：通过以下方式格式化字符串实例 `format` `java.lang.String.format()` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1635
#, fuzzy
msgid "`{myStr.fmt(\"arg1\",\"arg2\")}`"
msgstr " `{myStr.fmt(\"arg1\",\"arg2\")}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1636
#, fuzzy
msgid "`{myStr.format(locale,arg1)}`"
msgstr " `{myStr.format(locale,arg1)}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1637
#, fuzzy
msgid "`str:fmt` or `str:format`: format the supplied string value via `java.lang.String.format()`"
msgstr " `str:fmt` 或 ：通过以下方式格式化提供的字符串值 `str:format` `java.lang.String.format()` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1638
#, fuzzy
msgid "`{str:format(\"Hello %s!\",name)}`"
msgstr " `{str:format(\"Hello %s!\",name)}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1639
#, fuzzy
msgid "`{str:fmt(locale,'%tA',now)}`"
msgstr " `{str:fmt(locale,'%tA',now)}` "

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1640
#, fuzzy, no-wrap
msgid "Config "
msgstr "配置"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1643
#, fuzzy
msgid "`config:<name>` or `config:[<name>]`: Returns the config value for the given property name"
msgstr " `config:<name>` 或 。返回给定属性名称的配置值 `config:[<name>]` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1644
#, fuzzy
msgid "`{config:foo}` or `{config:['property.with.dot.in.name']}`"
msgstr " `{config:foo}` 或 `{config:['property.with.dot.in.name']}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1646
#, fuzzy
msgid "`config:property(name)`: Returns the config value for the given property name; the name can be obtained dynamically by an expression"
msgstr " `config:property(name)` :返回给定属性名称的配置值；该名称可以通过表达式动态地获得"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1647
#, fuzzy
msgid "`{config:property('quarkus.foo')}`"
msgstr " `{config:property('quarkus.foo')}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1648
#, fuzzy
msgid "`{config:property(foo.getPropertyName())}`"
msgstr " `{config:property(foo.getPropertyName())}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1650
#, fuzzy
msgid "`config:boolean(name)`: Returns the config value for the given property name as a boolean; the name can be obtained dynamically by an expression"
msgstr " `config:boolean(name)` :返回给定属性名称的配置值为一个布尔值；名称可以通过表达式动态获得"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1651
#, fuzzy
msgid "`{config:boolean('quarkus.foo.boolean') ?: 'Not Found'}`"
msgstr " `{config:boolean('quarkus.foo.boolean') ?: 'Not Found'}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1652
#, fuzzy
msgid "`{config:boolean(foo.getPropertyName()) ?: 'property is false'}`"
msgstr " `{config:boolean(foo.getPropertyName()) ?: 'property is false'}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1654
#, fuzzy
msgid "`config:integer(name)`: Returns the config value for the given property name as an integer; the name can be obtained dynamically by an expression"
msgstr " `config:integer(name)` :返回给定属性名称的配置值为一个整数；名称可以通过表达式动态地获得"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1655
#, fuzzy
msgid "`{config:integer('quarkus.foo')}`"
msgstr " `{config:integer('quarkus.foo')}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1656
#, fuzzy
msgid "`{config:integer(foo.getPropertyName())}`"
msgstr " `{config:integer(foo.getPropertyName())}` "

#. type: Title =====
#: upstream/_guides/qute-reference.adoc:1657
#, fuzzy, no-wrap
msgid "Time"
msgstr "时间"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1660
#, fuzzy
msgid "`format(pattern)`: Formats temporal objects from the `java.time` package"
msgstr " `format(pattern)` :形成来自 `java.time` 包的时间对象"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1661
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu')}`"
msgstr " `{dateTime.format('d MMM uuuu')}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1663
#, fuzzy
msgid "`format(pattern,locale)`: Formats temporal objects from the `java.time` package"
msgstr " `format(pattern,locale)` :形成来自 `java.time` 包的时间对象"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1664
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu',myLocale)}`"
msgstr " `{dateTime.format('d MMM uuuu',myLocale)}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1666
#, fuzzy
msgid "`format(pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package"
msgstr " `format(pattern,locale,timeZone)` :形成来自 `java.time` 包的时间对象"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1667
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr " `{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1669
#, fuzzy
msgid "`time:format(dateTime,pattern)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr " `time:format(dateTime,pattern)` :形成来自 `java.time` 包、 `java.util.Date` 、 `java.util.Calendar` 和 的时间对象。 `java.lang.Number` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1670
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu')}`"
msgstr " `{time:format(myDate,'d MMM uuuu')}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1672
#, fuzzy
msgid "`time:format(dateTime,pattern,locale)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr " `time:format(dateTime,pattern,locale)` :形成来自 `java.time` 包、 `java.util.Date` 、 `java.util.Calendar` 和 的时间对象。 `java.lang.Number` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1673
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu', myLocale)}`"
msgstr " `{time:format(myDate,'d MMM uuuu', myLocale)}` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1675
#, fuzzy
msgid "`time:format(dateTime,pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr " `time:format(dateTime,pattern,locale,timeZone)` :形成来自 `java.time` 包、 `java.util.Date` 、 `java.util.Calendar` 和 的时间对象。 `java.lang.Number` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1676
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr " `{time:format(myDate,'d MMM uuuu',myLocale,myTimeZoneId)}` "

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1678
#, fuzzy, no-wrap
msgid "@TemplateData"
msgstr "@TemplateData"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1682
#, fuzzy
msgid "A value resolver is automatically generated for a type annotated with `@TemplateData`.  This allows Quarkus to avoid using reflection to access the data at runtime."
msgstr "一个值解析器会自动为一个被注解为 `@TemplateData` 的类型生成。这允许Quarkus避免在运行时使用反射来访问数据。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1684
#, fuzzy
msgid "Non-public members, constructors, static initializers, static, synthetic and void methods are always ignored."
msgstr "非公共成员、构造函数、静态初始化器、静态、合成和无效方法总是被忽略。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1691
#, no-wrap
msgid ""
"@TemplateData\n"
"class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1697
#, no-wrap
msgid ""
"    public Item(BigDecimal price) {\n"
"        this.price = price;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1702
#, no-wrap
msgid ""
"    public BigDecimal getDiscountedPrice() {\n"
"        return price.multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1705
#, fuzzy
msgid "Any instance of `Item` can be used directly in the template:"
msgstr " `Item` 的任何实例都可以直接在模板中使用。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1711
#, no-wrap
msgid ""
"{#each items} <1>\n"
"  {it.price} / {it.discountedPrice}\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1713
#, fuzzy
msgid "`items` is resolved to a list of `org.acme.Item` instances."
msgstr " `items` 被解析为一个 实例的列表。 `org.acme.Item` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1716
#, fuzzy
msgid "Furthermore, `@TemplateData.properties()` and `@TemplateData.ignore()` can be used to fine-tune the generated resolver.  Finally, it is also possible to specify the \"target\" of the annotation - this could be useful for third-party classes not controlled by the application:"
msgstr "此外， `@TemplateData.properties()` 和 `@TemplateData.ignore()` 可以用来微调生成的解析器。最后，还可以指定注解的 \"目标\"--这对于不受应用程序控制的第三方类可能很有用。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1722
#, no-wrap
msgid ""
"@TemplateData(target = BigDecimal.class)\n"
"@TemplateData\n"
"class Item {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1736
#, no-wrap
msgid ""
"{#each items}\n"
"  {it.price.setScale(2, rounding)} <1>\n"
"{/each}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1738
#, fuzzy
msgid "The generated value resolver knows how to invoke the `BigDecimal.setScale()` method."
msgstr "生成值解析器知道如何调用 `BigDecimal.setScale()` 方法。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1739
#, fuzzy, no-wrap
msgid "Accessing Static Fields and Methods"
msgstr "访问静态字段和方法"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1746
#, fuzzy
msgid "If `@TemplateData#namespace()` is set to a non-empty value then a namespace resolver is automatically generated to access the public static fields and methods of the target class.  By default, the namespace is the FQCN of the target class where dots and dollar signs are replaced by underscores.  For example, the namespace for a class with name `org.acme.Foo` is `org_acme_Foo`.  The static field `Foo.AGE` can be accessed via `{org_acme_Foo:AGE}`.  The static method `Foo.computeValue(int number)` can be accessed via `{org_acme_Foo:computeValue(10)}`."
msgstr "如果 `@TemplateData#namespace()` 被设置为一个非空值，那么将自动生成一个命名空间解析器，以访问目标类的公共静态字段和方法。默认情况下，命名空间是目标类的FQCN，其中点和美元符号被下划线所代替。例如，一个名称为 `org.acme.Foo` 的类的命名空间是 `org_acme_Foo` 。静态字段 `Foo.AGE` 可以通过 `{org_acme_Foo:AGE}` 来访问。静态方法 `Foo.computeValue(int number)` ，可以通过 `{org_acme_Foo:computeValue(10)}` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1748
#, fuzzy
msgid "A namespace can only consist of alphanumeric characters and underscores."
msgstr "一个命名空间只能由字母数字字符和下划线组成。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1749
#, fuzzy, no-wrap
msgid "Class Annotated With `@TemplateData`"
msgstr "类的注解与 `@TemplateData` "

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1753
#: upstream/_guides/qute-reference.adoc:1780
#, no-wrap
msgid "package model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1759
#, no-wrap
msgid ""
"@TemplateData <1>\n"
"public class Statuses {\n"
"    public static final String ON = \"on\";\n"
"    public static final String OFF = \"off\";\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1761
#, fuzzy
msgid "A name resolver with the namespace `model_Status` is generated automatically."
msgstr "一个带有命名空间 `model_Status` 的名称解析器会自动生成。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1762
#, fuzzy, no-wrap
msgid "Template Accessing Class Constants"
msgstr "模板访问类常量"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1768
#, no-wrap
msgid ""
"{#if machine.status == model_Status:ON}\n"
"  The machine is ON!\n"
"{/if}\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1771
#, fuzzy, no-wrap
msgid "Convenient Annotation For Enums"
msgstr "为枚举提供方便的注释"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1775
#, fuzzy
msgid "There's also a convenient annotation to access enum constants: `@io.quarkus.qute.TemplateEnum`.  This annotation is functionally equivalent to `@TemplateData(namespace = TemplateData.SIMPLENAME)`, i.e. a namespace resolver is automatically generated for the target enum and the simple name of the target enum is used as the namespace."
msgstr "还有一个方便的注解来访问枚举常量： `@io.quarkus.qute.TemplateEnum` 。这个注解在功能上等同于 `@TemplateData(namespace = TemplateData.SIMPLENAME)` ，即为目标枚举自动生成一个命名空间解析器，并使用目标枚举的简单名称作为命名空间。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1776
#, fuzzy, no-wrap
msgid "Enum Annotated With `@TemplateEnum`"
msgstr "枚举注解有 `@TemplateEnum` "

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1786
#, no-wrap
msgid ""
"@TemplateEnum <1>\n"
"public enum Status {\n"
"    ON,\n"
"    OFF\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1788
#, fuzzy
msgid "A name resolver with the namespace `Status` is generated automatically."
msgstr "一个带有命名空间 `Status` 的名称解析器会自动生成。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1790
#, fuzzy
msgid "`@TemplateEnum` declared on a non-enum class is ignored. Also if an enum also declares the `@TemplateData` annotation then the `@TemplateEnum` annotation is ignored."
msgstr " `@TemplateEnum` 声明的非枚举类将被忽略。同样，如果一个枚举也声明了 注释，那么 注释也会被忽略。 `@TemplateData` `@TemplateEnum` "

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1791
#, fuzzy, no-wrap
msgid "Template Accessing Enum Constants"
msgstr "模板访问枚举常量"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1797
#, no-wrap
msgid ""
"{#if machine.status == Status:ON}\n"
"  The machine is ON!\n"
"{/if}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1800
#, fuzzy
msgid "Quarkus detects possible namespace collisions and fails the build if a specific namespace is defined by multiple `@TemplateData` and/or `@TemplateEnum` annotations."
msgstr "Quarkus会检测可能的命名空间碰撞，如果一个特定的命名空间被多个 `@TemplateData` 和/或 `@TemplateEnum` 注释所定义，则构建失败。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1802
#, fuzzy, no-wrap
msgid "Global Variables"
msgstr "全局变量"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1806
#, fuzzy
msgid "The `io.quarkus.qute.TemplateGlobal` annotation can be used to denote static fields and methods that supply _global variables_ which are accessible in any template.  Internally, each global variable is added to the data map of any `TemplateInstance` via the `TemplateInstance#data(String, Object)` method."
msgstr " `io.quarkus.qute.TemplateGlobal` 注解可以用来表示提供 _全局变量_ 的静态字段和方法，这些变量在任何模板中都可以访问。在内部，每个全局变量都通过 `TemplateInstance#data(String, Object)` 方法被添加到任何 `TemplateInstance` 的数据地图中。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1807
#, fuzzy, no-wrap
msgid "Global Variables Definition"
msgstr "全局变量的定义"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1811
#, no-wrap
msgid "enum Color { RED, GREEN, BLUE }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1814
#, no-wrap
msgid ""
"@TemplateGlobal <1>\n"
"public class Globals {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1816
#, no-wrap
msgid "    static int age = 40;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1820
#, no-wrap
msgid ""
"    static Color[] myColors() {\n"
"      return new Color[] { Color.RED, Color.BLUE };\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1826
#, no-wrap
msgid ""
"    @TemplateGlobal(name = \"currentUser\") <2>\n"
"    static String user() {\n"
"       return \"Mia\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1828
#, fuzzy
msgid "If a class is annotated with `@TemplateGlobal` then every non-void non-private static method that declares no parameters and every non-private static field is considered a global variable. The name is defaulted, i.e. the name of the field/method is used."
msgstr "如果一个类被注解为 `@TemplateGlobal` ，那么每个没有声明参数的非void非私有静态方法和每个非私有静态字段都被认为是全局变量。名称是默认的，即使用字段/方法的名称。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1829
#, fuzzy
msgid "Method-level annotations override the class-level annotation. In this particular case, the name is not defaulted but selected explicitly."
msgstr "方法级注解覆盖了类级注解。在这种特殊情况下，名称不是默认的，而是明确选择的。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1830
#, fuzzy, no-wrap
msgid "A Template Accessing Global Variables"
msgstr "一个访问全局变量的模板"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1836
#, no-wrap
msgid ""
"User: {currentUser} <1>\n"
"Age:  {age} <2>\n"
"Colors: {#each myColors}{it}{#if it_hasNext}, {/if}{/each} <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1838
#, fuzzy
msgid "`currentUser` resolves to `Globals#user()`."
msgstr " `currentUser` 解决了 。 `Globals#user()` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1839
#, fuzzy
msgid "`age` resolves to `Globals#age`."
msgstr " `age` 解决了 。 `Globals#age` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1840
#, fuzzy
msgid "`myColors` resolves to `Globals#myColors()`."
msgstr " `myColors` 解决了 。 `Globals#myColors()` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1842
#, fuzzy
msgid "Note that global variables implicitly add <<typesafe_expressions, parameter declarations>> to all templates and so any expression that references a global variable is validated during build."
msgstr "请注意，全局变量隐含地将 link:#typesafe_expressions[参数声明] 添加到所有的模板中，因此任何引用全局变量的表达式都会在构建过程中得到验证。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1843
#, fuzzy, no-wrap
msgid "The Output"
msgstr "输出"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1849
#, no-wrap
msgid ""
"User: Mia\n"
"Age:  40\n"
"Colors: RED, BLUE\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:1851
#, fuzzy, no-wrap
msgid "Resolving Conflicts"
msgstr "解决冲突"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1856
#, fuzzy
msgid "Global variables may conflict with regular data objects.  <<typesafe_templates,Type-safe templates>> override the global variables automatically.  For example, the following definition overrides the global variable supplied by the `Globals#user()` method:"
msgstr "全局变量可能与常规数据对象发生冲突。 link:#typesafe_templates[类型安全的模板] 会自动覆盖全局变量。例如，下面的定义覆盖了由 `Globals#user()` 方法提供的全局变量。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1857
#, fuzzy, no-wrap
msgid "Type-safe Template Definition"
msgstr "类型安全的模板定义"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1861
#, no-wrap
msgid "import org.acme.User;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1866
#, no-wrap
msgid ""
"@CheckedTemplate\n"
"public class Templates {\n"
"    static native TemplateInstance hello(User currentUser); <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1868
#, fuzzy
msgid "`currentUser` conflicts with the global variable supplied by `Globals#user()`."
msgstr " `currentUser` 与 提供的全局变量冲突。 `Globals#user()` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1870
#, fuzzy
msgid "So the corresponding template does not result in a validation error even though the `Globals#user()` method returns `java.lang.String` which does not have the `name` property:"
msgstr "所以相应的模板不会导致验证错误，即使 `Globals#user()` 方法返回 `java.lang.String` ，该方法没有 `name` 属性。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1871
#, fuzzy, no-wrap
msgid "`templates/hello.txt`"
msgstr " `templates/hello.txt` "

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1875
#, no-wrap
msgid "User name: {currentUser.name} <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1877
#, fuzzy
msgid "`org.acme.User` has the `name` property."
msgstr " `org.acme.User` 具有 的特性。 `name` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1879
#, fuzzy
msgid "For other templates an explicit parameter declaration is needed:"
msgstr "对于其他模板，则需要明确的参数声明。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1883
#, no-wrap
msgid "{@org.acme.User currentUser} <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1885
#, no-wrap
msgid "User name: {currentUser.name}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1887
#, fuzzy
msgid "This parameter declaration overrides the declaration added by the global variable supplied by the `Globals#user()` method."
msgstr "这个参数声明覆盖了由 `Globals#user()` 方法提供的全局变量所添加的声明。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1890
#, fuzzy, no-wrap
msgid "Native Executables"
msgstr "本地可执行文件"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1895
#, fuzzy
msgid "In the JVM mode a reflection-based value resolver may be used to access properties and call methods of the model classes.  But this does not work for xref:building-native-image.adoc[a native executable] out of the box.  As a result, you may encounter template exceptions like `Property \"name\" not found on the base object \"org.acme.Foo\" in expression {foo.name} in template hello.html` even if the `Foo` class declares a relevant getter method."
msgstr "在JVM模式下，基于反射的值解析器可以用来访问属性和调用模型类的方法。但是这对于 link:building-native-image.html[一个] 开箱即用的 link:building-native-image.html[本地可执行文件] 来说并不奏效。因此，即使 `Foo` 类声明了相关的getter方法，你也可能遇到模板异常，如 `Property \"name\" not found on the base object \"org.acme.Foo\" in expression {foo.name} in template hello.html` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1897
#, fuzzy
msgid "There are several ways to solve this problem:"
msgstr "有几种方法来解决这个问题。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1899
#, fuzzy
msgid "Make use of <<typesafe_templates,type-safe templates>> or <<typesafe_expressions,type-safe expressions>>"
msgstr "使用 link:#typesafe_templates[类型安全] 的模板或 link:#typesafe_expressions[类型安全的表达式]"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1900
#, fuzzy
msgid "In this case, an optimized value resolver is generated automatically and used at runtime"
msgstr "在这种情况下，一个优化的值解析器会自动生成并在运行时使用"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1901
#, fuzzy
msgid "This is the preferred solution"
msgstr "这是首选的解决方案"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1902
#, fuzzy
msgid "Annotate the model class with <<template_data,`@TemplateData`>> - a specialized value resolver is generated and used at runtime"
msgstr "对模型类进行注解 link:#template_data[`@TemplateData`] - 在运行时生成并使用一个专门的值解析器"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1903
#, fuzzy
msgid "Annotate the model class with `@io.quarkus.runtime.annotations.RegisterForReflection` to make the reflection-based value resolver work"
msgstr "用 `@io.quarkus.runtime.annotations.RegisterForReflection` 注释模型类，以使基于反射的值解析器工作。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:1906
#, fuzzy, no-wrap
msgid "RESTEasy Integration"
msgstr "RESTEasy集成"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1910
#, fuzzy
msgid "If you want to use Qute in your JAX-RS application, then depending on which JAX-RS stack you are using, you'll need to register the proper extension first.  If you are using the traditional `quakus-resteasy` extension, then in your `pom.xml` file, add:"
msgstr "如果你想在你的JAX-RS应用程序中使用Qute，那么根据你所使用的JAX-RS栈，你需要先注册适当的扩展。如果你使用的是传统的 `quakus-resteasy` 扩展，那么在你的 `pom.xml` 文件中，添加。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1917
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1920
#, fuzzy
msgid "If instead you are using RESTEasy Reactive via the `quarkus-resteasy-reactive` extension, then in your `pom.xml` file, add:"
msgstr "如果你是通过 `quarkus-resteasy-reactive` 扩展使用RESTEasy Reactive，那么在你的 `pom.xml` 文件中，添加:"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1927
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1930
#, fuzzy
msgid "Both of these extensions register a special `ContainerResponseFilter` implementation which enables resource methods to return a `TemplateInstance`, thus freeing users of having to take care of all necessary internal steps."
msgstr "这两个扩展都注册了一个特殊的 `ContainerResponseFilter` 实现，使资源方法能够返回一个 `TemplateInstance` ，从而使用户不必照顾到所有必要的内部步骤。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1932
#, fuzzy
msgid "The end result is that a using Qute within a JAX-RS resource may look as simple as:"
msgstr "最终的结果是，在JAX-RS资源中使用Qute可能看起来像这样简单。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1942
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1945
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1951
#, no-wrap
msgid ""
"    @Inject\n"
"    Template hello; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1958
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return hello.data(\"name\", name); <2> <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1960
#, fuzzy
msgid "If there is no `@Location` qualifier provided, the field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr "如果没有提供 `@Location` 修饰语，则使用字段名来定位模板。在这个特殊情况下，我们要注入一个路径为 `templates/hello.txt` 的模板。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1961
#, fuzzy
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr " `Template.data()` 返回一个新的模板实例，可以在实际渲染被触发之前进行自定义。在这种情况下，我们把名字值放在键 。渲染过程中可以访问数据地图。 `name` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1962
#, fuzzy
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr "请注意，我们并没有触发渲染--这是由一个特殊的 `ContainerResponseFilter` 实现自动完成的。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1964
#, fuzzy
msgid "Users are encouraged to use <<typesafe_templates,Type-safe templates>> that help to organize the templates for a specific JAX-RS resource and enable <<typesafe_expressions,type-safe expressions>> automatically."
msgstr "我们鼓励用户使用 link:#typesafe_templates[类型安全模板] ，它有助于为特定的 JAX-RS 资源组织模板并自动启用 link:#typesafe_expressions[类型安全表达式] 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1967
#, fuzzy
msgid "The content negotiation is performed automatically.  The resulting output depends on the `Accept` header received from the client."
msgstr "内容协商是自动进行的。由此产生的输出取决于从客户端收到的 `Accept` header。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1972
#: upstream/_guides/qute-reference.adoc:1993
#, no-wrap
msgid ""
"@Path(\"/detail\")\n"
"class DetailResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1975
#, no-wrap
msgid ""
"    @Inject\n"
"    Template item; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:1982
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.TEXT_HTML, MediaType.TEXT_PLAIN })\n"
"    public TemplateInstance item() {\n"
"        return item.data(\"myItem\", new Item(\"Alpha\", 1000)); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1984
#, fuzzy
msgid "Inject a variant template with base path derived from the injected field - `src/main/resources/templates/item`."
msgstr "注入一个变体模板，其基本路径来自注入的字段 - `src/main/resources/templates/item` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1985
#, fuzzy
msgid "For `text/plain` the `src/main/resources/templates/item.txt` template is used. For `text/html` the `META-INF/resources/templates/item.html` template is used."
msgstr "对于 `text/plain` ，使用的是 `src/main/resources/templates/item.txt` 模板。对于 `text/html` ，则使用 `META-INF/resources/templates/item.html` 模板。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:1987
#, fuzzy
msgid "The `RestTemplate` util class can be used to obtain a template instance from a body of a JAX-RS resource method:"
msgstr " `RestTemplate` util类可用于从JAX-RS资源方法的主体中获取模板实例。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:1988
#, fuzzy, no-wrap
msgid "RestTemplate Example"
msgstr "RestTemplate示例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2000
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces({ MediaType.TEXT_HTML, MediaType.TEXT_PLAIN })\n"
"    public TemplateInstance item() {\n"
"        return RestTemplate.data(\"myItem\", new Item(\"Alpha\", 1000)); <1>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2002
#, fuzzy
msgid "The name of the template is derived from the resource class and method name; `DetailResource/item` in this particular case."
msgstr "模板的名称来自于资源类和方法名称；在这种特殊情况下， `DetailResource/item` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2004
#, fuzzy
msgid "Unlike with `@Inject` the templates obtained via `RestTemplate` are not validated, i.e. the build does not fail if a template does not exist."
msgstr "与 `@Inject` 不同的是，通过 `RestTemplate` 获得的模板不被验证，也就是说，如果模板不存在，构建就不会失败。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:2005
#, fuzzy, no-wrap
msgid "Development Mode"
msgstr "发展模式"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2008
#, fuzzy
msgid "In the development mode, all files located in `src/main/resources/templates` are watched for changes and modifications are immediately visible."
msgstr "在开发模式下，位于 `src/main/resources/templates` 的所有文件都会被观察到变化，并且修改的内容会立即显现。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:2010
#, fuzzy, no-wrap
msgid "Type-safe Message Bundles"
msgstr "类型安全的消息包"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:2012
#, fuzzy, no-wrap
msgid "Basic Concepts"
msgstr "基本概念"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2018
#, fuzzy
msgid "The basic idea is that every message is potentially a very simple template.  In order to prevent type errors a message is defined as an annotated method of a *message bundle interface*.  Quarkus generates the *message bundle implementation* at build time.  Subsequently, the bundles can be used at runtime:"
msgstr "其基本思想是，每条消息都可能是一个非常简单的模板。为了防止类型错误，消息被定义为一个 *消息包接口* 的注释方法。Quarkus在构建时生成了 *消息包的实现* 。随后，这些包可以在运行时被使用。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2020
#, fuzzy
msgid "Directly in your code via `io.quarkus.qute.i18n.MessageBundles#get()`; e.g. `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"
msgstr "直接在你的代码中通过 `io.quarkus.qute.i18n.MessageBundles#get()` ；例如 `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2021
#, fuzzy
msgid "Injected in your beans via `@Inject`; e.g. `@Inject AppMessages`"
msgstr "通过 `@Inject` ，注入到你的豆子里；比如说 `@Inject AppMessages` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2022
#, fuzzy
msgid "Referenced in the templates via the message bundle namespace:"
msgstr "在模板中通过消息捆绑命名空间引用。"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2027
#, no-wrap
msgid ""
" {msg:hello_name('Lucie')} <1> <2> <3>\n"
" {msg:message(myKey,'Lu')} <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2029
#, fuzzy
msgid "`msg` is the default namespace."
msgstr " `msg` 是默认的命名空间。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2030
#, fuzzy
msgid "`hello_name` is the message key."
msgstr " `hello_name` 是信息密钥。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2031
#, fuzzy
msgid "`Lucie` is the parameter of the message bundle interface method."
msgstr " `Lucie` 是消息捆绑接口方法的参数。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2032
#, fuzzy
msgid "It is also possible to obtain a localized message for a key resolved at runtime using a reserved key `message`. The validation is skipped in this case though."
msgstr "也可以通过使用保留的密钥 `message` ，为运行时解决的密钥获得一个本地化的信息。但在这种情况下，验证被跳过。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:2033
#, fuzzy, no-wrap
msgid "Message Bundle Interface Example"
msgstr "消息包接口实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2038
#, no-wrap
msgid ""
"import io.quarkus.qute.i18n.Message;\n"
"import io.quarkus.qute.i18n.MessageBundle;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2041
#, no-wrap
msgid ""
"@MessageBundle <1>\n"
"public interface AppMessages {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2045
#, no-wrap
msgid ""
"    @Message(\"Hello {name}!\") <2>\n"
"    String hello_name(String name); <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2047
#, fuzzy
msgid "Denotes a message bundle interface. The bundle name is defaulted to `msg` and is used as a namespace in templates expressions, e.g. `{msg:hello_name}`."
msgstr "表示一个消息捆绑接口。捆绑名称默认为 `msg` ，并在模板表达式中作为命名空间使用，例如： `{msg:hello_name}` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2048
#, fuzzy
msgid "Each method must be annotated with `@Message`. The value is a qute template."
msgstr "每个方法都必须用 `@Message` 来注释。其值是一个qute模板。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2049
#, fuzzy
msgid "The method parameters can be used in the template."
msgstr "方法参数可以在模板中使用。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:2050
#, fuzzy, no-wrap
msgid "Bundle Name and Message Keys"
msgstr "捆绑名称和信息键"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2058
#, fuzzy
msgid "Keys are used directly in templates.  The bundle name is used as a namespace in template expressions.  The `@MessageBundle` can be used to define the default strategy used to generate message keys from method names.  However, the `@Message` can override this strategy and even define a custom key.  By default, the annotated element's name is used as-is.  Other possibilities are:"
msgstr "键被直接用于模板中。捆绑名称在模板表达式中被作为命名空间使用。 `@MessageBundle` 可以用来定义用于从方法名生成消息键的默认策略。然而， `@Message` 可以覆盖这个策略，甚至定义一个自定义的键。默认情况下，被注释的元素的名字是按原样使用的。其他的可能性是"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2060
#, fuzzy
msgid "De-camel-cased and hyphenated; e.g. `helloName()` -> `hello-name`"
msgstr "去掉camel-cased和连字符；例如： `helloName()` → `hello-name` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2061
#, fuzzy
msgid "De-camel-cased and parts separated by underscores; e.g. `helloName()` -> `hello_name`."
msgstr "去掉camel-cased，各部分用下划线分开；例如： `helloName()` → `hello_name` 。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:2062
#, fuzzy, no-wrap
msgid "Validation"
msgstr "审定"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2065
#, fuzzy
msgid "All message bundle templates are validated:"
msgstr "所有的消息捆绑模板都经过验证。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2066
#, fuzzy
msgid "All expressions without a namespace must map to a parameter; e.g. `Hello {foo}` -> the method must have a param of name `foo`"
msgstr "所有没有命名空间的表达式都必须映射到一个参数；例如， `Hello {foo}` → 方法必须有一个名称为param的参数。 `foo` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2067
#, fuzzy
msgid "All expressions are validated against the types of the parameters; e.g. `Hello {foo.bar}` where the parameter `foo` is of type `org.acme.Foo` -> `org.acme.Foo` must have a property of name `bar`"
msgstr "所有表达式都根据参数的类型进行验证；例如： `Hello {foo.bar}` ，其中参数 `foo` 的类型为 `org.acme.Foo` → `org.acme.Foo` ，必须有一个名称的属性。 `bar` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2069
#, fuzzy
msgid "A warning message is logged for each _unused_ parameter."
msgstr "每个 _未使用的_ 参数都会有一条警告信息被记录下来。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2070
#, fuzzy
msgid "Expressions that reference a message bundle method, such as `{msg:hello(item.name)}`, are validated too."
msgstr "引用消息捆绑方法的表达式，如 `{msg:hello(item.name)}` ，也要进行验证。"

#. type: Title ====
#: upstream/_guides/qute-reference.adoc:2071
#, fuzzy, no-wrap
msgid "Localization"
msgstr "本地化"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2076
#, fuzzy
msgid "The default locale specified via the `quarkus.default-locale` config property is used for the `@MessageBundle` interface by default.  However, the `io.quarkus.qute.i18n.MessageBundle#locale()` can be used to specify a custom locale.  Additionally, there are two ways to define a localized bundle:"
msgstr "通过 `quarkus.default-locale` config属性指定的默认locale，默认用于 `@MessageBundle` 接口。然而， `io.quarkus.qute.i18n.MessageBundle#locale()` ，可以用来指定一个自定义的locale。此外，有两种方法可以定义一个本地化的捆绑包。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2078
#, fuzzy
msgid "Create an interface that extends the default interface that is annotated with `@Localized`"
msgstr "创建一个扩展默认接口的接口，该接口被注释为 `@Localized` "

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2079
#, fuzzy
msgid "Create an UTF-8 encoded file located in the `src/main/resources/messages` directory of an application archive; e.g. `msg_de.properties`."
msgstr "创建一个UTF-8编码的文件，位于应用程序存档的 `src/main/resources/messages` 目录中；例如： `msg_de.properties` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2081
#, fuzzy
msgid "While a localized interface enables easy refactoring an external file might be more convenient in many situations."
msgstr "虽然本地化的接口可以使重构变得容易，但在许多情况下，外部文件可能更方便。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:2082
#, fuzzy, no-wrap
msgid "Localized Interface Example"
msgstr "本地化界面示例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2087
#, no-wrap
msgid ""
"import io.quarkus.qute.i18n.Localized;\n"
"import io.quarkus.qute.i18n.Message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2090
#, no-wrap
msgid ""
"@Localized(\"de\") <1>\n"
"public interface GermanAppMessages extends AppMessages {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2095
#, no-wrap
msgid ""
"    @Override\n"
"    @Message(\"Hallo {name}!\") <2>\n"
"    String hello_name(String name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2097
#, fuzzy
msgid "The value is the locale tag string (IETF)."
msgstr "该值是locale标签字符串（IETF）。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2098
#, fuzzy
msgid "The value is the localized template."
msgstr "该值是本地化的模板。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2108
#, fuzzy
msgid "Message bundle files must be encoded in _UTF-8_.  The file name consists of the relevant bundle name (e.g. `msg`) and underscore followed by the locate tag (IETF).  The file format is very simple: each line represents either a key/value pair with the equals sign used as a separator or a comment (line starts with `#`).  Blank lines are ignored.  Keys are _mapped to method names_ from the corresponding message bundle interface.  Values represent the templates normally defined by `io.quarkus.qute.i18n.Message#value()`.  A value may be spread out across several adjacent normal lines.  In such case, the line terminator must be escaped with a backslash character `\\`.  The behavior is very similar to the behavior of the `java.util.Properties.load(Reader)` method."
msgstr "消息包文件必须以 _UTF-8_ 编码。文件名由相关的捆绑文件名（例如： `msg` ）和下划线组成，后面是定位标签（IETF）。文件格式非常简单：每一行代表一个键/值对，用等号作为分隔符，或者是一个注释（行以 `#` 开始）。空白行被忽略。键被 _映射到_ 相应的消息捆绑接口的 _方法名称_ 上。值代表了通常由 `io.quarkus.qute.i18n.Message#value()` 定义的模板。一个值可能分散在几个相邻的正常行中。在这种情况下，行结束符必须用反斜线字符转义 `\\` 。该行为与 `java.util.Properties.load(Reader)` 方法的行为非常相似。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:2109
#, fuzzy, no-wrap
msgid "Localized File Example - `msg_de.properties`"
msgstr "本地化文件的例子 - `msg_de.properties` "

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2114
#, no-wrap
msgid ""
"# This comment is ignored\n"
"hello_name=Hallo {name}! <1> <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2116
#, fuzzy
msgid "Each line in a localized file represents a key/value pair. The key must correspond to a method declared on the message bundle interface. The value is the message template."
msgstr "本地化文件中的每一行代表一个键/值对。键必须对应于消息捆绑接口上声明的方法。值是消息模板。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2117
#, fuzzy
msgid "Keys and values are separated by the equals sign."
msgstr "键和值用等号分开。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2119
#, fuzzy
msgid "We use the `.properties` suffix in our example because most IDEs and text editors support syntax highlighting of `.properties` files. But in fact, the suffix could be anything - it is just ignored."
msgstr "在我们的例子中，我们使用 `.properties` 后缀，因为大多数IDE和文本编辑器支持 `.properties` 文件的语法高亮。但事实上，后缀可以是任何东西 - 它只是被忽略。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2121
#, fuzzy
msgid "An example properties file is generated into the target directory for each message bundle interface automatically. For example, by default if no name is specified for `@MessageBundle` the file `target/qute-i18n-examples/msg.properties` is generated when the application is build via `mvn clean package`. You can use this file as a base for a specific locale. Just rename the file - e.g. `msg_fr.properties`, change the message templates and move it in the `src/main/resources/messages` directory."
msgstr "每个消息捆绑接口都会在目标目录下自动生成一个示例属性文件。例如，默认情况下，如果没有为 `@MessageBundle` 指定名称，那么当应用程序通过 `mvn clean package` 构建时，会生成 `target/qute-i18n-examples/msg.properties` 文件。你可以使用这个文件作为一个特定地区的基础。只需重命名该文件--例如： `msg_fr.properties` ，改变消息模板并将其移至 `src/main/resources/messages` 目录中。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:2122
#, fuzzy, no-wrap
msgid "Value Spread Out Across Several Adjacent Lines"
msgstr "价值分散在几个相邻的行中"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2128
#, no-wrap
msgid ""
"hello=Hello \\\n"
"   {name} and \\\n"
"   good morning!\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2130
#, fuzzy
msgid "Note that the line terminator is escaped with a backslash character `\\` and white space at the start of the following line is ignored. I.e. `{msg:hello('Edgar')}` would be rendered as `Hello Edgar and good morning!`."
msgstr "请注意，行结束符是用反斜杠字符 `\\` ，下一行开始的白色空间被忽略。即： `{msg:hello('Edgar')}` 将被呈现为 `Hello Edgar and good morning!` 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2134
#, fuzzy
msgid "Once we have the localized bundles defined we need a way to _select_ the correct bundle for a specific template instance, i.e. to specify the locale for all message bundle expressions in the template.  By default, the locale specified via the `quarkus.default-locale` configuration property is used to select the bundle.  Alternatively, you can specify the `locale` attribute of a template instance."
msgstr "一旦我们定义了本地化的bundle，我们需要一种方法来为特定的模板实例 _选择_ 正确的bundle，即为模板中的所有消息bundle表达式指定语言。默认情况下，通过 `quarkus.default-locale` 配置属性指定的locale被用来选择捆绑物。另外，你也可以指定模板实例的 `locale` 属性。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:2135
#, fuzzy, no-wrap
msgid "`locale` Attribute Example"
msgstr " `locale` 属性实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2140
#: upstream/_guides/qute-reference.adoc:2161
#, no-wrap
msgid ""
"@Singleton\n"
"public class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2143
#, no-wrap
msgid ""
"    @Inject\n"
"    Template hello;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2148
#, no-wrap
msgid ""
"    String render() {\n"
"       return hello.instance().setAttribute(\"locale\", Locale.forLanguageTag(\"cs\")).render(); <1>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2150
#, fuzzy
msgid "You can set a `Locale` instance or a locale tag string (IETF)."
msgstr "你可以设置一个 `Locale` 实例或一个locale标签字符串（IETF）。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2153
#, fuzzy
msgid "When using <<resteasy_integration,quarkus-resteasy-qute>> the `locale` attribute is derived from the the `Accept-Language` header if not set by a user."
msgstr "当使用 link:#resteasy_integration[quarkus-resteasy-qute] 时，如果用户没有设置， `locale` 属性会从 `Accept-Language` 头部派生。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2155
#, fuzzy
msgid "The `@Localized` qualifier can be used to inject a localized message bundle interface."
msgstr " `@Localized` 修饰语可以用来注入一个本地化的消息捆绑接口。"

#. type: Block title
#: upstream/_guides/qute-reference.adoc:2156
#, fuzzy, no-wrap
msgid "Injected Localized Message Bundle Example"
msgstr "注入的本地化消息包实例"

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2164
#, no-wrap
msgid ""
"    @Localized(\"cs\") <1>\n"
"    AppMessages msg;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/qute-reference.adoc:2169
#, no-wrap
msgid ""
"    String render() {\n"
"       return msg.hello_name(\"Jachym\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2171
#, fuzzy
msgid "The annotation value is a locale tag string (IETF)."
msgstr "注释值是一个locale标签字符串（IETF）。"

#. type: Title ===
#: upstream/_guides/qute-reference.adoc:2173
#, fuzzy, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#. type: Title ==
#: upstream/_guides/qute-reference.adoc:2179
#, fuzzy, no-wrap
msgid "Qute Used as a Standalone Library"
msgstr "Qute作为一个独立的图书馆使用"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2184
#, fuzzy
msgid "Qute is primarily designed as a Quarkus extension.  However. it is possible to use it as a \"standalone\" library.  In this case, some features are not available and some additional configuration is needed."
msgstr "Qute主要被设计为Quarkus的一个扩展。然而，它也可以作为一个 \"独立 \"的库使用。在这种情况下，有些功能是不可用的，需要一些额外的配置。"

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:2185
#, fuzzy, no-wrap
msgid "Engine"
msgstr "发动机"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2187
#, fuzzy
msgid "First of all, no managed `Engine` instance is available out of the box.  You'll need to configure a new instance via `Engine.builder()`."
msgstr "首先，没有管理的 `Engine` 实例是开箱即用的。你需要通过 `Engine.builder()` 来配置一个新的实例。"

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:2188
#, fuzzy, no-wrap
msgid "Templates"
msgstr "模板"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2190
#, fuzzy
msgid "By default, no <<template-locator,template locators>> are registered, i.e. `Engine.getTemplate(String)` will not work."
msgstr "默认情况下，没有注册 link:#template-locator[模板定位器] ，也就是说， `Engine.getTemplate(String)` ，将无法工作。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2191
#, fuzzy
msgid "You can register a custom template locator or parse a template manually and put the reulst in the cache via `Engine.putTemplate(String, Template)`."
msgstr "你可以注册一个自定义的模板定位器，或者手动解析一个模板，并通过 `Engine.putTemplate(String, Template)` ，将其放入缓存。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2194
#, fuzzy
msgid "No section helpers are registered by default."
msgstr "默认情况下，没有注册任何部门的助手。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2195
#, fuzzy
msgid "The default set of value resolvers can be registered via the convenient `EngineBuilder.addDefaultSectionHelpers()` method and the `EngineBuilder.addDefaults()` method respectively."
msgstr "默认的价值解析器集可以分别通过方便的 `EngineBuilder.addDefaultSectionHelpers()` 方法和 `EngineBuilder.addDefaults()` 方法注册。"

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:2196
#, fuzzy, no-wrap
msgid "Value resolvers"
msgstr "价值解析器"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2198
#, fuzzy
msgid "No <<value-resolvers,``ValueResolver``s>> are generated automatically."
msgstr "没有自动生成 link:#value-resolvers[`ValueResolver`] 。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2199
#, fuzzy
msgid "<<template_extension_methods,`@TemplateExtension` methods>> will not work."
msgstr "link:#template_extension_methods[`@TemplateExtension`] 的 link:#template_extension_methods[方法] 将不会起作用。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2200
#, fuzzy
msgid "<<template_data,`@TemplateData`>> and <<convenient-annotation-for-enums,`@TemplateEnum`>> annotations are ignored."
msgstr "link:#template_data[`@TemplateData`] 和 link:#convenient-annotation-for-enums[`@TemplateEnum`] 注释被忽略。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2201
#, fuzzy
msgid "The default set of value resolvers can be registered via the convenient `EngineBuilder.addDefaultValueResolvers()` method and the `EngineBuilder.addDefaults()` method respectively."
msgstr "默认的价值解析器集可以分别通过方便的 `EngineBuilder.addDefaultValueResolvers()` 方法和 `EngineBuilder.addDefaults()` 方法注册。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2203
#, fuzzy
msgid "Not all functionality provided by the built-in extension methods is covered by the default value resolvers. However, a custom value resolver can be easily built via the `ValueResolver.builder()`."
msgstr "默认值解析器并没有涵盖内置扩展方法提供的所有功能。然而，可以通过 `ValueResolver.builder()` .NET来轻松构建一个自定义的值解析器。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2204
#, fuzzy
msgid "It's recommended to register a `ReflectionValueResolver` instance via `Engine.addValueResolver(new ReflectionValueResolver())` so that Qute can access object properties and call public methods."
msgstr "建议通过 `Engine.addValueResolver(new ReflectionValueResolver())` 注册一个 `ReflectionValueResolver` 实例，这样Qute就可以访问对象属性和调用公共方法。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2206
#, fuzzy
msgid "Keep in mind that reflection may not work correctly in some restricted environments or may require additional configuration, e.g. registration in case of a GraalVM native image."
msgstr "请记住，在某些受限制的环境中，反射可能无法正常工作，或者需要额外的配置，例如在GraalVM本地镜像的情况下需要注册。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2209
#, fuzzy
msgid "No user-defined tags are registered automatically."
msgstr "没有用户定义的标签被自动注册。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2210
#, fuzzy
msgid "A tag can be registered manually via `Engine.builder().addSectionHelper(new UserTagSectionHelper.Factory(\"tagName\",\"tagTemplate.html\")).build()`"
msgstr "一个标签可以通过以下方式手动注册 `Engine.builder().addSectionHelper(new UserTagSectionHelper.Factory(\"tagName\",\"tagTemplate.html\")).build()` "

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:2211
#, fuzzy, no-wrap
msgid "Type-safety"
msgstr "类型-安全"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2213
#, fuzzy
msgid "<<typesafe_expressions>> are not validated."
msgstr "link:#typesafe_expressions[[typesafe_expressions]] 未被验证。"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2214
#, fuzzy
msgid "<<type-safe-message-bundles,Type-safe message bundles>> are not supported."
msgstr "不支持 link:#type-safe-message-bundles[类型安全的消息包] 。"

#. type: Labeled list
#: upstream/_guides/qute-reference.adoc:2215
#, fuzzy, no-wrap
msgid "Injection"
msgstr "注射"

#. type: Plain text
#: upstream/_guides/qute-reference.adoc:2215
msgid "It is not possible to inject a `Template` instance and vice versa - a template cannot inject a `@Named` CDI bean via the `inject:` and `cdi:` namespace."
msgstr ""
