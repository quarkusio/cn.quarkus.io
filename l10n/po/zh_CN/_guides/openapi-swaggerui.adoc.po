# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/openapi-swaggerui.adoc:6
#, fuzzy, no-wrap
msgid "Using OpenAPI and Swagger UI"
msgstr "使用OpenAPI和Swagger UI"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:12
#, fuzzy
msgid "This guide explains how your Quarkus application can expose its API description through an OpenAPI specification and how you can test it via a user-friendly UI named Swagger UI."
msgstr "本指南解释了你的Quarkus应用程序如何通过OpenAPI规范公开其API描述，以及你如何通过一个名为Swagger UI的用户友好界面进行测试。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:13
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:17
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:21
#, fuzzy
msgid "In this guide, we create a straightforward REST application to demonstrate how fast you can expose your API specification and benefit from a user interface to test it."
msgstr "在本指南中，我们创建了一个简单明了的REST应用程序，以证明你可以多快地公开你的API规范，并从测试它的用户界面中受益。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:22
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:26
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can skip right to the completed example."
msgstr "我们建议你按照下面几节的说明，一步一步地创建应用程序。不过，你可以直接跳到完成的例子。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:28
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个{quickstarts-archive-url}[存档]。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:30
#, fuzzy
msgid "The solution is located in the `openapi-swaggerui-quickstart` {quickstarts-tree-url}/openapi-swaggerui-quickstart[directory]."
msgstr "该解决方案位于 `openapi-swaggerui-quickstart` {quickstarts-tree-url}/openapi-swaggerui-quickstart[目录]中。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:31
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:34
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:39
#, fuzzy, no-wrap
msgid "Expose a REST Resource"
msgstr "暴露一个REST资源"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:43
#, fuzzy
msgid "We will create a `Fruit` bean and a `FruitResource` REST resource (feel free to take a look to the xref:rest-json.adoc[Writing JSON REST services guide] if your want more details on how to build a REST API with Quarkus)."
msgstr "我们将创建一个 `Fruit` bean和一个 `FruitResource` REST资源（如果你想了解更多关于如何用Quarkus建立REST API的细节，请随时看看《 link:rest-json.html[编写JSON REST服务指南] 》）。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:47
#: upstream/_guides/openapi-swaggerui.adoc:66
#: upstream/_guides/openapi-swaggerui.adoc:109
#, no-wrap
msgid "package org.acme.openapi.swaggerui;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:49
#, no-wrap
msgid "public class Fruit {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:52
#, no-wrap
msgid ""
"    public String name;\n"
"    public String description;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:55
#, no-wrap
msgid ""
"    public Fruit() {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:61
#, no-wrap
msgid ""
"    public Fruit(String name, String description) {\n"
"        this.name = name;\n"
"        this.description = description;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:74
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.DELETE;\n"
"import javax.ws.rs.Path;\n"
"import java.util.Collections;\n"
"import java.util.LinkedHashMap;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:77
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:79
#, no-wrap
msgid "    private Set<Fruit> fruits = Collections.newSetFromMap(Collections.synchronizedMap(new LinkedHashMap<>()));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:84
#, no-wrap
msgid ""
"    public FruitResource() {\n"
"        fruits.add(new Fruit(\"Apple\", \"Winter fruit\"));\n"
"        fruits.add(new Fruit(\"Pineapple\", \"Tropical fruit\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:89
#, no-wrap
msgid ""
"    @GET\n"
"    public Set<Fruit> list() {\n"
"        return fruits;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:95
#, no-wrap
msgid ""
"    @POST\n"
"    public Set<Fruit> add(Fruit fruit) {\n"
"        fruits.add(fruit);\n"
"        return fruits;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:102
#, no-wrap
msgid ""
"    @DELETE\n"
"    public Set<Fruit> delete(Fruit fruit) {\n"
"        fruits.removeIf(existingFruit -> existingFruit.name.contentEquals(fruit.name));\n"
"        return fruits;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:105
#, fuzzy
msgid "You can also create a test:"
msgstr "你也可以创建一个测试。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:112
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:114
#, no-wrap
msgid "import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:118
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
"import static org.hamcrest.Matchers.containsInAnyOrder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:121
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class FruitResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:132
#, no-wrap
msgid ""
"    @Test\n"
"    public void testList() {\n"
"        given()\n"
"                .when().get(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"$.size()\", is(2),\n"
"                        \"name\", containsInAnyOrder(\"Apple\", \"Pineapple\"),\n"
"                        \"description\", containsInAnyOrder(\"Winter fruit\", \"Tropical fruit\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:145
#, no-wrap
msgid ""
"    @Test\n"
"    public void testAdd() {\n"
"        given()\n"
"                .body(\"{\\\"name\\\": \\\"Pear\\\", \\\"description\\\": \\\"Winter fruit\\\"}\")\n"
"                .header(\"Content-Type\", MediaType.APPLICATION_JSON)\n"
"                .when()\n"
"                .post(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"$.size()\", is(3),\n"
"                        \"name\", containsInAnyOrder(\"Apple\", \"Pineapple\", \"Pear\"),\n"
"                        \"description\", containsInAnyOrder(\"Winter fruit\", \"Tropical fruit\", \"Winter fruit\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:158
#, no-wrap
msgid ""
"        given()\n"
"                .body(\"{\\\"name\\\": \\\"Pear\\\", \\\"description\\\": \\\"Winter fruit\\\"}\")\n"
"                .header(\"Content-Type\", MediaType.APPLICATION_JSON)\n"
"                .when()\n"
"                .delete(\"/fruits\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(\"$.size()\", is(2),\n"
"                        \"name\", containsInAnyOrder(\"Apple\", \"Pineapple\"),\n"
"                        \"description\", containsInAnyOrder(\"Winter fruit\", \"Tropical fruit\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:160
#, fuzzy, no-wrap
msgid "Expose OpenAPI Specifications"
msgstr "暴露OpenAPI规范"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:166
#, fuzzy
msgid "Quarkus provides the https://github.com/smallrye/smallrye-open-api/[Smallrye OpenAPI] extension compliant with the https://github.com/eclipse/microprofile-open-api/[MicroProfile OpenAPI] specification in order to generate your API https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.0.md[OpenAPI v3 specification]."
msgstr "Quarkus提供符合 link:https://github.com/eclipse/microprofile-open-api/[MicroProfile OpenAPI] 规范的 link:https://github.com/smallrye/smallrye-open-api/[Smallrye OpenAPI] 扩展，以便生成你的API link:https://github.com/OAI/OpenAPI-Specification/blob/main/versions/3.0.0.md[OpenAPI v3规范] 。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:168
#, fuzzy
msgid "You just need to add the `openapi` extension to your Quarkus application:"
msgstr "你只需要在你的Quarkus应用程序中添加 `openapi` 扩展。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:173
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容。"

#. type: Block title
#: upstream/_guides/openapi-swaggerui.adoc:175
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:181
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/openapi-swaggerui.adoc:184
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:187
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-smallrye-openapi\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:190
#: upstream/_guides/openapi-swaggerui.adoc:481
#, fuzzy
msgid "Now, we are ready to run our application:"
msgstr "现在，我们已经准备好运行我们的应用程序。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:194
#, fuzzy
msgid "Once your application is started, you can make a request to the default `/q/openapi` endpoint:"
msgstr "一旦你的应用程序被启动，你可以向默认的 `/q/openapi` 端点提出请求。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:240
#, no-wrap
msgid ""
"$ curl http://localhost:8080/q/openapi\n"
"openapi: 3.0.3\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /fruits:\n"
"    get:\n"
"      responses:\n"
"        200:\n"
"          description: OK\n"
"          content:\n"
"            application/json: {}\n"
"    post:\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Fruit'\n"
"      responses:\n"
"        200:\n"
"          description: OK\n"
"          content:\n"
"            application/json: {}\n"
"    delete:\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Fruit'\n"
"      responses:\n"
"        200:\n"
"          description: OK\n"
"          content:\n"
"            application/json: {}\n"
"components:\n"
"  schemas:\n"
"    Fruit:\n"
"      properties:\n"
"        description:\n"
"          type: string\n"
"        name:\n"
"          type: string\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:245
#, fuzzy
msgid "If you do not like the default endpoint location `/q/openapi`, you can change it by adding the following configuration to your `application.properties`:"
msgstr "如果你不喜欢默认的端点位置 `/q/openapi` ，你可以通过添加以下配置来改变它 `application.properties` 。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:248
#, no-wrap
msgid "quarkus.smallrye-openapi.path=/swagger\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:254
#, fuzzy
msgid "You can request the OpenAPI in JSON format using the `format` query parameter. For example:"
msgstr "你可以使用 `format` 查询参数请求JSON格式的OpenAPI。比如说。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:257
#, no-wrap
msgid "/q/openapi?format=json\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:262
#: upstream/_guides/openapi-swaggerui.adoc:503
#, fuzzy
msgid "Hit `CTRL+C` to stop the application."
msgstr "点击 `CTRL+C` ，停止应用程序。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:263
#, fuzzy, no-wrap
msgid "Providing Application Level OpenAPI Annotations"
msgstr "提供应用层面的OpenAPI注解"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:266
#, fuzzy
msgid "There are some MicroProfile OpenAPI annotations which describe global API information, such as the following:"
msgstr "有一些MicroProfile的OpenAPI注释描述了全局的API信息，比如说下面这些。"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:268
#, fuzzy
msgid "API Title"
msgstr "API标题"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:269
#, fuzzy
msgid "API Description"
msgstr "API描述"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:270
#, fuzzy
msgid "Version"
msgstr "版本"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:271
#, fuzzy
msgid "Contact Information"
msgstr "联系信息"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:272
#, fuzzy
msgid "License"
msgstr "许可证"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:277
#, fuzzy
msgid "All of this information (and more) can be included in your Java code by using appropriate OpenAPI annotations on a JAX-RS `Application` class.  Because a JAX-RS `Application` class is not required in Quarkus, you will likely have to create one.  It can simply be an empty class that extends `javax.ws.rs.core.Application`.  This empty class can then be annotated with various OpenAPI annotations such as `@OpenAPIDefinition`.  For example:"
msgstr "所有这些信息（以及更多）都可以通过在JAX-RS `Application` 类上使用适当的OpenAPI注解来包含在你的Java代码中。因为Quarkus中不需要JAX-RS `Application` 类，所以你可能需要创建一个。它可以是一个扩展了 `javax.ws.rs.core.Application` 的空类。这个空类可以用各种OpenAPI注解来注解，如 `@OpenAPIDefinition` 。比如说。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:298
#, no-wrap
msgid ""
"@OpenAPIDefinition(\n"
"    tags = {\n"
"            @Tag(name=\"widget\", description=\"Widget operations.\"),\n"
"            @Tag(name=\"gasket\", description=\"Operations related to gaskets\")\n"
"    },\n"
"    info = @Info(\n"
"        title=\"Example API\",\n"
"        version = \"1.0.1\",\n"
"        contact = @Contact(\n"
"            name = \"Example API Support\",\n"
"            url = \"http://exampleurl.com/contact\",\n"
"            email = \"techsupport@example.com\"),\n"
"        license = @License(\n"
"            name = \"Apache 2.0\",\n"
"            url = \"https://www.apache.org/licenses/LICENSE-2.0.html\"))\n"
")\n"
"public class ExampleApiApplication extends Application {\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:302
#, fuzzy
msgid "Another option, that is a feature provided by SmallRye and not part of the specification, is to use configuration to add this global API information.  This way, you do not need to have a JAX-RS `Application` class, and you can name the API differently per environment."
msgstr "另一个选择是由SmallRye提供的功能，而不是规范的一部分，就是使用配置来添加这个全局API信息。这样，你就不需要有一个JAX-RS `Application` 类，而且你可以在每个环境中以不同的方式命名API。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:304
#, fuzzy
msgid "For example, add the following to your `application.properties`:"
msgstr "例如，将以下内容添加到你的 `application.properties` 。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:318
#, no-wrap
msgid ""
"quarkus.smallrye-openapi.info-title=Example API\n"
"%dev.quarkus.smallrye-openapi.info-title=Example API (development)\n"
"%test.quarkus.smallrye-openapi.info-title=Example API (test)\n"
"quarkus.smallrye-openapi.info-version=1.0.1\n"
"quarkus.smallrye-openapi.info-description=Just an example service\n"
"quarkus.smallrye-openapi.info-terms-of-service=Your terms here\n"
"quarkus.smallrye-openapi.info-contact-email=techsupport@example.com\n"
"quarkus.smallrye-openapi.info-contact-name=Example API Support\n"
"quarkus.smallrye-openapi.info-contact-url=http://exampleurl.com/contact\n"
"quarkus.smallrye-openapi.info-license-name=Apache 2.0\n"
"quarkus.smallrye-openapi.info-license-url=https://www.apache.org/licenses/LICENSE-2.0.html\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:321
#, fuzzy
msgid "This will give you similar information as the `@OpenAPIDefinition` example above."
msgstr "这将给你提供与上述 `@OpenAPIDefinition` 例子类似的信息。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:322
#, fuzzy, no-wrap
msgid "Loading OpenAPI Schema From Static Files"
msgstr "从静态文件加载OpenAPI模式"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:327
#, fuzzy
msgid "Instead of dynamically creating OpenAPI schemas from annotation scanning, Quarkus also supports serving static OpenAPI documents.  The static file to serve must be a valid document conforming to the https://swagger.io/docs/specification[OpenAPI specification].  An OpenAPI document that conforms to the OpenAPI Specification is itself a valid JSON object, that can be represented in `yaml` or `json` formats."
msgstr "Quarkus也支持提供静态的OpenAPI文件，而不是从注释扫描中动态地创建OpenAPI模式。要服务的静态文件必须是一个符合 link:https://swagger.io/docs/specification[OpenAPI规范] 的有效文件。符合OpenAPI规范的OpenAPI文档本身就是一个有效的JSON对象，它可以用 `yaml` 或 `json` 格式表示。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:330
#, fuzzy
msgid "To see this in action, we'll put OpenAPI documentation under `META-INF/openapi.yaml` for our `/fruits` endpoints.  Quarkus also supports alternative <<open-document-paths, OpenAPI document paths>> if you prefer."
msgstr "为了看到这一点，我们将把OpenAPI文档放在 `META-INF/openapi.yaml` ，用于我们的 `/fruits` 端点。如果你愿意，Quarkus也支持其他 link:#open-document-paths[OpenAPI文档路径] 。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:338
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Static OpenAPI document of fruits resource\n"
"  description: Fruit resources Open API documentation\n"
"  version: \"1.0\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:342
#, no-wrap
msgid ""
"servers:\n"
"  - url: http://localhost:8080/q/openapi\n"
"    description: Optional dev mode server description\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:381
#, no-wrap
msgid ""
"paths:\n"
"  /fruits:\n"
"    get:\n"
"      responses:\n"
"        200:\n"
"          description: OK - fruits list\n"
"          content:\n"
"            application/json: {}\n"
"    post:\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Fruit'\n"
"      responses:\n"
"        200:\n"
"          description: new fruit resource created\n"
"          content:\n"
"            application/json: {}\n"
"    delete:\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Fruit'\n"
"      responses:\n"
"        200:\n"
"          description: OK - fruit resource deleted\n"
"          content:\n"
"            application/json: {}\n"
"components:\n"
"  schemas:\n"
"    Fruit:\n"
"      properties:\n"
"        description:\n"
"          type: string\n"
"        name:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:384
#, fuzzy
msgid "By default, a request to `/q/openapi` will serve the combined OpenAPI document from the static file and the model generated from application endpoints code.  We can however change this to only serve the static OpenAPI document by adding `mp.openapi.scan.disable=true` configuration into `application.properties`."
msgstr "默认情况下，对 `/q/openapi` 的请求将提供来自静态文件和应用端点代码生成的模型的组合OpenAPI文档。然而，我们可以通过在 `mp.openapi.scan.disable=true` 配置中加入 `application.properties` ，将其改为只提供静态的OpenAPI文档。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:386
#, fuzzy
msgid "Now, a request to `/q/openapi` endpoint will serve the static OpenAPI document instead of the generated one."
msgstr "现在，对 `/q/openapi` 端点的请求将提供静态的OpenAPI文件，而不是生成的文件。"

#. type: Block title
#: upstream/_guides/openapi-swaggerui.adoc:389
#, fuzzy, no-wrap
msgid "About OpenAPI document paths"
msgstr "关于OpenAPI的文件路径"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:393
#, fuzzy
msgid "Quarkus supports various paths to store your OpenAPI document under. We recommend you place it under `META-INF/openapi.yml`.  Alternative paths are:"
msgstr "Quarkus支持各种路径来存储你的OpenAPI文档。我们建议你把它放在 `META-INF/openapi.yml` 。可供选择的路径是。"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:395
#, fuzzy
msgid "`META-INF/openapi.yaml`"
msgstr " `META-INF/openapi.yaml` "

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:396
#, fuzzy
msgid "`META-INF/openapi.yml`"
msgstr " `META-INF/openapi.yml` "

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:397
#, fuzzy
msgid "`META-INF/openapi.json`"
msgstr " `META-INF/openapi.json` "

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:398
#, fuzzy
msgid "`WEB-INF/classes/META-INF/openapi.yml`"
msgstr " `WEB-INF/classes/META-INF/openapi.yml` "

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:399
#, fuzzy
msgid "`WEB-INF/classes/META-INF/openapi.yaml`"
msgstr " `WEB-INF/classes/META-INF/openapi.yaml` "

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:400
#, fuzzy
msgid "`WEB-INF/classes/META-INF/openapi.json`"
msgstr " `WEB-INF/classes/META-INF/openapi.json` "

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:402
#, fuzzy
msgid "Live reload of static OpenAPI document is supported during development. A modification to your OpenAPI document will be picked up on fly by Quarkus."
msgstr "在开发过程中支持静态OpenAPI文档的实时重新加载。对你的OpenAPI文档的修改将被Quarkus即时接收。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:404
#, fuzzy, no-wrap
msgid "Changing the OpenAPI version"
msgstr "改变OpenAPI的版本"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:408
#, fuzzy
msgid "By default, when the document is generated, the OpenAPI version used will be `3.0.3`. If you use a static file as mentioned above, the version in the file will be used. You can also define the version in SmallRye using the following configuration:"
msgstr "默认情况下，当文件被生成时，使用的OpenAPI版本将是 `3.0.3` 。如果你使用上面提到的静态文件，将使用该文件中的版本。你也可以使用以下配置在SmallRye中定义版本。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:412
#, no-wrap
msgid "mp.openapi.extensions.smallrye.openapi=3.0.2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:415
#, fuzzy
msgid "This might be useful if your API goes through a Gateway that needs a certain version."
msgstr "如果你的API通过一个需要特定版本的网关，这可能是有用的。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:416
#, fuzzy, no-wrap
msgid "Auto-generation of Operation Id"
msgstr "自动生成操作标识"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:420
#, fuzzy
msgid "The https://swagger.io/docs/specification/paths-and-operations/[Operation Id] can be set using the `@Operation` annotation, and is in many cases useful when using a tool to generate a client stub from the schema.  The Operation Id is typically used for the method name in the client stub. In SmallRye, you can auto-generate this Operation Id by using the following configuration:"
msgstr "link:https://swagger.io/docs/specification/paths-and-operations/[操作标识] 可以使用 `@Operation` 注释来设置，在很多情况下，当使用工具从模式中生成客户端存根时，它是非常有用的。该操作标识通常用于客户端存根中的方法名称。在SmallRye中，你可以通过使用以下配置来自动生成该操作标识。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:424
#, no-wrap
msgid "mp.openapi.extensions.smallrye.operationIdStrategy=METHOD\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:427
#, fuzzy
msgid "Now you do not need to use the `@Operation` annotation. While generating the document, the method name will be used for the Operation Id."
msgstr "现在你不需要使用 `@Operation` 注释了。在生成文档时，方法名称将被用于操作标识。"

#. type: Block title
#: upstream/_guides/openapi-swaggerui.adoc:428
#, fuzzy, no-wrap
msgid "The strategies available for generating the Operation Id"
msgstr "可用于生成操作标识的策略"

#. type: Table
#: upstream/_guides/openapi-swaggerui.adoc:430
#, fuzzy, no-wrap
msgid "Property value"
msgstr "财产价值"

#. type: Table
#: upstream/_guides/openapi-swaggerui.adoc:432
#, fuzzy, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: upstream/_guides/openapi-swaggerui.adoc:433
#, fuzzy, no-wrap
msgid "`METHOD`"
msgstr " `METHOD` "

#. type: Table
#: upstream/_guides/openapi-swaggerui.adoc:435
#, fuzzy, no-wrap
msgid "Use the method name."
msgstr "使用方法名称。"

#. type: Table
#: upstream/_guides/openapi-swaggerui.adoc:436
#, fuzzy, no-wrap
msgid "`CLASS_METHOD`"
msgstr " `CLASS_METHOD` "

#. type: Table
#: upstream/_guides/openapi-swaggerui.adoc:438
#, fuzzy, no-wrap
msgid "Use the class name (without the package) plus the method."
msgstr "使用类的名称（不包括包）加上方法。"

#. type: Table
#: upstream/_guides/openapi-swaggerui.adoc:439
#, fuzzy, no-wrap
msgid "`PACKAGE_CLASS_METHOD`"
msgstr " `PACKAGE_CLASS_METHOD` "

#. type: Table
#: upstream/_guides/openapi-swaggerui.adoc:440
#, fuzzy, no-wrap
msgid "Use the class name plus the method name."
msgstr "使用类的名称加上方法的名称。"

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:443
#, fuzzy, no-wrap
msgid "Use Swagger UI for development"
msgstr "使用Swagger UI进行开发"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:448
#, fuzzy
msgid "When building APIs, developers want to test them quickly. https://swagger.io/tools/swagger-ui/[Swagger UI] is a great tool permitting to visualize and interact with your APIs.  The UI is automatically generated from your OpenAPI specification."
msgstr "在构建API时，开发者希望能快速测试它们。 link:https://swagger.io/tools/swagger-ui/[Swagger UI] 是一个很好的工具，可以让你的API可视化并与之互动。该UI是由你的OpenAPI规范自动生成的。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:450
#, fuzzy
msgid "The Quarkus `smallrye-openapi` extension comes with a `swagger-ui` extension embedding a properly configured Swagger UI page."
msgstr "Quarkus `smallrye-openapi` 扩展附带了一个 `swagger-ui` 扩展，嵌入了一个正确配置的Swagger UI页面。"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:454
#, fuzzy
msgid "By default, Swagger UI is only available when Quarkus is started in dev or test mode."
msgstr "默认情况下，Swagger UI只在Quarkus以开发或测试模式启动时可用。"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:456
#, fuzzy
msgid "If you want to make it available in production too, you can include the following configuration in your `application.properties`:"
msgstr "如果你想让它在生产中也能使用，你可以在你的 `application.properties` 中包括以下配置。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:459
#, no-wrap
msgid "quarkus.swagger-ui.always-include=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:462
#, fuzzy
msgid "This is a build time property, it cannot be changed at runtime after your application is built."
msgstr "这是一个构建时的属性，在你的应用程序被构建后，它不能在运行时改变。"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:466
#, fuzzy
msgid "By default, Swagger UI is accessible at `/q/swagger-ui`."
msgstr "默认情况下，Swagger UI可在 `/q/swagger-ui` 。"

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:468
#, fuzzy
msgid "You can update the `/swagger-ui` sub path by setting the `quarkus.swagger-ui.path` property in your `application.properties`:"
msgstr "你可以通过在你的 `application.properties` 中设置 `quarkus.swagger-ui.path` 属性来更新 `/swagger-ui` 子路径。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:472
#, no-wrap
msgid "quarkus.swagger-ui.path=my-custom-path\n"
msgstr ""

#. type: delimited block =
#: upstream/_guides/openapi-swaggerui.adoc:478
#, fuzzy
msgid "The value `/` is not allowed as it blocks the application from serving anything else.  A value prefixed with '/' makes it absolute and not relative."
msgstr "不允许使用 `/` 这个值，因为它阻止应用程序为其他东西提供服务。一个以'/'为前缀的值使其成为绝对值而不是相对值。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:485
#, no-wrap
msgid "./mvnw compile quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:488
#, fuzzy
msgid "You can check the Swagger UI path in your application's log:"
msgstr "你可以在你的应用程序的日志中查看Swagger用户界面的路径。"

#. type: delimited block -
#: upstream/_guides/openapi-swaggerui.adoc:492
#, no-wrap
msgid "00:00:00,000 INFO  [io.qua.swa.run.SwaggerUiServletExtension] Swagger UI available at /q/swagger-ui\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:495
#, fuzzy
msgid "Once your application is started, you can go to http://localhost:8080/q/swagger-ui and play with your API."
msgstr "一旦你的应用程序被启动，你就可以到 http://localhost:8080/q/swagger-ui ，玩你的API。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:498
#, fuzzy
msgid "You can visualize your API's operations and schemas.  image:openapi-swaggerui-guide-screenshot01.png[alt=Visualize your API]"
msgstr "你可以将你的API的操作和模式可视化。 image:openapi-swaggerui-guide-screenshot01.png[alt=\"Visualize your API\"]"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:501
#, fuzzy
msgid "You can also interact with your API in order to quickly test it.  image:openapi-swaggerui-guide-screenshot02.png[alt=Interact with your API]"
msgstr "你也可以与你的API进行互动，以便快速测试它。 image:openapi-swaggerui-guide-screenshot02.png[alt=\"Interact with your API\"]"

#. type: Title ===
#: upstream/_guides/openapi-swaggerui.adoc:504
#, fuzzy, no-wrap
msgid "Styling"
msgstr "造型设计"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:506
#, fuzzy
msgid "You can style the swagger ui by supplying your own logo and css."
msgstr "你可以通过提供你自己的logo和css来改变swagger ui的风格。"

#. type: Title ====
#: upstream/_guides/openapi-swaggerui.adoc:507
#, fuzzy, no-wrap
msgid "Logo"
msgstr "徽标"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:510
#, fuzzy
msgid "To supply your own logo, you need to place a file called `logo.png` in `src/main/resources/META-INF/branding`."
msgstr "要提供你自己的标识，你需要在 `src/main/resources/META-INF/branding` 中放置一个名为 `logo.png` 的文件。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:512
#, fuzzy
msgid "This will set the logo for all UIs (not just swagger ui), so in this case also GraphQL-UI and Health-UI (if included)."
msgstr "这将为所有的UI（不仅仅是swagger ui）设置标识，所以在这种情况下也包括GraphQL-UI和Health-UI（如果包括的话）。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:515
#, fuzzy
msgid "If you only want to apply this logo to swagger-ui (and not globally to all UIs) call the file `smallrye-open-api-ui.png` rather than `logo.png`."
msgstr "如果你只想把这个标志应用于swagger-ui（而不是全局地应用于所有的UI），请调用文件 `smallrye-open-api-ui.png` ，而不是 `logo.png` 。"

#. type: Title ====
#: upstream/_guides/openapi-swaggerui.adoc:516
#, fuzzy, no-wrap
msgid "CSS"
msgstr "CSS"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:519
#, fuzzy
msgid "To supply your own css that override/enhance style in the html, you need to place a file called `style.css` in `src/main/resources/META-INF/branding`."
msgstr "要提供你自己的css，覆盖/增强html中的样式，你需要在 `src/main/resources/META-INF/branding` 中放置一个叫做 `style.css` 的文件。"

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:521
msgid "This will add that css to all UIs (not just swagger ui), so in this case also GraphQL-UI and Health-UI (if included)."
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:524
msgid "If you only want to apply this style to swagger-ui (and not globally to all UIs) call the file `smallrye-open-api-ui.css` rather than `style.css`."
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:526
msgid "For more information on styling, read this blog entry: https://quarkus.io/blog/stylish-api/"
msgstr ""

#. type: Title ===
#: upstream/_guides/openapi-swaggerui.adoc:527
#, no-wrap
msgid "Cross Origin Resource Sharing"
msgstr ""

#. type: Plain text
#: upstream/_guides/openapi-swaggerui.adoc:530
msgid "If you plan to consume this application from a Single Page Application running on a different domain, you will need to configure CORS (Cross-Origin Resource Sharing). Please read the xref:http-reference.adoc#cors-filter[HTTP CORS documentation] for more details."
msgstr ""

#. type: Title ==
#: upstream/_guides/openapi-swaggerui.adoc:531
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#. type: Title ===
#: upstream/_guides/openapi-swaggerui.adoc:533
#, no-wrap
msgid "OpenAPI"
msgstr ""

#. type: Title ===
#: upstream/_guides/openapi-swaggerui.adoc:537
#, no-wrap
msgid "Swagger UI"
msgstr ""
