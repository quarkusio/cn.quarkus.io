# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/config-yaml.adoc:6
#, fuzzy, no-wrap
msgid "YAML Configuration"
msgstr "YAML配置"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:14
#, fuzzy
msgid "https://en.wikipedia.org/wiki/YAML[YAML] is a very popular format. Kubernetes relies heavily on the YAML format to write the various resource descriptors."
msgstr "link:https://en.wikipedia.org/wiki/YAML[YAML] 是一种非常流行的格式。Kubernetes在很大程度上依赖YAML格式来编写各种资源描述符。"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:16
#, fuzzy
msgid "Quarkus offers the possibility to use YAML in addition to the standard Java Properties file."
msgstr "Quarkus提供了在标准Java属性文件之外使用YAML的可能性。"

#. type: Title ==
#: upstream/_guides/config-yaml.adoc:17
#, fuzzy, no-wrap
msgid "Enabling YAML Configuration"
msgstr "启用YAML配置"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:20
#, fuzzy
msgid "To enable YAML configuration, add the `quarkus-config-yaml` extension:"
msgstr "要启用YAML配置，请添加 `quarkus-config-yaml` 扩展。"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:25
#, fuzzy
msgid "You can also just add the following dependency into your project:"
msgstr "你也可以直接在你的项目中添加以下依赖关系。"

#. type: Block title
#: upstream/_guides/config-yaml.adoc:27
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:33
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-config-yaml</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/config-yaml.adoc:36
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:39
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-config-yaml\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:42
#, fuzzy
msgid "Remove the `src/main/resources/application.properties` and create a `src/main/resources/application.yaml` file."
msgstr "删除 `src/main/resources/application.properties` ，并创建一个 `src/main/resources/application.yaml` 文件。"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:45
#, fuzzy
msgid "If both are present, Quarkus prioritizes configuration properties from the YAML file first and then from the Properties file. However, to avoid confusion, we recommend removing the Properties file."
msgstr "如果两者都存在，Quarkus会优先考虑YAML文件中的配置属性，然后是属性文件中的配置属性。然而，为了避免混淆，我们建议删除属性文件。"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:47
#, fuzzy
msgid "Quarkus supports both the `yml` and `yaml` file extensions."
msgstr "Quarkus同时支持 `yml` 和 `yaml` 文件扩展名。"

#. type: Title ===
#: upstream/_guides/config-yaml.adoc:48
#, fuzzy, no-wrap
msgid "Example"
msgstr "例子"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:51
#, fuzzy
msgid "The following snippets provide examples of YAML configuration:"
msgstr "下面的片段提供了YAML配置的例子。"

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:60
#, no-wrap
msgid ""
"# YAML supports comments\n"
"quarkus:\n"
"  datasource:\n"
"    db-kind: postgresql\n"
"    jdbc:\n"
"      url: jdbc:postgresql://localhost:5432/some-database\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:66
#, no-wrap
msgid ""
"# REST Client configuration property\n"
"quarkus:\n"
"  rest-client:\n"
"    org.acme.rest.client.ExtensionsService:\n"
"      url: https://stage.code.quarkus.io/api\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:76
#, no-wrap
msgid ""
"# For configuration property names that use quotes, do not split the string inside the quotes\n"
"quarkus:\n"
"  log:\n"
"    category:\n"
"      \"io.quarkus.category\":\n"
"        level: INFO\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:83
#, no-wrap
msgid ""
"quarkus:\n"
"  datasource:\n"
"    url: jdbc:postgresql://localhost:5432/quarkus_test\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:87
#, no-wrap
msgid ""
"  hibernate-orm:\n"
"    database:\n"
"      generation: drop-and-create\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:92
#, no-wrap
msgid ""
"  oidc:\n"
"    enabled: true\n"
"    auth-server-url: http://localhost:8180/auth/realms/quarkus\n"
"    client-id: app\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:99
#, no-wrap
msgid ""
"app:\n"
"  frontend:\n"
"    oidc-realm: quarkus\n"
"    oidc-app: app\n"
"    oidc-server: http://localhost:8180/auth\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:111
#, no-wrap
msgid ""
"# With profiles\n"
"\"%test\":\n"
"   quarkus:\n"
"     oidc:\n"
"       enabled: false\n"
"     security:\n"
"        users:\n"
"            file:\n"
"              enabled: true\n"
"              realm-name: quarkus\n"
"              plain-text: true\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/config-yaml.adoc:113
#, fuzzy, no-wrap
msgid "Profiles"
msgstr "剖析"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:117
#, fuzzy
msgid "As you can see in the previous snippet, you can use xref:config-reference.adoc#profiles[profiles] in YAML. The profile key requires double quotes: `\"%test\"`. This is because YAML does not support keys starting with `%`."
msgstr "正如你在前面的片段中看到的，你可以在YAML中使用 link:config-reference.html#profiles[配置文件] 。配置文件键需要双引号。 `\"%test\"` .这是因为YAML不支持以 `%` 开始的键。"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:120
#, fuzzy
msgid "Everything under the `\"%test\"` key is only enabled when the `test` profile is active. For example, in the previous snippet it disables OIDC (`quarkus.oidc.enabled: false`), whereas without the `test` profile, it would be enabled."
msgstr "只有当 `test` 配置文件处于活动状态时， `\"%test\"` 键下的所有内容才会启用。例如，在前面的片段中，它禁用了OIDC ( `quarkus.oidc.enabled: false` )，而如果没有 `test` 配置文件，它将被启用。"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:122
#, fuzzy
msgid "As for the Java Properties format, you can define your own profile:"
msgstr "至于Java属性格式，你可以定义你自己的配置文件。"

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:128 upstream/_guides/config-yaml.adoc:146
#, no-wrap
msgid ""
"quarkus:\n"
"  http:\n"
"    port: 8081\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:133
#, no-wrap
msgid ""
"\"%staging\":\n"
"    quarkus:\n"
"        http:\n"
"          port: 8082\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:136
#, fuzzy
msgid "If you enable the `staging` profile, the HTTP port will be 8082, whereas it would be 8081 otherwise."
msgstr "如果你启用了 `staging` 配置文件，HTTP 端口将是 8082，而否则将是 8081。"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:139
#, fuzzy
msgid "The YAML configuration also support profile aware files. In this case, properties for a specific profile may reside in an `application-{profile}.yaml` named file. The previous example may be expressed as:"
msgstr "YAML 配置还支持配置文件感知文件。在这种情况下，特定配置文件的属性可以驻留在一个名为 `application-{profile}.yaml` 的文件中。前面的例子可以表示为。"

#. type: Block title
#: upstream/_guides/config-yaml.adoc:140
#, fuzzy, no-wrap
msgid "application.yaml"
msgstr "application.yaml"

#. type: Block title
#: upstream/_guides/config-yaml.adoc:148
#, fuzzy, no-wrap
msgid "application-staging.yaml"
msgstr "application-staging.yaml"

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:154
#, no-wrap
msgid ""
"quarkus:\n"
"  http:\n"
"    port: 8082\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/config-yaml.adoc:156
#, fuzzy, no-wrap
msgid "Expressions"
msgstr "表达方式"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:160
#, fuzzy
msgid "The YAML format also supports xref:config-reference.adoc#expressions[expressions], using the same format as Java Properties:"
msgstr "YAML格式也支持 link:config-reference.html#expressions[表达式] ，使用与Java属性相同的格式。"

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:166
#, no-wrap
msgid ""
"mach: 3\n"
"x:\n"
"  factor: 2.23694\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:172
#, no-wrap
msgid ""
"display:\n"
"  mach: ${mach}\n"
"  unit:\n"
"    name: \"mph\"\n"
"    factor: ${x.factor}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:175
#, fuzzy
msgid "Note that you can reference nested properties using the `.` (dot) separator as in `{x.factor}`."
msgstr "注意，你可以使用 `.` （点）分隔符来引用嵌套的属性，如 `{x.factor}` 。"

#. type: Title ==
#: upstream/_guides/config-yaml.adoc:176
#, fuzzy, no-wrap
msgid "External application.yaml file"
msgstr "外部application.yaml文件"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:180
#, fuzzy
msgid "The `application.yaml` file may also be placed in `config/application.yaml` to specialize the runtime configuration. The file has to be present in the root of the working directoryrelative to the Quarkus application runner:"
msgstr " `application.yaml` 文件也可以放在 `config/application.yaml` 中，以实现运行时配置的专业化。该文件必须存在于相对于Quarkus应用程序运行器的工作目录的根部。"

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:187
#, no-wrap
msgid ""
".\n"
"├── config\n"
"│    └── application.yaml\n"
"├── my-app-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:190
#, fuzzy
msgid "The values from this file override any values from the regular `application.yaml` file if exists."
msgstr "如果存在的话，该文件中的值将覆盖常规 `application.yaml` 文件中的任何值。"

#. type: Title ==
#: upstream/_guides/config-yaml.adoc:191
#, fuzzy, no-wrap
msgid "Configuration key conflicts"
msgstr "配置键冲突"

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:197
msgid "The MicroProfile Config specification defines configuration keys as an arbitrary `.`-delimited string. However, structured formats like YAML only support a subset of the possible configuration namespace. For example, consider the two configuration properties `quarkus.http.cors` and `quarkus.http.cors.methods`. One property is the prefix of another, so it may not be immediately evident how to specify both keys in your YAML configuration."
msgstr ""

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:199
msgid "This is solved by using a `null` key (represented by `~`) for any YAML property which is a prefix of another one:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-yaml.adoc:207
#, no-wrap
msgid ""
"quarkus:\n"
"  http:\n"
"    cors:\n"
"      ~: true\n"
"      methods: GET,PUT,POST\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-yaml.adoc:210
msgid "YAML `null` keys are not included in the assembly of the configuration property name, allowing them to be used in any level for disambiguating configuration keys."
msgstr ""
