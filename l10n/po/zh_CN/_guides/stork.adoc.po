# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/stork.adoc
#, fuzzy, no-wrap
msgid "Getting Started with SmallRye Stork"
msgstr "开始使用SmallRye Stork"

#: _guides/stork.adoc
msgid ""
"The essence of distributed systems resides in the interaction between services.\n"
"In modern architecture, you often have multiple instances of your service to share the load or improve the resilience by redundancy.\n"
"But how do you select the best instance of your service?\n"
"That's where https://smallrye.io/smallrye-stork[SmallRye Stork] helps.\n"
"Stork is going to choose the most appropriate instance.\n"
"It offers:"
msgstr ""

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Extensible service discovery mechanisms"
msgstr "可扩展的服务发现机制"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Built-in support for Consul and Kubernetes"
msgstr "对Consul和Kubernetes的内置支持"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Customizable client load-balancing strategies"
msgstr "可定制的客户端负载平衡策略"

#. type: Title ==
#: _guides/stork.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _guides/stork.adoc
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "In this guide, we will build an application composed of:"
msgstr "在本指南中，我们将建立一个由以下部分组成的应用程序。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "A simple blue service exposed on port 9000"
msgstr "一个简单的蓝色服务暴露在9000端口上"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "A simple red service exposed on port 9001"
msgstr "一个简单的红色服务暴露在9001端口上"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "A REST Client calling the blue or red service (the selection is delegated to Stork)"
msgstr "一个调用蓝色或红色服务的REST客户端（选择权下放给Stork）。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "A REST endpoint using the REST client and calling the services"
msgstr "一个使用REST客户端并调用服务的REST端点"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "The blue and red services are registered in https://www.consul.io/[Consul]."
msgstr "蓝色和红色的服务是在 link:https://www.consul.io/[Consul] 注册的。"

#: _guides/stork.adoc
msgid ""
"For the sake of simplicity, everything (except Consul) will be running in the same Quarkus application.\n"
"Of course, each component will run in its own process in the real world."
msgstr ""

#. type: Title ==
#: _guides/stork.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/stork.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the applications step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _guides/stork.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "The solution is located in the `stork-quickstart` link:{quickstarts-tree-url}/stork-quickstart[directory]."
msgstr "该解决方案位于 `stork-quickstart` {quickstarts-tree-url}/stork-quickstart[目录]中。"

#. type: Title ==
#: _guides/stork.adoc
#, fuzzy, no-wrap
msgid "Discovery and selection"
msgstr "发现和选择"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Before going further, we need to discuss discovery vs. selection."
msgstr "在进一步讨论之前，我们需要讨论发现与选择。"

#: _guides/stork.adoc
msgid ""
"Service discovery is the process of locating service instances.\n"
"It produces a list of service instances that is potentially empty (if no service matches the request) or contains multiple service instances."
msgstr ""

#: _guides/stork.adoc
msgid ""
"Service selection, also called load-balancing, chooses the best instance from the list returned by the discovery process.\n"
"The result is a single service instance or an exception when no suitable instance can be found."
msgstr ""

#: _guides/stork.adoc
msgid ""
"Stork handles both discovery and selection.\n"
"However, it does not handle the communication with the service but only provides a service instance.\n"
"The various integrations in Quarkus extract the location of the service from that service instance."
msgstr ""

#. type: Title ==
#: _guides/stork.adoc
#, no-wrap
msgid "Bootstrapping the project"
msgstr "创建项目"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Create a Quarkus project importing the quarkus-rest-client-reactive and quarkus-resteasy-reactive extensions using your favorite approach:"
msgstr "使用你喜欢的方法创建一个Quarkus项目，导入quarkus-rest-client-reactive和quarkus-resteasy-reactive扩展。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "In the generated project, also add the following dependencies:"
msgstr "在生成的项目中，还要添加以下依赖项。"

#. type: Block title
#: _guides/stork.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/stork.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/stork.adoc
msgid ""
"`stork-service-discovery-consul` provides an implementation of service discovery for Consul.\n"
"`smallrye-mutiny-vertx-consul-client` is a Consul client which we will use to register our services in Consul."
msgstr ""

#. type: Title ==
#: _guides/stork.adoc
#, fuzzy, no-wrap
msgid "The Blue and Red services"
msgstr "蓝色和红色服务"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Let's start with the very beginning: the service we will discover, select and call."
msgstr "让我们从最开始说起：我们将发现、选择和调用的服务。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Create the `src/main/java/org/acme/services/BlueService.java` with the following content:"
msgstr "用以下内容创建 `src/main/java/org/acme/services/BlueService.java` 。"

#: _guides/stork.adoc
msgid ""
"It creates a new HTTP server (using Vert.x) and implements our simple service when the application starts.\n"
"For each HTTP request, it sends a response with \"Hello from Blue!\" as the body."
msgstr ""

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Following the same logic, create the `src/main/java/org/acme/services/RedService.java` with the following content:"
msgstr "按照同样的逻辑，用以下内容创建 `src/main/java/org/acme/services/RedService.java` 。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "This time, it writes \"Hello from Red!\"."
msgstr "这一次，它写下了 \"来自红色的你好！\"。"

#. type: Title ==
#: _guides/stork.adoc
#, fuzzy, no-wrap
msgid "Service registration in Consul"
msgstr "领事部的服务登记"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Now that we have implemented our services, we need to register them into Consul."
msgstr "现在我们已经实现了我们的服务，我们需要将它们注册到Consul中。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Stork is not limited to Consul and integrates with other service discovery mechanisms."
msgstr "Stork并不局限于Consul，而是与其他服务发现机制集成。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Create the `src/main/java/org/acme/services/Registration.java` file with the following content:"
msgstr "创建具有以下内容的 `src/main/java/org/acme/services/Registration.java` 文件。"

#: _guides/stork.adoc
msgid ""
"When the application starts, it connects to Consul using the Vert.x Consul Client and registers our two instances.\n"
"Both registration uses the same name (`my-service`), but different ids to indicate that it's two instances of the same _service_."
msgstr ""

#. type: Title ==
#: _guides/stork.adoc
#, fuzzy, no-wrap
msgid "The REST Client interface and the front end API"
msgstr "REST客户接口和前端API"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "So far, we didn't use Stork; we just scaffolded the services we will be discovering, selecting, and calling."
msgstr "到目前为止，我们没有使用Stork；我们只是为我们将要发现、选择和调用的服务搭建了支架。"

#: _guides/stork.adoc
msgid ""
"We will call the services using the Reactive REST Client.\n"
"Create the `src/main/java/org/acme/MyService.java` file with the following content:"
msgstr ""

#: _guides/stork.adoc
msgid ""
"It's a straightforward REST client interface containing a single method. However, note the `baseUri` attribute.\n"
"It starts with `stork://`.\n"
"It instructs the REST client to delegate the discovery and selection of the service instances to Stork.\n"
"Notice the `my-service` part in the URL.\n"
"It is the service name we will be using in the application configuration."
msgstr ""

#: _guides/stork.adoc
msgid ""
"It does not change how the REST client is used.\n"
"Create the `src/main/java/org/acme/FrontendApi.java` file with the following content:"
msgstr ""

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "It injects and uses the REST client as usual."
msgstr "它像往常一样注入并使用REST客户端。"

#. type: Title ==
#: _guides/stork.adoc
#, fuzzy, no-wrap
msgid "Stork Filter"
msgstr "鹳鸟过滤器"

#: _guides/stork.adoc
msgid ""
"The `baseUri` configured in the REST client will be processed by `StorkClientRequestFilter` class, this is a https://quarkus.io/specs/jaxrs/2.1/index.html#filters[Jakarta REST filter].\n"
"If you need to process the metadata associated with a message: HTTP headers, query parameters, media type, and other metadata, you can implement another filter to configure what you need.\n"
"Let’s implement a custom filter to add logging capability to our service. We create `CustomLoggingFilter` and annotating it with the @Provider annotation:"
msgstr ""

#: _guides/stork.adoc
msgid ""
"The order in which filters are executed is defined by https://quarkus.io/specs/jaxrs/2.1/index.html#priorities[Priorities].\n"
"Note that `CustomLoggingFilter` is using a default value, so the user-level priority and the `StorkClientRequestFilter` uses the security authentication filter priority. This means that `StorkClientRequestFilter` will be executed before our `CustomLoggingFilter`.\n"
"Use `@Priority` annotation to change this behaviour."
msgstr ""

#. type: Title ==
#: _guides/stork.adoc
#, fuzzy, no-wrap
msgid "Stork configuration"
msgstr "鹳鸟配置"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "The system is almost complete. We only need to configure Stork and the `Registration` bean."
msgstr "该系统几乎已经完成。我们只需要配置Stork和 `Registration` bean。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "In the `src/main/resources/application.properties`, add:"
msgstr "在 `src/main/resources/application.properties` ，添加。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "The first two lines provide the Consul location used by the `Registration` bean."
msgstr "前两行提供了 `Registration` bean所使用的Consul位置。"

#: _guides/stork.adoc
msgid ""
"The other properties are related to Stork.\n"
"`stork.my-service.service-discovery` indicates which type of service discovery we will be using to locate the `my-service` service.\n"
"In our case, it's `consul`.\n"
"`quarkus.stork.my-service.service-discovery.consul-host` and `quarkus.stork.my-service.service-discovery.consul-port` configures the access to Consul.\n"
"Finally, `quarkus.stork.my-service.load-balancer.type` configures the service selection.\n"
"In our case, we use a `round-robin`."
msgstr ""

#. type: Title ==
#: _guides/stork.adoc
#, no-wrap
msgid "Running the application"
msgstr "运行应用程序"

#: _guides/stork.adoc
msgid ""
"We're done!\n"
"So, let's see if it works."
msgstr ""

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "First, start Consul:"
msgstr "首先，启动执政官。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "If you start Consul differently, do not forget to edit the application configuration."
msgstr "如果你以不同方式启动Consul，不要忘记编辑应用程序的配置。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "Then, package the application:"
msgstr "然后，将应用程序打包。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "And run it:"
msgstr "并运行它。"

#. type: Plain text
#: _guides/stork.adoc
msgid "In another terminal, run:"
msgstr "在另外一个终端中，运行:"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "The responses alternate between `Hello from Red!` and `Hello from Blue!`."
msgstr "答复在 `Hello from Red!` 和 `Hello from Blue!` 之间交替进行。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "You can compile this application into a native executable:"
msgstr "你可以将这个应用程序编译成一个本地可执行文件。"

#. type: Plain text
#: _guides/stork.adoc
#, fuzzy
msgid "And start it with:"
msgstr "并以此为起点。"

#. type: Title ==
#: _guides/stork.adoc
#, no-wrap
msgid "Going further"
msgstr "进一步探索"

#: _guides/stork.adoc
msgid ""
"This guide has shown how to use SmallRye Stork to discover and select your services.\n"
"You can find more about Stork in:"
msgstr ""

#. type: Plain text
#: _guides/stork.adoc
msgid "the xref:stork-reference.adoc[Stork reference guide],"
msgstr ""

#. type: Plain text
#: _guides/stork.adoc
msgid "the https://smallrye.io/smallrye-stork[SmallRye Stork website]."
msgstr ""
