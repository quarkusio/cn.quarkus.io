# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/rest-client-multipart.adoc
#, fuzzy, no-wrap
msgid "Using the legacy REST Client with Multipart"
msgstr "使用REST客户端与Multipart"

#. type: delimited block =
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "This guide is about the multipart support of the REST Client compatible with https://resteasy.dev[RESTEasy Classic] which used to be the default Jakarta REST (formerly known as JAX-RS) implementation until Quarkus 2.8."
msgstr "本指南是关于与 link:https://resteasy.dev[RESTEasy Classic] 兼容的REST客户端的多部分支持，在Quarkus 2.8之前， link:https://resteasy.dev[RESTEasy Classic] 曾是默认的JAX-RS实现。"

#: _guides/rest-client-multipart.adoc
msgid ""
"It is now recommended to use RESTEasy Reactive, which supports equally well traditional blocking workloads and reactive workloads.\n"
"For more information about RESTEasy Reactive,\n"
"please see the xref:rest-client-reactive.adoc[REST Client Reactive guide] and, for the server side, the xref:rest-json.adoc[introductory REST JSON guide] or the more detailed xref:resteasy-reactive.adoc[RESTEasy Reactive guide]."
msgstr ""

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "RESTEasy has rich support for the `multipart/*` and `multipart/form-data` mime types. The multipart mime format is used to pass lists of content bodies. Multiple content bodies are embedded in one message. `multipart/form-data` is often found in web application HTML Form documents and is generally used to upload files. The form-data format is the same as other multipart formats, except that each inlined piece of content has a name associated with it."
msgstr "RESTEasy对 `multipart/*` 和 `multipart/form-data` mime类型有丰富的支持。Multipart mime格式用于传递内容体的列表。多个内容体被嵌入到一个消息中。 `multipart/form-data` ，经常出现在网络应用程序的HTML表单文档中，一般用于上传文件。form-data格式与其他多部分格式相同，只是每个内嵌的内容都有一个与之相关的名称。"

#: _guides/rest-client-multipart.adoc
msgid ""
"This guide explains how to use the RESTEasy REST Client with Multipart in order to interact with REST APIs\n"
"requiring `multipart/form-data` content-type with very little effort."
msgstr ""

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/rest-client-multipart.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "The solution is located in the `rest-client-multipart-quickstart` link:{quickstarts-tree-url}/rest-client-multipart-quickstart[directory]."
msgstr "该解决方案位于 `rest-client-multipart-quickstart` {quickstarts-tree-url}/rest-client-multipart-quickstart[目录]中。"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的工程项目。用以下命令创建一个新项目："

#: _guides/rest-client-multipart.adoc
msgid ""
"This command generates a Maven project with a REST endpoint and imports the `rest-client` and `resteasy` extensions.\n"
"It also adds the `resteasy-multipart` extension to support `multipart/form-data` requests."
msgstr ""

#: _guides/rest-client-multipart.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `resteasy-multipart` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: _guides/rest-client-multipart.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _guides/rest-client-multipart.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/rest-client-multipart.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, fuzzy, no-wrap
msgid "Setting up the model"
msgstr "设置模型"

#: _guides/rest-client-multipart.adoc
msgid ""
"In this guide we will be demonstrating how to invoke a REST service accepting `multipart/form-data` input.\n"
"We are assuming the payload is well-known before the request is sent, so we can model as a POJO."
msgstr ""

#. type: delimited block =
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "If the payload is unknown, you can also use the RESTEasy custom API instead. If that's the case, see the RESTEasy Multipart Providers link at the end of the guide."
msgstr "如果有效载荷未知，您也可以使用RESTEasy自定义API来代替。如果是这种情况，请参阅本指南末尾的RESTEasy Multipart Providers链接。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Our first order of business is to set up the model we will be using to define the `multipart/form-data` payload, in the form of a `MultipartBody` POJO."
msgstr "我们的首要任务是设置我们将用来定义 `multipart/form-data` 有效载荷的模型，其形式为 `MultipartBody` POJO。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Create a `src/main/java/org/acme/rest/client/multipart/MultipartBody.java` file and set the following content:"
msgstr "创建一个 `src/main/java/org/acme/rest/client/multipart/MultipartBody.java` 文件并设置以下内容。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "The purpose of the annotations in the code above is the following:"
msgstr "上述代码中的注释的目的如下。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "`@FormParam` is a standard Jakarta REST annotation used to define a form parameter contained within a request entity body"
msgstr " `@FormParam` 是一个标准的JAX-RS注解，用于定义一个包含在请求实体体中的表单参数。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "`@PartType` is a RESTEasy specific annotation required when a client performs a multipart request and defines the content type for the part."
msgstr " `@PartType` 是当客户端执行多部分请求时需要的RESTEasy特定注释，它定义了该部分的内容类型。"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, fuzzy, no-wrap
msgid "Create the interface"
msgstr "创建接口"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Using the RESTEasy REST Client is as simple as creating an interface using the proper Jakarta REST and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/multipart/MultipartService.java` and have the following content:"
msgstr "使用RESTEasy REST客户端就像使用适当的JAX-RS和MicroProfile注解来创建一个接口一样简单。在我们的例子中，该接口应在 `src/main/java/org/acme/rest/client/multipart/MultipartService.java` ，并有以下内容。"

#: _guides/rest-client-multipart.adoc
msgid ""
"The `sendMultipartData` method gives our code the ability to POST a `multipart/form-data` request to our Echo service (running in the same server for demo purposes).\n"
"Because in this demo we have the exact knowledge of the `multipart/form-data` packets, we can map them to the model class created in the previous section using the `@org.jboss.resteasy.annotations.providers.multipart.MultipartForm` annotation."
msgstr ""

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr "客户端将处理所有的网络和集结，使我们的代码不涉及这些技术细节。"

#: _guides/rest-client-multipart.adoc
msgid ""
"`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for\n"
"CDI injection as a REST Client"
msgstr ""

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "`@Path` and `@POST` are the standard Jakarta REST annotations used to define how to access the service"
msgstr " `@Path` , `@GET` 和 `@PathParam` 是标准的 JAX-RS 注解，用于定义如何访问服务。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "`@MultipartForm` defines the parameter as a value object for incoming/outgoing request/responses of the multipart/form-data mime type."
msgstr " `@MultipartForm` 将参数定义为multipart/form-data mime类型的传入/传出请求/回复的值对象。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "`@Consumes` defines the expected content-type consumed by this request (parameters)"
msgstr " `@Consumes` 定义该请求所消耗的预期内容类型（参数）。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "`@Produces` defines the expected content-type produced by this request (return type)"
msgstr " `@Produces` 定义了该请求产生的预期内容类型（返回类型）。"

#: _guides/rest-client-multipart.adoc
msgid ""
"While `@Consumes` and `@Produces` are optional as auto-negotiation is supported,\n"
"it is heavily recommended to annotate your endpoints with them to define precisely the expected content-types."
msgstr ""

#. type: delimited block =
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "It will allow to narrow down the number of Jakarta REST providers (which can be seen as converters) included in the native executable."
msgstr "它将允许缩小包含在本地可执行文件中的JAX-RS提供者（可被视为转换器）的数量。"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, no-wrap
msgid "Create the configuration"
msgstr "创建配置"

#: _guides/rest-client-multipart.adoc
msgid ""
"In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.\n"
"The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr ""

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Having this configuration means that all requests performed using `org.acme.rest.client.multipart.MultipartService` will use `http://localhost:8080/` as the base URL."
msgstr "拥有这种配置意味着所有使用 `org.acme.rest.client.multipart.MultipartService` 的请求将使用`http://localhost:8080/ `作为基本的URL。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Note that `org.acme.rest.client.multipart.MultipartService` _must_ match the fully qualified name of the `MultipartService` interface we created in the previous section."
msgstr "注意， `org.acme.rest.client.multipart.MultipartService` _必须_ 与我们在上一节中创建的 `MultipartService` 接口的完全合格名称相匹配。"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, fuzzy, no-wrap
msgid "Create the Jakarta REST resource"
msgstr "创建JAX-RS资源"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Create the `src/main/java/org/acme/rest/client/multipart/MultipartClientResource.java` file with the following content:"
msgstr "创建具有以下内容的 `src/main/java/org/acme/rest/client/multipart/MultipartClientResource.java` 文件。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Note that in addition to the standard CDI `@Inject` annotation, we also need to use the MicroProfile `@RestClient` annotation to inject `MultipartService`."
msgstr "注意，除了标准的CDI `@Inject` 注释外，我们还需要使用MicroProfile `@RestClient` 注释来注入 `MultipartService` 。"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, fuzzy, no-wrap
msgid "Creating the server"
msgstr "创建服务器"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "For demo purposes, let's create a simple Echo endpoint that will act as the server part."
msgstr "为了演示的目的，让我们创建一个简单的Echo端点，作为服务器部分。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Create the directory `src/main/java/org/acme/rest/client/multipart/server` and include a `EchoService.java` file with the following content:"
msgstr "创建目录 `src/main/java/org/acme/rest/client/multipart/server` ，并包括一个 `EchoService.java` 文件，内容如下。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "This will just return the request body and it's useful for testing purposes."
msgstr "这将只是返回请求体，对于测试来说很有用。"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, fuzzy, no-wrap
msgid "Update the test"
msgstr "更新测试"

#: _guides/rest-client-multipart.adoc
msgid ""
"We also need to update the functional test to reflect the changes made to the endpoint.\n"
"Edit the `src/test/java/org/acme/rest/client/multipart/MultipartClientResourceTest.java` file to:"
msgstr ""

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "The code above uses link:https://rest-assured.io/[REST Assured] to assert that the returned content from the echo service contains multipart elements"
msgstr "上面的代码使用 link:http://rest-assured.io/[REST Assured] 来断言从echo服务返回的内容包含多部分元素"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "Because the test runs in a different port, we also need to include an `application.properties` in our `src/test/resources` with the following content:"
msgstr "因为测试在不同的端口运行，我们还需要在我们的 `src/test/resources` ，包括一个 `application.properties` ，内容如下。"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
msgid "Run the application with:"
msgstr "使用以下命令运行该应用程序:"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "In a terminal, run `curl -X POST http://localhost:8080/client/multipart`"
msgstr "在一个终端中，运行 `curl -X POST <a href=\"http://localhost:8080/client/multipart\" class=\"bare\">http://localhost:8080/client/multipart</a>` "

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "You should see an output similar to:"
msgstr "你应该看到一个类似的输出。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
msgid "As usual, the application can be packaged using:"
msgstr "像往常一样，该应用程序可以用以下方式打包："

#. type: Plain text
#: _guides/rest-client-multipart.adoc
#, fuzzy
msgid "And executed with `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "并以 `java -jar target/quarkus-app/quarkus-run.jar` 。"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
msgid "You can also generate the native executable with:"
msgstr "你也可以通过以下命令生成本地可执行文件:"

#. type: Title ==
#: _guides/rest-client-multipart.adoc
#, fuzzy, no-wrap
msgid "Further reading"
msgstr "进一步阅读"

#. type: Plain text
#: _guides/rest-client-multipart.adoc
msgid "link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]"
msgstr ""

#. type: Plain text
#: _guides/rest-client-multipart.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-1.4.1/microprofile-rest-client-1.4.1.html[MicroProfile Rest Client specification]"
msgstr ""
