# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/elasticsearch.adoc:6
#, fuzzy, no-wrap
msgid "Connecting to an Elasticsearch cluster"
msgstr "连接到一个Elasticsearch集群"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:10
#, fuzzy
msgid "Elasticsearch is a well known full text search engine and NoSQL datastore."
msgstr "Elasticsearch是一个知名的全文搜索引擎和NoSQL数据存储。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:12
#, fuzzy
msgid "In this guide, we will see how you can get your REST services to use an Elasticsearch cluster."
msgstr "在本指南中，我们将看到如何让你的REST服务使用Elasticsearch集群。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:15
#, fuzzy
msgid "Quarkus provides two ways of accessing Elasticsearch: via the lower level `RestClient` or via the `RestHighLevelClient` we will call them the low level and the high level clients."
msgstr "Quarkus提供了两种访问Elasticsearch的方式：通过低级别的 `RestClient` ，或者通过 `RestHighLevelClient` ，我们将它们称为低级别的和高级别的客户端。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:16
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:20
#, fuzzy
msgid "Elasticsearch installed or Docker installed"
msgstr "安装了Elasticsearch或安装了Docker"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:21
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:24
#, fuzzy
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "本指南中构建的应用程序非常简单：用户可以使用一个表单在列表中添加元素，然后列表被更新。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:26
#, fuzzy
msgid "All the information between the browser and the server is formatted as JSON."
msgstr "浏览器和服务器之间的所有信息都被格式化为JSON。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:28
#, fuzzy
msgid "The elements are stored in Elasticsearch."
msgstr "这些元素被存储在Elasticsearch中。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:29
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:32
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:39
#, fuzzy
msgid "This command generates a Maven structure importing the RESTEasy Reactive/JAX-RS, Jackson, and the Elasticsearch low level client extensions.  After this, the `quarkus-elasticsearch-rest-client` extension has been added to your build file."
msgstr "该命令生成一个Maven结构，导入RESTEasy Reactive/JAX-RS、Jackson和Elasticsearch低级别客户端扩展。在此之后， `quarkus-elasticsearch-rest-client` 扩展已被添加到您的构建文件中。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:41
#, fuzzy
msgid "If you want to use the high level client instead, replace the `elasticsearch-rest-client` extension by the `elasticsearch-rest-high-level-client` extension."
msgstr "如果你想使用高级客户端，请将 `elasticsearch-rest-client` 扩展名替换为 `elasticsearch-rest-high-level-client` 。"

#. type: delimited block =
#: upstream/_guides/elasticsearch.adoc:46
#, fuzzy
msgid "We use the `resteasy-reactive-jackson` extension here and not the JSON-B variant because we will use the Vert.x `JsonObject` helper to serialize/deserialize our objects to/from Elasticsearch and it uses Jackson under the hood."
msgstr "我们在这里使用 `resteasy-reactive-jackson` ，而不是JSON-B的变体，因为我们将使用Vert.x `JsonObject` 帮助器来序列化/反序列化我们的对象到/来自Elasticsearch，它在引擎盖下使用Jackson。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:49
#, fuzzy
msgid "If you don’t want to generate a new project, add the following dependencies to your build file."
msgstr "如果你不想生成一个新的项目，请在你的构建文件中添加以下依赖项。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:51
#, fuzzy
msgid "For the Elasticsearch low level client, add:"
msgstr "对于Elasticsearch低级客户端，添加。"

#. type: Block title
#: upstream/_guides/elasticsearch.adoc:53
#: upstream/_guides/elasticsearch.adoc:70
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:59
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elasticsearch-rest-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/elasticsearch.adoc:62
#: upstream/_guides/elasticsearch.adoc:79
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:65
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-elasticsearch-rest-client\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:68
#, fuzzy
msgid "For the Elasticsearch high level client, add:"
msgstr "对于Elasticsearch高级客户端，添加。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:76
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elasticsearch-rest-high-level-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:82
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-elasticsearch-rest-high-level-client\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:84
#, fuzzy, no-wrap
msgid "Creating your first JSON REST service"
msgstr "创建你的第一个JSON REST服务"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:87
#, fuzzy
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "在这个例子中，我们将创建一个应用程序来管理一个水果列表。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:89
#, fuzzy
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "首先，让我们创建 `Fruit` bean，如下所示。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:93
#: upstream/_guides/elasticsearch.adoc:109
#: upstream/_guides/elasticsearch.adoc:194
#, no-wrap
msgid "package org.acme.elasticsearch;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:99
#, no-wrap
msgid ""
"public class Fruit {\n"
"    public String id;\n"
"    public String name;\n"
"    public String color;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:102
#, fuzzy
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "没有什么花哨的。需要注意的一件事是，拥有一个默认的构造函数是JSON序列化层的要求。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:105
#, fuzzy
msgid "Now create a `org.acme.elasticsearch.FruitService` that will be the business layer of our application and store/load the fruits from the Elasticsearch instance.  Here we use the low level client, if you want to use the high level client instead follow the instructions in the <<using-the-high-level-rest-client,Using the High Level REST Client>> paragraph instead."
msgstr "现在创建一个 `org.acme.elasticsearch.FruitService` ，它将是我们应用程序的业务层，并从Elasticsearch实例中存储/加载水果。这里我们使用了低级别的客户端，如果你想使用高级别的客户端，请按照 link:#using-the-high-level-rest-client[使用高级别的REST客户端] 段落中的说明进行。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:113
#: upstream/_guides/elasticsearch.adoc:399
#, no-wrap
msgid ""
"import java.io.IOException;\n"
"import java.util.ArrayList;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:116
#: upstream/_guides/elasticsearch.adoc:402
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:121
#, no-wrap
msgid ""
"import org.apache.http.util.EntityUtils;\n"
"import org.elasticsearch.client.Request;\n"
"import org.elasticsearch.client.Response;\n"
"import org.elasticsearch.client.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:124
#, no-wrap
msgid ""
"import io.vertx.core.json.JsonArray;\n"
"import io.vertx.core.json.JsonObject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:129
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class FruitService {\n"
"    @Inject\n"
"    RestClient restClient; //<1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:137
#, no-wrap
msgid ""
"    public void index(Fruit fruit) throws IOException {\n"
"        Request request = new Request(\n"
"                \"PUT\",\n"
"                \"/fruits/_doc/\" + fruit.id); //<2>\n"
"        request.setJsonEntity(JsonObject.mapFrom(fruit).toString()); //<3>\n"
"        restClient.performRequest(request); //<4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:147
#, no-wrap
msgid ""
"    public Fruit get(String id) throws IOException {\n"
"        Request request = new Request(\n"
"                \"GET\",\n"
"                \"/fruits/_doc/\" + id);\n"
"        Response response = restClient.performRequest(request);\n"
"        String responseBody = EntityUtils.toString(response.getEntity());\n"
"        JsonObject json = new JsonObject(responseBody); //<5>\n"
"        return json.getJsonObject(\"_source\").mapTo(Fruit.class);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:151
#: upstream/_guides/elasticsearch.adoc:444
#, no-wrap
msgid ""
"    public List<Fruit> searchByColor(String color) throws IOException {\n"
"        return search(\"color\", color);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:155
#: upstream/_guides/elasticsearch.adoc:448
#, no-wrap
msgid ""
"    public List<Fruit> searchByName(String name) throws IOException {\n"
"        return search(\"name\", name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:167
#, no-wrap
msgid ""
"    private List<Fruit> search(String term, String match) throws IOException {\n"
"        Request request = new Request(\n"
"                \"GET\",\n"
"                \"/fruits/_search\");\n"
"        //construct a JSON query like {\"query\": {\"match\": {\"<term>\": \"<match\"}}\n"
"        JsonObject termJson = new JsonObject().put(term, match);\n"
"        JsonObject matchJson = new JsonObject().put(\"match\", termJson);\n"
"        JsonObject queryJson = new JsonObject().put(\"query\", matchJson);\n"
"        request.setJsonEntity(queryJson.encode());\n"
"        Response response = restClient.performRequest(request);\n"
"        String responseBody = EntityUtils.toString(response.getEntity());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:179
#, no-wrap
msgid ""
"        JsonObject json = new JsonObject(responseBody);\n"
"        JsonArray hits = json.getJsonObject(\"hits\").getJsonArray(\"hits\");\n"
"        List<Fruit> results = new ArrayList<>(hits.size());\n"
"        for (int i = 0; i < hits.size(); i++) {\n"
"            JsonObject hit = hits.getJsonObject(i);\n"
"            Fruit fruit = hit.getJsonObject(\"_source\").mapTo(Fruit.class);\n"
"            results.add(fruit);\n"
"        }\n"
"        return results;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:182
#: upstream/_guides/elasticsearch.adoc:469
#, fuzzy
msgid "In this example you can note the following:"
msgstr "在这个例子中，你可以注意到以下几点。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:184
#, fuzzy
msgid "We inject an Elasticsearch low level `RestClient` into our service."
msgstr "我们在服务中注入Elasticsearch低级别的 `RestClient` 。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:185
#, fuzzy
msgid "We create an Elasticsearch request."
msgstr "我们创建一个Elasticsearch请求。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:186
#: upstream/_guides/elasticsearch.adoc:473
#, fuzzy
msgid "We use Vert.x `JsonObject` to serialize the object before sending it to Elasticsearch, you can use whatever you want to serialize to JSON."
msgstr "我们使用Vert.x `JsonObject` ，在将对象发送到Elasticsearch之前将其序列化，你可以使用任何你想序列化为JSON的东西。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:187
#, fuzzy
msgid "We send the request (indexing request here) to Elasticsearch."
msgstr "我们向Elasticsearch发送请求（此处为索引请求）。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:188
#: upstream/_guides/elasticsearch.adoc:475
#, fuzzy
msgid "In order to deserialize the object from Elasticsearch, we again use Vert.x `JsonObject`."
msgstr "为了从Elasticsearch反序列化对象，我们再次使用Vert.x `JsonObject` 。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:190
#, fuzzy
msgid "Now, create the `org.acme.elasticsearch.FruitResource` class as follows:"
msgstr "现在，创建 `org.acme.elasticsearch.FruitResource` 类，如下所示。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:203
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import java.io.IOException;\n"
"import java.net.URI;\n"
"import java.util.List;\n"
"import java.util.UUID;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:205
#, no-wrap
msgid "import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:208
#, no-wrap
msgid ""
"@Path(\"/fruits\")\n"
"public class FruitResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:211
#, no-wrap
msgid ""
"    @Inject\n"
"    FruitService fruitService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:220
#, no-wrap
msgid ""
"    @POST\n"
"    public Response index(Fruit fruit) throws IOException {\n"
"        if (fruit.id == null) {\n"
"            fruit.id = UUID.randomUUID().toString();\n"
"        }\n"
"        fruitService.index(fruit);\n"
"        return Response.created(URI.create(\"/fruits/\" + fruit.id)).build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:226
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{id}\")\n"
"    public Fruit get(String id) throws IOException {\n"
"        return fruitService.get(id);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:239
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/search\")\n"
"    public List<Fruit> search(@RestQuery String name, @RestQuery String color) throws IOException {\n"
"        if (name != null) {\n"
"            return fruitService.searchByName(name);\n"
"        } else if (color != null) {\n"
"            return fruitService.searchByColor(color);\n"
"        } else {\n"
"            throw new BadRequestException(\"Should provide name or color query parameter\");\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:242
#, fuzzy
msgid "The implementation is pretty straightforward and you just need to define your endpoints using the JAX-RS annotations and use the `FruitService` to list/add new fruits."
msgstr "实现起来非常简单，你只需要使用JAX-RS注解来定义你的端点，并使用 `FruitService` 来列出/添加新的水果。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:243
#, fuzzy, no-wrap
msgid "Configuring Elasticsearch"
msgstr "配置Elasticsearch"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:245
#, fuzzy
msgid "The main property to configure is the URL to connect to the Elasticsearch cluster."
msgstr "要配置的主要属性是连接到Elasticsearch集群的URL。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:247
#, fuzzy
msgid "A sample configuration should look like this:"
msgstr "一个配置样本应该是这样的。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:252
#, no-wrap
msgid ""
"# configure the Elasticsearch client for a cluster of two nodes\n"
"quarkus.elasticsearch.hosts = elasticsearch1:9200,elasticsearch2:9200\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:255
#, fuzzy
msgid "In this example, we are using a single instance running on localhost:"
msgstr "在这个例子中，我们使用的是一个运行在localhost上的单一实例。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:260
#, no-wrap
msgid ""
"# configure the Elasticsearch client for a single instance on localhost\n"
"quarkus.elasticsearch.hosts = localhost:9200\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:263
#, fuzzy
msgid "If you need a more advanced configuration, you can find the comprehensive list of supported configuration properties at the end of this guide."
msgstr "如果你需要更高级的配置，你可以在本指南的最后找到支持的配置属性的全面清单。"

#. type: Title ===
#: upstream/_guides/elasticsearch.adoc:265
#, fuzzy, no-wrap
msgid "Dev Services (Configuration Free Databases)"
msgstr "开发服务（免配置数据库）。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:270
#, fuzzy
msgid "Quarkus supports a feature called Dev Services that allows you to start various containers without any config.  In the case of Elasticsearch this support extends to the default Elasticsearch connection.  What that means practically is that, if you have not configured `quarkus.elasticsearch.hosts`, Quarkus will automatically start an Elasticsearch container when running tests or dev mode, and automatically configure the connection."
msgstr "Quarkus支持一个叫做Dev Services的功能，允许你在没有任何配置的情况下启动各种容器。在Elasticsearch的例子中，这种支持延伸到了默认的Elasticsearch连接。这实际上意味着，如果你没有配置 `quarkus.elasticsearch.hosts` ，Quarkus会在运行测试或开发模式时自动启动Elasticsearch容器，并自动配置连接。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:274
#, fuzzy
msgid "When running the production version of the application, the Elasticsearch connection needs to be configured as usual, so if you want to include a production database config in your `application.properties` and continue to use Dev Services we recommend that you use the `%prod.` profile to define your Elasticsearch settings."
msgstr "当运行生产版本的应用程序时，Elasticsearch连接需要照常配置，所以如果你想在 `application.properties` ，并继续使用Dev Services，我们建议你使用 `%prod.` 配置文件来定义你的Elasticsearch设置。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:276
#, fuzzy
msgid "For more information you can read the xref:elasticsearch-dev-services.adoc[Dev Services for Elasticsearch guide]."
msgstr "欲了解更多信息，你可以阅读 link:elasticsearch-dev-services.html[Elasticsearch的开发服务指南] 。"

#. type: Title ===
#: upstream/_guides/elasticsearch.adoc:278
#, fuzzy, no-wrap
msgid "Programmatically Configuring Elasticsearch"
msgstr "以编程方式配置Elasticsearch"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:280
#, fuzzy
msgid "On top of the parametric configuration, you can also programmatically apply additional configuration to the client by implementing a `RestClientBuilder.HttpClientConfigCallback` and annotating it with `ElasticsearchClientConfig`. You may provide multiple implementations and configuration provided by each implementation will be applied in a randomly ordered cascading manner."
msgstr "在参数化配置的基础上，你也可以通过实现一个 `RestClientBuilder.HttpClientConfigCallback` ，并用 `ElasticsearchClientConfig` 。你可以提供多个实现，每个实现所提供的配置将以随机排序的级联方式应用到客户端。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:282
#, fuzzy
msgid "For example, when accessing an Elasticsearch cluster that is set up for TLS on the HTTP layer, the client needs to trust the certificate that Elasticsearch is using. The following is an example of setting up the client to trust the CA that has signed the certificate that Elasticsearch is using, when that CA certificate is available in a PKCS#12 keystore."
msgstr "例如，当访问一个在HTTP层设置了TLS的Elasticsearch集群时，客户端需要信任Elasticsearch正在使用的证书。下面是一个设置客户端信任签署了Elasticsearch使用的证书的CA的例子，当该CA证书在PKCS#12密钥库中可用时。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:290
#, no-wrap
msgid ""
"import io.quarkus.elasticsearch.restclient.lowlevel.ElasticsearchClientConfig;\n"
"import org.apache.http.impl.nio.client.HttpAsyncClientBuilder;\n"
"import org.apache.http.ssl.SSLContextBuilder;\n"
"import org.apache.http.ssl.SSLContexts;\n"
"import org.elasticsearch.client.RestClientBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:298
#, no-wrap
msgid ""
"import javax.enterprise.context.Dependent;\n"
"import javax.net.ssl.SSLContext;\n"
"import java.io.InputStream;\n"
"import java.nio.file.Files;\n"
"import java.nio.file.Path;\n"
"import java.nio.file.Paths;\n"
"import java.security.KeyStore;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:317
#, no-wrap
msgid ""
"@ElasticsearchClientConfig\n"
"public class SSLContextConfigurator implements RestClientBuilder.HttpClientConfigCallback {\n"
"    @Override\n"
"    public HttpAsyncClientBuilder customizeHttpClient(HttpAsyncClientBuilder httpClientBuilder) {\n"
"        try {\n"
"            String keyStorePass = \"password-for-keystore\";\n"
"            Path trustStorePath = Paths.get(\"/path/to/truststore.p12\");\n"
"            KeyStore truststore = KeyStore.getInstance(\"pkcs12\");\n"
"            try (InputStream is = Files.newInputStream(trustStorePath)) {\n"
"                truststore.load(is, keyStorePass.toCharArray());\n"
"            }\n"
"            SSLContextBuilder sslBuilder = SSLContexts.custom()\n"
"                    .loadTrustMaterial(truststore, null);\n"
"            SSLContext sslContext = sslBuilder.build();\n"
"            httpClientBuilder.setSSLContext(sslContext);\n"
"        } catch (Exception e) {\n"
"            throw new RuntimeException(e);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:321
#, no-wrap
msgid ""
"        return httpClientBuilder;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:323
#, fuzzy
msgid "See https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/_encrypted_communication.html[Elasticsearch documentation] for more details on this particular example."
msgstr "关于这个特定例子的更多细节，请参见 link:https://www.elastic.co/guide/en/elasticsearch/client/java-rest/current/_encrypted_communication.html[Elasticsearch文档] 。"

#. type: delimited block =
#: upstream/_guides/elasticsearch.adoc:328
#, fuzzy
msgid "Classes marked with `@ElasticsearchClientConfig` are made application scoped CDI beans by default.  You can override the scope at the class level if you prefer a different scope."
msgstr "标有 `@ElasticsearchClientConfig` 的类默认为应用范围的CDI beans。如果你喜欢不同的范围，你可以在类的层面上覆盖这个范围。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:330
#, fuzzy, no-wrap
msgid "Running an Elasticsearch cluster"
msgstr "运行一个Elasticsearch集群"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:334
#, fuzzy
msgid "As by default, the Elasticsearch client is configured to access a local Elasticsearch cluster on port 9200 (the default Elasticsearch port), if you have a local running instance on this port, there is nothing more to do before being able to test it!"
msgstr "由于默认情况下，Elasticsearch客户端被配置为在端口9200（默认的Elasticsearch端口）上访问本地Elasticsearch集群，如果你在这个端口上有一个本地运行的实例，那么在能够进行测试之前，就没有什么可做的了。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:336
#, fuzzy
msgid "If you want to use Docker to run an Elasticsearch instance, you can use the following command to launch one:"
msgstr "如果你想使用Docker来运行Elasticsearch实例，你可以使用以下命令来启动一个实例。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:341
#, no-wrap
msgid ""
"docker run --name elasticsearch  -e \"discovery.type=single-node\" -e \"ES_JAVA_OPTS=-Xms512m -Xmx512m\"\\\n"
"       --rm -p 9200:9200 docker.elastic.co/elasticsearch/elasticsearch-oss:{elasticsearch-version}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:343
#, fuzzy, no-wrap
msgid "Running the application"
msgstr "运行应用程序"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:346
#, fuzzy
msgid "Now let's run our application via Quarkus dev mode:"
msgstr "现在让我们通过Quarkus开发模式运行我们的应用程序。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:353
#, fuzzy
msgid "You can add new fruits to the list via the following curl command:"
msgstr "你可以通过以下curl命令将新的水果添加到列表中。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:357
#, no-wrap
msgid "curl localhost:8080/fruits -d '{\"name\": \"bananas\", \"color\": \"yellow\"}' -H \"Content-Type: application/json\"\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:360
#, fuzzy
msgid "And search for fruits by name or color via the flowing curl command:"
msgstr "并通过流动的curl命令按名称或颜色搜索水果。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:364
#, no-wrap
msgid "curl localhost:8080/fruits/search?color=yellow\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:366
#, fuzzy, no-wrap
msgid "Using the High Level REST Client"
msgstr "使用高水平的REST客户端"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:369
#, fuzzy
msgid "Quarkus provides support for the Elasticsearch High Level REST Client but keep in mind that it comes with some caveats:"
msgstr "Quarkus提供了对Elasticsearch高水平REST客户端的支持，但请记住，它有一些注意事项。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:371
#, fuzzy
msgid "It drags a lot of dependencies - especially Lucene -, which doesn't fit well with Quarkus philosophy. The Elasticsearch team is aware of this issue and it might improve sometime in the future."
msgstr "它拖累了很多的依赖关系--尤其是Lucene--这与Quarkus的理念不相符合。Elasticsearch团队意识到了这个问题，它可能会在未来某个时候得到改善。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:372
#, fuzzy
msgid "It is tied to a certain version of the Elasticsearch server: you cannot use a High Level REST Client version 7 to access a server version 6."
msgstr "它与Elasticsearch服务器的某个版本相联系：你不能使用7版的High Level REST客户端来访问6版的服务器。"

#. type: delimited block =
#: upstream/_guides/elasticsearch.adoc:378
#, fuzzy
msgid "Due to the license change made by Elastic for the Elasticsearch High Level REST Client, we are keeping in Quarkus the last Open Source version of this particular client, namely 7.10, and it won't be upgraded to newer versions."
msgstr "由于Elastic对Elasticsearch高层REST客户端的许可变更，我们在Quarkus中保留了这个特定客户端的最后一个开源版本，即7.10，它不会被升级到更新的版本。"

#. type: delimited block =
#: upstream/_guides/elasticsearch.adoc:381
#, fuzzy
msgid "Given this client was deprecated by Elastic and replaced by a new Open Source Java client, the Elasticsearch High Level REST Client extension is considered deprecated and will be removed from the Quarkus codebase at some point in the future."
msgstr "鉴于这个客户端已被Elastic废弃，并被一个新的开源Java客户端取代，Elasticsearch高层REST客户端扩展被认为是废弃的，并将在未来的某个时间从Quarkus代码库中删除。"

#. type: delimited block =
#: upstream/_guides/elasticsearch.adoc:387
#, fuzzy
msgid "Note that contrary to the High Level REST client, we are using the latest version of the Low Level REST client (which is still Open Source), and, while we believe it should work, the situation is less than ideal and might cause some issues.  Feel free to override the versions of the clients in your applications depending on your requirements, but be aware of https://www.elastic.co/blog/elastic-license-v2[the new licence of the High Level REST Client] for versions 7.11+: it is not Open Source and has several usage restrictions."
msgstr "请注意，与High Level REST客户端相反，我们使用的是Low Level REST客户端的最新版本（它仍然是开源的），虽然我们相信它应该可以工作，但情况并不理想，可能会引起一些问题。请根据你的要求，在你的应用程序中随意覆盖客户端的版本，但要注意7.11以上版本的 link:https://www.elastic.co/blog/elastic-license-v2[高级别REST客户端的新许可] ：它不是开源的，而且有一些使用限制。"

#. type: delimited block =
#: upstream/_guides/elasticsearch.adoc:390
#, fuzzy
msgid "We will eventually provide an extension for the new Open Source Java client but it will require changes in your applications as it is an entirely new client."
msgstr "我们最终将为新的开源Java客户端提供一个扩展，但由于它是一个全新的客户端，需要对你的应用程序进行修改。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:393
#, fuzzy
msgid "Here is a version of the `FruitService` using the high level client instead of the low level one:"
msgstr "这里有一个版本的 `FruitService` ，使用高水平的客户端而不是低水平的客户端。"

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:415
#, no-wrap
msgid ""
"import org.elasticsearch.action.get.GetRequest;\n"
"import org.elasticsearch.action.get.GetResponse;\n"
"import org.elasticsearch.action.index.IndexRequest;\n"
"import org.elasticsearch.action.search.SearchRequest;\n"
"import org.elasticsearch.action.search.SearchResponse;\n"
"import org.elasticsearch.client.RequestOptions;\n"
"import org.elasticsearch.client.RestHighLevelClient;\n"
"import org.elasticsearch.common.xcontent.XContentType;\n"
"import org.elasticsearch.index.query.QueryBuilders;\n"
"import org.elasticsearch.search.SearchHit;\n"
"import org.elasticsearch.search.SearchHits;\n"
"import org.elasticsearch.search.builder.SearchSourceBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:417
#, no-wrap
msgid "import io.vertx.core.json.JsonObject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:422
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class FruitService {\n"
"    @Inject\n"
"    RestHighLevelClient restHighLevelClient; // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:429
#, no-wrap
msgid ""
"    public void index(Fruit fruit) throws IOException {\n"
"        IndexRequest request = new IndexRequest(\"fruits\"); // <2>\n"
"        request.id(fruit.id);\n"
"        request.source(JsonObject.mapFrom(fruit).toString(), XContentType.JSON); // <3>\n"
"        restHighLevelClient.index(request, RequestOptions.DEFAULT); // <4>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:440
#, no-wrap
msgid ""
"    public Fruit get(String id) throws IOException {\n"
"        GetRequest getRequest = new GetRequest(\"fruits\", id);\n"
"        GetResponse getResponse = restHighLevelClient.get(getRequest, RequestOptions.DEFAULT);\n"
"        if (getResponse.isExists()) {\n"
"            String sourceAsString = getResponse.getSourceAsString();\n"
"            JsonObject json = new JsonObject(sourceAsString); // <5>\n"
"            return json.mapTo(Fruit.class);\n"
"        }\n"
"        return null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:454
#, no-wrap
msgid ""
"    private List<Fruit> search(String term, String match) throws IOException {\n"
"        SearchRequest searchRequest = new SearchRequest(\"fruits\");\n"
"        SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\n"
"        searchSourceBuilder.query(QueryBuilders.matchQuery(term, match));\n"
"        searchRequest.source(searchSourceBuilder);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/elasticsearch.adoc:466
#, no-wrap
msgid ""
"        SearchResponse searchResponse = restHighLevelClient.search(searchRequest, RequestOptions.DEFAULT);\n"
"        SearchHits hits = searchResponse.getHits();\n"
"        List<Fruit> results = new ArrayList<>(hits.getHits().length);\n"
"        for (SearchHit hit : hits.getHits()) {\n"
"            String sourceAsString = hit.getSourceAsString();\n"
"            JsonObject json = new JsonObject(sourceAsString);\n"
"            results.add(json.mapTo(Fruit.class));\n"
"        }\n"
"        return results;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:471
#, fuzzy
msgid "We inject an Elasticsearch `RestHighLevelClient` inside the service."
msgstr "我们在服务中注入一个Elasticsearch `RestHighLevelClient` 。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:472
#, fuzzy
msgid "We create an Elasticsearch index request."
msgstr "我们创建一个Elasticsearch索引请求。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:474
#, fuzzy
msgid "We send the request to Elasticsearch."
msgstr "我们将请求发送到Elasticsearch。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:476
#, fuzzy, no-wrap
msgid "Hibernate Search Elasticsearch"
msgstr "Hibernate 搜索 Elasticsearch"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:479
#, fuzzy
msgid "Quarkus supports Hibernate Search with Elasticsearch via the `hibernate-search-orm-elasticsearch` extension."
msgstr "Quarkus通过 `hibernate-search-orm-elasticsearch` 扩展支持Hibernate Search与Elasticsearch。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:481
#, fuzzy
msgid "Hibernate Search Elasticsearch allows to synchronize your JPA entities to an Elasticsearch cluster and offers a way to query your Elasticsearch cluster using the Hibernate Search API."
msgstr "Hibernate Search Elasticsearch允许将你的JPA实体同步到Elasticsearch集群，并提供了一种使用Hibernate Search API查询Elasticsearch集群的方法。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:483
#, fuzzy
msgid "If you're interested in it, you can read the xref:hibernate-search-orm-elasticsearch.adoc[Hibernate Search with Elasticsearch guide]."
msgstr "如果你对它感兴趣，你可以阅读 link:hibernate-search-orm-elasticsearch.html[Hibernate Search with Elasticsearch指南] 。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:484
#, fuzzy, no-wrap
msgid "Cluster Health Check"
msgstr "集群健康检查"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:488
#, fuzzy
msgid "If you are using the `quarkus-smallrye-health` extension, both the extension will automatically add a readiness health check to validate the health of the cluster."
msgstr "如果你使用 `quarkus-smallrye-health` 扩展，这两个扩展将自动添加一个就绪健康检查，以验证集群的健康。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:491
#, fuzzy
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the cluster status.  It uses the cluster health endpoint, the check will be down if the status of the cluster is **red**, or the cluster is not available."
msgstr "因此，当你访问你的应用程序的 `/q/health/ready` 端点时，你将有关于集群状态的信息。它使用集群健康端点，如果集群的状态是 *红色的* ，或者集群不可用，检查就会下降。"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:493
msgid "This behavior can be disabled by setting the `quarkus.elasticsearch.health.enabled` property to `false` in your `application.properties`."
msgstr ""

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:494
#, no-wrap
msgid "Building a native executable"
msgstr "构建一个本地可执行文件"

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:497
msgid "You can use both clients in a native executable."
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:499
msgid "You can build a native executable with the usual command:"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:503
msgid "Running it is as simple as executing `./target/elasticsearch-low-level-client-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:505
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "然后你可以使用的浏览器访问 `<a href=\"http://localhost:8080/fruits.html\" class=\"bare\">http://localhost:8080/fruits.html</a>` 来使用你的应用程序。"

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:506
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_guides/elasticsearch.adoc:509
msgid "Accessing an Elasticsearch cluster from a low level or a high level client is easy with Quarkus as it provides easy configuration, CDI integration and native support for it."
msgstr ""

#. type: Title ==
#: upstream/_guides/elasticsearch.adoc:510
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"
