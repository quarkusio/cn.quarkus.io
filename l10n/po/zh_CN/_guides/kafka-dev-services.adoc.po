# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/kafka-dev-services.adoc:6
#, fuzzy, no-wrap
msgid "Dev Services for Kafka"
msgstr "Kafka的开发服务"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:13
#, fuzzy
msgid "If any Kafka-related extension is present (e.g. `quarkus-smallrye-reactive-messaging-kafka`), Dev Services for Kafka automatically starts a Kafka broker in dev mode and when running tests.  So, you don't have to start a broker manually.  The application is configured automatically."
msgstr "如果有任何Kafka相关的扩展（如 `quarkus-smallrye-reactive-messaging-kafka` ），Kafka的Dev服务会在开发模式和运行测试时自动启动一个Kafka代理。所以，你不需要手动启动代理。该应用程序是自动配置的。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:15
#, fuzzy
msgid "Because starting a Kafka broker can be long, Dev Services for Kafka uses https://vectorized.io/redpanda[Redpanda], a Kafka compatible broker which starts in ~1 second."
msgstr "因为启动Kafka经纪人的时间可能很长，所以Kafka的Dev Services使用 link:https://vectorized.io/redpanda[Redpanda] ，这是一个与Kafka兼容的经纪人，启动时间为1秒左右。"

#. type: Title ==
#: upstream/_guides/kafka-dev-services.adoc:16
#, fuzzy, no-wrap
msgid "Enabling / Disabling Dev Services for Kafka"
msgstr "启用/禁用Kafka的开发服务"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:19
#, fuzzy
msgid "Dev Services for Kafka is automatically enabled unless:"
msgstr "Kafka的Dev服务是自动启用的，除非。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:21
#, fuzzy
msgid "`quarkus.kafka.devservices.enabled` is set to `false`"
msgstr " `quarkus.kafka.devservices.enabled` 被设置为 `false` "

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:22
#, fuzzy
msgid "the `kafka.bootstrap.servers` is configured"
msgstr " `kafka.bootstrap.servers` 进行了配置。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:23
#, fuzzy
msgid "all the Reactive Messaging Kafka channels have the `bootstrap.servers` attribute set"
msgstr "所有Reactive Messaging Kafka通道都设置了 `bootstrap.servers` 属性。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:27
#, fuzzy
msgid "Dev Services for Kafka relies on Docker to start the broker.  If your environment does not support Docker, you will need to start the broker manually, or connect to an already running broker.  You can configure the broker address using `kafka.bootstrap.servers`."
msgstr "Kafka的Dev服务依赖于Docker来启动代理。如果你的环境不支持Docker，你将需要手动启动代理，或者连接到一个已经运行的代理。你可以使用 `kafka.bootstrap.servers` 来配置代理地址。"

#. type: Title ==
#: upstream/_guides/kafka-dev-services.adoc:28
#, fuzzy, no-wrap
msgid "Shared broker"
msgstr "共享的经纪人"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:32
#, fuzzy
msgid "Most of the time you need to share the broker between applications.  Dev Services for Kafka implements a _service discovery_ mechanism for your multiple Quarkus applications running in _dev_ mode to share a single broker."
msgstr "大多数情况下，你需要在应用程序之间共享代理。Kafka的开发服务实现了一个 _服务发现_ 机制，让你的多个Quarkus应用程序在 _开发_ 模式下运行，共享一个代理。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:34
#, fuzzy
msgid "Dev Services for Kafka starts the container with the `quarkus-dev-service-kafka` label which is used to identify the container."
msgstr "Dev Services for Kafka用 `quarkus-dev-service-kafka` 标签来启动容器，该标签用于识别容器。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:38
#, fuzzy
msgid "If you need multiple (shared) brokers, you can configure the `quarkus.kafka.devservices.service-name` attribute and indicate the broker name.  It looks for a container with the same value, or starts a new one if none can be found.  The default service name is `kafka`."
msgstr "如果你需要多个（共享的）经纪人，你可以配置 `quarkus.kafka.devservices.service-name` 属性并指出经纪人的名字。它寻找一个具有相同值的容器，如果找不到，就启动一个新的容器。默认的服务名称是 `kafka` 。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:41
#, fuzzy
msgid "Sharing is enabled by default in dev mode, but disabled in test mode.  You can disable the sharing with `quarkus.kafka.devservices.shared=false`."
msgstr "在开发模式下，共享是默认启用的，但在测试模式下禁用。你可以用 `quarkus.kafka.devservices.shared=false` 停用共享。"

#. type: Title ==
#: upstream/_guides/kafka-dev-services.adoc:42
#, fuzzy, no-wrap
msgid "Setting the port"
msgstr "设置端口"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:46
#, fuzzy
msgid "By default, Dev Services for Kafka picks a random port and configures the application.  You can set the port by configuring the `quarkus.kafka.devservices.port` property."
msgstr "默认情况下，Dev Services for Kafka会随机挑选一个端口并配置应用程序。你可以通过配置 `quarkus.kafka.devservices.port` 属性来设置端口。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:48
#, fuzzy
msgid "Note that the Kafka advertised address is automatically configured with the chosen port."
msgstr "注意，Kafka的广告地址会自动配置为所选择的端口。"

#. type: Title ==
#: upstream/_guides/kafka-dev-services.adoc:49
#, fuzzy, no-wrap
msgid "Configuring the image"
msgstr "配置图像"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:52
#, fuzzy
msgid "Dev Services for Kafka supports https://redpanda.com[Redpanda] and https://strimzi.io[Strimzi] (in https://github.com/apache/kafka/blob/trunk/config/kraft/README.md[Kraft] mode)."
msgstr "Kafka的Dev服务支持 link:https://redpanda.com[Redpanda] 和 link:https://strimzi.io[Strimzi] （在 link:https://github.com/apache/kafka/blob/trunk/config/kraft/README.md[Kraft] 模式下）。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:56
#, fuzzy
msgid "Redpanda is a Kafka compatible event streaming platform.  Because it provides a faster startup time dev services defaults to `vectorized/redpanda` images.  You can select any version from https://hub.docker.com/r/vectorized/redpanda."
msgstr "Redpanda是一个兼容Kafka的事件流平台。因为它提供了更快的启动时间，dev服务默认为 `vectorized/redpanda` 图像。你可以从 https://hub.docker.com/r/vectorized/redpanda  中选择任何版本 https://hub.docker.com/r/vectorized/redpanda "

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:60
#, fuzzy
msgid "Strimzi provides container images and Operators for running Apache Kafka on Kubernetes.  While Strimzi is optimized for Kubernetes, the images work perfectly in classic container environments.  Strimzi container images run \"genuine\" Kafka broker on JVM, which is slower to start."
msgstr "Strimzi为在Kubernetes上运行Apache Kafka提供了容器镜像和操作器。虽然Strimzi针对Kubernetes进行了优化，但这些镜像在经典的容器环境中也能完美运行。Strimzi容器镜像在JVM上运行 \"真正的 \"Kafka代理，其启动速度较慢。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:62
#, fuzzy
msgid "For Strimzi, you can select any image with a Kafka version which has Kraft support (2.8.1 and higher) from https://quay.io/repository/strimzi-test-container/test-container?tab=tags"
msgstr "对于Strimzi，你可以从 https://quay.io/repository/strimzi-test-container/test-container?tab=tags ，选择任何具有Kraft支持（2.8.1及以上）的Kafka版本的图像。"

#. type: delimited block -
#: upstream/_guides/kafka-dev-services.adoc:66
#, no-wrap
msgid "quarkus.kafka.devservices.image-name=quay.io/strimzi-test-container/test-container:0.100.0-kafka-3.1.0\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-dev-services.adoc:68
#, fuzzy, no-wrap
msgid "Configuring Kafka topics"
msgstr "配置Kafka主题"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:72
#, fuzzy
msgid "You can configure the Dev Services for Kafka to create topics once the broker is started.  Topics are created with given number of partitions and 1 replica."
msgstr "你可以配置Dev Services for Kafka，以便在代理启动后创建主题。主题是以给定的分区数量和1个副本创建的。"

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:74
#, fuzzy
msgid "The following example creates a topic named `test` with 3 partitions, and a second topic named `messages` with 2 partitions."
msgstr "下面的例子创建了一个名为 `test` ，有3个分区的主题，以及第二个名为 `messages` ，有2个分区的主题。"

#. type: delimited block -
#: upstream/_guides/kafka-dev-services.adoc:79
#, no-wrap
msgid ""
"quarkus.kafka.devservices.topic-partitions.test=3\n"
"quarkus.kafka.devservices.topic-partitions.messages=2\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:83
msgid "If a topic already exists with the given name, the creation is skipped, without trying to re-partition the existing topic to a different number of partitions."
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:85
msgid "You can configure timeout for Kafka admin client calls used in topic creation using `quarkus.kafka.devservices.topic-partitions-timeout`, it defaults to 2 seconds."
msgstr ""

#. type: Title ==
#: upstream/_guides/kafka-dev-services.adoc:86
#, no-wrap
msgid "Enabling transactions"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:90
msgid "By default, the Red Panda broker does not act as a transaction coordinator.  To enable transactions, set:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kafka-dev-services.adoc:94
#, no-wrap
msgid "quarkus.kafka.devservices.redpanda.transaction-enabled=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kafka-dev-services.adoc:96
msgid "It also enables producer idempotence support."
msgstr ""
