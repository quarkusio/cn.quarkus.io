# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/apicurio-registry-dev-services.adoc:6
#, fuzzy, no-wrap
msgid "Dev Services for Apicurio Registry"
msgstr "为Apicurio注册处提供开发服务"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:13
#, fuzzy
msgid "If an extension for schema registry, such as `quarkus-apicurio-registry-avro` or `quarkus-confluent-registry-avro`, is present, Dev Services for Apicurio Registry automatically starts an Apicurio Registry instance in dev mode and when running tests.  Also, all Kafka channels in SmallRye Reactive Messaging are automatically configured to use this registry.  This automatic configuration only applies to serializers and deserializers from Apicurio Registry serde libraries and Confluent Schema Registry serde libraries, because there properties are set:"
msgstr "如果存在模式注册表的扩展，如 `quarkus-apicurio-registry-avro` 或 `quarkus-confluent-registry-avro` ，Apicurio注册表的开发服务会在开发模式和运行测试时自动启动Apicurio注册表实例。此外，SmallRye Reactive Messaging中的所有Kafka通道都被自动配置为使用该注册表。这种自动配置只适用于Apicurio Registry serde库和Confluent Schema Registry serde库的序列化器和反序列化器，因为它们的属性已被设置。"

#. type: delimited block -
#: upstream/_guides/apicurio-registry-dev-services.adoc:20
#, no-wrap
msgid ""
"# for Apicurio Registry serde\n"
"mp.messaging.connector.smallrye-kafka.apicurio.registry.url=http://localhost:8081/apis/registry/v2\n"
"# for Confluent Schema Registry serde\n"
"mp.messaging.connector.smallrye-kafka.schema.registry.url=http://localhost:8081/apis/ccompat/v6\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/apicurio-registry-dev-services.adoc:23
#, fuzzy, no-wrap
msgid "Enabling / Disabling Dev Services for Apicurio Registry"
msgstr "启用/禁用Apicurio注册表的开发服务"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:26
#, fuzzy
msgid "Dev Services for Apicurio Registry is automatically enabled unless:"
msgstr "Apicurio注册表的开发服务是自动启用的，除非。"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:28
#, fuzzy
msgid "`quarkus.apicurio-registry.devservices.enabled` is set to `false`"
msgstr " `quarkus.apicurio-registry.devservices.enabled` 被设置为 `false` "

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:29
#, fuzzy
msgid "`mp.messaging.connector.smallrye-kafka.apicurio.registry.url` is configured"
msgstr " `mp.messaging.connector.smallrye-kafka.apicurio.registry.url` 被配置为"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:30
#, fuzzy
msgid "`mp.messaging.connector.smallrye-kafka.schema.registry.url` is configured"
msgstr " `mp.messaging.connector.smallrye-kafka.schema.registry.url` 被配置为"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:31
#, fuzzy
msgid "all the Reactive Messaging Kafka channels have either the `apicurio.registry.url` attribute or the `schema.registry.url` attribute set"
msgstr "所有Reactive Messaging Kafka通道都设置了 `apicurio.registry.url` 属性或 `schema.registry.url` 属性。"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:36
#, fuzzy
msgid "Dev Services for Apicurio Registry relies on Docker to start the registry.  If your environment does not support Docker, you will need to start the registry manually, or use an already running registry.  In such case, you can configure the registry URL for all Kafka channels in SmallRye Reactive Messaging with a single property.  For Apicurio Registry serde, that is:"
msgstr "Apicurio注册中心的开发服务依赖于Docker来启动注册中心。如果你的环境不支持Docker，你将需要手动启动注册表，或者使用已经运行的注册表。在这种情况下，你可以用一个属性为SmallRye Reactive Messaging中的所有Kafka通道配置注册表的URL。对于Apicurio Registry serde来说，就是。"

#. type: delimited block -
#: upstream/_guides/apicurio-registry-dev-services.adoc:40
#, no-wrap
msgid "mp.messaging.connector.smallrye-kafka.apicurio.registry.url=... your Apicuio Registry URL...\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:43
#, fuzzy
msgid "For Confluent Schema Registry serde, that is:"
msgstr "对于Confluent Schema Registry serde来说，就是这样。"

#. type: delimited block -
#: upstream/_guides/apicurio-registry-dev-services.adoc:47
#, no-wrap
msgid "mp.messaging.connector.smallrye-kafka.schema.registry.url=... your Confluent Schema Registry URL...\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/apicurio-registry-dev-services.adoc:49
#, fuzzy, no-wrap
msgid "Shared registry"
msgstr "共享的登记簿"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:53
#, fuzzy
msgid "Most of the time you need to share the registry between applications.  Dev Services for Apicurio Registry implements a _service discovery_ mechanism for your multiple Quarkus applications running in _dev_ mode to share a single registry."
msgstr "大多数情况下，你需要在应用程序之间共享注册表。Apicurio注册表的开发服务为你在 _开发_ 模式下运行的多个Quarkus应用程序实现了一种 _服务发现_ 机制，以共享一个注册表。"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:55
#, fuzzy
msgid "Dev Services for Apicurio Registry starts the container with the `quarkus-dev-service-apicurio-registry` label which is used to identify the container."
msgstr "Apicurio注册中心的开发服务用 `quarkus-dev-service-apicurio-registry` 标签来启动容器，该标签用于识别容器。"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:59
#, fuzzy
msgid "If you need multiple (shared) registries, you can configure the `quarkus.apicurio-registry.devservices.service-name` attribute and indicate the registry name.  It looks for a container with the same value, or starts a new one if none can be found.  The default service name is `apicurio-registry`."
msgstr "如果你需要多个（共享）注册表，你可以配置 `quarkus.apicurio-registry.devservices.service-name` 属性并指出注册表的名称。它寻找一个具有相同值的容器，如果找不到，就启动一个新的容器。默认的服务名称是 `apicurio-registry` 。"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:62
#, fuzzy
msgid "Sharing is enabled by default in dev mode, but disabled in test mode.  You can disable the sharing with `quarkus.apicurio-registry.devservices.shared=false`."
msgstr "在开发模式下，共享是默认启用的，但在测试模式下禁用。你可以用 `quarkus.apicurio-registry.devservices.shared=false` 停用共享。"

#. type: Title ==
#: upstream/_guides/apicurio-registry-dev-services.adoc:63
#, fuzzy, no-wrap
msgid "Setting the port"
msgstr "设置端口"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:67
#, fuzzy
msgid "By default, Dev Services for Apicurio Registry picks a random port and configures the application.  You can set the port by configuring the `quarkus.apicurio-registry.devservices.port` property."
msgstr "默认情况下，Apicurio Registry的Dev Services会随机选取一个端口并配置应用程序。你可以通过配置 `quarkus.apicurio-registry.devservices.port` 属性来设置端口。"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:69
#, fuzzy
msgid "Note that the Kafka channels in SmallRye Reactive messaging are automatically configured with the chosen port."
msgstr "注意，SmallRye Reactive消息传递中的Kafka通道会自动配置为所选择的端口。"

#. type: Title ==
#: upstream/_guides/apicurio-registry-dev-services.adoc:70
#, fuzzy, no-wrap
msgid "Configuring the image"
msgstr "配置图像"

#. type: Plain text
#: upstream/_guides/apicurio-registry-dev-services.adoc:74
msgid "Dev Services for Apicurio Registry uses `apicurio/apicurio-registry-mem` images.  You can select any 2.x version from https://hub.docker.com/r/apicurio/apicurio-registry-mem:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/apicurio-registry-dev-services.adoc:78
#, no-wrap
msgid "quarkus.apicurio-registry.devservices.image-name=apicurio/apicurio-registry-mem:latest-snapshot\n"
msgstr ""
