# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-12-06 10:14+0000\n"
"PO-Revision-Date: 2022-08-10 11:57+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.1.1\n"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Using OpenID Connect (OIDC) and Keycloak to centralize authorization"
msgstr "使用 OpenID Connect (OIDC) 和 Keycloak 集中授权"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Learn how to enable bearer token authorization in your Quarkus application using link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] for secure access to protected resources."
msgstr "了解如何使用 link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak 授权服务] 在 Quarkus 应用程序中启用不记名令牌授权，以安全访问受保护的资源。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `quarkus-keycloak-authorization` extension relies on `quarkus-oidc`.\n"
"It includes a policy enforcer that regulates access to secured resources.\n"
"Access is governed by permissions set in Keycloak.\n"
"Currently, this extension is compatible solely with Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC service applications]."
msgstr "`quarkus-keycloak-authorization` 扩展依赖于 `quarkus-oidc` 。它包括一个策略执行器，用于管理对安全资源的访问。访问受 Keycloak 中设置的权限控制。目前，该扩展仅与 Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC 服务应用] 兼容。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "It provides a flexible and dynamic authorization capability based on Resource-Based Access Control."
msgstr "它在基于资源的访问控制的基础上提供了灵活和动态的授权能力。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Rather than explicitly enforcing access through specific mechanisms such as role-based access control (RBAC), `quarkus-keycloak-authorization` determines request permissions based on resource attributes such as name, identifier, or Uniform Resource Identifier (URI).\n"
"This process involves sending a `quarkus-oidc`-verified bearer access token to Keycloak Authorization Services for an authorization decision."
msgstr "`quarkus-keycloak-authorization` 不是通过特定机制（如基于角色的访问控制（RBAC））明确执行访问，而是根据资源属性（如名称、标识符或统一资源标识符（URI））确定请求权限。这一过程包括向 Keycloak 授权服务发送经过 `quarkus-oidc` 验证的承载访问令牌，以便作出授权决定。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Use `quarkus-keycloak-authorization` only if you work with Keycloak and have Keycloak Authorization Services enabled to make authorization decisions.\n"
"Use `quarkus-oidc` if you do not work with Keycloak or work with Keycloak but do not have its Keycloak Authorization Services enabled to make authorization decisions."
msgstr "如果您与 Keycloak 合作并启用了 Keycloak 授权服务以作出授权决定，请使用 `quarkus-keycloak-authorization` 。如果您不与 Keycloak 合作，或与 Keycloak 合作但未启用 Keycloak 授权服务以作出授权决定，请使用 `quarkus-oidc` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"By shifting authorization responsibilities outside your application, you enhance security through various access control methods while eliminating the need for frequent re-deployments whenever security needs evolve.\n"
"In this case, Keycloak acts as a centralized authorization hub, managing your protected resources and their corresponding permissions effectively."
msgstr "通过将授权责任转移到应用程序之外，您可以通过各种访问控制方法提高安全性，同时无需在安全需求发生变化时频繁重新部署。在这种情况下，Keycloak 可充当集中授权中心，有效管理受保护的资源及其相应权限。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"For more information, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] guide.\n"
"It is important to realize that the Bearer token authentication mechanism does the authentication and creates a security identity.\n"
"Meanwhile, the `quarkus-keycloak-authorization` extension applies a Keycloak Authorization Policy to this identity based on the current request path and other policy settings."
msgstr "更多信息，请参阅 xref:security-oidc-bearer-token-authentication.adoc[OIDC 不记名令牌] 身份验证指南。必须认识到，不记名令牌身份验证机制会进行身份验证并创建一个安全身份。同时， `quarkus-keycloak-authorization` 扩展会根据当前请求路径和其他策略设置对该身份应用 Keycloak 授权策略。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For more information, see https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services documentation]."
msgstr "有关详细信息，请参阅 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak 授权服务文档] 。"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "link:https://stedolan.github.io/jq/[jq工具]"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org[Keycloak]"
msgstr "link:https://www.keycloak.org[钥匙斗篷]"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "In this example, we build a very simple microservice that offers two endpoints:"
msgstr "在本例中，我们构建了一个非常简单的微服务，提供两个端点："

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "`/api/users/me`"
msgstr " `/api/users/me` "

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "`/api/admin`"
msgstr " `/api/admin` "

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"These endpoints are protected.\n"
"Access is granted only when a client sends a bearer token with the request.\n"
"This token must be valid, having a correct signature, expiration date, and audience.\n"
"Additionally, the microservice must trust the token."
msgstr "这些端点受到保护。只有当客户随请求发送承载令牌时，才允许访问。令牌必须有效，具有正确的签名、过期日期和受众。此外，微服务必须信任令牌。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The bearer token is issued by a Keycloak server and represents the subject for which the token was issued.\n"
"For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgstr "承载令牌由 Keycloak 服务器颁发，代表颁发令牌的主体。如果是 OAuth 2.0 授权服务器，令牌还可以引用代表用户的客户端。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `/api/users/me` endpoint can be accessed by any user with a valid token.\n"
"As a response, it returns a JSON document with details about the user obtained from the information carried on the token.\n"
"This endpoint is protected with RBAC, and only users granted with the `user` role can access this endpoint."
msgstr "任何持有有效令牌的用户都可以访问 `/api/users/me` 端点。作为响应，它会返回一个 JSON 文档，其中包含从令牌信息中获取的用户详细信息。该端点受 RBAC 保护，只有被授予 `user` 角色的用户才能访问该端点。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `/api/admin` endpoint is protected with RBAC, and only users granted the `admin` role can access it."
msgstr "`/api/admin` 端点受 RBAC 保护，只有被授予 `admin` 角色的用户才能访问它。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This is a very simple example of using RBAC policies to govern access to your resources.\n"
"However, Keycloak supports other policies that you can use to perform even more fine-grained access control.\n"
"By using this example, you'll see that your application is completely decoupled from your authorization policies, with enforcement purely based on the accessed resource."
msgstr "这是使用 RBAC 策略管理资源访问的一个非常简单的示例。不过，Keycloak 还支持其他策略，你可以用它们来执行更精细的访问控制。通过这个例子，你会发现你的应用程序与授权策略完全脱钩，完全根据访问的资源来执行。"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档] 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The solution is in the `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[directory]."
msgstr "解决方案位于 `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[目录] 中。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Creating the project"
msgstr "创建项目"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"First, we need a new project.\n"
"Create a new project with the following command:"
msgstr "首先，我们需要一个新的工程项目。用以下命令创建一个新项目："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This command generates a project, importing the `keycloak-authorization` extension.\n"
"This extension implements a Keycloak Adapter for Quarkus applications and provides all the necessary capabilities to integrate with a Keycloak server and perform bearer token authorization."
msgstr "该命令生成一个项目，导入 `keycloak-authorization` 扩展。该扩展为 Quarkus 应用程序实现了 Keycloak 适配器，并提供了与 Keycloak 服务器集成和执行不记名令牌授权所需的所有功能。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `oidc` and `keycloak-authorization` extensions\n"
"to your project by running the following command in your project base directory:"
msgstr "如果您已经配置了Quarkus项目，您可以通过在项目根目录中执行以下命令将 `oidc` 和 `keycloak-authorization` 扩展添加到您的项目中:"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This adds the following dependencies to your build file:"
msgstr "这会在构建文件中添加以下依赖项："

#. type: Block title
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Let's start by implementing the `/api/users/me` endpoint.\n"
"As you can see in the following source code, it is a regular Jakarta REST resource:"
msgstr "让我们从实现 `/api/users/me` 端点开始。从下面的源代码中可以看到，这是一个普通的 Jakarta REST 资源："

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple:"
msgstr "`/api/admin` 节点的源代码也非常简单："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Be aware that we have not defined annotations such as `@RolesAllowed` to explicitly enforce access to a resource.\n"
"Instead, the extension is responsible for mapping the URIs of the protected resources in Keycloak and evaluating the permissions accordingly, granting or denying access depending on the permissions granted by Keycloak."
msgstr "请注意，我们并未定义诸如 `@RolesAllowed` 这样的注解来明确执行对资源的访问。相反，扩展负责映射 Keycloak 中受保护资源的 URI，并据此评估权限，根据 Keycloak 授予的权限授予或拒绝访问。"

#. type: Title ===
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "配置应用"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The OpenID Connect extension allows you to define the adapter configuration by using the `application.properties` file, which is usually located in the `src/main/resources` directory."
msgstr "OpenID Connect 扩展允许使用 `application.properties` 文件定义适配器配置，该文件通常位于 `src/main/resources` 目录中。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Adding a `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that Dev Services for Keycloak launches a container for you when the application is run in dev mode.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr "在 `quarkus.oidc.auth-server-url` 中添加 `%prod.` 配置文件前缀，可确保在开发模式下运行应用程序时，Keycloak 的 Dev Services 会为您启动容器。有关详细信息，请参阅在开发模式下 xref:keycloak-dev-mode[运行应用程序] 部分。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"By default, applications that use the `quarkus-oidc` extension are marked as a `service` type application (see `quarkus.oidc.application-type`).\n"
"This extension also supports only  `web-app` type applications but only if the access token returned as part of the authorization code grant response is marked as a source of roles: `quarkus.oidc.roles.source=accesstoken` (`web-app` type applications check ID token roles by default)."
msgstr "默认情况下，使用 `quarkus-oidc` 扩展的应用程序会被标记为 `service` 类型的应用程序（请参阅 `quarkus.oidc.application-type` ）。该扩展也只支持 `web-app` 类型的应用程序，但前提是作为授权码授予响应一部分返回的访问令牌被标记为角色来源： `quarkus.oidc.roles.source=accesstoken` （默认情况下， `web-app` 类型的应用程序会检查 ID 令牌角色）。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Starting and configuring the Keycloak server"
msgstr "启动和配置 Keycloak 服务器"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Do not start the Keycloak server when you run the application in dev mode.\n"
"Dev Services for Keycloak launches a container.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr "在开发模式下运行应用程序时，请勿启动 Keycloak 服务器。Keycloak 的开发服务会启动一个容器。有关详细信息，请参阅 xref:keycloak-dev-mode[在开发模式下运行应用程序] 部分。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To start a Keycloak server, use the following Docker command:"
msgstr "要启动 Keycloak 服务器，请使用以下 Docker 命令："

#: _guides/security-keycloak-authorization.adoc
msgid "where `keycloak.version` must be `25.0.0` or later and the `keycloak-keystore.jks` can be found in https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config]."
msgstr ""

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Try to access your Keycloak server at https://localhost:8543[localhost:8543]."
msgstr "尝试从 link:https://localhost:8543[localhost:8543] 访问 Keycloak 服务器。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To access the Keycloak Administration Console, log in as the `admin` user.\n"
"The username and password are both `admin`."
msgstr "要访问 Keycloak 管理控制台，请以 `admin` 用户身份登录。用户名和密码都是 `admin` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.\n"
"For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "导入 link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[领域配置文件] 以创建新领域。更多详情，请参阅 Keycloak 文档，了解如何 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建新领域] 。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "After importing the realm you can see the resource permissions:"
msgstr "导入realm后，您可以看到资源的权限："

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "It explains why the endpoint has no `@RolesAllowed` annotations - the resource access permissions are set directly in Keycloak."
msgstr "这解释了为什么节点没有 `@RolesAllowed` 注解--资源访问权限是直接在Keycloak中设置的。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in dev mode"
msgstr "在开发模式下运行应用程序"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "To run the application in dev mode, use:"
msgstr "要在开发模式下运行应用程序，请使用："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] launches a Keycloak container and imports a `quarkus-realm.json`."
msgstr "xref:security-openid-connect-dev-services.adoc[Keycloak 开发服务] 启动 Keycloak 容器并导入 `quarkus-realm.json` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "打开 link:http://localhost:8080/q/dev-ui[/q/dev-ui] 上的 xref:dev-ui.adoc[Dev UI] ，点击 `OpenID Connect` `Dev UI` 卡上的 `Provider: Keycloak` 链接。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "When asked to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr "当被要求登录 `OpenID Connect Dev UI` 提供的 `Single Page Application` 时："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log in as `alice` (password: `alice`), who only has a `User Permission` to access the `/api/users/me` resource:"
msgstr "以 `alice` 登录（密码： `alice` ），只有 `User Permission` 才能访问 `/api/users/me` 资源："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/admin`, which returns `403`."
msgstr "访问 `/api/admin` ，返回 `403` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/users/me`, which returns `200`."
msgstr "访问 `/api/users/me` ，返回 `200` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log out and log in as `admin` (password: `admin`), who has both `Admin Permission` to access the `/api/admin` resource and `User Permission` to access the `/api/users/me` resource:"
msgstr "注销并以 `admin` （密码： `admin` ）登录，该用户同时拥有 `Admin Permission` 和 `User Permission` ，前者可访问 `/api/admin` 资源，后者可访问 `/api/users/me` 资源："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/admin`, which returns `200`."
msgstr "访问 `/api/admin` ，返回 `200` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If you have started xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] without importing a realm file such as link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json] that is already configured to support Keycloak Authorization, create a default `quarkus` realm without Keycloak authorization policies.\n"
"In this case, you must select the `Keycloak Admin` link in the `OpenId Connect` Dev UI card and configure link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] in the default `quarkus` realm."
msgstr "如果您启动了 xref:security-openid-connect-dev-services.adoc[Keycloak 的 Dev 服务] ，但没有导入已经配置为支持 Keycloak 授权的 Realm 文件（如 link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json] ），请创建一个没有 Keycloak 授权策略的默认 `quarkus` Realm。在这种情况下，您必须在 `OpenId Connect` Dev UI 卡中选择 `Keycloak Admin` 链接，并在默认 `quarkus` 领域中配置 link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak 授权服务] 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `Keycloak Admin` link is easy to find in Dev UI:"
msgstr "在 Dev UI 中很容易找到 `Keycloak Admin` 链接："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "When logging into the Keycloak admin console, the username and password are both `admin`."
msgstr "登录 Keycloak 管理控制台时，用户名和密码都是 `admin` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If your application uses Keycloak authorization configured with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed in a JAR file, you can set up Dev Services for Keycloak to transfer this archive to the Keycloak container.\n"
"For instance:"
msgstr "如果您的应用程序使用配置了 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript 策略] 的 Keycloak 授权，而这些 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[策略] 部署在 JAR 文件中，您可以为 Keycloak 设置 Dev Services，将此归档传送到 Keycloak 容器。例如"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"`policies` alias is created for the `/policies.jar` classpath resource.\n"
"Policy archive can also be located in the file system."
msgstr "`policies` 为 classpath 资源创建了别名。策略存档也可以位于文件系统中。 `/policies.jar` "

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The policies archive is mapped to the `/opt/keycloak/providers/policies.jar` container location."
msgstr "策略存档映射到 `/opt/keycloak/providers/policies.jar` 容器位置。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in JVM mode"
msgstr "以 JVM 模式运行应用程序"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After exploring the application in dev mode, you can run it as a standard Java application."
msgstr "在开发模式下探索应用程序后，您可以将其作为标准 Java 应用程序运行。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "First compile it:"
msgstr "首先编译它："

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "Then run it:"
msgstr "然后运行它："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in native mode"
msgstr "以本地模式运行应用程序"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This same demo can be compiled into native code; no modifications are required."
msgstr "同样的演示可以编译成本地代码，无需任何修改。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This implies that you no longer need to install a JVM on your production environment because the runtime technology is included in the produced binary and optimized to run with minimal resources."
msgstr "这意味着您不再需要在生产环境中安装 JVM，因为运行时技术已包含在生成的二进制文件中，并经过优化，只需最少的资源即可运行。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Compilation takes a bit longer, so this step is turned off by default; let's build again by enabling the `native` profile:"
msgstr "编译需要较长的时间，因此默认情况下这一步是关闭的；让我们启用 `native` 配置文件再次进行编译："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After a while, you can run this binary directly:"
msgstr "一段时间后，您就可以直接运行该二进制文件了："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Testing the application"
msgstr "测试应用程序"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "See the preceding <<keycloak-dev-mode,Running the application in Dev mode>> section about testing your application in a dev mode."
msgstr "有关在开发模式下测试 xref:keycloak-dev-mode[应用程序] ，请参阅前面的 \"在开发模式下 xref:keycloak-dev-mode[运行] 应用程序 \"一节。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You can test the application launched in JVM or native modes with `curl`."
msgstr "您可以使用 `curl` 测试在 JVM 或本地模式下启动的应用程序。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The application uses bearer token authorization, and the first thing to do is obtain an access token from the Keycloak server to access the application resources:"
msgstr "应用程序使用不记名令牌授权，要访问应用程序资源，首先要从 Keycloak 服务器获取访问令牌："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The preceding example obtains an access token for user `alice`."
msgstr "上例获取了用户 `alice` 的访问令牌。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Any user is allowed to access the\n"
"`http://localhost:8080/api/users/me` endpoint,\n"
"which returns a JSON payload with details about the user."
msgstr "允许任何用户访问 `http://localhost:8080/api/users/me` 端点，它会返回一个包含用户详细信息的 JSON 有效负载。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role.\n"
"If you try to access this endpoint with the previously issued access token, you get a `403` response from the server."
msgstr "端点 `http://localhost:8080/api/admin` 端点只能由 `admin` 角色的用户访问。如果尝试使用之前发布的访问令牌访问该端点，会收到来自服务器的 `403` 响应。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To access the admin endpoint, get a token for the `admin` user:"
msgstr "要访问管理员端点，请获取 `admin` 用户的令牌："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Injecting the authorization client"
msgstr "注入授权客户端"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In some cases, using the link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] is beneficial for tasks such as managing resources and obtaining permissions directly from Keycloak.\n"
"For this purpose, you can inject an `AuthzClient` instance into your beans as follows:"
msgstr "在某些情况下，使用 link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak 授权客户端 Java API] 对管理资源和直接从 Keycloak 获取权限等任务很有帮助。为此，您可以在 Bean 中注入 `AuthzClient` 实例，如下所示："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you want to use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enable=true`; otherwise, no bean is available for injection."
msgstr "如果要直接使用 `AuthzClient` ，请设置 `quarkus.keycloak.policy-enforcer.enable=true` ；否则，将无法注入任何 Bean。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Mapping protected resources"
msgstr "绘制受保护资源地图"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "By default, the extension fetches resources on-demand from Keycloak, using their URI to identify and map the resources in your application that need to be protected."
msgstr "默认情况下，扩展会按需从 Keycloak 抓取资源，使用它们的 URI 来识别和映射应用程序中需要保护的资源。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To disable this on-demand fetching and instead pre-load resources at startup, apply the following configuration setting:"
msgstr "要禁用这种按需获取资源的功能，转而在启动时预先加载资源，请应用以下配置设置："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The time required to pre-load resources from Keycloak at startup varies based on their quantity, potentially affecting your application's initial load time.\""
msgstr "启动时从 Keycloak 预加载资源所需的时间因资源数量而异，可能会影响应用程序的初始加载时间。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "More about configuring protected resources"
msgstr "关于配置受保护资源的更多信息"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "In the default configuration, Keycloak manages the roles and decides who can access which routes."
msgstr "在默认配置中，Keycloak 管理角色并决定谁能访问哪些路由。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To configure the protected routes by using the `@RolesAllowed` annotation or the `application.properties` file, check the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] and xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guides.\n"
"For more details, check the xref:security-overview.adoc[Quarkus Security overview]."
msgstr "要使用 `@RolesAllowed` 注释或 `application.properties` 文件配置受保护的路由，请查看 xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token 身份验证] 和 xref:security-authorize-web-endpoints-reference.adoc[Web 端点授权] 指南。更多详情，请查阅 xref:security-overview.adoc[Quarkus 安全概述] 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access to public resources"
msgstr "获取公共资源"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To enable access to a public resource without the `quarkus-keycloak-authorization` applying its policies, create a `permit` HTTP Policy configuration in `application.properties`.\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guide."
msgstr "要在 `quarkus-keycloak-authorization` 不应用其策略的情况下访问公共资源，请在 `application.properties` 中创建 `permit` HTTP 策略配置。更多信息，请参阅 xref:security-authorize-web-endpoints-reference.adoc[网络端点授权] 指南。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "There's no need to deactivate policy checks for a Keycloak Authorization Policy with settings such as these:"
msgstr "有了这些设置，就没有必要停用 Keycloak 授权策略的策略检查："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To block access to the public resource to anonymous users, you can create an enforcing Keycloak Authorization Policy:"
msgstr "要阻止匿名用户访问公共资源，可以创建一个强制执行的 Keycloak 授权策略："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Only the default tenant configuration applies when controlling anonymous access to the public resource is required."
msgstr "只有在需要控制对公共资源的匿名访问时，才适用默认租户配置。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Checking permission scopes programmatically"
msgstr "以编程方式检查权限范围"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In addition to resource permissions, you can specify method scopes.\n"
"The scope usually represents an action that can be performed on a resource.\n"
"You can create an enforcing Keycloak Authorization Policy with a method scope.\n"
"For example:"
msgstr "除了资源权限外，还可以指定方法作用域。作用域通常代表可在资源上执行的操作。您可以创建带有方法作用域的强制 Keycloak 授权策略。例如"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "User must have resource permission 'Scope Permission Resource' and scope 'read'"
msgstr "用户必须有资源权限'范围许可资源'和范围'读'。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The Keycloak Policy Enforcer now secures the `/api/protected/standard-way` request path, eliminating the need for additional annotations such as `@RolesAllowed`.\n"
"However, in certain scenarios, a programmatic check is necessary.\n"
"You can achieve this by injecting a `SecurityIdentity` instance into your beans, as shown in the following example.\n"
"Or, you can get the same result by annotating the resource method with `@PermissionsAllowed`.\n"
"The following example demonstrates three resource methods, each requiring the same `read` scope:"
msgstr "Keycloak Policy Enforcer 现在可以确保 `/api/protected/standard-way` 请求路径的安全，从而无需使用 `@RolesAllowed` 等附加注解。不过，在某些情况下，有必要进行编程检查。您可以通过在 Bean 中注入 `SecurityIdentity` 实例来实现这一目的，如下例所示。或者，您也可以使用 `@PermissionsAllowed` 对资源方法进行注解，从而获得相同的结果。下面的示例演示了三个资源方法，每个方法都需要相同的 `read` 作用域："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Request sub-path `/standard-way` requires both resource permission and scope `read` according to the configuration properties we previously set in the `application.properties`."
msgstr "根据我们之前在 `application.properties` 中设置的配置属性，请求子路径 `/standard-way` 需要有资源权限和作用域 `read` 。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Request sub-path `/programmatic-way` only requires permission `Scope Permission Resource`, but we can enforce scope with `SecurityIdentity#checkPermission`."
msgstr "请求子路径 `/programmatic-way` ，只需要权限 `Scope Permission Resource` ，但我们可以用 `SecurityIdentity#checkPermission` ，强制执行范围。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `@PermissionsAllowed` annotation only grants access to the requests with permission `Scope Permission Resource` and scope `read`.\n"
"For more information, see the section xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Authorization using annotations] of the Security Authorization guide."
msgstr "`@PermissionsAllowed` 注解只允许访问权限为 `Scope Permission Resource` 和范围为 `read` 的请求。如需了解更多信息，请参阅安全授权指南中的 \" xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[使用注解授权] \"部分。"

#: _guides/security-keycloak-authorization.adoc
msgid "Multi-tenancy"
msgstr "多租户"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You can set up policy enforcer configurations for each tenant, similar to how it is done with xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) multi-tenancy]."
msgstr "您可以为每个租户设置策略执行器配置，与 xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) 多租户] 的设置方式类似。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "For example:"
msgstr "例如："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This configuration adheres to the official [Keycloak Policy Enforcer Configuration](https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter) guidelines.\n"
"For detailed insights into various configuration options, see the following documentation:"
msgstr "该配置遵循官方的 [Keycloak Policy Enforcer Configuration]( link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter)] 指南。如需详细了解各种配置选项，请参阅以下文档："

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak 文档]"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"
msgstr "link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak 授权服务]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON 网络令牌]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak 管理客户端]"
