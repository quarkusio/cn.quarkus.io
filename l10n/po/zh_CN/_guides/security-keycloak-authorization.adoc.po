# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"POT-Creation-Date: 2023-12-06 10:14+0000\n"
"PO-Revision-Date: 2022-08-10 11:57+0800\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Poedit 3.1.1\n"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Using OpenID Connect (OIDC) and Keycloak to centralize authorization"
msgstr "使用 OpenID Connect (OIDC) 和 Keycloak 集中授权"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Learn how to enable bearer token authorization in your Quarkus application by using link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] for secure access to protected resources."
msgstr "了解如何在 Quarkus 应用程序中使用 link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak 授权服务] 启用不记名令牌授权，以安全访问受保护的资源。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Overview"
msgstr "概述"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The Keycloak Authorization extension, `quarkus-keycloak-authorization`, extends the OpenID Connect extension, `quarkus-oidc`, to provide advanced authorization capabilities.\n"
"It features a policy enforcer that dynamically manages access to secured resources.\n"
"Access is governed by permissions defined in Keycloak, supporting flexible and dynamic Resource-Based Access Control (RBAC)."
msgstr "Keycloak 授权扩展 `quarkus-keycloak-authorization` 扩展了 OpenID Connect 扩展 `quarkus-oidc` ，以提供高级授权功能。它具有一个策略执行器，可动态管理对安全资源的访问。访问受 Keycloak 中定义的权限控制，支持灵活、动态的基于资源的访问控制（RBAC）。"

#: _guides/security-keycloak-authorization.adoc
msgid "Use the `quarkus-keycloak-authorization` extension only if you are using Keycloak and the Keycloak Authorization Services feature is enabled in your environment to handle authorization decisions."
msgstr ""

#: _guides/security-keycloak-authorization.adoc
msgid "If you are not using Keycloak, or if Keycloak is configured without the Keycloak Authorization Services feature, use the `quarkus-oidc` extension instead."
msgstr ""

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "How it works"
msgstr "工作原理"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `quarkus-keycloak-authorization` extension centralizes authorization responsibilities in Keycloak, enhancing security and simplifying application maintenance:"
msgstr "`quarkus-keycloak-authorization` 扩展可将授权责任集中到 Keycloak 中，从而提高安全性并简化应用程序维护："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "It uses the `quarkus-oidc` extension to verify bearer tokens."
msgstr "它使用 `quarkus-oidc` 扩展来验证不记名令牌。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "It sends verified tokens to Keycloak Authorization Services."
msgstr "它将经过验证的令牌发送到 Keycloak 授权服务。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "It allows Keycloak to evaluate resource-based permissions dynamically by using attributes such as resource name, identifier, or URI."
msgstr "它允许 Keycloak 使用资源名称、标识符或 URI 等属性动态评估基于资源的权限。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "By externalizing authorization decisions, you can:"
msgstr "通过将授权决策外部化，您可以"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Implement diverse access control strategies without modifying application code."
msgstr "无需修改应用程序代码，即可实施多样化的访问控制策略。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Reduce redeployment needs as security requirements evolve."
msgstr "随着安全要求的变化，减少重新部署的需要。"

#: _guides/security-keycloak-authorization.adoc
msgid "Compatibility"
msgstr "兼容"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This extension is compatible only with Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC service applications].\n"
"It complements explicit mechanisms such as role-based access control with dynamic authorization policies."
msgstr "该扩展仅与 Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC 服务应用程序] 兼容。它通过动态授权策略对基于角色的访问控制等显式机制进行了补充。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Key Features"
msgstr "主要功能"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Centralized Management**: Delegate authorization decisions to Keycloak for consistent security policies across applications."
msgstr "*集中管理* ：将授权决策权下放给 Keycloak，以实现跨应用程序的一致安全策略。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Dynamic Permissions**: Define access control dynamically by using resource attributes."
msgstr "*动态权限* ：使用资源属性动态定义访问控制。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Simplified Maintenance**: Reduce the need to update and redeploy applications when access policies change."
msgstr "*简化维护* ：当访问策略发生变化时，减少更新和重新部署应用程序的需要。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Setting Up"
msgstr "设置"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Before using this extension, ensure the following:"
msgstr "使用此扩展前，请确保以下几点："

#: _guides/security-keycloak-authorization.adoc
msgid "Keycloak Authorization Services feature is enabled in your Keycloak instance."
msgstr ""

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Your Quarkus application includes the `quarkus-keycloak-authorization` extension."
msgstr "您的 Quarkus 应用程序包含 `quarkus-keycloak-authorization` 扩展名。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For detailed steps, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer Token Authentication] guide."
msgstr "有关详细步骤，请参阅 xref:security-oidc-bearer-token-authentication.adoc[OIDC 承载令牌身份验证] 指南。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Additional resources"
msgstr "其他资源"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To learn more about Keycloak Authorization Services and the policy enforcer, visit the official documentation:\n"
"https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services Documentation]."
msgstr "要了解有关 Keycloak 授权服务和策略执行器的更多信息，请访问官方文档： link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak 授权服务文档] 。"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "link:https://stedolan.github.io/jq/[jq工具]"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org[Keycloak]"
msgstr "link:https://www.keycloak.org[钥匙斗篷]"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This example demonstrates a simple microservice setup with two protected endpoints:"
msgstr "本例演示了一个简单的微服务设置，其中有两个受保护的端点："

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "`/api/users/me`"
msgstr " `/api/users/me` "

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "`/api/admin`"
msgstr " `/api/admin` "

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Token-based access control"
msgstr "基于令牌的访问控制"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Access to these endpoints is controlled by using bearer tokens.\n"
"To gain access, the following conditions must be met:"
msgstr "使用承载令牌可控制对这些端点的访问。要获得访问权，必须满足以下条件："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Valid token**: The token must have a correct signature, a valid expiration date, and the appropriate audience."
msgstr "*有效令牌* ：令牌必须有正确的签名、有效的过期日期和适当的受众。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Trust**: The microservice must trust the issuing Keycloak server."
msgstr "*信任* ：微服务必须信任 Keycloak 签发服务器。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The bearer tokens issued by the Keycloak server serve as:"
msgstr "Keycloak 服务器发出的不记名令牌可作为"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**User identifiers**: Indicating the subject (user) for whom the token was issued."
msgstr "*用户标识符* ：表示令牌的发放对象（用户）。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Client references**: Identifying the client application acting on behalf of the user, per OAuth 2.0 Authorization Server standards."
msgstr "*客户端引用* ：根据 OAuth 2.0 授权服务器标准，识别代表用户的客户端应用程序。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Endpoints and access policies"
msgstr "端点和访问策略"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For `/api/users/me`:"
msgstr "供 `/api/users/me` ："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Access policy**: Open to users with a valid bearer token and the `user` role."
msgstr "*访问政策* ：向持有有效承载令牌和 `user` 角色的用户开放。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Response**: Returns user details as a JSON object derived from the token."
msgstr "*响应* ：以源于令牌的 JSON 对象形式返回用户详细信息。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Example response"
msgstr "答复示例"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For `/api/admin`:"
msgstr "供 `/api/admin` ："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "*Access policy*: Restricted to users with a valid bearer token and the `admin` role."
msgstr "*访问策略* ：仅限具有有效承载令牌和 `admin` 角色的用户使用。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Decoupled authorization"
msgstr "解耦授权"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This example highlights the use of role-based access control (RBAC) policies to protect resources.\n"
"Key points include:"
msgstr "本例重点介绍了如何使用基于角色的访问控制（RBAC）策略来保护资源。要点包括"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "*Policy flexibility*: Keycloak supports various policy types, such as attribute-based and custom policies, enabling fine-grained control."
msgstr "*策略灵活性* ：Keycloak 支持各种策略类型，如基于属性的策略和自定义策略，从而实现细粒度控制。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "*Decoupled application logic*: Authorization policies are managed entirely by Keycloak, allowing your application to focus on its core functionality."
msgstr "*解耦应用逻辑* ：授权策略完全由 Keycloak 管理，让您的应用程序专注于核心功能。"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档] 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The solution is in the `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[directory]."
msgstr "解决方案位于 `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[目录] 中。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Creating the project"
msgstr "创建项目"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To get started, create a new project by using the following command:"
msgstr "要开始操作，请使用以下命令创建一个新项目："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This command generates a new project with the `keycloak-authorization` extension.\n"
"The extension integrates a Keycloak Adapter into your Quarkus application, providing the necessary capabilities to interact with a Keycloak server and perform bearer token authorization."
msgstr "该命令将生成一个带有 `keycloak-authorization` 扩展的新项目。该扩展将 Keycloak 适配器集成到 Quarkus 应用程序中，提供与 Keycloak 服务器交互和执行不记名令牌授权的必要功能。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Adding extensions to an existing project"
msgstr "为现有项目添加扩展"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you already have an existing Quarkus project, you can add the `oidc` and `keycloak-authorization` extensions by running the following command in your project's base directory:"
msgstr "如果您已有一个 Quarkus 项目，可以在项目的基本目录下运行以下命令来添加 `oidc` 和 `keycloak-authorization` 扩展："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This command adds the following dependencies to your build file:"
msgstr "此命令将在构建文件中添加以下依赖项："

#. type: Block title
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Implementing the `/api/users/me` endpoint"
msgstr "实施 `/api/users/me` 端点"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Start by implementing the `/api/users/me` endpoint.\n"
"The following code defines a Jakarta REST resource that provides user details:"
msgstr "首先实施 `/api/users/me` 端点。以下代码定义了一个提供用户详细信息的 Jakarta REST 资源："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Implementing the `/api/admin` endpoint"
msgstr "实施 `/api/admin` 端点"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Next, define the `/api/admin` endpoint.\n"
"The following code represents a simple Jakarta REST resource protected with authentication:"
msgstr "接下来，定义 `/api/admin` 端点。下面的代码表示一个简单的 Jakarta REST 资源，该资源受身份验证保护："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Role-based access control with Keycloak"
msgstr "使用 Keycloak 进行基于角色的访问控制"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Notice that explicit annotations such as `@RolesAllowed` are not defined to enforce access control for the resources.\n"
"Instead, the `keycloak-authorization` extension dynamically maps the URIs of protected resources in Keycloak."
msgstr "请注意，我们并没有定义诸如 `@RolesAllowed` 这样的明确注释来对资源实施访问控制。相反， `keycloak-authorization` 扩展会动态映射 Keycloak 中受保护资源的 URI。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access control is managed as follows:"
msgstr "访问控制管理如下"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Keycloak evaluates permissions for each request based on its configured policies."
msgstr "Keycloak 会根据配置的策略评估每个请求的权限。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The extension enforces these permissions, granting or denying access based on the roles or policies defined in Keycloak."
msgstr "该扩展会执行这些权限，根据 Keycloak 中定义的角色或策略授予或拒绝访问。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "This decouples access control logic from the application code, making it easier to manage and update access policies directly in Keycloak."
msgstr "这使访问控制逻辑与应用程序代码分离，从而更容易直接在 Keycloak 中管理和更新访问策略。"

#. type: Title ===
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "配置应用"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"You can use the OpenID Connect extension to configure the adapter settings through the `application.properties` file, typically located in the `src/main/resources` directory.\n"
"For example:"
msgstr "您可以使用 OpenID Connect 扩展，通过 `application.properties` 文件配置适配器设置，该文件通常位于 `src/main/resources` 目录中。例如"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Specifies the URL of the Keycloak server and the realm used for authentication."
msgstr "指定 Keycloak 服务器的 URL 和用于身份验证的域。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Identifies the client application within the Keycloak realm."
msgstr "标识 Keycloak 领域内的客户端应用程序。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Defines the client secret for authentication with the Keycloak server."
msgstr "定义用于与 Keycloak 服务器进行身份验证的客户端秘密。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Disables TLS verification for development purposes, not recommended for production."
msgstr "为开发目的禁用 TLS 验证，不建议用于生产。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Enables the Keycloak policy enforcer to manage access control based on defined permissions."
msgstr "启用 Keycloak 策略执行器，根据定义的权限管理访问控制。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Configures Dev Services to import a specified realm file, effective only in dev mode and not in JVM or native modes."
msgstr "配置开发服务以导入指定的 realm 文件，仅在开发模式下有效，在 JVM 或本地模式下无效。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Adding the `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that Dev Services for Keycloak automatically launches a container in development mode.\n"
"For more details, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr "将 `%prod.` 配置文件前缀添加到 `quarkus.oidc.auth-server-url` 可确保 Keycloak Dev Services 在开发模式下自动启动容器。有关详细信息，请参阅 xref:keycloak-dev-mode[在开发模式下运行应用程序] 部分。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"By default, applications using the `quarkus-oidc` extension are treated as `service` type applications.\n"
"However, the extension also supports `web-app` type applications under the following conditions:"
msgstr "默认情况下，使用 `quarkus-oidc` 扩展的应用程序被视为 `service` 类型的应用程序。不过，在以下条件下，扩展也支持 `web-app` 类型的应用程序："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The access token returned during the authorization code grant flow must be the source of roles (`quarkus.oidc.roles.source=accesstoken`)."
msgstr "授权码授予流程中返回的访问令牌必须是角色源 ( `quarkus.oidc.roles.source=accesstoken` )。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Note: For `web-app` type applications, ID token roles are checked by default."
msgstr "注：对于 `web-app` 类型的应用程序，默认选中 ID 令牌角色。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Starting and configuring the Keycloak server"
msgstr "启动和配置 Keycloak 服务器"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Do not start the Keycloak server when you run the application in dev mode.\n"
"Dev Services for Keycloak launches a container.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr "在开发模式下运行应用程序时，请勿启动 Keycloak 服务器。Keycloak 的开发服务会启动一个容器。有关详细信息，请参阅 xref:keycloak-dev-mode[在开发模式下运行应用程序] 部分。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To start a Keycloak server, use the following Docker command:"
msgstr "要启动 Keycloak 服务器，请使用以下 Docker 命令："

#: _guides/security-keycloak-authorization.adoc
msgid "For `keycloak.version`, ensure the version is `26.2.4` or later."
msgstr ""

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "For Keycloak keystore, use the `keycloak-keystore.jks` file located at https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config]."
msgstr "对于 Keycloak 密钥存储，请使用位于 link:https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config 的] `keycloak-keystore.jks` 文件。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Accessing the Keycloak server"
msgstr "访问 Keycloak 服务器"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open your browser and navigate to https://localhost:8543[https://localhost:8543]."
msgstr "打开浏览器，导航至 link:https://localhost:8543[https://localhost:8543。]"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log in to the Keycloak Administration Console by using the following credentials:"
msgstr "使用以下凭证登录 Keycloak 管理控制台："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Username**: `admin`"
msgstr "*用户名* `admin`"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "**Password**: `admin`"
msgstr "*密码* `admin`"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Importing the realm configuration"
msgstr "导入领域配置"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To create a new realm, import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file].\n"
"For detailed steps on creating realms, refer to the Keycloak documentation: https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[Create a new realm]."
msgstr "要创建新领域，请导入 link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[领域配置文件] 。有关创建领域的详细步骤，请参阅 Keycloak 文档： link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建新领域] 。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"After importing the realm, go to Clients, choose the `backend-service` client, and select the Authorization and Resources tab for this client.\n"
"You can now review the resource permissions:"
msgstr ""

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Role of Keycloak in resource permissions"
msgstr "钥匙斗篷在资源权限中的作用"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The resource access permissions are configured directly in Keycloak, which eliminates the need for `@RolesAllowed` annotations in your application code.\n"
"This approach centralizes access control management within Keycloak, simplifying application maintenance and security updates."
msgstr "资源访问权限直接在 Keycloak 中配置，无需在应用程序代码中使用 `@RolesAllowed` 注释。这种方法将访问控制管理集中在 Keycloak 中，简化了应用程序的维护和安全更新。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in dev mode"
msgstr "在开发模式下运行应用程序"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To run the application in development mode, use the following command:"
msgstr "要在开发模式下运行应用程序，请使用以下命令："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] starts a Keycloak container and imports the `quarkus-realm.json` configuration file."
msgstr "xref:security-openid-connect-dev-services.adoc[Keycloak Dev Services] 会启动 Keycloak 容器并导入 `quarkus-realm.json` 配置文件。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a **Provider: Keycloak** link on an **OpenID Connect** card in the Dev UI."
msgstr "打开 link:http://localhost:8080/q/dev-ui[/q/dev-ui] 上的 xref:dev-ui.adoc[Dev UI] ，然后点击 xref:dev-ui.adoc[Dev UI 中] OpenID Connect 卡上的 *Provider：* Dev UI 中 *OpenID Connect* 卡上的 *Keycloak* 链接。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Interacting with Dev UI"
msgstr "与开发人员用户界面互动"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open the xref:dev-ui.adoc[Dev UI] at http://localhost:8080/q/dev-ui[/q/dev-ui]."
msgstr "在 link:http://localhost:8080/q/dev-ui[/q/dev-ui] 打开 xref:dev-ui.adoc[开发人员用户界面] 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Click the **Provider: Keycloak** link within the **OpenID Connect** card in the Dev UI."
msgstr "单击 *Dev* UI 中 OpenID Connect 卡内的 *Provider：* 在 Dev UI 的 *OpenID Connect* 卡中点击 *Keycloak* 链接。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Testing user permissions"
msgstr "测试用户权限"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "When prompted to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`, do the following:"
msgstr "当提示登录 `OpenID Connect Dev UI` 提供的 `Single Page Application` 时，请执行以下操作："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log in as `alice` (password: `alice`), who only has a `User Permission` to access the `/api/users/me` resource:"
msgstr "以 `alice` 登录（密码： `alice` ），只有 `User Permission` 才能访问 `/api/users/me` 资源："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/admin`, which returns `403`."
msgstr "访问 `/api/admin` ，返回 `403` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/users/me`, which returns `200`."
msgstr "访问 `/api/users/me` ，返回 `200` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Log out and log in as `admin` (password: `admin`), who has both `Admin Permission` to access the `/api/admin` resource and `User Permission` to access the `/api/users/me` resource:"
msgstr "注销并以 `admin` （密码： `admin` ）登录，该用户同时拥有 `Admin Permission` 和 `User Permission` ，前者可访问 `/api/admin` 资源，后者可访问 `/api/users/me` 资源："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access `/api/admin`, which returns `200`."
msgstr "访问 `/api/admin` ，返回 `200` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Customizing the Keycloak realm"
msgstr "定制 Keycloak 领域"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you started Dev Services for Keycloak without importing a realm file such as link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json], create a default `quarkus` realm without Keycloak authorization policies:"
msgstr "如果启动 Dev Services for Keycloak 时没有导入 realm 文件（如 link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json] ），请创建一个不带 Keycloak 授权策略的默认 `quarkus` realm："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Select the **Keycloak Admin** link from the **OpenID Connect** card in the Dev UI."
msgstr "从 Dev UI 的 *OpenID Connect* 卡中选择 *Keycloak 管理* 链接。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Log in to the Keycloak admin console.\n"
"The username and password are both `admin`."
msgstr "登录 Keycloak 管理控制台。用户名和密码都是 `admin` 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Follow the instructions at link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services documentation] to enable authorization policies in the `quarkus` realm."
msgstr "按照 link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak 授权服务文档] 中的说明，在 `quarkus` 领域启用 link:https://www.keycloak.org/docs/latest/authorization_services/index.html[授权] 策略。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The **Keycloak Admin** link is easy to find in Dev UI:"
msgstr "在 Dev UI 中很容易找到 *Keycloak 管理* 链接："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Adding custom JavaScript policies"
msgstr "添加自定义 JavaScript 策略"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If your application uses Keycloak authorization configured with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed in a JAR archive, Dev Services for Keycloak can transfer this archive to the Keycloak container.\n"
"Use the following properties in `application.properties` to configure the transfer:"
msgstr "如果您的应用程序使用配置了 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript 策略] 的 Keycloak 授权，而这些 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[策略] 部署在 JAR 归档文件中，Dev Services for Keycloak 可以将此归档文件传输到 Keycloak 容器。在 `application.properties` 中使用以下属性配置传输："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Creates a `policies` alias for the `/policies.jar` classpath resource.\n"
"The policies archive can also be located on the file system."
msgstr "为 `/policies.jar` classpath 资源创建 `policies` 别名。策略存档也可以位于文件系统中。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Maps the policies archive to the `/opt/keycloak/providers/policies.jar` location inside the Keycloak container."
msgstr "将策略存档映射到 Keycloak 容器内的 `/opt/keycloak/providers/policies.jar` 位置。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in JVM mode"
msgstr "以 JVM 模式运行应用程序"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After exploring the application in dev mode, you can run it as a standard Java application in JVM mode."
msgstr "在开发模式下探索应用程序后，您可以在 JVM 模式下将其作为标准 Java 应用程序运行。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Compile the application:"
msgstr "编译应用程序："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Run the application:"
msgstr "运行应用程序："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Running the application in native mode"
msgstr "以本地模式运行应用程序"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You can compile this demo into native code; no modifications are required."
msgstr "您可以将此演示编译成本地代码，无需进行任何修改。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Native compilation eliminates the need for a JVM in the production environment because the produced binary includes the runtime and is optimized for minimal resource usage."
msgstr "本地编译无需在生产环境中使用 JVM，因为生成的二进制文件包含运行时，并经过优化，可将资源使用量降至最低。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Compilation takes longer and is disabled by default.\n"
"To build the application, enable the `native` profile."
msgstr "编译需要较长的时间，默认情况下是禁用的。要构建应用程序，请启用 `native` 配置文件。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Build the native binary:"
msgstr "生成本地二进制文件："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "After a while, run the native binary:"
msgstr "一段时间后，运行本地二进制文件："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Testing the application"
msgstr "测试应用程序"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "See the preceding <<keycloak-dev-mode,Running the application in Dev mode>> section for instructions on testing your application in development mode."
msgstr "有关在开发模式下测试 xref:keycloak-dev-mode[应用程序] 的说明，请参阅前面的 \"在开发模式下 xref:keycloak-dev-mode[运行] 应用程序 \"部分。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You can test the application running in JVM or native modes by using `curl`."
msgstr "您可以使用 `curl` 测试在 JVM 或本地模式下运行的应用程序。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Obtaining an access token"
msgstr "获取访问令牌"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The application uses bearer token authorization.\n"
"To access its resources, first obtain an access token from the Keycloak server:"
msgstr "应用程序使用不记名令牌授权。要访问其资源，首先要从 Keycloak 服务器获取访问令牌："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"If the `quarkus.oidc.authentication.user-info-required` property is set to `true`, the application requires that an access token is used to request `UserInfo`.\n"
"In that case, you must add the `scope=openid` query parameter to the token grant request; for example:"
msgstr "如果 `quarkus.oidc.authentication.user-info-required` 属性设置为 `true` ，应用程序要求使用访问令牌来请求 `UserInfo` 。在这种情况下，必须在令牌授予请求中添加 `scope=openid` 查询参数；例如"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The preceding example obtains an access token for the user `alice`."
msgstr "上例获取了用户 `alice` 的访问令牌。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Accessing the `/api/users/me` endpoint"
msgstr "访问 `/api/users/me` 端点"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Any user with a valid access token can access the `http://localhost:8080/api/users/me` endpoint, which returns a JSON payload with user details:"
msgstr "任何拥有有效访问令牌的用户都可以访问 `http://localhost:8080/api/users/me` 端点，该端点会返回一个包含用户详细信息的 JSON 有效负载："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Accessing the `/api/admin` endpoint"
msgstr "访问 `/api/admin` 端点"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `http://localhost:8080/api/admin` endpoint is restricted to users with the `admin` role.\n"
"If you try to access this endpoint with the previously issued access token, the server returns a `403 Forbidden` response:"
msgstr "该 `http://localhost:8080/api/admin` 端点仅限 `admin` 角色的用户使用。如果尝试使用先前签发的访问令牌访问该端点，服务器将返回 `403 Forbidden` 响应："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Getting an admin access token"
msgstr "获取管理员访问令牌"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To access the admin endpoint, get an access token for the `admin` user:"
msgstr "要访问管理员端点，请获取 `admin` 用户的访问令牌："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Injecting the authorization client"
msgstr "注入授权客户端"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"You can use the link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] for advanced tasks, such as managing resources and getting permissions directly from Keycloak.\n"
"To enable this functionality, inject an `AuthzClient` instance into your beans:"
msgstr "您可以使用 link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak 授权客户端 Java API] 来执行高级任务，例如直接从 Keycloak 管理资源和获取权限。要启用此功能，请在您的 Bean 中注入 `AuthzClient` 实例："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you want to use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enable=true`; otherwise, no bean is available for injection."
msgstr "如果要直接使用 `AuthzClient` ，请设置 `quarkus.keycloak.policy-enforcer.enable=true` ；否则，将无法注入任何 Bean。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enable=true`.\n"
"Otherwise, no bean is available for injection."
msgstr "要直接使用 `AuthzClient` ，请设置 `quarkus.keycloak.policy-enforcer.enable=true` 。否则，将无法注入任何 bean。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Mapping protected resources"
msgstr "绘制受保护资源地图"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "By default, the extension fetches resources from Keycloak on demand, using their URI to identify and map the application resources that require protection."
msgstr "默认情况下，扩展会按需从 Keycloak 抓取资源，使用其 URI 来识别和映射需要保护的应用程序资源。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To disable on-demand fetching and instead pre-load resources at startup, configure the following property:"
msgstr "要禁用按需获取，而在启动时预先加载资源，请配置以下属性："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The time required to pre-load resources from Keycloak during startup depends on the number of resources, which might impact your application's initial load time."
msgstr "启动时从 Keycloak 预加载资源所需的时间取决于资源的数量，这可能会影响应用程序的初始加载时间。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "More about configuring protected resources"
msgstr "关于配置受保护资源的更多信息"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "In the default configuration, Keycloak manages the roles and decides who can access which routes."
msgstr "在默认配置中，Keycloak 管理角色并决定谁能访问哪些路由。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To configure the protected routes by using the `@RolesAllowed` annotation or the `application.properties` file, check the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] and xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guides.\n"
"For more details, check the xref:security-overview.adoc[Quarkus Security overview]."
msgstr "要使用 `@RolesAllowed` 注释或 `application.properties` 文件配置受保护的路由，请查看 xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token 身份验证] 和 xref:security-authorize-web-endpoints-reference.adoc[Web 端点授权] 指南。更多详情，请查阅 xref:security-overview.adoc[Quarkus 安全概述] 。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Access to public resources"
msgstr "获取公共资源"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"To allow access to a public resource without applying `quarkus-keycloak-authorization` policies, define a `permit` HTTP policy in the `application.properties` file.\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guide."
msgstr "要在不应用 `quarkus-keycloak-authorization` 策略的情况下允许访问公共资源，请在 `application.properties` 文件中定义 `permit` HTTP 策略。更多信息，请参阅 xref:security-authorize-web-endpoints-reference.adoc[网络端点授权] 指南。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "You do not need to disable policy checks for a Keycloak Authorization Policy when using configurations like the following:"
msgstr "使用以下配置时，无需禁用 Keycloak 授权策略的策略检查："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To restrict access to public resources for anonymous users, define an enforcing Keycloak Authorization Policy:"
msgstr "要限制匿名用户访问公共资源，可定义执行 Keycloak 授权策略："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Only the default tenant configuration applies when controlling anonymous access to the public resource is required."
msgstr "只有在需要控制对公共资源的匿名访问时，才适用默认租户配置。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Checking permission scopes programmatically"
msgstr "以编程方式检查权限范围"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In addition to resource permissions, you can define method scopes.\n"
"A scope typically represents an action performed on a resource.\n"
"You can create an enforcing Keycloak Authorization Policy with a method scope.\n"
"For example:"
msgstr "除了资源权限，还可以定义方法作用域。作用域通常代表在资源上执行的操作。您可以使用方法作用域创建执行 Keycloak 授权策略。例如"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "User must have resource permission `Scope Permission Resource` and scope `read`"
msgstr "用户必须拥有资源权限 `Scope Permission Resource` 和范围 `read`"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The Keycloak Policy Enforcer secures the `/api/protected/standard-way` request path, removing the need for annotations such as `@RolesAllowed`.\n"
"However, in some scenarios, you may need to perform a programmatic check."
msgstr "Keycloak Policy Enforcer 可确保 `/api/protected/standard-way` 请求路径的安全，从而无需使用 `@RolesAllowed` 等注释。不过，在某些情况下，您可能需要执行编程检查。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"You can achieve this by injecting a `SecurityIdentity` instance into your beans, as shown in the following example.\n"
"Or, you can get the same result by annotating the resource method with `@PermissionsAllowed`.\n"
"The following example demonstrates three resource methods, each requiring the same `read` scope:"
msgstr "您可以通过在 Bean 中注入 `SecurityIdentity` 实例来实现这一点，如下例所示。或者，您也可以使用 `@PermissionsAllowed` 对资源方法进行注解，从而获得相同的结果。下面的示例演示了三个资源方法，每个方法都需要相同的 `read` 作用域："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `/standard-way` sub-path requires both the resource permission and the `read` scope, based on the configuration set in the `application.properties` file."
msgstr "`/standard-way` 子路径需要资源权限和 `read` 作用域，这取决于 `application.properties` 文件中设置的配置。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `/programmatic-way` sub-path checks only for the `Scope Permission Resource` permission by default. However, you can enforce additional constraints, such as scope requirements, by using `SecurityIdentity#checkPermission`."
msgstr "`/programmatic-way` 子路径默认只检查 `Scope Permission Resource` 权限。不过，您可以使用 `SecurityIdentity#checkPermission` 强制执行其他限制，如范围要求。"

#: _guides/security-keycloak-authorization.adoc
msgid ""
"The `@PermissionsAllowed` annotation at `/annotation-way` restricts access to requests that have the `Scope Permission Resource` permission along with the `read` scope.\n"
"For more information, see the section xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Authorization using annotations] of the Authorization of web endpoints guide."
msgstr ""

#: _guides/security-keycloak-authorization.adoc
msgid "Multi-tenancy"
msgstr "多租户"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"You can set up policy enforcer configurations for each tenant, similar to how it is done with xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) multi-tenancy].\n"
"For example:"
msgstr "您可以为每个租户设置策略执行器配置，与 xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) 多租户] 的设置方式类似。例如"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Dynamic tenant configuration resolution"
msgstr "动态租户配置解析"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To create configurations for multiple tenants while avoiding excessive entries in your configuration file, you can use the `io.quarkus.keycloak.pep.TenantPolicyConfigResolver` interface to define them programmatically at runtime."
msgstr "要为多个租户创建配置，同时避免在配置文件中出现过多条目，可以使用 `io.quarkus.keycloak.pep.TenantPolicyConfigResolver` 接口在运行时以编程方式定义它们。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Define or update the `/enhanced-config` path in the default tenant configuration."
msgstr "在默认租户配置中定义或更新 `/enhanced-config` 路径。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Add the `/new-config` path to the tenant configuration, including custom claims and values that are populated programmatically."
msgstr "将 `/new-config` 路径添加到租户配置中，包括以编程方式填充的自定义要求和值。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Fallback to the default static tenant configuration resolution defined in the `application.properties` file or other SmallRye Config sources."
msgstr "回退到 `application.properties` 文件或其他 SmallRye 配置源中定义的默认静态租户配置分辨率。"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"This configuration adheres to the official https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer Configuration] guidelines.\n"
"For detailed insights into various configuration options, see the following documentation:"
msgstr "此配置遵循官方的 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer 配置] 指南。要详细了解各种配置选项，请参阅以下文档："

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _guides/security-keycloak-authorization.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak 文档]"

#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"
msgstr "link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak 授权服务]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON 网络令牌]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"

#. type: Plain text
#: _guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak 管理客户端]"
