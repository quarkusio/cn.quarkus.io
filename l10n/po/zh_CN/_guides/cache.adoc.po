# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-09 10:15+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Application Data Caching"
msgstr "应用数据缓存"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "In this guide, you will learn how to enable application data caching in any CDI managed bean of your Quarkus application."
msgstr "在本指南中，你将学习如何在Quarkus应用程序的任何CDI管理bean中启用应用程序数据缓存。"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Scenario"
msgstr "场景"

#: _guides/cache.adoc
msgid ""
"Let's imagine you want to expose in your Quarkus application a REST API that allows users to retrieve the weather forecast for the next three days.\n"
"The problem is that you have to rely on an external meteorological service which only accepts requests for one day at a time and takes forever to answer.\n"
"Since the weather forecast is updated once every twelve hours, caching the service responses would definitely improve your API performances."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "We'll do that using a single Quarkus annotation."
msgstr "我们将使用一个单一的Quarkus注释来做到这一点。"

#: _guides/cache.adoc
msgid ""
"In this guide, we use the default Quarkus Cache backend (Caffeine).\n"
"You can use Redis instead.\n"
"Refer to the xref:cache-redis-reference.adoc[Redis cache backend reference] to configure the Redis backend."
msgstr ""

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _guides/cache.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The solution is located in the `cache-quickstart` link:{quickstarts-tree-url}/cache-quickstart[directory]."
msgstr "该解决方案位于 `cache-quickstart` {quickstarts-tree-url}/cache-quickstart[目录]中。"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "First, we need to create a new Quarkus project with the following command:"
msgstr "首先，我们需要用以下命令创建一个新的Quarkus项目。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This command generates the project and imports the `cache` and `resteasy-reactive-jackson` extensions."
msgstr "该命令生成项目并导入 `cache` 和 `resteasy-reactive-jackson` 扩展。"

#: _guides/cache.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `cache` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容。"

#. type: Block title
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Creating the REST API"
msgstr "创建REST API"

#: _guides/cache.adoc
msgid ""
"Let's start by creating a service that will simulate an extremely slow call to the external meteorological service.\n"
"Create `src/main/java/org/acme/cache/WeatherForecastService.java` with the following content:"
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This is where the slowness comes from."
msgstr "这就是迟钝的来源。"

#: _guides/cache.adoc
msgid ""
"We also need a class that will contain the response sent to the users when they ask for the next three days weather forecast.\n"
"Create `src/main/java/org/acme/cache/WeatherForecast.java` this way:"
msgstr ""

#: _guides/cache.adoc
msgid ""
"Now, we just need to create the REST resource.\n"
"Create the `src/main/java/org/acme/cache/WeatherForecastResource.java` file with this content:"
msgstr ""

#: _guides/cache.adoc
msgid ""
"If the `daysInFuture` query parameter is omitted, the three days weather forecast will start from the current day.\n"
"Otherwise, it will start from the current day plus the `daysInFuture` value."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "We're all done! Let's check if everything's working."
msgstr "我们都完成了!让我们检查一下是否一切正常。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "First, run the application using dev mode from the project directory:"
msgstr "首先，从项目目录中使用开发模式运行该应用程序。"

#: _guides/cache.adoc
msgid ""
"Then, call `http://localhost:8080/weather?city=Raleigh` from a browser.\n"
"After six long seconds, the application will answer something like this:"
msgstr ""

#. type: delimited block =
#: _guides/cache.adoc
#, fuzzy
msgid "The response content may vary depending on the day you run the code."
msgstr "响应内容可能因你运行代码的日子而不同。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "You can try calling the same URL again and again, it will always take six seconds to answer."
msgstr "你可以试着反复拨打同一个网址，它总是需要6秒钟才能接听。"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Enabling the cache"
msgstr "启用缓存"

#: _guides/cache.adoc
msgid ""
"Now that your Quarkus application is up and running, let's tremendously improve its response time by caching the external meteorological service responses.\n"
"Update the `WeatherForecastService` class like this:"
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "We only added this annotation (and the associated import of course)."
msgstr "我们只添加了这个注释（当然还有相关的导入）。"

#: _guides/cache.adoc
msgid ""
"Let's try to call `http://localhost:8080/weather?city=Raleigh` again.\n"
"You're still waiting a long time before receiving an answer.\n"
"This is normal since the server just restarted and the cache was empty."
msgstr ""

#: _guides/cache.adoc
msgid ""
"Wait a second! The server restarted by itself after the `WeatherForecastService` update?\n"
"Yes, this is one of Quarkus amazing features for developers called `live coding`."
msgstr ""

#: _guides/cache.adoc
msgid ""
"Now that the cache was loaded during the previous call, try calling the same URL.\n"
"This time, you should get a super fast answer with an `executionTimeInMs` value close to 0."
msgstr ""

#: _guides/cache.adoc
msgid ""
"Let's see what happens if we start from one day in the future using the `http://localhost:8080/weather?city=Raleigh&daysInFuture=1` URL.\n"
"You should get an answer two seconds later since two of the requested days were already loaded in the cache."
msgstr ""

#: _guides/cache.adoc
msgid ""
"You can also try calling the same URL with a different city and see the cache in action again.\n"
"The first call will take six seconds and the following ones will be answered immediately."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Congratulations! You just added application data caching to your Quarkus application with a single line of code!"
msgstr "恭喜你！你刚刚用一行代码在你的Quarkus应用程序中添加了应用程序数据缓存。你只用了一行代码就为你的Quarkus应用程序添加了应用数据缓存!"

#: _guides/cache.adoc
msgid ""
"Do you want to learn more about the Quarkus application data caching abilities?\n"
"The following sections will show you everything there is to know about it."
msgstr ""

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Caching using annotations"
msgstr "使用注解进行缓存"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Quarkus offers a set of annotations that can be used in a CDI managed bean to enable caching abilities."
msgstr "Quarkus提供了一套注解，可以在CDI管理的Bean中使用，以实现缓存能力。"

#: _guides/cache.adoc
msgid ""
"Caching annotations are not allowed on private methods.\n"
"They will work fine with any other access modifier including package-private (no explicit modifier)."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "@CacheResult"
msgstr "@CacheResult"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Loads a method result from the cache without executing the method body whenever possible."
msgstr "尽可能地从缓存中加载方法结果，而不执行方法主体。"

#: _guides/cache.adoc
msgid ""
"When a method annotated with `@CacheResult` is invoked, Quarkus will compute a cache key and use it to check in the cache whether the method has been already invoked.\n"
"See the xref:cache-keys-building-logic[Cache keys building logic] section of this guide to learn how the cache key is computed.\n"
"If a value is found in the cache, it is returned and the annotated method is never actually executed.\n"
"If no value is found, the annotated method is invoked and the returned value is stored in the cache using the computed key."
msgstr ""

#: _guides/cache.adoc
msgid ""
"A method annotated with `CacheResult` is protected by a lock on cache miss mechanism.\n"
"If several concurrent invocations try to retrieve a cache value from the same missing key, the method will only be invoked once.\n"
"The first concurrent invocation will trigger the method invocation while the subsequent concurrent invocations will wait for the end of the method invocation to get the cached result.\n"
"The `lockTimeout` parameter can be used to interrupt the lock after a given delay.\n"
"The lock timeout is disabled by default, meaning the lock is never interrupted.\n"
"See the parameter Javadoc for more details."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This annotation cannot be used on a method returning `void`."
msgstr "该注释不能用于返回 `void` 的方法。"

#: _guides/cache.adoc
msgid ""
"Quarkus is able to also cache `null` values unlike the underlying Caffeine provider.\n"
"See xref:negative-cache[more on this topic below]."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "@CacheInvalidate"
msgstr "@CacheInvalidate"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Removes an entry from the cache."
msgstr "从缓存中删除一个条目。"

#: _guides/cache.adoc
msgid ""
"When a method annotated with `@CacheInvalidate` is invoked, Quarkus will compute a cache key and use it to try to remove an existing entry from the cache.\n"
"See the xref:cache-keys-building-logic[Cache keys building logic] section of this guide to learn how the cache key is computed.\n"
"If the key does not identify any cache entry, nothing will happen."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "@CacheInvalidateAll"
msgstr "@CacheInvalidateAll"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "When a method annotated with `@CacheInvalidateAll` is invoked, Quarkus will remove all entries from the cache."
msgstr "当一个用 `@CacheInvalidateAll` 注解的方法被调用时，Quarkus将从缓存中删除所有条目。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "@CacheKey"
msgstr "@CacheKey"

#: _guides/cache.adoc
msgid ""
"When a method argument is annotated with `@CacheKey`, it is identified as a part of the cache key during an invocation of a\n"
"method annotated with `@CacheResult` or `@CacheInvalidate`."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This annotation is optional and should only be used when some method arguments are NOT part of the cache key."
msgstr "这个注解是可选的，只有当一些方法参数不是缓存键的一部分时才应该使用。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Cache keys building logic"
msgstr "复合缓存密钥构建逻辑"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Cache keys are built by the annotations API using the following logic:"
msgstr "缓存键是由注释API使用以下逻辑建立的。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "If an `io.quarkus.cache.CacheKeyGenerator` is declared in a `@CacheResult` or a `@CacheInvalidate` annotation, then it is used to generate the cache key. The `@CacheKey` annotations that might be present on some method arguments are ignored."
msgstr "如果在 `@CacheResult` 或 `@CacheInvalidate` 注释中声明了一个 `io.quarkus.cache.CacheKeyGenerator` ，那么它将被用来生成缓存密钥。在一些方法参数上可能存在的 `@CacheKey` 注释被忽略。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Otherwise, if the method has no arguments, then the cache key is an instance of `io.quarkus.cache.DefaultCacheKey` built from the cache name."
msgstr "如果该方法没有参数，那么缓存密钥就是一个由缓存名称构建的 `io.quarkus.cache.DefaultCacheKey` 的实例。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Otherwise, if the method has exactly one argument, then that argument is the cache key."
msgstr "如果该方法正好有一个参数，那么这个参数就是缓存密钥。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Otherwise, if the method has multiple arguments but only one annotated with `@CacheKey`, then that annotated argument is the cache key."
msgstr "如果方法有多个参数，但只有一个被注解为 `@CacheKey` ，那么这个被注解的参数就是缓存密钥。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Otherwise, if the method has multiple arguments annotated with `@CacheKey`, then the cache key is an instance of `io.quarkus.cache.CompositeCacheKey` built from these annotated arguments."
msgstr "如果该方法没有参数，那么缓存密钥就是一个由缓存名称构建的 `io.quarkus.cache.DefaultCacheKey` 的实例。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Otherwise, if the method has multiple arguments and none of them are annotated with `@CacheKey`, the cache key is an instance of `io.quarkus.cache.CompositeCacheKey` built from all the method arguments."
msgstr "如果该方法没有参数，那么缓存密钥就是一个由缓存名称构建的 `io.quarkus.cache.DefaultCacheKey` 的实例。"

#. type: delimited block =
#: _guides/cache.adoc
#, fuzzy
msgid "Each non-primitive method argument that is part of the key must implement `equals()` and `hashCode()` correctly for the cache to work as expected."
msgstr "作为键的一部分的每个非原始方法参数必须正确实现 `equals()` 和 `hashCode()` ，以便缓存按预期工作。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "When a cache key is built from several method arguments, whether they are explicitly identified with `@CacheKey` or not, the building logic depends on the order of these arguments in the method signature. On the other hand, the arguments names are not used at all and do not have any effect on the cache key."
msgstr "当一个缓存键由几个方法参数构建而成时，无论它们是否明确地用 `@CacheKey` ，构建逻辑都取决于这些参数在方法签名中的顺序。另一方面，参数名称根本不被使用，对缓存密钥没有任何影响。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Calling this method WILL invalidate values cached by the `load` method even if the key elements names have been swapped."
msgstr "调用此方法将使 `load` 方法的缓存值无效，即使关键元素的名字被交换了。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Calling this method WILL NOT invalidate values cached by the `load` method because the key elements order is different."
msgstr "调用这个方法不会因为关键元素的顺序不同而使 `load` 方法所缓存的值失效。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Calling this method WILL invalidate values cached by the `load` method because the key elements order is the same."
msgstr "调用此方法将使 `load` 方法缓存的值无效，因为关键元素的顺序是相同的。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Generating a cache key with `CacheKeyGenerator`"
msgstr "注入一个带有 `@CacheName` 注解的 `Cache` 。"

#: _guides/cache.adoc
msgid ""
"You may want to include more than the arguments of a method into a cache key.\n"
"This can be done by implementing the `io.quarkus.cache.CacheKeyGenerator` interface and declaring that implementation in the `keyGenerator` field of a `@CacheResult` or `@CacheInvalidate` annotation."
msgstr ""

#: _guides/cache.adoc
msgid ""
"If a CDI scope is declared on a key generator class and if that class has a default qualifier (no qualifier annotation or `@jakarta.enterprise.inject.Default`), then the key generator will be injected as a CDI bean during the cache key computation.\n"
"Otherwise, the key generator will be instantiated using its default constructor.\n"
"All CDI scopes supported by Quarkus can be used on a key generator."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The following key generator will be injected as a CDI bean:"
msgstr "下面的密钥生成器将作为CDI Bean被注入。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "External data can be included into the cache key by injecting a CDI bean in the key generator."
msgstr "通过在密钥生成器中注入CDI Bean，可以将外部数据纳入缓存密钥。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Be careful while using `Method`, some of its methods can be expensive."
msgstr "在使用 `Method` 时要小心，它的一些方法可能很昂贵。"

#: _guides/cache.adoc
msgid ""
"Make sure the method has enough arguments before accessing them from their index.\n"
"Otherwise, an `IndexOutOfBoundsException` may be thrown during the cache key computation."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The following key generator will be instantiated using its default constructor:"
msgstr "下面的密钥生成器将使用其默认构造函数进行实例化。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Including the method name into the cache key is not expensive, unlike other methods from `Method`."
msgstr "将方法名称纳入缓存密钥并不昂贵，不像其他方法那样，从 `Method` 。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Both kinds of key generators can be used in a similar way:"
msgstr "这两种密钥生成器的使用方法类似。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This key generator is a CDI bean."
msgstr "这个密钥生成器是一个CDI豆。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The `@CacheKey` annotation will be ignored because a key generator is declared in the `@CacheResult` annotation."
msgstr " `@CacheKey` 注解将被忽略，因为在 `@CacheResult` 注解中声明了一个密钥发生器。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This key generator is not a CDI bean."
msgstr "这个密钥生成器不是CDI豆。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The `@CacheKey` annotation will be ignored when the `foo` cache data is invalidated, but `param1` will be the cache key when the `bar` cache data is invalidated."
msgstr "当 `foo` 缓存数据失效时， `@CacheKey` 注释将被忽略，但当 `bar` 缓存数据失效时， `param1` 将成为缓存密钥。"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Caching using the programmatic API"
msgstr "使用程序化的API进行缓存"

#: _guides/cache.adoc
msgid ""
"Quarkus also offers a programmatic API which can be used to store, retrieve or delete values from any cache declared using the annotations API.\n"
"All operations from the programmatic API are non-blocking and rely on https://smallrye.io/smallrye-mutiny/[Mutiny] under the hood."
msgstr ""

#: _guides/cache.adoc
msgid ""
"Before accessing programmatically the cached data, you need to retrieve an `io.quarkus.cache.Cache` instance.\n"
"The following sections will show you how to do that."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Injecting a `Cache` with the `@CacheName` annotation"
msgstr "注入一个带有 `@CacheName` 注解的 `Cache` 。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "`io.quarkus.cache.CacheName` can be used on a field, a constructor parameter or a method parameter to inject a `Cache`:"
msgstr " `io.quarkus.cache.CacheName` 可以在一个字段、一个构造函数参数或一个方法参数上使用，以注入一个 。 `Cache` "

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This is optional."
msgstr "这是可选的。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This method returns the `Uni<String>` type which is non-blocking."
msgstr "该方法返回 `Uni<String>` ，该类型为非阻塞式。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The `k` argument contains the cache key value."
msgstr " `k` 参数包含缓存键值。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "If you don't need the call to be non-blocking, this is how you can retrieve the cache value in a blocking way."
msgstr "如果你不需要非阻塞的调用，这就是你如何以阻塞的方式检索缓存值。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Retrieving a `Cache` from the `CacheManager`"
msgstr "检索一个 `Cache` ，从 `CacheManager` "

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Another way to retrieve a `Cache` instance consists in injecting the `io.quarkus.cache.CacheManager` first and then retrieving the desired `Cache` from its name:"
msgstr "另一种检索 `Cache` 实例的方法是先注入 `io.quarkus.cache.CacheManager` ，然后从其名称中检索出所需的 `Cache` 。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Building a programmatic cache key"
msgstr "建立一个程序化的缓存密钥"

#: _guides/cache.adoc
msgid ""
"Before building a programmatic cache key, you need to know how cache keys are built by the annotations API when an annotated method is invoked.\n"
"This is explained in the xref:cache-keys-building-logic[Cache keys building logic] section of this guide."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Now, if you want to retrieve or delete, using the programmatic API, a cache value that was stored using the annotations API, you just need to make sure the same key is used with both APIs."
msgstr "现在，如果你想用程序化API检索或删除一个用注释API存储的缓存值，你只需要确保两个API使用的是同一个密钥。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Retrieving all keys from a `CaffeineCache`"
msgstr "检索所有的键从一个 `CaffeineCache` "

#: _guides/cache.adoc
msgid ""
"The cache keys from a specific `CaffeineCache` can be retrieved as an unmodifiable `Set` as shown below.\n"
"If the cache entries are modified while an iteration over the set is in progress, the set will remain unchanged."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Populating a `CaffeineCache`"
msgstr "检索所有的键从一个 `CaffeineCache` "

#: _guides/cache.adoc
msgid ""
"You can populate a `CaffeineCache` using the `CaffeineCache#put(Object, CompletableFuture)` method.\n"
"This method associates the `CompletableFuture` with the given key in the cache. If the cache previously contained a value associated with the key, the old value is replaced by this `CompletableFuture`. If the asynchronous computation fails, the entry will be automatically removed."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Retrieving a value if a key is present from a `CaffeineCache`"
msgstr "检索所有的键从一个 `CaffeineCache` "

#: _guides/cache.adoc
msgid ""
"The cache value from a specific `CaffeineCache` can be retrieved if present as shown below.\n"
"If the given key is contained in the cache, the method will return the `CompletableFuture` the specified key is mapped to.\n"
"That `CompletableFuture` may be computing or may already be completed.\n"
"Otherwise, the method will return `null`."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Changing the expiration policy or the maximum size of a `CaffeineCache` in real time"
msgstr "实时改变过期政策或 `CaffeineCache` 的最大尺寸"

#: _guides/cache.adoc
msgid ""
"The expiration policy of a `CaffeineCache` can be changed while a Quarkus app is running if that policy was initially specified in the Quarkus configuration.\n"
"Similarly, the maximum size of a `CaffeineCache` can be changed in real time if the cache was built with an initial maximum size defined in the configuration."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This line will only work if the cache was constructed with an `expire-after-access` configuration value. Otherwise, an `IllegalStateException` will be thrown."
msgstr "这一行只有在缓存的配置值为 `expire-after-access` 的情况下才会起作用。否则，将抛出一个 `IllegalStateException` 。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This line will only work if the cache was constructed with an `expire-after-write` configuration value. Otherwise, an `IllegalStateException` will be thrown."
msgstr "这一行只有在缓存的配置值为 `expire-after-write` 的情况下才会起作用。否则，将抛出一个 `IllegalStateException` 。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This line will only work if the cache was constructed with a `maximum-size` configuration value. Otherwise, an `IllegalStateException` will be thrown."
msgstr "这一行只有在缓存的配置值为 `maximum-size` 的情况下才会起作用。否则，将抛出一个 `IllegalStateException` 。"

#. type: delimited block =
#: _guides/cache.adoc
#, fuzzy
msgid "The `setExpireAfterAccess`, `setExpireAfterWrite` and `setMaximumSize` methods from `CaffeineCache` must never be invoked from within an atomic scope of a cache operation."
msgstr " `setExpireAfterAccess` , `setExpireAfterWrite` 和 `setMaximumSize` 方法来自 `CaffeineCache` ，决不能从一个缓存操作的原子范围内调用。"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Configuring the underlying caching provider"
msgstr "配置底层缓存提供者"

#: _guides/cache.adoc
msgid ""
"This extension uses https://github.com/ben-manes/caffeine[Caffeine] as its underlying caching provider.\n"
"Caffeine is a high performance, near optimal caching library."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Caffeine configuration properties"
msgstr "咖啡因配置特性"

#: _guides/cache.adoc
msgid ""
"Each of the Caffeine caches backing up the Quarkus application data caching extension can be configured using the following\n"
"properties in the `application.properties` file. By default, caches do not perform any type of eviction if not configured."
msgstr ""

#. type: delimited block =
#: _guides/cache.adoc
#, fuzzy
msgid "You need to replace `cache-name` in all the following properties with the real name of the cache you want to configure."
msgstr "你需要在以下所有属性中用你想配置的缓存的真实名称替换 `cache-name` 。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Here's what your cache configuration could look like:"
msgstr "下面是你的缓存配置可能是这样的。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The `foo` cache is being configured."
msgstr " `foo` 缓存正在配置中。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The `bar` cache is being configured."
msgstr " `bar` 缓存正在配置中。"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Enabling Micrometer metrics"
msgstr "启用测微仪指标"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Each cache declared using the xref:annotations-api[annotations caching API] can be monitored using Micrometer metrics."
msgstr "使用 link:#annotations-api[注释缓存API] 声明的每个缓存都可以使用Micrometer指标进行监控。"

#: _guides/cache.adoc
msgid ""
"The cache metrics collection will only work if your application depends on a `quarkus-micrometer-registry-*` extension.\n"
"See the xref:telemetry-micrometer.adoc[Micrometer metrics guide] to learn how to use Micrometer in Quarkus."
msgstr ""

#: _guides/cache.adoc
msgid ""
"The cache metrics collection is disabled by default.\n"
"It can be enabled from the `application.properties` file:"
msgstr ""

#. type: delimited block =
#: _guides/cache.adoc
#, fuzzy
msgid "Like all instrumentation methods, collecting metrics comes with a small overhead that can impact the application performances."
msgstr "像所有的工具化方法一样，收集指标也会有少量的开销，会影响应用程序的性能。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The collected metrics contain cache statistics such as:"
msgstr "收集到的指标包含缓存统计数据，如：。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "the approximate current number of entries in the cache"
msgstr "缓存中的条目的大致当前数量"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "the number of entries that were added to the cache"
msgstr "被添加到缓存中的条目数"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "the number of times a cache lookup has been performed, including information about hits and misses"
msgstr "缓存查询的次数，包括点击率和失误率的信息。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "the number of evictions and the weight of the evicted entries"
msgstr "驱逐的数量和被驱逐条目的权重"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Here is an example of cache metrics available for an application that depends on the `quarkus-micrometer-registry-prometheus` extension:"
msgstr "下面是一个依赖 `quarkus-micrometer-registry-prometheus` 扩展的应用程序可用的缓存指标的例子。"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Annotated beans examples"
msgstr "附有注释的豆子例子"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Implicit simple cache key"
msgstr "隐式简单缓存密钥"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The cache key is implicit since there's no `@CacheKey` annotation."
msgstr "因为没有 `@CacheKey` 注释，所以缓存键是隐含的。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Explicit composite cache key"
msgstr "明确的复合缓存密钥"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The cache key is explicitly composed of two elements. The method signature also contains a third argument which is not part of the key."
msgstr "缓存密钥明确地由两个元素组成。方法签名还包含了第三个参数，它不是密钥的一部分。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Default cache key"
msgstr "默认缓存密钥"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "A unique default cache key derived from the cache name is used because the method has no arguments."
msgstr "因为该方法没有参数，所以使用了一个从缓存名称派生的唯一默认缓存密钥。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Multiple annotations on a single method"
msgstr "一个方法上的多个注释"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This method can be used to force a refresh of the cache entry corresponding to the given key."
msgstr "这个方法可以用来强制刷新与给定键对应的缓存条目。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This method will invalidate all entries from the `foo` and `bar` caches with a single call."
msgstr "这个方法将通过一次调用使 `foo` 和 `bar` 缓存中的所有条目失效。"

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Clear all application caches"
msgstr "清除所有应用程序的缓存"

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Negative caching and nulls"
msgstr "负数缓存和空数"

#: _guides/cache.adoc
msgid ""
"Sometimes one wants to cache the result of an (expensive) remote call.\n"
"If the remote call fails, one may not want to cache the result or exception,\n"
"but rather re-try the remote call on the next invocation."
msgstr ""

#: _guides/cache.adoc
msgid ""
"A simple approach could be to catch the exception and return `null`, so that the caller can\n"
"act accordingly:"
msgstr ""

#. type: Block title
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Sample code"
msgstr "样品代码"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Call the method to call the remote"
msgstr "调用该方法来调用远程"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Do the remote call and return its result"
msgstr "进行远程调用并返回其结果"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Return in case of exception"
msgstr "异常情况下的返回"

#: _guides/cache.adoc
msgid ""
"This approach has an unfortunate side effect: as we said before, Quarkus can also cache\n"
"`null` values. Which means that the next call to `callRemote()` with the same parameter value\n"
"will be answered out of the cache, returning `null` and no remote call will be done.\n"
"This may be desired in some scenarios, but usually one wants to retry the remote call until it returns a result."
msgstr ""

#. type: Title ===
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Let exceptions bubble up"
msgstr "让例外情况浮现出来"

#: _guides/cache.adoc
msgid ""
"To prevent the cache from caching (marker) results from a remote call, we need to let\n"
"the exception bubble out of the called method and catch it at the caller side:"
msgstr ""

#. type: Block title
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "With Exception bubbling up"
msgstr "随着例外情况的涌现"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "Exceptions may bubble up"
msgstr "例外情况可能会涌现"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "This can throw all kinds of remote exceptions"
msgstr "这可能会抛出各种各样的远程异常"

#: _guides/cache.adoc
msgid ""
"When the call to the remote throws an exception, the cache does not store the result,\n"
"so that a subsequent call to `callRemote()` with the same parameter value will not be\n"
"answered out of the cache.\n"
"It will instead result in another attempt to call the remote."
msgstr ""

#. type: Title ==
#: _guides/cache.adoc
#, fuzzy, no-wrap
msgid "Going native"
msgstr "走向本土化"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "The Cache extension supports building native executables."
msgstr "缓存扩展支持构建本地可执行文件。"

#: _guides/cache.adoc
msgid ""
"However, to optimize runtime memory, Caffeine embarks many cache implementation classes that are selected depending on the cache configuration.\n"
"We are not registering all of them for reflection\n"
"(and the ones not registered are not included into the native executables) as registering all of them would be very costly."
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "We are registering the most common implementations but, depending on your cache configuration, you might encounter errors like:"
msgstr "我们正在注册最常见的实现方式，但是，根据你的缓存配置，你可能会遇到这样的错误。"

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "`PSAMS` is one of the many cache implementation classes of Caffeine so this part may vary."
msgstr " `PSAMS` 是Caffeine众多缓存实现类中的一个，所以这部分可能会有所不同。"

#: _guides/cache.adoc
msgid ""
"When you encounter this error, you can easily fix it by adding the following annotation to any of your application classes\n"
"(or you can create a new class such as `Reflections` just to host this annotation if you prefer):"
msgstr ""

#. type: Plain text
#: _guides/cache.adoc
#, fuzzy
msgid "It is an array, so you can register several cache implementations in one go if your configuration requires several of them."
msgstr "它是一个数组，所以如果你的配置需要几个缓存实现，你可以一次性注册几个缓存。"

#. type: Plain text
#: _guides/cache.adoc
msgid "This annotation will register the cache implementation classes for reflection and this will include the classes into the native executable."
msgstr ""
