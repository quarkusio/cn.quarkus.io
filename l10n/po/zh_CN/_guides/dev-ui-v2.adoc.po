# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-05 08:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/dev-ui-v2.adoc:6
#, no-wrap
msgid "Dev UI"
msgstr "开发用户界面"

#. type: Block title
#: upstream/_guides/dev-ui-v2.adoc:12
#, fuzzy, no-wrap
msgid "Dev UI v2"
msgstr "Dev UI v2"

#. type: delimited block =
#: upstream/_guides/dev-ui-v2.adoc:15
#, fuzzy
msgid "This guide covers the Dev UI v2, which is the default from Quarkus 3 onwards. Read xref:dev-ui.adoc[Dev UI v1] for Quarkus 2.x."
msgstr "本指南涵盖了Dev UI v2，它是Quarkus 3以后的默认版本。请阅读Quarkus 2.x的 link:dev-ui.html[Dev UI v1] 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:18
#, fuzzy
msgid "This guide covers the Quarkus Dev UI for xref:building-my-first-extension.adoc[extension authors]."
msgstr "本指南涵盖了 link:building-my-first-extension.html[扩展作者] 的Quarkus Dev UI。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:22
#, fuzzy
msgid "Quarkus ships with a Developer UI, which is available in dev mode (when you start quarkus with `mvn quarkus:dev`) at http://localhost:8080/q/dev-ui[/q/dev-ui] by default. It will show you something like this:"
msgstr "Quarkus带有一个开发者界面，在开发模式下（当你用 `mvn quarkus:dev` 启动quarkus时），它默认在 link:http://localhost:8080/q/dev-ui[/q/dev-ui] 中可用。它将显示类似这样的内容："

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_guides/dev-ui-v2.adoc:23 upstream/_guides/dev-ui-v2.adoc:37
#: upstream/_guides/dev-ui-v2.adoc:61 upstream/_guides/dev-ui-v2.adoc:106
#: upstream/_guides/dev-ui-v2.adoc:124 upstream/_guides/dev-ui-v2.adoc:167
#: upstream/_guides/dev-ui-v2.adoc:188 upstream/_guides/dev-ui-v2.adoc:497
#: upstream/_guides/dev-ui-v2.adoc:610 upstream/_guides/dev-ui-v2.adoc:682
#: upstream/_guides/dev-ui-v2.adoc:752 upstream/_guides/dev-ui-v2.adoc:806
#: upstream/_guides/dev-ui-v2.adoc:1019
#, fuzzy, no-wrap
msgid "Dev"
msgstr "拓展"

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:23
#, no-wrap
msgid "dev-ui-overview-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:26
#, fuzzy
msgid "It allows you to:"
msgstr "它允许你："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:28
#, fuzzy
msgid "quickly visualize all the extensions currently loaded"
msgstr "快速显示当前加载的所有扩展"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:29
#, fuzzy
msgid "view extension statuses and go directly to extension documentation"
msgstr "查看扩展状态并直接进入扩展文档"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:30
#, fuzzy
msgid "view and change `Configuration`"
msgstr "查看和更改 `Configuration` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:31
#, fuzzy
msgid "manage and visualize `Continuous Testing`"
msgstr "管理和可视化 `Continuous Testing` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:32
#, fuzzy
msgid "view `Dev Services` information"
msgstr "查看 `Dev Services` 信息"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:33
#, fuzzy
msgid "view the Build information"
msgstr "查看建设信息"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:34
#, fuzzy
msgid "view and stream various logs"
msgstr "查看和流转各种日志。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:36
#, fuzzy
msgid "Each extension used in the application will be listed and you can navigate to the guide for each extension, see some more information on the extension, and view configuration applicable for that extension:"
msgstr "应用程序中使用的每个扩展将被列出，你可以导航到每个扩展的指南，看到关于该扩展的一些更多信息，并查看适用于该扩展的配置："

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:37
#, no-wrap
msgid "dev-ui-extension-card-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:39
#, fuzzy, no-wrap
msgid "Make my extension extend the Dev UI"
msgstr "让我的扩展程序扩展到Dev UI"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:42
#, fuzzy
msgid "In order to make your extension listed in the Dev UI you don't need to do anything!"
msgstr "为了使你的扩展被列在Dev UI中，你不需要做任何事情!"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:44
#, fuzzy
msgid "So you can always start with that :)"
msgstr "所以你总是可以从这个开始 :)"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:46
#, fuzzy
msgid "Extensions can:"
msgstr "延伸可以："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:48
#, fuzzy
msgid "xref:add-links-to-an-extension-card[Add links to an extension card]"
msgstr "link:#add-links-to-an-extension-card[在扩展卡上添加链接]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:49
#, fuzzy
msgid "xref:add-full-pages[Add full custom pages]"
msgstr "link:#add-full-pages[添加完整的自定义页面]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:50
#, fuzzy
msgid "xref:add-a-log-file[Add a log stream]"
msgstr "link:#add-a-log-file[添加一个日志流]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:51
#, fuzzy
msgid "xref:add-a-section-menu[Add a section menu]"
msgstr "link:#add-a-section-menu[添加一个章节菜单]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:52
#, fuzzy
msgid "xref:custom-cards[Create a custom card]"
msgstr "link:#custom-cards[创建自定义卡片]"

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:53
#, fuzzy, no-wrap
msgid "Add links to an extension card"
msgstr "在扩展卡上添加链接"

#. type: Title ===
#: upstream/_guides/dev-ui-v2.adoc:55
#, fuzzy, no-wrap
msgid "External Links"
msgstr "外部链接"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:58
#, fuzzy
msgid "These are links that reference other (external from Dev UI) data. This data can be HTML pages, text or other data."
msgstr "这些是引用其他（来自Dev UI的外部）数据的链接。这些数据可以是HTML页面、文本或其他数据。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:60
#, fuzzy
msgid "A good example of this is the SmallRye OpenAPI extension that contains links to the generated openapi schema in both json and yaml format, and a link to Swagger UI:"
msgstr "一个很好的例子是SmallRye的OpenAPI扩展，它包含了生成的json和yaml格式的openapi模式的链接，以及一个指向Swagger UI的链接："

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:61
#, no-wrap
msgid "dev-ui-extension-openapi-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:64
#, fuzzy
msgid "The links to these external references is known at build time, so to get links like this on your card, all you need to do is add the following Build Step in your extension:"
msgstr "这些外部参考文献的链接是在构建时知道的，所以要在你的卡片上获得这样的链接，你所需要做的就是在你的扩展中添加以下构建步骤："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:69
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"public CardPageBuildItem pages(NonApplicationRootPathBuildItem nonApplicationRootPathBuildItem) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:71
#, no-wrap
msgid "    CardPageBuildItem cardPageBuildItem = new CardPageBuildItem(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:76
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Schema yaml\") // <3>\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"openapi\")) // <4>\n"
"            .isYamlContent() // <5>\n"
"            .icon(\"font-awesome-solid:file-lines\")); // <6>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:81
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Schema json\")\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"openapi\") + \"?format=json\")\n"
"            .isJsonContent()\n"
"            .icon(\"font-awesome-solid:file-code\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:86
#, no-wrap
msgid ""
"    cardPageBuildItem.addPage(Page.externalPageBuilder(\"Swagger UI\")\n"
"            .url(nonApplicationRootPathBuildItem.resolvePath(\"swagger-ui\"))\n"
"            .isHtmlContent()\n"
"            .icon(\"font-awesome-solid:signs-post\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:89
#, no-wrap
msgid ""
"    return cardPageBuildItem;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:91
#, fuzzy
msgid "Always make sure that this build step is only run when in dev mode"
msgstr "一定要确保这个构建步骤只在开发模式下运行"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:92
#, fuzzy
msgid "To add anything on the card, you need to return/produce a `CardPageBuildItem`."
msgstr "要在卡上添加任何东西，你需要返回/制作一个 `CardPageBuildItem` 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:93
#, fuzzy
msgid "To add a link, you can use the `addPage` method, as all links go to a \"page\". `Page` has some builders to assist with building a page. For `external` links, use the `externalPageBuilder`"
msgstr "要添加一个链接，你可以使用 `addPage` ，因为所有的链接都会进入一个 \"页面\"。 `Page` ，有一些建设者来协助建立一个页面。对于 `external` 的链接，使用 `externalPageBuilder` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:94
#, fuzzy
msgid "Adding the url of the external link (in this case we use `NonApplicationRootPathBuildItem` to create this link, as this link is under the configurable non application path, default `/q`). Always use `NonApplicationRootPathBuildItem` if your link is available under `/q`."
msgstr "添加外部链接的网址（在这种情况下，我们使用 `NonApplicationRootPathBuildItem` 来创建这个链接，因为这个链接是在可配置的非应用路径下，默认为 `/q` ）。如果你的链接在 `/q` 下可用，请始终使用 `NonApplicationRootPathBuildItem` 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:95
#, fuzzy
msgid "You can (optionally) hint the content type of the content you are navigating to. If there is no hint, a header call will be made to determine the `MediaType`;"
msgstr "你可以（有选择地）提示你所导航的内容的内容类型。如果没有提示，将调用头来确定 `MediaType` ；"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:96
#, fuzzy
msgid "You can add an icon. All free font-awesome icons are available."
msgstr "你可以添加一个图标。所有免费的字体真棒的图标都可以使用。"

#. type: Block title
#: upstream/_guides/dev-ui-v2.adoc:98
#, fuzzy, no-wrap
msgid "Note about icons"
msgstr "关于图标的说明"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:101
#, fuzzy
msgid "If you find your icon at https://fontawesome.com/search?o=r&m=free[Font awesome], you can map as follow: Example `<i class=\"fa-solid fa-house\"></i>` will map to `font-awesome-solid:house`, so `fa` becomes `font-awesome` and for the icon name, remove the `fa-`;"
msgstr "如果你在 link:https://fontawesome.com/search?o=r&m=free[Font awesome] 找到你的图标，你可以按以下方式映射：例如 `<i class=\"fa-solid fa-house\"></i>` 将映射到 `font-awesome-solid:house` ，所以 `fa` 变成 `font-awesome` ，对于图标名称，删除 `fa-` ；"

#. type: Title ====
#: upstream/_guides/dev-ui-v2.adoc:102
#, fuzzy, no-wrap
msgid "Embedding external content"
msgstr "嵌入外部内容"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:105
#, fuzzy
msgid "By default, even external links will render inside (embedded) in Dev UI. In the case of HTML, the page will be rendered and any other content will be shown using https://codemirror.net/[code-mirror] to markup the media type. For example the open api schema document in `yaml` format:"
msgstr "默认情况下，即使是外部链接也会在Dev UI中呈现（嵌入）。在HTML的情况下，页面将被渲染，任何其他内容将使用 link:https://codemirror.net/[代码镜像] 来标记媒体类型，例如 `yaml` 格式的open api schema文档："

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:106
#, no-wrap
msgid "dev-ui-extension-openapi-embed-v2.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:109
#, fuzzy
msgid "If you do not want to embed the content, you can use the `.doNotEmbed()` on the Page Builder, this will then open the link in a new tab."
msgstr "如果你不想嵌入内容，你可以使用页面生成器上的 `.doNotEmbed()` ，然后这将打开一个新标签。"

#. type: Title ====
#: upstream/_guides/dev-ui-v2.adoc:110
#, fuzzy, no-wrap
msgid "Runtime external links "
msgstr "运行时外部链接"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:113
#, fuzzy
msgid "The example above assumes you know the link to use at build time. There might be cases where you only know this at runtime. In that case you can use a xref:JsonRPC[JsonRPC] Method that returns the link to add, and use that when creating the link. Rather than using the `.url` method on the page builder, use the `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")`."
msgstr "上面的例子假设你在构建时知道要使用的链接。可能有这样的情况，你只在运行时知道。在这种情况下，你可以使用一个 link:#JsonRPC[JsonRPC] 方法来返回要添加的链接，并在创建链接时使用它。与其在页面生成器上使用 `.url` 方法，不如使用 `.dynamicUrlJsonRPCMethodName(\"yourJsonRPCMethodName\")` 。"

#. type: Title ====
#: upstream/_guides/dev-ui-v2.adoc:114
#, fuzzy, no-wrap
msgid "Adding labels"
msgstr "添加标签"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:117
#, fuzzy
msgid "You can add an option label to the link in the card using one of the builder methods on the page builder. These labels can be"
msgstr "你可以使用页面生成器上的一个生成器方法为卡片中的链接添加一个选项标签。这些标签可以是"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:119
#, fuzzy
msgid "static (known at build time) `.staticLabel(\"staticLabelValue\")`"
msgstr "静态（在构建时已知） `.staticLabel(\"staticLabelValue\")` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:120
#, fuzzy
msgid "dynamic (loaded at runtime) `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr "动态的（在运行时加载）。 `.dynamicLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:121
#, fuzzy
msgid "streaming (continuously streaming updated values at runtime) `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")`"
msgstr "流媒体（在运行时持续流传更新的数值）。 `.streamingLabelJsonRPCMethodName(\"yourJsonRPCMethodName\")` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:123
#, fuzzy
msgid "For dynamic and streaming labels, see the xref:JsonRPC[JsonRPC] Section."
msgstr "关于动态和流式标签，见 link:#JsonRPC[JsonRPC] 部分。"

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:124
#, no-wrap
msgid "dev-ui-extension-card-label-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:126
#, fuzzy, no-wrap
msgid "Add full pages"
msgstr "添加整页"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:129
#, fuzzy
msgid "You can also link to an \"internal\" page (as opposed to the above \"external\" page). This means that you can build the page and add data and actions for rendering in Dev UI."
msgstr "你也可以链接到一个 \"内部 \"页面（相对于上述 \"外部 \"页面而言）。这意味着你可以建立该页面，并添加数据和动作，以便在Dev UI中呈现。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:130 upstream/_guides/dev-ui-v2.adoc:1153
#, fuzzy, no-wrap
msgid "Build time data"
msgstr "建立时间数据"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:133
#, fuzzy
msgid "To make build time data available in your full page, you can add any data to your `CardPageBuildItem` with a key and a value:"
msgstr "为了使构建时间数据在你的完整页面中可用，你可以用一个键和一个值将任何数据添加到你的 `CardPageBuildItem` ："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:138
#, no-wrap
msgid ""
"CardPageBuildItem pageBuildItem = new CardPageBuildItem();\n"
"pageBuildItem.addBuildTimeData(\"someKey\", getSomeValueObject());\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:141
#, fuzzy
msgid "You can add multiple of these key-value pairs for all the data you know at build time that you need on the page."
msgstr "你可以为你在构建时知道的所有数据添加多个这样的键值对，而这些数据是你在页面上需要的。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:143
#, fuzzy
msgid "There are a few options to add full page content in Dev UI. Starting from the most basic (good start) to a full blown web-component (preferred)."
msgstr "在Dev UI中添加完整的页面内容有几个选项。从最基本的（好的开始）到完整的网络组件（首选）。"

#. type: Title ===
#: upstream/_guides/dev-ui-v2.adoc:144
#, fuzzy, no-wrap
msgid "Display some build time data on a screen (without having to do frontend coding):"
msgstr "在屏幕上显示一些构建时间的数据（无需进行前端编码）："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:147
#, fuzzy
msgid "If you have some data that is known at build time that you want to display you can use one of the following builders in `Page`:"
msgstr "如果你有一些在构建时已知的数据，你想显示这些数据，你可以在 `Page` 中使用以下构建器之一："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:149
#, fuzzy
msgid "xref:raw-data[Raw data]"
msgstr "link:#raw-data[原始数据]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:150
#, fuzzy
msgid "xref:table-data[Table data]"
msgstr "link:#table-data[表格数据]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:151
#, fuzzy
msgid "xref:qute-data[Qute data]"
msgstr "link:#qute-data[Qute数据]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:152
#, fuzzy
msgid "xref:web-component-page[Web Component page]"
msgstr "link:#web-component-page[网络组件页面]"

#. type: Title ====
#: upstream/_guides/dev-ui-v2.adoc:153
#, fuzzy, no-wrap
msgid "Raw data"
msgstr "原始数据"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:155
#, fuzzy
msgid "This will display your data in it's raw (serialised) json value:"
msgstr "这将显示你的数据的原始（序列化）json值："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:161
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.rawDataPageBuilder(\"Raw data\") // <1>\n"
"                .icon(\"font-awesome-brands:js\")\n"
"                .buildTimeDataKey(\"someKey\")); // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:163
#, fuzzy
msgid "Use the `rawDataPageBuilder`."
msgstr "使用 `rawDataPageBuilder` 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:164 upstream/_guides/dev-ui-v2.adoc:185
#, fuzzy
msgid "Link back to the key used when you added the build time data in `addBuildTimeData` on the Page BuildItem."
msgstr "链接到你在 `addBuildTimeData` ，在页面BuildItem上添加构建时间数据时使用的键。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:166
#, fuzzy
msgid "That will create a link to a page that renders the raw data in json:"
msgstr "这将创建一个链接到一个以json格式呈现原始数据的页面："

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:167
#, no-wrap
msgid "dev-ui-raw-page-v2.png"
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui-v2.adoc:169
#, fuzzy, no-wrap
msgid "Table data"
msgstr "表格数据"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:172
#, fuzzy
msgid "You can also display your Build time data in a table if the structure allows it:"
msgstr "如果结构允许，你也可以在表格中显示你的建设时间数据："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:181
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.tableDataPageBuilder(\"Table data\") // <1>\n"
"                .icon(\"font-awesome-solid:table\")\n"
"                .showColumn(\"timestamp\") // <2>\n"
"                .showColumn(\"user\") // <2>\n"
"                .showColumn(\"fullJoke\") // <2>\n"
"                .buildTimeDataKey(\"someKey\")); // <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:183
#, fuzzy
msgid "Use the `tableDataPageBuilder`."
msgstr "使用 `tableDataPageBuilder` 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:184
#, fuzzy
msgid "Optionally only show certain fields."
msgstr "可以选择只显示某些字段。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:187
#, fuzzy
msgid "That will create a link to a page that renders the data in a table:"
msgstr "这将创建一个链接到一个页面，将数据显示在一个表中："

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:188
#, no-wrap
msgid "dev-ui-table-page-v2.png"
msgstr ""

#. type: Title ====
#: upstream/_guides/dev-ui-v2.adoc:190
#, fuzzy, no-wrap
msgid "Qute data"
msgstr "Qute数据"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:193
#, fuzzy
msgid "You can also display your build time data using a qute template. All build time data keys are available to use in the template:"
msgstr "你也可以用qute模板来显示你的建造时间数据。所有构建时间的数据键都可以在模板中使用："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:199
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.quteDataPageBuilder(\"Qute data\") // <1>\n"
"                .icon(\"font-awesome-solid:q\")\n"
"                .templateLink(\"qute-jokes-template.html\")); // <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:201
#, fuzzy
msgid "Use the `quteDataPageBuilder`."
msgstr "使用 `quteDataPageBuilder` 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:202
#, fuzzy
msgid "Link to the Qute template in `/deployment/src/main/resources/dev-ui/`."
msgstr "链接到 `/deployment/src/main/resources/dev-ui/` 中的Qute模板。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:204
#, fuzzy
msgid "Using any Qute template to display the data, for example `qute-jokes-template.html`:"
msgstr "使用任何qute模板来显示数据，例如 `qute-jokes-template.html` ："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:225
#, no-wrap
msgid ""
"<table>\n"
"    <thead>\n"
"        <tr>\n"
"            <th>Timestamp</th>\n"
"            <th>User</th>\n"
"            <th>Joke</th>\n"
"        </tr>\n"
"    </thead>\n"
"    <tbody>\n"
"        {#for joke in jokes} // <1>\n"
"        <tr>\n"
"            <td>{joke.timestamp}</td>\n"
"            <td><span><img src=\"{joke.profilePic}\" height=\"30px\"></img> {joke.user}</span></td>\n"
"            <td>{joke.fullJoke}</td>\n"
"        </tr>\n"
"        {/for}\n"
"    </tbody>\n"
"</table>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:227
#, fuzzy
msgid "`jokes` added as a build time data key on the Page Build Item."
msgstr " `jokes` 作为页面构建项目的构建时间数据键添加。"

#. type: Title ====
#: upstream/_guides/dev-ui-v2.adoc:228
#, fuzzy, no-wrap
msgid "Web Component page"
msgstr "网络组件页面"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:231
#, fuzzy
msgid "To build an interactive page with actions and runtime (or build time) data, you need to use the web component page:"
msgstr "要建立一个带有动作和运行时（或建立时）数据的交互式页面，你需要使用网络组件页面："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:238
#, no-wrap
msgid ""
"cardPageBuildItem.addPage(Page.webComponentPageBuilder() // <1>\n"
"                    .icon(\"font-awesome-solid:egg\")\n"
"                    .componentLink(\"qwc-arc-beans.js\") // <2>\n"
"                    .staticLabel(String.valueOf(beans.size())));\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:240
#, fuzzy
msgid "Use the `webComponentPageBuilder`."
msgstr "使用 `webComponentPageBuilder` 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:241
#, fuzzy
msgid "Link to the Web Component in `/deployment/src/main/resources/dev-ui/`. The title can also be defined (using `.title(\"My title\")` in the builder), but if not the title will be assumed from the componentLink, which should always have the format `qwc` (stands for Quarkus Web Component) dash `extensionName` (example, `arc` in this case ) dash `page title` (\"Beans\" in this case)"
msgstr "在 `/deployment/src/main/resources/dev-ui/` 中链接到网络组件。标题也可以定义（在构建器中使用 `.title(\"My title\")` ），但如果没有，标题将从组件链接中假定，其格式应该总是 `qwc` （代表Quarkus Web组件）破折号 `extensionName` （例如，本例中的 `arc` ）破折号 `page title` （本例中的 \"豆子\"）。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:243
#, fuzzy
msgid "Dev UI uses https://lit.dev/[Lit] to make building these web components easier. You can read more about Web Components and Lit:"
msgstr "Dev UI使用 link:https://lit.dev/[Lit] 来使构建这些网络组件更容易。你可以阅读更多关于网络组件和Lit的信息："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:245
#, fuzzy
msgid "https://www.webcomponents.org/introduction[Web components Getting started]"
msgstr "link:https://www.webcomponents.org/introduction[网络组件 开始使用]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:246
#, fuzzy
msgid "https://lit.dev/docs/[Lit documentation]"
msgstr "link:https://lit.dev/docs/[文献资料]"

#. type: Title =====
#: upstream/_guides/dev-ui-v2.adoc:247
#, fuzzy, no-wrap
msgid "Basic structure of a Web component page"
msgstr "网络组件页面的基本结构"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:250
#, fuzzy
msgid "A Web component page is just a JavaScript Class that creates a new HTML Element:"
msgstr "一个网络组件页面只是一个创建新的HTML元素的JavaScript类："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:255
#, no-wrap
msgid ""
"import { LitElement, html, css} from 'lit'; // <1>\n"
"import { beans } from 'build-time-data'; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:260
#, no-wrap
msgid ""
"/**\n"
" * This component shows the Arc Beans\n"
" */\n"
"export class QwcArcBeans extends LitElement { // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:265
#, no-wrap
msgid ""
"    static styles = css` // <4>\n"
"        .annotation {\n"
"          color: var(--lumo-contrast-50pct); // <5>\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:270 upstream/_guides/dev-ui-v2.adoc:344
#, no-wrap
msgid ""
"        .producer {\n"
"          color: var(--lumo-primary-text-color);\n"
"        }\n"
"        `;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:274
#, no-wrap
msgid ""
"    static properties = {\n"
"        _beans: {state: true}, // <6>\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:279
#, no-wrap
msgid ""
"    constructor() { // <7>\n"
"        super();\n"
"        this._beans = beans;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:292
#, no-wrap
msgid ""
"    render() { // <8>\n"
"        if (this._beans) {\n"
"            return html`<ul>\n"
"                ${this._beans.map((bean) => // <9>\n"
"                    html`<li>${bean.providerType.name}</li>`\n"
"                )}</ul>`;\n"
"        } else {\n"
"            return html`No beans found`;\n"
"        }\n"
"    }\n"
"}\n"
"customElements.define('qwc-arc-beans', QwcArcBeans); // <10>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:296
#, fuzzy
msgid "You can import Classes and/or functions from other libraries.  In this case we use the `LitElement` class and `html` & `css` functions from `Lit`"
msgstr "你可以从其他库中导入类和/或函数。在本例中，我们使用 `LitElement` 类和 `html` & `css` 函数，这些函数来自 `Lit` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:297
#, fuzzy
msgid "Build time data as defined in the Build step and can be imported using the key and always from `build-time-data`. All keys added in your Build step will be available."
msgstr "构建步骤中定义的构建时间数据可以使用密钥导入，并且总是从 `build-time-data` 。在你的Build步骤中添加的所有键都将可用。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:298
#, fuzzy
msgid "The component should be named in the following format: Qwc (stands for Quarkus Web Component) then Extension Name then Page Title, all concatenated with Camel Case. This will also match the file name format as described earlier. The component should also extend `LitComponent`."
msgstr "该组件应按以下格式命名：Qwc（代表Quarkus Web组件），然后是扩展名，然后是页面标题，都用Camel Case连接起来。这也将与前面描述的文件名格式一致。该组件还应该扩展 `LitComponent` 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:299
#, fuzzy
msgid "CSS styles can be added using the `css` function, and these styles only apply to your component."
msgstr "CSS样式可以用 `css` 函数添加，这些样式只适用于你的组件。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:300
#, fuzzy
msgid "Styles can reference globally defined CSS variables to make sure your page renders correctly, especially when switching between light and dark mode. You can find all CSS variables in the Vaadin documentation (https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[Color], https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[Sizing and Spacing], etc)"
msgstr "样式可以引用全局定义的CSS变量来确保你的页面渲染正确，特别是在浅色和深色模式之间切换时。你可以在Vaadin文档中找到所有的CSS变量 link:https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/color[（颜色] 、 link:https://vaadin.com/docs/latest/styling/lumo/lumo-style-properties/size-space[大小和间距] 等）。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:301
#, fuzzy
msgid "Properties can be added. Use `_` in front of a property if that property is private. Properties are usually injected in the HTML template, and can be defined as having state, meaning that if that property changes, the component should re-render. In this case, the beans are Build time data and only change on hot-reload, which will be covered later."
msgstr "可以添加属性。如果一个属性是私有的，在该属性前面使用 `_` 。属性通常被注入到HTML模板中，并且可以被定义为具有状态，这意味着如果该属性发生变化，该组件应该重新渲染。在这种情况下，Bean是Build time数据，只有在热重载时才会发生变化，这一点我们将在后面介绍。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:302
#, fuzzy
msgid "Constructors (optional) should always call `super` first, and then set the default values for the properties."
msgstr "构造函数（可选）应该总是先调用 `super` ，然后为属性设置默认值。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:303
#, fuzzy
msgid "The render method (from `LitElement`) will be called to render the page. In this method you return the markup of the page you want. You can use the `html` function from `Lit`, that gives you a template language to output the HTML you want. Once the template is created, you only need to set/change the properties to re-render the page content. Read more about https://lit.dev/docs/components/rendering/[Lit html]"
msgstr "渲染方法（来自 `LitElement` ，将被调用来渲染页面）。在这个方法中，你返回你想要的页面的标记。你可以使用来自 `Lit` 的 `html` 函数，它给你一个模板语言来输出你想要的HTML。一旦模板被创建，你只需要设置/改变属性来重新渲染页面内容。阅读更多关于 link:https://lit.dev/docs/components/rendering/[Lit html]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:304
#, fuzzy
msgid "You can use the built-in template functions to do conditional, list, etc. Read more about https://lit.dev/docs/templates/overview/[Lit Templates]"
msgstr "你可以使用内置的模板函数来做条件、列表等。了解更多关于 link:https://lit.dev/docs/templates/overview/[Lit Templates] 的信息"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:305
#, fuzzy
msgid "You always need to register your Web component as a custom element, with a unique tag. Here the tag will follow the same format as the filename (`qwc` dash `extension name` dash `page title` );"
msgstr "你总是需要把你的Web组件注册为一个自定义元素，并有一个独特的标签。这里的标签将遵循与文件名相同的格式（ `qwc` dash `extension name` dash `page title` ）；"

#. type: Title =====
#: upstream/_guides/dev-ui-v2.adoc:306
#, fuzzy, no-wrap
msgid "Using Vaadin UI components for rendering"
msgstr "使用Vaadin UI组件进行渲染"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:309
#, fuzzy
msgid "Dev UI makes extensive usage of https://vaadin.com/docs/latest/components[Vaadin web components] as UI Building blocks."
msgstr "Dev UI广泛使用了 link:https://vaadin.com/docs/latest/components[Vaadin网络组件] 作为UI构件。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:311
#, fuzzy
msgid "As an example, the Arc Beans are rendered using a https://vaadin.com/docs/latest/components/grid[Vaadin Grid]:"
msgstr "作为一个例子，Arc Beans是使用 link:https://vaadin.com/docs/latest/components/grid[Vaadin网格] 渲染的："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:320
#, no-wrap
msgid ""
"import { LitElement, html, css} from 'lit';\n"
"import { beans } from 'build-time-data';\n"
"import '@vaadin/grid'; // <1>\n"
"import { columnBodyRenderer } from '@vaadin/grid/lit.js'; // <2>\n"
"import '@vaadin/vertical-layout';\n"
"import 'qui-badge'; // <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:325
#, no-wrap
msgid ""
"/**\n"
" * This component shows the Arc Beans\n"
" */\n"
"export class QwcArcBeans extends LitElement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:331
#, no-wrap
msgid ""
"    static styles = css`\n"
"        .arctable {\n"
"          height: 100%;\n"
"          padding-bottom: 10px;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:335
#, no-wrap
msgid ""
"        code {\n"
"          font-size: 85%;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:339
#, no-wrap
msgid ""
"        .annotation {\n"
"          color: var(--lumo-contrast-50pct);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:348
#, no-wrap
msgid ""
"    static properties = {\n"
"        _beans: {state: true},\n"
"    };\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:353
#, no-wrap
msgid ""
"    constructor() {\n"
"        super();\n"
"        this._beans = beans;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:356
#, no-wrap
msgid ""
"    render() {\n"
"        if (this._beans) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:364
#, no-wrap
msgid ""
"            return html`\n"
"                <vaadin-grid .items=\"${this._beans}\" class=\"arctable\" theme=\"no-border\">\n"
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Bean\"\n"
"                        ${columnBodyRenderer(this._beanRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:370
#, no-wrap
msgid ""
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Kind\"\n"
"                        ${columnBodyRenderer(this._kindRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:377
#, no-wrap
msgid ""
"                    <vaadin-grid-column auto-width\n"
"                        header=\"Associated Interceptors\"\n"
"                        ${columnBodyRenderer(this._interceptorsRenderer, [])}\n"
"                        resizable>\n"
"                    </vaadin-grid-column>\n"
"                </vaadin-grid>`;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:382
#, no-wrap
msgid ""
"        } else {\n"
"            return html`No beans found`;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:392
#, no-wrap
msgid ""
"    _beanRenderer(bean) {\n"
"        return html`<vaadin-vertical-layout>\n"
"      <code class=\"annotation\">@${bean.scope.simpleName}</code>\n"
"      ${bean.nonDefaultQualifiers.map(qualifier =>\n"
"            html`${this._qualifierRenderer(qualifier)}`\n"
"        )}\n"
"      <code>${bean.providerType.name}</code>\n"
"      </vaadin-vertical-layout>`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:401
#, no-wrap
msgid ""
"    _kindRenderer(bean) {\n"
"      return html`\n"
"        <vaadin-vertical-layout>\n"
"          ${this._kindBadgeRenderer(bean)}\n"
"          ${this._kindClassRenderer(bean)}\n"
"        </vaadin-vertical-layout>\n"
"    `;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:405
#, no-wrap
msgid ""
"    _kindBadgeRenderer(bean){\n"
"      let kind = this._camelize(bean.kind);\n"
"      let level = null;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:415
#, no-wrap
msgid ""
"      if(bean.kind.toLowerCase() === \"field\"){\n"
"        kind = \"Producer field\";\n"
"        level = \"success\";\n"
"      }else if(bean.kind.toLowerCase() === \"method\"){\n"
"          kind = \"Producer method\";\n"
"          level = \"success\";\n"
"      }else if(bean.kind.toLowerCase() === \"synthetic\"){\n"
"        level = \"contrast\";\n"
"      }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:422
#, no-wrap
msgid ""
"      return html`\n"
"        ${level\n"
"          ? html`<qui-badge level='${level}' small><span>${kind}</span></qui-badge>` \n"
"          : html`<qui-badge small><span>${kind}</span></qui-badge>`\n"
"        }`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:431
#, no-wrap
msgid ""
"    _kindClassRenderer(bean){\n"
"      return html`\n"
"          ${bean.declaringClass\n"
"            ? html`<code class=\"producer\">${bean.declaringClass.simpleName}.${bean.memberName}()</code>`\n"
"            : html`<code class=\"producer\">${bean.memberName}</code>`\n"
"          }\n"
"      `;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:444
#, no-wrap
msgid ""
"    _interceptorsRenderer(bean) {\n"
"        if (bean.interceptors && bean.interceptors.length > 0) {\n"
"            return html`<vaadin-vertical-layout>\n"
"                          ${bean.interceptorInfos.map(interceptor =>\n"
"                              html`<div>\n"
"                                    <code>${interceptor.interceptorClass.name}</code> \n"
"                                    <qui-badge class=\"${bean.kind.toLowerCase()}\" small pill><span>${interceptor.priority}</span></qui-badge>\n"
"                                  </div>`\n"
"                          )}\n"
"                        </vaadin-vertical-layout>`;\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:448
#, no-wrap
msgid ""
"    _qualifierRenderer(qualifier) {\n"
"        return html`<code class=\"annotation\">${qualifier.simpleName}</code>`;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:458
#, no-wrap
msgid ""
"    _camelize(str) {\n"
"        return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match, index) {\n"
"            if (+match === 0)\n"
"                return \"\";\n"
"            return index === 0 ? match.toUpperCase() : match.toLowerCase();\n"
"        });\n"
"    }\n"
"}\n"
"customElements.define('qwc-arc-beans', QwcArcBeans);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:460
#, fuzzy
msgid "Import the Vaadin component you want to use"
msgstr "导入你想使用的Vaadin组件"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:461
#, fuzzy
msgid "You can also import other functions if needed"
msgstr "如果需要的话，你也可以导入其他函数"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:462
#, fuzzy
msgid "There are some internal UI components that you can use, described below"
msgstr "有一些内部的UI组件，你可以使用，描述如下"

#. type: Title =====
#: upstream/_guides/dev-ui-v2.adoc:463
#, fuzzy, no-wrap
msgid "Using internal UI components"
msgstr "使用内部UI组件"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:466
#, fuzzy
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qui[internal UI components] (under the `qui` namespace) are available to make certain things easier:"
msgstr "一些 link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qui[内部的UI组件] （在 `qui` 名称空间下）可以使某些事情更容易："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:468
#, fuzzy
msgid "Card"
msgstr "卡片"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:469
#, fuzzy
msgid "Badge"
msgstr "徽章"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:470
#, fuzzy
msgid "Alert"
msgstr "警报"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:471
#, fuzzy
msgid "Code block"
msgstr "代码块"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:472
#, fuzzy
msgid "IDE Link"
msgstr "IDE链接"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:474
#, fuzzy
msgid "====== Card"
msgstr "卡片"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:476
#, fuzzy
msgid "Card component to display contents in a card"
msgstr "卡片组件，在卡片中显示内容"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:480
#, no-wrap
msgid "import 'qui-card';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:489
#, no-wrap
msgid ""
"<qui-card title=\"My title\">\n"
"    <div slot=\"content\">\n"
"        My contents\n"
"    </div>\n"
"</qui-card>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:492
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L110[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L110[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:494
#, fuzzy
msgid "====== Badge"
msgstr "徽章"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:496
#, fuzzy
msgid "Badge UI Component based on the https://vaadin.com/docs/latest/components/badge[vaadin themed] badge"
msgstr "基于 link:https://vaadin.com/docs/latest/components/badge[vaadin主题] 徽章的徽章UI组件"

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:497
#, no-wrap
msgid "dev-ui-qui-badge-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:502
#, no-wrap
msgid "import 'qui-badge';\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:505
#, fuzzy
msgid "You can use any combination of small, primary, pill, with icon and clickable with any level of `default`, `success`, `warning`, `error`, `contrast` or set your own colors."
msgstr "你可以使用小号、主号、丸子、带图标和可点击的任何组合，并使用任何级别的 `default` , `success` , `warning` , `error` , `contrast` 或设置你自己的颜色。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:600
#, no-wrap
msgid ""
"<div class=\"badges\">\n"
"    <h3>Badges</h3>\n"
"    <p>Badges wrap the Vaadin theme in a component.\n"
"        See <a href=\"https://vaadin.com/docs/latest/components/badge\">https://vaadin.com/docs/latest/components/badge</a> for more info.\n"
"    </p>\n"
"    <div class=\"cards\">\n"
"        <qui-card title=\"Small\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge small><span>Default</span></qui-badge>\n"
"                    <qui-badge level=\"success\" small><span>Success</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" small><span>Warning</span></qui-badge>\n"
"                    <qui-badge level=\"error\" small><span>Error</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" small><span>Contrast</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" small><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card> \n"
"        <qui-card title=\"Primary\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge primary><span>Default primary</span></qui-badge>\n"
"                    <qui-badge level=\"success\" primary><span>Success primary</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" primary><span>Warning primary</span></qui-badge>\n"
"                    <qui-badge level=\"error\" primary><span>Error primary</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" primary><span>Contrast primary</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" primary><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Pill\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge pill><span>Default pill</span></qui-badge>\n"
"                    <qui-badge level=\"success\" pill><span>Success pill</span></qui-badge>\n"
"                    <qui-badge level=\"warning\" pill><span>Warning pill</span></qui-badge>\n"
"                    <qui-badge level=\"error\" pill><span>Error pill</span></qui-badge>\n"
"                    <qui-badge level=\"contrast\" pill><span>Contrast pill</span></qui-badge>\n"
"                    <qui-badge background=\"pink\" color=\"purple\" pill><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"With icon\">\n"
"            <div slot=\"content\">            \n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge text=\"Default\" icon=\"font-awesome-solid:circle-info\">\n"
"                        <span>Default icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Success\" level=\"success\" icon=\"font-awesome-solid:check\">\n"
"                        <span>Success icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Warning\" level=\"warning\" icon=\"font-awesome-solid:triangle-exclamation\">\n"
"                        <span>Warning icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Error\" level=\"error\" icon=\"font-awesome-solid:circle-exclamation\">\n"
"                        <span>Error icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Contrast\" level=\"contrast\" icon=\"font-awesome-solid:hand\">\n"
"                        <span>Contrast icon</span>\n"
"                    </qui-badge>\n"
"                    <qui-badge text=\"Custom\" background=\"pink\" color=\"purple\" icon=\"font-awesome-brands:redhat\">\n"
"                        <span>Custom colours</span>\n"
"                    </qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Icon only\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge icon=\"font-awesome-solid:clock\"></qui-badge>\n"
"                    <qui-badge level=\"success\" icon=\"font-awesome-solid:check\"></qui-badge>\n"
"                    <qui-badge level=\"warning\" icon=\"font-awesome-solid:triangle-exclamation\"></qui-badge>\n"
"                    <qui-badge level=\"error\" icon=\"font-awesome-solid:circle-exclamation\"></qui-badge>\n"
"                    <qui-badge level=\"contrast\" icon=\"font-awesome-solid:hand\"></qui-badge>\n"
"                    <qui-badge level=\"contrast\" background=\"pink\" color=\"purple\" icon=\"font-awesome-brands:redhat\"></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"        <qui-card title=\"Clickable\">\n"
"            <div slot=\"content\">\n"
"                <div class=\"cardcontents\">\n"
"                    <qui-badge clickable @click=${() => this._info()}><span>Default</span></qui-badge>\n"
"                    <qui-badge clickable level=\"success\" @click=${() => this._success()}><span>Success</span></qui-badge>\n"
"                    <qui-badge clickable level=\"warning\" @click=${() => this._warning()}><span>Warning</span></qui-badge>\n"
"                    <qui-badge clickable level=\"error\" @click=${() => this._error()}><span>Error</span></qui-badge>\n"
"                    <qui-badge clickable level=\"contrast\" @click=${() => this._contrast()}><span>Contrast</span></qui-badge>\n"
"                    <qui-badge clickable background=\"pink\" color=\"purple\" @click=${() => this._info()}><span>Custom colours</span></qui-badge>\n"
"                </div>\n"
"            </div>\n"
"        </qui-card>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:603
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L214[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L214[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:605
#, fuzzy
msgid "====== Alert"
msgstr "警报"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:607
#, fuzzy
msgid "Alerts are modeled around the Bootstrap alerts. Click https://getbootstrap.com/docs/4.0/components/alerts[here] for more info."
msgstr "警报是围绕Bootstrap的警报而设计的。点击 link:https://getbootstrap.com/docs/4.0/components/alerts[这里] 获取更多信息。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:609
#, fuzzy
msgid "Also see Notification controller below as an alternative."
msgstr "也可参见下面的通知控制器作为替代。"

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:610
#, no-wrap
msgid "dev-ui-qui-alert-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:615
#, no-wrap
msgid "import 'qui-alert';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:672
#, no-wrap
msgid ""
"<div class=\"cards\">\n"
"    <div class=\"cardcontents\">\n"
"        <qui-alert><span>Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\"><span>Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\"><span>Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\"><span>Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert permanent><span>Permanent Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\" permanent><span>Permanent Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\" permanent><span>Permanent Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\" permanent><span>Permanent Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert center><span>Center Info alert</span></qui-alert>\n"
"        <qui-alert level=\"success\" center><span>Center Success alert</span></qui-alert>\n"
"        <qui-alert level=\"warning\" center><span>Center Warning alert</span></qui-alert>\n"
"        <qui-alert level=\"error\" center><span>Center Error alert</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon><span>Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon><span>Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon><span>Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon><span>Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert icon=\"font-awesome-brands:redhat\"><span>Info alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" icon=\"font-awesome-brands:redhat\"><span>Success alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" icon=\"font-awesome-brands:redhat\"><span>Warning alert with custom icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" icon=\"font-awesome-brands:redhat\"><span>Error alert with custom icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert size=\"small\" showIcon><span>Small Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" size=\"small\" showIcon><span>Small Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" size=\"small\" showIcon><span>Small Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" size=\"small\" showIcon><span>Small Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon><span>Info <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon><span>Success <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon><span>Warning <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon><span>Error <code>alert</code> with markup <br><a href=\"https://quarkus.io/\" target=\"_blank\">quarkus.io</a></span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert showIcon primary><span>Primary Info alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"success\" showIcon primary><span>Primary Success alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"warning\" showIcon primary><span>Primary Warning alert with icon</span></qui-alert>\n"
"        <qui-alert level=\"error\" showIcon primary><span>Primary Error alert with icon</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert title=\"Information\"><span>Info alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Well done\" level=\"success\"><span>Success alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Beware\" level=\"warning\"><span>Warning alert with title</span></qui-alert>\n"
"        <qui-alert title=\"Ka-boom\" level=\"error\"><span>Error alert with title</span></qui-alert>\n"
"        <hr class=\"line\">\n"
"        <qui-alert title=\"Information\" showIcon><span>Info alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Well done\" level=\"success\" showIcon><span>Success alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Beware\" level=\"warning\" showIcon><span>Warning alert with title and icon</span></qui-alert>\n"
"        <qui-alert title=\"Ka-boom\" level=\"error\" showIcon><span>Error alert with title and icon</span></qui-alert>\n"
"    </div>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:675
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L316[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L316[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:678
#, fuzzy
msgid "====== Code block"
msgstr "代码块"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:680
#, fuzzy
msgid "Display a code block. This component is aware of the theme and will use the correct codemirror theme to match the light/dark mode."
msgstr "显示一个代码块。这个组件知道主题，并将使用正确的codemirror主题来匹配明/暗模式。"

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:682
#, no-wrap
msgid "dev-ui-qui-code-block-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:687
#, no-wrap
msgid "import 'qui-code-block';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:697
#, no-wrap
msgid ""
"<div class=\"codeBlock\">\n"
"    <qui-code-block \n"
"        mode='yaml'\n"
"        content='${yaml}'>\n"
"    </qui-code-block>\n"
"</div>;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:700
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/e03a97845738436c69443a591ec4ce88ed04ac91/extensions/kubernetes/vanilla/deployment/src/main/resources/dev-ui/qwc-kubernetes-manifest.js#L99[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/e03a97845738436c69443a591ec4ce88ed04ac91/extensions/kubernetes/vanilla/deployment/src/main/resources/dev-ui/qwc-kubernetes-manifest.js#L99[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:702
#, fuzzy
msgid "or fetching the contents from a URL:"
msgstr "或从一个URL中获取内容："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:711
#, no-wrap
msgid ""
"<div class=\"codeBlock\">\n"
"    <qui-code-block \n"
"        mode='${this._mode}'\n"
"        src='${this._externalUrl}'>\n"
"    </qui-code-block>\n"
"</div>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:714
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/95c54fa46a6b6f31d69477234486d9359a2a3a4a/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-external-page.js#L116[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/95c54fa46a6b6f31d69477234486d9359a2a3a4a/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-external-page.js#L116[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:716
#, fuzzy
msgid "====== IDE link"
msgstr "IDE链接"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:718
#, fuzzy
msgid "Creates a link to a resource (like a Java source file) that can be opened in the user's IDE (if we could detect the IDE)."
msgstr "创建一个指向资源（如Java源文件）的链接，可以在用户的IDE中打开（如果我们能检测到IDE的话）。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:722
#, no-wrap
msgid "import 'qui-ide-link';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:730
#, no-wrap
msgid ""
"<qui-ide-link title='Source full class name' \n"
"                        class='text-source'\n"
"                        fileName='${sourceClassNameFull}'\n"
"                        lineNumber=${sourceLineNumber}>[${sourceClassNameFull}]</qui-ide-link>;\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:733
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/582f1f78806d2268885faea7aa8f5a4d2b3f5b98/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js#L315[示例代码]"

#. type: Title =====
#: upstream/_guides/dev-ui-v2.adoc:734
#, fuzzy, no-wrap
msgid "Using internal controllers"
msgstr "使用内部控制器"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:737
#, fuzzy
msgid "Some https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[internal controllers] are available to make certain things easier:"
msgstr "一些 link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller[内部控制器] 可使某些事情变得更容易："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:739
#, fuzzy
msgid "Notifier"
msgstr "通知者"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:740
#, fuzzy
msgid "Storage"
msgstr "储存"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:741
#, fuzzy
msgid "Log"
msgstr "纪录"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:742
#, fuzzy
msgid "Router"
msgstr "路由器"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:743
#, fuzzy
msgid "JsonRPC"
msgstr "淘宝网"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:745
#, fuzzy
msgid "====== Notifier"
msgstr "通知者"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:747
#, fuzzy
msgid "This is an easy way to show a toast message. The toast can be placed on the screen (default left bottom) and can have a level (Info, Success, Warning, Error). Any of the levels can also be primary, that will create a more prominent toast message."
msgstr "这是一个显示祝酒词的简单方法。祝酒词可以放在屏幕上（默认为左下方），可以有一个级别（信息、成功、警告、错误）。任何一个级别也可以是主要的，这将创建一个更突出的敬酒信息。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:749
#, fuzzy
msgid "See the source of this controller https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[here]."
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/notifier.js[在这里] 看到这个控制器的来源。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:751
#, fuzzy
msgid "Example usage:"
msgstr "使用实例："

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:752
#, no-wrap
msgid "dev-ui-controller-notifier.gif"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:757
#, no-wrap
msgid "import { notifier } from 'notifier';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:762
#, no-wrap
msgid "<a @click=${() => this._info()}>Info</a>;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:769
#, no-wrap
msgid ""
"_info(position = null){\n"
"    notifier.showInfoMessage(\"This is an information message\", position);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:772
#, fuzzy
msgid "You can find all the valid positions https://vaadin.com/docs/latest/components/notification/#position[here]."
msgstr "你可以 link:https://vaadin.com/docs/latest/components/notification/#position[在这里] 找到所有有效的职位。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:774
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/resources/dev-ui/qwc-jokes-vaadin.js#L374[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:776
#, fuzzy
msgid "====== Storage"
msgstr "储存"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:778
#, fuzzy
msgid "An easy way to access the local storage in a safe way. This will store values in the local storage, scoped to your extension. This way you do not have to worry that you might clash with another extension."
msgstr "以安全的方式访问本地存储的简单方法。这将在本地存储中存储值，范围是你的扩展。这样你就不必担心你会和其他扩展发生冲突。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:780
#, fuzzy
msgid "Local storage is useful to remember user preferences or state. For example, the footer remembers the state (open/close) and the size when open of the bottom drawer."
msgstr "本地存储对于记住用户的偏好或状态很有用。例如，页脚会记住底部抽屉的状态（打开/关闭）和打开时的尺寸。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:784
#, no-wrap
msgid "import { StorageController } from 'storage-controller';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:786 upstream/_guides/dev-ui-v2.adoc:790
#: upstream/_guides/dev-ui-v2.adoc:794 upstream/_guides/dev-ui-v2.adoc:813
#: upstream/_guides/dev-ui-v2.adoc:913 upstream/_guides/dev-ui-v2.adoc:917
#: upstream/_guides/dev-ui-v2.adoc:1007 upstream/_guides/dev-ui-v2.adoc:1034
#, no-wrap
msgid "// ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:788
#, no-wrap
msgid "storageControl = new StorageController(this); // Passing in this will scope the storage to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:792
#, no-wrap
msgid "const storedHeight = this.storageControl.get(\"height\"); // Get some value\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:796
#, no-wrap
msgid "this.storageControl.set('height', 123); // Set some val\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:799
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-footer.js[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:802
#, fuzzy
msgid "====== Log"
msgstr "纪录"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:805
#, fuzzy
msgid "The log controller is used to add control buttons to a (footer) log.  See <<Add a log file>>."
msgstr "日志控制器是用来给（页脚）日志添加控制按钮的。见 link:#Add a log file[[添加一个日志文件]] 。"

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:806
#, no-wrap
msgid "dev-ui-log-control-v2.png"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:811
#, no-wrap
msgid "import { LogController } from 'log-controller';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:815
#, no-wrap
msgid "logControl = new LogController(this); // Passing in this will scope the control to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:833
#, no-wrap
msgid ""
"// ...\n"
"this.logControl\n"
"                .addToggle(\"On/off switch\", true, (e) => {\n"
"                    this._toggleOnOffClicked(e);\n"
"                }).addItem(\"Log levels\", \"font-awesome-solid:layer-group\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._logLevels();\n"
"                }).addItem(\"Columns\", \"font-awesome-solid:table-columns\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._columns();\n"
"                }).addItem(\"Zoom out\", \"font-awesome-solid:magnifying-glass-minus\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._zoomOut();\n"
"                }).addItem(\"Zoom in\", \"font-awesome-solid:magnifying-glass-plus\", \"var(--lumo-tertiary-text-color)\", (e) => {\n"
"                    this._zoomIn();\n"
"                }).addItem(\"Clear\", \"font-awesome-solid:trash-can\", \"var(--lumo-error-color)\", (e) => {\n"
"                    this._clearLog();\n"
"                }).addFollow(\"Follow log\", true , (e) => {\n"
"                    this._toggleFollowLog(e);\n"
"                }).done();\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:836
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/qwc/qwc-server-log.js[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:838
#, fuzzy
msgid "====== Router"
msgstr "路由器"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:840
#, fuzzy
msgid "The router is mostly used internally. This uses https://github.com/vaadin/router[Vaadin Router] under the covers to route URLs to the correct page/section within the SPA. It will update the navigation and allow history (back button). This also creates the sub-menu available on extensions that have multiple pages."
msgstr "路由器主要在内部使用。它使用 link:https://github.com/vaadin/router[Vaadin Router] ，将尿液路由到SPA中的正确页面/部分。它将更新导航并允许历史记录（返回按钮）。这也会在有多个页面的扩展中创建可用的子菜单。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:842
#, fuzzy
msgid "See the https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[controller] for some methods that might be useful."
msgstr "请看 link:https://github.com/quarkusio/quarkus/blob/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/controller/router-controller.js[控制器] 中一些可能有用的方法。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:845
#, fuzzy
msgid "====== JsonRPC"
msgstr "淘宝网"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:847
#, fuzzy
msgid "This controller allows you to fetch or stream runtime data. (vs. <<Build time data>> discussed earlier). There are two parts to getting data during runtime. The Java side in the runtime module, and then the usage in the web component."
msgstr "这个控制器允许你获取或流传运行时数据。(与前面讨论的 link:#Build time data[[构建时间数据]] 相比）。在运行时获取数据有两个部分。在运行时模块中的Java方面，然后是在Web组件中的使用。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:849
#, fuzzy, no-wrap
msgid "*Java part*\n"
msgstr " *Java部分* "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:851
#, fuzzy
msgid "This code is responsible for making data available to display on the UI."
msgstr "这段代码负责使数据可在用户界面上显示。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:853
#, fuzzy
msgid "You need to register the JsonPRCService in your processor in the deployment module:"
msgstr "你需要在部署模块中的处理器中注册JsonPRCService："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:860
#, no-wrap
msgid ""
"@BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"JsonRPCProvidersBuildItem createJsonRPCServiceForCache() {// <2>\n"
"    return new JsonRPCProvidersBuildItem(CacheJsonRPCService.class);// <3>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:862
#, fuzzy
msgid "Always only do this in Dev Mode"
msgstr "始终只在开发模式下这样做"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:863
#, fuzzy
msgid "Produce / return a `JsonRPCProvidersBuildItem`"
msgstr "产生/返回一个 `JsonRPCProvidersBuildItem` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:864
#, fuzzy
msgid "Define the class in your runtime module that will contain methods that make data available in the UI"
msgstr "在你的运行时模块中定义一个类，该类将包含使数据在用户界面中可用的方法"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:866
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/java/io/quarkus/cache/deployment/devui/CacheDevUiProcessor.java[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:868
#, fuzzy
msgid "Now, in your Runtime module create the JsonRPC Service. This class will default to an application scoped bean, except if you explicitly scope the bean. All public methods that return something will be made available to call from the Web component Javascript."
msgstr "现在，在你的Runtime模块中创建JsonRPC服务。这个类将默认为一个应用范围的Bean，除非你明确规定Bean的范围。所有返回东西的公共方法都可以从Web组件Javascript中调用。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:870
#, fuzzy
msgid "The return object in these methods can be:"
msgstr "这些方法中的返回对象可以是："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:872
#, fuzzy
msgid "primitives or `String`,"
msgstr "基元或 `String` 、"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:873
msgid "`io.vertx.core.json.JsonArray`"
msgstr "`io.vertx.core.json.JsonArray`"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:874
msgid "`io.vertx.core.json.JsonObject`"
msgstr "`io.vertx.core.json.JsonObject`"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:875
#, fuzzy
msgid "any other POJO that can be serializable to Json"
msgstr "任何其他可被序列化为Json的POJO"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:877
#, fuzzy
msgid "All of the above can be blocking (POJO) or non-blocking (`@NonBlocking` or `Uni`). Or alternatively data can be streamed using `Multi`."
msgstr "以上所有的都可以是阻塞的（POJO）或非阻塞的（ `@NonBlocking` 或 `Uni` ）。或者也可以使用 `Multi` ，将数据流化。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:891
#, no-wrap
msgid ""
"@NonBlocking // <1>\n"
"public JsonArray getAll() { // <2>\n"
"    Collection<String> names = manager.getCacheNames();\n"
"    List<CaffeineCache> allCaches = new ArrayList<>(names.size());\n"
"    for (String name : names) {\n"
"        Optional<Cache> cache = manager.getCache(name);\n"
"        if (cache.isPresent() && cache.get() instanceof CaffeineCache) {\n"
"            allCaches.add((CaffeineCache) cache.get());\n"
"        }\n"
"    }\n"
"    allCaches.sort(Comparator.comparing(CaffeineCache::getName));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:898
#, no-wrap
msgid ""
"    var array = new JsonArray();\n"
"    for (CaffeineCache cc : allCaches) {\n"
"        array.add(getJsonRepresentationForCache(cc));\n"
"    }\n"
"    return array;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:900
#, fuzzy
msgid "This example runs non blocking. We could also return `Uni<JsonArray>`"
msgstr "这个例子非阻塞式运行。我们也可以返回 `Uni<JsonArray>` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:901
#, fuzzy
msgid "The method name `getAll` will be available in the Javascript"
msgstr "方法名称 `getAll` ，将在Javascript中提供。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:903
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/devconsole/CacheJsonRPCService.java[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:905
#, fuzzy, no-wrap
msgid "*Webcomponent (Javascript) part*\n"
msgstr " *网络组件（Javascript）部分* "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:907
#, fuzzy
msgid "Now you can use the JsonRPC controller to access the `getAll` method (and any other methods in you JsonRPC Service)"
msgstr "现在你可以使用JsonRPC控制器来访问 `getAll` 方法（以及JsonRPC服务中的任何其他方法）。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:911
#, no-wrap
msgid "import { JsonRpc } from 'jsonrpc';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:915
#, no-wrap
msgid "jsonRpc = new JsonRpc(this); // Passing in this will scope the rpc calls to your extension\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:930
#, no-wrap
msgid ""
"/**\n"
"  * Called when displayed\n"
"  */\n"
"connectedCallback() {\n"
"    super.connectedCallback();\n"
"    this.jsonRpc.getAll().then(jsonRpcResponse => { // <1>\n"
"        this._caches = new Map();\n"
"        jsonRpcResponse.result.forEach(c => { //<2>\n"
"            this._caches.set(c.name, c);\n"
"        });\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:933
#, fuzzy
msgid "Note the method `getAll` corresponds to the method in your Java Service. This method returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] with the JsonRPC result."
msgstr "注意方法 `getAll` 与你的Java服务中的方法相对应。该方法返回一个带有JsonRPC结果的 link:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise] 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:934
#, fuzzy
msgid "In this case the result is an array, so we can loop over it."
msgstr "在这种情况下，结果是一个数组，所以我们可以对它进行循环。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:936
#, fuzzy
msgid "JsonArray (or any Java collection) in either blocking or non-blocking will return an array, else a JsonObject will be returned."
msgstr "JsonArray（或任何Java集合）在阻塞或非阻塞时都会返回一个数组，否则会返回一个JsonObject。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:938
#, fuzzy
msgid "https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[Example code]"
msgstr "link:https://github.com/quarkusio/quarkus/blob/main/extensions/cache/deployment/src/main/resources/dev-ui/qwc-cache-caches.js[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:941
#, fuzzy
msgid "You can also pass in parameters in the method being called, for example: (In the Runtime Java code)"
msgstr "你也可以在被调用的方法中传递参数，例如：（在运行时的Java代码中）。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:952
#, no-wrap
msgid ""
"public Uni<JsonObject> clear(String name) { //<1>\n"
"    Optional<Cache> cache = manager.getCache(name);\n"
"    if (cache.isPresent()) {\n"
"        return cache.get().invalidateAll().map((t) -> getJsonRepresentationForCache(cache.get()));\n"
"    } else {\n"
"        return Uni.createFrom().item(new JsonObject().put(\"name\", name).put(\"size\", -1));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:954
#, fuzzy
msgid "the clear method takes one parameter called `name`"
msgstr "清除方法需要一个参数，称为 `name` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:956
#, fuzzy
msgid "In the Webcomponent (Javascript):"
msgstr "在Webcomponent（Javascript）中："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:964
#, no-wrap
msgid ""
"_clear(name) {\n"
"    this.jsonRpc.clear({name: name}).then(jsonRpcResponse => { //<1>\n"
"        this._updateCache(jsonRpcResponse.result)\n"
"    });\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:966
#, fuzzy
msgid "the `name` parameter is passed in."
msgstr " `name` 的参数传入。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:968
#, fuzzy
msgid "====== Streaming data"
msgstr "流媒体数据"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:970
#, fuzzy
msgid "You can keep a UI screen updated with the latest data by continuously streaming data to the screen. This can be done with `Multi` (Java side) and `Observer` (Javascript side)"
msgstr "你可以通过向屏幕持续传输数据来保持UI屏幕的最新数据更新。这可以通过 `Multi` （Java端）和 `Observer` （Javascript端）来实现。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:972
#, fuzzy
msgid "Java side of streaming data:"
msgstr "流媒体数据的Java端："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:976
#, no-wrap
msgid "public class JokesJsonRPCService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:978
#, no-wrap
msgid "    private final BroadcastProcessor<Joke> jokeStream = BroadcastProcessor.create();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:985
#, no-wrap
msgid ""
"    @PostConstruct\n"
"    void init() {\n"
"        Multi.createFrom().ticks().every(Duration.ofHours(4)).subscribe().with((item) -> {\n"
"            jokeStream.onNext(getJoke());\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:989
#, no-wrap
msgid ""
"    public Multi<Joke> streamJokes() { // <1>\n"
"        return jokeStream;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:992
#, no-wrap
msgid ""
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:994
#, fuzzy
msgid "Return the Multi that will stream jokes"
msgstr "返回将流传笑话的Multi"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:996
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/runtime/src/main/java/io/quarkus/jokes/runtime/JokesJsonRPCService.java#L37[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:998
#, fuzzy
msgid "Javascript side of streaming data:"
msgstr "流媒体数据的Javascript方面："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1005
#, no-wrap
msgid ""
"this._observer = this.jsonRpc.streamJokes().onNext(jsonRpcResponse => { //<1>\n"
"    this._addToJokes(jsonRpcResponse.result);\n"
"    this._numberOfJokes = this._numberOfJokes++;\n"
"});\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1009
#, no-wrap
msgid "this._observer.cancel(); //<2>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1011
#, fuzzy
msgid "You can call the method (optionally passing in parameters) and then provide the code that will be called on the next event."
msgstr "你可以调用该方法（可选择传入参数），然后提供将在下一个事件中调用的代码。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1012
#, fuzzy
msgid "Make sure to keep an instance of the observer to cancel later if needed."
msgstr "请确保保留一个观察者的实例，以便以后需要时取消。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1014
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-web-components.js[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1016
#, fuzzy
msgid "====== Dev UI Log"
msgstr "开发用户界面日志"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1018
#, fuzzy
msgid "When running a local application using the `999-SNAPSHOT` version, the Dev UI will show a `Dev UI` Log in the footer. This is useful to debug all JSON RPC messages flowing between the browser and the Quarkus app."
msgstr "当使用 `999-SNAPSHOT` 版本运行本地应用程序时，Dev UI将在页脚显示一个 `Dev UI` Log。这对于调试浏览器和Quarkus应用程序之间流动的所有JSON RPC消息很有用。"

#. type: Target for macro image
#: upstream/_guides/dev-ui-v2.adoc:1019
#, no-wrap
msgid "dev-ui-jsonrpc-log-v2.png"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:1021
#, fuzzy, no-wrap
msgid "Hot reload"
msgstr "热重装"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1024
#, fuzzy
msgid "You can update a screen automatically when a Hot reload has happened. To do this replace the `LitElement` that your Webcomponent extends with `QwcHotReloadElement`."
msgstr "你可以在热重载发生时自动更新屏幕。为了做到这一点，用 `QwcHotReloadElement` 替换你的Webcomponent扩展的 `LitElement` 。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1026
#, fuzzy
msgid "`QwcHotReloadElement` extends `LitElement` so your component is still a Lit Element."
msgstr " `QwcHotReloadElement` 扩展了 ，所以你的组件仍然是一个Lit Element。 `LitElement` "

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1028
#, fuzzy
msgid "When extending a `QwcHotReloadElement` you have to provide the `hotReload` method. (You also still need to provide the `render` method from Lit)"
msgstr "当扩展一个 `QwcHotReloadElement` ，你必须提供 `hotReload` 方法。(你仍然需要提供Lit的 `render` 方法)"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1032
#, no-wrap
msgid "import { QwcHotReloadElement, html, css} from 'qwc-hot-reload-element';\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1036
#, no-wrap
msgid "export class QwcMyExtensionPage extends QwcHotReloadElement {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1040
#, no-wrap
msgid ""
"    render(){\n"
"        // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1044
#, no-wrap
msgid ""
"    hotReload(){\n"
"        // ..\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1046 upstream/_guides/dev-ui-v2.adoc:1199
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:1048
#, fuzzy, no-wrap
msgid "Custom cards"
msgstr "定制卡片"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1051
#, fuzzy
msgid "You can customize the card that is being displayed on the extension page if you do not want to use the default built-in card."
msgstr "如果你不想使用默认的内置卡片，你可以定制在扩展页上显示的卡片。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1053
#, fuzzy
msgid "To do this, you need to provide a Webcomponent that will be loaded in the place of the provided card and register this in the Java Processor:"
msgstr "要做到这一点，你需要提供一个Webcomponent，它将被载入所提供的卡的位置，并在Java处理器中注册："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1057
#, no-wrap
msgid "cardPageBuildItem.setCustomCard(\"qwc-mycustom-card.js\");\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1060
#, fuzzy
msgid "On the Javascript side, you have access to all the pages (in case you want to create links)"
msgstr "在Javascript方面，你可以访问所有的页面（以备你想创建链接）。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1064
#, no-wrap
msgid "import { pages } from 'build-time-data';\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1067
#, fuzzy
msgid "And the following properties will be passed in:"
msgstr "并将以下属性传入："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1069
#, fuzzy
msgid "extensionName"
msgstr "扩展名"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1070
#, fuzzy
msgid "description"
msgstr "描述"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1071
#, fuzzy
msgid "guide"
msgstr "指南"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1072
#, fuzzy
msgid "namespace"
msgstr "名称空间"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1081
#, no-wrap
msgid ""
"static properties = {\n"
"    extensionName: {type: String},\n"
"    description: {type: String},\n"
"    guide: {type: String},\n"
"    namespace: {type: String}    \n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:1083
#, fuzzy, no-wrap
msgid "State (Advance)"
msgstr "国家(提前)"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1086
#, fuzzy
msgid "State allows properties to contain state and can be reused globally. An example of state properties are the theme, the connection state (if we are connected to the backend), etc."
msgstr "状态允许属性包含状态，并且可以在全球范围内重复使用。状态属性的一个例子是主题、连接状态（如果我们连接到后台），等等。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1088
#, fuzzy
msgid "See the https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[current built-in] state objects."
msgstr "查看 link:https://github.com/quarkusio/quarkus/tree/main/extensions/vertx-http/dev-ui-resources/src/main/resources/dev-ui/state[当前的内置] 状态对象。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1090
#, fuzzy
msgid "The state in Dev UI uses https://github.com/gitaarik/lit-state[LitState] and you can read more about it in their https://gitaarik.github.io/lit-state/build/[documentation]."
msgstr "Dev UI中的状态使用 link:https://github.com/gitaarik/lit-state[LitState] ，你可以在他们的 link:https://gitaarik.github.io/lit-state/build/[文档] 中看到更多关于它的信息。"

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:1092
#, fuzzy, no-wrap
msgid "Add a log file"
msgstr "添加一个日志文件"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1095
#, fuzzy
msgid "Apart from adding a card and a page, extensions can add a log to the footer. This is useful to log things happening continuously. A page will lose connection to the backend when navigating away from that page, a log in the footer is permanently connected."
msgstr "除了添加卡片和页面，扩展可以在页脚添加日志。这对记录持续发生的事情很有用。当导航离开一个页面时，该页面将失去与后台的连接，而页脚的日志是永久连接的。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1097
#, fuzzy
msgid "Adding something to the footer works exactly like adding a Card, except you use a `FooterPageBuildItem` rather than a `CardPageBuildItem`."
msgstr "在页脚添加东西的工作方式与添加卡片完全一样，只是你使用的是 `FooterPageBuildItem` ，而不是 `CardPageBuildItem` 。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1101
#, no-wrap
msgid "FooterPageBuildItem footerPageBuildItem = new FooterPageBuildItem();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1106
#, no-wrap
msgid ""
"footerPageBuildItem.addPage(Page.webComponentPageBuilder()\n"
"        .icon(\"font-awesome-regular:face-grin-tongue-wink\")\n"
"        .title(\"Joke Log\")\n"
"        .componentLink(\"qwc-jokes-log.js\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1108
#, no-wrap
msgid "footerProducer.produce(footerPageBuildItem);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1111
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#L87[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1113
#, fuzzy
msgid "In your Webcomponent you can then stream the log to the UI:"
msgstr "在你的Web组件中，你可以将日志流向用户界面："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1119
#, no-wrap
msgid ""
"export class QwcJokesLog extends LitElement {\n"
"    jsonRpc = new JsonRpc(this);\n"
"    logControl = new LogController(this);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1122
#, no-wrap
msgid ""
"    // ....\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1125
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/main/deployment/src/main/resources/dev-ui/qwc-jokes-log.js[示例代码]"

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:1126
#, fuzzy, no-wrap
msgid "Add a section menu"
msgstr "添加一个章节菜单"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1129
#, fuzzy
msgid "This allows an extension to link a page directly in the section Menu."
msgstr "这允许一个扩展程序直接在菜单部分链接一个页面。"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1131
#, fuzzy
msgid "Adding something to the section menu works exactly like adding a Card, except you use a `MenuPageBuildItem` rather than a `CardPageBuildItem`."
msgstr "在栏目菜单中添加东西的工作方式与添加卡片完全一样，只是你使用的是 `MenuPageBuildItem` ，而不是 `CardPageBuildItem` 。"

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1135
#, no-wrap
msgid "MenuPageBuildItem menuPageBuildItem = new MenuPageBuildItem();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1140
#, no-wrap
msgid ""
"menuPageBuildItem.addPage(Page.webComponentPageBuilder()\n"
"        .icon(\"font-awesome-regular:face-grin-tongue-wink\")\n"
"        .title(\"One Joke\")\n"
"        .componentLink(\"qwc-jokes-menu.js\"));\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1142
#, no-wrap
msgid "menuProducer.produce(menuPageBuildItem);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1145
#, fuzzy
msgid "https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[Example code]"
msgstr "link:https://github.com/phillip-kruger/quarkus-jokes/blob/f572ed6f949de0c0b8cbfa99d7389ab5168fea65/deployment/src/main/java/io/quarkus/jokes/deployment/devui/JokesDevUIProcessor.java#LL71C16-L71C16[示例代码]"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1147
#, fuzzy
msgid "Your page can be any Page similar to Cards."
msgstr "你的页面可以是任何类似于卡片的页面。"

#. type: Title ==
#: upstream/_guides/dev-ui-v2.adoc:1148
#, no-wrap
msgid "Testing"
msgstr "测试"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1151
#, fuzzy
msgid "You can add tests to your extension that test:"
msgstr "你可以向你的扩展添加测试，测试："

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1154
#, fuzzy
msgid "Runtime data via JsonRPC"
msgstr "通过JsonRPC的运行时数据"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1156
#, fuzzy
msgid "You need to add this to your pom:"
msgstr "你需要把这个添加到你的Pom中："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1164
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vertx-http-dev-ui-tests</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1167
#, fuzzy
msgid "This will give you access to two base classes for creating these tests."
msgstr "这将使你能够访问两个基类来创建这些测试。"

#. type: Title ===
#: upstream/_guides/dev-ui-v2.adoc:1168
#, fuzzy, no-wrap
msgid "Testing Build time data"
msgstr "测试建立时间数据"

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1171
#, fuzzy
msgid "If you added Build time data, for example:"
msgstr "例如，如果你添加了Build时间数据，那么："

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1175
#, no-wrap
msgid "cardPageBuildItem.addBuildTimeData(\"somekey\", somevalue);\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1178
msgid "To test that your build time data is generated correctly you can add a test that extends `DevUIBuildTimeDataTest`."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1182
#, no-wrap
msgid "public class SomeTest extends DevUIBuildTimeDataTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1185 upstream/_guides/dev-ui-v2.adoc:1220
#, no-wrap
msgid ""
"    @RegisterExtension\n"
"    static final QuarkusDevModeTest config = new QuarkusDevModeTest().withEmptyApplication();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1189 upstream/_guides/dev-ui-v2.adoc:1224
#, no-wrap
msgid ""
"    public SomeTest() {\n"
"        super(\"io.quarkus.my-extension\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1194
#, no-wrap
msgid ""
"    @Test\n"
"    public void testSomekey() throws Exception {\n"
"        JsonNode somekeyResponse = super.getBuildTimeData(\"somekey\");\n"
"        Assertions.assertNotNull(somekeyResponse);\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1197
#, no-wrap
msgid ""
"        // Check more values on somekeyResponse\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/dev-ui-v2.adoc:1201
#, no-wrap
msgid "Testing Runtime data"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1204
msgid "If you added a JsonRPC Service with runtime data responses, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1210
#, no-wrap
msgid ""
"public boolean updateProperties(String content, String type) {\n"
"    // ...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/dev-ui-v2.adoc:1213
msgid "To test that `updateProperties` execute correctly via JsonRPC you can add a test that extends `DevUIJsonRPCTest`."
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1217
#, no-wrap
msgid "public class SomeTest extends DevUIJsonRPCTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1227
#, no-wrap
msgid ""
"    @Test\n"
"    public void testUpdateProperties() throws Exception {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1233
#, no-wrap
msgid ""
"        JsonNode updatePropertyResponse = super.executeJsonRPCMethod(\"updateProperty\",\n"
"                Map.of(\n"
"                        \"name\", \"quarkus.application.name\",\n"
"                        \"value\", \"changedByTest\"));\n"
"        Assertions.assertTrue(updatePropertyResponse.asBoolean());\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/dev-ui-v2.adoc:1240
#, no-wrap
msgid ""
"        // Get the properties to make sure it is changed\n"
"        JsonNode allPropertiesResponse = super.executeJsonRPCMethod(\"getAllValues\");\n"
"        String applicationName = allPropertiesResponse.get(\"quarkus.application.name\").asText();\n"
"        Assertions.assertEquals(\"changedByTest\", applicationName);\n"
"    }\n"
"}\n"
msgstr ""
