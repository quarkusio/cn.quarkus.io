# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-17 15:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/flyway.adoc:6
#, fuzzy, no-wrap
msgid "Using Flyway"
msgstr "使用Flyway"

#. type: Plain text
#: upstream/_guides/flyway.adoc:13
#, fuzzy
msgid "https://flywaydb.org/[Flyway] is a popular database migration tool that is commonly used in JVM environments."
msgstr "link:https://flywaydb.org/[Flyway] 是一个流行的数据库迁移工具，通常用于JVM环境。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:15
#, fuzzy
msgid "Quarkus provides first class support for using Flyway as will be explained in this guide."
msgstr "Quarkus为使用Flyway提供了一流的支持，这将在本指南中解释。"

#. type: Title ==
#: upstream/_guides/flyway.adoc:16
#, fuzzy, no-wrap
msgid "Setting up support for Flyway"
msgstr "建立对Flyway的支持"

#. type: Plain text
#: upstream/_guides/flyway.adoc:19
#, fuzzy
msgid "As shown in the <<developing-with-flyway>> section, to start using Flyway with your project, you just need to:"
msgstr "要开始在你的项目中使用Flyway，你只需要。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:21
#, fuzzy
msgid "add your migrations to the `{migrations-path}` folder as you usually do with Flyway"
msgstr "像通常使用Flyway那样，将你的迁移文件添加到 `{migrations-path}` 文件夹中。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:23
#, fuzzy
msgid "activate the `migrate-at-start` option to migrate the schema automatically or inject the `Flyway` object and run your migration as you normally do"
msgstr "激活 `migrate-at-start` 选项来自动迁移模式，或者注入 `Flyway` 对象，然后像通常那样运行迁移。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:25
#, fuzzy
msgid "In your build file, add the following dependencies:"
msgstr "在你的构建文件中，添加以下依赖项。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:27
#, fuzzy
msgid "the Flyway extension"
msgstr "Flyway延长线"

#. type: Plain text
#: upstream/_guides/flyway.adoc:28
#, fuzzy
msgid "your JDBC driver extension (`quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, `quarkus-jdbc-mariadb`, ...)"
msgstr "你的JDBC驱动扩展 ( `quarkus-jdbc-postgresql` , `quarkus-jdbc-h2` , `quarkus-jdbc-mariadb` , ...)"

#. type: Plain text
#: upstream/_guides/flyway.adoc:29
#, fuzzy
msgid "the MariaDB/MySQL support is now in a separate dependency, MariaDB/MySQL users need to add the `flyway-mysql` dependency from now on."
msgstr "对MariaDB/MySQL的支持现在在一个单独的依赖中，MariaDB/MySQL的用户从现在开始需要添加 `flyway-mysql` 的依赖。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:30
#, fuzzy
msgid "the Microsoft SQL Server support is now in a separate dependency, Microsoft SQL Server users need to add the `flyway-sqlserver` dependency from now on."
msgstr "Microsoft SQL Server的支持现在在一个单独的依赖中，Microsoft SQL Server的用户从现在开始需要添加 `flyway-sqlserver` 的依赖。"

#. type: Block title
#: upstream/_guides/flyway.adoc:32
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/flyway.adoc:39
#, no-wrap
msgid ""
"<!-- Flyway specific dependencies -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-flyway</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:45
#, no-wrap
msgid ""
"<!-- Flyway SQL Server specific dependencies -->\n"
"<dependency>\n"
"    <groupId>org.flywaydb</groupId>\n"
"    <artifactId>flyway-sqlserver</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:51
#, no-wrap
msgid ""
"<!-- Flyway MariaDB/MySQL specific dependencies -->\n"
"<dependency>\n"
"    <groupId>org.flywaydb</groupId>\n"
"    <artifactId>flyway-mysql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:57
#, no-wrap
msgid ""
"<!-- JDBC driver dependencies -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-jdbc-postgresql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/flyway.adoc:60
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/flyway.adoc:70
#, no-wrap
msgid ""
"// Flyway specific dependencies\n"
"implementation(\"io.quarkus:quarkus-flyway\")\n"
"// Flyway SQL Server specific dependencies\n"
"implementation(\"org.flywaydb:flyway-sqlserver\")\n"
"// Flyway MariaDB/MySQL specific dependencies\n"
"implementation(\"org.flywaydb:flyway-mysql\")\n"
"// JDBC driver dependencies\n"
"implementation(\"io.quarkus:quarkus-jdbc-postgresql\")\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/flyway.adoc:77
#, fuzzy
msgid "Flyway support relies on the Quarkus datasource config.  It can be customized for the default datasource as well as for every <<multiple-datasources,named datasource>>.  First, you need to add the datasource config to the `{config-file}` file in order to allow Flyway to manage the schema.  Also, you can customize the Flyway behaviour by using the following properties:"
msgstr "Flyway支持依赖于Quarkus的数据源配置。它可以为默认的数据源以及每个 link:#multiple-datasources[命名的数据源] 进行定制。首先，你需要将数据源配置添加到 `{config-file}` 文件中，以便让Flyway管理模式。另外，你可以通过使用以下属性来定制Flyway的行为。"

#. type: Title ==
#: upstream/_guides/flyway.adoc:80
#, no-wrap
msgid "Developing with Flyway"
msgstr ""

#. type: Plain text
#: upstream/_guides/flyway.adoc:83
#, fuzzy
msgid "The following is an example for the `{config-file}` file:"
msgstr "下面是 `{config-file}` 文件的一个例子。"

#. type: delimited block -
#: upstream/_guides/flyway.adoc:91
#, no-wrap
msgid ""
"# configure your datasource\n"
"quarkus.datasource.db-kind=postgresql\n"
"quarkus.datasource.username=sarah\n"
"quarkus.datasource.password=connor\n"
"quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/mydatabase\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:94
#, no-wrap
msgid ""
"# Run Flyway migrations automatically\n"
"quarkus.flyway.migrate-at-start=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:105
#, no-wrap
msgid ""
"# More Flyway configuration options\n"
"# quarkus.flyway.baseline-on-migrate=true\n"
"# quarkus.flyway.baseline-version=1.0.0\n"
"# quarkus.flyway.baseline-description=Initial version\n"
"# quarkus.flyway.connect-retries=10\n"
"# quarkus.flyway.schemas=TEST_SCHEMA\n"
"# quarkus.flyway.table=flyway_quarkus_history\n"
"# quarkus.flyway.locations=db/location1,db/location2\n"
"# quarkus.flyway.sql-migration-prefix=X\n"
"# quarkus.flyway.repeatable-sql-migration-prefix=K\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/flyway.adoc:108
#, fuzzy
msgid "Add a SQL migration to the default folder following the Flyway naming conventions: `{migrations-path}/V1.0.0__Quarkus.sql`"
msgstr "按照Flyway的命名惯例，在默认文件夹中添加SQL迁移。 `{migrations-path}/V1.0.0__Quarkus.sql` "

#. type: delimited block -
#: upstream/_guides/flyway.adoc:118
#, no-wrap
msgid ""
"CREATE TABLE quarkus\n"
"(\n"
"  id   INT,\n"
"  name VARCHAR(20)\n"
");\n"
"INSERT INTO quarkus(id, name)\n"
"VALUES (1, 'QUARKED');\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/flyway.adoc:122
#, fuzzy
msgid "Now you can start your application and Quarkus will run the Flyway's migrate method according to your config."
msgstr "现在你可以启动你的应用程序，Quarkus会根据你的配置来运行Flyway的迁移方法。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:126
msgid "With `quarkus.flyway.migrate-at-start=true`, as in the example above, Quarkus will execute the Flyway migration as part of the xref:lifecycle.adoc[application startup]."
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:134 upstream/_guides/flyway.adoc:203
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MigrationService {\n"
"    // You can Inject the object if you want to use it manually\n"
"    @Inject\n"
"    Flyway flyway; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:140
#, no-wrap
msgid ""
"    public void checkMigration() {\n"
"        // This will print 1.0.0\n"
"        System.out.println(flyway.info().current().getVersion().toString());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/flyway.adoc:142 upstream/_guides/flyway.adoc:223
#, fuzzy
msgid "Inject the Flyway object if you want to use it directly"
msgstr "如果你想直接使用Flyway对象，请注入该对象"

#. type: Plain text
#: upstream/_guides/flyway.adoc:148
msgid "In dev-mode Quarkus will automatically restart the application if any of the existing migration scripts get modified. If you want to take advantage of this while developing and testing new migration scripts, you will want to set `%dev.quarkus.flyway.clean-at-start=true`, so that Flyway actually runs the modified migration."
msgstr ""

#. type: Title ==
#: upstream/_guides/flyway.adoc:149
#, fuzzy, no-wrap
msgid "Multiple datasources"
msgstr "多个数据源"

#. type: Plain text
#: upstream/_guides/flyway.adoc:153
#, fuzzy
msgid "Flyway can be configured for multiple datasources.  The Flyway properties are prefixed exactly the same way as the named datasources, for example:"
msgstr "Flyway可以为多个数据源进行配置。Flyway属性的前缀与命名数据源的方式完全相同，例如：。"

#. type: delimited block -
#: upstream/_guides/flyway.adoc:160
#, no-wrap
msgid ""
"quarkus.datasource.db-kind=h2\n"
"quarkus.datasource.username=username-default\n"
"quarkus.datasource.jdbc.url=jdbc:h2:tcp://localhost/mem:default\n"
"quarkus.datasource.jdbc.max-size=13\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:165
#, no-wrap
msgid ""
"quarkus.datasource.users.db-kind=h2\n"
"quarkus.datasource.users.username=username1\n"
"quarkus.datasource.users.jdbc.url=jdbc:h2:tcp://localhost/mem:users\n"
"quarkus.datasource.users.jdbc.max-size=11\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:170
#, no-wrap
msgid ""
"quarkus.datasource.inventory.db-kind=h2\n"
"quarkus.datasource.inventory.username=username2\n"
"quarkus.datasource.inventory.jdbc.url=jdbc:h2:tcp://localhost/mem:inventory\n"
"quarkus.datasource.inventory.jdbc.max-size=12\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:175
#, no-wrap
msgid ""
"# Flyway configuration for the default datasource\n"
"quarkus.flyway.schemas=DEFAULT_TEST_SCHEMA\n"
"quarkus.flyway.locations=db/default/location1,db/default/location2\n"
"quarkus.flyway.migrate-at-start=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:180
#, no-wrap
msgid ""
"# Flyway configuration for the \"users\" datasource\n"
"quarkus.flyway.users.schemas=USERS_TEST_SCHEMA\n"
"quarkus.flyway.users.locations=db/users/location1,db/users/location2\n"
"quarkus.flyway.users.migrate-at-start=true\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:185
#, no-wrap
msgid ""
"# Flyway configuration for the \"inventory\" datasource\n"
"quarkus.flyway.inventory.schemas=INVENTORY_TEST_SCHEMA\n"
"quarkus.flyway.inventory.locations=db/inventory/location1,db/inventory/location2\n"
"quarkus.flyway.inventory.migrate-at-start=true\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/flyway.adoc:189
#, fuzzy
msgid "Notice there's an extra bit in the key.  The syntax is as follows: `quarkus.flyway.[optional name.][datasource property]`."
msgstr "请注意，键中有一个额外的位。语法如下。 `quarkus.flyway.[optional name.][datasource property]` ."

#. type: Plain text
#: upstream/_guides/flyway.adoc:191
#, fuzzy
msgid "Without configuration, Flyway is set up for every datasource using the default settings."
msgstr "在没有配置的情况下，Flyway对每个数据源的设置都是使用默认设置。"

#. type: Title ==
#: upstream/_guides/flyway.adoc:192
#, fuzzy, no-wrap
msgid "Using the Flyway object"
msgstr "使用Flyway对象"

#. type: Plain text
#: upstream/_guides/flyway.adoc:195
#, fuzzy
msgid "In case you are interested in using the `Flyway` object directly, you can inject it as follows:"
msgstr "如果你对直接使用 `Flyway` 对象感兴趣，你可以按以下方式注入。"

#. type: delimited block -
#: upstream/_guides/flyway.adoc:207
#, no-wrap
msgid ""
"    @Inject\n"
"    @FlywayDataSource(\"inventory\") <2>\n"
"    Flyway flywayForInventory;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:211
#, no-wrap
msgid ""
"    @Inject\n"
"    @Named(\"flyway_users\") <3>\n"
"    Flyway flywayForUsers;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/flyway.adoc:220
#, no-wrap
msgid ""
"    public void checkMigration() {\n"
"        // Use the flyway instance manually\n"
"        flyway.clean(); <4>\n"
"        flyway.migrate();\n"
"        // This will print 1.0.0\n"
"        System.out.println(flyway.info().current().getVersion().toString());\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/flyway.adoc:224
#, fuzzy
msgid "Inject Flyway for named datasources using the Quarkus `FlywayDataSource` qualifier"
msgstr "使用Quarkus `FlywayDataSource` 限定符为命名的数据源注入Flyway。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:225
#, fuzzy
msgid "Inject Flyway for named datasources"
msgstr "为命名的数据源注入Flyway"

#. type: Plain text
#: upstream/_guides/flyway.adoc:226
#, fuzzy
msgid "Use the Flyway instance directly"
msgstr "直接使用Flyway实例"

#. type: Title ==
#: upstream/_guides/flyway.adoc:227
#, fuzzy, no-wrap
msgid "Flyway and Hibernate ORM"
msgstr "Flyway和Hibernate ORM"

#. type: Plain text
#: upstream/_guides/flyway.adoc:230
#, fuzzy
msgid "When using Flyway together with Hibernate ORM, you can use the Dev UI to generate the initial schema creation script."
msgstr "当Flyway与Hibernate ORM一起使用时，你可以使用Dev UI来生成初始模式创建脚本。"

#. type: Plain text
#: upstream/_guides/flyway.adoc:231
msgid "You can find more information about this feature in the xref:hibernate-orm.adoc#flyway[Hibernate ORM guide]."
msgstr ""

#, fuzzy
#~ msgid "If you enabled the `quarkus.flyway.migrate-at-start` property, by the time you use the Flyway instance, Quarkus will already have run the migrate operation"
#~ msgstr "如果你启用了 `quarkus.flyway.migrate-at-start` ，当你使用Flyway实例时，Quarkus已经运行了迁移操作。"
