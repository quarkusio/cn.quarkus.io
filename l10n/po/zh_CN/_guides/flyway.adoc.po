# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-25 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _guides/flyway.adoc
#, no-wrap
msgid "Using Flyway"
msgstr "使用Flyway"

#. type: Plain text
#: _guides/flyway.adoc
msgid "https://flywaydb.org/[Flyway] is a popular database migration tool that is commonly used in JVM environments."
msgstr "link:https://flywaydb.org/[Flyway] 是一个流行的数据库迁移工具，通常用于JVM环境。"

#. type: Plain text
#: _guides/flyway.adoc
msgid "Quarkus provides first class support for using Flyway as will be explained in this guide."
msgstr "本指南将会介绍Quarkus为使用Flyway提供了哪些一流的支持。"

#. type: Title ==
#: _guides/flyway.adoc
#, no-wrap
msgid "Setting up support for Flyway"
msgstr "建立对Flyway的支持"

#. type: Plain text
#: _guides/flyway.adoc
#, fuzzy
msgid "As shown in the xref:developing-with-flyway[Developing with Flyway] section, to start using Flyway with your project, you just need to:"
msgstr "参照 <<用flyway开发>> ，要开始在项目中使用Flyway，只需要："

#. type: Plain text
#: _guides/flyway.adoc
msgid "add your migrations to the `{migrations-path}` folder as you usually do with Flyway"
msgstr "像通常使用Flyway那样，将你的迁移文件添加到 `{migrations-path}` 文件夹中。"

#: _guides/flyway.adoc
msgid ""
"activate the `migrate-at-start` option to migrate the schema automatically or inject the `Flyway` object and run\n"
"your migration as you normally do"
msgstr ""

#. type: Plain text
#: _guides/flyway.adoc
msgid "In your build file, add the following dependencies:"
msgstr "在build文件中添加以下依赖项。"

#. type: Plain text
#: _guides/flyway.adoc
msgid "the Flyway extension"
msgstr "Flyway扩展"

#. type: Plain text
#: _guides/flyway.adoc
msgid "your JDBC driver extension (`quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, `quarkus-jdbc-mariadb`, ...)"
msgstr "JDBC驱动扩展 ( `quarkus-jdbc-postgresql` , `quarkus-jdbc-h2` , `quarkus-jdbc-mariadb` , ...)"

#. type: Plain text
#: _guides/flyway.adoc
msgid "the MariaDB/MySQL support is now in a separate dependency, MariaDB/MySQL users need to add the `flyway-mysql` dependency from now on."
msgstr "MariaDB/MySQL的支持现在在一个单独的依赖中，MariaDB/MySQL的用户从现在开始需要添加 `flyway-mysql` 的依赖。"

#. type: Plain text
#: _guides/flyway.adoc
msgid "the Microsoft SQL Server support is now in a separate dependency, Microsoft SQL Server users need to add the `flyway-sqlserver` dependency from now on."
msgstr "Microsoft SQL Server的支持现在在一个单独的依赖中，Microsoft SQL Server的用户从现在开始需要添加 `flyway-sqlserver` 的依赖。"

#. type: Plain text
#: _guides/flyway.adoc
#, fuzzy
msgid "the Oracle support is now in a separate dependency, Oracle users need to add the `flyway-database-oracle` dependency from now on."
msgstr "MariaDB/MySQL的支持现在在一个单独的依赖中，MariaDB/MySQL的用户从现在开始需要添加 `flyway-mysql` 的依赖。"

#. type: Block title
#: _guides/flyway.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _guides/flyway.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _guides/flyway.adoc
msgid ""
"Flyway support relies on the Quarkus datasource config.\n"
"It can be customized for the default datasource as well as for every xref:multiple-datasources[named datasource].\n"
"First, you need to add the datasource config to the `{config-file}` file\n"
"in order to allow Flyway to manage the schema.\n"
"Also, you can customize the Flyway behaviour by using the following properties:"
msgstr ""

#: _guides/flyway.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#. type: Title ==
#: _guides/flyway.adoc
#, no-wrap
msgid "Developing with Flyway"
msgstr "用Flyway开发"

#. type: Plain text
#: _guides/flyway.adoc
#, fuzzy
msgid "The following is an example for the `{config-file}` file:"
msgstr "下面是 `{config-file}` 文件的一个例子。"

#. type: Plain text
#: _guides/flyway.adoc
msgid "Add a SQL migration to the default folder following the Flyway naming conventions: `{migrations-path}/V1.0.0__Quarkus.sql`"
msgstr "按照Flyway的命名惯例，在默认文件夹中添加SQL迁移： `{migrations-path}/V1.0.0__Quarkus.sql` "

#: _guides/flyway.adoc
msgid ""
"Now you can start your application and Quarkus will run the Flyway's\n"
"migrate method according to your config."
msgstr ""

#: _guides/flyway.adoc
msgid ""
"With `quarkus.flyway.migrate-at-start=true`, as in the example\n"
"above, Quarkus will execute the Flyway migration as part of the\n"
"xref:lifecycle.adoc[application startup]."
msgstr ""

#. type: Plain text
#: _guides/flyway.adoc
msgid "Inject the Flyway object if you want to use it directly"
msgstr "如果你想直接使用Flyway对象，请注入该对象"

#: _guides/flyway.adoc
msgid ""
"In dev mode Quarkus will automatically restart the application if\n"
"any of the existing migration scripts get modified. If you want to take\n"
"advantage of this while developing and testing new migration scripts,\n"
"you will want to set `%dev.quarkus.flyway.clean-at-start=true`, so that\n"
"Flyway actually runs the modified migration."
msgstr ""

#. type: Title ===
#: _guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Repairing the Flyway schema history table"
msgstr "修复Flyway模式历史表"

#: _guides/flyway.adoc
msgid ""
"There are different scenarios which may require _repairing_ the Flyway schema history table.\n"
"One such scenario is when a migration fails in a database which doesn't support transactional DDL\n"
"statements."
msgstr ""

#. type: Plain text
#: _guides/flyway.adoc
#, fuzzy
msgid "In such situations the link:https://flywaydb.org/documentation/command/repair[Flyway repair command] comes in handy. In Quarkus this can either be executed automatically before the migration by setting `quarkus.flyway.repair-at-start=true` or manually by injecting the `Flyway` object and calling `Flyway#repair()`."
msgstr "在这种情况下， link:https://flywaydb.org/documentation/command/repair[Flyway修复命令] 就派上用场了。在Quarkus中，这可以通过设置 `quarkus.flyway.repair-at-start=true` ，在迁移前自动执行，也可以通过注入 `Flyway` 对象和调用 `Flyway#repair()` ，手动执行。"

#. type: Title ==
#: _guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Multiple datasources"
msgstr "多个数据源"

#: _guides/flyway.adoc
msgid ""
"Flyway can be configured for multiple datasources.\n"
"The Flyway properties are prefixed exactly the same way as the named datasources, for example:"
msgstr ""

#: _guides/flyway.adoc
msgid ""
"Notice there's an extra bit in the key.\n"
"The syntax is as follows: `quarkus.flyway.[optional name.][datasource property]`."
msgstr ""

#. type: Plain text
#: _guides/flyway.adoc
msgid "Without configuration, Flyway is set up for every datasource using the default settings."
msgstr "在没有配置的情况下，Flyway对每个数据源都是使用默认设置。"

#. type: Title ==
#: _guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Customizing Flyway"
msgstr "使用Flyway"

#. type: Plain text
#: _guides/flyway.adoc
#, fuzzy
msgid "In cases where Flyway needs to be configured in addition to the configuration options that Quarkus provides, the `io.quarkus.flyway.FlywayConfigurationCustomizer` class comes in handy."
msgstr "在Flyway需要在Quarkus提供的配置选项之外进行配置的情况下， `io.quarkus.flyway.FlywayConfigurationCustomizer` 类就会派上用场。"

#. type: Plain text
#: _guides/flyway.adoc
#, fuzzy
msgid "To customize Flyway for the default datasource, simply add a bean like so:"
msgstr "要为默认数据源定制Flyway，只需像这样添加一个bean："

#: _guides/flyway.adoc
msgid ""
"When named datasources are used, the `@FlywayDataSource` annotation can be used to specify the datasource to which the customizer applies.\n"
"For example, if there are multiple datasources one of which is called `users` and customization of Flyway is needed for only that datasource,\n"
"then the following code can be used:"
msgstr ""

#. type: Title ==
#: _guides/flyway.adoc
#, no-wrap
msgid "Using the Flyway object"
msgstr "使用Flyway对象"

#. type: Plain text
#: _guides/flyway.adoc
msgid "In case you are interested in using the `Flyway` object directly, you can inject it as follows:"
msgstr "如果你有兴趣直接使用 `Flyway` 对象，可以按以下方式注入。"

#. type: Plain text
#: _guides/flyway.adoc
msgid "Inject Flyway for named datasources using the Quarkus `FlywayDataSource` qualifier"
msgstr "使用Quarkus `FlywayDataSource` 限定符为指定的数据源注入Flyway。"

#. type: Plain text
#: _guides/flyway.adoc
msgid "Inject Flyway for named datasources"
msgstr "为命名的数据源注入Flyway"

#. type: Plain text
#: _guides/flyway.adoc
msgid "Use the Flyway instance directly"
msgstr "直接使用Flyway实例"

#. type: Title ==
#: _guides/flyway.adoc
#, no-wrap
msgid "Flyway and Hibernate ORM"
msgstr "Flyway和Hibernate ORM"

#. type: Plain text
#: _guides/flyway.adoc
msgid "When using Flyway together with Hibernate ORM, you can use the Dev UI to generate the initial schema creation script."
msgstr "当Flyway与Hibernate ORM一起使用时，你可以使用Dev UI来生成初始表创建脚本。"

#. type: Plain text
#: _guides/flyway.adoc
msgid "You can find more information about this feature in the xref:hibernate-orm.adoc#flyway[Hibernate ORM guide]."
msgstr "你可以在xref:hibernate-orm.adoc#flyway[Hibernate ORM guide]找到更多相关信息。"

#. type: Title ==
#: _guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Flyway on Kubernetes"
msgstr "Flyway和Hibernate ORM"

#. type: Plain text
#: _guides/flyway.adoc
msgid "Sometimes, it's helpful not to execute Flyway initialization on each application startup. One such example is when deploying"
msgstr ""

#: _guides/flyway.adoc
msgid ""
"on Kubernetes, where it doesn't make sense to execute Flyway on every single replica. Instead it's desirable to execute it\n"
"once and then start the actual application without Flyway. To support this use case, when generating manifests for Kubernetes\n"
"the generated manifests contain a Kubernetes initialization `Job` for Flyway.\n"
"The `Job` performs initialization and the actual `Pod`, will starts once the `Job` is successfully completed."
msgstr ""

#. type: Title ===
#: _guides/flyway.adoc
#, no-wrap
msgid "Disabling"
msgstr ""

#. type: Plain text
#: _guides/flyway.adoc
msgid "The feature is enabled by default and can be globally disabled, using:"
msgstr ""

#. type: Plain text
#: _guides/flyway.adoc
msgid "or on OpenShift:"
msgstr ""

#. type: Title ===
#: _guides/flyway.adoc
#, no-wrap
msgid "Using a custom image that controls waiting for the Job"
msgstr ""

#. type: Plain text
#: _guides/flyway.adoc
msgid "To change the `wait-for` image which by default is `groundnuty/k8s-wait-for:no-root-v1.7` you can use:"
msgstr ""

#. type: Plain text
#: _guides/flyway.adoc
msgid "or on Openshift:"
msgstr ""

#: _guides/flyway.adoc
msgid "**Note**: In this context globally means `for all extensions that support init task externalization`."
msgstr ""
