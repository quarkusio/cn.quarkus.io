# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/config-extending-support.adoc:6
#, fuzzy, no-wrap
msgid "Extending Configuration Support"
msgstr "扩展配置支持"

#. type: Title ==
#: upstream/_guides/config-extending-support.adoc:16
#, fuzzy, no-wrap
msgid "Custom `ConfigSource`"
msgstr "定制 `ConfigSource` "

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:20
#, fuzzy
msgid "It's possible to create a custom `ConfigSource` as specified in link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config]."
msgstr "可以按照 link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile配置] 中的规定创建一个自定义的 `ConfigSource` 。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:23
#, fuzzy
msgid "With a Custom `ConfigSource` it is possible to read additional configuration values and add them to the `Config` instance in a defined ordinal. This allows overriding values from other sources or falling back to other values."
msgstr "通过自定义 `ConfigSource` ，可以读取额外的配置值，并以定义的顺序将它们添加到 `Config` 实例中。这允许覆盖来自其他来源的值或回落到其他值。"

#. type: Target for macro image
#: upstream/_guides/config-extending-support.adoc:24
#, no-wrap
msgid "config-sources.png"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:31
#, fuzzy
msgid "A custom `ConfigSource` requires an implementation of `org.eclipse.microprofile.config.spi.ConfigSource` or `org.eclipse.microprofile.config.spi.ConfigSourceProvider`. Each implementation requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism, either in `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource` or `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSourceProvider` files."
msgstr "一个自定义的 `ConfigSource` ，需要实现 `org.eclipse.microprofile.config.spi.ConfigSource` 或 `org.eclipse.microprofile.config.spi.ConfigSourceProvider` 。每个实现都需要通过 link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] 机制注册，可以在 `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource` 或 `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSourceProvider` 文件中。"

#. type: Title ===
#: upstream/_guides/config-extending-support.adoc:32
#: upstream/_guides/config-extending-support.adoc:131
#: upstream/_guides/config-extending-support.adoc:181
#: upstream/_guides/config-extending-support.adoc:365
#, fuzzy, no-wrap
msgid "Example"
msgstr "例子"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:35
#, fuzzy
msgid "Consider a simple in-memory `ConfigSource`:"
msgstr "考虑一个简单的内存中 `ConfigSource` 。"

#. type: Block title
#: upstream/_guides/config-extending-support.adoc:36
#: upstream/_guides/config-extending-support.adoc:135
#, fuzzy, no-wrap
msgid "org.acme.config.InMemoryConfigSource"
msgstr "org.acme.config.InMemoryConfigSource"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:40
#: upstream/_guides/config-extending-support.adoc:139
#: upstream/_guides/config-extending-support.adoc:189
#: upstream/_guides/config-extending-support.adoc:257
#: upstream/_guides/config-extending-support.adoc:277
#: upstream/_guides/config-extending-support.adoc:309
#: upstream/_guides/config-extending-support.adoc:371
#, no-wrap
msgid "package org.acme.config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:42
#: upstream/_guides/config-extending-support.adoc:194
#, no-wrap
msgid "import org.eclipse.microprofile.config.spi.ConfigSource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:46
#, no-wrap
msgid ""
"import java.util.HashMap;\n"
"import java.util.Map;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:49
#, no-wrap
msgid ""
"public class InMemoryConfigSource implements ConfigSource {\n"
"    private static final Map<String, String> configuration = new HashMap<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:53
#, no-wrap
msgid ""
"    static {\n"
"        configuration.put(\"my.prop\", \"1234\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:58
#, no-wrap
msgid ""
"    @Override\n"
"    public int getOrdinal() {\n"
"        return 275;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:63
#, no-wrap
msgid ""
"    @Override\n"
"    public Set<String> getPropertyNames() {\n"
"        return configuration.keySet();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:68
#, no-wrap
msgid ""
"    @Override\n"
"    public String getValue(final String propertyName) {\n"
"        return configuration.get(propertyName);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:74
#, no-wrap
msgid ""
"    @Override\n"
"    public String getName() {\n"
"        return InMemoryConfigSource.class.getSimpleName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:77
#: upstream/_guides/config-extending-support.adoc:150
#: upstream/_guides/config-extending-support.adoc:223
#: upstream/_guides/config-extending-support.adoc:395
#, fuzzy
msgid "And registration in:"
msgstr "并登记在册。"

#. type: Block title
#: upstream/_guides/config-extending-support.adoc:78
#: upstream/_guides/config-extending-support.adoc:151
#, fuzzy, no-wrap
msgid "META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource"
msgstr "META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:82
#: upstream/_guides/config-extending-support.adoc:155
#, no-wrap
msgid "org.acme.config.InMemoryConfigSource\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:86
#, fuzzy
msgid "The `InMemoryConfigSource` will be ordered between the `.env` source, and the `application.properties` source due to the `275` ordinal:"
msgstr " `InMemoryConfigSource` 将在 `.env` 源之间排序，而 `application.properties` 源则由于 `275` 的序数。"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:89
#, fuzzy, no-wrap
msgid "ConfigSource"
msgstr "配置源"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:91
#, fuzzy, no-wrap
msgid "Ordinal"
msgstr "顺序"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:92
#, fuzzy, no-wrap
msgid "System Properties"
msgstr "系统属性"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:94
#, fuzzy, no-wrap
msgid "400"
msgstr "400"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:95
#, fuzzy, no-wrap
msgid "Environment Variables from System"
msgstr "来自系统的环境变量"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:97
#, fuzzy, no-wrap
msgid "300"
msgstr "300"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:98
#, fuzzy, no-wrap
msgid "Environment Variables from `.env` file"
msgstr "来自 `.env` 文件的环境变量"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:100
#, fuzzy, no-wrap
msgid "295"
msgstr "295"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:101
#, fuzzy, no-wrap
msgid "InMemoryConfigSource"
msgstr "记忆中的配置源(InMemoryConfigSource)"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:103
#, fuzzy, no-wrap
msgid "275"
msgstr "275"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:104
#, fuzzy, no-wrap
msgid "`application.properties` from `/config`"
msgstr " `application.properties` 从 `/config` "

#. type: Table
#: upstream/_guides/config-extending-support.adoc:106
#, fuzzy, no-wrap
msgid "260"
msgstr "260"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:107
#, fuzzy, no-wrap
msgid "`application.properties` from application"
msgstr " `application.properties` 来自应用的"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:109
#, fuzzy, no-wrap
msgid "250"
msgstr "250"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:110
#, fuzzy, no-wrap
msgid "`microprofile-config.properties` from application"
msgstr " `microprofile-config.properties` 来自应用的"

#. type: Table
#: upstream/_guides/config-extending-support.adoc:111
#, fuzzy, no-wrap
msgid "100"
msgstr "100"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:117
#, fuzzy
msgid "In this case, `my.prop` from `InMemoryConfigSource` will only be used if the config engine is unable to find a value in xref:config-reference.adoc#system-properties[System Properties], xref:config-reference.adoc#environment-variables[Environment Variables from System] or xref:config-reference.adoc#env-file[Environment Variables from .env file] in this order."
msgstr " `InMemoryConfigSource` 在这种情况下，只有当配置引擎无法在 link:config-reference.html#system-properties[系统属性] 、 link:config-reference.html#environment-variables[来自系统的环境变量] 或 link:config-reference.html#env-file[来自.env文件的环境变量中] 找到一个值时，才会使用来自 `my.prop` ，并按此顺序排列。"

#. type: Title ===
#: upstream/_guides/config-extending-support.adoc:118
#, fuzzy, no-wrap
msgid "ConfigSource Init"
msgstr "配置源启动"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:122
#, fuzzy
msgid "When a Quarkus application starts, a `ConfigSource` can be initialized twice. One time for _STATIC INIT_ and a second time for _RUNTIME INIT_:"
msgstr "当Quarkus应用程序启动时，一个 `ConfigSource` 可以被初始化两次。一次是 _STATIC INIT_ ，第二次是 _RUNTIME INIT_ 。"

#. type: Title ====
#: upstream/_guides/config-extending-support.adoc:123
#, fuzzy, no-wrap
msgid "STATIC INIT"
msgstr "静态 INIT"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:130
#, fuzzy
msgid "Quarkus starts some of its services during static initialization, and `Config` is usually one of the first things that is created. In certain situations it may not be possible to add a custom `ConfigSource`. For instance, if the `ConfigSource` requires other services, like a database access, it will not be available at this stage, and cause a chicken-egg problem. For this reason, any custom `ConfigSource` requires the annotation `@io.quarkus.runtime.configuration.StaticInitSafe` to mark the source as safe to be used at this stage."
msgstr "Quarkus在静态初始化过程中启动一些服务， `Config` ，通常是最先创建的东西之一。在某些情况下，可能无法添加一个自定义的 `ConfigSource` 。例如，如果 `ConfigSource` 需要其他的服务，如数据库访问，它在这个阶段将无法使用，并导致一个鸡肋问题。出于这个原因，任何自定义 `ConfigSource` ，都需要注释 `@io.quarkus.runtime.configuration.StaticInitSafe` ，以标记源在这个阶段可以安全使用。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:134
#: upstream/_guides/config-extending-support.adoc:184
#, fuzzy
msgid "Consider:"
msgstr "考虑一下。"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:142
#, no-wrap
msgid ""
"import org.eclipse.microprofile.config.spi.ConfigSource;\n"
"import io.quarkus.runtime.annotations.StaticInitSafe;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:145
#, no-wrap
msgid ""
"@StaticInitSafe\n"
"public class InMemoryConfigSource implements ConfigSource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:147
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:158
#, fuzzy
msgid "The `InMemoryConfigSource` will be available during _STATIC INIT_."
msgstr " `InMemoryConfigSource` ，在 _STATIC INIT_ 期间就可以使用。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:161
#, fuzzy
msgid "A custom `ConfigSource` is not automatically added during Quarkus _STATIC INIT_. It requires to be marked with the `@io.quarkus.runtime.configuration.StaticInitSafe` annotation."
msgstr "在Quarkus _STATIC INIT_ 期间，一个自定义的 `ConfigSource` 不会被自动添加。它需要用 `@io.quarkus.runtime.configuration.StaticInitSafe` 注释来标记。"

#. type: Title ====
#: upstream/_guides/config-extending-support.adoc:162
#, fuzzy, no-wrap
msgid "RUNTIME INIT"
msgstr "运行时间INIT"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:166
#, fuzzy
msgid "The _RUNTIME INIT_ stage happens after _STATIC INIT_. In this stage a `ConfigSource` can be initialized again. There are no restrictions at this stage, and a custom source is added to the `Config` instance as expected."
msgstr " _RUNTIME INIT_ 阶段发生在 _STATIC INIT_ 之后。在这个阶段，一个 `ConfigSource` 可以再次被初始化。在这个阶段没有任何限制，一个自定义的源被添加到 `Config` 实例中，正如预期的那样。"

#. type: Title ==
#: upstream/_guides/config-extending-support.adoc:168
#, fuzzy, no-wrap
msgid "`ConfigSourceFactory`"
msgstr " `ConfigSourceFactory` "

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:176
#, fuzzy
msgid "Another way to create a `ConfigSource` is via the https://github.com/smallrye/smallrye-config[SmallRye Config] `io.smallrye.config.ConfigSourceFactory` API. The difference between the https://github.com/smallrye/smallrye-config[SmallRye Config] factory and the standard way to create a `ConfigSource` as specified in link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config], is the factory ability to provide a context with access to the available configuration."
msgstr "创建 `ConfigSource` 的另一种方式是通过 link:https://github.com/smallrye/smallrye-config[SmallRye Config] `io.smallrye.config.ConfigSourceFactory` API。 link:https://github.com/smallrye/smallrye-config[SmallRye配置] 工厂与 link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile配置] 中规定的创建 `ConfigSource` 的标准方式的区别在于，工厂能够提供一个访问可用配置的上下文。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:180
#, fuzzy
msgid "Each implementation of `io.smallrye.config.ConfigSourceFactory` requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceFactory` file."
msgstr " `io.smallrye.config.ConfigSourceFactory` 的每个实现都需要通过 `META-INF/services/io.smallrye.config.ConfigSourceFactory` 文件中的 link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] 机制进行注册。"

#. type: Block title
#: upstream/_guides/config-extending-support.adoc:185
#, fuzzy, no-wrap
msgid "org.acme.config.URLConfigSourceFactory"
msgstr "org.acme.config.URLConfigSourceFactory"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:192
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.OptionalInt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:199
#, no-wrap
msgid ""
"import io.smallrye.config.ConfigSourceContext;\n"
"import io.smallrye.config.ConfigSourceFactory;\n"
"import io.smallrye.config.ConfigValue;\n"
"import io.smallrye.config.PropertiesConfigSource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:207
#, no-wrap
msgid ""
"public class URLConfigSourceFactory implements ConfigSourceFactory {\n"
"    @Override\n"
"    public Iterable<ConfigSource> getConfigSources(final ConfigSourceContext context) {\n"
"        final ConfigValue value = context.getValue(\"config.url\");\n"
"        if (value == null || value.getValue() == null) {\n"
"            return Collections.emptyList();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:214
#, no-wrap
msgid ""
"        try {\n"
"            return Collections.singletonList(new PropertiesConfigSource(new URL(value.getValue())));\n"
"        } catch (IOException e) {\n"
"            throw new RuntimeException(e);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:220
#, no-wrap
msgid ""
"    @Override\n"
"    public OptionalInt getPriority() {\n"
"        return OptionalInt.of(290);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/config-extending-support.adoc:224
#, fuzzy, no-wrap
msgid "META-INF/services/io.smallrye.config.ConfigSourceFactory"
msgstr "META-INF/services/io.smallrye.config.ConfigSourceFactory"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:228
#, no-wrap
msgid "org.acme.config.URLConfigSourceFactory\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:234
#, fuzzy
msgid "By implementing `io.smallrye.config.ConfigSourceFactory`, a list of `ConfigSource` may be provided via the `Iterable<ConfigSource> getConfigSources(ConfigSourceContext context)` method. The `ConfigSourceFactory` may also assign a priority by overriding the method `OptionalInt getPriority()`. The priority values is used to sort multiple `io.smallrye.config.ConfigSourceFactory` (if found)."
msgstr "通过实现 `io.smallrye.config.ConfigSourceFactory` ，可以通过 `Iterable<ConfigSource> getConfigSources(ConfigSourceContext context)` 方法提供一个 `ConfigSource` 的列表。 `ConfigSourceFactory` 也可以通过覆盖方法 `OptionalInt getPriority()` 来指定一个优先级。优先级值被用来对多个 `io.smallrye.config.ConfigSourceFactory` （如果发现的话）进行排序。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:237
#, fuzzy
msgid "`io.smallrye.config.ConfigSourceFactory` priority does not affect the `ConfigSource` ordinal. These are sorted independently."
msgstr " `io.smallrye.config.ConfigSourceFactory` 优先级不影响 顺序。这些都是独立排序的。 `ConfigSource` "

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:243
#, fuzzy
msgid "When the Factory is initializing, the provided `ConfigSourceContext` may call the method `ConfigValue getValue(String name)`. This method looks up configuration names in all ``ConfigSource``s that were already initialized by the `Config` instance, including sources with lower ordinals than the ones defined in the `ConfigSourceFactory`. The `ConfigSource` list provided by a `ConfigSourceFactory` is not taken into consideration to configure other sources produced by a lower priority `ConfigSourceFactory`."
msgstr "当工厂在初始化时，所提供的 `ConfigSourceContext` 可能会调用方法 `ConfigValue getValue(String name)` 。这个方法在所有已经被 `Config` 实例初始化的 `ConfigSource` s中查找配置名称，包括比 `ConfigSourceFactory` 中定义的序号更低的源。由 `ConfigSourceFactory` 提供的 `ConfigSource` 列表不会被考虑用来配置由低优先级 `ConfigSourceFactory` 产生的其他源。"

#. type: Title ==
#: upstream/_guides/config-extending-support.adoc:245
#, fuzzy, no-wrap
msgid "Custom `Converter`"
msgstr "定制 `Converter` "

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:249
#, fuzzy
msgid "It is possible to create a custom `Converter` type as specified by link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/converters.asciidoc#adding-custom-converters[MicroProfile Config]."
msgstr "可以按照 link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/converters.asciidoc#adding-custom-converters[MicroProfile配置] 的规定，创建一个自定义的 `Converter` 类型。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:253
#, fuzzy
msgid "A custom `Converter` requires an implementation of `org.eclipse.microprofile.config.spi.Converter<T>`. Each implementation requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism in the `META-INF/services/org.eclipse.microprofile.config.spi.Converter` file. Consider:"
msgstr "一个自定义的 `Converter` ，需要一个 `org.eclipse.microprofile.config.spi.Converter<T>` 的实现。每个实现都需要通过 `META-INF/services/org.eclipse.microprofile.config.spi.Converter` 文件中的 link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] 机制注册。考虑一下。"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:259
#, no-wrap
msgid "public class MicroProfileCustomValue {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:261
#, no-wrap
msgid "    private final int number;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:265
#, no-wrap
msgid ""
"    public MicroProfileCustomValue(int number) {\n"
"        this.number = number;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:270
#, no-wrap
msgid ""
"    public int getNumber() {\n"
"        return number;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:273
#, fuzzy
msgid "The corresponding converter will look similar to the one below."
msgstr "相应的转换器将看起来与下面类似。"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:279
#, no-wrap
msgid "import org.eclipse.microprofile.config.spi.Converter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:281
#, no-wrap
msgid "public class MicroProfileCustomValueConverter implements Converter<MicroProfileCustomValue> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:287
#, no-wrap
msgid ""
"    @Override\n"
"    public MicroProfileCustomValue convert(String value) {\n"
"        return new MicroProfileCustomValue(Integer.parseInt(value));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:291
#, fuzzy
msgid "The custom converter class must be `public`, must have a `public` constructor with no arguments, and must not be `abstract`."
msgstr "自定义转换器类必须是 `public` ，必须有一个没有参数的 `public` 构造函数，并且不能是 `abstract` 。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:293
#, fuzzy
msgid "The custom configuration type converts the configuration value automatically:"
msgstr "自定义配置类型会自动转换配置值。"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:298
#, no-wrap
msgid ""
"@ConfigProperty(name = \"configuration.value.name\")\n"
"MicroProfileCustomValue value;\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/config-extending-support.adoc:300
#, fuzzy, no-wrap
msgid "Converter priority"
msgstr "转换器优先"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:305
#, fuzzy
msgid "The `javax.annotation.Priority` annotation overrides the `Converter` priority and change converters precedence to fine tune the execution order. By default, if no `@Priority` is specified by the `Converter`, the converter is registered with a priority of `100`. Consider:"
msgstr " `javax.annotation.Priority` 注释覆盖了 `Converter` 的优先级，并改变转换器的优先级来微调执行顺序。默认情况下，如果没有指定 `@Priority` ， `Converter` ，转换器就会被注册，其优先级为 `100` 。考虑一下。"

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:312
#, no-wrap
msgid ""
"import javax.annotation.Priority;\n"
"import org.eclipse.microprofile.config.spi.Converter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:315
#, no-wrap
msgid ""
"@Priority(150)\n"
"public class MyCustomConverter implements Converter<MicroProfileCustomValue> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:318
#, no-wrap
msgid ""
"    @Override\n"
"    public MicroProfileCustomValue convert(String value) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:325
#, no-wrap
msgid ""
"        final int secretNumber;\n"
"        if (value.startsFrom(\"OBF:\")) {\n"
"            secretNumber = Integer.parseInt(SecretDecoder.decode(value));\n"
"        } else {\n"
"            secretNumber = Integer.parseInt(value);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:329
#, no-wrap
msgid ""
"        return new MicroProfileCustomValue(secretNumber);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:333
#, fuzzy
msgid "Since it converts the same value type (`MicroProfileCustomValue`) and has a priority of `150`, it will be used instead of a `MicroProfileCustomValueConverter` which has a default priority of `100`."
msgstr "由于它转换了相同的值类型( `MicroProfileCustomValue` )，而且优先级为 `150` ，所以它将被用来代替默认优先级为 `100` 的 `MicroProfileCustomValueConverter` 。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:336
#, fuzzy
msgid "All Quarkus core converters use the priority value of `200`. To override any Quarkus specific converter, the priority value should be higher than `200`."
msgstr "所有Quarkus核心转换器使用的优先级值为 `200` 。要覆盖任何Quarkus特定的转换器，优先级值应高于 `200` 。"

#. type: Title ==
#: upstream/_guides/config-extending-support.adoc:338
#, fuzzy, no-wrap
msgid "Config Interceptors"
msgstr "配置拦截器"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:345
#, fuzzy
msgid "https://github.com/smallrye/smallrye-config[SmallRye Config] provides an interceptor chain that hooks into the configuration values resolution. This is useful to implement features like xref:config-reference.adoc#profiles[Profiles], xref:config-reference.adoc#property-expressions[Property Expressions], or just logging to find out where the config value was loaded from."
msgstr "link:https://github.com/smallrye/smallrye-config[SmallRye Config] 提供了一个拦截器链，可以钩住配置值解析。这对于实现 link:config-reference.html#profiles[Profiles] 、 link:config-reference.html#property-expressions[Property Expressions] 等功能非常有用，或者只是通过记录来了解配置值从哪里加载。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:349
#, fuzzy
msgid "An interceptor requires an implementation of `io.smallrye.config.ConfigSourceInterceptor`. Each implementation requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceInterceptor` file."
msgstr "一个拦截器需要一个 `io.smallrye.config.ConfigSourceInterceptor` 的实现。每个实现都需要通过 `META-INF/services/io.smallrye.config.ConfigSourceInterceptor` 文件中的 link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] 机制进行注册。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:355
#, fuzzy
msgid "The `io.smallrye.config.ConfigSourceInterceptor` is able to intercept the resolution of a configuration name with the method `ConfigValue getValue(ConfigSourceInterceptorContext context, String name)`. The `ConfigSourceInterceptorContext` is used to proceed with the interceptor chain. The chain can be short-circuited by returning an instance of `io.smallrye.config.ConfigValue`. The `ConfigValue` objects hold information about the key name, value, config source origin and ordinal."
msgstr " `io.smallrye.config.ConfigSourceInterceptor` ，能够通过方法 `ConfigValue getValue(ConfigSourceInterceptorContext context, String name)` ，拦截配置名称的解析。 `ConfigSourceInterceptorContext` 被用来进行拦截器链。该链可以通过返回一个 `io.smallrye.config.ConfigValue` 的实例而被短路。 `ConfigValue` 对象持有关于键名、值、配置源起源和序数的信息。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:357
#, fuzzy
msgid "The interceptor chain is applied before any conversion is performed on the configuration value."
msgstr "在对配置值进行任何转换之前，拦截器链被应用。"

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:361
msgid "Interceptors may also be created with an implementation of `io.smallrye.config.ConfigSourceInterceptorFactory`. Each implementation requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceInterceptorFactory` file."
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:364
msgid "The `ConfigSourceInterceptorFactory` may initialize an interceptor with access to the current chain (so it can be used to configure the interceptor and retrieve configuration values) and set the priority."
msgstr ""

#. type: Block title
#: upstream/_guides/config-extending-support.adoc:367
#, no-wrap
msgid "org.acme.config.LoggingConfigSourceInterceptor"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:373
#, no-wrap
msgid "import javax.annotation.Priority;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:376
#, no-wrap
msgid ""
"import io.smallrye.config.ConfigSourceInterceptor;\n"
"import io.smallrye.config.ConfigLogging;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:380
#, no-wrap
msgid ""
"@Priority(Priorities.LIBRARY + 200)\n"
"public class LoggingConfigSourceInterceptor implements ConfigSourceInterceptor {\n"
"    private static final long serialVersionUID = 367246512037404779L;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:392
#, no-wrap
msgid ""
"    @Override\n"
"    public ConfigValue getValue(final ConfigSourceInterceptorContext context, final String name) {\n"
"        ConfigValue configValue = doLocked(() -> context.proceed(name));\n"
"        if (configValue != null) {\n"
"            ConfigLogging.log.lookup(configValue.getName(), configValue.getLocation(), configValue.getValue());\n"
"        } else {\n"
"            ConfigLogging.log.notFound(name);\n"
"        }\n"
"        return configValue;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_guides/config-extending-support.adoc:396
#, no-wrap
msgid "META-INF/services/io.smallrye.config.ConfigSourceInterceptor"
msgstr ""

#. type: delimited block -
#: upstream/_guides/config-extending-support.adoc:400
#, no-wrap
msgid "org.acme.config.LoggingConfigSourceInterceptor\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/config-extending-support.adoc:403
msgid "The `LoggingConfigSourceInterceptor` logs looks up configuration names in the provided logging platform. The log information includes config name and value, the config source origin and location if exists."
msgstr ""
