# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/security-properties.adoc:6
#, fuzzy, no-wrap
msgid "Using Security with .properties File"
msgstr "使用.properties文件的安全性"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:13
#, fuzzy
msgid "Quarkus provides support for properties file based authentication that is intended for development and testing purposes. It is not recommended that this be used in production as at present only plaintext and MD5 hashed passwords are used, and properties files are generally too limited to use in production."
msgstr "Quarkus提供了对基于属性文件的认证的支持，旨在用于开发和测试目的。不建议在生产中使用，因为目前只使用明文和MD5哈希密码，而且属性文件通常太有限，无法在生产中使用。"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:15
#, fuzzy
msgid "Add the following to your build file:"
msgstr "在你的构建文件中添加以下内容。"

#. type: Block title
#: upstream/_guides/security-properties.adoc:17
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/security-properties.adoc:23
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-properties-file</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/security-properties.adoc:26
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/security-properties.adoc:29
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-elytron-security-properties-file\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-properties.adoc:31
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "配置"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:36
#, fuzzy
msgid "The elytron-security-properties-file extension currently supports two different realms for the storage of authentication and authorization information. Both support storage of this information in properties files. The following sections detail the specific configuration properties."
msgstr "目前，elytron-security-properties-file扩展支持两种不同的认证和授权信息的存储领域。两者都支持在属性文件中存储这些信息。下面的章节详细介绍了具体的配置属性。"

#. type: Title ===
#: upstream/_guides/security-properties.adoc:39
#, fuzzy, no-wrap
msgid "Properties Files Realm Configuration"
msgstr "属性文件 境界配置"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:42
#, fuzzy
msgid "The properties files realm supports mapping of users to password and users to roles with a combination of properties files. They are configured with properties starting with `quarkus.security.users.file`."
msgstr "属性文件领域支持用属性文件的组合将用户映射到密码和用户映射到角色。它们被配置为以 `quarkus.security.users.file` 开始的属性。"

#. type: Block title
#: upstream/_guides/security-properties.adoc:43
#, fuzzy, no-wrap
msgid "example application.properties file section for property files realm"
msgstr "例子application.properties文件部分的属性文件境界"

#. type: delimited block -
#: upstream/_guides/security-properties.adoc:51
#, no-wrap
msgid ""
"quarkus.security.users.file.enabled=true\n"
"quarkus.security.users.file.users=test-users.properties\n"
"quarkus.security.users.file.roles=test-roles.properties\n"
"quarkus.security.users.file.realm-name=MyRealm\n"
"quarkus.security.users.file.plain-text=true\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-properties.adoc:53
#, fuzzy, no-wrap
msgid "Users.properties"
msgstr "用户.属性"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:56
#, fuzzy
msgid "The `quarkus.security.users.file.users` configuration property specifies a classpath resource which is a properties file with a user to password mapping, one per line. The following <<test-users-example>> illustrates the format:"
msgstr " `quarkus.security.users.file.users` 配置属性指定了一个classpath资源，它是一个带有用户到密码映射的属性文件，每行一个。下面的 link:#test-users-example[[test-users-example]] 说明了这个格式。"

#. type: Block title
#: upstream/_guides/security-properties.adoc:58
#, fuzzy, no-wrap
msgid "example test-users.properties file"
msgstr "例如test-users.properties文件"

#. type: delimited block -
#: upstream/_guides/security-properties.adoc:65
#, no-wrap
msgid ""
"scott=jb0ss <1>\n"
"jdoe=p4ssw0rd <2>\n"
"stuart=test\n"
"noadmin=n0Adm1n\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-properties.adoc:67
#, fuzzy
msgid "User `scott` has password defined as `jb0ss`"
msgstr "用户 `scott` ，其密码定义为 `jb0ss` "

#. type: Plain text
#: upstream/_guides/security-properties.adoc:68
#, fuzzy
msgid "User `jdoe` has password defined as `p4ssw0rd`"
msgstr "用户 `jdoe` ，其密码定义为 `p4ssw0rd` "

#. type: Plain text
#: upstream/_guides/security-properties.adoc:72
#, fuzzy
msgid "This file has the usernames and passwords stored in plain text, which is not recommended. If plain-text is set to false (or omitted) in the config then passwords must be stored in the form `MD5 ( username : realm : password )`. This can be generated for the first example above by running the command `echo -n scott:MyRealm:jb0ss | md5` from the command line."
msgstr "这个文件中的用户名和密码是以纯文本形式存储的，不推荐这样做。如果在配置中把纯文本设置为false（或省略），那么密码必须以 `MD5 ( username : realm : password )` 的形式存储。这可以通过在命令行中运行命令 `echo -n scott:MyRealm:jb0ss | md5` ，为上面的第一个例子生成。"

#. type: Title ====
#: upstream/_guides/security-properties.adoc:73
#, fuzzy, no-wrap
msgid "Roles.properties"
msgstr "Roles.properties"

#. type: Block title
#: upstream/_guides/security-properties.adoc:75
#, fuzzy, no-wrap
msgid "example test-roles.properties file"
msgstr "例子 test-roles.properties 文件"

#. type: delimited block -
#: upstream/_guides/security-properties.adoc:82
#, no-wrap
msgid ""
"scott=Admin,admin,Tester,user <1>\n"
"jdoe=NoRolesUser <2>\n"
"stuart=admin,user <3>\n"
"noadmin=user\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-properties.adoc:84
#, fuzzy
msgid "User `scott` has been assigned the roles `Admin`, `admin`, `Tester` and `user`"
msgstr "用户 `scott` 已经被分配了角色 `Admin` , `admin` , `Tester` 和 `user` "

#. type: Plain text
#: upstream/_guides/security-properties.adoc:85
#, fuzzy
msgid "User `jdoe` has been assigned the role `NoRolesUser`"
msgstr "用户 `jdoe` 已经被分配了角色 `NoRolesUser` "

#. type: Plain text
#: upstream/_guides/security-properties.adoc:86
#, fuzzy
msgid "User `stuart` has been assigned the roles `admin` and `user`."
msgstr "用户 `stuart` 已经被分配了角色 `admin` 和 `user` 。"

#. type: Title ===
#: upstream/_guides/security-properties.adoc:87
#, fuzzy, no-wrap
msgid "Embedded Realm Configuration"
msgstr "嵌入式境界配置"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:90
#, fuzzy
msgid "The embedded realm also supports mapping of users to password and users to roles. It uses the main `application.properties` Quarkus configuration file to embed this information. They are configured with properties starting with `quarkus.security.users.embedded`."
msgstr "嵌入的境界也支持用户到密码和用户到角色的映射。它使用主 `application.properties` Quarkus 配置文件来嵌入这些信息。它们被配置为以 `quarkus.security.users.embedded` 开始的属性。"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:92
#, fuzzy
msgid "The following is an example application.properties file section illustrating the embedded realm configuration:"
msgstr "下面是一个说明嵌入式境界配置的application.properties文件部分的例子。"

#. type: Block title
#: upstream/_guides/security-properties.adoc:93
#, fuzzy, no-wrap
msgid "example application.properties file section for embedded realm"
msgstr "嵌入境界的application.properties文件示例部分"

#. type: delimited block -
#: upstream/_guides/security-properties.adoc:106
#, no-wrap
msgid ""
"quarkus.security.users.embedded.enabled=true\n"
"quarkus.security.users.embedded.plain-text=true\n"
"quarkus.security.users.embedded.users.scott=jb0ss\n"
"quarkus.security.users.embedded.users.stuart=test\n"
"quarkus.security.users.embedded.users.jdoe=p4ssw0rd\n"
"quarkus.security.users.embedded.users.noadmin=n0Adm1n\n"
"quarkus.security.users.embedded.roles.scott=Admin,admin,Tester,user\n"
"quarkus.security.users.embedded.roles.stuart=admin,user\n"
"quarkus.security.users.embedded.roles.jdoe=NoRolesUser\n"
"quarkus.security.users.embedded.roles.noadmin=user\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-properties.adoc:111
#, fuzzy
msgid "As with the first example this file has the usernames and passwords stored in plain text, which is not recommended. If plain-text is set to false (or omitted) in the config then passwords must be stored in the form `MD5 ( username : realm : password )`. This can be generated for the first example above by running the command `echo -n scott:MyRealm:jb0ss | md5` from the command line."
msgstr "和第一个例子一样，这个文件中的用户名和密码是以纯文本形式存储的，这并不推荐。如果在配置中把纯文本设置为false（或省略），那么密码必须以 `MD5 ( username : realm : password )` 的形式存储。这可以通过在命令行中运行 `echo -n scott:MyRealm:jb0ss | md5` ，为上面的第一个例子生成。"

#. type: Title ====
#: upstream/_guides/security-properties.adoc:113
#, fuzzy, no-wrap
msgid "Embedded Users"
msgstr "嵌入式用户"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:116
#, fuzzy
msgid "The user to password mappings are specified in the `application.properties` file by properties keys of the form `quarkus.security.users.embedded.users.<user>=<password>`. The following <<password-example>> illustrates the syntax with 4 user to password mappings:"
msgstr "用户到密码的映射在 `application.properties` 文件中由形式为 `quarkus.security.users.embedded.users.<user>=<password>` 的属性键指定。下面的 link:#password-example[[password-example]] 说明了有4个用户到密码映射的语法。"

#. type: Block title
#: upstream/_guides/security-properties.adoc:118
#, fuzzy, no-wrap
msgid "Example Passwords"
msgstr "密码示例"

#. type: delimited block -
#: upstream/_guides/security-properties.adoc:125
#, no-wrap
msgid ""
"quarkus.security.users.embedded.users.scott=jb0ss # <1>\n"
"quarkus.security.users.embedded.users.stuart=test # <2>\n"
"quarkus.security.users.embedded.users.jdoe=p4ssw0rd\n"
"quarkus.security.users.embedded.users.noadmin=n0Adm1n\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-properties.adoc:127
#, fuzzy
msgid "User `scott` has password `jb0ss`"
msgstr "用户 `scott` 有密码 `jb0ss` "

#. type: Plain text
#: upstream/_guides/security-properties.adoc:128
#, fuzzy
msgid "User `stuart` has password `test`"
msgstr "用户 `stuart` 有密码 `test` "

#. type: Title ====
#: upstream/_guides/security-properties.adoc:129
#, fuzzy, no-wrap
msgid "Embedded Roles"
msgstr "嵌入式角色"

#. type: Plain text
#: upstream/_guides/security-properties.adoc:132
msgid "The user to role mappings are specified in the `application.properties` file by properties keys of the form `quarkus.security.users.embedded.roles.<user>=role1[,role2[,role3[,...]]]`. The following <<roles-example>> illustrates the syntax with 4 user to role mappings:"
msgstr ""

#. type: Block title
#: upstream/_guides/security-properties.adoc:134
#, no-wrap
msgid "Example Roles"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-properties.adoc:141
#, no-wrap
msgid ""
"quarkus.security.users.embedded.roles.scott=Admin,admin,Tester,user # <1>\n"
"quarkus.security.users.embedded.roles.stuart=admin,user # <2>\n"
"quarkus.security.users.embedded.roles.jdoe=NoRolesUser\n"
"quarkus.security.users.embedded.roles.noadmin=user\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-properties.adoc:143
msgid "User `scott` has roles `Admin`, `admin`, `Tester`, and `user`"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-properties.adoc:144
msgid "User `stuart` has roles `admin` and `user`"
msgstr ""

#. type: Title ==
#: upstream/_guides/security-properties.adoc:145
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-properties.adoc:147
msgid "xref:security.adoc[Quarkus Security]"
msgstr ""
