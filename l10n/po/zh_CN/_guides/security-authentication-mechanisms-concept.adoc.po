# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-04-26 15:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:2
#, fuzzy, no-wrap
msgid "Authentication mechanisms in Quarkus"
msgstr "Quarkus的认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:8
#, fuzzy
msgid "The Quarkus Security framework supports multiple authentication mechanisms, which you can use to secure your applications.  You can also combine authentication mechanisms."
msgstr "Quarkus安全框架支持多种认证机制，你可以用它们来保护你的应用程序。你也可以结合认证机制。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:12
#, fuzzy
msgid "Before you choose an authentication mechanism for securing your Quarkus applications, review the information provided."
msgstr "在你选择一个认证机制来保护你的Quarkus应用程序之前，请查看所提供的信息。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:14
#, fuzzy, no-wrap
msgid "Overview of supported authentication mechanisms"
msgstr "支持的认证机制概述"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:17
#, fuzzy
msgid "Some supported authentication mechanisms are built into Quarkus, and some require you to add an extension, all of which are detailed in the following sections on this page:"
msgstr "有些支持的认证机制是Quarkus内置的，有些则需要你添加一个扩展，所有这些都在本页面的以下章节中详细介绍："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:19
#, fuzzy
msgid "xref:built-in-authentication-mechanisms[Built-in authentication mechanisms]"
msgstr "link:#built-in-authentication-mechanisms[内置认证机制]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:20
#, fuzzy
msgid "xref:other-supported-authentication-mechanisms[Other supported authentication mechanisms]"
msgstr "link:#other-supported-authentication-mechanisms[其他支持的认证机制]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:22
#, fuzzy
msgid "The following table maps specific authentication requirements to a supported mechanism that you can use in Quarkus:"
msgstr "下表将具体的认证要求映射到你可以在Quarkus中使用的支持机制："

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:23
#, fuzzy, no-wrap
msgid "Authentication requirements and mechanisms"
msgstr "认证要求和机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:26
#, fuzzy, no-wrap
msgid "Authentication requirement"
msgstr "认证要求"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:28
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:298
#, fuzzy, no-wrap
msgid "Authentication mechanism"
msgstr "认证机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:28
#, fuzzy, no-wrap
msgid "Username and password"
msgstr "用户名和密码"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:30
#, fuzzy, no-wrap
msgid "xref:security-basic-authentication-concept.adoc[Basic], xref:security-authentication-mechanisms-concept.adoc#form-auth[Form]"
msgstr "link:security-basic-authentication-concept.html[基本] ， link:security-authentication-mechanisms-concept.html#form-auth[形式]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:30
#, fuzzy, no-wrap
msgid "Bearer access token"
msgstr "承载访问令牌"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:32
#, fuzzy, no-wrap
msgid "xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer], xref:security-jwt.adoc[JWT], xref:security-oauth2.adoc[OAuth2]"
msgstr "link:security-oidc-bearer-authentication-concept.html[OIDC承载器] 、 link:security-jwt.html[JWT] 、 link:security-oauth2.html[OAuth2]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:32
#, fuzzy, no-wrap
msgid "Single sign-on (SSO)"
msgstr "单点登录（SSO）"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:34
#, fuzzy, no-wrap
msgid "xref:security-oidc-code-flow-authentication-concept.adoc[OIDC Code Flow], xref:security-authentication-mechanisms-concept.adoc#form-auth[Form]"
msgstr "link:security-oidc-code-flow-authentication-concept.html[OIDC代码流程] ， link:security-authentication-mechanisms-concept.html#form-auth[表格]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:34
#, fuzzy, no-wrap
msgid "Client certificate"
msgstr "客户证书"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:36
#, fuzzy, no-wrap
msgid "xref:security-authentication-mechanisms-concept.adoc#mutual-tls[Mutual TLS (MTLS)]"
msgstr "link:security-authentication-mechanisms-concept.html#mutual-tls[相互TLS（MTLS）。]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:36
#, fuzzy, no-wrap
msgid "WebAuthn"
msgstr "网络版"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:38
#, fuzzy, no-wrap
msgid "xref:security-webauthn-concept.adoc[WebAuthn]"
msgstr "link:security-webauthn-concept.html[网络版]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:38
#, fuzzy, no-wrap
msgid "Kerberos ticket"
msgstr "Kerberos票据"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:39
#, fuzzy, no-wrap
msgid "link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-kerberos/dev/index.html[Kerberos]"
msgstr "link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-kerberos/dev/index.html[Kerberos]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:42
#, fuzzy
msgid "See also the xref:table[Token authentication mechanism comparison] table featured later in this section."
msgstr "也请参见本节后面的 link:#table[令牌认证机制比较] 表。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:44
#, fuzzy, no-wrap
msgid "Built-in authentication mechanisms"
msgstr "内置认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:47
#, fuzzy
msgid "Quarkus Security provides the following built-in authentication support:"
msgstr "Quarkus Security提供以下内置的认证支持："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:49
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:58
#, fuzzy
msgid "xref:security-basic-authentication-concept.adoc[Basic authentication]"
msgstr "link:security-basic-authentication-concept.html[基本认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:50
#, fuzzy
msgid "xref:form-auth[Form-based authentication]"
msgstr "link:#form-auth[基于表格的认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:51
#, fuzzy
msgid "xref:mutual-tls[Mutual TLS authentication]"
msgstr "link:#mutual-tls[相互的TLS认证]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:52
#, fuzzy, no-wrap
msgid "Basic authentication"
msgstr "基本认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:56
#, fuzzy
msgid "You can secure your Quarkus application endpoints with the built-in HTTP Basic authentication mechanism.  For more information, see the following documentation:"
msgstr "你可以用内置的HTTP Basic认证机制来保护你的Quarkus应用程序端点。欲了解更多信息，请参见以下文档："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:59
#, fuzzy
msgid "xref:security-basic-authentication-howto.adoc[Enable Basic authentication]"
msgstr "link:security-basic-authentication-howto.html[启用基本认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:60
#, fuzzy
msgid "xref:security-jpa-concept.adoc[Quarkus Security with Jakarta Persistence]"
msgstr "link:security-jpa-concept.html[使用Jakarta Persistence的Quarkus安全]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:61
#, fuzzy
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication and Jakarta Persistence]"
msgstr "link:security-basic-authentication-tutorial.html[用基本认证和Jakarta持久性保护Quarkus应用程序]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:62
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:360
#, fuzzy
msgid "xref:security-identity-providers-concept.adoc[Identity providers]"
msgstr "link:security-identity-providers-concept.html[身份提供者]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:64
#, fuzzy, no-wrap
msgid "Form-based authentication"
msgstr "基于表格的认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:69
#, fuzzy
msgid "Quarkus provides form-based authentication that works in a similar manner to traditional Servlet form-based auth.  Unlike traditional form authentication, the authenticated user is not stored in an HTTP session, as Quarkus does not provide clustered HTTP session support.  Instead, the authentication information is stored in an encrypted cookie, which can be read by all members of the cluster (provided they all share the same encryption key)."
msgstr "Quarkus提供基于表单的认证，其工作方式类似于传统的Servlet基于表单的认证。与传统的表单认证不同的是，由于Quarkus不提供集群的HTTP会话支持，被认证的用户不被存储在HTTP会话中。相反，认证信息被存储在一个加密的cookie中，集群中的所有成员都可以读取（只要他们都共享相同的加密密钥）。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:75
#, fuzzy
msgid "To apply encryption, add the `quarkus.http.auth.session.encryption-key` property, and ensure that the value you set is at least 16 characters long.  This key is hashed using SHA-256.  The resulting digest is used as a key for AES-256 encryption of the cookie value.  The cookie contains an expiry time as part of the encrypted value, so all nodes in the cluster must have their clocks synchronized.  At one-minute intervals, a new cookie gets generated with an updated expiry time if the session is in use."
msgstr "要应用加密，请添加 `quarkus.http.auth.session.encryption-key` 属性，并确保你设置的值至少有16个字符长。这个密钥使用SHA-256进行散列。由此产生的摘要被用作对cookie值进行AES-256加密的密钥。Cookie包含一个过期时间，作为加密值的一部分，因此集群中的所有节点都必须同步其时钟。每隔一分钟，如果会话在使用中，就会生成一个新的cookie，并更新到期时间。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:77
#, fuzzy
msgid "Single-page application (SPA) typically wants to avoid redirects, which can be done by removing default page paths, as outlined in the following example:"
msgstr "单页应用程序（SPA）通常希望避免重定向，这可以通过删除默认的页面路径来实现，如下例所示："

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:82
#, no-wrap
msgid ""
"# do not redirect, respond with HTTP 200 OK\n"
"quarkus.http.auth.form.landing-page=\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:86
#, no-wrap
msgid ""
"# do not redirect, respond with HTTP 401 Unauthorized\n"
"quarkus.http.auth.form.login-page=\n"
"quarkus.http.auth.form.error-page=\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:89
#, fuzzy
msgid "The following properties can be used to configure form-based authentication:"
msgstr "以下属性可用于配置基于表单的认证："

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:93
#, fuzzy, no-wrap
msgid "Mutual TLS authentication"
msgstr "相互的TLS认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:96
#, fuzzy
msgid "Quarkus provides mutual TLS (mTLS) authentication so that you can authenticate users based on their X.509 certificates."
msgstr "Quarkus提供了相互TLS(mTLS)认证，这样你就可以根据用户的X.509证书进行认证。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:98
#, fuzzy
msgid "To use this authentication method, you should first enable SSL for your application. For more details, check the xref:http-reference.adoc#ssl[Supporting secure connections with SSL] guide."
msgstr "要使用这种认证方法，你应该首先为你的应用程序启用SSL。更多细节，请查看 link:http-reference.html#ssl[支持SSL的安全连接] 指南。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:102
#, fuzzy
msgid "Once your application is accepting secure connections, the next step is to configure a `quarkus.http.ssl.certificate.trust-store-file` holding all the certificates that your application should trust as well as how your application should ask for certificates when a client (e.g.: browser or another service) tries to access one of its protected resources."
msgstr "一旦你的应用程序接受了安全连接，下一步就是配置一个 `quarkus.http.ssl.certificate.trust-store-file` ，里面有你的应用程序应该信任的所有证书，以及当客户端（如：浏览器或其他服务）试图访问其受保护的资源时，你的应用程序应该如何要求获得证书。"

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:110
#, no-wrap
msgid ""
"quarkus.http.ssl.certificate.key-store-file=server-keystore.jks            <1>\n"
"quarkus.http.ssl.certificate.key-store-password=the_key_store_secret\n"
"quarkus.http.ssl.certificate.trust-store-file=server-truststore.jks        <2>\n"
"quarkus.http.ssl.certificate.trust-store-password=the_trust_store_secret\n"
"quarkus.http.ssl.client-auth=required                                      <3>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:113
#, no-wrap
msgid ""
"quarkus.http.auth.permission.default.paths=/*                              <4>\n"
"quarkus.http.auth.permission.default.policy=authenticated\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:115
#, fuzzy
msgid "Configures a key store where the server's private key is located."
msgstr "配置一个服务器私钥所在的密钥库。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:116
#, fuzzy
msgid "Configures a trust store from where the trusted certificates are going to be loaded from."
msgstr "配置一个信任商店，受信任的证书将从那里加载。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:119
#, fuzzy
msgid "Defines that the server should *always* ask certificates from clients. You can relax this behavior by using `REQUEST` so that the server should still accept requests without a certificate. Useful when you are also supporting authentication methods other than mTLS."
msgstr "定义了服务器应该 *总是* 要求客户提供证书。你可以通过使用 `REQUEST` 来放松这种行为，这样服务器仍然应该接受没有证书的请求。当你支持除mTLS之外的其他认证方法时，这很有用。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:120
#, fuzzy
msgid "Defines a policy where only authenticated users should have access to resources from your application."
msgstr "定义了一个策略，只有经过认证的用户才能访问你的应用程序的资源。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:123
#, fuzzy
msgid "Once the incoming request matches a valid certificate in the truststore, your application should be able to obtain the subject by just injecting a `SecurityIdentity` as follows:"
msgstr "一旦传入的请求与信任库中的有效证书相匹配，你的应用程序应该能够通过注入一个 `SecurityIdentity` ，获得主题，如下所示："

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:125
#, fuzzy, no-wrap
msgid "Obtaining the subject"
msgstr "获取主题"

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:130
#, no-wrap
msgid ""
"@Inject\n"
"SecurityIdentity identity;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:136
#, no-wrap
msgid ""
"@GET\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"public String hello() {\n"
"    return String.format(\"Hello, %s\", identity.getPrincipal().getName());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:139
#, fuzzy
msgid "You should also be able to get the certificate as follows:"
msgstr "你也应该能够获得如下证书："

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:141
#, fuzzy, no-wrap
msgid "Obtaining the certificate"
msgstr "获得证书"

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:146
#, no-wrap
msgid ""
"import java.security.cert.X509Certificate;\n"
"import io.quarkus.security.credential.CertificateCredential;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:149
#, no-wrap
msgid ""
"CertificateCredential credential = identity.getCredential(CertificateCredential.class);\n"
"X509Certificate certificate = credential.getCertificate();\n"
msgstr ""

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:151
#, no-wrap
msgid "Authorization"
msgstr "授权"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:155
#, fuzzy
msgid "The information from the client certificate can be used to enhance Quarkus `SecurityIdentity`. For example, you can add new roles after checking a client certificate subject name, and so on.  For more information about customizing Quarkus `SecurityIdentity`, see xref:security-customization.adoc#security-identity-customization[SecurityIdentity customization] in the \"Security customization\" topic."
msgstr "来自客户证书的信息可以被用来增强Quarkus `SecurityIdentity` 。例如，你可以在检查客户证书主题名称后添加新角色，等等。关于定制Quarkus `SecurityIdentity` 的更多信息，请参阅 \"安全定制 \"主题中的 link:security-customization.html#security-identity-customization[SecurityIdentity定制] 。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:157
#, fuzzy, no-wrap
msgid "Other supported authentication mechanisms"
msgstr "其他支持的认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:160
#, fuzzy
msgid "Quarkus Security also supports the following authentication mechanisms through extensions:"
msgstr "Quarkus Security还通过扩展支持以下认证机制："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:162
#, fuzzy
msgid "xref:webauthn-authentication[WebAuthn authentication]"
msgstr "link:#webauthn-authentication[WebAuthn认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:163
#, fuzzy
msgid "xref:openid-connect-authentication[OpenID Connect authentication]"
msgstr "link:#openid-connect-authentication[OpenID连接认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:164
#, fuzzy
msgid "xref:smallrye-jwt-authentication[SmallRye JWT authentication]"
msgstr "link:#smallrye-jwt-authentication[SmallRye JWT认证]"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:165
#, fuzzy
msgid "xref:oauth2-authentication[OAuth2 authentication]"
msgstr "link:#oauth2-authentication[OAuth2认证]"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:167
#, no-wrap
msgid "WebAuthn authentication"
msgstr "WebAuthn认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:172
#, fuzzy
msgid "https://webauthn.guide/[WebAuthn] is an authentication mechanism that replaces passwords.  When you write a service for registering new users, or logging them in, instead of asking for a password, you can use WebAuthn, which replaces the password.  For more information, see xref:security-webauthn-concept.adoc[Secure a Quarkus application by using the WebAuthn authentication mechanism]."
msgstr "link:https://webauthn.guide/[WebAuthn] 是一种取代密码的认证机制。当你写一个注册新用户或登录用户的服务时，你可以使用WebAuthn来替代密码，而不是要求用户输入密码。更多信息，请参见 link:security-webauthn-concept.html[通过使用WebAuthn认证机制保护Quarkus应用程序] 。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:174
#, fuzzy, no-wrap
msgid "OpenID Connect authentication"
msgstr "OpenID连接认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:177
msgid "OpenID Connect (OIDC) is an identity layer that works on top of the OAuth 2.0 protocol. OIDC enables client applications to verify the identity of a user based on the authentication performed by the OIDC provider and to retrieve basic information about that user."
msgstr "OpenID Connect（OIDC）是一个身份层，它工作在OAuth 2.0协议之上。OIDC使客户端应用程序能够根据OIDC提供者进行的认证来验证用户的身份，并获取用户的基本信息。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:182
msgid "The Quarkus `quarkus-oidc` extension provides a reactive, interoperable, multitenant-enabled OIDC adapter that supports Bearer Token and Authorization Code Flow authentication mechanisms.  The Bearer Token mechanism extracts the token from the HTTP Authorization header.  The Authorization Code Flow mechanism redirects the user to an OIDC provider to authenticate the identity of the user.  After the user is redirected back to Quarkus, the mechanism completes the authentication process by exchanging the provided code that was granted for the ID, access, and refresh tokens."
msgstr "`quarkus-oidc` 扩展提供了一个响应式的、可互操作的、支持多租户的OIDC适配器，以支持 `Bearer Token` 和 `Authorization Code Flow` 认证机制。`Bearer Token` 机制从HTTP header中提取token。 `Authorization Code Flow` 机制将用户重定向到OIDC提供者来认证用户身份，并在用户被重定向回Quarkus后，通过将提供的代码授权与ID、访问和刷新token进行交换来完成认证过程。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:185
msgid "You can verify ID and access JWT tokens by using the refreshable JSON Web Key (JWK) set or you can introspect them remotely.  However, opaque (binary) tokens can only be introspected remotely."
msgstr "您可以使用可刷新的 `JWK` 密钥集验证ID和访问 `JWT` token。但JWT和不透明（二进制）token都可以被远程自省(introspect)。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:189
#, fuzzy
msgid "Using the Quarkus OIDC extension, both Bearer Token and Authorization Code Flow mechanisms use xref:smallrye-jwt-authentication[SmallRye JWT] to represent JWT tokens as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "使用Quarkus OIDC扩展，承载令牌和授权码流机制都使用 link:#smallrye-jwt-authentication[SmallRye JWT] 来表示JWT令牌为MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` 。"

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:191
#, no-wrap
msgid "Additional Quarkus resources for OIDC authentication"
msgstr "用于OIDC认证的其他Quarkus资源"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:194
msgid "For more information about OIDC authentication and authorization methods you can use to secure your Quarkus applications, see the following detailed resources:"
msgstr "关于可以应用于保护Quarkus程序的OIDC认证和授权的更多方式，请看以下更详细的资源："

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:197
#, fuzzy, no-wrap
msgid "OIDC topic"
msgstr "OIDC专题"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:198
#, fuzzy, no-wrap
msgid "Quarkus information resource"
msgstr "Quarkus信息资源"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:198
#, fuzzy, no-wrap
msgid "Bearer token authentication mechanism"
msgstr "持卡人令牌认证机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:199
#, fuzzy, no-wrap
msgid "xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer authentication]"
msgstr "link:security-oidc-bearer-authentication-concept.html[OIDC承载认证]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:199
#, fuzzy, no-wrap
msgid "Authorization code flow authentication mechanism"
msgstr "授权代码流认证机制"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:200
#, fuzzy, no-wrap
msgid "xref:security-oidc-code-flow-authentication-concept.adoc[OpenID Connect (OIDC) authorization code flow mechanism]"
msgstr "link:security-oidc-code-flow-authentication-concept.html[OpenID Connect（OIDC）授权代码流机制]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:200
#, fuzzy, no-wrap
msgid "Multiple tenants that can support bearer token or authorization code flow mechanisms"
msgstr "可支持承载令牌或授权代码流机制的多个租户"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:201
#, no-wrap
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect (OIDC) multi-tenancy]"
msgstr "link:security-openid-connect-multitenancy.html[使用OpenID连接（OIDC）多租户]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:201
#, no-wrap
msgid "Using Keycloak to centralize authorization"
msgstr "使用Keycloak进行集中授权"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:202
#, no-wrap
msgid "xref:security-keycloak-authorization.adoc[Using OpenID Connect (OIDC) and Keycloak to centralize authorization]"
msgstr "link:security-keycloak-authorization.html[使用OpenID连接（OIDC）和Keycloak来集中授权]"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:202
#, no-wrap
msgid "Configuring Keycloak programmatically"
msgstr "以编程方式配置Keycloak"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:203
#, fuzzy, no-wrap
msgid "xref:security-keycloak-admin-client.adoc[Using the Keycloak admin client]"
msgstr "link:security-keycloak-admin-client.html[使用Keycloak管理客户端]"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:208
#, fuzzy
msgid "If you need to enable the Quarkus OIDC extension at runtime, set `quarkus.oidc.tenant-enabled=false` at build time and then re-enable it at runtime by using a system property."
msgstr "如果你需要在运行时启用Quarkus OIDC扩展，请在构建时设置 `quarkus.oidc.tenant-enabled=false` ，然后在运行时通过使用系统属性重新启用它。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:210
#, fuzzy
msgid "For more information about managing the individual tenant configurations in multitenant OIDC deployments, see the _Disabling tenant configurations_ section in the xref:security-openid-connect-multitenancy.adoc#disable-tenant[Using OpenID Connect (OIDC) multi-tenancy] guide."
msgstr "关于在多租户OIDC部署中管理单个租户配置的更多信息，请参阅 link:security-openid-connect-multitenancy.html#disable-tenant[使用OpenID Connect（OIDC）多租户] 指南中的 _禁用租户配置_ 部分。"

#. type: Title ====
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:212
#, fuzzy, no-wrap
msgid "OpenID Connect client and filters"
msgstr "OpenID连接客户端和过滤器"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:215
msgid "The `quarkus-oidc-client` extension provides `OidcClient` for acquiring and refreshing access tokens from OpenID Connect and OAuth2 providers that support the following token grants:"
msgstr "`quarkus-oidc-client` 扩展提供 `OidcClient` ，用于从支持以下token授权的OpenID Connect和OAuth2提供者那里获取和刷新访问token："

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:217
msgid "`client-credentials`"
msgstr "`client-credentials`"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:218
msgid "`password`"
msgstr "`password`"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:219
msgid "`refresh_token`"
msgstr "`refresh_token`"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:223
#, fuzzy
msgid "The `quarkus-oidc-client-filter` extension requires the `quarkus-oidc-client` extension and provides Jakarta REST `OidcClientRequestFilter`, which sets the access token acquired by `OidcClient` as the `Bearer` scheme value of the HTTP `Authorization` header.  This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint, but it is not related to the authentication requirements of this service endpoint.  For example, it can be a public endpoint, or it can be protected with mTLS."
msgstr " `quarkus-oidc-client-filter` 扩展需要 `quarkus-oidc-client` 扩展，并提供 Jakarta REST `OidcClientRequestFilter` ，它将由 `OidcClient` 获得的访问令牌设置为 HTTP `Authorization` 头的 `Bearer` 方案值。这个过滤器可以用MP RestClient实现注册，注入到当前的Quarkus端点，但它与这个服务端点的认证要求无关。例如，它可以是一个公共端点，或者它可以用mTLS保护。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:227
msgid "In this scenario, you do not need to protect your Quarkus endpoint by using the Quarkus OpenID Connect adapter."
msgstr "在这种情况下，您不需要通过使用Quarkus OpenID Connect适配器来保护您的Quarkus节点。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:232
#, fuzzy
msgid "The `quarkus-oidc-token-propagation` extension requires the `quarkus-oidc` extension and provides Jakarta REST `TokenCredentialRequestFilter`, which sets the OpenID Connect Bearer or Authorization Code Flow access token as the `Bearer` scheme value of the HTTP `Authorization` header.  This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint, which in turn must be protected by using the Quarkus OpenID Connect adapter.  This filter can be used to propagate the access token to the downstream services."
msgstr " `quarkus-oidc-token-propagation` 扩展需要 `quarkus-oidc` 扩展，并提供 Jakarta REST `TokenCredentialRequestFilter` ，它将 OpenID Connect Bearer 或 Authorization Code Flow 访问令牌设置为 HTTP `Authorization` 头的 `Bearer` 方案值。这个过滤器可以与MP RestClient实现注册，注入到当前的Quarkus端点，而这个端点又必须通过使用Quarkus OpenID Connect适配器来保护。这个过滤器可以用来将访问令牌传播到下游服务中。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:234
msgid "For more information, see the xref:security-openid-connect-client.adoc[OpenID Connect client and token propagation quickstart] and xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference] guides."
msgstr "更多信息请参见《 link:security-openid-connect-client.html[使用OpenID Connect客户端和token传递quickstart] 》和 《 link:security-openid-connect-client-reference.htmlOpenID Connect (OIDC) 和 OAuth2 客户端以及过滤器参考] 》指南。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:236
#, no-wrap
msgid "SmallRye JWT authentication"
msgstr "SmallRye JWT authentication"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:239
msgid "The `quarkus-smallrye-jwt` extension provides a MicroProfile JSON Web Token (JWT) 1.2.1 implementation and multiple options to verify signed and encrypted `JWT` tokens and represents them as `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "`quarkus-smallrye-jwt` 提供Microprofile JWT 1.2.1的实现和更多的选项来验证签名和加密的 `JWT` token，并将其表示为 `org.eclipse.microprofile.jwt.JsonWebToken`。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:242
#, fuzzy
msgid "`quarkus-smallrye-jwt` is an alternative to the `quarkus-oidc` Bearer Token authentication mechanism, and verifies only `JWT` tokens by using either Privacy Enhanced Mail (PEM) keys or the refreshable `JWK` key set.  `quarkus-smallrye-jwt` also provides the JWT generation API, which you can use to easily create `signed`, `inner-signed`, and `encrypted` `JWT` tokens."
msgstr " `quarkus-smallrye-jwt` 是 \"承载令牌 \"认证机制的替代方案，仅通过使用隐私增强邮件（PEM）密钥或可刷新的 密钥集来验证 。 还提供JWT生成API，你可以用它来轻松创建 、 和  令牌。 `quarkus-oidc` `JWK` `JWT` `quarkus-smallrye-jwt` `signed` `inner-signed` `encrypted` `JWT` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:244
msgid "For more information, see xref:security-jwt.adoc[Using SmallRye JWT role-based access control]."
msgstr "更多信息请参见《 link:security-jwt.html[使用SmallRye JWT RBAC] 》指南。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:246
#, no-wrap
msgid "OAuth2 authentication"
msgstr "OAuth2 认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:250
msgid "`quarkus-elytron-security-oauth2` provides an alternative to the `quarkus-oidc` Bearer Token authentication mechanism. `quarkus-elytron-security-oauth2` is based on `Elytron` and is primarily intended for introspecting opaque tokens remotely.  For more information, see xref:security-oauth2.adoc[Using OAuth2]."
msgstr "`quarkus-elytron-security-oauth2` 提供了一个替代 `quarkus-oidc` Bearer Token认证机制的方法。它基于 `Elytron` 并且主要是为了对不透明的token进行远程自我检查。更多信息请参见 link:security-oauth2.html[使用OAuth2] 指南。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:252
#, no-wrap
msgid "Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms"
msgstr "在OpenID Connect、SmallRye JWT和OAuth2扩展之间做出选择"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:255
#, fuzzy
msgid "Use the following information to select the appropriate token authentication mechanism to secure your Quarkus applications."
msgstr "使用以下信息来选择适当的令牌认证机制来保护你的Quarkus应用程序。"

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:256
#, fuzzy, no-wrap
msgid "List of authentication mechanism use-cases"
msgstr "认证机制用例列表"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:260
msgid "`quarkus-oidc` requires an OpenID Connect provider such as Keycloak, which can be used to verify the Bearer tokens or authenticate the end users with the Authorization Code flow.  In both cases, `quarkus-oidc` requires a connection to the specified OpenID Connect provider."
msgstr "`quarkus-oidc` 扩展需要一个OpenID Connect提供者，如Keycloak，用以验证Bearer tokens或用Authorization Code flow验证终端用户。在这两种情况下 `quarkus-oidc` 需要连接到这个OpenID Connect提供者。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:263
msgid "If the user authentication requires Authorization Code flow or you need to support multiple tenants, use `quarkus-oidc`.  `quarkus-oidc` can also request user information by using both Authorization Code Flow and Bearer access tokens."
msgstr "如果用户认证需要是使用Authorization Code flow或者您需要支持多租户，请使用 `quarkus-oidc` 。 `quarkus-oidc` 也可以通过Authorization Code Flow 和 Bearer access tokens来请求用户信息。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:265
msgid "If your Bearer tokens must be verified, use `quarkus-oidc`, `quarkus-smallrye-jwt`, or `quarkus-elytron-security-oauth2`."
msgstr "当需要验证Bearer tokens时，您可以使用 `quarkus-oidc` , `quarkus-smallrye-jwt` 和 `quarkus-elytron-security-oauth2` 。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:269
#, fuzzy
msgid "If your Bearer tokens are in a JSON web token (JWT) format, you can use any of the extensions listed above.  Both `quarkus-oidc` and `quarkus-smallrye-jwt` support refreshing the JsonWebKey (JWK) set when the OpenID Connect provider rotates the keys.  Therefore, if remote token introspection must be avoided or is unsupported by the providers, use `quarkus-oidc` or `quarkus-smallrye-jwt` for verifying JWT tokens."
msgstr "如果你的承载令牌是JSON网络令牌（JWT）格式，你可以使用上面列出的任何一个扩展。 `quarkus-oidc` 和 `quarkus-smallrye-jwt` 都支持在OpenID Connect提供商旋转密钥时刷新JsonWebKey（JWK）集。因此，如果必须避免远程令牌反省或提供者不支持，请使用 `quarkus-oidc` 或 `quarkus-smallrye-jwt` 来验证JWT令牌。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:272
msgid "If you need to introspect the JWT tokens remotely, you can use either `quarkus-oidc` or `quarkus-elytron-security-oauth2` because they support the verification of the opaque or binary tokens by using remote introspection.  `quarkus-smallrye-jwt` does not support the remote introspection of both opaque or JWT tokens but instead relies on the locally available keys that are usually retrieved from the OpenID Connect provider."
msgstr "如果您需要进行JWT tokens远程自查，您可以使用 `quarkus-oidc` 或 `quarkus-elytron-security-oauth2` ，因为它们支持通过使用远程自查来验证不透明或二进制token。 `quarkus-smallrye-jwt` 不支持对不透明或JWT token进行远程自查，而是依赖于通常从OpenID Connect提供者那里检索的本地可用密钥。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:276
#, fuzzy
msgid "`quarkus-oidc` and `quarkus-smallrye-jwt` support the JWT and opaque tokens injection into the endpoint code.  Injected JWT tokens provide more information about the user.  All extensions can have the tokens injected as `Principal`."
msgstr " `quarkus-oidc` 和 ，支持将JWT和不透明的令牌注入端点代码中。注入的JWT令牌提供了关于用户的更多信息。所有的扩展都可以将令牌注入到 。 `quarkus-smallrye-jwt` `Principal` "

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:278
msgid "`quarkus-smallrye-jwt` supports more key formats than `quarkus-oidc`. `quarkus-oidc` uses only the JWK-formatted keys that are part of a JWK set, whereas `quarkus-smallrye-jwt` supports PEM keys."
msgstr "`quarkus-smallrye-jwt` 比 `quarkus-oidc` 支持更多的密钥格式。后者只使用属于JWK集的JWK格式的密钥，反之前者还支持PEM密钥。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:281
msgid "`quarkus-smallrye-jwt` handles locally signed, inner-signed-and-encrypted, and encrypted tokens.  While `quarkus-oidc` and `quarkus-elytron-security-oauth2` can also verify such tokens but treats them as opaque tokens and verifies them through remote introspection."
msgstr "`quarkus-smallrye-jwt` 不仅可以在本地处理有签名的 token ，而且还可以处理内部签名并加密(inner-signed-and-encrypted)和单纯加密的 token 。事实上， `quarkus-oidc` 和 `quarkus-elytron-security-oauth2` 也可以验证这样的 token ，但只能把它们当作不透明的 token ，并通过远程自查来验证。"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:283
msgid "If you need a lightweight library for the remote introspection of opaque or JWT tokens, use `quarkus-elytron-security-oauth2`."
msgstr "如果您需要一个轻量级的库来进行不透明或JWT token 的远程自查，请使用 `quarkus-elytron-security-oauth2` 。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:289
#, fuzzy
msgid "Architectural considerations drive your decision to use opaque or JSON web token (JWT) token format.  Opaque tokens tend to be much shorter than JWT tokens but need most of the token-associated state to be maintained in the provider database.  Opaque tokens are effectively database pointers."
msgstr "架构方面的考虑促使你决定使用不透明或JSON网络令牌（JWT）令牌格式。不透明令牌往往比JWT令牌短得多，但需要在提供者数据库中维护大部分与令牌相关的状态。不透明令牌实际上是数据库指针。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:291
#, fuzzy
msgid "JWT tokens are significantly longer than opaque tokens. Still, the providers effectively delegate most of the token-associated state to the client by storing it as the token claims and either signing or encrypting them."
msgstr "JWT令牌比不透明的令牌要长得多。然而，供应商通过将大部分与令牌相关的状态存储为令牌声明，并对其进行签名或加密，有效地将其委托给客户。"

#. type: Block title
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:294
#, fuzzy, no-wrap
msgid "Token authentication mechanism comparison"
msgstr "令牌认证机制比较"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:296
#, fuzzy, no-wrap
msgid "Feature required"
msgstr "需要的功能"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:298
#, fuzzy, no-wrap
msgid "`quarkus-oidc`"
msgstr " `quarkus-oidc` "

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:298
#, fuzzy, no-wrap
msgid "`quarkus-smallrye-jwt`"
msgstr " `quarkus-smallrye-jwt` "

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:300
#, fuzzy, no-wrap
msgid "`quarkus-elytron-security-oauth2`"
msgstr " `quarkus-elytron-security-oauth2` "

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:300
#, fuzzy, no-wrap
msgid "Bearer JWT verification"
msgstr "承载者JWT验证"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:300
#, no-wrap
msgid "Local verification or introspection"
msgstr "本地验证或自查"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:300
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:313
#, no-wrap
msgid "Local verification"
msgstr "本地验证"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:302
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:303
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:313
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:314
#, no-wrap
msgid "Introspection"
msgstr "自查"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:302
#, fuzzy, no-wrap
msgid "Bearer opaque token verification"
msgstr "不记名不透明令牌验证"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:302
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:304
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:307
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:308
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:309
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:310
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:312
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:313
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:314
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:315
#, no-wrap
msgid "No"
msgstr "不"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:303
#, no-wrap
msgid "Refreshing `JsonWebKey` set for verifying JWT tokens"
msgstr "刷新 `JsonWebKey` 集以验证JWT tokens"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:303
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:304
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:305
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:307
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:308
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:309
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:310
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:315
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:316
#, no-wrap
msgid "Yes"
msgstr "是"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:304
#, fuzzy, no-wrap
msgid "Represent token as `Principal`"
msgstr "将令牌表示为 `Principal` "

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:305
#, fuzzy, no-wrap
msgid "Inject JWT as MP JWT"
msgstr "注入JWT作为MP JWT"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:307
#, fuzzy, no-wrap
msgid "Authorization code flow"
msgstr "授权代码流程"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:308
#, no-wrap
msgid "Multi-tenancy"
msgstr "多租户"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:309
#, fuzzy, no-wrap
msgid "User information support"
msgstr "用户信息支持"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:310
#, no-wrap
msgid "PEM key format support"
msgstr "支持Pem密钥格式"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:312
#, no-wrap
msgid "SecretKey support"
msgstr "支持SecretKey"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:312
#, no-wrap
msgid "In JSON Web Key (JWK) format"
msgstr "以JsonWebKey (JWK) 格式"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:313
#, no-wrap
msgid "Inner-signed and encrypted or encrypted tokens"
msgstr "Inner-Signed/Encrypted 或 Encrypted tokens"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:314
#, no-wrap
msgid "Custom token verification"
msgstr "自定义token验证"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:314
#, no-wrap
msgid "With injected JWT parser"
msgstr "使用注入的JWT Parser"

#. type: Table
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:315
#, fuzzy, no-wrap
msgid "JWT as a cookie support"
msgstr "支持JWT作为一个cookie"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:319
#, no-wrap
msgid "Combining authentication mechanisms"
msgstr "组合认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:323
msgid "If the user credentials are provided by different sources, you can combine authentication mechanisms.  For example, you can combine built-in `Basic` and `quarkus-oidc` `Bearer` authentication mechanisms."
msgstr "如果用户证书是由不同的来源提供的，您可以使用组合认证机制。例如，您可以结合内置的 `Basic` 和 `quarkus-oidc` `Bearer` 认证机制。"

#. type: delimited block =
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:327
msgid "You cannot combine the `quarkus-oidc` `Bearer` and `smallrye-jwt` authentication mechanisms because both mechanisms attempt to verify the token extracted from the HTTP `Authorization Bearer` scheme."
msgstr "但结合 `quarkus-oidc` `Bearer` 和 `smallrye-jwt` 认证机制是不允许的，因为两者都试图验证从HTTP `Authorization Bearer` scheme中提取的token。"

#. type: Title ===
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:329
#, no-wrap
msgid "Path-specific authentication mechanisms"
msgstr "特定路径认证机制"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:332
msgid "The following configuration example demonstrates how you can enforce a single selectable authentication mechanism for a given request path:"
msgstr "以下配置示例演示了如何强制要求对一个给定的请求路径选择一个认证机制："

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:337
#, no-wrap
msgid ""
"quarkus.http.auth.permission.basic-or-bearer.paths=/service\n"
"quarkus.http.auth.permission.basic-or-bearer.policy=authenticated\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:341
#, no-wrap
msgid ""
"quarkus.http.auth.permission.basic.paths=/basic-only\n"
"quarkus.http.auth.permission.basic.policy=authenticated\n"
"quarkus.http.auth.permission.basic.auth-mechanism=basic\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:345
#, no-wrap
msgid ""
"quarkus.http.auth.permission.bearer.paths=/bearer-only\n"
"quarkus.http.auth.permission.bearer.policy=authenticated\n"
"quarkus.http.auth.permission.bearer.auth-mechanism=bearer\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:348
msgid "Ensure that the value of the `auth-mechanism` property matches the authentication scheme supported by `HttpAuthenticationMechanism`, for example, `basic`, `bearer`, or `form`."
msgstr "`auth-mechanism` 属性值必须与 HttpAuthenticationMechanism 支持的认证方案相匹配，如 `basic` 或 `bearer` 或 `form` 等等。"

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:349
#, no-wrap
msgid "Proactive authentication"
msgstr "主动认证"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:353
msgid "Proactive authentication is enabled in Quarkus by default. This means that if an incoming request has a credential then that request will always be authenticated, even if the target page does not require authentication.  For more information, see xref:security-proactive-authentication-concept.adoc[Proactive authentication]."
msgstr ""

#. type: Title ==
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:354
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:357
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:358
msgid "xref:security-architecture-concept.adoc[Quarkus Security architecture]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:359
msgid "xref:security-authentication-mechanisms-concept.adoc#other-supported-authentication-mechanisms[Authentication mechanisms in Quarkus]"
msgstr ""

#. type: Plain text
#: upstream/_guides/security-authentication-mechanisms-concept.adoc:360
msgid "xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints]"
msgstr ""
