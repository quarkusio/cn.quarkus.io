# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/kubernetes-config.adoc:6
#, fuzzy, no-wrap
msgid "Kubernetes Config"
msgstr "Kubernetes配置"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:12
#, fuzzy
msgid "Quarkus includes the `kubernetes-config` extension which allows developers to use Kubernetes https://cloud.google.com/kubernetes-engine/docs/concepts/configmap[ConfigMaps] and https://cloud.google.com/kubernetes-engine/docs/concepts/secret[Secrets] as a configuration source, without having to mount them into the https://kubernetes.io/docs/concepts/workloads/pods/pod/[Pod] running the Quarkus application or make any other modifications to their Kubernetes `Deployment` (or Openshift `DeploymentConfig`)."
msgstr "Quarkus包括 `kubernetes-config` 扩展，允许开发者使用Kubernetes link:https://cloud.google.com/kubernetes-engine/docs/concepts/configmap[ConfigMaps] 和 link:https://cloud.google.com/kubernetes-engine/docs/concepts/secret[Secrets] 作为配置源，而不需要将其安装到运行Quarkus应用程序的 link:https://kubernetes.io/docs/concepts/workloads/pods/pod/[Pod] 中，也不需要对Kubernetes `Deployment` （或Openshift `DeploymentConfig` ）进行任何其他修改。"

#. type: Title ==
#: upstream/_guides/kubernetes-config.adoc:14
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "配置"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:18
#, fuzzy
msgid "Once you have your Quarkus project configured you can add the `kubernetes-config` extension by running the following command in your project base directory."
msgstr "一旦你配置好你的Quarkus项目，你就可以通过在你的项目基础目录下运行以下命令来添加 `kubernetes-config` 扩展。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:23
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容。"

#. type: Block title
#: upstream/_guides/kubernetes-config.adoc:25
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/kubernetes-config.adoc:31
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes-config</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/kubernetes-config.adoc:34
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/kubernetes-config.adoc:37
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-kubernetes-config\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kubernetes-config.adoc:39
#, fuzzy, no-wrap
msgid "Usage"
msgstr "使用方法"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:42
#, fuzzy
msgid "The extension works by reading ConfigMaps and Secrets directly from the Kubernetes API server using the xref:kubernetes-client.adoc[Kubernetes Client]."
msgstr "该扩展通过使用 link:kubernetes-client.html[Kubernetes客户端] 从Kubernetes API服务器直接读取ConfigMaps和Secrets来工作。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:44
#, fuzzy
msgid "The extension understands the following types of ConfigMaps and Secrets as input sources:"
msgstr "该扩展能理解以下类型的ConfigMaps和Secrets作为输入源。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:46
#, fuzzy
msgid "ConfigMaps and Secrets that contain literal data (see https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-literal-values[this] for an example on how to create one)"
msgstr "包含字面数据的配置图和秘密（关于如何创建一个配置图的例子，请见 link:https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-literal-values[此] ）。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:47
#, fuzzy
msgid "ConfigMaps and Secrets created from files named `application.properties`, `application.yaml` or `application.yml` (see https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-files[this] for an example on how to create one)."
msgstr "从名为 `application.properties` , `application.yaml` 或 `application.yml` 的文件中创建的ConfigMaps和Secrets（关于如何创建一个文件的例子， link:https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-files[见此] ）。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:49
#, fuzzy
msgid "The extension is disabled by default in order to prevent the application for making API calls when it is not running in a Kubernetes environment. To enable it, set `quarkus.kubernetes-config.enabled=true` (for example using a specific xref:config-reference.adoc#profiles[profile])."
msgstr "该扩展默认是禁用的，以防止应用程序在不运行于Kubernetes环境时进行API调用。要启用它，请设置 `quarkus.kubernetes-config.enabled=true` （例如，使用一个特定的 link:config-reference.html#profiles[配置文件] ）。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:52
#, fuzzy
msgid "The values of `quarkus.kubernetes-config.config-maps` and `quarkus.kubernetes-config.secrets` determine which ConfigMaps and/or Secrets will be used as configuration sources. Keep in mind that these ConfigMaps and Secrets must be in the same Kubernetes `Namespace` as the running application. If they are to be found in a different namespace, then `quarkus.kubernetes-config.namespace` must be set to the proper value."
msgstr " `quarkus.kubernetes-config.config-maps` 和 `quarkus.kubernetes-config.secrets` 的值决定了哪些 ConfigMaps 和/或 Secrets 将被用作配置源。请记住，这些ConfigMaps和Secrets必须与运行中的应用程序在同一个Kubernetes `Namespace` 。如果它们是在不同的命名空间中找到的，那么 `quarkus.kubernetes-config.namespace` 必须被设置为适当的值。"

#. type: Title ===
#: upstream/_guides/kubernetes-config.adoc:53
#, fuzzy, no-wrap
msgid "Priority of obtained properties"
msgstr "获得的财产的优先权"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:56
#, fuzzy
msgid "The properties obtained from the ConfigMaps and Secrets have a higher priority than (i.e. they override) any properties of the same name that are found in `application.properties` (or the YAML equivalents), but they have lower priority than properties set via Environment Variables or Java System Properties."
msgstr "从ConfigMaps和Secrets获得的属性比在 `application.properties` （或YAML等同物）中发现的任何同名属性具有更高的优先级（即它们覆盖），但它们的优先级低于通过环境变量或Java系统属性设置的属性。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:58
#, fuzzy
msgid "Furthermore, when multiple ConfigMaps (or Secrets) are used, ConfigMaps (or Secrets) defined later in the list have a higher priority that ConfigMaps defined earlier in the list."
msgstr "此外，当使用多个配置图（或秘密）时，列表中较晚定义的配置图（或秘密）比列表中较早定义的配置图有更高的优先权。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:60
#, fuzzy
msgid "Finally, when both ConfigMaps and Secrets are used, the latter always a higher priority than the former."
msgstr "最后，当同时使用ConfigMaps和Secrets时，后者的优先级总是高于前者。"

#. type: Title ===
#: upstream/_guides/kubernetes-config.adoc:61
#, fuzzy, no-wrap
msgid "Kubernetes Permissions"
msgstr "Kubernetes 权限"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:65
#, fuzzy
msgid "Since reading ConfigMaps involves interacting with the Kubernetes API Server, when https://kubernetes.io/docs/reference/access-authn-authz/rbac/[RBAC] is enabled on the cluster, the https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[ServiceAccount] that is used to run the application needs to have the proper permissions for such access."
msgstr "由于读取ConfigMaps涉及与Kubernetes API服务器的交互，当集群上启用 link:https://kubernetes.io/docs/reference/access-authn-authz/rbac/[RBAC] 时，用于运行应用程序的 link:https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[ServiceAccount] 需要有适当的权限来进行这种访问。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:67
#, fuzzy
msgid "Thankfully, when using the `kubernetes-config` extension along with the xref:deploying-to-kubernetes.adoc[Kubernetes] extension, all the necessary Kubernetes resources to make that happen are automatically generated."
msgstr "值得庆幸的是，当使用 `kubernetes-config` 扩展和 link:deploying-to-kubernetes.html[Kubernetes] 扩展时，所有必要的Kubernetes资源都会自动生成，以实现这一目标。"

#. type: Title ====
#: upstream/_guides/kubernetes-config.adoc:68
#, fuzzy, no-wrap
msgid "Secrets"
msgstr "秘密"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:72
#, fuzzy
msgid "By default, the xref:deploying-to-kubernetes.adoc[Kubernetes] extension doesn't generate the necessary resources to allow accessing secrets.  Set `quarkus.kubernetes-config.secrets.enabled=true` to generate the necessary role and corresponding role binding."
msgstr "默认情况下， link:deploying-to-kubernetes.html[Kubernetes] 扩展不会生成允许访问秘密的必要资源。设置 `quarkus.kubernetes-config.secrets.enabled=true` ，生成必要的角色和相应的角色绑定。"

#. type: Title ==
#: upstream/_guides/kubernetes-config.adoc:73
#, fuzzy, no-wrap
msgid "Example configuration"
msgstr "配置示例"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:76
#, fuzzy
msgid "A very common use case is to deploy a Quarkus application that needs to access a relational database which has itself already been deployed on Kubernetes. Using the `quarkus-kubernetes-config` extension makes this use case very simple to handle."
msgstr "一个非常常见的用例是部署一个Quarkus应用程序，它需要访问一个本身已经部署在Kubernetes上的关系数据库。使用 `quarkus-kubernetes-config` 扩展使得这种用例的处理非常简单。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:78
#, fuzzy
msgid "Let's assume that our Quarkus application needs to talk to PostgreSQL and that when PostgreSQL was deployed on our Kubernetes cluster, a `Secret` named `postgresql` was created as part of that deployment and contains the following entries:"
msgstr " `Secret` 让我们假设我们的Quarkus应用程序需要与PostgreSQL对话，当PostgreSQL被部署在我们的Kubernetes集群上时，作为该部署的一部分，创建了一个名为 `postgresql` ，包含以下条目。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:80
#, fuzzy
msgid "`database-name`"
msgstr " `database-name` "

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:81
#, fuzzy
msgid "`database-user`"
msgstr " `database-user` "

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:82
#, fuzzy
msgid "`database-password`"
msgstr " `database-password` "

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:84
#, fuzzy
msgid "One possible way to make Quarkus use these entries to connect the database is to use the following configuration:"
msgstr "使Quarkus使用这些条目来连接数据库的一个可能的方法是使用以下配置。"

#. type: delimited block -
#: upstream/_guides/kubernetes-config.adoc:89
#, no-wrap
msgid ""
"%prod.quarkus.kubernetes-config.secrets.enabled=true                            <1>\n"
"quarkus.kubernetes-config.secrets=postgresql                                    <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kubernetes-config.adoc:93
#, no-wrap
msgid ""
"%prod.quarkus.datasource.jdbc.url=postgresql://somehost:5432/${database-name}   <3>\n"
"%prod.quarkus.datasource.username=${database-user}                              <4>\n"
"%prod.quarkus.datasource.password=${database-password}                          <5>\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:95
#, fuzzy
msgid "Enable reading of secrets. Note the use of `%prod` profile as we only want this setting applied when the application is running in production."
msgstr "启用对秘密的读取。注意 `%prod` profile的使用，因为我们只希望在应用程序在生产中运行时应用这一设置。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:96
#, fuzzy
msgid "Configure the name of the secret that will be used. This doesn't need to be prefixed with the `%prod` profile as it won't have any effect if secret reading is disabled."
msgstr "配置将被使用的秘密的名称。这不需要以 `%prod` 配置文件为前缀，因为如果秘密阅读被禁用，它就不会有任何影响。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:97
#, fuzzy
msgid "Quarkus will substitute `${database-name}` with the value obtained from the entry with name `database-name` of the `postgres` Secret. `somehost` is the name of the Kubernetes `Service` that was created when PostgreSQL was deployed to Kubernetes."
msgstr "Quarkus将用从 `postgres` Secret中名称为 `database-name` 的条目中获得的值代替 `${database-name}` 。 `somehost` 是Kubernetes `Service` 的名称，该名称是在PostgreSQL被部署到Kubernetes时创建的。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:98
#, fuzzy
msgid "Quarkus will substitute `${database-user}` with the value obtained from the entry with name `database-user` of the `postgres` Secret."
msgstr "Quarkus将用从 `postgres` 秘密的名称为 `database-user` 的条目中获得的值来替代 `${database-user}` 。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:99
#, fuzzy
msgid "Quarkus will substitute `${database-password}` with the value obtained from the entry with name `database-password` of the `postgres` Secret."
msgstr "Quarkus将用从 `postgres` 秘密的名称为 `database-password` 的条目中获得的值来替代 `${database-password}` 。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:101
#, fuzzy
msgid "The values above allow the application to be completely agnostic of the actual database configuration used in production while also not inhibiting the usability of the application at development time."
msgstr "上述数值允许应用程序对生产中使用的实际数据库配置完全不了解，同时也不会在开发时抑制应用程序的可用性。"

#. type: Title ===
#: upstream/_guides/kubernetes-config.adoc:102
#, fuzzy, no-wrap
msgid "Alternatives"
msgstr "替代品"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:105
#, fuzzy
msgid "The use of the `quarkus-kubernetes-config` extensions is completely optional as there are other ways an application can be configured to use ConfigMaps or Secrets."
msgstr "使用 `quarkus-kubernetes-config` 扩展是完全可选的，因为还有其他方式可以将应用程序配置为使用ConfigMaps或Secrets。"

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:108
#, fuzzy
msgid "One common alternative is to map each entry of the ConfigMap and / Secret to an environment variable on the Kubernetes `Deployment` - see link:https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables[this] for more details.  To achieve that in Quarkus, we could use the `quarkus-kubernetes` extension (which is responsible for creating Kubernetes manifests and include the following configuration) and configure it as so:"
msgstr "一个常见的替代方法是将ConfigMap和/Secret的每个条目映射到Kubernetes `Deployment` 上的环境变量--详情 link:https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables[见此] 。为了在Quarkus中实现这一点，我们可以使用 `quarkus-kubernetes` 扩展（负责创建Kubernetes清单，包括以下配置），并这样配置。"

#. type: delimited block -
#: upstream/_guides/kubernetes-config.adoc:118
#, no-wrap
msgid ""
"quarkus.kubernetes.env.secrets=postgresql\n"
"quarkus.kubernetes.env.mapping.database-name.from-secret=postgresql\n"
"quarkus.kubernetes.env.mapping.database-name.with-key=database-name\n"
"quarkus.kubernetes.env.mapping.database-user.from-secret=postgresql\n"
"quarkus.kubernetes.env.mapping.database-user.with-key=database-user\n"
"quarkus.kubernetes.env.mapping.database-password.from-secret=postgresql\n"
"quarkus.kubernetes.env.mapping.database-password.with-key=database-password\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kubernetes-config.adoc:122
#, no-wrap
msgid ""
"%prod.quarkus.datasource.jdbc.url=postgresql://somehost:5432/${database-name}\n"
"%prod.quarkus.datasource.username=${database-user}\n"
"%prod.quarkus.datasource.password=${database-password}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:125
msgid "The end result of the above configuration would be the following `env` part being applied the generated `Deployment`:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kubernetes-config.adoc:144
#, no-wrap
msgid ""
"          env:\n"
"            - name: DATABASE_NAME\n"
"              valueFrom:\n"
"                secretKeyRef:\n"
"                  key: database-name\n"
"                  name: postgresql\n"
"            - name: DATABASE_USER\n"
"              valueFrom:\n"
"                secretKeyRef:\n"
"                  key: database-user\n"
"                  name: postgresql\n"
"            - name: DATABASE_PASSWORD\n"
"              valueFrom:\n"
"                secretKeyRef:\n"
"                  key: database-password\n"
"                  name: postgresql\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kubernetes-config.adoc:147
msgid "See xref:deploying-to-kubernetes.adoc#secret-mapping[this] for more details."
msgstr ""

#. type: Title ==
#: upstream/_guides/kubernetes-config.adoc:148
#, no-wrap
msgid "Configuration Reference"
msgstr ""
