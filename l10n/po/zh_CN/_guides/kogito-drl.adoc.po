# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_guides/kogito-drl.adoc:6
#, fuzzy, no-wrap
msgid "Using Kogito to add rule engine capabilities to an application"
msgstr "使用Kogito为应用程序添加规则引擎功能"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:11
#, fuzzy
msgid "This guide demonstrates how your Quarkus application can use Kogito to add DRL files with rules."
msgstr "本指南演示了你的Quarkus应用程序如何使用Kogito来添加带有规则的DRL文件。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:16
#, fuzzy
msgid "Kogito is a next generation business automation toolkit that originates from well known Open Source projects Drools (for business rules) and jBPM (for business processes). Kogito aims at providing another approach to business automation where the main message is to expose your business knowledge (processes, rules and decisions)  in a domain specific way."
msgstr "Kogito是新一代的商业自动化工具包，源于著名的开源项目Drools（用于商业规则）和jBPM（用于商业流程）。Kogito旨在为业务自动化提供另一种方法，其主要信息是以一种特定领域的方式公开你的业务知识（流程、规则和决策）。"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:17
#, fuzzy, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:22
#, fuzzy, no-wrap
msgid "Architecture"
msgstr "建筑学"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:25
#, fuzzy
msgid "In this example, we build a very simple microservice which offers one REST endpoint:"
msgstr "在这个例子中，我们建立了一个非常简单的微服务，提供一个REST端点。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:27
#, fuzzy
msgid "`/find-approved`"
msgstr " `/find-approved` "

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:31
#, fuzzy
msgid "This endpoint will be automatically generated based on the query inserted in the Rule Unit of the DRL file.  It's an example of a stateless invocation (also called \"pure function invocation\") in which the execution of our business rules doesn't have any side effects.  The output value returned is based uniquely on the input provided."
msgstr "这个端点将根据插入DRL文件的规则单元中的查询自动生成。这是一个无状态调用（也称为 \"纯函数调用\"）的例子，其中我们的业务规则的执行没有任何副作用。返回的输出值是唯一基于所提供的输入的。"

#. type: Title ===
#: upstream/_guides/kogito-drl.adoc:32
#, fuzzy, no-wrap
msgid "Business rule"
msgstr "业务规则"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:38
#, fuzzy
msgid "A business rule allows to externalise decision logic into reusable pieces that can be easily used in declarative way. There are multiple ways of writing rules like https://drools.org/learn/dmn.html[DMN models], decision tables, decision trees, rules, etc. For this example we focus on the rule format backed by DRL (Drools Rule Language)."
msgstr "业务规则允许将决策逻辑外化为可重用的片段，可以很容易地以声明的方式使用。有多种方法来编写规则，如 link:https://drools.org/learn/dmn.html[DMN模型] ，决策表，决策树，规则等。在这个例子中，我们重点讨论由DRL（Drools规则语言）支持的规则格式。"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:39
#, fuzzy, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:43
#, fuzzy
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the complete example."
msgstr "我们建议你按照下面几节的说明，一步一步地创建应用程序。然而，你可以直接进入完整的例子。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:45
#, fuzzy
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库。 `git clone {quickstarts-clone-url}` ，或者下载一个{quickstarts-archive-url}[存档]。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:47
#, fuzzy
msgid "The solution is located in the `kogito-drl-quickstart` {quickstarts-tree-url}/kogito-quickstart[directory]."
msgstr "该解决方案位于 `kogito-drl-quickstart` {quickstarts-treeurl}/kogito-quickstart[目录]中。"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:48
#, fuzzy, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:51
#, fuzzy
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。用以下命令创建一个新项目。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:60
#, fuzzy
msgid "This command generates a Maven project, importing the `kogito-quarkus-rules` extension that comes with all needed dependencies and configuration to equip your application with business automation.  It also imports the `resteasy-reactive-jackson` extension that is needed for Kogito to expose REST services."
msgstr "该命令生成一个Maven项目，导入 `kogito-quarkus-rules` 扩展，该扩展包含所有需要的依赖和配置，使您的应用程序具备业务自动化功能。它还导入了Kogito暴露REST服务所需的 `resteasy-reactive-jackson` 扩展。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:63
#, fuzzy
msgid "If you already have your Quarkus project configured, you can add the `kogito-quarkus-rules` extension to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `kogito-quarkus-rules` 扩展到你的项目。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:68
#, fuzzy
msgid "This will add the following to your build file:"
msgstr "这将在你的构建文件中添加以下内容。"

#. type: Block title
#: upstream/_guides/kogito-drl.adoc:70
#, fuzzy, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:76
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.kie.kogito</groupId>\n"
"    <artifactId>kogito-quarkus-rules</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_guides/kogito-drl.adoc:79
#, fuzzy, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:82
#, no-wrap
msgid "implementation(\"org.kie.kogito:kogito-quarkus-rules\")\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:84
#, fuzzy, no-wrap
msgid "Writing the application"
msgstr "编写应用程序"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:88
#, fuzzy
msgid "Let's start from the application domain model.  This application will approve Loan Applications so we have a class with all the details of the wanted Loan:"
msgstr "让我们从应用程序的领域模型开始。这个应用程序将批准贷款申请，所以我们有一个包含所有想要的贷款细节的类。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:92 upstream/_guides/kogito-drl.adoc:162
#, no-wrap
msgid "package org.acme.kogito.model;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:94
#, no-wrap
msgid "public class LoanApplication {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:100
#, no-wrap
msgid ""
"   private String id;\n"
"   private Applicant applicant;\n"
"   private int amount;\n"
"   private int deposit;\n"
"   private boolean approved = false;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:102
#, no-wrap
msgid "   public LoanApplication() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:104
#, no-wrap
msgid "   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:112
#, no-wrap
msgid ""
"   public LoanApplication(String id, Applicant applicant,\n"
"                      \tint amount, int deposit) {\n"
"       this.id = id;\n"
"       this.applicant = applicant;\n"
"       this.amount = amount;\n"
"       this.deposit = deposit;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:116
#, no-wrap
msgid ""
"    public String getId() {\n"
"        return id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:120
#, no-wrap
msgid ""
"    public void setId(String id) {\n"
"        this.id = id;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:124
#, no-wrap
msgid ""
"    public Applicant getApplicant() {\n"
"        return applicant;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:128
#, no-wrap
msgid ""
"    public void setApplicant(Applicant applicant) {\n"
"        this.applicant = applicant;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:132
#, no-wrap
msgid ""
"    public int getAmount() {\n"
"        return amount;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:136
#, no-wrap
msgid ""
"    public void setAmount(int amount) {\n"
"        this.amount = amount;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:140
#, no-wrap
msgid ""
"    public int getDeposit() {\n"
"        return deposit;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:144
#, no-wrap
msgid ""
"    public void setDeposit(int deposit) {\n"
"        this.deposit = deposit;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:148
#, no-wrap
msgid ""
"    public boolean isApproved() {\n"
"        return approved;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:153
#, no-wrap
msgid ""
"    public void setApproved(boolean approved) {\n"
"        this.approved = approved;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:158
#, fuzzy
msgid "And another class with the details of the Applicant:"
msgstr "而另一个班级则有申请人的详细资料。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:164
#, no-wrap
msgid "public class Applicant {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:167
#, no-wrap
msgid ""
"   private String name;\n"
"   private int age;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:170
#, no-wrap
msgid ""
"   public Applicant() {\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:175
#, no-wrap
msgid ""
"   public Applicant(String name, int age) {\n"
"       this.name = name;\n"
"       this.age = age;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:179
#, no-wrap
msgid ""
"   public String getName() {\n"
"       return name;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:183
#, no-wrap
msgid ""
"   public void setName(String name) {\n"
"       this.name = name;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:187
#, no-wrap
msgid ""
"   public int getAge() {\n"
"       return age;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:192
#, no-wrap
msgid ""
"   public void setAge(int age) {\n"
"       this.age = age;\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:197
#, fuzzy
msgid "Next, we create a rule file `loan-rules.drl` inside the `src/main/resources/org/acme/kogito/queries` folder of the generated project."
msgstr "接下来，我们在生成项目的 `src/main/resources/org/acme/kogito/queries` 文件夹内创建一个规则文件 `loan-rules.drl` 。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:201 upstream/_guides/kogito-drl.adoc:238
#, no-wrap
msgid "package org.acme.kogito.queries;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:203
#, no-wrap
msgid "unit LoanUnit; // no need to using globals, all variables and facts are stored in the rule unit\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:206
#, no-wrap
msgid ""
"import org.acme.kogito.model.Applicant;\n"
"import org.acme.kogito.model.LoanApplication;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:212
#, no-wrap
msgid ""
"rule LargeDepositApprove when\n"
"   $l: /loanApplications[ applicant.age >= 20, deposit >= 1000, amount <= maxAmount ] // oopath style\n"
"then\n"
"   modify($l) { setApproved(true) };\n"
"end\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:218
#, no-wrap
msgid ""
"rule LargeDepositReject when\n"
"   $l: /loanApplications[ applicant.age >= 20, deposit >= 1000, amount > maxAmount ]\n"
"then\n"
"   modify($l) { setApproved(false) };\n"
"end\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:220
#, no-wrap
msgid "// ... more loans approval/rejections business rules ...\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:225
#, no-wrap
msgid ""
"// approved loan applications are now retrieved through a query\n"
"query FindApproved\n"
"   $l: /loanApplications[ approved ]\n"
"end\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:230
#, fuzzy
msgid "In this file there are some example rules to decide whether the Loan should be approved or not. The service wants the Applicant to have an age equal or greater than 20 and more than 1000 currency on their bank account.  The amount of the Loan shouldn't be more than the `maxAmount`."
msgstr "在这个文件中，有一些决定贷款是否应该被批准的例子规则。该服务希望申请人的年龄等于或大于20岁，并且他们的银行账户上有超过1000个货币。贷款的金额不应超过 `maxAmount` 。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:232
#, fuzzy
msgid "This example uses Rule Units, a new concept introduced in Kogito that helps users to encapsulate the set of rules and the facts against which those rules will be matched."
msgstr "这个例子使用了规则单元，这是Kogito中引入的一个新概念，帮助用户封装规则集和这些规则将被匹配的事实。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:234
#, fuzzy
msgid "The facts inserted will be inserted into a `DataStore`, a type-safe entry point. To make everything work, we need to define both the RuleUnit and the DataStore."
msgstr "插入的事实将被插入到一个 `DataStore` ，一个类型安全的入口点。为了使一切顺利进行，我们需要同时定义RuleUnit和DataStore。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:243
#, no-wrap
msgid ""
"import org.acme.kogito.model.LoanApplication;\n"
"import org.kie.kogito.rules.DataSource;\n"
"import org.kie.kogito.rules.DataStore;\n"
"import org.kie.kogito.rules.RuleUnitData;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:245
#, no-wrap
msgid "public class LoanUnit implements RuleUnitData {\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:248
#, no-wrap
msgid ""
"   private int maxAmount;\n"
"   private DataStore<LoanApplication> loanApplications;\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:252
#, no-wrap
msgid ""
"   public LoanUnit() {\n"
"   \tthis(DataSource.createStore(), 0);\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:257
#, no-wrap
msgid ""
"   public LoanUnit(DataStore<LoanApplication> loanApplications, int maxAmount) {\n"
"   \tthis.loanApplications = loanApplications;\n"
"   \tthis.maxAmount = maxAmount;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:259
#, no-wrap
msgid "   public DataStore<LoanApplication> getLoanApplications() { return loanApplications; }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:263
#, no-wrap
msgid ""
"   public void setLoanApplications(DataStore<LoanApplication> loanApplications) {\n"
"   \tthis.loanApplications = loanApplications;\n"
"   }\n"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:267
#, no-wrap
msgid ""
"   public int getMaxAmount() { return maxAmount; }\n"
"   public void setMaxAmount(int maxAmount) { this.maxAmount = maxAmount; }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:272
#, fuzzy
msgid "And that's it: REST endpoint to validate Loan Applications will be automatically generated from this Rule Unit."
msgstr "就这样了。验证贷款申请的REST端点将从该规则单元自动生成。"

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:274
#, fuzzy, no-wrap
msgid "Running and Using the Application"
msgstr "运行和使用应用程序"

#. type: Title ===
#: upstream/_guides/kogito-drl.adoc:276
#, fuzzy, no-wrap
msgid "Running in Dev Mode"
msgstr "在开发模式下运行"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:279
#, fuzzy
msgid "To run the microservice in dev mode, use:"
msgstr "要在开发模式下运行微服务，请使用。"

#. type: Title ===
#: upstream/_guides/kogito-drl.adoc:282
#, fuzzy, no-wrap
msgid "Running in JVM Mode"
msgstr "在JVM模式下运行"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:285
#, fuzzy
msgid "When you're done playing with dev mode you can run it as a standard Java application."
msgstr "当你玩完开发模式后，你可以把它作为一个标准的Java应用程序运行。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:287
#, fuzzy
msgid "First compile it:"
msgstr "首先编译它。"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:291
#, fuzzy
msgid "Then run it:"
msgstr "然后运行它。"

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:295
#, no-wrap
msgid "java -jar target/quarkus-app/quarkus-run.jar\n"
msgstr ""

#. type: Title ===
#: upstream/_guides/kogito-drl.adoc:297
#, fuzzy, no-wrap
msgid "Running in Native Mode"
msgstr "在本地模式下运行"

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:300
msgid "This same demo can be compiled into native code: no modifications required."
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:304
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:307
msgid "Compilation will take a bit longer, so this step is disabled by default; let's build a native executable with the following command:"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:311
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:315
#, no-wrap
msgid "target/kogito-drl-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:317
#, no-wrap
msgid "Testing the Application"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:321
msgid "To test your application, just send a request to the service with giving the person as JSON payload."
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:337
#, no-wrap
msgid ""
"curl -X POST http://localhost:8080/find-approved \\\n"
"    -H 'Content-Type: application/json'\\\n"
"    -H 'Accept: application/json' \\\n"
"    -d '{\"maxAmount\":5000,\n"
"          \"loanApplications\":[\n"
"          {\"id\":\"ABC10001\",\"amount\":2000,\"deposit\":1000,\n"
"            \"applicant\":{\"age\":45,\"name\":\"John\"}},\n"
"          {\"id\":\"ABC10002\",\"amount\":5000,\"deposit\":100,\n"
"            \"applicant\":{\"age\":25,\"name\":\"Paul\"}},\n"
"          {\"id\":\"ABC10015\",\"amount\":1000,\"deposit\":100,\n"
"            \"applicant\":{\"age\":12,\"name\":\"George\"}}\n"
"]}'\n"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:340
msgid "In the response, the list of the approved applications will be returned:"
msgstr ""

#. type: delimited block -
#: upstream/_guides/kogito-drl.adoc:347
#, no-wrap
msgid ""
"[{\"id\":\"ABC10001\",\n"
"    \"applicant\":{\"name\":\"John\",\"age\":45},\n"
"    \"amount\":2000,\"deposit\":100,\"approved\":true}]\n"
msgstr ""

#. type: Title ==
#: upstream/_guides/kogito-drl.adoc:349
#, no-wrap
msgid "References"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:352
msgid "https://kogito.kie.org[Kogito Website]"
msgstr ""

#. type: Plain text
#: upstream/_guides/kogito-drl.adoc:352
msgid "https://docs.jboss.org/kogito/release/latest/html_single[Kogito Documentation]"
msgstr ""
