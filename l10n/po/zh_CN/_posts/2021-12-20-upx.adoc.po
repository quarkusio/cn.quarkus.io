# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-12-20-upx.adoc:1
#, no-wrap
msgid "cescoffier"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2021-12-20-upx.adoc:1
#, no-wrap
msgid "2021-12-20"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-12-20-upx.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-12-20-upx.adoc:1
#, no-wrap
msgid "How does Quarkus make your native executable smaller using UPX"
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-12-20-upx.adoc:1
#, no-wrap
msgid "native feature"
msgstr ""

#. type: YAML Front Matter: title
#: upstream/_posts/2021-12-20-upx.adoc:1
#, no-wrap
msgid "Compressing native executables with UPX"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:14
msgid "UPX is is an open-source, portable, high-performance *executable packer* initially created in 1996.  It takes an executable as input and produces a compressed executable.  Readers from a _certain_ age may have already used UPX a long time ago when programs needed to be compressed to fit on a floppy disk.  More than 20 years later, UPX is still rocking."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:21
msgid "In Quarkus 2.6, we integrated UPX compression in the Quarkus build.  So, Quarkus can automatically produce a compressed executable.  This post explains how you can use this new feature.  But, before going further, you need to understand that **nothing comes for free**.  The compressed executable is smaller on disk, but its memory usage is higher.  So make sure to read the \"big warning\" section before using it."
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-12-20-upx.adoc:22
#, no-wrap
msgid "Getting you ready"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:25
msgid "Quarkus can compress your executable if you have installed UPX on your system or use an in-container build."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:30
msgid "UPX is available on most operating systems.  So, you should be able to download it from https://github.com/upx/upx/releases/tag/v3.96[their release page].  UPX is cross-platform.  So you can compress a Linux 64 bits executable even from a macOS or Windows machine."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:36
msgid "If installing UPX is not an option for you, you can ask Quarkus to build your native executable using an in-container build (with `-Dquarkus.native.container-build=true`).  You will get a Linux 64 bits executable (perfect for containers but unusable from your machine if you don't use Linux).  The in-container build provides UPX so that it can compress the executable.  When using an in-container build, you don't need GraalVM or UPX on your machine.  This option is particularly interesting on CI."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:38
msgid "In this post, we will use the first approach. The https://quarkus.io/version/main/guides/building-native-image#creating-a-container[Building a Native Executable] page explains how to use in-container build."
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-12-20-upx.adoc:39
#, no-wrap
msgid "Let's get something to compress"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:44
msgid "First, we need an application.  To keep things simple, let's create a new application from https://code.quarkus.io/?a=upx-compression-demo&e=resteasy-reactive-jacksoncode.quarkus.io.  This application uses RESTEasy Reactive and its Jackson support, but the compression works with any project, and we won't even look at the code."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:47
msgid "Before using UPX, we need to measure the disk space and memory usage of the non-compressed native executable.  To do that, we need the native executable:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:51
#, no-wrap
msgid "> ./mvnw package -Dnative\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:54
msgid "The resulting executable use ~46 MB of disk space:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:58
#, no-wrap
msgid ".rwxr-xr-x 46M clement 11 Dec 17:44 upx-compression-demo-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:62
msgid "Now, let's have a look at the memory consumption.  Start the application using:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:66
#: upstream/_posts/2021-12-20-upx.adoc:153
#, no-wrap
msgid "> ./target/upx-compression-demo-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:69
msgid "In another terminal, invoke the application using curl and gets its memory usage:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:75
#: upstream/_posts/2021-12-20-upx.adoc:161
#, no-wrap
msgid ""
"> curl http://localhost:8080/hello\n"
"Hello RESTEasy Reactive%\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:79
#, no-wrap
msgid ""
"> rss runner\n"
"PID 0M COMMAND\n"
"3947 21M ./target/upx-compression-demo-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:82
msgid "So, it takes 21 MB of https://en.wikipedia.org/wiki/Resident_set_size[RSS], basically the amount of RAM it uses."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:84
msgid "The `rss` command is the following function:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:90
#, no-wrap
msgid ""
"rss () {\n"
"  pgrep $1 | xargs ps -o pid,rss,command -p | awk '{$2=int($2/1024)\"M\";}{ print;}'\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:93
msgid "Check https://quarkus.io/guides/performance-measure[Quarkus - Measuring Performance] to learn more about RSS and how to measure it"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-12-20-upx.adoc:94
#, no-wrap
msgid "Configuring the compression"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:98
msgid "To compress your executable, you need to configure the compression level.  The compression goes from 1 to 10:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:100
msgid "`1`: faster compression"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:101
msgid "`9`: better compression"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:102
msgid "`10`: best compression (can be slow for big files)"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:104
msgid "Configure the level from the `application.properties` file:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:108
#, no-wrap
msgid "quarkus.native.compression.level=7\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:111
msgid "That's all you need to do to enable the compression."
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-12-20-upx.adoc:112
#, no-wrap
msgid "Building the compressed native executable"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:115
msgid "Let's regenerate the native executable. This time, because of the configured compression level, Quarkus will compress it:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:125
#, no-wrap
msgid ""
"> ./mvnw package -Dnative\n"
"...\n"
"...\n"
"[INFO] [io.quarkus.deployment.pkg.steps.UpxCompressionBuildStep] Executing /usr/local/bin/upx -7 /Users/clement/Downloads/upx-compression-demo/target/upx-compression-demo-1.0.0-SNAPSHOT-runner\n"
" Ultimate Packer for eXecutables\n"
" Copyright (C) 1996 - 2020\n"
" UPX 3.96 Markus Oberhumer, Laszlo Molnar & John Reiser Jan 23rd 2020\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:129
#, no-wrap
msgid ""
" File size            Ratio  Format      Name\n"
" -------------------- ------ ----------- -----------\n"
" 46242352 -> 14774288 31.95% macho/amd64 upx-compression-demo-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:131
#, no-wrap
msgid "... \n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:134
msgid "As you can see, this time, it runs UPX to compress the native executable. If you check the size, you should get something around 15 MB:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:138
#, no-wrap
msgid ".rwxr-xr-x 15M clement 11 Dec 18:03 upx-compression-demo-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:141
msgid "So we went from 46 M to 15 M; this is a considerable gain, even if it still does not fit on a floppy disk."
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-12-20-upx.adoc:142
#, no-wrap
msgid "The **BIG** warning"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:147
msgid "However, as said in the introduction, nothing comes for free.  Earlier, we also measured the memory usage of the uncompressed executable (21 MB).  Let's compare with the compressed executable."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:149
msgid "Run the application with:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:156
msgid "And, in another terminal, run:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-12-20-upx.adoc:165
#, no-wrap
msgid ""
"> rss runner\n"
"PID 0M COMMAND\n"
"4501 57M ./target/upx-compression-demo-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:170
#, no-wrap
msgid ""
"**57 MB**! So, it uses ~2.7 times more RSS than the uncompressed executable. \n"
"This overhead is because the compressed executable must unpack the program on startup and store it in memory. \n"
"It can also increase the startup time, but this startup overhead is insignificant most of the time. \n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-12-20-upx.adoc:171
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:175
msgid "UPX lets you compress your native executables.  In Quarkus 2.6, you only need to configure the compression level, and voilà, it compresses it for you."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:178
msgid "However, do not think it all comes for free.  While the gain on disk space is fantastic, do not ignore the RSS overhead."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-20-upx.adoc:181
msgid "UPX compression can benefit CLI tools or environments where disk space is a constrained resource.  For long-running applications or microservices, the RSS overhead reduces the deployment density.  So, if the storage is not a problem or if the density of deployment is crucial for you, better not compress your executable."
msgstr ""
