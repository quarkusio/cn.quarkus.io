# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-05-09 16:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "MEF and Sofis use Quarkus as core component of a new innovative architecture"
msgstr "MEF和Sofis使用Quarkus作为一个新的创新架构的核心组件"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "About us"
msgstr "关于我们"

#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid ""
"The Ministry of Economy and Finance (MEF) of Uruguay is a government ministry. +\n"
"Website: https://www.gub.uy/ministerio-economia-finanzas"
msgstr ""
"乌拉圭经济和财政部（MEF）是一个政府部门。\n"
"\n"
" 网站 link:https://www.gub.uy/ministerio-economia-finanzas[： https://www.gub.uy/ministerio-economia-finanzas]"

#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid ""
"Sofis Solutions is a company with more than 18 years of experience in the digital transformation of Latin American organizations and technological inclusion. Focuses mainly on projects for the development of digital government and the resolution of social, environmental and governance problems. +\n"
"Website: https://www.sofis.lat"
msgstr ""
"索菲斯解决方案公司（Sofis Solutions）在拉丁美洲组织的数字化转型和技术包容方面拥有超过 18 年的经验。主要专注于发展数字政府以及解决社会、环境和治理问题的项目。\n"
"\n"
" 网站 link:https://www.sofis.lat[：https://www.sofis.lat]"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Problem statement"
msgstr "问题陈述"

#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid ""
"The current Integrated Financial Information System (SIIF) of the Uruguayan Ministry of Economy and Finance relies on Oracle Forms, which presents certain drawbacks such as limited compatibility, inflexibility, high maintenance costs, and limited support. To ensure long-term viability and modernization, an architecture update is needed. The main objective is to establish a scalable reference architecture that enables SIIF to evolve as part of the modernization process.\n"
"In late 2021 an architecture team was formed, and work began following the https://pubs.opengroup.org/architecture/togaf92-doc/arch/[TOGAF Architecture Development Method 9.2]."
msgstr "乌拉圭经济和财政部目前的综合财务信息系统（SIIF）依赖于 Oracle Forms，该系统存 在一些缺点，如兼容性有限、缺乏灵活性、维护成本高以及支持有限。为确保长期可行性和现代化，需要进行架构更新。主要目标是建立一个可扩展的参考架构，使 SIIF 能够在现代化进程中不断发展。2021 年底，组建了一个架构团队，并开始按照 link:https://pubs.opengroup.org/architecture/togaf92-doc/arch/[TOGAF 架构开发方法 9.2] 开展工作。"

#. type: Title ===
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Key requirements"
msgstr "关键要求"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The key requirements of this modernized architecture were:"
msgstr "这个现代化架构的关键要求是："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "It must be possible to audit transactions and changes made to entities."
msgstr "必须能够审计交易和对实体所作的改变。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "During runtime, software systems should generate metrics that provide visibility into the operational status of each component. These metrics should be accessible through a centralized monitoring platform, which should enable the visualization of the current status and generation of alerts."
msgstr "在运行期间，软件系统应该产生指标，提供每个组件运行状态的可见性。这些指标应该可以通过一个集中的监控平台进行访问，该平台应该能够对当前的状态进行可视化并产生警报。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Under normal production conditions, the system must respond with a latency of less than one second."
msgstr "在正常的生产条件下，系统必须以低于一秒的延迟做出反应。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "A monthly availability of the solution of 99% is required within office hours and 95% outside of office hours."
msgstr "在办公时间内，解决方案的月可用性需要达到99%，在办公时间外需要达到95%。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Systems should be able to handle an increasing workload, such as the addition of new user groups, higher volumes of traffic, or more complex transactions, by utilizing horizontal scaling techniques. Services must be deployed as Docker containers."
msgstr "系统应该能够通过利用横向扩展技术来处理不断增加的工作量，如增加新的用户组、更高的流量或更复杂的交易。服务必须作为Docker容器部署。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Communication between systems using REST (preferred) and SOAP (legacy) protocols must be supported."
msgstr "必须支持使用REST（首选）和SOAP（传统）协议的系统间通信。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Software must be able to be tested on a unitary, integration and system-wide basis."
msgstr "软件必须能够在单元、集成和全系统的基础上进行测试。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The central data repository of the transactional system must maintain permanent data integrity and consistency. This consistency must be ensured despite technical failures or crashes of other components."
msgstr "交易系统的中央数据存储库必须保持永久的数据完整性和一致性。尽管其他组件出现技术故障或崩溃，这种一致性必须得到保证。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "All the log data and exceptions must be properly captured and centrally managed."
msgstr "所有的日志数据和异常情况都必须被适当地捕获和集中管理。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Software that is being developed should be highly configurable to ensure it can be deployed across various installation environments, such as development, testing, pre-production, production, etc. without the need for recompiling it for each environment."
msgstr "正在开发的软件应该是高度可配置的，以确保它可以在各种安装环境中部署，如开发、测试、预生产、生产等，而不需要为每个环境重新编译。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Components should easily integrate with distributed event streaming platforms as Kafka."
msgstr "组件应该很容易与Kafka等分布式事件流平台集成。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Framework utilized must enhance developer experience. Live reload while coding is highly valuable."
msgstr "利用的框架必须增强开发人员的经验。编码时的实时重新加载是非常有价值的。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Coding must be aligned with Java EE and MicroProfile ecosystems."
msgstr "编码必须与Java EE和MicroProfile生态系统相一致。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Components must provide a mechanism that allows health monitoring through the health monitor of the platform."
msgstr "组件必须提供一种机制，允许通过平台的健康监测器进行健康监测。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "We selected Quarkus as the framework for our backends based on its ability to fulfill all our critical requirements. Its extensive features, capabilities, and active community were precisely what we were looking for, making it an essential tool for our projects."
msgstr "我们选择Quarkus作为我们后台的框架，是因为它能够满足我们所有的关键要求。它广泛的特性、功能和活跃的社区正是我们所寻找的，使它成为我们项目的重要工具。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The architecture diagrams are made following the https://c4model.com/[C4 model]. Systems are composed of modules implemented using a macroservices approach that are larger than microservices but smaller than monolithic applications. A simplified version of the system landscape is presented below:"
msgstr "架构图是按照 link:https://c4model.com/[C4模型] 制作的。系统由使用宏服务方法实现的模块组成，这些模块比微服务大，但比单体应用小。下面介绍一个简化版的系统图："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Description:"
msgstr "描述："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "System 1 to N. Can be any of the systems used in MEF."
msgstr "系统1至N，可以是MEF中使用的任何系统。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Security system. Management of users, roles, operations, audit logs, etc."
msgstr "安全系统。对用户、角色、操作、审计日志等进行管理。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "https://mi.iduruguay.gub.uy/[ID Uruguay]. AGESIC Identity and Authentication Provider. Users must start an OAuth2 authentication flow against this provider via MEF applications."
msgstr "link:https://mi.iduruguay.gub.uy/[ID乌拉圭] 。AGESIC身份和认证提供商。用户必须通过MEF应用程序针对该提供商启动OAuth2认证流程。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "External system. Represents an external system that consumes MEF APIs."
msgstr "外部系统。代表一个消耗MEF API的外部系统。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "In addition to the internal systems, some of the most relevant tools we use are:"
msgstr "除了内部系统外，我们使用的一些最相关的工具是："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Kubernetes. Container orchestrator."
msgstr "Kubernetes。容器协调器。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Ceph. Storage platform."
msgstr "Ceph。存储平台。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Elasticsearch, Fluentd, Kibana stack. Storage and visualization of log and audit data."
msgstr "Elasticsearch, Fluentd, Kibana堆栈。日志和审计数据的存储和可视化。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Prometheus, Alertmanager, Grafana stack. Visualization of infrastructure and services metrics. Also responsible for generating alerts."
msgstr "Prometheus, Alertmanager, Grafana栈。基础设施和服务指标的可视化。同时负责生成警报。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Matomo. Used to obtain user analytics and their behavior on websites."
msgstr "Matomo。用来获取用户分析和他们在网站上的行为。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Apache Kafka. Distributed event streaming platform."
msgstr "Apache Kafka。分布式事件流平台。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Apache APISIX API Gateway. Manage and expose APIs."
msgstr "Apache APISIX API网关。管理和公开API。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "ArgoCD. GitOps continuous delivery tool."
msgstr "ArgoCD。GitOps持续交付工具。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "GitLab. Code repository and CI/CD DevOps tool."
msgstr "GitLab。代码库和CI/CD DevOps工具。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Nexus. Repository for libraries and Docker images."
msgstr "Nexus。库和Docker镜像的存储库。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "SonarQube. Static code analysis tool."
msgstr "SonarQube。静态代码分析工具。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Kubernetes"
msgstr "库伯内特斯"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Kubernetes is an open-source container orchestration system for automating software deployment, scaling, and management. The combination of Quarkus and Kubernetes provides an ideal environment for creating scalable, fast, and lightweight applications. Our applications and tools are deployed in two on-premise Kubernetes clusters for production and non-production environments."
msgstr "Kubernetes是一个开源的容器编排系统，用于自动化软件部署、扩展和管理。Quarkus和Kubernetes的结合为创建可扩展、快速和轻量级的应用程序提供了一个理想的环境。我们的应用程序和工具被部署在两个内部的Kubernetes集群中，用于生产和非生产环境。"

#. type: Title ===
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "ArgoCD and Kustomize"
msgstr "ArgoCD和Kustomize"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "ArgoCD is a Kubernetes operator that utilizes CRDs (Custom Resource Definitions) to configure its operation. These CRDs enable the definition of infrastructure through Git-stored files and automate deployment following any changes made."
msgstr "ArgoCD是一个Kubernetes运营商，利用CRD（自定义资源定义）来配置其操作。这些CRD通过Git存储的文件实现了基础设施的定义，并在做出任何改变后自动部署。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Kustomize adheres to Kubernetes principles by leveraging Kubernetes objects to define configuration files and manage these configurations declaratively. A Kustomization object defines how to generate or transform other Kubernetes objects and is created in a file named kustomization.yaml, which can be edited by Kustomize itself. Kustomizations can be patched with overlays to overwrite base settings and create variants. ArgoCD offers seamless Kustomize support, allowing for more efficient and effective management of Kubernetes configurations."
msgstr "Kustomize坚持Kubernetes原则，利用Kubernetes对象来定义配置文件，并声明性地管理这些配置。Kustomization对象定义了如何生成或转换其他Kubernetes对象，并在一个名为kustomization.yaml的文件中创建，该文件可由Kustomize自己编辑。Kustomizations可以用覆盖物进行修补，以覆盖基本设置并创建变体。ArgoCD提供无缝的Kustomize支持，使Kubernetes配置的管理更加高效和有效。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Ceph"
msgstr "Ceph"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Ceph is an open source software-defined storage platform that implements object storage on a single distributed computer cluster and provides 3-in-1 interfaces for object, block and file level storage. We have two on-premise clusters (prod and non-prod) that are integrated with our Kubernetes clusters."
msgstr "Ceph是一个开源的软件定义的存储平台，在单个分布式计算机集群上实现对象存储，并为对象、块和文件级别的存储提供3合1接口。我们有两个内部集群（prod和non-d），与我们的Kubernetes集群集成。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "CI/CD"
msgstr "CI/CD"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "We are currently using a customized CI/CD flow based primarily on https://nvie.com/posts/a-successful-git-branching-model/[A successful Git branching model]. All the CI/CD tasks are implemented using GitLab."
msgstr "我们目前正在使用一个定制的CI/CD流程，主要是基于 link:https://nvie.com/posts/a-successful-git-branching-model/[一个成功的Git分支模型] 。所有的CI/CD任务都是用GitLab实现的。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "We follow the \"build once deploy anywhere\" approach whenever possible. The code is built using s2i (source to image) and the images are propagated through the different environments (development, integration, test/QA, training, preprod and production)."
msgstr "我们尽可能地遵循 \"一次构建，随地部署 \"的方法。代码使用s2i（源代码到图像）构建，图像通过不同的环境（开发、集成、测试/QA、培训、预生产和生产）传播。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Our type of development requires us to have 3 unique long lived branches per project:"
msgstr "我们的开发类型要求我们每个项目有3个独特的长寿分支："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Main. Where all the developers continuously merge their new features."
msgstr "主要的。在那里，所有的开发人员不断地合并他们的新功能。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Release. When the code in main is ready to be released to QA, it is merged to the release branch. Release can be evolved independently of main while bugfixes are applied."
msgstr "发布。当main中的代码可以发布给QA时，它就被合并到发布分支。发布分支可以独立于main进行演化，同时对bug进行修复。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Production. Where the code released to production is. Hotfixes branches are created from it."
msgstr "生产。发布到生产中的代码在哪里。热修复分支是由它创建的。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, no-wrap
msgid "Metrics"
msgstr "指标"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The Prometheus-Grafana combination has become one of the most popular solutions for monitoring, alerting, and visualization in the cloud-native space. Prometheus is an open source systems monitoring and alerting toolkit. Grafana is a multi-platform open source analytics and interactive visualization web application. It provides out of the box support to display data collected by Prometheus."
msgstr "Prometheus-Grafana组合已经成为云原生领域中最受欢迎的监控、警报和可视化解决方案之一。Prometheus是一个开源的系统监控和警报工具包。Grafana是一个多平台的开源分析和互动可视化网络应用。它提供了开箱即用的支持，以显示由Prometheus收集的数据。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "With them, we can gather, visualize and react to metrics from Kubernetes, CephFS, Apache APISIX, Elasticsearch, Kafka, Zookeeper, databases, backends, frontends and more."
msgstr "有了它们，我们可以从Kubernetes、CephFS、Apache APISIX、Elasticsearch、Kafka、Zookeeper、数据库、后端、前端等收集、可视化并对指标做出反应。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "To start exposing metrics with Quarkus, the `quarkus-micrometer-registry-prometheus` extension must be added. This allows us to get interesting metrics about our application as CPU, heap, non heap, http requests, etc. With the default HTTP metrics exposed, we are able to get the following insights by method:"
msgstr "要开始用Quarkus暴露指标，必须添加 `quarkus-micrometer-registry-prometheus` 扩展。这使我们能够获得关于我们应用程序的有趣的指标，如CPU、堆、非堆、http请求等。有了默认的HTTP指标，我们就能按方法获得以下洞察力："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Total number of requests"
msgstr "请求总数"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Maximum request duration"
msgstr "最大请求时间"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Average request duration"
msgstr "平均请求时间"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Sum of the duration of every request"
msgstr "每个请求的持续时间之和"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "To determine whether the maximum request duration is an isolated case or is occurring on many requests, percentiles must be used."
msgstr "为了确定最大请求持续时间是个别情况还是在许多请求中出现，必须使用百分位数。"

#. type: Title ===
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Percentiles"
msgstr "百分比"

#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid ""
"A percentile is a measure used in statistics indicating the value below which a given percentage of observations in a group of observations fall. For example, the response time for a HTTP request below which 90% of the response time values lie, is called the 90-percentile response time.\n"
"The recommended way to calculate percentiles is using the \"Percentiles Histogram\" approach. See https://micrometer.io/docs/concepts#_histograms_and_percentiles.\n"
"Quarkus (and Micrometer) let you enable this kind of metric by defining a `@Singleton` MeterFilterProducer. Example code below:"
msgstr "百分位数是统计中使用的一种度量，表示一组观察值中低于该值的观察值所占的百分比。例如，HTTP 请求的响应时间中，90% 的响应时间值都低于这个值，这个值被称为 90 百分位响应时间。计算百分位数的推荐方法是使用 \"百分位数直方图 \"方法。 link:https://micrometer.io/docs/concepts#_histograms_and_percentiles[请参见 https://micrometer.io/docs/concepts#_histograms_and_percentiles。] Quarkus（和 Micrometer）允许你通过定义 `@Singleton` MeterFilterProducer 来启用这种指标。下面是示例代码："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "With this new exposed metrics we can define, for example:"
msgstr "有了这个新暴露的指标，我们可以定义，例如："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "An alert in Prometheus that will fire when the 95 percentile request duration time is above 300ms."
msgstr "在Prometheus中，当95％的请求持续时间超过300ms时，将发出警报。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "An interactive chart in Grafana to display some desired percentiles as 50, 75, 90, 95, 99 and 1:"
msgstr "在Grafana中的一个互动图表，显示一些所需的百分位数为50、75、90、95、99和1："

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Authentication and authorization"
msgstr "认证和授权"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Our API security is implemented with Json Web Tokens. We have a centralized auth service that generates JWT, which are used by users and applications to consume the exposed APIs. Every backend has access to the public key and can validate the signature on their own. For protecting the endpoints, the `@RolesAllowed` annotation is being used. In addition to that, the `quarkus-security` extension must be added."
msgstr "我们的API安全是通过Json Web Tokens实现的。我们有一个集中的认证服务来生成JWT，用户和应用程序使用这些JWT来消费暴露的API。每个后端都可以访问公钥，并可以自行验证签名。为了保护端点，正在使用 `@RolesAllowed` 注释。除此以外，必须添加 `quarkus-security` 扩展。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "You may already be familiar with the \"groups\" attribute in JSON Web Tokens (JWTs), which typically maps to the `@RolesAllowed` property in many jwt-security validation libraries. However, this approach assumes that roles need to be hardcoded, which may not always be suitable. In our case, we wanted the security on the endpoints to be operation-oriented, so that a user can have dynamic roles, with different operations. To accomplish this:"
msgstr "你可能已经熟悉了JSON网络令牌（JWTs）中的 \"组 \"属性，它通常映射到许多jwt-security验证库中的 `@RolesAllowed` 属性。然而，这种方法假设角色需要被硬编码，这可能并不总是合适的。在我们的案例中，我们希望端点上的安全是面向操作的，这样一个用户就可以拥有动态的角色，有不同的操作。为了达到这个目的："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Each endpoint must be mapped to a single operation."
msgstr "每个端点必须被映射到一个单一的操作。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "A way to map between JWT groups and operations is needed. Storing operations in the groups attribute of a JWT is not ideal, as the array could be significant, resulting in a large token."
msgstr "需要一种方法来映射JWT组和操作之间。将操作存储在JWT的组属性中并不理想，因为数组可能很重要，会导致一个大的标记。"

#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid ""
"We decided to implement the JWT validation using a `ContainerRequestFilter`, as exposed in https://quarkus.io/guides/security-customization#jaxrs-security-context. In that filter the JWT groups are obtained and a cached method with `@CacheResult` is invoked to obtain the related operations.\n"
"As of today, we are using a memory cache with Caffeine for simplicity, but the new Redis as cache backend introduced in Quarkus 3 seems to be a good alternative, as we would be able to share the cache between all the instances. See https://quarkus.io/version/main/guides/cache-redis-reference."
msgstr "我们决定使用 `ContainerRequestFilter` 来实现 JWT 验证，如 https://quarkus.io/guides/security-customization#jaxrs-security-context 所示。在该过滤器中会获取 JWT 组，并调用 `@CacheResult` 的缓存方法来获取相关操作。目前，为了简单起见，我们使用的是 Caffeine 的内存缓存，但 Quarkus 3 中新引入的 Redis 作为缓存后端似乎是一个不错的替代方案，因为我们可以在所有实例之间共享缓存。请参见 link:https://quarkus.io/version/main/guides/cache-redis-reference[https://quarkus.io/version/main/guides/cache-redis-reference。]"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The `SecurityContext` `isUserInRole` method is overrided as:"
msgstr " `SecurityContext` `isUserInRole` 方法被重写为："

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Audit requests"
msgstr "审计请求"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "A common requirement is to audit the requests that are made to our APIs. It was decided to:"
msgstr "一个共同的要求是审计向我们的API发出的请求。我们决定"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Store it as data streams in Elasticsearch."
msgstr "将其作为数据流存储在Elasticsearch中。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Store it asynchronously, without interfering with the request."
msgstr "异步存储，不干扰请求。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Always audit POST, PUT, PATCH, and DELETE methods. In a few special cases also GET methods."
msgstr "始终审核POST、PUT、PATCH和DELETE方法。在一些特殊情况下，也要审计GET方法。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "We wanted to audit params like service, requestDate, responseDate, method, baseUri, path, queryParams, userId, ip, traceId, traceApplicationChain, responseStatus, requestBody (optional) and responseBody (optional)."
msgstr "我们想审计服务、请求日期、响应日期、方法、baseUri、路径、queryParams、userId、ip、traceId、traceApplicationChain、responseStatus、requestBody（可选）和responseBody（可选）等参数。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "For doing so, we implemented some utility classes:"
msgstr "为了做到这一点，我们实现了一些实用类："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "A `ContainerRequestFilter`, to get some params such as request start date and propagate them through `ContainerRequestContext`."
msgstr "一个 `ContainerRequestFilter` ，以获得一些参数，如请求开始日期，并通过 `ContainerRequestContext` 进行传播。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "A `ContainerResponseFilter`, to get the rest of the params and invoke a method in charge of sending an audit event to a Kafka topic. We decided to send the event only in the response filter for performance reasons, assuming that there can be minimal loss if it is not invoked."
msgstr "一个 `ContainerResponseFilter` ，以获得其余的参数，并调用一个方法，负责发送审计事件到Kafka主题。出于性能的考虑，我们决定只在响应过滤器中发送事件，假设不调用它的话，损失可能会很小。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "An `@AuditedEndpoint` annotation, used to identify and customize the methods that we want to audit. The API methods not annotated, are ignored by the filter. This annotation has two boolean parameters that can be customized at method level: `auditRequestBody` (true by default) and `auditResponseBody` (false by default)."
msgstr "一个 `@AuditedEndpoint` 注释，用于识别和定制我们想要审计的方法。没有注解的API方法，会被过滤器忽略。这个注解有两个布尔参数，可以在方法层面进行自定义： `auditRequestBody` （默认为真）和 `auditResponseBody` （默认为假）。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Sending an imperative event to Kafka can be done with an Emitter (see https://quarkus.io/guides/kafka#sending-messages-with-emitter). The `quarkus-smallrye-reactive-messaging-kafka` extension has to be added."
msgstr "向Kafka发送一个强制性事件可以通过Emitter（ https://quarkus.io/guides/kafka#sending-messages-with-emitter 来完成。必须要添加 `quarkus-smallrye-reactive-messaging-kafka` 扩展。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "After we have the events in the topic, we need a way to process and store them in Elasticsearch. To perform this task, we are using the Elasticsearch Service Sink Connector deployed within Kafka Connect. Kafka Connect is a tool for scalably and reliably streaming data between Apache Kafka and other data systems. It makes it simple to quickly define connectors that move large data sets in and out of Kafka. See https://docs.confluent.io/platform/current/connect/index.html."
msgstr "当我们有了主题中的事件后，我们需要一种方法来处理和存储它们在Elasticsearch中。为了执行这项任务，我们使用了部署在Kafka Connect中的Elasticsearch Service Sink Connector。Kafka Connect是一个用于在Apache Kafka和其他数据系统之间可扩展和可靠地传输数据的工具。它使快速定义连接器变得简单，可以将大型数据集移入和移出Kafka。参见 https://docs.confluent.io/platform/current/connect/index.html "

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "In addition, we are also employing Hibernate Envers for entity-oriented auditing."
msgstr "此外，我们还采用了Hibernate Envers进行面向实体的审计。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Besides audit event processing, Kafka will be used as a mechanism for communication between services (and systems) that have independent databases."
msgstr "除了审计事件处理，Kafka将被用作拥有独立数据库的服务（和系统）之间的通信机制。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Database schemas and migrations"
msgstr "数据库模式和迁移"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "We have several environments e.g. development, integration, test/QA, training, preprod and production.  It is necessary to automate the execution of the scripts as the services are deployed in the different environments. Flyway is a great tool to achieve that. It allows you to:"
msgstr "我们有几个环境，如开发、集成、测试/QA、培训、预开发和生产。当服务被部署到不同的环境时，有必要自动执行脚本。Flyway是一个很好的工具来实现这一点。它允许你："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Recreate a database from scratch."
msgstr "从头开始重新创建一个数据库。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Make it clear at all times what state a database is in."
msgstr "在任何时候都要明确数据库处于什么状态。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Migrate in a deterministic way from your current version of the database to a newer one."
msgstr "以一种确定的方式从你目前的数据库版本迁移到一个较新的版本。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The `quarkus-flyway` extension is needed. When running tests, or deploying the service, the migration functionality will kick in to apply the necessary scripts."
msgstr "需要 `quarkus-flyway` 扩展。当运行测试或部署服务时，迁移功能将启动以应用必要的脚本。"

#. type: Title ===
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Our custom case (1)"
msgstr "我们的定制案例 (1)"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Our system types require having groups of services sharing a single database (see https://microservices.io/patterns/data/shared-database.html). Additionaly, in some cases, legacy databases exist. Recreating the full structure from scratch with new migrations is a difficult task."
msgstr "我们的系统类型要求有一组服务共享一个数据库（ https://microservices.io/patterns/data/shared-database.html 。另外，在某些情况下，存在遗留的数据库。通过新的迁移从头开始重新创建完整的结构是一项困难的任务。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Decisions and implications:"
msgstr "决定和影响："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "For legacy databases, a Flyway \"baseline\" should be created with the current state, and migrations applied after that point."
msgstr "对于传统的数据库，应该用当前的状态创建一个Flyway \"基线\"，并在这之后应用迁移。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Each service has its own schema in the database and is responsible for its evolution. A `flyway_schema_history` table by schema is needed."
msgstr "每个服务在数据库中都有自己的模式，并负责其演变。需要一个按模式划分的 `flyway_schema_history` 表。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "In certain cases, a table in schema A can have a foreign key to schema B. Therefore, one service may need structures from another in order to run correctly. This enforces that the service owner of schema B must be released before the owner of schema A. As a common rule, we avoid if possible having bidirectional foreign keys between A and B."
msgstr "在某些情况下，模式A中的表可以有一个指向模式B的外键。因此，一个服务可能需要另一个服务的结构，以便正常运行。这就要求模式B的服务所有者必须在模式A的所有者之前被释放。作为一个通用规则，我们尽可能避免在A和B之间有双向外键。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Automated tests must run against an existing database with all the structures. A single backend cannot re-create the entire database. See <<Automatic testing / Code analysis>>."
msgstr "自动测试必须针对现有的具有所有结构的数据库运行。单个后端不能重新创建整个数据库。参见 link:#Automatic testing / Code analysis[[自动测试/代码分析]] 。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Note that when working with some databases like Oracle or MySQL, failed DDL migrations are not automatically rolled back. See https://flywaydb.org/documentation/learnmore/faq#rollback. We found two ways of mitigating this situation:"
msgstr "请注意，当与某些数据库如Oracle或MySQL一起工作时，失败的DDL迁移不会自动回滚。参见 https://flywaydb.org/documentation/learnmore/faq#rollback 我们发现有两种方法可以缓解这种情况："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Run the tests in a environment where `quarkus.flyway.clean-on-validation-error=true`. That allows to test all the migrations before releasing to another environment. Mostly useful in new services that do not share the database."
msgstr "在 `quarkus.flyway.clean-on-validation-error=true` 的环境中运行测试。这样就可以在发布到另一个环境之前测试所有的迁移工作。在不共享数据库的新服务中，这一点最为有用。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Create independent migrations by feature. In this case, migrations should be small, and it will be easier to rollback. To avoid name collision between migrations of the same version, a timestamp in the name and `quarkus.flyway.out-of-order=true` might be used."
msgstr "按功能创建独立的迁移。在这种情况下，迁移的规模应该很小，而且回滚起来也会比较容易。为了避免同一版本的迁移之间出现名称冲突，可以在名称中使用时间戳， `quarkus.flyway.out-of-order=true` 。"

#. type: Title ===
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Our custom case (2)"
msgstr "我们的定制案例 (2)"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The management of users, roles, operations of all the systems is handled in one transversal security management system with his own database. When a backend exposes a new API, it defines a new operation and a `@RolesAllowed` annotation. It might also need to create new roles if needed. This new data must be persisted/updated in the security system database. We need to trigger such updates as part of the service CI/CD flow. To resolve this situation, the services need two folders of migrations: `db/migration` (for the service schema) and `db/migrationsecurity` (for the security database). At the security database, each service has its own \"flyway_schema_history\" table, to keep record of the migrations executed. For example \"fsh_service_A\", \"fsh_service_B\", etc."
msgstr "所有系统的用户、角色、操作的管理都在一个横向的安全管理系统中处理，该系统有自己的数据库。当一个后端暴露了一个新的API，它定义了一个新的操作和一个 `@RolesAllowed` 注释。如果需要，它可能还需要创建新的角色。这些新的数据必须在安全系统的数据库中被持久化/更新。我们需要将这种更新作为服务CI/CD流程的一部分来触发。为了解决这种情况，服务需要两个迁移文件夹： `db/migration` （用于服务模式）和 `db/migrationsecurity` （用于安全数据库）。在安全数据库中，每个服务都有自己的 \"flyway_schema_history \"表，以记录所执行的迁移。例如 \"fsh_service_A\"，\"fsh_service_B\"，等等。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "How do we do it? The default `db/migration` folder is handled by Quarkus when running tests or deploying. On the other hand, the `db/migrationsecurity` is picked up by a GitLab job that runs before deploying the app to any environment. As the security database is shared across all the services in that environment, the Flyway configurations can be declared in a unified way as GitLab CI/CD variables. Another approach thay may also work is using the `quarkus.flyway.\"named-data-sources\"` properties, that let you apply migrations in different datasources."
msgstr "我们如何做呢？默认的 `db/migration` 文件夹在运行测试或部署时由Quarkus处理。另一方面， `db/migrationsecurity` ，在将应用部署到任何环境之前，由GitLab作业来接收。由于该环境中的所有服务都共享安全数据库，Flyway配置可以以统一的方式声明为GitLab CI/CD的变量。另一种方法也可能是使用 `quarkus.flyway.\"named-data-sources\"` 属性，让你在不同的数据源中应用迁移。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Automatic testing and code analysis"
msgstr "自动测试和代码分析"

#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid ""
"To implement automated testing the `quarkus-junit5` extension is needed.\n"
"As mentioned above, our automated tests have to run against an existing database with all the necessary structures. For that reason, we are not able to set up test databases from scratch, for example using TestContainers. We also need to have a way to rollback the changes introduced by tests. Doing the latter is really easy thanks to the `@TestTransaction` annotation provided by Quarkus (see https://quarkus.io/guides/getting-started-testing#tests-and-transactions).\n"
"Transactional testing is really useful, as it allows us to run tests against a real database, without the need for mocking. Along with testing the methods logic, it also guarantees that the entities and tables are correctly defined."
msgstr "要实现自动测试，需要使用 `quarkus-junit5` 扩展。如上所述，我们的自动测试必须在一个包含所有必要结构的现有数据库中运行。因此，我们无法从头开始建立测试数据库，例如使用 TestContainers。我们还需要一种方法来回滚测试引入的更改。有了 Quarkus 提供的 `@TestTransaction` 注解（ link:https://quarkus.io/guides/getting-started-testing#tests-and-transactions[参见 https://quarkus.io/guides/getting-started-testing#tests-and-transactions）] ，回滚就变得非常容易了。事务测试非常有用，因为它允许我们针对真实数据库运行测试，而无需模拟。除了测试方法逻辑，它还能保证实体和表的定义正确无误。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Regarding code analysis, we are using two Maven plugins: `sonar-maven-plugin` and `dependency-check-maven`. SonarQube is an open source platform developed by SonarSource for continuous inspection of code quality to perform automatic reviews with static analysis of code to detect bugs and code smells. Dependency-Check is a Software Composition Analysis tool that attempts to detect publicly disclosed vulnerabilities contained within a project's dependencies. A plugin can be installed in SonarQube to integrate with dependency check reports."
msgstr "关于代码分析，我们使用了两个Maven插件： `sonar-maven-plugin` 和 `dependency-check-maven` 。SonarQube是SonarSource开发的一个开源平台，用于持续检查代码质量，通过对代码的静态分析进行自动审查，以检测错误和代码气味。Dependency-Check是一个软件组成分析工具，它试图检测项目的依赖关系中包含的公开披露的漏洞。可以在SonarQube中安装一个插件，与依赖性检查报告整合。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The `quarkus-jacoco` extension is also used to get the coverage of the tests. The generated report is picked up by SonarQube, and the results are used to check against the quality gate."
msgstr " `quarkus-jacoco` 扩展也被用来获取测试的覆盖率。生成的报告被SonarQube拾取，其结果被用来检查质量门。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Code analysis tools can take some time. For that reason, we decided to run this tasks only on nightly builds fired by GitLab scheduler. This decision depends on the requirements of each project."
msgstr "代码分析工具可能需要一些时间。出于这个原因，我们决定只在由GitLab调度器启动的夜间构建中运行这个任务。这个决定取决于每个项目的要求。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Dependency Bot"
msgstr "依赖性机器人"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "We are living in an age of continuous delivery code, and Quarkus is no exception. The team is releasing new versions with improvements and bugfixes at a fast pace. In addition to that, we crafted some utility libraries that are shared among our backends and frontends. When there are new releases, all the services should be updated."
msgstr "我们正生活在一个持续交付代码的时代，Quarkus也不例外。团队正在以快速的速度发布带有改进和错误修复的新版本。除此之外，我们还精心设计了一些实用库，在我们的后端和前端之间共享。当有新版本时，所有的服务都应该被更新。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "As of today (initial phase), we have ≈30 services, but a lot more are expected in the near future. Having a dependency bot to help us update these dependencies and run automated validation tasks is a must."
msgstr "截至今天（初始阶段），我们有≈30个服务，但预计在不久的将来会有更多的服务。拥有一个依赖性机器人来帮助我们更新这些依赖性并运行自动验证任务是必须的。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "As we are working with GitLab, one of the recommended options is Renovatebot. See https://docs.renovatebot.com/. It is relatively easy to setup, works seamlessly with Java, and is highly customizable."
msgstr "由于我们使用的是GitLab，推荐的选项之一是Renovatebot。见 https://docs.renovatebot.com/ 它的设置相对简单，与Java无缝衔接，而且高度可定制。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Security domains and DAO library"
msgstr "安全域和DAO库"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "As part of the project, we had to code an utility JPA DAO library for simplifying the queries made by developers. As a result, the \"jpacriteria-dao\" library was born. Under the hoods, it uses the JPA criteria library."
msgstr "作为项目的一部分，我们必须编写一个实用的JPA DAO库来简化开发人员的查询。因此，\"jpacriteria-dao \"库诞生了。它使用了JPA标准库。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The main goals are:"
msgstr "主要的目标是："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Simplify the creation of queries. Developers only need to code DTO filters and map the attributes to criteria predicates. The library creates the final query. It automatically detects when to do inner/left joins, when to use distinct, etc."
msgstr "简化了查询的创建。开发人员只需要编码DTO过滤器并将属性映射到标准谓词。该库创建最终的查询。它自动检测什么时候做内/左连接，什么时候使用不同的，等等。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Support the use of `includeFields` with navigation, so the developers can choose which fields to query (`field1.field2.id`, `field1.field2.name`, etc). Executes a native Query and maps the result to a DTO. It is very useful to limit the scope of the query."
msgstr "支持使用带导航的 `includeFields` ，因此开发者可以选择查询哪些字段（ `field1.field2.id` , `field1.field2.name` , 等等）。执行一个本地查询并将结果映射到DTO。这对于限制查询的范围是非常有用的。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "In our system, we have security domains, with precedence. Some users must only see the data that belongs to their domain. The library, when instructed, can do the validations and filtering automatically at DAO level. Entities that need to support that must extend the `DataSecurity` interface."
msgstr "在我们的系统中，我们有安全域，有优先权。一些用户必须只看到属于他们领域的数据。该库在得到指示后，可以在DAO级别自动进行验证和过滤。需要支持的实体必须扩展 `DataSecurity` 接口。"

#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid ""
"We decided to open source it, and it will probably be also deployed to Maven Central. The code is published in the https://github.com/sofisslat/jpacriteria-dao GitHub repository.\n"
"We also uploaded an example Quarkus app using the library (under the folder `example`). As of today, we see the library as a proof of concept, that can be evolved and improved."
msgstr "我们决定将其开源，并可能将其部署到 Maven Central。代码发布在 https://github.com/sofisslat/jpacriteria-dao GitHub 代码库中。我们还上传了一个使用该库的 Quarkus 应用示例（文件夹： `example` ）。到目前为止，我们认为该库只是一个概念验证，还可以不断发展和改进。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Logs (EFK)"
msgstr "日志 (EFK)"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "When running multiple services and applications on a Kubernetes cluster, a centralized, cluster-level logging stack can help to quickly sort through and analyze the heavy volume of log data produced by the pods. One popular centralized logging solution is the Elasticsearch, Fluentd, and Kibana (EFK) stack. Data streams are the recommended way of storing logs in Elasticsearch. In a typical setup, all the logs have useful context information used for filtering as \"namespace\", \"service\", \"log level\", etc."
msgstr "当在Kubernetes集群上运行多个服务和应用程序时，一个集中的、集群级的日志堆栈可以帮助快速整理和分析pod产生的大量日志数据。一个流行的集中式日志解决方案是Elasticsearch、Fluentd和Kibana（EFK）栈。数据流是Elasticsearch中存储日志的推荐方式。在一个典型的设置中，所有的日志都有用于过滤的有用的上下文信息，如 \"命名空间\"、\"服务\"、\"日志级别 \"等。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The challenge lies in adding as much context as possible to the logged information, such as:"
msgstr "挑战在于为记录的信息添加尽可能多的背景，例如："

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "traceId (link logs corresponding to a trace of invocations)"
msgstr "traceId（与调用痕迹相对应的链接日志）。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "tokenId (link logs corresponding to a JWT authorization token)"
msgstr "tokenId（对应于JWT授权令牌的链接记录）。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "userId/userCode (link logs corresponding to a given user)"
msgstr "userId/userCode（与特定用户对应的链接日志）。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "This additional information helps our development team to debug errors reported by users."
msgstr "这些额外的信息有助于我们的开发团队对用户报告的错误进行调试。"

#. type: Title ===
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "JSON logging format"
msgstr "JSON日志格式"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "It is possible to change the output format of the console log. This can be useful in environments where the output of the Quarkus application is captured by a service which processes and stores the log information for later analysis. In order to configure the JSON logging format, the `quarkus-logging-json` extension may be employed. See https://quarkus.io/guides/logging#json-logging."
msgstr "它可以改变控制台日志的输出格式。这在Quarkus应用程序的输出被一个处理和存储日志信息以供日后分析的服务所捕获的环境中是很有用的。为了配置JSON日志格式，可以使用 `quarkus-logging-json` 扩展。见 https://quarkus.io/guides/logging#json-logging "

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "In our case, this allowed us to add some extra parameters to the JSON log output, that are easily picked up by fluentd and sent to Elasticsearch."
msgstr "在我们的案例中，这允许我们在JSON日志输出中添加一些额外的参数，这些参数很容易被fluentd接收并发送到Elasticsearch。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The `quarkus.log.console.json.exception-output-type=formatted` property is also used to send the stacktrace."
msgstr " `quarkus.log.console.json.exception-output-type=formatted` 属性也被用来发送堆栈跟踪。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "Docker has a size limit of 16K for logs (https://github.com/kubernetes/kubernetes/issues/52444[kubernetes/kubernetes#52444] and https://github.com/moby/moby/issues/34620[moby/moby#34620]). An error with a large stacktrace is going to generate a split log. The proposed fluentd community solution is using the fluent-plugin-concat. Keep in mind that there are edge cases with rotating file logs when it might fail. Another solution is sending the logs directly as mentioned in https://quarkus.io/guides/centralized-log-management."
msgstr "Docker对日志有16K的大小限制 link:https://github.com/kubernetes/kubernetes/issues/52444[（kubernetes/kubernetes#52444] 和 link:https://github.com/moby/moby/issues/34620[moby/moby#34620] ）。一个具有大堆栈痕迹的错误会产生一个分裂的日志。建议fluentd社区的解决方案是使用fluent-plugin-concat。请记住，在旋转文件日志的边缘情况下，它可能会失败。另一个解决方案是直接发送日志，正如 https://quarkus.io/guides/centralized-log-management  中提到的 https://quarkus.io/guides/centralized-log-management "

#. type: Title ===
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "MDC (Mapped diagnostic context)"
msgstr "MDC（映射的诊断背景）。"

#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid ""
"The typical Java logging API lets you log the level, exception message and stacktrace. Quarkus uses JBoss Log Manager under the hoods. Using `org.jboss.logmanager.MDC`, we have access to the `MDC.put(String key, String value)` method that allows us to add key-value parameters.\n"
"In order to set this information, a `javax.ws.rs.container.ContainerRequestFilter` should be implemented."
msgstr "典型的 Java 日志 API 可让你记录级别、异常消息和堆栈跟踪。Quarkus 在引擎盖下使用 JBoss Log Manager。使用 `org.jboss.logmanager.MDC` ，我们可以访问 `MDC.put(String key, String value)` 方法，该方法允许我们添加键值参数。为了设置这些信息，需要执行 `javax.ws.rs.container.ContainerRequestFilter` 。"

#. type: Title ===
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Obtaining the parameters"
msgstr "获取参数"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The tokenId, userId and userCode are obtained from the JsonWebToken used to invoke the API."
msgstr "tokenId、userId和userCode是从用于调用API的JsonWebToken获得的。"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "The traceId, is generated by the `quarkus-opentelemetry` extension. The extension is responsible for transparently propagating the trace through the different REST invocations that are made from the backends. We wanted to use the traceId only for logging, without an external visualizing tool like Jaeger, so we disabled the OTLP Exporter with `quarkus.opentelemetry.tracer.exporter.otlp.enabled=false`."
msgstr "traceId，是由 `quarkus-opentelemetry` 扩展生成的。该扩展负责通过从后端进行的不同的REST调用来透明地传播跟踪。我们希望traceId只用于记录，而不需要像Jaeger这样的外部可视化工具，所以我们用 `quarkus.opentelemetry.tracer.exporter.otlp.enabled=false` 来禁用OTLP导出器。"

#. type: Title ==
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy, no-wrap
msgid "Final thoughts"
msgstr "最后的想法"

#. type: Plain text
#: _posts/2023-05-09-ministry-of-economy-finance-uruguay-adopts-quarkus.adoc
#, fuzzy
msgid "We initially adopted Thorntail (previously known as Wildfly-Swarm) for our service-oriented architecture projects, but switched to Quarkus at the beginning of its 1.x release due to its superior features. Quarkus has proven to be an excellent choice for us, and we have greatly enjoyed working with it and its extensions over the past few years. As of today, the new base architecture is already defined, and SIIF started its migration. At least 5 more years of work with it and other internal systems is expected. Undoubtedly, we will continue working and improving this architecture for the years to come, aligned with the Quarkus ecosystem. We extend our gratitude to the entire Quarkus team and the enthusiastic community behind the project, of which we are proud to be a part."
msgstr "我们最初采用 Thorntail（以前称为 Wildfly-Swarm）来开发面向服务的架构项目，但在 Quarkus 1.x 版本发布之初就因其卓越的功能而改用 Quarkus。事实证明，Quarkus 对我们来说是一个很好的选择，在过去的几年里，我们非常喜欢使用它及其扩展功能。从今天起，新的基本架构已经确定，SIIF 也已开始迁移。预计与它和其他内部系统的合作至少还需要 5 年时间。毫无疑问，在未来的几年里，我们将与 Quarkus 生态系统保持一致，继续工作并改进这一架构。我们向整个 Quarkus 团队和项目背后热情洋溢的社区表示感谢，作为其中的一员，我们深感自豪。"
