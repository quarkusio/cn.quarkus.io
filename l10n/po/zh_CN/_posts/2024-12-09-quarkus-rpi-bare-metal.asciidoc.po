msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Quarkus and Raspberry Pi - this time on bare metal"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "We bring you some tips on how to develop Quarkus applications deployed to a Raspberry Pi."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"Four years ago, Andrea Battaglia wrote an excellent https://quarkus.io/blog/quarkus-native-on-a-raspberry-pi/[blog post] about running a Quarkus application (that is compiled to a native executable) in a container on a Raspberry Pi.\n"
"This is an interesting use case but itâ€™s not the only one.\n"
"Since Raspberry Pi is often used for home and science projects I was particularly interested in the developer experience when you want to develop your application locally on your laptop but run it on a bare metal Raspberry Pi server, i.e. no containers involved.\n"
"Raspberry Pi is not infrequently extended with various sensors and pheripherals.\n"
"And it's very practical to be able to communicate with these devices direcly, during development.\n"
"That's why we focused in this direction."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "There is a https://github.com/mkouba/rpi-sample[sample application] that is referenced in the text below. The app periodically executes a command that reads the CPU temperature and writes the value in the log. Obviously, this is not something RPi-specific but it can be replaced with a command that reads a value from any other device file or even GPIO."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Step 1 - Prepare your development environment"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Install Raspberry Pi OS"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"Nothing special is needed.\n"
"You can use the convenient https://projects.raspberrypi.org/en/projects/raspberry-pi-setting-up/2[Raspberry Pi Imager] to prepare the SD card.\n"
"If you don't need the GUI (and in most cases you don't) there's the Raspberry Pi OS Lite image available.\n"
"This version will save some resources.\n"
"Furthermore, you'll need to enable SSH and configure the wireless LAN."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Install JDK"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "For development, you'll need to install the JDK."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Step 2 - Build and deploy"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"First of all, we need to build the sample app locally but run it on the target Raspberry Pi.\n"
"It's quite straightforward with a little bit of bash-fu."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Build and deploy script"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "The content of the `target/quarkus-app` directory contains all the Quarkus application bits."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "`RPI_HOST` and `RPI_PROJECT_PATH` are environment variables. The first defines the host/address of the target Raspberry Pi. The latter defines the path where to deploy the app; e.g. something like `/home/username/rpi-sample`."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "`-t` is crucial and it's used to force the allocation of a pseudo-terminal. We need an interactive shell for the remote command."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "See also the https://github.com/mkouba/rpi-sample/blob/main/build-deploy.sh[build-deploy.sh] file in the sample app."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"This way you can build your application locally and run it on the Raspberry Pi easily.\n"
"However, whenever you change the app you need to re-build, copy and restart the app which is a bit tedious.\n"
"Especially if you're used to the quick turnaround with Quarkus development mode.\n"
"So are there any other options?"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Step 3 - Remote development mode"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"As you may know Quarkus has a https://quarkus.io/guides/maven-tooling#remote-development-mode[remote development mode] .\n"
"It is usually used to run a Quarkus app in a container environment (such as OpenShift) and have the changes made to your local files immediately visible in the remote app.\n"
"But there's no reason not to try it for our use case."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"First, we'll need to build a mutable application, using the `mutable-jar` format.\n"
"Let's adapt our build&deploy script."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Build and deploy script - mutable app"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Mutable applications can be started in the dev mode."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "We set the `QUARKUS_LAUNCH_DEVMODE` environment variable to `true` in order to start the app in the dev mode."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "The `-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005` part enables the debug mode so that you can also debug your application in the same way as if it was running locally. The only difference is that you need to use the host/address of your Raspberry Pi when attaching the debugger."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "See also the https://github.com/mkouba/rpi-sample/blob/main/build-deploy-mutable.sh[build-deploy-mutable.sh] file in the sample app."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Keep in mind that your Quarkus app must include the `quarkus-vertx-http` extension in order to support remote dev mode. If you don't need this extension in production, you can add a Maven profile with this dependency that is only activated during development. See also the https://github.com/mkouba/rpi-sample/blob/main/pom.xml#L105-L119[pom.xml] file in the sample app."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"Once we run the script the remote side is up and listening.\n"
"It takes a little bit more time than before because we start the app in the development mode.\n"
"Also mutable applications include the deployment parts of Quarkus, so they take up a bit more disk space."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Let's run the local part and connect to the remote host:"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "`RPI_HOST` is an environment variable and it defines the host/address of the target Raspberry Pi."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "See also the https://github.com/mkouba/rpi-sample/blob/main/run-remote-dev-mode.sh[run-remote-dev-mode.sh] file in the sample app."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"That's it.\n"
"Now every time you send an HTTP request to your app you should see any changes you have made locally in the remote app.\n"
"If your app does not expose an HTTP endpoint you can just hit `s` in the terminal where the deploy script was executed.\n"
"This will refresh the remote app as well."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Currently, the Dev UI is not available in the remote dev mode for security reasons. However, there's an https://github.com/quarkusio/quarkus/issues/44570[open issue] to reintroduce the Dev UI, probably guarded by a configuration knob."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Step 4 - Run in production"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"Of course, you can run your Quarkus app in a JVM on the target Raspberry Pi.\n"
"But the startup is a bit slow, more than ten seconds even for simple apps.\n"
"Also Raspberry Pi is not endowed with a large amount of memory.\n"
"So what about native image?\n"
"That might be a perfect fit.\n"
"However, there's one problem - Raspberry Pi is an ARM-based single-board computer (`aarch64` architecture for Raspberry Pi 4 Model B).\n"
"But your machine might be Intel-based (`x86_64` architecture).\n"
"In other words, usually you cannot build the native image of your machine and run it on Raspberry Pi."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Option A - build the native image on Pi"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"In theory, you can build the native image directly on your Raspberry Pi.\n"
"I didn't succeed though and got the infamous _\"The Native Image build process ran out of memory. Please make sure your build system has more memory available.\"_ error message on my Raspberry Pi 4 Model B with 2GB RAM.\n"
"But if you have a model with more RAM, plenty of time, and a good active cooler, it should be possible."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"Feeling brave?\n"
"Ok, you've been warned.\n"
"But first, you'll need to turn your Raspberry Pi in a full-fledged development machine.\n"
"Simply said, JDK is not enough.\n"
"You'll need a build tool, such as Maven.\n"
"You'll also need the GraalVM native-image, or https://github.com/graalvm/mandrel/releases[Mandrel] native-image, or Docker/Podman to build the native image in the container.\n"
"And probably also Git to checkout your project.\n"
"Once you're ready it's simple:"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"So the downside of this approach is obvious.\n"
"Are there any other options?"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Option B - use QEMU"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"You can also try to build the native image in a container using an ARM-based container image.\n"
"Quarkus provides multi-platform builder images that can be used for this task."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "The following steps work on a Linux machine (Ubuntu 22.04) with Docker installed for target environment Raspberry Pi 4 Model B with OS Lite 12 (Bookworm)."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "We need to install https://www.qemu.org/[qemu] first."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "`-Dquarkus.native.container-build=true` instructs Quarkus to build the native image using a container."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "`-Dquarkus.native.container-runtime-options=--platform=linux/arm64` instructs Docker to use QEMU to emulate the ARM environment."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "`-Dquarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:23.1.5.0-Final-java21-arm6` specifies an ARM-based container image that should be used to build the native image."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "See also the https://github.com/mkouba/rpi-sample/blob/main/build-native-image.sh[build-native-image.sh] file in the sample app."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"The downside of this approach is that it's very slooooow.\n"
"It took approximately 20 mins to build a native image from the sample app with common hardware.\n"
"On the other hand, you typically only need to build the native image for production.\n"
"So it seems to be acceptable."
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid "Conclusion"
msgstr ""

#: _posts/2024-12-09-quarkus-rpi-bare-metal.asciidoc
msgid ""
"A Quarkus application is a good fit for Raspberry Pi.\n"
"If you're a Java developer there's no need to be afraid that Raspberry Pi will not be able to run your Quarkus app flawlessly.\n"
"Especially when you use a native image in production.\n"
"Furthermore, the remote development mode provides a very nice UX.\n"
"To infinity and beyond!"
msgstr ""
