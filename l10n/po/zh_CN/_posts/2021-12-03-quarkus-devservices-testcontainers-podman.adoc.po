# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:1
#, fuzzy, no-wrap
msgid "mjurc"
msgstr "mjurc"

#. type: YAML Front Matter: date
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:1
#, fuzzy, no-wrap
msgid "2021-12-06"
msgstr "2021-12-06"

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "职位"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:1
#, fuzzy, no-wrap
msgid "Expose a Podman service for usage with Quarkus Dev Services and Testcontainers"
msgstr "为Quarkus开发服务和Testcontainers的使用暴露一个Podman服务"

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:1
#, fuzzy, no-wrap
msgid "development-tips podman testcontainers"
msgstr "开发-提示 podman 测试容器"

#. type: YAML Front Matter: title
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:1
#, fuzzy, no-wrap
msgid "Configuring Podman for Quarkus Dev Services and Testcontainers on Linux"
msgstr "在Linux上为Quarkus开发服务和Testcontainers配置Podman"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:13
#, fuzzy
msgid "Podman is a daemonless container engine for developing, managing, and running Containers on Linux systems. Since the release of version 3, Podman allows the user to run a service emulating a Docker API provided on a Unix socket. This makes it possible for Testcontainers and Quarkus Dev Services to be utilized with Podman."
msgstr "Podman是一个无守护程序的容器引擎，用于在Linux系统上开发、管理和运行容器。自第三版发布以来，Podman允许用户运行一个模拟Docker API的服务，并在Unix套接字上提供。这使得Testcontainers和Quarkus Dev服务有可能被Podman利用。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:15
#, fuzzy
msgid "Directions in this article will not work on macOS and Microsoft Windows."
msgstr "本文中的指示在macOS和微软的Windows上不起作用。"

#. type: Title ==
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:16
#, fuzzy, no-wrap
msgid "Requirements"
msgstr "要求"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:19
#, fuzzy
msgid "Running on a Linux system with Podman 3.x installed."
msgstr "在一个安装了Podman 3.x的Linux系统上运行。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:20
#, fuzzy
msgid "`podman-docker` installed to emulate the Docker CLI for Quarkus Dev Services."
msgstr " `podman-docker` 安装了Docker CLI，以模拟Quarkus Dev Services。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:21
#, fuzzy
msgid "(optional) `podman-remote` installed for verification steps."
msgstr "(可选) `podman-remote` 为验证步骤安装。"

#. type: Title ==
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:22
#, fuzzy, no-wrap
msgid "Configuration"
msgstr "配置"

#. type: Title ===
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:24
#, fuzzy, no-wrap
msgid "TL;DR"
msgstr "TL;DR"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:28
#, fuzzy
msgid "The following commands will set up Podman and environment variables up to work with Quarkus Dev Services and Testcontainers:"
msgstr "下面的命令将设置Podman和环境变量，以便与Quarkus Dev Services和Testcontainers一起工作。"

#. type: delimited block -
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:39
#, no-wrap
msgid ""
"# Install the required podman packages from dnf. If you're not using rpm based\n"
"# distro, replace with respective package manager\n"
"sudo dnf install podman podman-docker\n"
"# Enable the podman socket with Docker REST API\n"
"systemctl --user enable podman.socket --now\n"
"# Set the required envvars\n"
"export DOCKER_HOST=unix:///run/user/${UID}/podman/podman.sock\n"
"export TESTCONTAINERS_RYUK_DISABLED=true\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:42
#, fuzzy
msgid "What this configuration does is explained below, along with basic troubleshooting."
msgstr "下面将解释这种配置的作用，以及基本的故障排除。"

#. type: Title ===
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:43
#, fuzzy, no-wrap
msgid "Configuring the Podman service"
msgstr "配置Podman服务"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:48
#, fuzzy
msgid "Podman is a daemonless container engine. Quarkus Dev Services and Testcontainers expect a running Docker daemon listening at a Unix socket. Since version 3, Podman can be configured to create a service listening at a Unix socket and this service can be used with Dev Services and Testcontainers."
msgstr "Podman是一个无守护程序的容器引擎。Quarkus开发服务和Testcontainers希望有一个运行中的Docker守护程序在Unix套接字上收听。从第三版开始，Podman可以被配置为创建一个监听Unix套接字的服务，这个服务可以用于开发服务和Testcontainers。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:52
#, fuzzy
msgid "By convention, the Docker clients attempt to connect to the service specified by URL configured in the `DOCKER_HOST` environment variable, so this variable needs to be configured to point to the Unix socket that the Podman service will be listening on:"
msgstr "按照惯例，Docker客户端会尝试连接到在 `DOCKER_HOST` 环境变量中配置的URL所指定的服务，所以这个变量需要配置为指向Podman服务将监听的Unix套接字。"

#. type: delimited block -
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:56
#, no-wrap
msgid "export DOCKER_HOST=unix:///run/user/${UID}/podman/podman.sock\n"
msgstr ""

#. type: delimited block =
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:62
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:113
#, fuzzy
msgid "This setting will only apply to the current terminal session. To make this configuration persistent, add the line to the profile files of your shell (e.g. `~/.profile`)."
msgstr "这个设置只适用于当前的终端会话。要使这一配置持久化，请将这一行添加到你的shell的profile文件中（例如： `~/.profile` ）。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:68
#, fuzzy
msgid "Testcontainers and Quarkus Dev Services also expect the container service they make requests against to be non-interactive. In case you have multiple registries configured in your Docker or Podman configuration, Podman responds with a prompt asking which registry should be used to pull containers from in case the containers pulled are specified by short name."
msgstr "Testcontainers和Quarkus Dev Services也希望他们所请求的容器服务是非交互式的。如果你在Docker或Podman配置中配置了多个注册表，Podman会响应一个提示，询问应该使用哪个注册表来拉取容器，如果拉取的容器是以短名称指定的。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:71
#, fuzzy
msgid "You can disable this prompt by setting the `short-name-mode=\"disabled\"` configuration property of Podman in `/etc/containers/registries.conf`."
msgstr "你可以通过在 `/etc/containers/registries.conf` 中设置Podman的 `short-name-mode=\"disabled\"` 配置属性来禁用这个提示。"

#. type: delimited block =
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:76
#, fuzzy
msgid "This setting is security sensitive. Please see https://www.redhat.com/sysadmin/container-image-short-names[Container image short names in Podman] before changing this setting."
msgstr "这个设置是安全敏感的。在改变这个设置之前，请参考 link:https://www.redhat.com/sysadmin/container-image-short-names[Podman中的容器图像简称] 。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:80
#, fuzzy
msgid "Finally, let's start the Podman service listening on the socket previously specified by the `DOCKER_HOST` environment variable."
msgstr "最后，让我们启动Podman服务，监听之前由 `DOCKER_HOST` 环境变量指定的套接字。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:86
#, fuzzy
msgid "Podman is distributed with user-local systemd units on `apt` and `dnf` package managers configured to run a rootless Podman service. This means that the Podman process will be launched only with the privileges of the user you are logged in as, that the containers and configuration are stored in your home directory and that this service listens at `unix:///run/user/$\\{UID\\}/podman/podman.sock`. In most of the Linux distributions, you can enable this service with the following command:"
msgstr "Podman与用户本地的systemd单元一起发布在 `apt` 和 `dnf` 软件包管理器上，配置为运行一个无根的Podman服务。这意味着Podman进程将仅以你登录的用户的权限启动，容器和配置存储在你的主目录中，该服务的监听地址是 `unix:///run/user/${UID}/podman/podman.sock` 。在大多数Linux发行版中，你可以通过以下命令来启用这项服务。"

#. type: delimited block -
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:90
#, no-wrap
msgid "systemctl --user enable podman.socket --now\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:94
#, fuzzy
msgid "You can verify that the container service is really running and responding at the URI specified by `DOCKER_HOST` with `podman-remote`."
msgstr "你可以通过 `podman-remote` ，验证容器服务是否真的在运行，并在 `DOCKER_HOST` 指定的URI上进行响应。"

#. type: delimited block -
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:98
#, no-wrap
msgid "podman-remote info\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:103
#, fuzzy
msgid "Podman's support for Ryuk container is currently flaky. Ryuk is a container that Testcontainers uses to clean up any containers spawned by Testcontainers after the end of their usage in Java code. You can configure Testcontainers not to use Ryuk."
msgstr "目前，Podman对Ryuk容器的支持是不稳定的。Ryuk是一个容器，Testcontainers使用它来清理Testcontainers在Java代码中使用结束后产生的任何容器。你可以配置Testcontainers不使用Ryuk。"

#. type: delimited block -
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:107
#, no-wrap
msgid "export TESTCONTAINERS_RYUK_DISABLED=true\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:118
#, fuzzy
msgid "Podman is now available to respond to the Java Docker client used in Testcontainers. Please note that the Quarkus Dev Services require that a `docker` command is available on `PATH`. The `podman-docker` package on Linux distributions provides a Docker CLI emulation layer for Podman."
msgstr "现在Podman可以用来响应Testcontainers中使用的Java Docker客户端。请注意，Quarkus开发服务要求在 `PATH` 上有一个 `docker` 命令。Linux发行版上的 `podman-docker` 包为Podman提供了一个Docker CLI仿真层。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:120
#, fuzzy
msgid "The future releases of Quarkus will remove the expectation for `docker` command available on `PATH`."
msgstr "Quarkus的未来版本将取消对 `docker` 命令的期望，可在 `PATH` 。"

#. type: Title ===
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:121
#, fuzzy, no-wrap
msgid "Migrating from Docker"
msgstr "从Docker迁移"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:125
#, fuzzy
msgid "If you have previously been running Docker on a version that did not support cgroups V2 on modern Linux distributions, a workaround setting the cgroups to V1 had to be enabled. This applied for Docker versions older than 19, included."
msgstr "如果你以前在一个不支持现代Linux发行版上的cgroups V2的版本上运行Docker，必须启用一个将cgroups设置为V1的变通办法。这适用于19年以前的Docker版本，包括。"

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:127
#, fuzzy
msgid "You can check whether the workaround has been previously applied to your system with the following command:"
msgstr "你可以用以下命令检查该解决方法是否先前已经应用于你的系统。"

#. type: delimited block -
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:131
#, no-wrap
msgid "sudo grubby --info=ALL | grep \"systemd.unified_cgroup_hierarchy=0\"\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:135
#, fuzzy
msgid "If the output is present, this means that kernel argument to set cgroups to V1 has been applied. You can remove the kernel argument with the following command, re-enabling cgroups V2:"
msgstr "如果有输出，这意味着设置cgroups为V1的内核参数已经被应用。你可以用下面的命令删除这个内核参数，重新启用cgroups V2。"

#. type: delimited block -
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:139
#, no-wrap
msgid "sudo grubby --update-kernel=ALL --remove-args=\"systemd.unified_cgroup_hierarchy=0\"\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-12-03-quarkus-devservices-testcontainers-podman.adoc:141
msgid "This setting will only take effect after a reboot."
msgstr ""
