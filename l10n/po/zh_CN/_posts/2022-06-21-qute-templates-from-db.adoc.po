# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-06-21 15:03+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy, no-wrap
msgid "Using Qute with templates from a database"
msgstr "用数据库中的模板使用Qute"

#. type: YAML Front Matter: synopsis
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy, no-wrap
msgid "We moved our Qute templates from the file storage to a database to improve the tenants experience in a multitenant Quarkus app."
msgstr "我们把我们的Qute模板从文件存储转移到数据库，以改善多租户Quarkus应用程序的租户体验。"

#. type: Title ==
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, no-wrap
msgid "Introduction"
msgstr "简介"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"I'm part of a Red Hat team that created a multitenant notifications service which sends the notifications from many https://console.redhat.com[Red Hat Hybrid Cloud Console] apps (the tenants).\n"
"Our service can be used to send several kinds of notifications, including emails.\n"
"Each tenant can create as many email templates as they need and link them with the events that will trigger the notifications."
msgstr "我是 Red Hat 团队的一员，该团队创建了一个多租户通知服务，用于发送来自许多 link:https://console.redhat.com[Red Hat 混合云控制台] 应用程序（租户）的通知。我们的服务可用于发送多种通知，包括电子邮件。每个租户可以根据需要创建任意数量的电子邮件模板，并将它们与触发通知的事件链接起来。"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"We implemented that with the amazing https://quarkus.io/guides/qute-reference[Qute templating engine] and templates stored as files in the `src/main/resources/templates` folder.\n"
"It allowed our tenants to design templates tailored to fit their needs with minimal knowledge of Qute.\n"
"However, we quickly realized that editing the templates was a slow and heavy process for the tenants.\n"
"Indeed, they had to create a GitHub pull request in our repository, wait for a review and then wait again for a deployment before the templates could be tested.\n"
"We needed to make that process easier for the tenants, ideally even self-serviced."
msgstr "我们利用令人惊叹的 link:https://quarkus.io/guides/qute-reference[Qute 模板引擎] 和以文件形式存储在 `src/main/resources/templates` 文件夹中的模板来实现这一目标。这样，我们的租户只需对 Qute 有最基本的了解，就能根据自己的需要设计模板。然而，我们很快意识到，对租户来说，编辑模板是一个缓慢而繁重的过程。事实上，他们必须在我们的资源库中创建一个 GitHub 拉取请求，等待审核，然后再等待部署，最后才能测试模板。我们需要让租户的这一过程变得更简单，甚至最好是自助式的。"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"Then we decided to move the templates from the file storage to a database using Qute's `TemplateLocator`.\n"
"It helped us offer the tenants an easier, frictionless and self-serviced way of editing the templates."
msgstr "然后，我们决定使用 Qute 的 `TemplateLocator` 将模板从文件存储转移到数据库中。它帮助我们为租户提供了一种更简单、无障碍和自助式的模板编辑方式。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "image:/assets/images/posts/qute-templates-from-db/before-after.png[]"
msgstr "image:/assets/images/posts/qute-templates-from-db/before-after.png[alt=\"before after\"]"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "Here's how we did it."
msgstr "以下是我们的做法。"

#. type: Title ==
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy, no-wrap
msgid "The obvious part: persisting the templates into the database"
msgstr "显而易见的部分：将模板持久化到数据库中"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"Before using templates from the DB with Qute, the templates obviously need to be persisted.\n"
"It doesn't matter how this is performed.\n"
"Any flavor of Hibernate (reactive or not, with Panache or not) will work.\n"
"This post will show examples based on https://quarkus.io/guides/hibernate-orm-panache[Hibernate with Panache]."
msgstr "在使用 Qute 数据库中的模板之前，显然需要对模板进行持久化。如何持久化并不重要。任何类型的 Hibernate（反应式或非反应式，带或不带 Panache）都可以使用。本帖将展示基于 link:https://quarkus.io/guides/hibernate-orm-panache[Hibernate 和 Panache] 的示例。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "The next sections will make use of this JPA entity:"
msgstr "接下来的章节将利用这个JPA实体。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "The template name will be the DB primary key."
msgstr "模板名称将是DB的主键。"

#. type: Title ==
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy, no-wrap
msgid "The interesting part: connecting Qute to the database"
msgstr "有趣的部分：将Qute连接到数据库"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"Now that templates can be persisted, we need a way to use them from Qute.\n"
"Fortunately, Qute comes with a very interesting interface called `TemplateLocator` that can be used to load templates from any location, including from a DB."
msgstr "既然模板可以持久化，我们就需要一种从 Qute 中使用模板的方法。幸运的是，Qute 提供了一个名为 `TemplateLocator` 的非常有趣的接口，可用于从任何位置（包括从数据库）加载模板。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "Here's how it can be used with the `DbTemplate` entity we defined earlier:"
msgstr "下面是它如何与我们前面定义的 `DbTemplate` 实体一起使用。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "If your Quarkus app contains templates loaded from both the file system and a database, you will need to override the template locator default priority. Otherwise, Quarkus will try to load templates from the file system using `DbTemplateLocator` which could lead to exceptions or unpredictable behaviors."
msgstr "如果你的Quarkus应用程序包含从文件系统和数据库加载的模板，你将需要覆盖模板定位器的默认优先级。否则，Quarkus将尝试使用 `DbTemplateLocator` 从文件系统加载模板，这可能会导致异常或不可预测的行为。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "Before Quarkus 2.10, integrating `DbTemplateLocator` with the Qute engine instance provided by Quarkus could only be done with a CDI observer like this."
msgstr "在Quarkus 2.10之前，将 `DbTemplateLocator` 与Quarkus提供的Qute引擎实例集成只能通过这样的CDI观察器来完成。"

#. type: delimited block =
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "Quarkus 2.10 recently introduced a new `@Locate` annotation that makes the https://quarkus.io/version/main/guides/qute-reference#template-locator-registration[Template Locator Registration] even simpler."
msgstr "Quarkus 2.10最近引入了一个新的 `@Locate` 注释，使 link:https://quarkus.io/version/main/guides/qute-reference#template-locator-registration[模板定位器注册] 变得更加简单。"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"Now that the template locator is registered, we're ready to compile and render templates from the database with Qute.\n"
"As you can see in the following example, DB templates are used exactly like file templates:"
msgstr "既然模板定位器已经注册，我们就可以使用 Qute 从数据库中编译和渲染模板了。正如您在下面的示例中看到的，数据库模板的使用方式与文件模板完全相同："

#. type: Title ==
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy, no-wrap
msgid "Beware of Qute's internal cache"
msgstr "小心Qute的内部缓存"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"Whenever Qute loads a template, it is stored into an internal `ConcurrentHashMap` and stays in memory forever, unless Qute is instructed otherwise.\n"
"This means that you will need to remove a DB template from the Qute internal cache after it's been updated or deleted in the database."
msgstr "每当 Qute 加载一个模板时，它都会存储到内部 `ConcurrentHashMap` ，并永远保留在内存中，除非 Qute 另有指示。这意味着，在数据库中更新或删除 DB 模板后，您需要将其从 Qute 内部缓存中移除。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "There are several ways of achieving that:"
msgstr "有几种方法可以实现这一点。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "This removes the templates for which the mapping id matches the given predicate."
msgstr "这将删除映射ID与给定谓词相匹配的模板。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "This removes all templates from the cache."
msgstr "这将从缓存中删除所有模板。"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"Clearing that internal cache can become tricky if your app is running on a Kubernetes cluster with several replicas.\n"
"You will indeed need a way to broadcast to all pods (possibly using a Kafka topic or a DB table) an instruction to remove from the cache the templates that have been updated or deleted.\n"
"There is a cheaper (yet very imperfect) way of keeping all pods caches synced though, using a scheduled job:"
msgstr "如果您的应用运行在有多个副本的 Kubernetes 集群上，清除内部缓存就会变得很棘手。您确实需要一种方法来向所有 pod 广播（可能使用 Kafka 主题或 DB 表）指令，以便从缓存中移除已更新或删除的模板。不过，还有一种更便宜（但并不完美）的方法，即使用计划作业来保持所有 pod 缓存同步："

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "All templates will be cleared from the internal cache every 5 minutes."
msgstr "所有模板将每5分钟从内部缓存中清除一次。"

#. type: Title ==
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy, no-wrap
msgid "Preventing the deletion of an included template"
msgstr "防止删除一个包含的模板"

#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid ""
"A Qute template can be included into another template.\n"
"If the inner template is deleted, then the outer template compilation will fail, which is obviously something that needs to be prevented while loading the templates from the DB."
msgstr "一个 Qute 模板可以包含在另一个模板中。如果内部模板被删除，那么外部模板的编译就会失败，这显然是在从数据库加载模板时需要防止的。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "Here's a way to look for the inclusion of a template into another one before deleting it:"
msgstr "这里有一个方法，可以在删除一个模板之前，查看它是否包含在另一个模板中："

#. type: Title ==
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy, no-wrap
msgid "Database templates validation"
msgstr "数据库模板验证"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "Database templates come with a significant drawback: Quarkus is no longer able to perform https://quarkus.io/guides/qute-reference#typesafe_templates[type-safe] validation."
msgstr "数据库模板有一个显著的缺点：Quarkus 不再能够执行 link:https://quarkus.io/guides/qute-reference#typesafe_templates[类型安全] 验证。"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "The syntax validation is also delayed from build time to runtime but this is expected as templates can be created or edited at runtime."
msgstr "语法验证也会从构建时间延迟到运行时间，但这是意料之中的，因为模板可以在运行时间创建或编辑。"

#. type: Title ==
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy, no-wrap
msgid "Special thanks"
msgstr "特别感谢"

#. type: Plain text
#: _posts/2022-06-21-qute-templates-from-db.adoc
#, fuzzy
msgid "Thanks to Josejulio Martinez Magana and Martin Kouba for helping me during the implementation of the DB templates in our notifications service!"
msgstr "感谢 Josejulio Martinez Magana 和 Martin Kouba 在我们的通知服务中实施 DB 模板期间给予我的帮助！"
