# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "Lufthansa Technik AVIATAR experiences significant cloud resources savings by moving to Kubernetes-native Quarkus"
msgstr "汉莎技术公司（Lufthansa Technik AVIATAR）通过迁移到Kubernetes-native Quarkus，体验到显著的云资源节省。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Lufthansa Technik, the world’s largest independent provider of airline maintenance, repair, and overhaul (MRO) services, runs a SaaS digital platform, called AVIATAR, for the aviation industry. This platform helps airlines avoid delays and cancellations by using data to better organize and schedule maintenance. The company built and operated AVIATAR using a hybrid cloud infrastructure based on enterprise open source software from Red Hat."
msgstr "汉莎技术公司是世界上最大的航空公司维护、修理和大修（MRO）服务的独立供应商，为航空业运行一个名为AVIATAR的SaaS数字平台。这个平台通过使用数据来更好地组织和安排维修，帮助航空公司避免延误和取消。该公司使用基于Red Hat企业开源软件的混合云基础设施建立和运营AVIATAR。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "In the last 3 years, AVIATAR business has been growing fast and they needed to accommodate the growing demand from their customers. To this end, they had to grow their development force from 5 developers when they first started to over 100 at present. As they grew, they realized that one single large team was not the most productive and efficient way to organize their software development efforts because many developers had to spend time waiting for each other’s work to be finished due to the many interdependencies in the overall system. To address this situation, they decided to split development from one team to several cross-functional teams. At the same time, they also started working on ways to make the newly created smaller development teams more independent by giving each team autonomy to run their own services. This resulted in their evolution into a microservices architecture, where most of their microservices were based on Spring Boot and Java EE. They have gone from 10 services in the beginning to over 100 as of this writing."
msgstr "在过去的3年中，AVIATAR的业务一直在快速增长，他们需要适应客户不断增长的需求。为此，他们不得不将他们的开发力量从刚开始的5名开发人员发展到目前的100多人。随着他们的成长，他们意识到，一个单一的大团队并不是组织他们软件开发工作的最富有成效的方式，因为由于整个系统中有许多相互依赖的关系，许多开发人员不得不花时间等待对方的工作完成。为了解决这种情况，他们决定将开发工作从一个团队分成几个跨职能的团队。同时，他们也开始研究如何使新成立的小型开发团队更加独立，给每个团队以自主权来运行他们自己的服务。这导致他们演变成一个微服务架构，其中大部分的微服务是基于Spring Boot和Java EE的。他们从一开始的10个服务到现在的100多个。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "The small and autonomous development teams have been able to take responsibility for their own services from development all the way to production to achieve more agility and respond faster to the business."
msgstr "小型和自主的开发团队已经能够对自己的服务负责，从开发一直到生产，以实现更多的敏捷性，并对业务做出更快的反应。"

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "High consumption of cloud resources for existing services"
msgstr "现有服务对云资源的高消耗"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Lufthansa Technik run their microservices on OpenShift on Azure and, as they were looking at different ways to scale their development efforts, they were also looking at ways to save cloud resource consumption. As they were migrating to microservices, they noticed microservices were consuming high memory and compute cloud resources. For high-availability and emergency procedure purposes, they run at least 3 instances of each microservice on the cloud which means that for each of these microservices, there’s a 3x cloud resource consumption rate. For example, one of their microservices was consuming ½ core plus 1 GB of RAM per instance, which required 1.5 cores and 3 GB of RAM when running it in HA on the cloud (3 instances)."
msgstr "汉莎技术公司在Azure的OpenShift上运行他们的微服务，由于他们正在寻找不同的方法来扩展他们的开发工作，他们也在寻找节省云资源消耗的方法。当他们迁移到微服务时，他们注意到微服务正在消耗高内存和计算云资源。出于高可用性和紧急程序的目的，他们在云上运行每个微服务的至少3个实例，这意味着对于这些微服务中的每一个，都有3倍的云资源消耗率。例如，他们的一个微服务在每个实例上消耗1/2的内核加1GB的内存，在云上以HA方式运行时（3个实例），需要1.5个内核和3GB的内存。"

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "Optimizing cloud resource consumption with Quarkus"
msgstr "用Quarkus优化云资源消耗"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Thorsten Pohl, Product Owner Automation & Platform Architect at Digital Product Division AVIATAR, first heard about Quarkus and its benefits in April 2019 at Red Hat Summit. Among its many benefits, the ones that piqued his interest were its low memory consumption and fast times to first response, both in JVM and native modes. He took this information back to AVIATAR and they decided to try it out. There were two initial microservices that their Technology Council recommended for a Quarkus tryout. The first one would be a brand new microservice called the _“Customer Configuration”_ service, and the second one would be the _“Service Discovery”_ service which would be a migration from a service running in an application server to Quarkus."
msgstr "Thorsten Pohl是数字产品部AVIATAR的自动化和平台架构产品负责人，他在2019年4月的红帽峰会上第一次听说Quarkus及其优点。在其众多优点中，引起他兴趣的是其低内存消耗和快速的首次响应时间，无论是在JVM还是本地模式下。他把这些信息带回给AVIATAR，他们决定尝试一下。他们的技术委员会为Quarkus的试用推荐了两个最初的微服务。第一个是名为 _\"客户配置 \"_ 服务的全新微服务，第二个是 _\"服务发现 \"_ 服务，它将从运行在应用服务器中的服务迁移到Quarkus。"

#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "The Customer Configuration service"
msgstr "客户配置服务"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "This service is for a customer to set up their own settings, e.g. desired level of prediction. This service is targeted for their managed customers and it was selected to be developed in Quarkus because it was low risk. From their perspective, if this service went down, there would be no major impact to customers. It was developed by 2 developers using Quarkus 0.20 in a single sprint (approximately 3 weeks) and they are planning to upgrade it to Quarkus v1.x. This service is currently running in native mode in production."
msgstr "这项服务是为客户设置他们自己的设置，例如，所需的预测水平。这项服务是针对他们的管理客户的，它被选择在Quarkus中开发，因为它是低风险的。从他们的角度来看，如果这项服务发生故障，不会对客户产生重大影响。它是由2个开发人员使用Quarkus 0.20在一次冲刺中开发的（大约3周），他们正计划将其升级到Quarkus v1.x。"

#. type: Title ===
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "The Service Discovery service"
msgstr "服务发现服务"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "The Service Discovery service is used to allow automatic discovery between the microservices AVIATAR consist of. It is considered high risk because if it breaks down, it would have a major impact on customers. Also, the original version of this service ran in production as a highly available service in an application server, consuming a lot of cloud resources. The Quarkus version of this service has been running in native mode in Development for about 3 months with no problems and on January 18, 2020, it was deployed to production to replace the instance running on the application server. It should also be mentioned that this Quarkus service started in JVM mode because it was using MongoDB and there was no MongoDB client Quarkus extension when its development started. But as soon as the MongoDB client Quarkus extension became available, they were able to switch the entire service to native mode. This speaks to the fast innovation and new contributions that are part of the Quarkus open source community project."
msgstr "服务发现服务被用来允许在AVIATAR组成的微服务之间自动发现。它被认为是高风险的，因为如果它发生故障，将对客户产生重大影响。另外，该服务的原始版本作为应用服务器中的高可用服务在生产中运行，消耗了大量的云资源。这个服务的Quarkus版本已经在开发部以本地模式运行了大约3个月，没有出现任何问题，在2020年1月18日，它被部署到生产中，以取代在应用服务器上运行的实例。还应该提到的是，这个Quarkus服务是以JVM模式开始的，因为它使用的是MongoDB，而且在其开发开始时还没有MongoDB客户端Quarkus扩展。但是当MongoDB客户端Quarkus扩展可用时，他们就能将整个服务切换到本地模式。这说明了Quarkus开源社区项目的快速创新和新贡献。"

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "Why not Spring Boot?"
msgstr "为什么不是Spring Boot？"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Lufthansa Technik sees Quarkus as a great fit in their journey to running their services in a serverless mode. They have many services that aren’t invoked that often but they still need to have 3 instances of each up and running all the time for high-availability requirements leading to high cloud resource consumption costs. They plan to turn these seldom accessed services to Function-as-a-service calls so that they can be invoked on demand leading to a reduction of cloud. If they were using Spring Boot, it would take too long to boot up, making it prohibitive to use in a serverless mode."
msgstr "汉莎技术公司认为Quarkus在他们以无服务器模式运行服务的过程中非常合适。他们有很多服务并不经常被调用，但为了满足高可用性的要求，他们仍然需要每个服务有3个实例一直在运行，导致云资源消耗成本很高。他们计划将这些很少被访问的服务变成 \"功能即服务 \"的调用，这样他们就可以按需调用，从而减少云的消耗。如果他们使用Spring Boot，启动时间会太长，使其无法在无服务器模式下使用。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Likewise, they have experienced lower memory and compute cloud resource consumption when using Quarkus - plus its use of GraalVM - and according to Thorsten, _“with Quarkus, they could run 3 times denser deployments without sacrificing availability and response times of services”_, as the denser deployments come from the combination of the two technologies."
msgstr "同样，他们在使用Quarkus--加上其对GraalVM的使用--时体验到了更低的内存和计算云资源消耗，据Thorsten说， _\"有了Quarkus，他们可以在不牺牲服务的可用性和响应时间的情况下运行3倍密集的部署\"，_ 因为密集的部署来自两种技术的结合。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Their developers are Spring Boot developers with Java EE experience as well, so the learning curve for Quarkus was very small since its syntax and approach was _“close to what our developers are already doing and it’s familiar to them. This is a big benefit”_, Thorsten affirmed."
msgstr "他们的开发人员也是具有Java EE经验的Spring Boot开发人员，因此Quarkus的学习曲线非常小，因为它的语法和方法 _\"接近我们的开发人员已经在做的事情，他们很熟悉。这是一个很大的好处\"，_ Thorsten肯定地说。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "With respect to the recently introduced Spring API compatibility feature in Quarkus, Thorsten said that _“they may use the Spring API compatibility in Quarkus when migrating their current Spring Boot microservices to Quarkus. However, for developing new microservices, they plan to use just the Quarkus APIs directly because it would be awkward to use another API within Quarkus.”_"
msgstr "关于Quarkus中最近推出的Spring API兼容性功能，Thorsten说： _\"他们在将目前的Spring Boot微服务迁移到Quarkus时，可能会使用Quarkus中的Spring API兼容性。然而，对于开发新的微服务，他们计划只直接使用Quarkus的API，因为在Quarkus中使用另一个API会很尴尬\"。_ "

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "The Quarkus Benefits"
msgstr "Quarkus的好处"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Among the many benefits that Quarkus provides to Lufthansa Technik, Thorsten mentioned that _“they could cut cloud resource costs threefold.\"_ And the same goes with OpenShift because of the higher density you can achieve on each core using Quarkus. For example, they had a microservice that was consuming ½ core plus 1 GB of RAM per instance, which required 1.5 cores and 3 GB of RAM when running it in HA on the cloud (3 instances). When using the Quarkus version of the same microservice, its consumption was of 200 millicores plus 200-400 MB of RAM per instance. This translates to 0.6 cores plus 600 MB – 1.2 GB of RAM for an HA deployment of 3 instances of the microservice _“. They could run 3 times denser deployments without sacrificing availability and response times of services”_, Thornsten reiterated. These are the types of optimizations that can only be achieved by the symbiotic combination of Quarkus and GraalVM."
msgstr "在Quarkus为汉莎技术公司提供的众多好处中，Thorsten提到， _\"他们可以将云资源成本降低三倍\"。_ 而OpenShift也是如此，因为使用Quarkus，你可以在每个核心上实现更高的密度。例如，他们有一个微服务，每个实例消耗核心加1GB内存，在云上以HA方式运行时（3个实例），需要1.5个核心和3GB内存。当使用同一微服务的Quarkus版本时，它的消耗是每个实例200毫核加200-400MB的RAM。这相当于0.6个内核加600MB？对于微服务的3个实例的HA部署，1.2GB的RAM _。他们可以在不牺牲服务的可用性和响应时间的情况下运行3倍的密集部署？T_ hornsten重申了这一点。这些是只有通过Quarkus和GraalVM的共生组合才能实现的优化类型。"

#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid ""
"Thorsten also described Quarkus live coding capabilities as a _“really good thing”_. Many of their applications have web-based user interfaces and _“making changes and reloading pages instantaneously is a great feature”_, Thorsten affirmed.\n"
"Another benefit, already mentioned earlier, was the small Quarkus learning curve experienced by their developers, who are Spring Boot developers with Java EE experience. What makes this possible is the stack of technologies included in Quarkus, composed of best-of-breed and familiar technologies for Kubernetes-native microservices. Some of the Quarkus extensions used by the AVIATAR developers are: Java Web Token (JWT), JAX-RS, MongoDB client, MicroProfile Rest Client, Keycloak (security), Hibernate ORM (for relational databases), MicroProfile Metrics, and MicroProfile Health Check."
msgstr "Thorsten 还认为 Quarkus 的实时编码功能是 _\"真正的好东西\"。_ 他们的许多应用程序都有基于 Web 的用户界面， _\"即时更改和重新加载页面是一项很棒的功能\"_ ，Thorsten 肯定地说。前面已经提到的另一个好处是，他们的开发人员都是具有 Java EE 经验的 Spring Boot 开发人员，Quarkus 的学习曲线较小。之所以能做到这一点，是因为 Quarkus 所包含的技术堆栈由 Kubernetes 原生微服务的最佳技术和熟悉技术组成。AVIATAR 开发人员使用的 Quarkus 扩展包括Java Web Token（JWT）、JAX-RS、MongoDB 客户端、MicroProfile Rest 客户端、Keycloak（安全性）、Hibernate ORM（用于关系数据库）、MicroProfile Metrics 和 MicroProfile Health Check。"

#. type: Title ==
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy, no-wrap
msgid "Looking into the future"
msgstr "展望未来"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "They plan to use Quarkus for the development of new services per the guidance of their Technology Council. In general, for new services they’d like to first work on the ones that are low or no risk to customers. They also plan to upgrade their Service Discovery service to Quarkus v1.x and deploy it to production, which actually took place on January 18, 2020. Lastly, they will use the Quarkus APIs directly and for migrating Spring Boot services to Quarkus, they may leverage the Quarkus Spring API compatibility feature."
msgstr "他们计划在技术委员会的指导下，使用Quarkus开发新的服务。一般来说，对于新的服务，他们希望首先致力于对客户来说风险较低或无风险的服务。他们还计划将他们的服务发现服务升级到Quarkus v1.x，并将其部署到生产中，这实际上发生在2020年1月18日。最后，他们将直接使用Quarkus的API，对于将Spring Boot服务迁移到Quarkus，他们可能会利用Quarkus Spring API兼容功能。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "They look forward to continuing to optimize their cloud resource consumption by using the Quarkus stack in their services."
msgstr "他们期待着通过在服务中使用Quarkus堆栈，继续优化他们的云资源消耗。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "关于Quarkus的更多信息。"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Quarkus网站 http://quarkus.io "

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Quarkus GitHub项目: https://github.com/quarkusio/quarkus "

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Quarkus Twitter: https://twitter.com/QuarkusIO "

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Quarkus chat: https://quarkusio.zulipchat.com/ "

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkus邮件列表 https://groups.google.com/forum/#!forum/quarkus-dev "

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[夸库斯YouTube频道]"

#. type: Plain text
#: _posts/2020-02-17-aviatar-experiences-significant-savings.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[使用 Quarkus 的四个理由]"
