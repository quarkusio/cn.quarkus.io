# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, fuzzy, no-wrap
msgid "gsmet"
msgstr "gsmet"

#. type: YAML Front Matter: date
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, fuzzy, no-wrap
msgid "2021-04-20"
msgstr "2021-04-20"

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "职位"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, fuzzy, no-wrap
msgid "If fast startup and live reload weren't enough for you, maybe custom extensions will convince you that you can achieve great things with Quarkus."
msgstr "如果快速启动和实时重载对你来说还不够，也许自定义扩展会说服你，你可以用Quarkus实现伟大的事情。"

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, fuzzy, no-wrap
msgid "development-tips extensions"
msgstr "开发-提示扩展"

#. type: YAML Front Matter: title
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, fuzzy, no-wrap
msgid "Solving problems with custom Quarkus extensions"
msgstr "解决自定义Quarkus扩展的问题"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:11
#, fuzzy
msgid "From time to time, I see tweets or articles claiming they don't see the point of Quarkus because \"who needs fast startup?\", \"I have plenty of memory\" or \"what is the point of live reload?\"."
msgstr "我不时看到一些推文或文章，声称他们看不到Quarkus的意义，因为 \"谁需要快速启动？\"、\"我有足够的内存 \"或 \"实时重载的意义何在？\"。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:14
#, fuzzy
msgid "I could write an article debunking these arguments and explain how the latter makes your development workflow much more efficient and how the former makes the latter possible, even if fast boots are not your thing.  But for the sake of this blog post, let's admit these persons are absolutely right and these are not good reasons to use Quarkus."
msgstr "我可以写一篇文章来驳斥这些论点，并解释后者如何使你的开发工作流程更有效率，以及前者如何使后者成为可能，即使快速启动不是你的事。但是为了这篇博文，让我们承认这些人是完全正确的，这些都不是使用Quarkus的好理由。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:16
#, fuzzy
msgid "So now what? Back to `<insert your favorite framework here>`? Not so fast..."
msgstr "那么现在怎么办？回到 `<insert your favorite framework here>` ？没有那么快..."

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:19
#, fuzzy
msgid "Quarkus didn't achieve fast startup and low memory footprint by using dark magic or lazy loading tricks but by entirely rethinking the way Java applications are bootstrapped.  The whole point of Quarkus is to move as much work as possible to the build time and this journey made us create a framework to push work at build time that can be leveraged in Quarkus extensions."
msgstr "Quarkus并不是通过使用黑暗魔法或懒惰加载技巧来实现快速启动和低内存占用，而是通过完全重新思考Java应用程序的启动方式。Quarkus的全部意义在于将尽可能多的工作转移到构建时间，这个过程使我们创建了一个框架，在构建时间推送工作，可以在Quarkus扩展中加以利用。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:21
#, fuzzy
msgid "A Quarkus extension? That sounds like a lot of work?"
msgstr "一个Quarkus扩展？这听起来像一个很大的工作？"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:24
#, fuzzy
msgid "No, really, it is not.  You can develop your own extensions very easily and they can solve some out of the ordinary problems in a very simple way."
msgstr "不，真的，它不是。你可以非常容易地开发你自己的扩展，它们可以以非常简单的方式解决一些超出常规的问题。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:26
#, fuzzy
msgid "Last week, one of of our users (hey, Juan!) asked this question on Zulip:"
msgstr "上周，我们的一个用户（嘿，胡安！）在Zulip上问了这个问题。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:28
#, fuzzy
msgid "Hi! I'm trying to understand how to find classes with some criteria and add them to the dependency injection context, for example: I want to find all classes whose name ends with \"MessageTransformer\" and add them to the context, I want to find those classes in an external library, so I can't add annotations to them."
msgstr "你好！我想了解如何找到具有某些标准的类并将它们添加到依赖注入上下文中，例如。我想找到所有名字以 \"MessageTransformer \"结尾的类并将它们添加到上下文中，我想在一个外部库中找到这些类，所以我不能给它们添加注解。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:30
#, fuzzy
msgid "Let's see how we can solve this issue by developing a custom extension."
msgstr "让我们看看如何通过开发一个自定义扩展来解决这个问题。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:31
#, fuzzy, no-wrap
msgid "Creating the extension"
msgstr "创建扩展"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:34
#, fuzzy
msgid "Creating the extension is as simple as:"
msgstr "创建扩展是如此简单。"

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:38
#, no-wrap
msgid "mvn io.quarkus:quarkus-maven-plugin:create-extension -DwithoutTests\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:41
#, fuzzy
msgid "It will ask for a `groupId` - let's keep the default `org.acme` - and an extension id - I went for `message-transformers-as-beans`."
msgstr "它将要求输入一个 `groupId` --让我们保持默认的 `org.acme` --和一个扩展名--我选择了 `message-transformers-as-beans` 。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:43
#, fuzzy
msgid "Then you can import your new extension into your favorite IDE."
msgstr "然后，你可以将你的新扩展导入你最喜欢的IDE。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:44
#, fuzzy, no-wrap
msgid "Structure of the extension"
msgstr "扩展的结构"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:48
#, fuzzy
msgid "There is a lot to say about extensions but, in the context of this blog post, we will keep it short.  The extension is composed of three Maven modules:"
msgstr "关于扩展，有很多话要说，但在本篇博文中，我们将简短地介绍一下。该扩展由三个Maven模块组成。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:50
#, fuzzy
msgid "The parent module - nothing to see here"
msgstr "父模块--这里没什么可看的"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:51
#, fuzzy
msgid "The deployment module - this is the one of interest for our blog post"
msgstr "部署模块--这是我们的博文所关注的模块"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:52
#, fuzzy
msgid "The runtime module - in this blog post, we won't modify it"
msgstr "运行时模块--在这篇博文中，我们不会修改它"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:54
#, fuzzy
msgid "Let's keep it simple: the deployment module is what will be used at build time, the runtime module is what will be used at runtime."
msgstr "让我们保持简单：部署模块是在构建时使用的，运行时模块是在运行时使用的。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:56
#, fuzzy
msgid "In our case, we want to declare new beans and this is something we do at build time, so deployment module, here we come!"
msgstr "在我们的案例中，我们想声明新的豆子，这是我们在构建时做的事情，所以部署模块，我们来了！\"。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:57
#, fuzzy, no-wrap
msgid "Processors and build steps"
msgstr "处理器和构建步骤"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:60
#, fuzzy
msgid "If you have a look at your `deployment` module, you will see a `MessageTransformersAsBeansProcessor` and you can see a method annotated with the `@BuildStep` annotation in it."
msgstr "如果你看一下你的 `deployment` 模块，你会看到一个 `MessageTransformersAsBeansProcessor` ，你可以看到里面有一个注解为 `@BuildStep` 的方法。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:63
#, fuzzy
msgid "Quarkus build is populated by these build steps and they are following a consumer/producer model with dependency injection.  The items being consumed and produced are called ``BuildItem``s."
msgstr "Quarkus的构建是由这些构建步骤填充的，它们遵循一个消费者/生产者模型，并带有依赖性注入。被消费和生产的项目被称为 `BuildItem` s。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:66
#, fuzzy
msgid "The build step that is automatically generated is easy to understand.  It produces a `FeatureBuildItem` which will be consumed by Quarkus startup and you will see the extension name in the list displayed by Quarkus at startup:"
msgstr "自动生成的构建步骤很容易理解。它产生一个 `FeatureBuildItem` ，将被Quarkus启动时消耗，你将在Quarkus启动时显示的列表中看到扩展名。"

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:72
#, no-wrap
msgid ""
"INFO  [io.quarkus] my-app 1.0.0-SNAPSHOT on JVM (powered by Quarkus 1.13.2.Final) started in 0.221s.\n"
"INFO  [io.quarkus] Profile prod activated.\n"
"INFO  [io.quarkus] Installed features: [cdi, message-transformers-as-beans]\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:74
#, fuzzy, no-wrap
msgid "The Jandex index"
msgstr "Jandex指数"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:78
#, fuzzy
msgid "Now that we are done with the scaffolding, let's think a bit about what we want to achieve: we need to find all the classes in a given package whose name ends with `MessageTransformer`."
msgstr "现在我们已经完成了脚手架的搭建，让我们来思考一下我们想要实现的目标：我们需要在一个给定的包中找到所有名字以 `MessageTransformer` 结尾的类。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:81
#, fuzzy
msgid "An important assumption of Quarkus is that the application lives in a closed world.  You cannot dynamically add a jar at runtime to your Quarkus application and expect it to work."
msgstr "Quarkus的一个重要假设是，应用程序生活在一个封闭的世界里。你不能在运行时动态地添加一个jar到你的Quarkus应用程序中，并期望它能工作。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:84
#, fuzzy
msgid "While it can be seen as a limitation, it opens all sorts of possibilities, one of which is the ability to index the classes and their annotations to easily look them up."
msgstr "虽然这可以被看作是一种限制，但它开启了各种可能性，其中之一就是为类和它们的注释编制索引的能力，以方便查找它们。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:86
#, fuzzy
msgid "This index, based on https://github.com/wildfly/jandex[Jandex], is a very important part of the Quarkus bootstrap."
msgstr "这个基于 link:https://github.com/wildfly/jandex[Jandex] 的指数，是Quarkus引导法的一个非常重要的部分。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:88
#, fuzzy
msgid "The Jandex index doesn't contain all the classes around but is, by default, limited to the application classes and the dependencies containing either a pre-built index or an empty `META-INF/beans.xml`."
msgstr "Jandex索引并不包含周围所有的类，但默认情况下，仅限于应用类和包含预建索引或空 `META-INF/beans.xml` 的依赖关系。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:91
#, fuzzy
msgid "In our case, we want to list the classes of an external dependency so we will need to add them to the index.  We can do that very easily by adding a build step to `MessageTransformersAsBeansProcessor`:"
msgstr "在我们的例子中，我们想列出一个外部依赖的类，所以我们需要将它们添加到索引中。我们可以通过在 `MessageTransformersAsBeansProcessor` 添加一个构建步骤来非常容易地做到这一点。"

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:98
#, no-wrap
msgid ""
"@BuildStep\n"
"IndexDependencyBuildItem indexExternalDependency() {\n"
"    return new IndexDependencyBuildItem(\"my.group.id\", \"my-artifact-id\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:101
#, fuzzy
msgid "This will add the content of the `my.group.id:my-artifact-id` jar to the index."
msgstr "这将把 `my.group.id:my-artifact-id` jar的内容添加到索引中。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:102
#, fuzzy, no-wrap
msgid "Declaring additional beans"
msgstr "申报额外的豆类"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:105
#, fuzzy
msgid "Now that we have our classes indexed, we want to make them CDI beans."
msgstr "现在我们有了我们的类的索引，我们想把它们变成CDI豆。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:107
#, fuzzy
msgid "This can be achieved by adding another build step:"
msgstr "这可以通过添加另一个构建步骤来实现。"

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:119
#, no-wrap
msgid ""
"@BuildStep\n"
"void declareMessageTransformersAsBean(CombinedIndexBuildItem index, <1>\n"
"        BuildProducer<AdditionalBeanBuildItem> additionalBeans) { <2>\n"
"    List<String> messageTransformers = index.getIndex().getKnownClasses().stream() <3>\n"
"            .filter(ci -> !Modifier.isAbstract(ci.flags())) <4>\n"
"            .map(ci -> ci.name().toString()) <5>\n"
"            .filter(c -> c.startsWith(\"my.package.\")) <6>\n"
"            .filter(c -> c.endsWith(\"MessageTransformer\")) <7>\n"
"            .collect(Collectors.toList());\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:126
#, no-wrap
msgid ""
"    additionalBeans.produce(new AdditionalBeanBuildItem.Builder() <8>\n"
"            .addBeanClasses(messageTransformers) \n"
"            .setUnremovable() <9>\n"
"            .setDefaultScope(DotNames.APPLICATION_SCOPED) <10>\n"
"            .build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:128
#, fuzzy
msgid "Consume the Jandex index"
msgstr "消耗Jandex指数"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:129
#, fuzzy
msgid "Inject the additional beans producer"
msgstr "注入额外的豆类生产者"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:130
#, fuzzy
msgid "Get all known classes from the index"
msgstr "从索引中获取所有已知的类"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:131
#, fuzzy
msgid "Filter out abstract classes"
msgstr "过滤掉抽象类"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:132
#, fuzzy
msgid "Get the FQCN of the class"
msgstr "获取类的FQCN"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:133
#, fuzzy
msgid "Only keep classes from the root package we target"
msgstr "只保留我们的目标根包中的类"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:134
#, fuzzy
msgid "Only keep ``MessageTransformer``s"
msgstr "只保留 `MessageTransformer` s"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:135
#, fuzzy
msgid "Produce an `AdditionalBeanBuildItem`"
msgstr "制作一个 `AdditionalBeanBuildItem` "

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:136
#, fuzzy
msgid "Make the beans unremovable to prevent ArC from removing the beans if they are only programatically consumed"
msgstr "使豆子不被移除，以防止ArC在豆子只被程序消耗的情况下将其移除。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:137
#, fuzzy
msgid "Set the default scope to `@ApplicationScoped` - can be any CDI scope of your preference"
msgstr "设置默认范围为 `@ApplicationScoped` - 可以是你喜欢的任何CDI范围"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:140
#, fuzzy
msgid "With this build step, any non-abstract class from our root package `my.package` whose name ends with `MessageTransformer` will be made an `@ApplicationScoped` CDI bean."
msgstr "通过这个构建步骤，我们的根包 `my.package` 中任何名字以 `MessageTransformer` 结尾的非抽象类都将成为一个 `@ApplicationScoped` CDI Bean。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:142
#, fuzzy
msgid "Cherry on top, all this work is done at build time and you don't need to scan your entire classpath at runtime."
msgstr "最重要的是，所有这些工作都在构建时完成，你不需要在运行时扫描整个classpath。"

#. type: delimited block =
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:147
#, fuzzy
msgid "Usually, we look up classes in the index with an interface, a superclass or an annotation.  It is less brittle and faster than crawling the whole index and filter by name."
msgstr "通常，我们在索引中用一个接口、一个超类或一个注解来查找类。这比抓取整个索引并按名称进行过滤要不那么脆，也更快。"

#. type: delimited block =
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:149
#, fuzzy
msgid "But the point here was to do with the constraints of the user and it wasn't an option to adapt the external dependency."
msgstr "但是，这里的重点是与用户的约束有关，而且适应外部依赖性不是一个选项。"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:151
#, fuzzy, no-wrap
msgid "That's all, folks!"
msgstr "就这些了，伙计们!"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:154
#, fuzzy
msgid "Obviously, this is a very simple example and you can do much more complex things with a Quarkus extension."
msgstr "很明显，这是一个非常简单的例子，你可以用Quarkus扩展做更复杂的事情。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:157
#, fuzzy
msgid "But the whole point of this blog post was to demonstrate that you can easily leverage our extension framework to solve real-life issues.  And **in ~10 minutes of coding, our problem is gone**."
msgstr "但这篇博文的全部意义在于证明你可以轻松地利用我们的扩展框架来解决现实生活中的问题。而 *在~10分钟的编码中，我们的问题就* 解决了。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:159
#, fuzzy
msgid "Next one?"
msgstr "下一个？"

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:160
#, fuzzy, no-wrap
msgid "Come Join Us"
msgstr "来加入我们"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:163
#, fuzzy
msgid "We value your feedback a lot so please report bugs, ask for improvements... Let's build something great together!"
msgstr "我们非常重视你的反馈，所以请报告错误，要求改进......让我们一起建立一个伟大的东西。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:165
#, fuzzy
msgid "If you are a Quarkus user or just curious, don't be shy and join our welcoming community:"
msgstr "如果你是Quarkus的用户或者只是好奇，请不要害羞，加入我们这个热情的社区。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:167
#, fuzzy
msgid "provide feedback on https://github.com/quarkusio/quarkus/issues[GitHub];"
msgstr "在 link:https://github.com/quarkusio/quarkus/issues[GitHub] 上提供反馈。"

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:168
msgid "craft some code and https://github.com/quarkusio/quarkus/pulls[push a PR];"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:169
msgid "discuss with us on https://quarkusio.zulipchat.com/[Zulip] and on the https://groups.google.com/d/forum/quarkus-dev[mailing list];"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:169
msgid "ask your questions on https://stackoverflow.com/questions/tagged/quarkus[Stack Overflow]."
msgstr ""
