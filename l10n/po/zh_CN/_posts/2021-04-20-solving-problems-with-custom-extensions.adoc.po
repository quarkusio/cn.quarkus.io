# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, no-wrap
msgid "gsmet"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, no-wrap
msgid "2021-04-20"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, no-wrap
msgid "If fast startup and live reload weren't enough for you, maybe custom extensions will convince you that you can achieve great things with Quarkus."
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, no-wrap
msgid "development-tips extensions"
msgstr ""

#. type: YAML Front Matter: title
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:1
#, no-wrap
msgid "Solving problems with custom Quarkus extensions"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:11
msgid "From time to time, I see tweets or articles claiming they don't see the point of Quarkus because \"who needs fast startup?\", \"I have plenty of memory\" or \"what is the point of live reload?\"."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:14
msgid "I could write an article debunking these arguments and explain how the latter makes your development workflow much more efficient and how the former makes the latter possible, even if fast boots are not your thing.  But for the sake of this blog post, let's admit these persons are absolutely right and these are not good reasons to use Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:16
msgid "So now what? Back to `<insert your favorite framework here>`? Not so fast..."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:19
msgid "Quarkus didn't achieve fast startup and low memory footprint by using dark magic or lazy loading tricks but by entirely rethinking the way Java applications are bootstrapped.  The whole point of Quarkus is to move as much work as possible to the build time and this journey made us create a framework to push work at build time that can be leveraged in Quarkus extensions."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:21
msgid "A Quarkus extension? That sounds like a lot of work?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:24
msgid "No, really, it is not.  You can develop your own extensions very easily and they can solve some out of the ordinary problems in a very simple way."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:26
msgid "Last week, one of of our users (hey, Juan!) asked this question on Zulip:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:28
msgid "Hi! I'm trying to understand how to find classes with some criteria and add them to the dependency injection context, for example: I want to find all classes whose name ends with \"MessageTransformer\" and add them to the context, I want to find those classes in an external library, so I can't add annotations to them."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:30
msgid "Let's see how we can solve this issue by developing a custom extension."
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:31
#, no-wrap
msgid "Creating the extension"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:34
msgid "Creating the extension is as simple as:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:38
#, no-wrap
msgid "mvn io.quarkus:quarkus-maven-plugin:create-extension -DwithoutTests\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:41
msgid "It will ask for a `groupId` - let's keep the default `org.acme` - and an extension id - I went for `message-transformers-as-beans`."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:43
msgid "Then you can import your new extension into your favorite IDE."
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:44
#, no-wrap
msgid "Structure of the extension"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:48
msgid "There is a lot to say about extensions but, in the context of this blog post, we will keep it short.  The extension is composed of three Maven modules:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:50
msgid "The parent module - nothing to see here"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:51
msgid "The deployment module - this is the one of interest for our blog post"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:52
msgid "The runtime module - in this blog post, we won't modify it"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:54
msgid "Let's keep it simple: the deployment module is what will be used at build time, the runtime module is what will be used at runtime."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:56
msgid "In our case, we want to declare new beans and this is something we do at build time, so deployment module, here we come!"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:57
#, no-wrap
msgid "Processors and build steps"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:60
msgid "If you have a look at your `deployment` module, you will see a `MessageTransformersAsBeansProcessor` and you can see a method annotated with the `@BuildStep` annotation in it."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:63
msgid "Quarkus build is populated by these build steps and they are following a consumer/producer model with dependency injection.  The items being consumed and produced are called ``BuildItem``s."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:66
msgid "The build step that is automatically generated is easy to understand.  It produces a `FeatureBuildItem` which will be consumed by Quarkus startup and you will see the extension name in the list displayed by Quarkus at startup:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:72
#, no-wrap
msgid ""
"INFO  [io.quarkus] my-app 1.0.0-SNAPSHOT on JVM (powered by Quarkus 1.13.2.Final) started in 0.221s.\n"
"INFO  [io.quarkus] Profile prod activated.\n"
"INFO  [io.quarkus] Installed features: [cdi, message-transformers-as-beans]\n"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:74
#, no-wrap
msgid "The Jandex index"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:78
msgid "Now that we are done with the scaffolding, let's think a bit about what we want to achieve: we need to find all the classes in a given package whose name ends with `MessageTransformer`."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:81
msgid "An important assumption of Quarkus is that the application lives in a closed world.  You cannot dynamically add a jar at runtime to your Quarkus application and expect it to work."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:84
msgid "While it can be seen as a limitation, it opens all sorts of possibilities, one of which is the ability to index the classes and their annotations to easily look them up."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:86
msgid "This index, based on https://github.com/wildfly/jandex[Jandex], is a very important part of the Quarkus bootstrap."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:88
msgid "The Jandex index doesn't contain all the classes around but is, by default, limited to the application classes and the dependencies containing either a pre-built index or an empty `META-INF/beans.xml`."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:91
msgid "In our case, we want to list the classes of an external dependency so we will need to add them to the index.  We can do that very easily by adding a build step to `MessageTransformersAsBeansProcessor`:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:98
#, no-wrap
msgid ""
"@BuildStep\n"
"IndexDependencyBuildItem indexExternalDependency() {\n"
"    return new IndexDependencyBuildItem(\"my.group.id\", \"my-artifact-id\");\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:101
msgid "This will add the content of the `my.group.id:my-artifact-id` jar to the index."
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:102
#, no-wrap
msgid "Declaring additional beans"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:105
msgid "Now that we have our classes indexed, we want to make them CDI beans."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:107
msgid "This can be achieved by adding another build step:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:119
#, no-wrap
msgid ""
"@BuildStep\n"
"void declareMessageTransformersAsBean(CombinedIndexBuildItem index, <1>\n"
"        BuildProducer<AdditionalBeanBuildItem> additionalBeans) { <2>\n"
"    List<String> messageTransformers = index.getIndex().getKnownClasses().stream() <3>\n"
"            .filter(ci -> !Modifier.isAbstract(ci.flags())) <4>\n"
"            .map(ci -> ci.name().toString()) <5>\n"
"            .filter(c -> c.startsWith(\"my.package.\")) <6>\n"
"            .filter(c -> c.endsWith(\"MessageTransformer\")) <7>\n"
"            .collect(Collectors.toList());\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:126
#, no-wrap
msgid ""
"    additionalBeans.produce(new AdditionalBeanBuildItem.Builder() <8>\n"
"            .addBeanClasses(messageTransformers) \n"
"            .setUnremovable() <9>\n"
"            .setDefaultScope(DotNames.APPLICATION_SCOPED) <10>\n"
"            .build());\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:128
msgid "Consume the Jandex index"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:129
msgid "Inject the additional beans producer"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:130
msgid "Get all known classes from the index"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:131
msgid "Filter out abstract classes"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:132
msgid "Get the FQCN of the class"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:133
msgid "Only keep classes from the root package we target"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:134
msgid "Only keep ``MessageTransformer``s"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:135
msgid "Produce an `AdditionalBeanBuildItem`"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:136
msgid "Make the beans unremovable to prevent ArC from removing the beans if they are only programatically consumed"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:137
msgid "Set the default scope to `@ApplicationScoped` - can be any CDI scope of your preference"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:140
msgid "With this build step, any non-abstract class from our root package `my.package` whose name ends with `MessageTransformer` will be made an `@ApplicationScoped` CDI bean."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:142
msgid "Cherry on top, all this work is done at build time and you don't need to scan your entire classpath at runtime."
msgstr ""

#. type: delimited block =
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:147
msgid "Usually, we look up classes in the index with an interface, a superclass or an annotation.  It is less brittle and faster than crawling the whole index and filter by name."
msgstr ""

#. type: delimited block =
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:149
msgid "But the point here was to do with the constraints of the user and it wasn't an option to adapt the external dependency."
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:151
#, no-wrap
msgid "That's all, folks!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:154
msgid "Obviously, this is a very simple example and you can do much more complex things with a Quarkus extension."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:157
msgid "But the whole point of this blog post was to demonstrate that you can easily leverage our extension framework to solve real-life issues.  And **in ~10 minutes of coding, our problem is gone**."
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:159
msgid "Next one?"
msgstr ""

#. type: Title ==
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:160
#, no-wrap
msgid "Come Join Us"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:163
msgid "We value your feedback a lot so please report bugs, ask for improvements... Let's build something great together!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:165
msgid "If you are a Quarkus user or just curious, don't be shy and join our welcoming community:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:167
msgid "provide feedback on https://github.com/quarkusio/quarkus/issues[GitHub];"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:168
msgid "craft some code and https://github.com/quarkusio/quarkus/pulls[push a PR];"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:169
msgid "discuss with us on https://quarkusio.zulipchat.com/[Zulip] and on the https://groups.google.com/d/forum/quarkus-dev[mailing list];"
msgstr ""

#. type: Plain text
#: upstream/_posts/2021-04-20-solving-problems-with-custom-extensions.adoc:169
msgid "ask your questions on https://stackoverflow.com/questions/tagged/quarkus[Stack Overflow]."
msgstr ""
