# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#, no-wrap
msgid "cesarsaavedra"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#, no-wrap
msgid "2020-02-10"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#, no-wrap
msgid "user-story"
msgstr ""

#. type: Title =
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:1
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:10
#, no-wrap
msgid "Suomen Asiakastieto Oy chooses Quarkus for their microservices development"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:13
#, no-wrap
msgid "Asiakastieto logo"
msgstr ""

#. type: Target for macro image
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:13
#, no-wrap
msgid "Asiakastieto-logo.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:17
msgid "Based in Helsinki, Finland, The Asiakastieto Group is a leading provider of innovative, digital business and consumer information services in the Nordic region. In the banking, financial services, and retail industries, Asiakastieto’s products and services support risk management, finance and business administration, credit or loan-related decision-making, sales and marketing.  When the EU introduced its revised Payment Services Directive (PSD2) in 2018 to increase competition, promote innovation, and improve security in the payments industry, Asiakastieto began evaluating how to help its customers manage the impact of the directive. This initiative aligned with one of the company’s key corporate social responsibility goals: to increase trust in society. The Asiakastieto Group has many brands such as UC AB, Intellia Oy, and Suomen Asiakastieto Oy, the latter being the one that we cover in this user story."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:18
#, no-wrap
msgid "Why microservices?"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:21
msgid "Suomen Asiakastieto Oy has many different departments: Risk Decision, SME & Consumer, Customer Data Management, Digital Processes. Real Estate and Collateral Information, which operates within Digital Processes, had deployed to their application server instance a new application, which happened to have issues while running in production affecting the stability of the application server and hence other applications running on it. This resulted in the need to reboot the application server every time this anomaly occurred leading to unexpected downtime and to a negative customer satisfaction."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:23
msgid "Because of this, they decided to adopt microservice architectures to introduce better resilience and high-availability into their solutions so that if a microservice or an application went awry, it would not affect the entire system. So, when the time came to start developing their PSD2 project, they decided to start implementing microservices in Thorntail, which is an open source application assembler - similar to Spring Boot - that also implements MicroProfile, an community-driven open source specification for Java microservices. They decided on Thorntail because its functionality and capabilities were close to the application server capabilities they were familiar with. After being in production for a few months, they learned about Quarkus and its innovative approach that rethinks Java for containers, cloud and Kubernetes. Around the same time, they also learned about the end-of-life of Thorntail. Their continued desire to develop new microservices as well as to break their monolithic application servers into microservices made them evaluate Quarkus more in depth."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:24
#, no-wrap
msgid "Their monoliths and existing microservices"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:27
msgid "With respect to their monoliths, they have about twelve JBoss EAP instances, each running dozens of their applications. As a first step to make the entire system more distributed, they decided to start moving some of these workloads to OpenShift by running many instances of JBoss EAP, each containing a single application. As a result, they experienced high memory consumption. At this point, they started looking into ways to reduce the footprint of these applications running on OpenShift."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:29
msgid "With respect to their existing Thorntail microservices, which they needed to migrate to Quarkus, they noticed that spinning up a Thorntail container was taking about 1 minute to start up. When they migrated it to Quarkus, the service now starts in 0.4 seconds! With this improved startup time, they could scale up their services faster so that they could be readily available faster to process extra traffic leading to a better customer experience during peak times since customers would not have to wait on the browser to have their requests serviced, for example."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:31
msgid "In fact, before going into production with Quarkus, Eero Arvonen, Solution Architect at IT Development Finland Asiakasieto Oy, made a comparative analysis between the Thorntail and Quarkus versions of a microservice. This first chart shows a comparison between the original version of one of their Thortail microservices, which used JAX-WS, next to different Quarkus versions of the same microservice."
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:33
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:38
#, no-wrap
msgid "Asiakastieto memutil"
msgstr ""

#. type: Target for macro image
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:33
#, no-wrap
msgid "Asiakastieto-Thorntail-vs-Q-mem-util.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:36
msgid "This next chart shows the performance and startup time results for the same combinations of microservice versions as the previous graph."
msgstr ""

#. type: Target for macro image
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:38
#, no-wrap
msgid "Asiakastieto-Thorntail-vs-Q-perf.png"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:41
msgid "According to Eero, _“migrating from Thorntail to JVM-Quarkus was trivial and memory consumption went down by about 75% while CPU consumption was reduced by about 70%. This was accompanied by a 40% increase in throughput resulting in a faster response time. Migrating to Quarkus native, we found that the application ran at a better throughput even with 50MB of memory which is 95% less than with Thorntail. We also identified a space-time tradeoff between different native Quarkus setups: deploying it with 200MB of memory instead of 50MB will reduce its CPU requirements by two thirds. Thus, if we ever had to balance CPU vs memory within our OpenShift cluster, this would prove useful.”_"
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:43
#, no-wrap
msgid "Live Coding"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:47
msgid "They use and like the Quarkus development mode, also known as live coding, a lot. Before Quarkus, they used to use JRebel, for hot replacing but it was unreliable. According to Eero _“Quarkus development mode has by far a better track record.”_ Now that they are writing new microservices, they have made it a best practice to use live coding. With Thorntail, there were manual steps to deploy changes to try them out whereas with Quarkus, the changes are automatically applied to the running process so that the developer can immediately test the application. This makes developers more productive in that they can verify and troubleshoot their code faster.  Eero took it upon himself to deliver a small internal Quarkus workshop, which got developers very excited about this new and innovative technology, _“people are looking forward to working with Quarkus”_, mentioned Eero. Quarkus is getting developers excited and this has led to other developers across the organization to use Quarkus for their projects."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:48
#, no-wrap
msgid "Learning Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:51
msgid "_“Quarkus was very easy to pick up”_, according to Eero. In his opinion, the Quarkus guides on https://quarkus.io/ are very good, thorough and comprehensive with great code examples. In addition, he found a very active community in Quarkus. When they ran into problems, they were able to search the internet for the error messages and easily found answers online. In addition, the Quarkus community and Quarkus engineers are very active even on external forums answering questions and helping folks inquiring for help."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:52
#, no-wrap
msgid "Some pain points"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:55
msgid "As awesome as Quarkus is, this constantly evolving and innovative technology had some areas for improvement. For example, Eero mentioned that Java API for XML Web Services (JAX-WS) didn’t work on native mode. Also SSL, by default, is disabled but available for HTTP/S, which he needed to use and got it to work following the configuration instructions, which he found complex. In addition, he would like to see improvements in how reflection is currently configured, which was time-consuming to configure because he had to use a trial-and-error approach to get it to work. He’d like to see a way to make this reflection configuration process easier to carry out."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:56
#, no-wrap
msgid "Lessons Learned"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:59
msgid "Because Quarkus takes the approach of a closed world for application development, there needs to be a bit of a mind shift when writing applications. As an example, for their existing applications, Asiakastieto used a configuration manager to read in configuration information (connection URLs, DB connections strings, etc.) at application startup. Since with Quarkus, in native mode, part of the application startup happens during build time, they had to reconfigure the configuration manager to read in the configuration information when the application was run. Although the change was easy to make, it highlights the importance of understanding how Quarkus applications need to be implemented under this new paradigm."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:60
#, no-wrap
msgid "Current state of Quarkus projects"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:63
msgid "As mentioned earlier, the Asiakastieto Oy PSD2 project had been implemented in Thorntail microservices and when they learned about Quarkus, the decision was made to migrate their Thorntail microservices to Quarkus. As of this writing, out of the 7 Thorntail microservices in their PSD2 application, one has been migrated to Quarkus and is running in production."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:65
msgid "Two more microservices have been migrated from Thorntail to Quarkus (native mode) and are currently being tested and will be deployed during their next incremental application update during February 2020."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:66
#, no-wrap
msgid "What’s next"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:69
msgid "When their microservices initiative started one and a half years ago, Asiakastieto Oy decided to use Thorntail as their main technology for Java microservices. With the news of the sunsetting of Thorntail and the introduction of Quarkus, they have established a new policy that every new project will be implemented in Quarkus in JVM mode as a minimum and when feasible use Quarkus in native mode. There are already two new projects that are being implemented in Quarkus at present with more coming in the future."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:71
msgid "For more information on Quarkus:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:73
msgid "Quarkus website: http://quarkus.io"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:74
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:75
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:76
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:77
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:78
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-02-10-asiakastieto-chooses-quarkus-for-microservices.adoc:79
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr ""
