# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:2
#, fuzzy, no-wrap
msgid "**Emmanuel**: Quarkus Inside number one. Test.\n"
msgstr " *伊曼纽尔* 。夸库斯内部第一。测试。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:4
#, fuzzy
msgid "Well, Hello everyone. And we're cheap on the budget right now."
msgstr "嗯，大家好。而我们现在的预算很便宜。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:6
#, fuzzy
msgid "Alright, so I'm not alone in this madness. Welcome to this new episode of Quarkus Inside. It's an official one, in the sense that it's not a meta subject. We're gonna have real conversations around test today and to have conversation here. I do have Max, my colegue and partner in crime, but also Georgios which has been a massive contributor to Quarkus, being left and right, so maybe Georgios, do you wanna introduce yourself?"
msgstr "好吧，所以我不是一个人在做这种疯狂的事。欢迎来到这个新的Quarkus Inside节目。这是一个官方的，在这个意义上，它不是一个元的主题。我们今天将围绕测试进行真正的对话，并在这里进行对话。我有马克斯，我的同事和犯罪伙伴，但也有乔治斯，他一直是Quarkus的一个巨大贡献者，是左右手，所以也许乔治斯，你想介绍一下自己吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:8
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, thanks, thanks, you Emmanuel.\n"
msgstr " *乔治亚斯* 。是的，谢谢，谢谢，你是伊曼纽尔。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:10
#, fuzzy
msgid "Yeah, my name is Georgios or George as it would be spelled in English. I've been with Red Hat for a couple of years, but my life really changed when the great folks that started Quarkus really announced it internally, and I had a massive way. Oh man, I gotta jump on to this thing. It's beyond what I could ever imagine. So yeah, I started contributing nesting for spring stuff and then just took it from there basically. Now trying to do, like you said, things left or right."
msgstr "是的，我的名字叫Georgios或George，因为它在英语中会被拼写。我在红帽公司工作了几年，但我的生活真的改变了，当那些创办Quarkus的伟大的人们在内部宣布它时，我有了一个巨大的方法。哦，伙计，我得跳到这个东西上。它超出了我所能想象的范围。所以，是的，我开始为春天的东西提供嵌套，然后基本上就从那里开始了。现在想做的，就像你说的，事情是向左还是向右。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:12
#, fuzzy, no-wrap
msgid "**Emmanuel**: So I guess to... I'll speak in the name of the great folks of Quarkus it's like \"Thanks God, Georgios is here\", 'cause you jump on every trouble we have. It's been a great, great experience.\n"
msgstr " *埃马纽* 埃尔：所以我想......我以夸父的名义发言，就像 \"感谢上帝，乔治斯在这里\"，因为你跳上了我们的每一个麻烦。这是一个伟大的、伟大的经历。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:14
#, fuzzy, no-wrap
msgid "**Georgios**: Thank you thinking very much.\n"
msgstr " *乔治亚斯* 。非常感谢你的思考。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:16
#, fuzzy, no-wrap
msgid "**Emmanuel**: Alright, so, Max, do you wanna say a few things before we... We go to the...\n"
msgstr "好吧，那么，麦克斯，在我们......我们进入......之前，你想说几句话吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:18
#, fuzzy, no-wrap
msgid "**Max**: So, yes, a few things. I hopefully should have fixed my sound now and Emmanuel should have stopped sending out my sound twice.\n"
msgstr " *马克思* ：所以，是的，有几件事。我希望现在应该已经修复了我的声音，艾玛纽尔应该已经停止发送我的声音两次。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:20
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yes.\n"
msgstr " *伊曼纽尔* ：是的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:22
#, fuzzy, no-wrap
msgid "**Max**: That's less weird.\n"
msgstr " *马克思* ：这就不那么奇怪了。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:24
#, fuzzy
msgid "And other thing is that we actually, over the weekends, our channel actually went from around 8-900 to, now past a thousand that's cool."
msgstr "另一件事是，我们实际上，在周末，我们的频道实际上从8-900左右上升到，现在超过了1000，这很酷。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:26
#, fuzzy
msgid "Yeah, so we need to do this. And over the weekend we had another thing: Tim Fox started thread a about how you pronounced Quarkus and since it's a long, a long thread. So I'm just wondering how you guys pronouncing it. So mine is Quarkus."
msgstr "是的，所以我们需要这样做。周末我们还有一件事：蒂姆-福克斯发起了一个关于Quarkus如何发音的主题，因为它是一个很长的，一个很长的主题。所以我只是想知道你们是如何发音的。所以我的是Quarkus。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:28
#, fuzzy
msgid "What's yours Emmanuel?"
msgstr "你的Emmanuel是什么？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:30
#, fuzzy, no-wrap
msgid "**Emmanuel**: To me it's like, \"Spartakus\" or it's Quarkus. But I'm Frensh so who knows.\n"
msgstr " *埃马纽* 埃尔：对我来说，这就像 \"斯巴达克斯\"，或者是夸库斯。但我是法兰斯人，所以谁知道呢。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:32
#, fuzzy, no-wrap
msgid "**Georgios**: And I was on a, I say, Quarkus.\n"
msgstr " *Georgios* 。而我是在一个，我说，Quarkus。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:34
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yeah, 1.02k you guys send that? And that's the Tim Fox threat for the conversation. And I love when British talks to British about pronunciation, or can... Yeah, I always just love it.\n"
msgstr " *伊曼纽尔* ：是的，1.02k你们发的？这就是蒂姆-福克斯对这次谈话的威胁。我喜欢英国人和英国人谈论发音的时候，或者可以......是的，我总是喜欢这样。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:36
#, fuzzy, no-wrap
msgid "**Max**: It was tomato tomato, data, data. Yeah, the whole thing. Anyway, I accept all pronunciation of Quarkus, it's fine.\n"
msgstr " *马克思* ：是西红柿西红柿，数据，数据。是的，整个事情。总之，我接受Quarkus的所有发音，这很好。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:38
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yes, it's. You know the worst was Cylon. Exactly this one was like really difficult so we did better for Quarkus... Alright.\n"
msgstr " *伊曼纽尔* ：是的，是的。你知道最糟糕的是塞隆。确切地说，这个人就像真的很困难，所以我们对Quarkus做得更好......好吧。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:40
#, fuzzy, no-wrap
msgid "**Max**: The last thing I had was: So we published an article, like a blog with the video, that we did last time and we added the transcription in there, which I think works pretty nice, like last time, is we didn't talk about technical hopefully today, George gonna tell us all good things you have to know about testing. So it might be more useful. If anyone wanna say that's useful or we should keep doing that! All done by Markus Eisele. He volunteered to do it. So pretty awesome. It's also actually the sub-titles.\n"
msgstr " *马克思* ：我的最后一件事是。因此，我们发表了一篇文章，就像我们上次做的视频的博客，我们在其中加入了转录，我认为效果很好，就像上次一样，我们今天没有谈论技术上的希望，乔治会告诉我们所有你必须知道的关于测试的好东西。所以它可能更有用。如果有人想说这是有用的，或者我们应该继续这样做!全部由Markus Eisele完成。他自愿做的。所以相当棒。其实这也是副标题的问题。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:42
#, fuzzy
msgid "So if you go and you don't standing neither Emmanuel's French English or my mumbling Danish. There's now sub-titles!"
msgstr "因此，如果你去了，而你又没有站在埃马纽埃尔的法语英语或我喃喃自语的丹麦语上。现在有副标题了!"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:44
#, fuzzy, no-wrap
msgid "**Emmanuel**: Transcripts here and subtitles in the video itself you mean?\n"
msgstr " *伊曼纽尔* ：你是说这里的文字记录和视频本身的字幕？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:46
#, fuzzy, no-wrap
msgid "**Max**: Yeah, so if you go to the videos, there is one whatever Google recognize which I kept there just for entertainment value, the one that I...\n"
msgstr " *马克斯* ：是的，所以如果你去看视频，有一个不管是谷歌认可的，我把它放在那里只是为了娱乐价值，我的那个......。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:48
#, fuzzy, no-wrap
msgid "**Emmanuel**: Where do I go, I guess, videos...\n"
msgstr " *伊曼纽尔* ：我去哪里，我想，视频......。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:50
#, fuzzy, no-wrap
msgid "**Max**: Yeah you click on the video and then you see the... the CC, in the corner. So you just dump in the text and then Google figure out where the timestamps are. I was pretty impressed it's... Is it good? Would be good if the time spent... is something that people like to for that was...\n"
msgstr " *麦克斯* ：是的，你点击视频，然后你看到......CC，在角落里。因此，你只需在文本中转储，然后谷歌找出时间戳的位置。我对它印象深刻，它是......好吗？如果所花的时间......是人们喜欢的东西，那就好了。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:52
#, fuzzy, no-wrap
msgid "**Emmanuel**: Anyway, that was the production of things here. Receiving our stuff are... Yeah, alright, so we're ready. We can share the screen of Georgios, but today we're going to talk about tests in Quarkus. So Is a Java framework, so I just use JUnit and off I go right? Or is it a bit more complicated?\n"
msgstr "总之，这就是这里的生产情况。收到我们的东西是......是的，好的，所以我们准备好了。我们可以分享Georgios的屏幕，但今天我们要谈的是Quarkus的测试。Quarkus是一个Java框架，所以我只要使用JUnit就可以了，对吗？还是说它更复杂一点？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:54
#, fuzzy
msgid "What do you guys think?"
msgstr "你们怎么看？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:56
#, fuzzy
msgid "0:05:35 S1:"
msgstr "0:05:35 S1:"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:58
#, fuzzy, no-wrap
msgid "**Georgios**: Well, like all things in life. I think it's a little more complicated but not too much, not too much. If you're a regular enterprise Java developer no problem at all, it usesall the stuff you already know. So yeah, you'll have to use a couple of new annotations or whatever, but you just pick up the regular libraries, you already know we'll show QuarKito we'll show WireMock, AssertJ. So all good, you just have to understand how these fit in with the Quarkus ecosystem, but other that, all good.\n"
msgstr " *乔治亚斯* 。嗯，就像生活中的所有事情一样。我认为它有点复杂，但不会太多，不会太多。如果你是一个普通的企业级Java开发者，完全没有问题，它使用你已经知道的所有东西。所以，是的，你必须使用一些新的注解或其他东西，但你只要拿起常规的库，你已经知道我们会展示QuarKito，我们会展示WireMock和AssertJ。所以一切都很好，你只需要了解这些是如何与Quarkus生态系统相适应的，但除此之外，一切都很好。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:60
#, fuzzy, no-wrap
msgid "**Emmanuel**: Okay, by the way. So here, it's not about Test, but John says, \"Hey how do you pronouce pronouciation?\" ;]\n"
msgstr " *伊曼纽尔* ：好的，顺便说一下。所以在这里，这不是关于测试的问题，但约翰说，\"嘿，你的发音如何？\" ;] 。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:62
#, fuzzy
msgid "So it says \"prononciation\" in French, so there you go to not... But, more seriously, if you have questions, what we are having conversation with Georgios around test, so we're gonna pretend we're having... Well, not that pretending actually, but we're gonna have questions to Georgios and ask questions, but if you do have questions on your own, just send them to the comments and will push a few selected ones, and then you know, ask Georges for the answer hopefully."
msgstr "所以它在法语中说 \"发音\"，所以你去了不是吗？但是，更严重的是，如果你有问题，我们正在与Georgios进行测试方面的对话，所以我们要假装我们正在进行？好吧，实际上不是假装，但我们会向乔治亚斯提问，但如果你有自己的问题，就把它们发送到评论里，我们会推送一些选定的问题，然后你知道，希望能向乔治亚斯询问答案。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:64
#, fuzzy
msgid "So something I wanted to say is if you want a plain unit test with like no dependencies with the infrastrcuture you just can go and use your unit or whatever is your preferred framework. I think we have to say we did settle on JUnit 5, as the default framework to do testing, so we recommend you keep that for Quarkus, but then Quarkus has this interesting model where it's fast enough or really fast to get started, to start itself therefore we can run the whole application in each of your tests, and then you can run in real life situation, right, is that correct?"
msgstr "所以我想说的是，如果你想要一个简单的单元测试，不需要依赖基础设施，你就可以使用你的单元或任何你喜欢的框架。我想我们必须说，我们确实把JUnit 5作为做测试的默认框架，所以我们建议你为Quarkus保留这个框架，但是Quarkus有一个有趣的模型，它足够快，或者说非常快，可以启动自己，因此我们可以在你的每个测试中运行整个应用程序，然后你可以在现实生活中运行，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:66
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah.\n"
msgstr " *乔治亚斯* 。是的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:68
#, fuzzy, no-wrap
msgid "**Emmanuel**: You want me to share your screen. So, you show that a little bit or?\n"
msgstr " *伊曼纽尔* ：你想让我分享你的屏幕。那么，你展示一下，还是？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:70
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, whatever you think.\n"
msgstr " *乔治亚斯* 。是的，不管你怎么想。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:72
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yeah, sure, let's get started with it. Unless you guys have some more introduction on the testing or would you...\n"
msgstr " *Emmanuel* : 是的，当然，让我们开始吧。除非你们有更多关于测试的介绍，或者你们会..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:74
#, fuzzy, no-wrap
msgid "**Max**: No, sounds good to me!\n"
msgstr " *马克斯* ：不，对我来说听起来很好"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:76
#, fuzzy, no-wrap
msgid "**Georgios**: No, I'm good.\n"
msgstr " *乔治亚斯* 。不，我很好。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:78
#, fuzzy, no-wrap
msgid "**Emmanuel**: So there you go, Yeah, I do Skype. So this is a Quarkus app, right?\n"
msgstr " *伊曼纽尔* ：所以你去，是的，我做Skype。所以这是一个Quarkus应用程序，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:80
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, this is a Quarkus application that I generated using my Maven tooling, so I haven't changed anything, just created a Quarkus application opened it in IntelliJ which I'm using throughout this present. [unaudible, scattered] So you wanna talk about what these two-generated tests are?\n"
msgstr " *Georgios* 。是的，这是我用Maven工具生成的Quarkus应用程序，所以我没有改变任何东西，只是创建了一个Quarkus应用程序，在IntelliJ中打开了它，我在这里一直在使用。[听不清，散开]那么你想谈谈这两个生成的测试是什么？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:82
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yeah, let's start with the first one.\n"
msgstr " *伊曼纽尔* ：是的，让我们从第一个开始。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:84
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, got it, so, okay, cool. So like Emmanuel said, when we use JUnit 5 with Quarkus, our integration with Quarkus, what it does is that it starts Quarkus itself. The whole Quarkus application. And we envision like you run actual, hit the actual endpoints that your application uses, that's not the only thing you can do. Of course, you can do a whole bunch of other stuff. But that's like the main way we see it being used. So here you see the Quarkus test is our integration point with JUnit 5, and that's all you need to do just to start your Quarkus application inside the test. And here is like you just write your regular test. We're using REST-assured here, with Quarkus supports out of the box, so you're hitting the Hallo endpoint expecting it...\n"
msgstr " *乔治亚斯* 。是的，知道了，所以，好的，很酷。所以就像Emmanuel说的，当我们把JUnit 5和Quarkus一起使用时，我们与Quarkus的集成，它所做的就是启动Quarkus本身。整个Quarkus应用程序。我们设想像你运行实际的，击中你的应用程序使用的实际端点，这不是你唯一能做的事情。当然，你可以做一大堆其他的事情。但这是我们看到它被使用的主要方式。所以在这里你看到Quarkus测试是我们与JUnit 5的集成点，这就是你所需要做的，只是在测试中启动你的Quarkus应用程序。而这里就像你只是写你的常规测试。我们在这里使用REST-assured，Quarkus支持开箱即用，所以你打到Hallo端点，期望它..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:86
#, fuzzy, no-wrap
msgid "**Emmanuel**: You don't have to, by the way, but I think we integrate right away, the port and host that the Quarkus app is running with REST-assured. It's like a total transparent experience for you.\n"
msgstr " *Emmanuel* ：顺便说一下，你不必这样做，但我认为我们马上就会把Quarkus应用程序运行的端口和主机与REST-assured进行整合。这对你来说是一个完全透明的体验。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:88
#, fuzzy, no-wrap
msgid "**Georgios**: Exactly, yeah, if we didn't integrate out of the box, you would have to select here. You have to do port, like 8081 or whatever. Yeah, we do that out of the box. So it's the experiences with no friction at all.\n"
msgstr " *Georgios* 。没错，是的，如果我们没有集成开箱，你就必须在这里选择。你必须做端口，如8081或其他。是的，我们是开箱即用的。所以它的经验是完全没有摩擦的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:90
#, fuzzy, no-wrap
msgid "**Emmanuel**: Oh, speaking of... So you put 8081 for a reason. So the default port, in Quarkus is 8080, so that's how we start.\n"
msgstr " *Emmanuel* : 哦，说到......所以你把8081放在这里是有原因的。所以Quarkus的默认端口是8080，所以我们就是这样开始的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:92
#, fuzzy
msgid "So historically, from WildFly and even before... But for test we've decided to bump the port to one, so that you can run your test and while having your life application running, right?"
msgstr "因此，从历史上看，从WildFly甚至以前......但为了测试，我们决定将端口提升到一个，这样你就可以在运行你的生活应用的同时运行你的测试，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:94
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah exactly, so exactly our default port for running the regular applications is 8080 but you bring your test 8081. so, we envision... You can do multiple things in... also the dev mode runs in 8080, so you can have your dev mode running and then your test like running separately. But just the way we have to that to make things.\n"
msgstr " *Georgios* 。所以，我们设想......你可以在......开发模式中做多种事情，也可以在8080中运行，所以你可以让你的开发模式运行，然后你的测试也单独运行。但是，我们必须以这种方式来做事情。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:96
#, fuzzy, no-wrap
msgid "**Emmanuel**: Can I change it?\n"
msgstr " *伊曼纽尔* ：我可以改变它吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:98
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, absolutely. You go here to Quarkus, well, this my... IntelliJ Ultimate doesn't have a property completion yet.\n"
msgstr " *乔治亚斯* 。是的，当然。你到Quarkus这里来，嗯，这个我的......IntelliJ Ultimate还没有一个属性完成。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:100
#, fuzzy
msgid "I know Max is working on it but there's also a community plug-in, but I haven't installed it yet... But anyway, http port would be like 8080, say 9090 for the regular one."
msgstr "我知道Max正在研究这个问题，但也有一个社区插件，但我还没有安装......但无论如何，http端口应该是8080，比如9090的普通端口。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:102
#, fuzzy, no-wrap
msgid "**Max**: Just get to clarify: IntelliJ, if you install the community Quarkus plug-in you should have...\n"
msgstr " *马克斯* ：只是得到澄清：IntelliJ，如果你安装社区Quarkus插件，你应该有..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:104
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, yeah, yeah, exactly. I haven't installed that, but IntelliJ Ultimate out-of-the-box doesn't have that, but I haven't installed it so, if I wanted to change the port, Like let's say 8082, I would just do this set Quarkus http.test-port. So like Emmanuel like to say a lot and I think it's a great decision is that, everything in Quarkus is configured through the application properties so a whole bunch of our frameworks and libraries that we use are controlled in this manner. So you just have to learn a set of properties and you can figure out all the properties, like You go Quarkus... Even if I.\n"
msgstr " *乔治亚斯* 。是的，是的，是的，没错。我还没有安装，但IntelliJ Ultimate开箱即用，但我还没有安装，所以，如果我想改变端口，比如说8082，我只要设置Quarkus http.test-port。所以就像Emmanuel喜欢说的那样，我认为这是一个伟大的决定，Quarkus中的所有东西都是通过应用程序属性配置的，所以我们使用的一大堆框架和库都是以这种方式控制的。所以你只需要学习一组属性，你就可以弄清楚所有的属性，比如你去Quarkus?即使是我。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:106
#, fuzzy
msgid "I don't have the IDE integration, but if I go to http reference on our web page we can see what all the properties are or not here, maybe like Quarkus testing, I usually just open the source code. So anyway, I'm not sure exactly where they are now. You remember that be great but usually the... The properties are right on the site, so you can see exactly what you're actually..."
msgstr "我没有集成开发环境，但如果我去我们网页上的http reference，我们可以看到所有的属性是什么，或者这里没有，也许像Quarkus测试，我通常只是打开源代码。所以无论如何，我不确定它们现在到底在哪里。你记得那很好，但通常......属性就在网站上，所以你可以看到你到底在什么地方。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:108
#, fuzzy
msgid "0:12:24 S1:"
msgstr "0:12:24 S1:"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:110
#, fuzzy, no-wrap
msgid "**Emmanuel**: You can to me, let me take the... One thing I liked and have to admit I went really kicking and screaming for that, but what I thought was really the best solution was for each guide to have the list of properties for it. So if you go to... Sorry my network is suffering a bit apparently, so if I go to configuring data sources, here at some point, you see, here's how I configure the data source and you might even have the complete list somewhere, I think, towards the end?\n"
msgstr " *Emmanuel* : 你可以对我说，让我把......我喜欢的一件事，不得不承认我真的为此踢来踢去，但我认为真正最好的解决方案是每个指南都有它的属性列表。因此，如果你去......对不起，我的网络显然有点问题，所以如果我去配置数据源，在这里的某个地方，你看，这是我如何配置数据源的，你甚至可能在某个地方有完整的列表，我想，在最后？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:112
#, fuzzy
msgid "Yeah, there you go, you get a full page, here and we did two things. So one is this list here is actually generated from the list of properties we have in each of the in this specific extension. And you can filter stuff here. So if I am only looking for health check, then it doesn't work."
msgstr "是的，你去那里，你得到一个完整的页面，在这里，我们做了两件事。因此，一个是这里的列表实际上是由我们在这个特定扩展中的每个属性的列表生成的。而且你可以在这里过滤东西。因此，如果我只寻找健康检查，那么它就不起作用。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:114
#, fuzzy
msgid "Don't know what's going on... Yeah, they go. So you got the filtering of the list of properties, so that's useful too, if you got a big list of properties, but another one that is usedful is if you go back to quarkus.io/guides, here the second one. So Hey, the first one is, \"Hey how do I continue my app? But the second one is, \"Give me all of the possible quotes configurations ever\"."
msgstr "不知道发生了什么......是的，他们走了。所以你得到了属性列表的过滤，所以这也很有用，如果你有一个大的属性列表，但另一个是有用的，如果你回到quarkus.io/guides，这里是第二个。所以，第一个是，\"嘿，我怎样才能继续我的应用程序？但第二个是，\"给我所有可能的引号配置\"。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:116
#, fuzzy
msgid "And here you've got the massive list of properties, and you can really quick search something. So yeah, if I look for, I don't know, SQL because I want the Hibernate way to find things where... I guess I should have used... you that there's a bit too many here, but I should be able to find somehow fast enough. The... There you go Hibernate ORM, then you see how do I get the logs?"
msgstr "在这里，你已经有了大量的属性列表，你真的可以快速搜索一些东西。所以，如果我寻找，我不知道，SQL，因为我想用Hibernate的方式来寻找东西......我想我应该用......你说这里有点多，但我应该能快速找到一些东西。这就是Hibernate ORM，然后你看我如何获得日志？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:118
#, fuzzy
msgid "So I log creator would have been been better."
msgstr "因此，我的日志创造者会更好。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:120
#, fuzzy
msgid "So it's a nice way to get all of the properties and filter them out very quickly. And I was against that. But since we have automated it, we said, Hey, why not? And it was actually, it is a very good, very good solution. So, back to Georgios now..."
msgstr "因此，这是一个很好的方法，可以获得所有的属性，并迅速过滤掉它们。我曾经反对这样做。但既然我们已经实现了自动化，我们说，嘿，为什么不呢？实际上，这是一个非常好的、非常好的解决方案。所以，现在回到Georgios..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:122
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, thanks for that. Yeah, I was looking for those. But yeah, that's exactly, yeah. How we envison people would find it more with the IDE integration, like VS code has it out of box and stuff like that.\n"
msgstr " *乔治亚斯* 。是的，谢谢你。是的，我正在寻找这些。但是，是的，这正是，是的。我们设想人们会发现它更多地与IDE集成，比如VS代码有开箱即用之类的东西。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:124
#, fuzzy
msgid "So let's go in like run a first test, right? So for my need it should just work. I'll just hit it right here."
msgstr "因此，让我们进去像运行第一个测试，对吗？所以对于我的需要，它应该只是工作。我就在这里打它。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:126
#, fuzzy
msgid "And what this will do is it will start the Quarkus application and will actually perform an http request, against the Hello endpoint. So if I go and change this to below here, then obviously my test fail, or then again, my test will fail because I expected \"hello\", and that's it for the REST-assured stuff. So, REST-assured stuff integration out of the box."
msgstr "这将做的是，它将启动Quarkus应用程序，并将实际执行一个http请求，针对Hello端点。所以，如果我把它改成下面这个，那么显然我的测试就会失败，或者说，我的测试会失败，因为我期待着 \"hello\"，这就是REST保证的东西。所以，REST保证的东西是开箱即用的集成。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:128
#, fuzzy
msgid "This is a regular JVM application. When we write a Quarkus test, now we have another sort of test which we call the \"native image test\". Now, what this does is that it gives you the ability to build the GraalVM native image and run tests against that. So it's like one... Just one quick here, I can run and I can build the test that and both sorry. Yeah."
msgstr "这是一个普通的JVM应用程序。当我们写一个Quarkus测试时，现在我们有另一种测试，我们称之为 \"本地镜像测试\"。现在，它的作用是让你有能力建立GraalVM本地镜像，并针对它运行测试。因此，它就像一个......就在这里，我可以运行，我可以建立测试，这两个都对不起。是的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:130
#, fuzzy
msgid "I haven't configured IntelliJ to properly find everything here, but if I do mvn -verify -pNative what it will do after running the reading resource test it'll run this test with Maven fail-safe if it's an actual integration test and build the GraalVM native image as we're seeing here."
msgstr "我还没有配置IntelliJ来正确地找到这里的一切，但如果我做mvn -verify -pNative，它在运行阅读资源测试后会做什么，如果它是一个实际的集成测试，它会用Maven fail-safe运行这个测试，并构建我们在这里看到的GraalVM本地镜像。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:132
#, fuzzy
msgid "And once it builds that it'll start it and execute in this case it'll execute the same rest endpoint; the same http request against the rest endpoint of the native image."
msgstr "一旦它建立起来，它就会启动它并执行，在这种情况下，它将执行相同的休息端点；相同的http请求针对本地图像的休息端点。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:134
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yeah, so if you're unsure about the nature image that's how you would do your extra smoke tests to make sure the native image is not doing something funky compared to the actual Java code.\n"
msgstr " *Emmanuel* : 是的，所以如果你对自然界的图像不确定，你就会做额外的烟雾测试，以确保本地图像与实际的Java代码相比没有做一些奇怪的事情。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:136
#, fuzzy, no-wrap
msgid "**Georgios**: Exactly... Yeah, that's exactly... We see it as a black-box testing thing, where you can only test the parts of the application that are available from the outside, like http or messaging, or anything like that.\n"
msgstr " *Georgios* 。是的，这正是......我们把它看作是一个黑盒测试的东西，你只能测试应用程序中从外部可用的部分，如http或消息传递，或类似的东西。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:138
#, fuzzy, no-wrap
msgid "**Emmanuel**: By the way you said you forgot to configure your stuff in IntelliJ. I think it's to export a property, which is GraalVM home, something like that...\n"
msgstr " *Emmanuel* : 对了，你说你忘了在IntelliJ中配置你的东西。我想应该是导出一个属性，也就是GraalVM的主页，类似这样的东西..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:140
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, exactly.\n"
msgstr " *乔治亚斯* 。是的，没错。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:142
#, fuzzy, no-wrap
msgid "**Emmanuel**: So you edit your test and you set an environment viable, which is GraalVM home, which will point to the native image generator, forgot the name of it.\n"
msgstr " *Emmanuel* : 所以你编辑你的测试，并设置一个可行的环境，也就是GraalVM home，它将指向本地图像生成器，忘了它的名字。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:144
#, fuzzy, no-wrap
msgid "**Georgios**: Native yeah, native image, yeah. So yeah, exactly... I configure it here, and then I would figure it out, and then everything would just work, but I didn't do that now, but okay.\n"
msgstr " *乔治亚斯* 。本机是的，本机图像，是的。所以，是的，确切地说......我在这里配置它，然后我就会想办法，然后一切都会顺利进行，但我现在没有这样做，不过还好。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:146
#, fuzzy, no-wrap
msgid "**Emmanuel**: He we got one question from ____. Let's try to extract something out of it so \"Guys, please make a guide to test driven development and post from controller, service and repos in these video. Thank you for helping me, I have coffee on my POM, but inject more kind of return some error. I'm not sure what inject mock. Oh, I guess we gonna go and address the whole mock as a bit later. Maybe that would be a good time to dive into this.\n"
msgstr " *Emmanuel* : 我们收到了一个来自 ____ 的问题。让我们试着从中提取一些东西，\"伙计们，请做一个测试驱动开发的指南，并在这些视频中从控制器、服务和资源库发布。谢谢你对我的帮助，我在我的POM上有咖啡，但注入更多的东西会返回一些错误。我不知道什么是注入模拟。哦，我想我们要去解决整个模拟的问题，因为稍后。也许那会是一个很好的时间来深入研究这个问题。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:148
#, fuzzy, no-wrap
msgid "**Georgios**: Sure, sure, yeah, sounds good.\n"
msgstr " *乔治亚斯* 。当然，当然，是的，听起来不错。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:150
#, fuzzy, no-wrap
msgid "**Max**: I do think the point here is the POST part. I think the point here is the post part, I assume, 'cause the GET part is easy, it's more the post, the to...\n"
msgstr " *马克斯* ：我确实认为这里的重点是POST部分。我认为这里的重点是帖子部分，我想，因为GET部分很容易，更多的是帖子，到..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:152
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, well, the post flow isn't anything specific to Quarkus just you would use your rest assured, you just configure rest assured the rest assured test to do whatever it needs to do with POST.\n"
msgstr " *Georgios* :是的，post flow不是Quarkus特有的，只是你会使用你的rest assured，你只是配置了rest assured，rest assured测试做任何它需要做的POST。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:154
#, fuzzy
msgid "Also, we can do that. Yeah, we can do that later but another thing we should mention is that our quick starts have most of this stuff implemented, already. So looking at the Quarkus quick starts is which I'll pull up right here is a great way to see all the stuff that we envision as the proper way of doing things or have a lot of examples. So here it is: quarkus.io. quick starts, we have all the quite starts here. If I go for \"POST\" I'm pretty sure let's find something."
msgstr "另外，我们可以做到这一点。是的，我们可以稍后再做，但我们应该提到的另一件事是，我们的快速启动已经实现了大部分这些东西。因此，查看Quarkus快速启动是一个很好的方式，可以看到所有我们设想的正确做事方式的东西，或者有很多例子。所以这里是：quarkus.io.quick starts，我们在这里有所有相当的开始。如果我去找 \"POST\"，我很确定让我们找到一些东西。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:156
#, fuzzy
msgid "Yeah, so it would be here, like the validation right here you can see an example of how you would do POST. So it's here like you, it's just rest assured there's nothing Quarkus specific to this. But yeah, we can try it out."
msgstr "是的，所以它就在这里，就像这里的验证，你可以看到一个例子，你将如何做POST。所以它就在这里，就像你，它只是放心，没有什么Quarkus特定的东西在这里。但是，是的，我们可以试试。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:158
#, fuzzy
msgid "So how, how we move on to something that..."
msgstr "因此，我们如何，如何继续前进到一些..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:160
#, fuzzy, no-wrap
msgid "**Emmanuel**: So we got one question from Recardo... Is there a way, as the test runs the Quarkus app to automate the bootstrap of dependent system, which I think is gonna be a nice connection to test containers and how you can integrate it. So whenever you wanna jump on that we can...\n"
msgstr " *Emmanuel* : 我们有一个来自Recardo的问题......有没有一种方法，当测试运行Quarkus应用程序时，可以自动启动依赖系统，我认为这将是一个很好的连接到测试容器，以及你如何能够整合它。所以，只要你想跳过这个问题，我们就可以..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:162
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, not exactly sure what Recardo means here, 'cause it could mean various things in the Quarkus space.\n"
msgstr " *乔治亚斯* 。是的，不完全确定Recardo在这里是什么意思，因为它在Quarkus空间可能意味着各种东西。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:164
#, fuzzy, no-wrap
msgid "**Emmanuel**: I suppose it's not a dependent system of the internal of the application here, we will see how you do mock, which would be a way to walk around that, but I assume he wants to start an external database.\n"
msgstr " *Emmanuel* ：我想这里不是应用程序内部的依赖系统，我们将看到你是如何做模拟的，这将是一个走过场的方法，但我假设他想启动一个外部数据库。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:166
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, yeah, We'll show that. Yeah, we'll definitely show that. That's one of the points that we really want to cover test containers.\n"
msgstr " *乔治亚斯* 。是的，是的，我们会展示的。是的，我们一定会展示的。这也是我们真正想要涵盖测试容器的一个要点。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:168
#, fuzzy
msgid "So let's start with something that we really hear a lot."
msgstr "因此，让我们从我们真正经常听到的东西开始。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:170
#, fuzzy
msgid "A lot of people wanna mock the REST client because we wanna start using REST client and then start testing it."
msgstr "很多人都想模拟REST客户端，因为我们想开始使用REST客户端，然后开始测试它。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:172
#, fuzzy
msgid "REST client is like super useful because every micro-service has to do http requests sooner or later, so anybody ends up using the REST client."
msgstr "REST客户端是非常有用的，因为每个微服务迟早都要做http请求，所以任何人最后都会使用REST客户端。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:174
#, fuzzy
msgid "Let's go ahead and start with creating an example. REST client, we wanna do. I wanna have a... I'm gonna hit an external country service, so the first thing I wanna do is create a country let's say, DTO, I give it two fields \"name\" and \"capital\"."
msgstr "让我们继续，从创建一个例子开始。REST客户端，我们要做的是。我想有一个......我要打一个外部国家服务，所以我想做的第一件事是创建一个国家，比方说，DTO，我给它两个字段 \"名称 \"和 \"资本\"。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:176
#, fuzzy
msgid "Okay, let me just go ahead and use JSON B, so import as we support JSON, B and Jackson. Both for marshelling and marshelling Jason, I'm just gonna use this on here just for no particular reason. So let's set up... What can I do?"
msgstr "好的，让我继续使用JSON B，这样导入，因为我们支持JSON、B和Jackson。既支持Marshelling，也支持Jason，我只是要在这里使用这个，只是没有特别的原因。那么，让我们来设置......我能做什么？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:178
#, fuzzy, no-wrap
msgid "**Max**: You could have done that with add-extension?\n"
msgstr " *Max* : 你可以用add-extension来做这个？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:180
#, fuzzy, no-wrap
msgid "**Georgios**: Yes I could have done mvn add-extension. But since I'm already in the IDE, I just copy&paste to here.\n"
msgstr " *Georgios* :是的，我本可以做mvn add-extension。但由于我已经在IDE中，我只是复制和粘贴到这里。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:182
#, fuzzy
msgid "So, I'm just doing..."
msgstr "所以，我只是在做..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:184
#, fuzzy, no-wrap
msgid "**Emmanuel**: It just means that adding an extension is literally adding something in the POM, so that's...\n"
msgstr " *Emmanuel* : 这只是意味着添加扩展是在POM中添加字面上的东西，所以那是......"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:186
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, no magic, yeah. So we have tooling to automate this.\n"
msgstr " *乔治亚斯* 。是的，没有魔法，是的。因此，我们有工具来自动处理这个问题。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:188
#, fuzzy
msgid "So everybody's work flow is different. My workflow is so for me it's just easier to copy paste into pom.xml."
msgstr "所以每个人的工作流程都是不同的。我的工作流程是，对我来说，复制粘贴到pom.xml中更容易。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:190
#, fuzzy
msgid "Other people couldn't do it a lot differently."
msgstr "其他人不可能用很多不同的方式来做这件事。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:192
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yeah, I used to develop with X. so do you then...\n"
msgstr " *Emmanuel* : 是的，我曾经用X开发，那么你也是..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:194
#, fuzzy, no-wrap
msgid "**Georgios**: So, no I've always been an IntelliJ fan. So, we set up our DTO and now it's actually set up with the REST client would look like. So, it's a country services, so the REST client is declared. The whole idea is that you declare an interface, and then Quarkus will automatically implement that interface for you in order by generating a code that will use a http request. So what we're gonna do here we're gonna hit an external - we're gonna try to use an external service. I'm gonna use this REST country service, right?\n"
msgstr " *Georgios* 。所以，不，我一直是IntelliJ的粉丝。所以，我们设置了我们的DTO，现在它实际上已经设置了REST客户端的样子。所以，这是一个国家服务，所以REST客户端被声明。整个想法是，你声明一个接口，然后Quarkus将自动为你实现该接口，以通过生成一个代码，将使用一个http请求。所以我们在这里要做的是，我们要去打一个外部--我们要尝试使用一个外部服务。我将使用这个REST国家服务，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:196
#, fuzzy
msgid "____ And I'm just gonna use one end point, which is the name endpoint which, as you can see here, what I wanna hit is this REST v2 main name, so that's what I'm gonna try to set up here."
msgstr " _而_ 我只是要使用一个端点，也就是名称端点，正如你在这里看到的，我想打的是这个REST v2的主名称，所以这就是我要尝试在这里设置的东西。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:198
#, fuzzy
msgid "Country import... get by name... String name... Yeah, this will be a GET as I can see here. Well, it doesn't say it, but it is a GET anyway and return produces an application JSON and the path will see the whole path for the country for the version of the country service. I'm using under v2 as we see here."
msgstr "国家导入...按名称获取...字符串名称...是的，这将是一个GET，正如我在这里看到的。好吧，它没有说，但无论如何它是一个GET，并返回产生一个应用程序的JSON和路径将看到整个国家的路径，为国家服务的版本。我使用的是v2下，我们在这里看到。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:200
#, fuzzy
msgid "And the path for ____ class is a name as ____ So that sets it up. I'm just gonna copy paste the URL. So like we said earlier, we can figure a lot of things through application properties. And since I wanna type this whole thing here, this is what you would configure. So basically when you're building a REST client, Quarkus is building a REST client it needs to know what the base URL is and this is how we set the base URL so this is the name of the class."
msgstr "而 _<em>_类 </em>_ 的路径 _<em>是一个名称为_ </em>_ ，所以这就设置了。我只是要复制粘贴这个URL。所以就像我们之前说的，我们可以通过应用程序的属性来计算很多东西。因为我想在这里输入这整个事情，这就是你要配置的东西。所以基本上当你建立一个REST客户端时，Quarkus正在建立一个REST客户端，它需要知道基本的URL是什么，这就是我们如何设置基本的URL，所以这是该类的名称。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:202
#, fuzzy
msgid "Oh, I and you said this is the suffix of the property that we use in order to configure the base URL. So base URL is ____."
msgstr "哦，我和你说过这是我们用来配置基础URL的属性的后缀。因此，基本的URL是 ____ 。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:204
#, fuzzy
msgid "And now, how we're gonna call, how we're gonna supposed to use this so; Well, I'm just gonna expose this as a rest API, so run building anything with business logic here, we just gonna fill the rest endpoint that will delegate to hitting don't get to the REST client, to hit the rest endpoint of ____."
msgstr "现在，我们要如何调用，我们要如何使用这个；好吧，我只是要把这个暴露为一个休息API，所以在这里运行建立任何有业务逻辑的东西，我们只是要填补休息端点，将委托打到不要到REST客户端，打到 ____ 的休息端点。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:206
#, fuzzy
msgid "I don't know Emmanuel, I don't know what your thoughts are on what this is supposed to call in the Spring world. We call this controller. I guess, here, in Quarkus we've been using resource, but I know talking to Stephane he didn't really like that name. So I know what you guys think what your opinion is."
msgstr "我不知道伊曼纽尔，我不知道你的想法是什么，这在春天的世界里应该叫什么。我们把这个叫做控制器。我想，在Quarkus中，我们一直在使用资源，但我知道和Stephane谈过，他不太喜欢这个名字。所以我知道你们的意见是什么。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:208
#, fuzzy, no-wrap
msgid "**Emmanuel**: I don't have opinions really so.\n"
msgstr " *伊曼纽尔* ：我没有意见，真的如此。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:210
#, fuzzy, no-wrap
msgid "**Georgios**: How about you, Max?\n"
msgstr " *乔治亚斯* 。你呢，麦克斯？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:212
#, fuzzy, no-wrap
msgid "**Max**: A control for me, it's something I'd used.\n"
msgstr " *马克斯* ：对我来说是一种控制，这是我用过的东西。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:214
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yeah, I think, I'd use controller in my Play days.\n"
msgstr " *伊曼纽尔* ：是的，我想，我在玩的时候会使用控制器。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:216
#, fuzzy, no-wrap
msgid "**Georgios**: Oh, okay, so that's how Play did it, well, Okay. Here we go. So we're injecting the country service, the interface into the... We call it a resource here but when a partner is created at the REST client CDI qualifier. So when we're injecting we have to use that qualifyer as well and this is done, because you might wanna create your own but in this case, we're just using the qualifier to disambiquate if there are multiple services, multiple implementations of the country service. So I'm just gonna copy this here, and go and let's see, this is GET... And I'll say, path name - name and ____.\n"
msgstr " *Georgios* 。哦，好的，所以这就是Play的做法，好的，我们开始吧。所以我们要把国家服务，接口注入到......我们在这里称它为资源，但当伙伴在REST客户端创建CDI限定器时。所以当我们注入时，我们也必须使用限定器，这样做是因为你可能想创建你自己的，但在这种情况下，我们只是使用限定器来区分是否有多个服务，国家服务的多个实现。所以，我只是要在这里复制这个，然后让我们看看，这是GET......我会说，路径名称 - 名称和 ____ 。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:218
#, fuzzy
msgid "Okay, so now what I've done to set up a resource which will hit the REST client, but now I wanna test it, right, so I just... I'll create a new test."
msgstr "好了，现在我所做的是建立一个资源，它将击中REST客户端，但现在我想测试它，对，所以我只是......我将创建一个新的测试。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:220
#, fuzzy
msgid "I'll say regular country resource test is gonna be a Quarkus test. And I'm just gonna copy this here."
msgstr "我说常规的国家资源测试将是一个Quarkus测试。而我只是要在这里复制这个。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:222
#, fuzzy
msgid "So I basically have to do similar things is test ____. So ____."
msgstr "所以我基本上要做的类似事情就是测试 _<em>_。所以_ </em>_ 。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:224
#, fuzzy, no-wrap
msgid "**Emmanuel**: ____.\n"
msgstr " *伊曼纽尔* ： ____ 。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:226
#, fuzzy, no-wrap
msgid "**Georgios**: No we're out of the IMF.\n"
msgstr " *Georgios* 。不，我们已经脱离了IMF。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:228
#, fuzzy, no-wrap
msgid "**Emmanuel**: Well everybody is in at some point.\n"
msgstr " *埃马纽埃* 尔：好吧，每个人在某些方面都在。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:230
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, I agree ____ away that behind us. So now what I'm gonna do here I'm gonna try and show what I expect it to return. So this is just standard rest assured syntax, so this will be the size here I expected to be one because when I hit the REST service it'll give me one only. If I added like ____ return a lot more results, and I'll go and I'll say, the first result name is, the name is \"Greece\"\n"
msgstr " *Georgios* 。是的，我同意 _<em>_离开我们的背后。所以，现在我要做的是显示我期望它返回的内容。所以这只是标准的放心语法，所以这将是我期望的大小，因为当我点击REST服务时，它只会给我一个。如果我添加了像_ </em>_ 返回更多的结果，我会去，我会说，第一个结果的名字是，名字是 \"希腊\""

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:232
#, fuzzy, no-wrap
msgid "**Max**: ____ path, right?\n"
msgstr " *马克思* ： ____ 路径，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:234
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, yes, it's ____. Rest assured uses Jetty.\n"
msgstr " *乔治亚斯* 。是的，是的，它是 ____ 。请放心使用Jetty。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:236
#, fuzzy, no-wrap
msgid "**Emmanuel**: Let me ask a question to the readers \"Does anybody know why we started the video with the music from Star Wars? You can carry on on a... Somebody picks that up.\n"
msgstr " *伊曼纽尔* ：让我向读者问一个问题：\"有谁知道为什么我们用《星球大战》的音乐开始录像？你可以继续......有人接过来。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:238
#, fuzzy, no-wrap
msgid "**Georgios**: Okay, so now I'm starting the test inside my browser... Ah, we made a mistake here and I think I made a mistake.\n"
msgstr " *Georgios* :好的，现在我开始在我的浏览器里面进行测试......啊，我们在这里犯了一个错误，我想我也犯了一个错误。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:240
#, fuzzy
msgid "Did I not add JSON on the REST client? JSON V could not find MessageBodyWriter... ah... Obviously I made a mistake. Produces then... Yeah, I think it's also I made a mistake here. I didn't... You gotta should have caught that returning Jason."
msgstr "我没有在REST客户端上添加JSON吗？JSON V找不到MessageBodyWriter...啊...显然我犯了一个错误。是的，我想这也是我犯的一个错误。我没有......你应该抓到那个返回的Jason。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:242
#, fuzzy, no-wrap
msgid "**Max**: What was the error?\n"
msgstr " *马克思* ：错误是什么？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:244
#, fuzzy, no-wrap
msgid "**Georgios**: The error was that it told me that it couldn't return an octet stream because I didn't have his produces. So by default it is using ocetet stream and it couldn't figure that out.\n"
msgstr " *Georgios* :错误在于，它告诉我它不能返回八进制流，因为我没有他的产品。因此，默认情况下，它使用的是八位数流，而它无法弄清这一点。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:246
#, fuzzy, no-wrap
msgid "**Emmanuel**: May the fourth, so that's why we had the sound...\n"
msgstr " *伊曼纽尔* ：5月4日，所以这就是为什么我们的声音......。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:248
#, fuzzy, no-wrap
msgid "**Georgios**: Oh, so I made another mistake, I didn't add getters here.\n"
msgstr " *Georgios* 。哦，所以我又犯了一个错误，我没有在这里添加getters。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:250
#, fuzzy, no-wrap
msgid "**Emmanuel**: While you figure that out, there was a question for Antony. \"Hey gang, I can't find a saved update ____ in Panache TTbase what's wrong?\"\n"
msgstr " *埃马纽* 埃尔：在你弄清楚这个问题的时候，有一个问题要问安东尼。\"嘿，伙计们，我在Panache TTbase中找不到保存的更新 ___，_ 怎么了？\""

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:252
#, fuzzy
msgid "So it's a joke because Antony is a long time contributor and team member of the Hibernate before he went into the darker side of support, and then later training and certification. But it is a very good question and it's a more complex than one could think, there is an open issue, but I suppose let's keep that question for later in a specific Panache presentation that would be probably a good to exchange."
msgstr "所以这是一个笑话，因为Antony是Hibernate的长期贡献者和团队成员，在他进入支持的黑暗面之前，后来又进行培训和认证。但这是一个非常好的问题，它比人们想象的要复杂，有一个开放的问题，但我想让我们把这个问题留到以后在一个具体的Panache演讲中，可能会有一个很好的交流。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:254
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, you probably have to break it Stephane here and get in to describe all the nitty gritty of Panache.\n"
msgstr " *乔治亚斯* 。是的，你可能必须在这里打破它Stephane，并进入描述Panache的所有细枝末节。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:256
#, fuzzy, no-wrap
msgid "**Max**: So there's a new question about the constructor...\n"
msgstr " *马克斯* ：所以有一个关于构造函数的新问题..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:258
#, fuzzy, no-wrap
msgid "**Emmanuel**: So I, yeahm is there any difference of injecting REST client in constructor instead of the instance variable?\n"
msgstr " *Emmanuel* : 那么我，是的，在构造函数中注入REST客户端而不是实例变量，有什么区别吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:260
#, fuzzy, no-wrap
msgid "**Georgios**: No, there is not.\n"
msgstr " *乔治亚斯* 。不，没有。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:262
#, fuzzy
msgid "I just wanted to show it because I wanted to show... Because in the CDI world or the Java EE world, whatever you wanna call it. A lot of people don't use constructor injection. That was folks for the Spring world, think that, \"Oh yeah, JavaEE doesn't have constructor injection and all that weird stuff, but it's been around forever. It's just in all tutorials and stuff, you don't see it being used that much. That's just why I want to make the point here its just working out of the box, right..."
msgstr "我只是想展示它，因为我想展示......因为在CDI世界或Java EE世界，不管你怎么称呼它。很多人都不使用构造函数注入。那是Spring世界的人们，他们认为，\"哦，是的，JavaEE没有构造函数注入和所有这些奇怪的东西，但它一直存在。它只是在所有的教程和东西中，你没有看到它被使用得那么多。这就是为什么我想在这里指出，它只是开箱即用，对吧......"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:264
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yeah, that's a good point, and it's all done at compile time, so there's no reflection really it's all figured out at compile time. And we generate the right class to actually populate those either constructor or the setter and getter.\n"
msgstr " *Emmanuel* : 是的，这是一个很好的观点，所有这些都是在编译时完成的，所以没有任何反射，真的是在编译时就已经知道了。我们生成正确的类来实际填充这些构造函数或设置器和获取器。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:266
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, that's a huge differentiator.\n"
msgstr " *乔治亚斯* 。是的，这是一个巨大的差异化因素。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:268
#, fuzzy
msgid "So getting back to the test, I should actually get to work up. The assertion, was failing it was saying that the name wasn't great and that was my fault 'cause I didn't have getters hopefully now, but I should get everything working."
msgstr "所以回到测试中，我应该真正开始工作了。断言是失败的，它说名字不是很好，这是我的错，因为我没有getters，希望现在能得到一切工作。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:270
#, fuzzy
msgid "Pretty sure I will. All right, yeah, everything's working. So as a super easy thing to do, I just wrote a REST client here. And I verified that it works, but what we were hearing from everybody was like, \"Oh yeah, you know what, that's cool, but... And a lot of times I wanna mock this out. I don't want to hit the real service. And that's a very, very."
msgstr "很确定我会的。好的，是的，一切都在工作。所以，作为一个超级简单的事情，我只是在这里写了一个REST客户端。我验证了它的工作原理，但我们从每个人那里听到的是，\"哦，你知道吗，这很酷，但是......很多时候我想模拟这个。我不希望打到真正的服务。而这是一个非常，非常。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:272
#, fuzzy, no-wrap
msgid "**Max**: Just two things: I saw, I think ____ Or you couldn't put regress client on this, right? Instead of putting it on a injection.\n"
msgstr " *马克斯* ：只有两件事。我看到，我想 ____ 或者你不能把回归的客户端放在这上面，对吗？而不是把它放在一个注射器上。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:274
#, fuzzy, no-wrap
msgid "**Georgios**: Oh yeah, I should have, yeah, actually I usually... Yeah, I registered clients ____ you're right.\n"
msgstr " *Georgios* 。哦，是的，我应该有，是的，实际上我通常......是的，我注册了客户 _，_ 你是对的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:276
#, fuzzy, no-wrap
msgid "**Max**: But it's equal to the same thing, right?\n"
msgstr " *马克斯* ：但它等于同样的事情，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:278
#, fuzzy, no-wrap
msgid "**Georgios**: I... Yeah, it's the same thing, is the same thing as same thing. Actually, it's a good point because I'm gonna have to update in order for the mocking to work that I'm gonna show it, I'm gonna have to update this, which is... And I would have to make it application scope. I'll explain exactly when we do that.\n"
msgstr " *Georgios* :I??是的，这是同样的事情，是同样的事情。实际上，这是一个很好的观点，因为我必须要更新，以便让我要展示的嘲弄工作，我必须要更新这个，这是什么？而且我必须让它成为应用范围。我会在我们做这个的时候解释清楚。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:280
#, fuzzy, no-wrap
msgid "**Emmanuel**: While you do that, I can explain a little bit, before we go into marketing. So here, so far, most of our tests have been kind of black box, so we say, \"Hey we go and connect to that URL and we do something. And what not, but Quarkus tests actually is a being inside your app, so you can literally inject other beans so you can do what I would call more like your gray box kind of test where you can inject one of the bean to do some more surgery into deciding what you wanna test, and going on. So, I suppose by side effect will show that inside mocking but I wanted to present that because even as you don't do mocking its actual a very, very useful feature set.\n"
msgstr " *伊曼纽尔* ：在你这样做的时候，我可以解释一下，在我们进入营销之前。所以，到目前为止，我们的大多数测试都是黑盒子，所以我们说，\"嘿，我们去连接到那个URL，然后我们做一些事情。但Quarkus测试实际上是在你的应用程序内，所以你可以从字面上注入其他豆，所以你可以做我称之为更像你的灰色盒子的那种测试，你可以注入一个豆来做一些更多的手术来决定你要测试的东西，并继续。所以，我想通过副作用会显示在嘲弄里面，但我想介绍一下，因为即使你不做嘲弄，它也是一个非常非常有用的功能集。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:282
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, exactly, so in here, yeah, we in the test, if I did this ____ on free in this country sure with object and the REST client, then that's exactly as Emmanuel was describing if I did this, I could use this inside the test anyway I wanted because exactly, like I mentioned this is a B, so we're gonna show something a little different. So we wanna mock this right, so we want in... When I do, when I hit ____, I wanna have my own thing instead of hitting the REST service. So the whole idea here is that I added Quarkus JUnit 5 Mockito which integrates Mockito in JUnit 5 with our Quarkus CDI stuff.\n"
msgstr " *Georgios* 。是的，没错，所以在这里，是的，我们在测试中，如果我做了这个 _<em>_在这个国家免费使用对象和REST客户端，那么这正是艾曼纽尔所描述的，如果我这样做，我可以在测试中使用这个，不管我怎么想，因为确切地说，像我提到的这是一个B，所以我们要展示一些不同的东西。所以我们要模拟这个，所以我们要在？当我这样做时，当我点击_时 </em>_ ，我想有我自己的东西，而不是点击REST服务。所以这里的整个想法是，我添加了Quarkus JUnit 5 Mockito，它将JUnit 5中的Mockito与我们的Quarkus CDI东西整合在一起。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:284
#, fuzzy
msgid "So what you do here, when you call country service, and you would instead of inject you do inject mock, and because we need the qualifier, we'll do REST Client. Like I said, same reason, we injected the... We use the qualifier in the injection point here, this is another injection point, so we're gonna use the qualifier but now we wanna control it so this will give us a mock of country service, a mock that we can control with Mockito."
msgstr "所以你在这里所做的，当你调用国家服务时，你会用注入模拟来代替，因为我们需要限定器，我们会用REST客户端。就像我说的，同样的原因，我们注入了......我们在这里的注入点使用了限定词，这是另一个注入点，所以我们要使用限定词，但现在我们要控制它，所以这将给我们一个国家服务的模拟，一个我们可以用Mockito控制的模拟。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:286
#, fuzzy
msgid "That's the great part, ups, sorry... And then its, you just use Mockito the same way you've always been using it. Like I do not been using Mockito for a long time, and I always loved it and never, never thought to use any other mocking library."
msgstr "这就是最棒的部分，对不起......然后，你就像一直以来使用Mockito一样使用它。就像我已经使用Mockito很久了，我一直很喜欢它，从来没有想过要使用其他的嘲弄库。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:288
#, fuzzy
msgid "So what I would do here, like I do Mockito when country service getByName please. And I would say, then the return collection ____ and let's say new country, and instead of Greece let's say ____ And ____ So now what I've done here is basically country service will be the mock and it will replace the regular CDI bean, but only for this task. And that's a very important part that this test will continue to use the regular external URL when we're hitting this test here is the only one that's gonna use the mock and that's really what mocks are for, like per test, let's say, alteration of your application."
msgstr "所以我在这里做的，就像我在国家服务getByName时做的Mockito。我会说，然后返回集合 _<em>_，让我们说新的国家，而不是希腊，让我们说 </em><em> 和_ </em>_ ，所以现在我在这里所做的基本上是国家服务将是模拟的，它将取代常规的CDI Bean，但只是为了这个任务。这是一个非常重要的部分，这个测试将继续使用常规的外部URL，当我们点击这个测试时，只有这个测试会使用模拟，这就是模拟的真正用处，比如说每次测试，让我们说，改变你的应用程序。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:290
#, fuzzy
msgid "So if I go here, I expect to get ____ and I..."
msgstr "因此，如果我去这里，我期望得到 ____ ，我......。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:292
#, fuzzy, no-wrap
msgid "**Max**: That's probably a good what you run it. Just be clear that inject mock is actually a Quarkus annotation, right?\n"
msgstr " *马克斯* ：这可能是你运行它的一个好办法。要清楚的是，注入模拟实际上是Quarkus的注释，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:294
#, fuzzy, no-wrap
msgid "**Georgios**: yes, yes exactly. I open imports here, it's quarkus.test.junit5.mockito.inject.mock And now it's failed, and I wanted it to fail because I need to explain why wait in this inject mock thing works. So inject mock works on normal scope CDI beans. Normal scope CDI beans are usually either application scope or request scope.\n"
msgstr " *Georgios* ：是的，没错。我在这里打开导入，是quarkus.test.junit5.mockito.inject.mock 现在它失败了，我希望它失败，因为我需要解释为什么在这个inject mock的事情上等待工作。所以inject mock在正常范围的CDI Bean上工作。正常范围的CDI Bean通常是应用范围或请求范围。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:296
#, fuzzy
msgid "So, the Microprofile spec defines that when you create a REST client like this, and you don't define a CDI scope that it's dependent, it's the dependent scope which practically means that in every injection point, you get a new instant self this country service, and that doesn't allow us to create... it doesn't allow us to create a mock because it's already a JDK dynamic proxy and Mockito can't already mock dynamic. So we have to do... We have to make this an application. So, by making this application scope this inject mock here will work and when I do and being clean test again, I should see all my tests passing now and they all pass."
msgstr "所以，Microprofile规范定义，当你创建一个像这样的REST客户端，而你没有定义一个CDI范围，它是依赖的，这实际上意味着在每个注入点，你得到一个新的即时自我这个国家服务，这不允许我们创建...它不允许我们创建一个模拟，因为它已经是一个JDK动态代理，Mockito已经不能模拟动态。所以我们必须做......我们必须把它变成一个应用程序。所以，通过使这个应用程序的范围，这个注入的模拟将工作，当我再次做和被清洁测试时，我应该看到我所有的测试现在都通过了，他们都通过了。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:298
#, fuzzy, no-wrap
msgid "**Emmanuel**: Somehow couldn't we or ____ detect that hey, it's dependent scope. But then in some tests we wanna do a mock. So let's actually have some sort of fake different scope.\n"
msgstr " *Emmanuel* : 我们不能或 ____ 检测到，嘿，这是依赖范围。但在一些测试中，我们想做一个模拟。所以让我们实际上有一些假的不同的范围。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:300
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, I got a... Basically, we discuss this with Steward and Martin and... Yeah, what we're thinking is that we have some kind of bit code transformer that will be used and when you have this kind of inject mock thing, that will be used in it will alter the code of... Of the country service itself to actually take the mock into account. So that's something that... That we'll probably do sometimes soon...\n"
msgstr " *Georgios* 。是的，我有一个......基本上，我们与Steward和Martin讨论了这个问题......是的，我们的想法是，我们有某种比特代码转换器，当你有这种注入模拟的东西时，它将被用于改变国家服务本身的代码，以实际考虑到模拟。所以这就是我们有时会做的事情......我们可能会很快做......。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:302
#, fuzzy, no-wrap
msgid "**Emmanuel**: Okay, awesome. So we are 22 minutes before we end, so just a checkmark.\n"
msgstr " *伊曼纽尔* ：好的，真棒。所以，我们离结束还有22分钟，所以只需打一个勾。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:304
#, fuzzy, no-wrap
msgid "**Georgios**: Okay, good. One more thing about the mock. So let's say I do since I'm using Mockito, Mockito by default, when you don't define something, or turn a default response.\n"
msgstr " *乔治亚斯* 。好的，很好。还有一件关于mock的事情。所以我们说我既然使用了Mockito，Mockito在默认情况下，当你不定义一些东西的时候，或者变成一个默认的响应。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:306
#, fuzzy
msgid "So if I do like country France and since I have it mocked, I haven't told it what to do for France. What it will do is, it will return an empty list. So that's just a Mockito thing I wanted everybody to be aware of."
msgstr "因此，如果我喜欢法国，并且因为我已经模拟了它，我还没有告诉它该为法国做什么。它将做的是，它将返回一个空列表。所以，这只是一个Mockito的事情，我想让大家都注意到。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:308
#, fuzzy, no-wrap
msgid "**Emmanuel**: I just... I wanted to clarify, to Igor. This problem with the mock that cannot be the dependent type that cannot be mocked. So the workaround is to use application scope on your service, and that will be the workaround right now until we have a proper solution inside Quarkus, but that works actually that should have been application scope most likely anyways.\n"
msgstr " *Emmanuel* : 我只是......我想澄清一下，对Igor。这个问题是关于不能被模拟的依赖类型的模拟。所以变通的办法是在你的服务上使用应用范围，这将是目前的变通办法，直到我们在Quarkus内部有一个适当的解决方案，但实际上，无论如何，这应该是应用范围。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:310
#, fuzzy, no-wrap
msgid "**Georgios**: Yes exactly, yeah the only reason it wasn't is the spec defines that it should be dependent scope by default. Otherwise, I would have just made it application scope.\n"
msgstr " *Georgios* 。是的，是的，唯一的原因是规范定义了它应该是默认的依赖范围。否则，我就会把它变成应用范围。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:312
#, fuzzy, no-wrap
msgid "**Max**: So, we got another one. Georgio. Wanna take that, Emmanuel? How to mock REST client?\n"
msgstr "那么，我们又有了一个人。乔治奥。想拿这个吗，Emmanuel？如何模拟REST客户端？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:314
#, fuzzy, no-wrap
msgid "**Emmanuel**: How do I mock REST client test object to throw a 500 exception, http 500, but not using Mockito on his Quarkus annotation @mock and Eclipse Microprofile register client?\n"
msgstr " *Emmanuel* : 我如何模拟REST客户端测试对象抛出一个500异常，http 500，但不使用Mockito对他的Quarkus注释@mock和Eclipse Microprofile注册客户端？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:316
#, fuzzy, no-wrap
msgid "**Georgios**: I don't think you can... Like with a mock, right?\n"
msgstr " *Georgios* 。我不认为你可以......比如用模拟的方式，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:318
#, fuzzy
msgid "I don't think you can mock it to tail it, to return a 500. Well, what you can always do with Marketo is to tell it to throw an exception, but through annotations is... I don't think you can do that. I don't have anything, I can't recall of anything but I would argue that if you were going to test something like that, you probably want to do what I wanna do now."
msgstr "我不认为你可以模拟它来跟踪它，返回一个500。好吧，你可以用Marketo做的是告诉它抛出一个异常，但是通过注解......我不认为你能做到这一点。我没有任何东西，我想不起任何东西，但我认为，如果你要测试这样的东西，你可能想做我现在想做的事。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:320
#, fuzzy
msgid "Oh, which is to actually use, to have the... Not mock the REST client, but to mock the external service."
msgstr "不是模拟REST客户端，而是模拟外部服务，这才是真正的使用。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:322
#, fuzzy
msgid "So, what I planned to show now is that we continue to use the regular REST client, but instead of using the external rest countries service that I was using, I want to start a service like a proxy let's say, that will intercept all the request to that service and in there, I can make it return 500, I can make it return 404, I can make it return any kind of error I want in order to test my actual integration. So in my view, that would be the proper way to test like http errors."
msgstr "所以，我现在打算展示的是，我们继续使用常规的REST客户端，但不是使用我以前使用的外部休息国家服务，而是启动一个类似代理的服务，让我们说，它将拦截所有对该服务的请求，在那里，我可以让它返回500，我可以让它返回404，我可以让它返回任何我想要的错误，以测试我的实际集成。所以在我看来，这将是测试http错误的正确方式。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:324
#, fuzzy, no-wrap
msgid "**Emmanuel**: That also answers ____ sorry about butchering our first name, which is... Inject mock is grateful functionality test, but is there a way to verify that the correct annotations are used on the REST client and that would be exactly that. So you would have your server being a custom one and you redirect to that server and then you can run the properties, with the REST client in a fully control environment.\n"
msgstr " *Emmanuel* : 这也回答了 _._ .....对不起，我们的第一个名字是......Inject mock是感谢功能测试，但是否有一种方法来验证REST客户端使用了正确的注释，这将是完全正确的。因此，你将有你的服务器是一个自定义的，你重定向到该服务器，然后你可以运行属性，与REST客户端在一个完全控制的环境。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:326
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, I think that's the best way to test the end to end integration. That's what I'm gonna do.\n"
msgstr " *Georgios* 。是的，我想这是测试端到端整合的最好方法。这也是我要做的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:328
#, fuzzy
msgid "Okay, so let's go like country service. If we do create a test to country service, this would be a Quarkus test and I'll say ____."
msgstr "好的，让我们像国家服务一样。如果我们真的创建一个测试到国家服务，这将是一个Quarkus测试，我将说 ____ 。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:330
#, fuzzy
msgid "And I say, country service, inject client. Not the Junit assertions, I want the AssertJ assertions, are for that country service."
msgstr "我说，国家服务，注入客户端。不是Junit断言，我想要AssertJ断言，是为该国家服务。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:332
#, fuzzy
msgid "____ Unaudible typing! ! ____. So this test, I haven't been adding anything special to this test yet. I just wanted to set it up to show you that, what we're gonna do here is that we're gonna use the country service, but we're gonna hit an external end point that will be controlled by us. Once I said once I get this going..."
msgstr " _<em>敲击声听不清楚!!_ </em>_ .所以这个测试，我还没有在这个测试中添加任何特别的东西。我只是想把它设置成向你展示，我们在这里要做的是，我们要使用国家服务，但我们要打一个外部终端，这个终端将由我们控制。一旦我说一旦我得到这个进展..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:334
#, fuzzy
msgid "I passed the test... Now, we're gonna introduce one more concept that is specific to Quarkus, then we're gonna use WireMock in order to demonstrate."
msgstr "我通过了测试......现在，我们要再介绍一个Quarkus特有的概念，然后我们要用WireMock来演示。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:336
#, fuzzy
msgid "So like Emmanuel said earlier, we run, we boot Quarkus once and then we run all the tests, against it. And what that means is that when you want to do something before you boot Quarkus you need as a developer, you need an integration point."
msgstr "所以就像Emmanuel之前说的，我们运行，我们启动Quarkus一次，然后我们运行所有的测试，针对它。这意味着，当你想在启动Quarkus之前做一些事情时，作为一个开发者，你需要一个集成点。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:338
#, fuzzy
msgid "Well, the Quarkus test resource is that integration point that you're looking for."
msgstr "那么，Quarkus测试资源就是你要找的那个整合点。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:340
#, fuzzy
msgid "So wiremock contries... So I gotta create such an integration point or what I'm planning to do is now I'm planning to create a WireMock server where I mock, I set up basically the endpoints that I care about, and our test is actually gonna hit that server. How we do that? So we... We at this Quarkus test annotation test resource annotation we create a class that implements this Quarkus test resource lifecycle manager."
msgstr "所以，wiremock contries......所以我必须创建这样一个集成点，或者我打算做的是现在我打算创建一个WireMock服务器，在那里我模拟，我基本上设置了我关心的端点，而我们的测试实际上是要打击那个服务器。我们怎么做呢？所以我们......我们在这个Quarkus测试注解的测试资源注解中，创建一个实现Quarkus测试资源生命周期管理器的类。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:342
#, fuzzy
msgid "The stuff we care about, the methods with care. Are in here, or start which basically is the method that Quarkus calls back into the Quarkus test calls back into before it launches the Quarkus application, and what it returns is a set of properties that's runtime properties that Quarkus, That will affect how Quarkus runs. This call is when Quarkus finishes, all the tests finish. So what we do here is a WireMock server."
msgstr "我们关心的东西，就是那些关心的方法。在这里，或者说开始，基本上是Quarkus在启动Quarkus应用程序之前调用Quarkus测试的方法，它返回的是一组属性，是Quarkus的运行时属性，这将影响Quarkus如何运行。这个调用是当Quarkus完成时，所有的测试都完成。所以我们在这里做的是一个WireMock服务器。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:344
#, fuzzy
msgid "WireMock server = new WireMockServer ____;"
msgstr "WireMock server = new WireMockServer ____ ;"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:346
#, fuzzy
msgid "server.start ____;"
msgstr "server.start ____ 。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:348
#, fuzzy
msgid "And now, since we're actually kinda running out of time, I just gonna copy&paste the actual mocking part."
msgstr "而现在，因为我们实际上有点时间不够了，我只是要复制和粘贴实际的嘲弄部分。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:350
#, fuzzy
msgid "I copied it from the stuff that I have already. And we'll share with you being in the presentation so you can follow along. I'm gonna make this a Java 14, I'm on 14 now. I also have to..."
msgstr "我从我已有的东西中复制了它。我们将在演讲中与你分享，这样你就可以跟上了。我要把这个做成Java 14，我现在在14上。我还得..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:352
#, fuzzy, no-wrap
msgid "**Emmanuel**: You wanna use the multi line, the the text which is.\n"
msgstr " *埃马纽埃* 尔：你想用多行，即文本。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:354
#, fuzzy, no-wrap
msgid "**Georgios**: Exactly exactly, that's exactly what I wanna use because as I hate writing JSON inside the little... , the regular Java stuff is just terrible.\n"
msgstr " *Georgios* 。正是如此，这正是我想使用的，因为我讨厌在小......里面写JSON，普通的Java东西实在是太糟糕了。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:356
#, fuzzy
msgid "So in order to do that, I need to enable some previews stuff."
msgstr "所以为了做到这一点，我需要启用一些预览的东西。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:358
#, fuzzy
msgid "So, Maven compile... This stuff isn't actually important for the actual test, but it's cool to see, show with Quarkus we have all the... all the flexibility to do anything you're used to with Maven, or whatever to a..."
msgstr "所以，Maven编译......这些东西对实际的测试并不重要，但看到这些东西很酷，显示Quarkus具有所有......所有的灵活性，可以做任何你习惯的Maven，或者任何......。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:360
#, fuzzy, no-wrap
msgid "**Emmanuel**: So it works with Java 14?\n"
msgstr " *Emmanuel* : 所以它可以在Java 14中使用？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:362
#, fuzzy, no-wrap
msgid "**Georgios**: Oh yeah, absolutely, absolutely.\n"
msgstr " *乔治亚斯* 。哦，是的，绝对，绝对。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:364
#, fuzzy
msgid "It doesn't work with records just yet, but we have a PR ready for that, so it should be working very soon."
msgstr "它现在还不能与记录一起使用，但我们已经准备好了一个PR，所以它应该很快就可以使用。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:366
#, fuzzy, no-wrap
msgid "**Max**: So you basically show what people can use in like four or five years in the production, so to...\n"
msgstr " *马克思* ：所以你基本上展示了人们在四、五年内可以使用的产品，所以要..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:368
#, fuzzy, no-wrap
msgid "**Georgios**: No, no, they can use it right now.\n"
msgstr " *乔治亚斯* 。不，不，他们现在就可以使用它。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:370
#, fuzzy, no-wrap
msgid "**Emmanuel**: Quarkus goes very well with the production, guys.\n"
msgstr " *伊曼纽尔* 。夸库斯与制作非常顺利，伙计们。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:372
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, why not? So I have to enable preview both to compile and for surefire while running otherwise it will work, and I have to tell IntelliJ to use it causes not smart enough to figure out how I configure it.\n"
msgstr " *乔治亚斯* 。是的，为什么不呢？所以我必须在编译和运行时启用预览，否则它就会工作，而且我必须告诉IntelliJ使用它，因为它不够聪明，不知道我如何配置它。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:374
#, fuzzy
msgid "So basically what I'm doing here is that I was subbing out the... the end point that this method is looking for and I'm saying when you see \"gr\" don't return the regular green stuff, but return the same name, angry. So I'm actually just actually wrote Greek. And the other thing I did is that here, I told it to forward all the stuff that didn't match here, I told it to forward to the actual, actual service and I need to do one more thing to get this working I need to tell Quarkus to use this actual, this server."
msgstr "所以基本上我在这里做的是，我把......这个方法要找的终点分出来，我说当你看到 \"gr \"时，不要返回普通的绿色东西，而是返回同样的名字，生气。所以我实际上只是实际写了希腊语。我做的另一件事是，在这里，我告诉它转发所有在这里不匹配的东西，我告诉它转发到实际的，实际的服务，我还需要做一件事来让它工作，我需要告诉Quarkus使用这个实际的，这个服务器。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:376
#, fuzzy
msgid "So, this serverm, once it started, it'll start at some URL, some port... I don't know which, but don't really care because all I have to do in order to make the country service work, I need to tell it where the URL is, but wiremock base URL gives me that information. So what this does is that it overrides the property that I have here, which is the default. Let's say this gets overridden by when I start here, because like I said, these properties that are returned by start or runtime properties that override, what's in application properties."
msgstr "所以，这个serverm，一旦启动，它就会从某个URL，某个端口开始......我不知道是哪个，但并不关心，因为为了使国家服务工作，我所要做的就是告诉它URL在哪里，但wiremock的基本URL给了我这些信息。所以，这所做的是，它覆盖了我在这里的属性，也就是默认的。比方说，当我在这里启动时，这个属性会被覆盖，因为就像我说的，这些由启动或运行时属性返回的属性会覆盖应用属性中的内容。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:378
#, fuzzy, no-wrap
msgid "**Emmanuel**: One of the question is, Is there a doc somewhere that goes into details at everybody's own pace, that's a lot of information that.\n"
msgstr " *埃马纽埃* 尔：其中一个问题是，是否在某处有一份文件，按照每个人自己的节奏详细说明，那是很多信息的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:380
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, I know, no, because I just came up with this when I was preparing for this.\n"
msgstr " *乔治亚斯* 。是的，我知道，不，因为我是在准备这个的时候才想出来的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:382
#, fuzzy, no-wrap
msgid "**Emmanuel**: There you go YouTube like driven features.\n"
msgstr " *埃马纽* 埃尔：你去那里的YouTube喜欢驱动的功能。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:384
#, fuzzy, no-wrap
msgid "**Max**: The feature is there it's just the example is new.\n"
msgstr " *马克斯* ：功能是存在的，只是例子是新的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:386
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, I need to write down the example. Yeah, because this is a lot of information that it's not...\n"
msgstr " *乔治亚斯* 。是的，我需要写下这个例子。是的，因为这有很多的信息，它不是..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:388
#, fuzzy, no-wrap
msgid "**Max**: Once you're done here, take this code and commit into a repo and push it, then we can go.\n"
msgstr " *马克斯* ：一旦你在这里完成了，就把这些代码提交到 repo 中，然后推送它，然后我们就可以走了。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:390
#, fuzzy, no-wrap
msgid "**Georgios**: I've already done that I'll share once this is done, I'll show you the URL.\n"
msgstr " *乔治亚斯* 。我已经做了，一旦完成我就会分享，我会给你看网址。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:392
#, fuzzy, no-wrap
msgid "**Max**: What's the thing that... Like this start? What was the thing that made it whats the thing that made that being picked up? The lifecycle manager?\n"
msgstr " *麦克斯* ：是什么东西......像这样的开始？是什么东西让它什么东西让那个被捡起来的东西？生命周期经理？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:394
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, the Quarkus test resource and it picks up these life cycle managers and I could have multiple lifecycle managers, I have one for database or whatever and they all run before Quarkus starts. That's the important part. They run before Quarkus starts and they can override runtime properties.\n"
msgstr " *Georgios* :是的，Quarkus的测试资源和它拾取这些生命周期管理器，我可以有多个生命周期管理器，我有一个用于数据库或其他什么，它们都在Quarkus启动之前运行。这是最重要的部分。它们在Quarkus启动前运行，并且它们可以覆盖运行时属性。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:396
#, fuzzy, no-wrap
msgid "**Max**: Very cool. So I was wondering about that.\n"
msgstr " *马克斯* ：非常酷。所以我在想这个问题。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:398
#, fuzzy, no-wrap
msgid "**Emmanuel**: We have 10 minutes left, we haven't showed the test containers, which is one of the questions we had. So let's go do that.\n"
msgstr " *伊曼纽尔* ：我们还有10分钟，我们还没有展示测试容器，这是我们的一个问题。所以我们去做吧。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:400
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, yes let's do that really quick okay. So, I stay ____ and going to test containers, I wanna copy paste the dependencies from here, I need to get to to do, let's see, okay.\n"
msgstr " *乔治亚斯* 。是的，是的，让我们做得非常快，好的。所以，我留在 ____ ，去测试容器，我想从这里复制粘贴依赖性，我需要去做，让我们看看，好的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:402
#, fuzzy, no-wrap
msgid "**Emmanuel**: ____ this is getting awkward.\n"
msgstr " *伊曼纽尔* ： ____ 这越来越尴尬了。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:404
#, fuzzy
msgid "Test containers for information for people that don't know is... Well, it's a way to start from your, to control by your test life cycle, starting a set of resources inside a Docker container, on the same machine. And maybe on other machines like I don't quite know, but the idea is you control the Docker start and stop of a database or JMS queue, or whatever you want to run your integration test. That's very, very useful for that."
msgstr "对于不知道的人来说，测试容器是......嗯，它是一种从你的测试生命周期开始控制的方式，在同一台机器上的Docker容器内启动一组资源。也许在其他机器上，比如我不太清楚，但想法是你控制Docker启动和停止数据库或JMS队列，或任何你想运行你的集成测试。这在这方面是非常非常有用的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:406
#, fuzzy, no-wrap
msgid "**Georgios**: Absolutely, absolutely. Yeah, we get that question a lot. So we really need to show this. So I just copy&pasted the Hibernate Panache ORM dependency, postgresql driver.\n"
msgstr " *乔治亚斯* 。绝对的，绝对的。是的，我们经常收到这个问题。所以我们真的需要展示这个。所以我只是复制&粘贴了Hibernate Panache ORM的依赖性，postgresql驱动。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:408
#, fuzzy
msgid "Oh, well, probably Panache, mock out for later. So you can talk about that when you have Stephane on the show. Since this is a feature coming in 1.5, it's not in yet."
msgstr "哦，好吧，可能是Panache，模拟出了以后。所以你可以在请Stephane上节目时谈论这个问题。因为这是1.5版本中的一个功能，所以现在还没有。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:410
#, fuzzy
msgid "Okay, so let's go create an entity \"route\". So that entity ____."
msgstr "好的，所以让我们去创建一个实体 \"路由\"。所以这个实体 ____ 。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:412
#, fuzzy, no-wrap
msgid "**Emmanuel**: And here's a good one. So, Antonio sais: what about debugging your test? I find it cumbersome to attache the debugger in IntelliJ, I think I see... Yeah, that's for the test, okay, put it in on. It's not... ____ any applications running any testing running in IntelliJ to run the plain Java application from IntelliJ and attach the debugger... Now that we have the command mode that's much easier. I don't know about test like what would you...\n"
msgstr " *Emmanuel* : 这是个好问题。那么，安东尼奥说：调试你的测试怎么办？我发现在IntelliJ中附加调试器很麻烦，我想我看到了......是的，那是为测试准备的，好的，把它放在上面。这不是...... ___ 任何在IntelliJ中运行的应用程序，任何在IntelliJ中运行的测试，都要从IntelliJ中运行普通的Java应用程序并附加调试器......现在我们有了命令模式，这就容易多了。我不知道关于测试，比如你会..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:414
#, fuzzy, no-wrap
msgid "**Georgios**: This will work if I do this, let me hit, okay, I'm at Country service, if I go to country resource like yeah.\n"
msgstr " *Georgios* 。这将工作，如果我这样做，让我打，好吧，我是在国家服务，如果我去国家资源，如是。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:416
#, fuzzy, no-wrap
msgid "**Max**: If you're in a test just click that debug in anything.\n"
msgstr " *马克斯* ：如果你在一个测试中，只要在任何地方点击那个调试。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:418
#, fuzzy, no-wrap
msgid "**Georgios**: ____ you don't work well now I've had it a bunch, of dependencies, but yeah, I got this thing. A regular testing out delete anyway, so let's say I did this now I have all the Hibernate stuff inside, let me take-out Hibernate, so I then... So the.\n"
msgstr " *Georgios* : _你_ 现在工作得不好，我已经有了它的一堆，依赖性，但是，是的，我有这个东西。一个常规的测试出来的删除反正，所以让我们说我做了这个现在我有所有的Hibernate的东西在里面，让我把Hibernate拿出来，所以我然后...所以的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:420
#, fuzzy, no-wrap
msgid "**Max**: Are you trying, just to add the test containers on top or what are your...\n"
msgstr " *马克斯* ：你是想，只是在上面添加测试容器，还是你的...。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:422
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, I was, I was starting the test containers thing. Yeah, exactly, but now I wanna show the actual debug...\n"
msgstr " *Georgios* 。是的，我正在，我正在开始测试容器的事情。是的，没错，但现在我想展示实际的调试..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:424
#, fuzzy
msgid "See, debugging works just like any other Java application JUnit test, it'll work because the idea, it works because it's in the same JVM, I mean the test runs inside the same, the application and the test run inside the same JVM."
msgstr "看，调试工作就像任何其他Java应用程序的JUnit测试一样，它会工作，因为这个想法，它的工作原理是在同一个JVM中，我的意思是测试在同一个里面运行，应用程序和测试在同一个JVM中运行。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:426
#, fuzzy
msgid "So debugging, just works."
msgstr "因此，调试，只是工作。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:428
#, fuzzy
msgid "What is a little cumbersome at the moment is dev mode inside the IDE. So with dev mode the easiest way to do it is you do mvn quarkus: dev and then you attach a remote debugger later on."
msgstr "目前有点麻烦的是IDE内部的开发模式。因此，在开发模式下，最简单的方法是你做mvn quarkus: dev，然后你以后再附加一个远程调试器。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:430
#, fuzzy
msgid "And most people are used to that work flow because they're used to running their java-jar from the IDE or wherever, all the time. But with Quarkus dev mode, it's a little different."
msgstr "大多数人已经习惯了这种工作流程，因为他们已经习惯了从IDE或其他地方运行他们的java-jar，一直如此。但在Quarkus开发模式下，情况就有点不同了。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:432
#, fuzzy
msgid "You just start it on the command line, you forget about it and you attach a remote debugger."
msgstr "你只需在命令行上启动它，你就会忘记它，并附加一个远程调试器。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:434
#, fuzzy
msgid "And that's how I..."
msgstr "这就是我如何..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:436
#, fuzzy, no-wrap
msgid "**Max**: So I just... You to add to that, VS code actually does it when you do, it sets up a default launch, the you press F5, it will start quarkus dev and connect a debugger for you, so you don't... And I didn't actually realize this until Fred told me that its so lightweight and I think we've got... I wanna see that we have the same thing to IntelliJ and Eclipse... 'cause it's just, it's nice 'cause I...\n"
msgstr " *Max* : 所以我只是......你来补充一下，VS代码实际上是这样做的，当你做的时候，它设置了一个默认的启动，你按下F5，它会启动quarkus dev并为你连接一个调试器，所以你不......实际上我没有意识到这一点，直到Fred告诉我，它是如此轻巧，我想我们已经......我想看到我们有同样的东西给IntelliJ和Eclipse，因为它只是，这很好，因为我。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:438
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, it's awesome 'cause people expect it to work, they don't understand that it's not obvious, like when you start Quarkus dev mode then a different process starts and that's the process you have to connect the debugger to. Yeah, it's not exactly obvious. So yeah, having... That would be great IntelliJ as well.\n"
msgstr " *Georgios* 。是的，这很了不起，因为人们希望它能工作，他们不明白这并不明显，比如当你启动Quarkus开发模式时，就会有一个不同的进程开始，这就是你必须连接调试器的进程。是的，这不是很明显。所以是的，有......这也会是很好的IntelliJ。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:440
#, fuzzy, no-wrap
msgid "**Emmanuel**: Alright, let's go back to test containers.\n"
msgstr " *Emmanuel* : 好了，让我们回到测试容器。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:442
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, yes, yes, I... Let's finish that up. So, fruit resource I can, I created a fruit entity. With Panache I obviously don't have to write almost any code, so everything will just work out of the box. So, I go public List fruit.\n"
msgstr " *乔治亚斯* 。是的，是的，是的，我......让我们来完成这个。所以，水果资源我可以，我创建了一个水果实体。有了Panache，我显然不需要写几乎任何代码，所以一切都会开箱即用。所以，我去公开列表水果。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:444
#, fuzzy, no-wrap
msgid "**Emmanuel**: By the way, we should have even less code at some points in the near future, so just as a teaser... From a resource talking to Panache entity.\n"
msgstr " *埃马纽埃* 尔：顺便说一下，在不久的将来，我们应该有更少的代码，所以只是作为一个预告......从一个资源到Panache实体对话。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:446
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, you know what's coming.\n"
msgstr " *乔治亚斯* 。是的，你知道会发生什么。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:448
#, fuzzy, no-wrap
msgid "**Emmanuel**: I don't know when, that's the problem... I live in the future.\n"
msgstr " *伊曼纽尔* ：我不知道什么时候，这就是问题所在......我生活在未来。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:450
#, fuzzy, no-wrap
msgid "**Georgios**: The PR I think, is pretty much raised. Stephane is reviewing it but we should be close. Ahhh fruit listAll... Okay, so this will just list all... And I now I need to do create fruit resource test... And this would be a Quarkus test and now when I add a different test resource, a Quarkus test resource. So I need to start the database before Quarkus starts, right?\n"
msgstr " *乔治亚斯* 。我想，PR已经相当高了。Stephane正在审查它，但我们应该很接近了。啊，水果listAll......好的，所以这将只是列出所有......现在我需要做创建水果资源测试......这将是一个Quarkus测试，现在当我添加一个不同的测试资源，一个Quarkus测试资源。所以我需要在Quarkus启动之前启动数据库，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:452
#, fuzzy
msgid "So if I go here, and d test containers, database.class, create a class then again will be a Quarkus resource manager, and since we don't have much time I'm gonna copy&paste it."
msgstr "因此，如果我去这里，和d测试容器，database.class，创建一个类，然后再次将是一个Quarkus资源管理器，因为我们没有太多的时间，我要复制&粘贴它。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:454
#, fuzzy
msgid "So what it does here basically is I'll write this real quick and then explain what does... So the idea is, the resource with a test resource lifecycle manager will start a it'll start a test containers postgress skill database."
msgstr "因此，它在这里做的基本上是我将真正快速地写这个，然后解释做什么......所以这个想法是，具有测试资源生命周期管理器的资源将启动一个它将启动一个测试容器后进度技能数据库。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:456
#, fuzzy
msgid "So here I've told it version 11.7 with database name, username, password, thats just some simple defaults and the important part here that start, I start the database, and then I define the Quarkus runtime properties, so that would be the data source runtime properties. That be the user name, the password in the URL and just like WireMock did same way post the test containers gives me a JDBC URL that I can just use."
msgstr "所以在这里我告诉它11.7版本的数据库名称、用户名、密码，这只是一些简单的默认值，重要的部分是启动，我启动了数据库，然后我定义了Quarkus运行时属性，所以这将是数据源运行时属性。就像WireMock所做的一样，测试容器给我一个JDBC URL，我可以直接使用。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:458
#, fuzzy
msgid "So this way I just, I don't have to configure anything with darker and pom.xml or have a Docker container, running anywhere other way I just integrated with Quarkus test containers and it'll just work. I need to fix a few more things to make this work out of the box, the, this is the test specific that I'm telling it, it's a database, Postgress databas, drop and create the database for the test. I'm gonna seed the database but some data and you just... So, fruit and I need to copy like let's say this that because the..."
msgstr "因此，这种方式我只是，我不需要用darker和pom.xml配置任何东西，或者有一个Docker容器，在任何地方运行其他方式，我只是与Quarkus测试容器集成，它就可以工作。我还需要修复一些东西来使这个工作开箱即用，这个是我告诉它的测试特定，它是一个数据库，Postgress databas，放弃并为测试创建数据库。我要给数据库播种，但一些数据和你只是......所以，水果和我需要复制像让我们说这个，因为......"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:460
#, fuzzy, no-wrap
msgid "**Max**: That is just using test containers? And I guess the only thing I had to do is used a wiring up with the Quarkus test resource.\n"
msgstr " *Max* : 这只是使用测试容器？我想我唯一要做的事情就是用Quarkus测试资源来进行接线。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:462
#, fuzzy, no-wrap
msgid "**Georgios**: Yes, exactly, Yeah, to start test containers before Quarkus starts.\n"
msgstr " *Georgios* :是的，没错，是的，在Quarkus启动之前启动测试容器。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:464
#, fuzzy
msgid "So this should be always plain. I seeded the database with three fruits and that's why in my test I said that I'm expecting three... I'm definitely... Okay..."
msgstr "所以，这应该是一直很普通的。我在数据库中加入了三个水果的种子，这就是为什么我在测试中说我在期待三个......我肯定......好吧......。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:466
#, fuzzy, no-wrap
msgid "**Max**: Java 14...\n"
msgstr " *最大* ：Java 14..."

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:468
#, fuzzy, no-wrap
msgid "**Georgios**: So sdk man, I totally endorse it as the way to use Java 14. and now just running again and let's see. So, test containers starting here, we saw it did we started, test passed and it was not easy, right? So you saw it... All I need is a test resource start the database on the important thing is to set the property, the runtime properties, I need and it just works.\n"
msgstr " *Georgios* 。所以sdk的人，我完全赞同它作为使用Java 14的方式。现在只是再次运行，让我们看看。所以，测试容器从这里开始，我们看到它确实开始了，测试通过了，这并不容易，对吗？所以你看到了......我所需要的是一个测试资源，启动数据库，重要的是设置属性，运行时属性，我需要的，它只是工作。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:470
#, fuzzy, no-wrap
msgid "**Emmanuel**: So just quickly taking the ____ sdkman.io and it's a way to select the Java you want and a few other things.\n"
msgstr " *Emmanuel* ：所以只是快速地采取了 ____ sdkman.io，它是一种选择你想要的Java和其他一些东西的方法。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:472
#, fuzzy
msgid "You got a bunch of options here, but if you jumped from one JDK to another, the GraalVM one or just hte non-GraalVM one. A very useful tool."
msgstr "你在这里有一堆选择，但如果你从一个JDK跳到另一个JDK，GraalVM的那个或只是hte非GraalVM的。一个非常有用的工具。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:474
#, fuzzy
msgid "You also show the test containers. And I wanted to show that it's not limited to databases you've got quite a bunch of other things like Kafka, elastic search, ____ etcetera, etcetera. So that's quite good. And integrate with JUnit 5, which is the one thing we're using right now, so that's... There is one tiny things, they don't do which is really sad, is they do require the Docker demon, which means we can not use that with podman, which is a bit of a shame 'cause that would be super useful... But otherwise it... It's working great yep."
msgstr "你也展示了测试容器。我想展示的是，它并不局限于数据库，你还有相当多的其他东西，如Kafka、弹性搜索、 ____ 等等，等等。所以这很好。它与JUnit 5集成，这是我们现在正在使用的东西，所以......有一件小事，他们没有做，这真的很遗憾，他们需要Docker demon，这意味着我们不能与podman一起使用，这有点遗憾，因为这将是超级有用的......但除此之外，它......它工作得很好，没错。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:476
#, fuzzy, no-wrap
msgid "**Georgios**: Yeah, hopefully that will restriction will be lifted... We may be lifting soon, who knows., well, we have...\n"
msgstr " *Georgios* 。是的，希望这将限制将被解除......我们可能很快就会解除，谁知道呢，嗯，我们有......。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:478
#, fuzzy, no-wrap
msgid "**Max**: We hit the hour. Is there anything else you wanna do?\n"
msgstr "我们到了一个小时。你还有什么想做的吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:480
#, fuzzy, no-wrap
msgid "**Georgios**: Well, yeah, basically the URL for all the code I showed you can find it. I know how it is posed to share. Do I just post it in the chat?\n"
msgstr " *乔治亚斯* 。嗯，是的，基本上我展示的所有代码的URL你都可以找到。我知道它是如何摆出来分享的。我只是在聊天中发布它吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:482
#, fuzzy, no-wrap
msgid "**Max**: Yeah, I just toss it in chat, and then we will put in the blog when it's coming out, yeah.\n"
msgstr " *马克斯* ：是的，我只是在聊天中抛出它，然后我们会在它出来的时候放在博客上，是的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:484
#, fuzzy, no-wrap
msgid "**Georgios**: Oh, okay, great, great, you on.\n"
msgstr " *乔治亚斯* 。哦，好的，太好了，太好了，你上。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:486
#, fuzzy, no-wrap
msgid "**Emmanuel**: Okay, and tell us how you felt. Was it too technical, not technical, enough, too fast, too small to be perfect, to perfect or... And then on the chat live, when it's still alive, otherwise go to the video, post comments in there and don't forget to subscribe to the Quarkus challenge or YouTube.com/quarkusio. I realize you don't need the \"c\" here, So let me remove it, click here, there you go... YouTube.com/quarkusio - hit subscribe and I'm not sure if it's gonna be a weekly event, or bi-weekly event bi-weekly meaning every two weeks for the confusing English. People like me.\n"
msgstr " *伊曼纽尔* ：好的，告诉我们你的感受。是技术性太强，还是技术性不够，是速度太快，还是太小，不够完美，还是......然后在聊天直播中，当它还活着的时候，否则就去看视频，在那里发表评论，别忘了订阅Quarkus挑战或YouTube.com/quarkusio。我意识到你不需要这里的 \"c\"，所以让我把它去掉，点击这里，你去......YouTube.com/quarkusio--点击订阅，我不确定它是否会成为每周一次的活动，或者双周一次的活动，双周的意思是每两周一次的混乱的英语。像我这样的人。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:488
#, fuzzy, no-wrap
msgid "**Max**: No questions?\n"
msgstr " *马克斯* ：没有问题吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:490
#, fuzzy, no-wrap
msgid "**Emmanuel**: Yeah, there's one question, so let me go back to... \"So why did you prefer Maven over Gradle?\n"
msgstr " *Emmanuel* ：是的，有一个问题，让我回到...... \"那么你为什么喜欢Maven而不是Gradle？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:492
#, fuzzy, no-wrap
msgid "**Georgios**: For the simple reason that I'm more familiar with it, right?\n"
msgstr " *乔治亚斯* 。原因很简单，我对它更熟悉，对吗？"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:494
#, fuzzy
msgid "Quarkus works with both let's say some of the edge cases like the very edge cases, work better with Maven, the Gradle support is being looked into it's going to get way better over time. But the reason I used it is because I'm more familiar with Maven."
msgstr "Quarkus可以和Maven一起工作，比如说一些边缘案例，用Maven更好，Gradle的支持正在研究中，随着时间的推移会变得更好。但我之所以使用它，是因为我对Maven更熟悉。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:496
#, fuzzy, no-wrap
msgid "**Max**: The essence of the Maven/Gradle discussion is, So there's some issues we can't fully handle in Gradle yet but we are hoping to fix it, but I also wanna say as far as we know, right now, about 70% of the people who goes to code.quarkus.io of chose Maven and the other chose Gradle.\n"
msgstr " *Max* ：Maven/Gradle讨论的本质是，有些问题我们还不能完全在Gradle中处理，但我们希望能解决它，但我也想说，就我们所知，现在，大约70%的人去code.quarkus.io的时候选择了Maven，其他的选择了Gradle。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:498
#, fuzzy
msgid "So yeah, it's a bit... They'll be improved, yeah."
msgstr "所以是的，这有点......他们会得到改善，是的。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:500
#, fuzzy, no-wrap
msgid "**Emmanuel**: And Georgios was too fast, so we need slower coders.\n"
msgstr " *Emmanuel* ：而且Georgios的速度太快了，所以我们需要慢一点的编码员。"

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:502
msgid "Indeed there is a little bit of a lag with YouTube Live, hopefully it won't be too visible in the actual final video once it's all fully uploaded and properly run, but although it... Good feedback on that."
msgstr ""

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:504
#, no-wrap
msgid "**Max**: Alright, we're good.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:506
#, no-wrap
msgid "**Emmanuel**: Yeah, we're good, thank you everyone and see you, well, sometime in the future sees ____ what we're gonna try and do, but who knows? And happy May the Fourth to everyone.\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/insights_1_transcription.adoc:507
#, no-wrap
msgid "**Georgios**: Thank you everybody!\n"
msgstr ""
