msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "How Orange leverages Quarkus for seamless access to Telco network capabilities"
msgstr "Orange 如何利用 Quarkus 无缝接入电信网络功能"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Learn how Orange successfully deployed APIs across various 4G/5G network cores."
msgstr "了解 Orange 如何在各种 4G/5G 网络核心中成功部署 API。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
msgid "Introduction"
msgstr "简介"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"As a global telecommunications leader, https://www.orange.com[Orange] has always been at the forefront of innovation.\n"
"Along with Deutsche Telekom, Telefónica, and Vodafone, Orange co-founded the https://camaraproject.org[Camara Project], an initiative aimed at simplifying the consumption of 5G APIs for third-party application developers."
msgstr "作为全球电信行业的领导者， link:https://www.orange.com[Orange] 始终走在创新的前沿。Orange 与德国电信、西班牙电信和沃达丰共同发起了 link:https://camaraproject.org[Camara 项目] ，旨在简化第三方应用开发人员对 5G API 的使用。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "To achieve this goal, Orange needed a flexible and lightweight framework capable of handling constrained API exposure while ensuring compatibility with existing network core systems."
msgstr "为实现这一目标，Orange 需要一个灵活轻便的框架，既能处理受限的 API 暴露，又能确保与现有网络核心系统的兼容性。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "After a rigorous evaluation of multiple frameworks and toolkits — including Quarkus, Ktor, Micronaut, and Vert.x — Orange selected Quarkus as the ideal solution."
msgstr "在对 Quarkus、Ktor、Micronaut 和 Vert.x 等多个框架和工具包进行严格评估后，Orange 选择 Quarkus 作为理想的解决方案。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "https://www.linkedin.com/in/patriceconil/[Patrice Conil], software craftsman at Orange, told us why."
msgstr "Orange 公司的软件工程师 link:https://www.linkedin.com/in/patriceconil/[Patrice Conil] 告诉了我们原因。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Why Quarkus? A Framework Evaluation"
msgstr "为什么选择 Quarkus？框架评估"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"The team at Orange identified application startup time as a barrier to dynamic Kubernetes pod management.\n"
"So they embarked on a comparative study to test alternatives to Spring Boot in a well-defined API wrapper exposure context.\n"
"Key evaluation criteria included:"
msgstr "Orange 团队发现，应用程序启动时间是动态 Kubernetes pod 管理的一个障碍。因此，他们开展了一项比较研究，在明确定义的 API 封装暴露环境中测试 Spring Boot 的替代方案。主要评估标准包括"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Learning Curve: How easily could a Spring developer transition?"
msgstr "学习曲线：Spring 开发人员如何轻松转型？"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Kotlin Compatibility: Could the framework work seamlessly with Kotlin?"
msgstr "Kotlin 兼容性：框架能否与 Kotlin 无缝协作？"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Runtime footprint: Could it operate efficiently in a constrained environment?"
msgstr "运行时的足迹：能否在受限环境中高效运行？"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Ease of Deployment: How smoothly could it be deployed on Kubernetes?"
msgstr "易于部署：如何在 Kubernetes 上顺利部署？"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "After extensive testing, Quarkus stood out for multiple reasons:"
msgstr "经过广泛测试，Quarkus 因多种原因脱颖而出："

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Simplicity: A relatively simple learning curve, especially for those familiar with JAX-RS / Jakarta REST."
msgstr "简单：学习曲线相对简单，尤其适合熟悉 JAX-RS / Jakarta REST 的人。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Dev Mode: Very fast startup, live reload and zero configuration Dev Services (Vault, Redis) result in great developer productivity."
msgstr "开发模式：极快的启动速度、实时重新加载和零配置开发服务（Vault、Redis）可提高开发人员的工作效率。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Modularity: Only required dependencies were embedded, keeping applications lean."
msgstr "模块化：只嵌入所需的依赖项，使应用程序保持精简。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Documentation: Well-organized, versioned documentation with working examples."
msgstr "文档：文档：条理清晰、版本分明，并附有工作示例。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Native Compilation: The ability to generate compact native binaries for Kubernetes deployment."
msgstr "本地编译：为 Kubernetes 部署生成紧凑的本地二进制文件的能力。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Despite the strong competition from a vibrant JVM ecosystem, these advantages made Quarkus the preferred choice for exposing 5G APIs at Orange."
msgstr "尽管面临来自活跃的 JVM 生态系统的激烈竞争，但这些优势使 Quarkus 成为 Orange 公开 5G API 的首选。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Lessons Learned from Adopting Quarkus"
msgstr "采用 Quarkus 的经验教训"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Migration & Development Experience"
msgstr "迁移和开发经验"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Transitioning from Spring to Quarkus was not overly complex, especially for those familiar with JAX-RS / Jakarta REST."
msgstr "从 Spring 过渡到 Quarkus 并不过分复杂，尤其是对于那些熟悉 JAX-RS / Jakarta REST 的人来说。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "The https://quarkus.io/guides/dev-services[Dev Services] significantly enhanced productivity in dev and test modes, but required careful consideration for their CI/CD environments, where no container runtime is available."
msgstr "link:https://quarkus.io/guides/dev-services[开发服务] 大大提高了开发和测试模式下的工作效率，但对于没有容器运行时的 CI/CD 环境，则需要慎重考虑。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "The modular approach ensured applications remained lightweight but introduced a large number of small dependencies to manage."
msgstr "模块化方法确保了应用程序的轻量级，但也带来了大量需要管理的小型依赖关系。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Spec-First API Development"
msgstr "规格优先的应用程序接口开发"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "As spec-first practitioners, integrating OpenAPI specification generation was a crucial requirement that Quarkus handled effectively."
msgstr "作为规范先行的实践者，集成 OpenAPI 规范生成是 Quarkus 有效处理的一项关键要求。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Java & Kotlin Interoperability"
msgstr "Java 与 Kotlin 的互操作性"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"While Quarkus supports Kotlin, writing full Kotlin extensions proved challenging at times.\n"
"The team retained some Java code, and Java-Kotlin interoperability worked smoothly."
msgstr "尽管 Quarkus 支持 Kotlin，但编写完整的 Kotlin 扩展有时仍具有挑战性。团队保留了一些 Java 代码，Java-Kotlin 互操作性工作得很顺利。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Native Compilation & Performance"
msgstr "本地编译和性能"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"Native compilation produced compact native executables, but the process of producing them was lengthy.\n"
"The team reserved it for the final build stage when absolutely necessary."
msgstr "本地编译可以生成紧凑的本地可执行文件，但生成过程非常漫长。团队将其保留到绝对必要的最后构建阶段。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Some fine-tuning was required to prevent class pruning issues."
msgstr "为防止班级修剪问题，需要进行一些微调。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "When building native executables, the call tree is analyzed to determine which classes and methods are used. Everything that is not used is pruned to reduce the size of the executable and the RSS usage."
msgstr "在构建本地可执行文件时，会对调用树进行分析，以确定使用了哪些类和方法。不使用的内容都会被剪掉，以减少可执行文件的大小和 RSS 的使用量。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "In some cases, e.g. when using reflection, you will have to declare explicitly that a class is used so that it ends up being included in the native executable."
msgstr "在某些情况下，例如使用反射时，您必须明确声明使用了某个类，以便最终将其包含在本地可执行文件中。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Quarkus provides tooling to simplify this configuration."
msgstr "Quarkus 提供了简化这种配置的工具。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Reactive Programming & Mutiny"
msgstr "反应式编程与叛变"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Having worked extensively with Reactor, the transition to Mutiny had a learning curve."
msgstr "在与 Reactor 广泛合作之后，向 Mutiny 的过渡需要一个学习曲线。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "While effective and more intuitive thanks to its navigable API, it was perceived as more verbose for the simple cases."
msgstr "由于其可导航的应用程序接口（API）更有效、更直观，但对于简单的情况而言，它被认为更加冗长。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Architecture Overview"
msgstr "建筑概览"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Orange designed a microservices-based architecture to expose 5G APIs efficiently."
msgstr "Orange 设计了基于微服务的架构，以高效地公开 5G 应用程序接口。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Microservices & API Wrappers"
msgstr "微服务和应用程序接口封装器"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"Each API wrapper was implemented as a dedicated microservice for better version control.\n"
"The team leveraged Reactive APIs wherever possible, since there are a lot of time-consuming asynchronous tasks to be performed on the core network side and saving resources is a business goal."
msgstr "每个应用程序接口封装器都是作为专用微服务实现的，以便更好地进行版本控制。团队尽可能利用反应式 API，因为核心网络侧需要执行大量耗时的异步任务，而节省资源是业务目标之一。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "CI/CD & Deployment"
msgstr "CI/CD 和部署"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Each microservice had its own GitLab repository with an independent build pipeline for its Docker image."
msgstr "每个微服务都有自己的 GitLab 仓库，其 Docker 镜像有独立的构建管道。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"Renovate was used to automate dependency upgrades.\n"
"A dedicated deployment project pushed new Docker images to an OpenShift cluster using Kustomize + ArgoCD."
msgstr "Renovate 用于自动进行依赖升级。一个专门的部署项目使用 Kustomize + ArgoCD 将新的 Docker 映像推送到 OpenShift 集群。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Infrastructure Components"
msgstr "基础设施组件"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Additional services included:"
msgstr "其他服务包括"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Vault for secrets management"
msgstr "用于管理机密的保险库"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Redis for caching"
msgstr "用于缓存的 Redis"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Neo4j for database operations"
msgstr "用于数据库操作的 Neo4j"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Kafka for messaging"
msgstr "用于信息传递的 Kafka"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Vert.x HTTP Proxy was used for routing and backend protection."
msgstr "Vert.x HTTP 代理用于路由选择和后台保护。"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid "Results & Impact"
msgstr "成果与影响"

#: _posts/2025-03-18-orange-telco-core-network-api-management-with-quarkus.adoc
#, fuzzy
msgid ""
"After implementing Quarkus in production, Orange successfully **deployed ten APIs** across various 4G/5G network cores.\n"
"Over time, the team performed **multiple Quarkus version upgrades (2.11 → 3.14)**, all well-managed through Renovate with minimal code adaptation—except for necessary adjustments during the migration to Jakarta EE."
msgstr "在生产中实施 Quarkus 后，Orange 在各种 4G/5G 网络核心中成功 *部署了 10 个 API* 。随着时间的推移，该团队进行了 *多次 Quarkus 版本升级（2.11 → 3.14）* ，所有 *升级* 都通过 Renovate 进行了良好管理，代码调整幅度极小，只有在向雅加达 EE 迁移过程中进行了必要调整。"
