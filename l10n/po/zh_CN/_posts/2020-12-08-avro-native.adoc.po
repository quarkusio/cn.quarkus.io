# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-12-08-avro-native.adoc:1
#, fuzzy, no-wrap
msgid "cescoffier"
msgstr "鹤壁市"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-12-08-avro-native.adoc:1
#, fuzzy, no-wrap
msgid "2020-12-08"
msgstr "2020-12-08"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-12-08-avro-native.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "职位"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-12-08-avro-native.adoc:1
#, fuzzy, no-wrap
msgid "How to use Kafka and Avro in a native executable"
msgstr "如何在一个本地可执行文件中使用Kafka和Avro"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-12-08-avro-native.adoc:1
#, fuzzy, no-wrap
msgid "reactive kafka avro"
msgstr "反应式卡夫卡avro"

#. type: YAML Front Matter: title
#: upstream/_posts/2020-12-08-avro-native.adoc:1
#, fuzzy, no-wrap
msgid "Using Avro in a native executable"
msgstr "在本地可执行文件中使用Avro"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:11
#, fuzzy
msgid "A few months back, I blogged about https://quarkus.io/blog/kafka-avro/[Quarkus, Kafka, and Avro] (using the Apicurio schema registry)."
msgstr "几个月前，我写了一篇关于 link:https://quarkus.io/blog/kafka-avro/[Quarkus、Kafka和Avro] （使用Apicurio模式注册表）的博客。"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:14
#, fuzzy
msgid "We developed a simple application, receives HTTP requests, writes Kafka records, and reads them from Kafka.  It uses Avro to serialize and deserialize the records."
msgstr "我们开发了一个简单的应用程序，接收HTTP请求，写入Kafka记录，并从Kafka中读取它们。它使用Avro来序列化和反序列化这些记录。"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:16
#, fuzzy
msgid "image:/assets/images/posts/kafka-avro/architecture.png[]"
msgstr "image:/assets/images/posts/kafka-avro/architecture.png[alt=\"architecture\"]"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:18
#, fuzzy
msgid "At that time, the https://github.com/cescoffier/quarkus-kafka-and-avro[application] was **NOT** working in native mode."
msgstr "当时，该 link:https://github.com/cescoffier/quarkus-kafka-and-avro[应用程序] *没有* 在本地模式下工作。"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:20
#, fuzzy
msgid "With Quarkus 1.10.2, it's now working in native mode!"
msgstr "有了Quarkus 1.10.2，它现在可以在原生模式下工作了!"

#. type: Title ==
#: upstream/_posts/2020-12-08-avro-native.adoc:21
#, fuzzy, no-wrap
msgid "Why didn't it work?"
msgstr "为什么没能成功？"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:27
#, fuzzy
msgid "The native compiler does not support everything that is possible to do in Java.  There are cases not yet supported, and Avro is using some of these unsupported constructs.  Fortunately, we can implement _substitutions_ (to replace unsupported constructs in the code directly) and use Quarkus extensions to configure the compiler correctly.  As a result, your application does not have to configure anything, \"it just works™️\"."
msgstr "本地编译器并不支持所有在Java中可以做的事情。有一些情况还不被支持，Avro正在使用其中一些不被支持的构造。幸运的是，我们可以实现 _替换_ （直接替换代码中不支持的构造），并使用Quarkus扩展来正确配置编译器。因此，你的应用程序不需要配置任何东西，\"它只是工作™️\"。"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:30
#, fuzzy
msgid "Let's come back to Avro.  Avro uses https://docs.oracle.com/javase/9/docs/api/java/lang/invoke/MethodHandles.html[method handles] that are not supported by the GraalVM native compiler."
msgstr "让我们再来看看Avro。Avro使用的 link:https://docs.oracle.com/javase/9/docs/api/java/lang/invoke/MethodHandles.html[方法句柄] 是GraalVM本地编译器所不支持的。"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:33
#, fuzzy
msgid "To workaround the unsupported constructs used by Avro, we implemented a set of https://github.com/quarkusio/quarkus/blob/master/extensions/avro/runtime/src/main/java/io/quarkus/avro/graal/AvroSubstitutions.java[substitutions].  We replaced method handles with reflection."
msgstr "为了解决Avro使用的不支持的结构，我们实现了一系列的 link:https://github.com/quarkusio/quarkus/blob/master/extensions/avro/runtime/src/main/java/io/quarkus/avro/graal/AvroSubstitutions.java[替换] 。我们用反射代替了方法柄。"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:35
#, fuzzy
msgid "The `GenericDatumReader` also needs a bit of work as it touches threads at build time."
msgstr " `GenericDatumReader` 也需要一些工作，因为它在构建时接触到了线程。"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:37
#, fuzzy
msgid "Finally, in the Quarkus Avro Processor (part of the Quarkus extension), we register for reflection all the classes annotated with `@AvroGenerated`, as we are using reflection to create new instances of them."
msgstr "最后，在Quarkus Avro处理器（Quarkus扩展的一部分）中，我们为反射注册所有用 `@AvroGenerated` 注释的类，因为我们要用反射来创建它们的新实例。"

#. type: Title ==
#: upstream/_posts/2020-12-08-avro-native.adoc:38
#, fuzzy, no-wrap
msgid "Show me!"
msgstr "给我看看！"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:42
#, fuzzy
msgid "Check out the https://github.com/cescoffier/quarkus-kafka-and-avro[code] of the application, and make sure you have GraalVM installed.  Then, build the native executable using:"
msgstr "查看应用程序的 link:https://github.com/cescoffier/quarkus-kafka-and-avro[代码] ，并确保你已经安装了GraalVM。然后，用以下方法构建本地可执行文件。"

#. type: delimited block -
#: upstream/_posts/2020-12-08-avro-native.adoc:46
#, no-wrap
msgid "mvn package -Pnative\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:49
#, fuzzy
msgid "Grab a coffee or tea, as it may take a few minutes"
msgstr "拿上咖啡或茶，因为可能需要几分钟的时间"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:51
#, fuzzy
msgid "Start the Kafka broker and the schema registry using:"
msgstr "启动Kafka broker和schema registry，使用。"

#. type: delimited block -
#: upstream/_posts/2020-12-08-avro-native.adoc:55
#, no-wrap
msgid "docker-compose up -d\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:58
#, fuzzy
msgid "Finally, run the application with `./target/kafka-and-avro-1.0.0-SNAPSHOT-runner`."
msgstr "最后，用 `./target/kafka-and-avro-1.0.0-SNAPSHOT-runner` 来运行应用程序。"

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:60
#, fuzzy
msgid "Send some movies to the application:"
msgstr "发送一些电影给应用程序。"

#. type: delimited block -
#: upstream/_posts/2020-12-08-avro-native.adoc:67
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"title\":\"The Shawshank Redemption\",\"year\":1994}' \\\n"
"http://localhost:8080/movies\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-avro-native.adoc:72
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"title\":\"The Godfather\",\"year\":1972}' \\\n"
"http://localhost:8080/movies\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-avro-native.adoc:77
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"title\":\"The Dark Knight\",\"year\":2008}' \\\n"
"http://localhost:8080/movies\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-12-08-avro-native.adoc:82
#, no-wrap
msgid ""
"curl --header \"Content-Type: application/json\" \\\n"
"--request POST \\\n"
"--data '{\"title\":\"12 Angry Men\",\"year\":1957}' \\\n"
"http://localhost:8080/movies\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:85
#, fuzzy
msgid "Check they are processed successfully in the application log output:"
msgstr "在应用程序日志输出中检查它们是否被成功处理。"

#. type: delimited block -
#: upstream/_posts/2020-12-08-avro-native.adoc:98
#, no-wrap
msgid ""
"2020-12-02 11:06:32,699 INFO  [MovieResource] (executor-thread-1) Sending movie 12 Angry Men to Kafka\n"
"2020-12-02 11:06:33,230 INFO  [MovieConsumer] (vert.x-eventloop-thread-0) Received movie: 12 Angry Men (1957)\n"
"2020-12-02 11:07:01,325 INFO  [MovieResource] (executor-thread-1) Sending movie The Shawshank Redemption to Kafka\n"
"2020-12-02 11:07:01,345 INFO  [MovieConsumer] (vert.x-eventloop-thread-0) Received movie: The Shawshank Redemption (1994)\n"
"2020-12-02 11:07:01,350 INFO  [MovieResource] (executor-thread-1) Sending movie The Godfather to Kafka\n"
"2020-12-02 11:07:01,361 INFO  [MovieConsumer] (vert.x-eventloop-thread-0) Received movie: The Godfather (1972)\n"
"2020-12-02 11:07:01,368 INFO  [MovieResource] (executor-thread-1) Sending movie The Dark Knight to Kafka\n"
"2020-12-02 11:07:01,378 INFO  [MovieConsumer] (vert.x-eventloop-thread-0) Received movie: The Dark Knight (2008)\n"
"2020-12-02 11:07:01,388 INFO  [MovieResource] (executor-thread-1) Sending movie 12 Angry Men to Kafka\n"
"2020-12-02 11:07:01,396 INFO  [MovieConsumer] (vert.x-eventloop-thread-0) Received movie: 12 Angry Men (1957)\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-12-08-avro-native.adoc:102
msgid "The Avro support in native is still experimental.  In the last Quarkus version, we made significant progress, but there may be some uncovered areas.  Let us know if you find anything https://github.com/quarkusio/quarkus/issues/new/choose[odd]!"
msgstr ""
