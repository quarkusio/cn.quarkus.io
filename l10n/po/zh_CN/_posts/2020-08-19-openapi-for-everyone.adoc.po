# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, no-wrap
msgid "phillipkruger"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, no-wrap
msgid "2020-08-19"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, no-wrap
msgid "Exploring some SmallRye OpenAPI features"
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, no-wrap
msgid "extension openapi"
msgstr ""

#. type: Title =
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:11
#, no-wrap
msgid "MicroProfile OpenAPI for everyone"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:16
msgid "https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] is primarily used for adding https://swagger.io/specification/[OpenAPI] to https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS] Endpoints. In this blog post we will look at how the https://github.com/smallrye/smallrye-open-api[SmallRye Implementation] extends this with some extra features, and support for more web frameworks, when used in Quarkus."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:17
#, no-wrap
msgid "Using Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:21
msgid "The example code is available https://github.com/phillip-kruger/openapi-example[here]. You can also initialize a project using https://code.quarkus.io/[code.quarkus.io] - just make sure to include the SmallRye OpenAPI Extension."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:22
#, no-wrap
msgid "JAX-RS"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:26
msgid "Let's start with a basic JAX-RS Example in Quarkus. We have a `Greeting` Object, that has a `message` and a `to` field, and we will create `GET`, `POST` and `DELETE` endpoints for the greeting."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:28
msgid "Apart from the usual Quarkus setup, you also need the following in your `pom.xml` to create a JAX-RS Endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:36
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:41
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:46
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jsonb</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:50
msgid "In Quarkus you do not need an `Application` class, we can just add the Endpoint class:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:58
#, no-wrap
msgid ""
"@Path(\"/jax-rs\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class JaxRsGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:64
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/hello\")\n"
"    public Greeting helloJaxRs() {\n"
"        return new Greeting(\"Hello\", \"JAX-RS\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:70
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/hello\")\n"
"    public Greeting newHelloJaxRs(Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:76
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"/hello/{message}\")\n"
"    public void deleteHelloJaxRs(@PathParam(\"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:78
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:83
msgid "So far we have not yet added any MicroProfile OpenAPI Annotations, but because we added the `quarkus-smallrye-openapi` extension, we will already have a Schema document generated under `/openapi`:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:87
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:171
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:225
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:294
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:354
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:454
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:569
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:625
#, no-wrap
msgid "---\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:135
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /jax-rs/hello:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
"        to:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:139
msgid "See https://quarkus.io/guides/rest-json[quarkus.io/guides/rest-json] for more information."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:140
#, no-wrap
msgid "OpenAPI"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:143
msgid "You can add more information to the generated schema document by using MicroProfile OpenAPI."
msgstr ""

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:144
#, no-wrap
msgid "Header information using config"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:149
msgid "One feature that we added to SmallRye is the ability to add header information, that you typically add to the `Application` class using annotations, with MicroProfile config. This is useful in Quarkus where you do not need an `Application` class. So adding the following to the `application.properties` will give you some header information:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:163
#, no-wrap
msgid ""
"mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone\n"
"%dev.mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone (development)\n"
"%test.mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone (test)\n"
"mp.openapi.extensions.smallrye.info.version=1.0.0\n"
"mp.openapi.extensions.smallrye.info.description=Example on how to use OpenAPI everywhere\n"
"mp.openapi.extensions.smallrye.info.contact.email=phillip.kruger@redhat.com\n"
"mp.openapi.extensions.smallrye.info.contact.name=Phillip Kruger\n"
"mp.openapi.extensions.smallrye.info.contact.url=https://www.phillip-kruger.com\n"
"mp.openapi.extensions.smallrye.info.license.name=Apache 2.0\n"
"mp.openapi.extensions.smallrye.info.license.url=http://www.apache.org/licenses/LICENSE-2.0.html\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:167
msgid "Now look at the header of the generated schema document under `/openapi`:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:184
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"info:\n"
"  title: OpenAPI for Everyone (development)\n"
"  description: Example on how to use OpenAPI everywhere\n"
"  contact:\n"
"    name: Phillip Kruger\n"
"    url: https://www.phillip-kruger.com\n"
"    email: phillip.kruger@redhat.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: http://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.0\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:186
#, no-wrap
msgid "# Rest of the schema document...\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:189
#, no-wrap
msgid "Adding some OpenAPI Annotations to your operations"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:192
msgid "You can use any of the annotations in MicroProfile OpenAPI to further describe your endpoint, for example the `Tag` annotation:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:203
#, no-wrap
msgid ""
"@Path(\"/jax-rs\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"@Tag(name = \"JAX-RS Resource\", description = \"Basic Hello World using JAX-RS\") // <1>\n"
"public class JaxRsGreeting {\n"
"    //...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:206
msgid "Example usage of MicroProfile OpenAPI annotation."
msgstr ""

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:207
#, no-wrap
msgid "Auto generate the operation id"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:212
msgid "Some tools that use the schema document to generate client stubs, need an `operationId` in the schema document that is used to name the client stub methods.  We added support in SmallRye to auto generate this using either the method name (`METHOD`), class and method name (`CLASS_METHOD`), or package, class and method name (`PACKAGE_CLASS_METHOD`).  To do this add the following to `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:217
#, no-wrap
msgid "mp.openapi.extensions.smallrye.operationIdStrategy=METHOD\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:221
msgid "You will now see the `operationId` in the schema document for every operation:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:227
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:356
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:456
msgid "openapi: 3.0.3"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:229
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:358
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:458
msgid "# Header omitted..."
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:272
#, no-wrap
msgid ""
"/jax-rs/hello:\n"
"    get:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: helloJaxRs // <1>\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: newHelloJaxRs // <1>\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: deleteHelloJaxRs // <1>\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:275
msgid "Auto generated `operationId`"
msgstr ""

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:276
#, no-wrap
msgid "Changing the OpenAPI version"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:281
msgid "Some API gateways might require a certain OpenAPI version to work. The schema document generated by the SmallRye extension will generate with `3.0.3` as the version, but since there is only minor differences between these versions, you can change that to `3.0.0`, `3.0.1` or `3.0.2`. You can do this by adding this in `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:286
#, no-wrap
msgid "mp.openapi.extensions.smallrye.openapi=3.0.2\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:290
msgid "Now the version generated will be:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:296
msgid "openapi: 3.0.2"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:298
msgid "# Rest of the document..."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:302
msgid "See https://quarkus.io/guides/openapi-swaggerui[quarkus.io/guides/openapi-swaggerui] for more information."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:303
#, no-wrap
msgid "Spring Web"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:308
msgid "Recently support for Spring Web has been added in SmallRye OpenAPI, this means that, not only will you see the default OpenAPI document when you use Spring Web in Quarkus, but you can also use MicroProfile OpenAPI to further describe your Spring Web endpoints."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:310
msgid "Let's add a Spring Rest Controller to our current application. First add this in your `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:318
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:322
msgid "Now you can create a similar endpoint to the JAX-RS one we have looked at so far, but using Spring Web:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:330
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(value = \"/spring\", produces = MediaType.APPLICATION_JSON_VALUE)\n"
"@Tag(name = \"Spring Resource\", description = \"Basic Hello World using Spring\")\n"
"public class SpringGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:335
#, no-wrap
msgid ""
"    @GetMapping(\"/hello\")\n"
"    public Greeting helloSpring() {\n"
"        return new Greeting(\"Hello\", \"Spring\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:340
#, no-wrap
msgid ""
"    @PostMapping(\"/hello\")\n"
"    public Greeting newHelloSpring(@RequestBody Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:346
#, no-wrap
msgid ""
"    @DeleteMapping(\"/hello/{message}\")\n"
"    public void deleteHelloSpring(@PathVariable(name = \"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:350
msgid "The Spring annotations will be scanned and this will be added to your schema document:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:401
#, no-wrap
msgid ""
"/spring/hello:\n"
"    get:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: helloSpring\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: newHelloSpring\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /spring/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: deleteHelloSpring\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:405
msgid "See https://quarkus.io/guides/spring-web[quarkus.io/guides/spring-web] for more information."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:406
#, no-wrap
msgid "Vert.x Reactive Routes"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:410
msgid "In Quarkus, you can also build Vert.x endpoints using Reactive Routes. Similarly to Spring Web, your endpoints will be available in the OpenAPI Schema and can be further described using MicroProfile OpenAPI. To add a Vert.x Reactive Route in Quarkus, you need the following in your `pom.xml`:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:418
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vertx-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:422
msgid "Now you can create the endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:430
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@RouteBase(path = \"/vertx\", produces = \"application/json\")\n"
"@Tag(name = \"Vert.x Resource\", description = \"Basic Hello World using Vert.x\")\n"
"public class VertxGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:435
#, no-wrap
msgid ""
"    @Route(path = \"/hello\", methods = HttpMethod.GET)\n"
"    public Greeting helloVertX() {\n"
"        return new Greeting(\"Hello\", \"Vert.x\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:440
#, no-wrap
msgid ""
"    @Route(path = \"/hello\", methods = HttpMethod.POST)\n"
"    public Greeting newHelloVertX(@Body Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:446
#, no-wrap
msgid ""
"    @Route(path = \"/hello/:message\", methods = HttpMethod.DELETE)\n"
"    public void deleteHelloVertX(@Param(\"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:450
msgid "and now your Vert.x Routes are available in OpenAPI:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:501
#, no-wrap
msgid ""
"/vertx/hello:\n"
"    get:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: helloVertX\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: newHelloVertX\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /vertx/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: deleteHelloVertX\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:505
msgid "See https://quarkus.io/guides/reactive-routes[quarkus.io/guides/reactive-routes] for more information."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:506
#, no-wrap
msgid "Endpoints generated with Panache"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:510
msgid "In Quarkus your can generate your JAX-RS endpoint using Panache. These generated classes will also be scanned and added to the OpenAPI schema document if you have the `quarkus-smallrye-openapi` extension in your `pom.xml`."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:512
msgid "See https://quarkus.io/guides/rest-data-panache[quarkus.io/guides/rest-data-panache] for more information."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:513
#, no-wrap
msgid "Any other Web Framework"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:517
msgid "You can also add any other endpoint to your document by providing that part of the Schema document in a `yaml` file. Let's say for instance you have a Servlet that exposes some methods and you want to add those to the schema document. Servlet is just an example, any web framework can work here."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:519
msgid "So first we add this to the `pom.xml` to add Servlet support in Quarkus:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:527
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-undertow</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:531
msgid "We can now create a Servlet Endpoint like this for example:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:537
#, no-wrap
msgid ""
"@WebServlet(\"/other/hello/*\")\n"
"public class ServletGreeting extends HttpServlet {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:539
#, no-wrap
msgid "    private static final Jsonb JSONB = JsonbBuilder.create();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:547
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doGet(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {\n"
"        response.setContentType(\"application/json\");\n"
"        Greeting greeting = new Greeting(\"Hello\", \"Other\");\n"
"        PrintWriter out = response.getWriter();\n"
"        out.print(JSONB.toJson(greeting));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:555
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n"
"        response.setContentType(\"application/json\");\n"
"        Greeting greeting = JSONB.fromJson(request.getInputStream(), Greeting.class);\n"
"        PrintWriter out = response.getWriter();\n"
"        out.print(JSONB.toJson(greeting));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:561
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doDelete(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:565
msgid "Now we need a OpenAPI Schema document that maps to these endpoints. You need to add this to a file called `openapi.yml` in `src/main/resources/META-INF`:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:617
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"tags:\n"
"- name: Other Resource\n"
"  description: Basic Hello World using Something else\n"
"paths:\n"
"  /other/hello:\n"
"    get:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: helloOther\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: newHelloOther\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /other/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: deleteHelloOther\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:621
msgid "This will be merged with the rest of the endpoints to expose all paths in your document. So in the end your `/openapi` output will look like this:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:825
#, no-wrap
msgid ""
"openapi: 3.0.2\n"
"info:\n"
"  title: OpenAPI for Everyone (development)\n"
"  description: Example on how to use OpenAPI everywhere\n"
"  contact:\n"
"    name: Phillip Kruger\n"
"    url: https://www.phillip-kruger.com\n"
"    email: phillip.kruger@redhat.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: http://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.0\n"
"tags:\n"
"- name: Other Resource\n"
"  description: Basic Hello World using Something else\n"
"- name: Spring Resource\n"
"  description: Basic Hello World using Spring\n"
"- name: JAX-RS Resource\n"
"  description: Basic Hello World using JAX-RS\n"
"- name: Vert.x Resource\n"
"  description: Basic Hello World using Vert.x\n"
"paths:\n"
"  /other/hello:\n"
"    get:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: helloOther\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: newHelloOther\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /other/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: deleteHelloOther\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /jax-rs/hello:\n"
"    get:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: helloJaxRs\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: newHelloJaxRs\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: deleteHelloJaxRs\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /spring/hello:\n"
"    get:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: helloSpring\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: newHelloSpring\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /spring/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: deleteHelloSpring\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /vertx/hello:\n"
"    get:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: helloVertX\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: newHelloVertX\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /vertx/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: deleteHelloVertX\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
"        to:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:829
msgid "This contains resources from JAX-RS, Spring Web, Vert.x Reactive Routes and Servlet."
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:830
#, no-wrap
msgid "Swagger UI"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:834
msgid "In Quarkus, Swagger UI is included by default and when you now browse to http://localhost:8080/swagger-ui[localhost:8080/swagger-ui] you will see the UI with all your endpoints:"
msgstr ""

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:835
#, no-wrap
msgid "swagger-ui"
msgstr ""

#. type: Target for macro image
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:835
#, no-wrap
msgid "swagger-ui.png"
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:837
#, no-wrap
msgid "Summary"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:841
msgid "In this post we looked at how Quarkus extends the MicroProfile OpenAPI specification to make it even easier to document your Endpoints. We also looked at how you can document any web framework using it."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:843
msgid "If you find any issues or have any suggestions, head over to the https://github.com/smallrye/smallrye-open-api[SmallRye OpenAPI] project and let's discuss it there."
msgstr ""
