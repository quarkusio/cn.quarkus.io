# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "MicroProfile OpenAPI for everyone"
msgstr "为每个人提供的MicroProfile OpenAPI"

#. type: YAML Front Matter: synopsis
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Exploring some SmallRye OpenAPI features"
msgstr "探索SmallRye OpenAPI的一些功能"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] is primarily used for adding https://swagger.io/specification/[OpenAPI]\n"
"to https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS] Endpoints. In this blog post we will look at how the\n"
"https://github.com/smallrye/smallrye-open-api[SmallRye Implementation] extends this with some extra features, and support for more web frameworks, when used in Quarkus."
msgstr "link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] 主要用于向 link:https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS] 端点添加 link:https://swagger.io/specification/[OpenAPI] 。在这篇博文中，我们将介绍 link:https://github.com/smallrye/smallrye-open-api[SmallRye 实现] 如何在 Quarkus 中使用时，通过一些额外的功能来扩展 OpenAPI，并支持更多的网络框架。"

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Using Quarkus"
msgstr "使用Quarkus"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"The example code is available https://github.com/phillip-kruger/openapi-example[here]. You can also initialize a project\n"
"using https://code.quarkus.io/[code.quarkus.io] - just make sure to include the SmallRye OpenAPI Extension."
msgstr "示例代码可在 link:https://github.com/phillip-kruger/openapi-example[此处] 获取。你也可以使用 link:https://code.quarkus.io/[code.quarkus.io] 初始化一个项目，只需确保包含 SmallRye OpenAPI 扩展。"

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"Let's start with a basic JAX-RS Example in Quarkus. We have a `Greeting` Object, that has a `message` and a `to` field,\n"
"and we will create `GET`, `POST` and `DELETE` endpoints for the greeting."
msgstr "让我们从 Quarkus 中的一个基本 JAX-RS 示例开始。我们有一个 `Greeting` 对象，其中有 `message` 和 `to` 字段，我们将为问候语创建 `GET` 、 `POST` 和 `DELETE` 端点。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Apart from the usual Quarkus setup, you also need the following in your `pom.xml` to create a JAX-RS Endpoint:"
msgstr "除了通常的Quarkus设置外，你还需要在你的 `pom.xml` ，以创建一个JAX-RS端点。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "In Quarkus you do not need an `Application` class, we can just add the Endpoint class:"
msgstr "在Quarkus中，你不需要一个 `Application` 类，我们可以直接添加Endpoint类。"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"So far we have not yet added any MicroProfile OpenAPI Annotations, but because we added the `quarkus-smallrye-openapi` extension,\n"
"we will already have a Schema document generated under `/openapi`:"
msgstr "到目前为止，我们还没有添加任何 MicroProfile OpenAPI 注释，但由于我们添加了 `quarkus-smallrye-openapi` 扩展，我们已经在 `/openapi` 下生成了一个模式文档："

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "See https://quarkus.io/guides/rest-json[quarkus.io/guides/rest-json] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/rest-json[quarkus.io/guides/rest-json] 。"

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "OpenAPI"
msgstr "开放API"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "You can add more information to the generated schema document by using MicroProfile OpenAPI."
msgstr "你可以通过使用MicroProfile OpenAPI向生成的模式文件添加更多信息。"

#. type: Title ===
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Header information using config"
msgstr "使用配置的标头信息"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"One feature that we added to SmallRye is the ability to add header information, that you typically\n"
"add to the `Application` class using annotations, with MicroProfile config. This is useful in Quarkus where you\n"
"do not need an `Application` class. So adding the following to the `application.properties` will give you some header information:"
msgstr "我们为 SmallRye 添加了一项功能，即通过 MicroProfile 配置添加头信息（通常使用注释添加到 `Application` 类）。这在不需要 `Application` 类的 Quarkus 中非常有用。因此，在 `application.properties` 中添加以下内容就可以获得一些头信息："

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Now look at the header of the generated schema document under `/openapi`:"
msgstr "现在看一下生成的模式文件的标题，在 `/openapi` 。"

#. type: Title ===
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Adding some OpenAPI Annotations to your operations"
msgstr "在你的操作中添加一些OpenAPI注解"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "You can use any of the annotations in MicroProfile OpenAPI to further describe your endpoint, for example the `Tag` annotation:"
msgstr "你可以使用MicroProfile OpenAPI中的任何注释来进一步描述你的端点，例如 `Tag` 注释。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Example usage of MicroProfile OpenAPI annotation."
msgstr "MicroProfile OpenAPI注释的使用实例。"

#. type: Title ===
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Auto generate the operation id"
msgstr "自动生成操作ID"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"Some tools that use the schema document to generate client stubs, need an `operationId` in the schema document that is used to name the client stub methods.\n"
"We added support in SmallRye to auto generate this using either the method name (`METHOD`), class and method name (`CLASS_METHOD`), or package, class and method name (`PACKAGE_CLASS_METHOD`).\n"
"To do this add the following to `application.properties`:"
msgstr "一些使用模式文档生成客户端存根的工具，需要在模式文档中提供用于命名客户端存根方法的 `operationId` 。我们在 SmallRye 中添加了支持，可以使用方法名称 ( `METHOD` )、类和方法名称 ( `CLASS_METHOD` ) 或包、类和方法名称 ( `PACKAGE_CLASS_METHOD` ) 自动生成。为此，请在 `application.properties` 中添加以下内容："

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "You will now see the `operationId` in the schema document for every operation:"
msgstr "现在，你将在模式文件中看到每个操作的 `operationId` 。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Auto generated `operationId`"
msgstr "自动生成 `operationId` "

#. type: Title ===
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Changing the OpenAPI version"
msgstr "改变OpenAPI的版本"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"Some API gateways might require a certain OpenAPI version to work. The schema document generated by the SmallRye extension\n"
"will generate with `3.0.3` as the version, but since there is only minor differences between these versions, you can change that to\n"
"`3.0.0`, `3.0.1` or `3.0.2`. You can do this by adding this in `application.properties`:"
msgstr "某些 API 网关可能需要特定的 OpenAPI 版本才能工作。SmallRye 扩展生成的模式文档将以 `3.0.3` 作为版本，但由于这些版本之间只有细微差别，您可以将其更改为 `3.0.0` 、 `3.0.1` 或 `3.0.2` 。您可以在 `application.properties` 中添加以下内容："

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Now the version generated will be:"
msgstr "现在生成的版本将是。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "See https://quarkus.io/guides/openapi-swaggerui[quarkus.io/guides/openapi-swaggerui] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/openapi-swaggerui[quarkus.io/guides/openapi-swaggerui] 。"

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Spring Web"
msgstr "春天的网络"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"Recently support for Spring Web has been added in SmallRye OpenAPI, this means that, not only will\n"
"you see the default OpenAPI document when you use Spring Web in Quarkus, but you can also use MicroProfile OpenAPI to\n"
"further describe your Spring Web endpoints."
msgstr "最近，SmallRye OpenAPI 增加了对 Spring Web 的支持，这意味着在 Quarkus 中使用 Spring Web 时，不仅可以看到默认的 OpenAPI 文档，还可以使用 MicroProfile OpenAPI 进一步描述 Spring Web 端点。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Let's add a Spring Rest Controller to our current application. First add this in your `pom.xml`:"
msgstr "让我们为我们当前的应用程序添加一个Spring Rest控制器。首先在你的 `pom.xml` 中添加这个。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Now you can create a similar endpoint to the JAX-RS one we have looked at so far, but using Spring Web:"
msgstr "现在你可以创建一个类似于我们到目前为止所看到的JAX-RS的端点，但使用Spring Web。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "The Spring annotations will be scanned and this will be added to your schema document:"
msgstr "春季注释将被扫描，这将被添加到你的模式文件中。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "See https://quarkus.io/guides/spring-web[quarkus.io/guides/spring-web] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/spring-web[quarkus.io/guides/spring-web] 。"

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Vert.x Reactive Routes"
msgstr "Vert.x 反应式路由"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"In Quarkus, you can also build Vert.x endpoints using Reactive Routes. Similarly to Spring Web, your endpoints will be available in the OpenAPI Schema\n"
"and can be further described using MicroProfile OpenAPI. To add a Vert.x Reactive Route in Quarkus, you need the following in your `pom.xml`:"
msgstr "在 Quarkus 中，您还可以使用 Reactive Routes 构建 Vert.x 端点。与 Spring Web 类似，您的端点将在 OpenAPI 模式中可用，并可使用 MicroProfile OpenAPI 进行进一步描述。要在 Quarkus 中添加 Vert.x Reactive Route，您需要在 `pom.xml` 中提供以下内容："

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Now you can create the endpoint:"
msgstr "现在你可以创建端点了。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "and now your Vert.x Routes are available in OpenAPI:"
msgstr "现在你的Vert.x路由可以在OpenAPI中使用。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "See https://quarkus.io/guides/reactive-routes[quarkus.io/guides/reactive-routes] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/reactive-routes[quarkus.io/guides/reactive-routes] 。"

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Endpoints generated with Panache"
msgstr "用Panache生成的端点"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"In Quarkus your can generate your JAX-RS endpoint using Panache. These generated classes will also be scanned and added to the\n"
"OpenAPI schema document if you have the `quarkus-smallrye-openapi` extension in your `pom.xml`."
msgstr "在 Quarkus 中，你可以使用 Panache 生成 JAX-RS 端点。如果您的 `pom.xml` 中有 `quarkus-smallrye-openapi` 扩展，这些生成的类也会被扫描并添加到 OpenAPI 模式文档中。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "See https://quarkus.io/guides/rest-data-panache[quarkus.io/guides/rest-data-panache] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/rest-data-panache[quarkus.io/guides/rest-data-panache] 。"

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Any other Web Framework"
msgstr "任何其他网络框架"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"You can also add any other endpoint to your document by providing that part of the Schema document in a `yaml` file. Let's say for instance you\n"
"have a Servlet that exposes some methods and you want to add those to the schema document. Servlet is just an example, any web framework can work here."
msgstr "您还可以通过在 `yaml` 文件中提供模式文档的相关部分，在文档中添加任何其他端点。比如说，您有一个 Servlet，它公开了一些方法，您想把这些方法添加到模式文档中。Servlet 只是一个例子，任何网络框架都可以。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "So first we add this to the `pom.xml` to add Servlet support in Quarkus:"
msgstr "所以首先我们把这个添加到 `pom.xml` ，在Quarkus中添加Servlet支持。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "We can now create a Servlet Endpoint like this for example:"
msgstr "我们现在可以创建一个Servlet端点，比如说这样。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "Now we need a OpenAPI Schema document that maps to these endpoints. You need to add this to a file called `openapi.yml` in `src/main/resources/META-INF`:"
msgstr "现在我们需要一个OpenAPI模式文件，以映射到这些端点。你需要将其添加到 `src/main/resources/META-INF` 中一个名为 `openapi.yml` 的文件中。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "This will be merged with the rest of the endpoints to expose all paths in your document. So in the end your `/openapi` output will look like this:"
msgstr "这将与其他端点合并，以暴露你的文件中的所有路径。因此，最终你的 `/openapi` 输出将看起来像这样。"

#. type: Plain text
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid "This contains resources from JAX-RS, Spring Web, Vert.x Reactive Routes and Servlet."
msgstr "这包含了JAX-RS、Spring Web、Vert.x Reactive Routes和Servlet的资源。"

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Swagger UI"
msgstr "Swagger UI"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"In Quarkus, Swagger UI is included by default and when you now browse to http://localhost:8080/swagger-ui[localhost:8080/swagger-ui]\n"
"you will see the UI with all your endpoints:"
msgstr "在 Quarkus 中，Swagger UI 默认已包含在内，现在浏览 link:http://localhost:8080/swagger-ui[localhost:8080/swagger-ui] 就能看到包含所有端点的 UI："

#. type: Title ==
#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "摘要"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"In this post we looked at how Quarkus extends the MicroProfile OpenAPI specification to make it even easier to document your Endpoints. We also looked at\n"
"how you can document any web framework using it."
msgstr "在这篇文章中，我们介绍了 Quarkus 如何扩展 MicroProfile OpenAPI 规范，从而使端点文档化变得更加容易。我们还了解了如何使用它来记录任何网络框架。"

#: _posts/2020-08-19-openapi-for-everyone.adoc
#, fuzzy
msgid ""
"If you find any issues or have any suggestions, head over to the https://github.com/smallrye/smallrye-open-api[SmallRye OpenAPI] project and\n"
"let's discuss it there."
msgstr "如果您发现任何问题或有任何建议，请访问 link:https://github.com/smallrye/smallrye-open-api[SmallRye OpenAPI] 项目，让我们在那里进行讨论。"
