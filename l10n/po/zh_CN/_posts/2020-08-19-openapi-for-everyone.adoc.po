# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "phillipkruger"
msgstr "phillipkruger"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "2020-08-19"
msgstr "2020-08-19"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "职位"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "Exploring some SmallRye OpenAPI features"
msgstr "探索SmallRye OpenAPI的一些功能"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#, fuzzy, no-wrap
msgid "extension openapi"
msgstr "extension openapi"

#. type: Title =
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:1
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:11
#, fuzzy, no-wrap
msgid "MicroProfile OpenAPI for everyone"
msgstr "为每个人提供的MicroProfile OpenAPI"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:16
#, fuzzy
msgid "https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] is primarily used for adding https://swagger.io/specification/[OpenAPI] to https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS] Endpoints. In this blog post we will look at how the https://github.com/smallrye/smallrye-open-api[SmallRye Implementation] extends this with some extra features, and support for more web frameworks, when used in Quarkus."
msgstr "link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] 主要用于向 link:https://projects.eclipse.org/projects/ee4j.jaxrs[JAX-RS] 端点添加 link:https://swagger.io/specification/[OpenAPI] 。在这篇博文中，我们将看看 link:https://github.com/smallrye/smallrye-open-api[SmallRye实现] 如何在Quarkus中使用时，通过一些额外的功能来扩展它，并支持更多的Web框架。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:17
#, fuzzy, no-wrap
msgid "Using Quarkus"
msgstr "使用Quarkus"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:21
#, fuzzy
msgid "The example code is available https://github.com/phillip-kruger/openapi-example[here]. You can also initialize a project using https://code.quarkus.io/[code.quarkus.io] - just make sure to include the SmallRye OpenAPI Extension."
msgstr "示例代码可 link:https://github.com/phillip-kruger/openapi-example[在此] 获得。你也可以使用 link:https://code.quarkus.io/[code.quarkus.io] 初始化一个项目--只要确保包括SmallRye OpenAPI扩展。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:22
#, fuzzy, no-wrap
msgid "JAX-RS"
msgstr "JAX-RS"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:26
#, fuzzy
msgid "Let's start with a basic JAX-RS Example in Quarkus. We have a `Greeting` Object, that has a `message` and a `to` field, and we will create `GET`, `POST` and `DELETE` endpoints for the greeting."
msgstr "让我们从Quarkus中一个基本的JAX-RS例子开始。我们有一个 `Greeting` 对象，它有一个 `message` 和一个 `to` 字段，我们将为问候语创建 `GET` , `POST` 和 `DELETE` 端点。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:28
#, fuzzy
msgid "Apart from the usual Quarkus setup, you also need the following in your `pom.xml` to create a JAX-RS Endpoint:"
msgstr "除了通常的Quarkus设置外，你还需要在你的 `pom.xml` ，以创建一个JAX-RS端点。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:36
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:41
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:46
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jsonb</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:50
#, fuzzy
msgid "In Quarkus you do not need an `Application` class, we can just add the Endpoint class:"
msgstr "在Quarkus中，你不需要一个 `Application` 类，我们可以直接添加Endpoint类。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:58
#, no-wrap
msgid ""
"@Path(\"/jax-rs\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"public class JaxRsGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:64
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/hello\")\n"
"    public Greeting helloJaxRs() {\n"
"        return new Greeting(\"Hello\", \"JAX-RS\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:70
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/hello\")\n"
"    public Greeting newHelloJaxRs(Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:76
#, no-wrap
msgid ""
"    @DELETE\n"
"    @Path(\"/hello/{message}\")\n"
"    public void deleteHelloJaxRs(@PathParam(\"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:78
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:83
#, fuzzy
msgid "So far we have not yet added any MicroProfile OpenAPI Annotations, but because we added the `quarkus-smallrye-openapi` extension, we will already have a Schema document generated under `/openapi`:"
msgstr "到目前为止，我们还没有添加任何MicroProfile OpenAPI注释，但由于我们添加了 `quarkus-smallrye-openapi` ，我们将已经有一个在 `/openapi` 下生成的模式文件。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:87
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:171
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:225
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:294
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:354
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:454
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:569
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:625
#, no-wrap
msgid "---\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:135
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /jax-rs/hello:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
"        to:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:139
#, fuzzy
msgid "See https://quarkus.io/guides/rest-json[quarkus.io/guides/rest-json] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/rest-json[quarkus.io/guides/rest-json] 。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:140
#, fuzzy, no-wrap
msgid "OpenAPI"
msgstr "开放API"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:143
#, fuzzy
msgid "You can add more information to the generated schema document by using MicroProfile OpenAPI."
msgstr "你可以通过使用MicroProfile OpenAPI向生成的模式文件添加更多信息。"

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:144
#, fuzzy, no-wrap
msgid "Header information using config"
msgstr "使用配置的标头信息"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:149
#, fuzzy
msgid "One feature that we added to SmallRye is the ability to add header information, that you typically add to the `Application` class using annotations, with MicroProfile config. This is useful in Quarkus where you do not need an `Application` class. So adding the following to the `application.properties` will give you some header information:"
msgstr "我们为SmallRye添加的一个功能是添加头信息的能力，你通常使用注解将这些信息添加到 `Application` 类中，并使用MicroProfile配置。这在Quarkus中很有用，因为你不需要 `Application` 。因此，在 `application.properties` 中添加以下内容将给你一些头信息。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:163
#, no-wrap
msgid ""
"mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone\n"
"%dev.mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone (development)\n"
"%test.mp.openapi.extensions.smallrye.info.title=OpenAPI for Everyone (test)\n"
"mp.openapi.extensions.smallrye.info.version=1.0.0\n"
"mp.openapi.extensions.smallrye.info.description=Example on how to use OpenAPI everywhere\n"
"mp.openapi.extensions.smallrye.info.contact.email=phillip.kruger@redhat.com\n"
"mp.openapi.extensions.smallrye.info.contact.name=Phillip Kruger\n"
"mp.openapi.extensions.smallrye.info.contact.url=https://www.phillip-kruger.com\n"
"mp.openapi.extensions.smallrye.info.license.name=Apache 2.0\n"
"mp.openapi.extensions.smallrye.info.license.url=http://www.apache.org/licenses/LICENSE-2.0.html\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:167
#, fuzzy
msgid "Now look at the header of the generated schema document under `/openapi`:"
msgstr "现在看一下生成的模式文件的标题，在 `/openapi` 。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:184
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"info:\n"
"  title: OpenAPI for Everyone (development)\n"
"  description: Example on how to use OpenAPI everywhere\n"
"  contact:\n"
"    name: Phillip Kruger\n"
"    url: https://www.phillip-kruger.com\n"
"    email: phillip.kruger@redhat.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: http://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.0\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:186
#, no-wrap
msgid "# Rest of the schema document...\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:189
#, fuzzy, no-wrap
msgid "Adding some OpenAPI Annotations to your operations"
msgstr "在你的操作中添加一些OpenAPI注解"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:192
#, fuzzy
msgid "You can use any of the annotations in MicroProfile OpenAPI to further describe your endpoint, for example the `Tag` annotation:"
msgstr "你可以使用MicroProfile OpenAPI中的任何注释来进一步描述你的端点，例如 `Tag` 注释。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:203
#, no-wrap
msgid ""
"@Path(\"/jax-rs\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"@Consumes(MediaType.APPLICATION_JSON)\n"
"@Tag(name = \"JAX-RS Resource\", description = \"Basic Hello World using JAX-RS\") // <1>\n"
"public class JaxRsGreeting {\n"
"    //...\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:206
#, fuzzy
msgid "Example usage of MicroProfile OpenAPI annotation."
msgstr "MicroProfile OpenAPI注释的使用实例。"

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:207
#, fuzzy, no-wrap
msgid "Auto generate the operation id"
msgstr "自动生成操作ID"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:212
#, fuzzy
msgid "Some tools that use the schema document to generate client stubs, need an `operationId` in the schema document that is used to name the client stub methods.  We added support in SmallRye to auto generate this using either the method name (`METHOD`), class and method name (`CLASS_METHOD`), or package, class and method name (`PACKAGE_CLASS_METHOD`).  To do this add the following to `application.properties`:"
msgstr "一些使用模式文档来生成客户端存根的工具，需要在模式文档中设置一个 `operationId` ，用来命名客户端存根方法。我们在SmallRye中添加了支持，以使用方法名（ `METHOD` ）、类和方法名（ `CLASS_METHOD` ）或包、类和方法名（ `PACKAGE_CLASS_METHOD` ）自动生成。要做到这一点，请将以下内容添加到 `application.properties` 。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:217
#, no-wrap
msgid "mp.openapi.extensions.smallrye.operationIdStrategy=METHOD\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:221
#, fuzzy
msgid "You will now see the `operationId` in the schema document for every operation:"
msgstr "现在，你将在模式文件中看到每个操作的 `operationId` 。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:227
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:356
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:456
msgid "openapi: 3.0.3"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:229
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:358
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:458
msgid "# Header omitted..."
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:272
#, no-wrap
msgid ""
"/jax-rs/hello:\n"
"    get:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: helloJaxRs // <1>\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: newHelloJaxRs // <1>\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: deleteHelloJaxRs // <1>\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:275
#, fuzzy
msgid "Auto generated `operationId`"
msgstr "自动生成 `operationId` "

#. type: Title ===
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:276
#, fuzzy, no-wrap
msgid "Changing the OpenAPI version"
msgstr "改变OpenAPI的版本"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:281
#, fuzzy
msgid "Some API gateways might require a certain OpenAPI version to work. The schema document generated by the SmallRye extension will generate with `3.0.3` as the version, but since there is only minor differences between these versions, you can change that to `3.0.0`, `3.0.1` or `3.0.2`. You can do this by adding this in `application.properties`:"
msgstr "一些API网关可能需要某种OpenAPI版本才能工作。SmallRye扩展生成的模式文档将以 `3.0.3` 作为版本，但由于这些版本之间只有微小的差异，你可以将其改为 `3.0.0` 、 `3.0.1` 或 `3.0.2` 。你可以通过在 `application.properties` 中添加这个来实现。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:286
#, no-wrap
msgid "mp.openapi.extensions.smallrye.openapi=3.0.2\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:290
#, fuzzy
msgid "Now the version generated will be:"
msgstr "现在生成的版本将是。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:296
msgid "openapi: 3.0.2"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:298
msgid "# Rest of the document..."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:302
#, fuzzy
msgid "See https://quarkus.io/guides/openapi-swaggerui[quarkus.io/guides/openapi-swaggerui] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/openapi-swaggerui[quarkus.io/guides/openapi-swaggerui] 。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:303
#, fuzzy, no-wrap
msgid "Spring Web"
msgstr "春天的网络"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:308
#, fuzzy
msgid "Recently support for Spring Web has been added in SmallRye OpenAPI, this means that, not only will you see the default OpenAPI document when you use Spring Web in Quarkus, but you can also use MicroProfile OpenAPI to further describe your Spring Web endpoints."
msgstr "最近，SmallRye OpenAPI中增加了对Spring Web的支持，这意味着，当你在Quarkus中使用Spring Web时，不仅可以看到默认的OpenAPI文档，而且还可以使用MicroProfile OpenAPI来进一步描述你的Spring Web端点。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:310
#, fuzzy
msgid "Let's add a Spring Rest Controller to our current application. First add this in your `pom.xml`:"
msgstr "让我们为我们当前的应用程序添加一个Spring Rest控制器。首先在你的 `pom.xml` 中添加这个。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:318
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:322
#, fuzzy
msgid "Now you can create a similar endpoint to the JAX-RS one we have looked at so far, but using Spring Web:"
msgstr "现在你可以创建一个类似于我们到目前为止所看到的JAX-RS的端点，但使用Spring Web。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:330
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(value = \"/spring\", produces = MediaType.APPLICATION_JSON_VALUE)\n"
"@Tag(name = \"Spring Resource\", description = \"Basic Hello World using Spring\")\n"
"public class SpringGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:335
#, no-wrap
msgid ""
"    @GetMapping(\"/hello\")\n"
"    public Greeting helloSpring() {\n"
"        return new Greeting(\"Hello\", \"Spring\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:340
#, no-wrap
msgid ""
"    @PostMapping(\"/hello\")\n"
"    public Greeting newHelloSpring(@RequestBody Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:346
#, no-wrap
msgid ""
"    @DeleteMapping(\"/hello/{message}\")\n"
"    public void deleteHelloSpring(@PathVariable(name = \"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:350
#, fuzzy
msgid "The Spring annotations will be scanned and this will be added to your schema document:"
msgstr "春季注释将被扫描，这将被添加到你的模式文件中。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:401
#, no-wrap
msgid ""
"/spring/hello:\n"
"    get:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: helloSpring\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: newHelloSpring\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /spring/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: deleteHelloSpring\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:405
#, fuzzy
msgid "See https://quarkus.io/guides/spring-web[quarkus.io/guides/spring-web] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/spring-web[quarkus.io/guides/spring-web] 。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:406
#, fuzzy, no-wrap
msgid "Vert.x Reactive Routes"
msgstr "Vert.x 反应式路由"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:410
#, fuzzy
msgid "In Quarkus, you can also build Vert.x endpoints using Reactive Routes. Similarly to Spring Web, your endpoints will be available in the OpenAPI Schema and can be further described using MicroProfile OpenAPI. To add a Vert.x Reactive Route in Quarkus, you need the following in your `pom.xml`:"
msgstr "在Quarkus中，你也可以使用Reactive Routes构建Vert.x端点。与Spring Web类似，你的端点将在OpenAPI模式中可用，并且可以使用MicroProfile OpenAPI进一步描述。要在Quarkus中添加Vert.x Reactive Route，你需要在你的 `pom.xml` :"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:418
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-vertx-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:422
#, fuzzy
msgid "Now you can create the endpoint:"
msgstr "现在你可以创建端点了。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:430
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"@RouteBase(path = \"/vertx\", produces = \"application/json\")\n"
"@Tag(name = \"Vert.x Resource\", description = \"Basic Hello World using Vert.x\")\n"
"public class VertxGreeting {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:435
#, no-wrap
msgid ""
"    @Route(path = \"/hello\", methods = HttpMethod.GET)\n"
"    public Greeting helloVertX() {\n"
"        return new Greeting(\"Hello\", \"Vert.x\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:440
#, no-wrap
msgid ""
"    @Route(path = \"/hello\", methods = HttpMethod.POST)\n"
"    public Greeting newHelloVertX(@Body Greeting greeting) {\n"
"        return greeting;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:446
#, no-wrap
msgid ""
"    @Route(path = \"/hello/:message\", methods = HttpMethod.DELETE)\n"
"    public void deleteHelloVertX(@Param(\"message\") String message) {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:450
#, fuzzy
msgid "and now your Vert.x Routes are available in OpenAPI:"
msgstr "现在你的Vert.x路由可以在OpenAPI中使用。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:501
#, no-wrap
msgid ""
"/vertx/hello:\n"
"    get:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: helloVertX\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: newHelloVertX\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /vertx/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: deleteHelloVertX\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:505
#, fuzzy
msgid "See https://quarkus.io/guides/reactive-routes[quarkus.io/guides/reactive-routes] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/reactive-routes[quarkus.io/guides/reactive-routes] 。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:506
#, fuzzy, no-wrap
msgid "Endpoints generated with Panache"
msgstr "用Panache生成的端点"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:510
#, fuzzy
msgid "In Quarkus your can generate your JAX-RS endpoint using Panache. These generated classes will also be scanned and added to the OpenAPI schema document if you have the `quarkus-smallrye-openapi` extension in your `pom.xml`."
msgstr "在Quarkus中你可以使用Panache生成你的JAX-RS端点。 `pom.xml` 如果你的 `quarkus-smallrye-openapi` 扩展，这些生成的类也将被扫描并添加到OpenAPI模式文档中。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:512
#, fuzzy
msgid "See https://quarkus.io/guides/rest-data-panache[quarkus.io/guides/rest-data-panache] for more information."
msgstr "更多信息见 link:https://quarkus.io/guides/rest-data-panache[quarkus.io/guides/rest-data-panache] 。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:513
#, fuzzy, no-wrap
msgid "Any other Web Framework"
msgstr "任何其他网络框架"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:517
#, fuzzy
msgid "You can also add any other endpoint to your document by providing that part of the Schema document in a `yaml` file. Let's say for instance you have a Servlet that exposes some methods and you want to add those to the schema document. Servlet is just an example, any web framework can work here."
msgstr "你也可以通过在 `yaml` 文件中提供模式文档的那一部分来向你的文档添加任何其他端点。比方说，你有一个Servlet，它暴露了一些方法，你想把这些方法添加到模式文件中。Servlet只是一个例子，任何Web框架都可以在这里工作。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:519
#, fuzzy
msgid "So first we add this to the `pom.xml` to add Servlet support in Quarkus:"
msgstr "所以首先我们把这个添加到 `pom.xml` ，在Quarkus中添加Servlet支持。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:527
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-undertow</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:531
#, fuzzy
msgid "We can now create a Servlet Endpoint like this for example:"
msgstr "我们现在可以创建一个Servlet端点，比如说这样。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:537
#, no-wrap
msgid ""
"@WebServlet(\"/other/hello/*\")\n"
"public class ServletGreeting extends HttpServlet {\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:539
#, no-wrap
msgid "    private static final Jsonb JSONB = JsonbBuilder.create();\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:547
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doGet(HttpServletRequest request, HttpServletResponse response)throws ServletException, IOException {\n"
"        response.setContentType(\"application/json\");\n"
"        Greeting greeting = new Greeting(\"Hello\", \"Other\");\n"
"        PrintWriter out = response.getWriter();\n"
"        out.print(JSONB.toJson(greeting));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:555
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n"
"        response.setContentType(\"application/json\");\n"
"        Greeting greeting = JSONB.fromJson(request.getInputStream(), Greeting.class);\n"
"        PrintWriter out = response.getWriter();\n"
"        out.print(JSONB.toJson(greeting));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:561
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doDelete(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {\n"
"        // Here do the delete...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:565
#, fuzzy
msgid "Now we need a OpenAPI Schema document that maps to these endpoints. You need to add this to a file called `openapi.yml` in `src/main/resources/META-INF`:"
msgstr "现在我们需要一个OpenAPI模式文件，以映射到这些端点。你需要将其添加到 `src/main/resources/META-INF` 中一个名为 `openapi.yml` 的文件中。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:617
#, no-wrap
msgid ""
"openapi: 3.0.3\n"
"tags:\n"
"- name: Other Resource\n"
"  description: Basic Hello World using Something else\n"
"paths:\n"
"  /other/hello:\n"
"    get:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: helloOther\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: newHelloOther\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /other/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: deleteHelloOther\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:621
#, fuzzy
msgid "This will be merged with the rest of the endpoints to expose all paths in your document. So in the end your `/openapi` output will look like this:"
msgstr "这将与其他端点合并，以暴露你的文件中的所有路径。因此，最终你的 `/openapi` 输出将看起来像这样。"

#. type: delimited block -
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:825
#, no-wrap
msgid ""
"openapi: 3.0.2\n"
"info:\n"
"  title: OpenAPI for Everyone (development)\n"
"  description: Example on how to use OpenAPI everywhere\n"
"  contact:\n"
"    name: Phillip Kruger\n"
"    url: https://www.phillip-kruger.com\n"
"    email: phillip.kruger@redhat.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: http://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.0\n"
"tags:\n"
"- name: Other Resource\n"
"  description: Basic Hello World using Something else\n"
"- name: Spring Resource\n"
"  description: Basic Hello World using Spring\n"
"- name: JAX-RS Resource\n"
"  description: Basic Hello World using JAX-RS\n"
"- name: Vert.x Resource\n"
"  description: Basic Hello World using Vert.x\n"
"paths:\n"
"  /other/hello:\n"
"    get:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: helloOther\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: newHelloOther\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /other/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Other Resource\n"
"      operationId: deleteHelloOther\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /jax-rs/hello:\n"
"    get:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: helloJaxRs\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: newHelloJaxRs\n"
"      requestBody:\n"
"        content:\n"
"          application/json:\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /jax-rs/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - JAX-RS Resource\n"
"      operationId: deleteHelloJaxRs\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /spring/hello:\n"
"    get:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: helloSpring\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: newHelloSpring\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /spring/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Spring Resource\n"
"      operationId: deleteHelloSpring\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"  /vertx/hello:\n"
"    get:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: helloVertX\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"    post:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: newHelloVertX\n"
"      requestBody:\n"
"        content:\n"
"          '_/_':\n"
"            schema:\n"
"              $ref: '#/components/schemas/Greeting'\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            application/json:\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"  /vertx/hello/{message}:\n"
"    delete:\n"
"      tags:\n"
"      - Vert.x Resource\n"
"      operationId: deleteHelloVertX\n"
"      parameters:\n"
"      - name: message\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"204\":\n"
"          description: No Content\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
"        to:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:829
#, fuzzy
msgid "This contains resources from JAX-RS, Spring Web, Vert.x Reactive Routes and Servlet."
msgstr "这包含了JAX-RS、Spring Web、Vert.x Reactive Routes和Servlet的资源。"

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:830
#, fuzzy, no-wrap
msgid "Swagger UI"
msgstr "Swagger UI"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:834
#, fuzzy
msgid "In Quarkus, Swagger UI is included by default and when you now browse to http://localhost:8080/swagger-ui[localhost:8080/swagger-ui] you will see the UI with all your endpoints:"
msgstr "在Quarkus中，Swagger UI是默认包含的，当你现在浏览到 link:http://localhost:8080/swagger-ui[localhost:8080/swagger-ui] 时，你会看到带有你所有端点的UI。"

#. type: Positional ($1) AttributeList argument for macro 'image'
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:835
#, fuzzy, no-wrap
msgid "swagger-ui"
msgstr "swagger-ui"

#. type: Target for macro image
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:835
#, no-wrap
msgid "swagger-ui.png"
msgstr ""

#. type: Title ==
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:837
#, fuzzy, no-wrap
msgid "Summary"
msgstr "摘要"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:841
#, fuzzy
msgid "In this post we looked at how Quarkus extends the MicroProfile OpenAPI specification to make it even easier to document your Endpoints. We also looked at how you can document any web framework using it."
msgstr "在这篇文章中，我们研究了Quarkus如何扩展MicroProfile OpenAPI规范，使其更容易记录你的Endpoints。我们还研究了如何使用它来记录任何网络框架。"

#. type: Plain text
#: upstream/_posts/2020-08-19-openapi-for-everyone.adoc:843
msgid "If you find any issues or have any suggestions, head over to the https://github.com/smallrye/smallrye-open-api[SmallRye OpenAPI] project and let's discuss it there."
msgstr ""
