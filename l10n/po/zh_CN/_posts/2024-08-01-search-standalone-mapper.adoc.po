msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Leveraging Hibernate Search capabilities in a Quarkus application without a database"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "This is the second post in the series that dives into the implementation details of the search.quarkus.io application. In this one we are going to discuss how we've leveraged Hibernate Search Standalone Mapper capabilities to index apriori unknown number of entities."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"This is the second post in the series diving into the implementation details of the\n"
"link:https://github.com/quarkusio/search.quarkus.io[application] backing the guide search of\n"
"link:https://quarkus.io/guides/[quarkus.io]."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Hibernate Search is mainly known for its link:{quarkus-hibernate-search-docs-url}[integration with Hibernate ORM],\n"
"where it can detect the entity changes made through ORM and reflect them in the search indexes. But there is more to\n"
"Hibernate Search than that."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Hibernate Search integration with Hibernate ORM"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Not all applications that require search capabilities rely on databases to provide the source for the search indexes.\n"
"Some applications rely on a NOSQL store where Hibernate ORM is not applicable, or even flat file storage.\n"
"What can be done in these scenarios?"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"That's where the link:{quarkus-hibernate-search-standalone-docs-url}[Hibernate Search Standalone mapper] can come in handy.\n"
"It was https://quarkus.io/blog/quarkus-3-10-0-released/[recently] included as one of the Quarkus core extensions.\n"
"This mapper allows domain entities to be annotated with Hibernate Search annotations and then uses\n"
"the Search DSL's power to perform search operations and more."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"With the release 3.10 of Quarkus, we've migrated our Quarkus application that backs the guides'\n"
"search of https://quarkus.io/guides/[quarkus.io/guides/] to the Standalone mapper and would like to share with you\n"
"how to use this mapper to index the data coming from files and without knowing the total number of\n"
"records to index.\n"
"Please refer to the link:{quarkus-hibernate-search-standalone-docs-url}[guide] for a more in depth review of how to configure and use the mapper."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Hibernate Search Standalone mapper"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Let's start by describing the task that this search application has to perform. The application's main goal is to\n"
"provide search capabilities over the documentation guides.\n"
"It obtains the required information about these guides from reading multiple files.\n"
"We want to read the data just once, start indexing as soon as we can, and keep only as many records in memory as strictly necessary.\n"
"We would also want to monitor the progress and report any exceptions that may occur during the indexing process.\n"
"Hence, we would want to create a finite stream of data that we would feed\n"
"to a link:{hibernate-search-docs-url}#indexing-massindexer-basics[mass indexer],\n"
"which will create the documents in the search index that we will later use to perform search operations."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Generally speaking, mass indexing can be as simple as:"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Inject `SearchMapping` somewhere in your app so that it can be used to access Hibernate Search capabilities."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Create a scope targeting the entities that we plan to reindex.\n"
"In this case, all indexed entities should be targeted; hence, the `Object.class` can be used to create the scope."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Create a mass indexer with the default configuration."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Start the indexing process. Starting the process returns a future; the indexing happens in the background."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"For Hibernate Search to perform this operation, we must tell it how to load the indexed entities.\n"
"We will use an `EntityLoadingBinder` to do that. It is a simple interface providing access to the binding context\n"
"where we can define selection-loading strategies (for search) and mass-loading strategies (for indexing).\n"
"Since, in our case, we are only interested in the mass indexer, it would be enough only to define the mass loading strategy:"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Implement the single `bind(..)` method of the `EntityLoadingBinder`."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Specify the mass loading strategy for the `Guide` search entity.\n"
"We'll discuss the implementation of the strategy later in this post."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "And then, with the entity loading binder defined, we can simply reference it within the `@SearchEntity` annotation:"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Reference the loading binder implementation by the type.\n"
"As with many other Hibernate Search components,\n"
"a CDI bean reference can be used here instead by providing the bean name,\n"
"for example, if the loading binder requires access to some CDI beans and is a CDI bean itself."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"That is all that is needed to tie things together.\n"
"The only open question is how to implement the mass loading strategy.\n"
"Let's first review how the mass indexer works on a high level:"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "High level mass indexer flow"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Implementing the mass loading strategy requires providing an identifier and entity loaders.\n"
"As already mentioned, in our case, we want a data stream that reads the information from files and does the reading part just once.\n"
"Hence, we want to avoid decoupling the id/entity reading steps.\n"
"While the identifier loader's contract suggests that it should provide the batch of identifiers to the sink,\n"
"nothing prevents us from passing a batch of actual entity instance instead.\n"
"It is acceptable to do in this case since we are only interested in the mass loading;\n"
"we are not implementing a selection loading strategy that would be used when searching.\n"
"Now, if the identifier loader provides actual entity instances, the entity loader has nothing more to do\n"
"than just pass through the batch of received \"identifiers\", which are actual entities, to the entity sink."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "With that in mind, the mass-loading strategy may be implemented as:"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"We'll look at the implementation of the identifier loader in the following code snippet as\n"
"it is slightly trickier than the pass-through entity loader.\n"
"Hence, we would want to take a closer look at it."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "An implementation of the pass-through entity loader."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "As explained above, we treat the search entities as identifiers and simply pass the entities we receive to the sink."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"If passing entities as identifiers feels like a hack, it's because it is.\n"
"Hibernate Search will, at some point, provide alternative APIs to achieve this more elegantly: link:https://hibernate.atlassian.net/browse/HSEARCH-5209[HSEARCH-5209]"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Since the guide search entities are constructed from the information read from a file,\n"
"we have to somehow pass the stream of these guides to the identifier loader.\n"
"We could do this by using the `MassLoadingOptions options`.\n"
"These mass loading options provide access to the context objects passed to the mass indexer by the user."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Inject `SearchMapping` somewhere in your application."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Create a scope, as usual."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Pass the context object to the mass indexer that knows how to read the files,\n"
"and is able to provide the batches of `Guide` search entities. See the following code snippet\n"
"for an example of how such context can be implemented."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Set any other mass indexer configuration options as needed."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Create a mass indexer."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Start the indexing process."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Get an iterator from the finite data stream of guides."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Read the next batch of the guides from the iterator. We are using the batch size limit\n"
"that we will retrieve from the mass-loading options\n"
"and checking the iterator to see if there are any more entities to pull."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Now, having the way of reading the entities in batches from the stream\n"
"and knowing how to pass it to the mass indexer, implementing the identifier loader\n"
"can be as easy as:"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Retrieve the guide loading context that is expected to be passed to the mass indexer.\n"
"(e.g. `.context(GuideLoadingContext.class, guideLoadingContext)`)"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"We do not know how many guides there will be until we finish reading all the files\n"
"and completing the indexing, so we'll just pass `0` here."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "The information is not critical: it's only used to monitor progress."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"This is one of the areas that we plan to improve;\n"
"see https://hibernate.atlassian.net/browse/HSEARCH-5180[one of the improvements we are currently working on]."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Request the next batch of guides. `options.batchSize()` will provide us with the value configured\n"
"for the current mass indexer."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"If the batch is empty, it means that the stream iterator has no more guides to return.\n"
"Hence, we can notify the mass indexing sink that no more items will be provided by calling `.complete()`."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "If there are any guides in the loaded batch, we'll pass them to the sink to be processed."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"To sum up, here is a summary of the steps to take to index an unknown number of search entities from a datasource\n"
"while reading each entity only once, and without relying on lookups by identifier:"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Start by creating a loader binder and let Hibernate Search know about it via the `@SearchEntity` annotation."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "Implement a mass loading strategy (`MassLoadingStrategy`) that includes:"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "An identifier loader that does all the heavy lifting and actually constructs entire entities."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "An entity loader that simply passes through the entities loaded by the identifier loader to the indexing sink."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Supply through the mass indexer context any helpful services, resources, helpers, etc., that are used to load the data.\n"
"And access them in the loaders through `options.context(..);`"
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid "With everything in place, run the mass indexing as usual."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"For a complete working example of this approach, check out the\n"
"link:https://github.com/quarkusio/search.quarkus.io[search.quarkus.io on GitHub]."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Please note that some of the features discussed in this post are still incubating\n"
"and may change in the future.\n"
"In particular, we've already identified and are working on possible link:https://hibernate.atlassian.net/browse/HSEARCH-5180[improvements]\n"
"for mass indexing of a finite data stream, where the total size of entities is unknown beforehand.\n"
"If you find the approach described in the post interesting\n"
"and have similar use cases, we encourage you to give it a try.\n"
"Feel free to reach out to us to discuss your ideas and suggestions for other improvements, if any."
msgstr ""

#: _posts/2024-08-01-search-standalone-mapper.adoc
msgid ""
"Stay tuned for more details in the coming weeks as we publish more blog posts\n"
"exploring other interesting implementation aspects of this application.\n"
"Happy searching and mass indexing!"
msgstr ""
