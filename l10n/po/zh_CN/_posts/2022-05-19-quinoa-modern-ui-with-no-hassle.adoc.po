# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-19 15:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy, no-wrap
msgid "Quinoa - A Quarkus extension to create Modern UI with no hassle"
msgstr "Quinoa - 一个Quarkus扩展，可以毫不费力地创建现代UI。"

#. type: YAML Front Matter: synopsis
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy, no-wrap
msgid "The Quinoa extension takes care of all the Web UI build/wiring/dev-mode hassles to let you focus of your Quarkus web application logic."
msgstr "Quinoa扩展处理了所有的Web UI构建/布线/开发模式的麻烦，让你专注于你的Quarkus Web应用逻辑。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Quinoa... To be honest I wasn't really a fan at first, but then my wife made them in a bowl like a salad with avocado and raw salmon. Now I really enjoy it with a touch of soy sauce. Let's not digress too much, I am not here to talk about healthy food in this post, this is about an extension to enjoy coding modern UI with Quarkus."
msgstr "藜麦......说实话，我一开始并不是很喜欢，但后来我妻子把它们做成碗状，像沙拉一样加牛油果和生鲑鱼。现在我真的很喜欢加点酱油。我们不要离题太远，我在这里不是要谈论健康的食物，这是关于用Quarkus享受编码的现代用户界面的延伸。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "This extension is not a Quarkus core extension, it is available as part of the Quarkiverse. Early feedback and contribution are requested to mature the idea."
msgstr "这个扩展不是Quarkus的核心扩展，它可以作为Quarkiverse的一部分。我们需要早期的反馈和贡献来使这个想法成熟。"

#. type: Title ==
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy, no-wrap
msgid "Get started"
msgstr "开始吧"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Create a new Quinoa project (with a base Quinoa starter code):"
msgstr "创建一个新的Quinoa项目（有一个基本的Quinoa启动代码）。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "With https://code.quarkus.io/?a=quinoa-bowl&j=17&e=io.quarkiverse.quinoa%3Aquarkus-quinoa[code.quarkus.io]"
msgstr "用 link:https://code.quarkus.io/?a=quinoa-bowl&j=17&e=io.quarkiverse.quinoa%3Aquarkus-quinoa[code.quarkus.io]"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "With the https://quarkus.io/guides/cli-tooling[Quarkus CLI]:"
msgstr "使用 link:https://quarkus.io/guides/cli-tooling[Quarkus CLI] 。"

#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "quarkus create app quinoa-app -x=io.quarkiverse.quinoa:quarkus-quinoa"
msgstr "quarkus create app quinoa-app -x=io.quarkiverse.quinoa:quarkus-quinoa"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Then start the live-coding *and navigate to http://0.0.0.0:8080/quinoa.html*:"
msgstr "然后开始实时编码 *，并导航到<a href=\"http://0.0.0.0:8080/quinoa.html\" class=\"bare\">http://0.0.0.0:8080/quinoa.html。</a>* "

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/#getting-started[Here] is the Quinoa guide to go deeper and configure your app with any Node based Web UI framework such as React, Angular, Lit, Webpack, Rollup, ..."
msgstr "link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/#getting-started[这里] 是Quinoa指南，可以深入了解和配置你的应用程序与任何基于Node的Web UI框架，如React、Angular、Lit、Webpack、Rollup等。"

#. type: Title ===
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy, no-wrap
msgid "A bit of context"
msgstr "一点背景"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Alongside Quarkus, interacting with web frameworks such as React and Angular is a natural need. Many users have been requesting a smooth integration since the early stages of Quarkus (https://github.com/quarkusio/quarkus/issues/588[#588]). This is why I created the Quinoa extension for Quarkus."
msgstr "伴随着Quarkus，与React和Angular等网络框架的互动是一个自然的需求。从Quarkus的早期阶段 link:https://github.com/quarkusio/quarkus/issues/588[（#588] ）开始，许多用户就一直要求进行平滑的整合。这就是为什么我为Quarkus创建了Quinoa扩展。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Since the creation of Quarkus (3 years ago), link:#existing-articles[many blog articles] have popped up to help in that matter, most of them taking advantage of the frontend-maven-plugin. As the creator of code.quarkus.io, I have also been confronted with this situation and I, like many others, have filled the gap using this plugin. It does the job for sure and has been good enough to fill the need for the time being. Unfortunately the overall process could be more streamlined and easier to get started with, it involves a lot of configuration, some tricky setup to copy the resources to the right place and test the frontend at the right moment. Live coding requires starting two processes and a proxy to make it work together."
msgstr "自Quarkus创建以来（3年前）， link:#existing-articles[许多博客文章] 涌现出来帮助解决这个问题，其中大部分都是利用frontend-maven-plugin的优势。作为code.quarkus.io的创建者，我也遇到过这种情况，我和其他许多人一样，用这个插件填补了这个空白。它的工作是肯定的，并且已经足够满足目前的需要。不幸的是，整个过程可以更精简，更容易上手，它涉及大量的配置，一些棘手的设置，将资源复制到正确的地方，并在正确的时刻测试前端。实时编码需要启动两个进程和一个代理来使其一起工作。"

#. type: Title ===
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy, no-wrap
msgid "Let's start cooking"
msgstr "让我们开始做饭"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "With this experience behind me, I was in a good position to contribute something to ease our lives a bit. I put an eye to all the needs, issues, propositions and blog articles and came up with a new extension to create healthy modern user-interfaces (UI) with Quarkus: Quinoa (standing for Quarkus UI with NO hAssle :)."
msgstr "有了这些经验，我就可以为缓解我们的生活做出一些贡献了。我关注所有的需求、问题、建议和博客文章，想出了一个新的扩展，用Quarkus创建健康的现代用户界面（UI）：Quinoa（代表Quarkus UI，没有hAssle:）。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Quinoa is taking care of hiding all the tasks around Web UI build/wiring/live-config to let you take care of your web application logic. Whether you create a full-stack Single Page Application or Microservice (micro-frontend); things are made easier for you."
msgstr "Quinoa负责隐藏所有围绕Web UI构建/布线/实时配置的任务，让你负责你的Web应用逻辑。无论你是创建一个全栈式的单页应用还是微服务（微前端），事情都会变得更简单。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Node.js has great tooling to create modern frontend web applications. Quarkus has a broad ecosystem to build reliable modern backends in the cloud (microservices, rest, DBs, events, cloud native…). Quinoa is the glue to get the best of both worlds."
msgstr "Node.js有很好的工具来创建现代的前端网络应用。Quarkus有一个广泛的生态系统，可以在云中建立可靠的现代后端（微服务、休息、数据库、事件、云原生...）。Quinoa是一种胶水，可以获得两个世界的精华。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "The only prerequisite for the NodeJS project to be compatible with Quinoa is to have a `build` script. It should produce static files in a specific directory (index.html, javascript, css, ...). Since teams can be different, to make everyone happy, it is possible to either have the web UI in the Quarkus project (default is `src/main/webui`) or outside (as long as it is available on the disk at build time)."
msgstr "NodeJS项目与Quinoa兼容的唯一先决条件是要有一个 `build` 脚本。它应该在特定的目录下产生静态文件（index.html，javascript，css，...）。由于团队可以是不同的，为了让每个人都满意，可以把Web UI放在Quarkus项目中（默认是 `src/main/webui` ），也可以放在外面（只要在构建时它在磁盘上可用）。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "It is not necessary (but possible) to https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/#package-manager[configure the package manager] (NPM, Yarn or PNPM), it will be auto-detected depending on the project lockfile."
msgstr "没有必要（但可以） link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/#package-manager[配置软件包管理器] （NPM、Yarn或PNPM），它将根据项目的锁定文件自动检测。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Quinoa will take care of the generated UI static files. During the Quarkus build, they will be bundled in the jar or native binary. At runtime, they will be served as efficiently as any other static resource in Quarkus. UI developers were also asking to enable Single Page App routing, it is now just a https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/#spa-routing[boolean configuration]."
msgstr "Quinoa将负责生成UI静态文件。在Quarkus构建过程中，它们将被捆绑在jar或本地二进制文件中。在运行时，它们将像Quarkus中的其他静态资源一样被有效地提供。UI开发者还要求启用单页应用程序的路由，现在它只是一个 link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/#spa-routing[布尔值配置] 。"

#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid ""
"Now, what about live coding? It’s a popular feature of Quarkus and most NodeJS UI frameworks already have such a mode.\n"
"Quinoa provides two options:"
msgstr "现在，实时编码如何？这是 Quarkus 的一个常用功能，大多数 NodeJS UI 框架都已经有了这种模式。Quinoa 提供了两个选项："

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Delegate to the UI live coding server. https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/#dev-server[You configure the port of the UI server]. By convention Quinoa will call the `start` script from the package.json to start the UI server process. Then it will transparently proxy relevant requests to the given port."
msgstr "委托给UI实时编码服务器。 link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/#dev-server[你配置了UI服务器的端口] 。按照惯例，Quinoa将调用package.json中的 `start` 脚本来启动UI服务器进程。然后它将透明地代理相关请求到给定的端口。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Quarkus watches the files and Quinoa triggers a new Web UI build on changes (you can configure different builds for dev and prod)."
msgstr "Quarkus观察文件，Quinoa在变化时触发新的Web UI构建（你可以为开发和生产配置不同的构建）。"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "Either way, when starting Quarkus dev-mode your Web UI will be served seamlessly (by default on http://0.0.0.0:8080). Both are viable options and allow you to live-code on both backend and frontend at the same time with close to no setup! Pretty awesome right?"
msgstr "无论哪种方式，当启动Quarkus开发模式时，你的Web用户界面将被无缝提供（默认为 http://0.0.0.0:8080 。这两种方式都是可行的，允许你在几乎没有设置的情况下同时在后台和前台进行实时编码。很棒吧？"

#. type: Title ==
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, no-wrap
msgid "Documentation"
msgstr "文档"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/"
msgstr " https://quarkiverse.github.io/quarkiverse-docs/quarkus-quinoa/dev/ "

#. type: Title ===
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy, no-wrap
msgid "Articles on modern UI development with Quarkus before Quinoa"
msgstr "在Quinoa之前使用Quarkus进行现代UI开发的文章"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "https://quarkus.io/blog/gui-react-patternfly/[Adding Eyecandy to your Quarkus App with React and Patternfly]"
msgstr "link:https://quarkus.io/blog/gui-react-patternfly/[用React和Patternnfly向你的Quarkus应用程序添加Eyecandy]"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "https://blog.marcnuri.com/react-quarkus-integration-using-maven[React + Quarkus integration using Maven]"
msgstr "link:https://blog.marcnuri.com/react-quarkus-integration-using-maven[使用Maven整合React + Quarkus]"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "https://sgitario.github.io/quarkus-app-with-react-and-keycloak/[Quarkus App with React frontend secured with Keycloak]"
msgstr "link:https://sgitario.github.io/quarkus-app-with-react-and-keycloak/[使用 Keycloak 保护带有 React 前端的 Quarkus 应用程序]"

#. type: Plain text
#: _posts/2022-05-19-quinoa-modern-ui-with-no-hassle.adoc
#, fuzzy
msgid "https://medium.com/quarkify/build-run-and-deploy-react-app-with-quarkus-6cc4f6074d6[Build, run and deploy React app with Quarkus]"
msgstr "link:https://medium.com/quarkify/build-run-and-deploy-react-app-with-quarkus-6cc4f6074d6[使用 Quarkus 构建、运行和部署 React 应用程序]"
