msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Getting Started with A2A Java SDK and gRPC"
msgstr "A2A Java SDK 和 gRPC 入门"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"Let's learn how to create an A2A server agent and an A2A client that can "
"communicate using the gRPC transport."
msgstr "让我们学习如何创建可使用 gRPC 传输进行通信的 A2A 服务器代理和 A2A 客户端。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The ability for AI agents to communicate across different frameworks and "
"languages is key to\n"
"building polyglot multi-agent systems. The recent https://quarkus.io/blog/"
"quarkus-a2a-java-0-3-0-alpha-release/[0.3.0.Alpha1] and https://quarkus.io/"
"blog/quarkus-a2a-java-0-3-0-beta-release/[0.3.0.Beta1] releases of the A2A "
"Java SDK take a\n"
"significant step forward in this area by adding support for the gRPC "
"transport and the HTTP+JSON/REST transport, offering greater flexibility and "
"improved performance."
msgstr ""
"人工智能代理跨不同框架和语言进行通信的能力是构建多语言多代理系统的关键。A2A Java SDK 最近发布的 link:https://quarkus."
"io/blog/quarkus-a2a-java-0-3-0-alpha-release/[0.3.0.Alpha1] 和 link:https://"
"quarkus.io/blog/quarkus-a2a-java-0-3-0-beta-release/[0.3.0.Beta1] "
"版本在这方面迈出了重要一步，增加了对 gRPC 传输和 HTTP+JSON/REST 传输的支持，提供了更大的灵活性和更高的性能。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"In this post, we'll demonstrate how to create an A2A server agent and an A2A "
"client that support\n"
"multiple transports, where the gRPC transport will be selected."
msgstr "在本文章中，我们将演示如何创建支持多种传输的 A2A 服务器代理和 A2A 客户端，其中将选择 gRPC 传输。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Dice Agent Sample"
msgstr "骰子代理样本"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"To see the multi-transport support in action, we're going to take a look at "
"the new\n"
"https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport[Dice Agent]\n"
"sample from the https://github.com/a2aproject/a2a-samples[a2a-samples] repo."
msgstr ""
"为了解多传输支持的实际效果，我们将从 link:https://github.com/a2aproject/a2a-samples[a2a-"
"samples] 软件仓库中查看新的 link:https://github.com/a2aproject/a2a-samples/tree/main/"
"samples/java/agents/dice_agent_multi_transport[Dice Agent] 示例。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The `DiceAgent` is a simple https://github.com/a2aproject/a2a-samples/blob/"
"main/samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/"
"samples/a2a/DiceAgent.java[Quarkus LangChain4j AI service] that can make use "
"of https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceTools."
"java[tools] to roll dice of different sizes and check if the result of a "
"roll is a prime number."
msgstr ""
"`DiceAgent` 是一个简单的 link:https://github.com/a2aproject/a2a-samples/blob/main/"
"samples/java/agents/dice_agent_multi_transport/server/src/main/java/com/"
"samples/a2a/DiceAgent.java[Quarkus LangChain4j 人工智能服务] ，可以利用 link:https://"
"github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/server/src/main/java/com/samples/a2a/DiceTools."
"java[工具] 掷不同大小的骰子，并检查掷骰子的结果是否是质数。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "A2A Server Agent"
msgstr "A2A 服务器代理"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"There are three key things in our sample application that turn our Quarkus "
"LangChain4j AI service into an A2A\n"
"server agent:"
msgstr "在我们的示例应用程序中，有三个关键要素将我们的 Quarkus LangChain4j AI 服务变成了 A2A 服务器代理："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"A dependency on at least one A2A Java SDK Server Reference implementation in "
"the server application's\n"
"https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/server/pom.xml[pom.xml] file. In this sample, "
"we've added dependencies on both `io.github.a2asdk:a2a-java-sdk-reference-"
"grpc`\n"
"and `io.github.a2asdk:a2a-java-sdk-reference-jsonrpc` since we want our A2A "
"server agent to be able to support\n"
"both the gRPC and JSON-RPC transports."
msgstr ""
"服务器应用程序的 link:https://github.com/a2aproject/a2a-samples/tree/main/samples/"
"java/agents/dice_agent_multi_transport/server/pom.xml[pom.xml] 文件中至少依赖于一个 "
"A2A Java SDK 服务器参考实现。在本示例中，我们添加了对 `io.github.a2asdk:a2a-java-sdk-reference-"
"grpc` 和 `io.github.a2asdk:a2a-java-sdk-reference-jsonrpc` 的依赖，因为我们希望 A2A "
"服务器代理能够同时支持 gRPC 和 JSON-RPC 传输。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/server/src/main/java/com/samples/a2a/"
"DiceAgentCardProducer.java[DiceAgentCardProducer], which defines the "
"`AgentCard` for our A2A server agent."
msgstr ""
"link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/server/src/main/java/com/samples/a2a/"
"DiceAgentCardProducer.java[DiceAgentCardProducer] 定义了 A2A 服务器代理的 `AgentCard` "
"。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/server/src/main/java/com/samples/a2a/"
"DiceAgentExecutorProducer.java[DiceAgentExecutorProducer], which calls our "
"`DiceAgent` AI service."
msgstr ""
"link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/server/src/main/java/com/samples/a2a/"
"DiceAgentExecutorProducer.java[DiceAgentExecutorProducer] 调用我们的 `DiceAgent` "
"人工智能服务。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Let's look closer at the `DiceAgentCardProducer`:"
msgstr "让我们仔细看看 `DiceAgentCardProducer` ："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The preferred transport for our A2A server agent, `gRPC` in this sample. "
"This is the transport protocol available at the primary endpoint URL."
msgstr "A2A 服务器代理的首选传输协议，本示例中为 `gRPC` 。这是主端点 URL 可用的传输协议。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"This is the primary endpoint URL for our A2A server agent. Since `gRPC` is "
"our preferred transport and since\n"
"we'll be using the HTTP port for gRPC and JSON-RPC, we're specifying "
"`\"localhost:\" + httpPort` here."
msgstr ""
"这是 A2A 服务器代理的主要端点 URL。由于 `gRPC` 是我们的首选传输方式，而且我们将为 gRPC 和 JSON-RPC 使用 HTTP "
"端口，因此我们在此指定 `\"localhost:\" + httpPort` 。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We can optionally specify additional interfaces supported by our A2A server "
"agent here. Since we also want\n"
"to support the JSON-RPC transport, we'll be adding that in this section."
msgstr "我们可以选择在此指定 A2A 服务器代理支持的其他接口。由于我们还希望支持 JSON-RPC 传输，因此我们将在本节中添加该接口。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The primary endpoint URL can optionally be specified in the additional "
"interfaces section for completeness."
msgstr "为完整起见，可选择在附加接口部分指定主端点 URL。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The JSON-RPC transport URL. Notice that we're using the HTTP port for both "
"JSON-RPC and gRPC."
msgstr "JSON-RPC 传输 URL。请注意，我们对 JSON-RPC 和 gRPC 都使用了 HTTP 端口。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Port Configuration for the Transports"
msgstr "转运港的端口配置"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"In the previous section, we mentioned that we're using the HTTP port for "
"both the gRPC and JSON-RPC transports.\n"
"This is configured in our `application.properties` file as shown here:"
msgstr ""
"在上一节中，我们提到 gRPC 和 JSON-RPC 传输都使用 HTTP 端口。如图所示，我们在 `application.properties` "
"文件中对此进行了配置："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"This setting allows serving both plain HTTP and gRPC requests from the same "
"HTTP server. Underneath it uses a Vert.x based gRPC server. If you set this "
"setting to true, gRPC requests will be served on port 9000 (and gRPC Java "
"will be used instead)."
msgstr ""
"该设置允许从同一 HTTP 服务器同时处理普通 HTTP 和 gRPC 请求。它使用基于 Vert.x 的 gRPC 服务器。如果将此设置设为 "
"true，gRPC 请求将通过 9000 端口提供服务（并使用 gRPC Java 代替）。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Starting the A2A Server Agent"
msgstr "启动 A2A 服务器代理"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"Once we start our Quarkus application, our A2A server agent will be "
"available at localhost:11000 for clients that would like to use gRPC and at "
"http://localhost:11000 for clients that would like to use JSON-RPC."
msgstr ""
"一旦我们启动 Quarkus 应用程序，我们的 A2A 服务器代理将在 localhost:11000 处为希望使用 gRPC 的客户端提供服务，并在 "
"http://localhost:11000 处为希望使用 JSON-RPC 的客户端提供服务。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"A2A clients can now send queries to our A2A server agent using either the "
"gRPC or JSON-RPC transport."
msgstr "A2A 客户端现在可以使用 gRPC 或 JSON-RPC 传输向我们的 A2A 服务器代理发送查询。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The complete source code and instructions for starting the server "
"application are available https://github.com/a2aproject/a2a-samples/tree/"
"main/samples/java/agents/dice_agent_multi_transport/server[here]."
msgstr ""
"完整的源代码和启动服务器应用程序的说明可 link:https://github.com/a2aproject/a2a-samples/tree/"
"main/samples/java/agents/dice_agent_multi_transport/server[在此处] 获取。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"Now that we have our multi-transport server agent configured and ready to "
"go, let's take a look at how to create an A2A client that can communicate "
"with it."
msgstr "现在我们已经配置好多传输服务器代理并准备就绪，让我们来看看如何创建一个可以与之通信的 A2A 客户端。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "A2A Client"
msgstr "A2A 客户"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The `dice_agent_multi_transport` sample also includes a https://github.com/"
"a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/client/src/main/java/com/samples/a2a/client/"
"TestClient.java[TestClient] that can be used to send messages to the Dice "
"Agent."
msgstr ""
"`dice_agent_multi_transport` 示例还包括一个 link:https://github.com/a2aproject/a2a-"
"samples/tree/main/samples/java/agents/dice_agent_multi_transport/client/src/"
"main/java/com/samples/a2a/client/TestClient.java[TestClient] ，可用于向 Dice "
"Agent 发送消息。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"Notice that the client's https://github.com/a2aproject/a2a-samples/tree/main/"
"samples/java/agents/dice_agent_multi_transport/client/pom.xml[pom.xml] file "
"contains dependencies on `io.github.a2asdk:a2a-java-sdk-client` and `io."
"github.a2asdk:a2a-java-sdk-client-transport-grpc`."
msgstr ""
"请注意，客户端的 link:https://github.com/a2aproject/a2a-samples/tree/main/samples/"
"java/agents/dice_agent_multi_transport/client/pom.xml[pom.xml] 文件包含对 `io."
"github.a2asdk:a2a-java-sdk-client` 和 `io.github.a2asdk:a2a-java-sdk-client-"
"transport-grpc` 的依赖关系。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The `a2a-java-sdk-client` dependency provides access to a `Client.builder` "
"that we'll use to create our A2A client and also provides the ability for "
"the client to support the JSON-RPC transport."
msgstr ""
"`a2a-java-sdk-client` 依赖项提供了对 `Client.builder` 的访问，我们将用它来创建 A2A "
"客户端，它还为客户端提供了支持 JSON-RPC 传输的能力。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The `a2a-java-sdk-client-transport-grpc` dependency provides the ability for "
"the client to support the gRPC transport."
msgstr "`a2a-java-sdk-client-transport-grpc` 依赖项使客户端能够支持 gRPC 传输。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"Let's see how the `TestClient` uses the A2A Java SDK to create a `Client` "
"that supports both gRPC and JSON-RPC:"
msgstr ""
"让我们看看 `TestClient` 如何使用 A2A Java SDK 创建一个同时支持 gRPC 和 JSON-RPC 的 `Client` ："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We can use `Client.builder(publicAgentCard)` to create our A2A client. We "
"need to pass in the `AgentCard` retrieved from the A2A server agent this "
"client will be communicating with."
msgstr ""
"我们可以使用 `Client.builder(publicAgentCard)` 创建 A2A 客户端。我们需要传入从 A2A 服务器代理获取的 "
"`AgentCard` ，该客户端将与之通信。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We need to specify event consumers that will be used to handle the responses "
"that will be received from the\n"
"A2A server agent. This will be explained in more detail in the next section."
msgstr "我们需要指定事件消费者，用于处理从 A2A 服务器代理收到的响应。下一节将对此进行详细说明。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The A2A client created by the `Client.builder` will automatically send "
"streaming messages, as opposed to\n"
"non-streaming messages, if it's supported by both the server and the client. "
"We need to specify a handler that will be used for any errors that might "
"occur during streaming."
msgstr ""
"`Client.builder` 创建的 A2A "
"客户端将自动发送流式信息，而不是非流式信息（如果服务器和客户端都支持）。我们需要指定一个处理程序，用于处理流式传输过程中可能出现的任何错误。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We're indicating that we'd like our client to support the gRPC transport."
msgstr "我们希望客户端支持 gRPC 传输。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We're indicating that we'd like our client to also support the JSON-RPC "
"transport. When communicating with\n"
"an A2A server agent that doesn't support gRPC, this is the transport that "
"would get used."
msgstr "我们希望客户端也支持 JSON-RPC 传输。在与不支持 gRPC 的 A2A 服务器代理通信时，将使用这种传输方式。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"We can optionally specify general client configuration and preferences here."
msgstr "我们可以选择在这里指定一般的客户端配置和偏好。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"Once our `Client` has been created, we can send a message to the A2A server "
"agent. The client will automatically use streaming if it's supported by both "
"the server and the client. If the server doesn't\n"
"support streaming, the client will send a non-streaming message instead."
msgstr ""
"`Client` 创建完成后，我们就可以向 A2A "
"服务器代理发送信息。如果服务器和客户端都支持流式传输，客户端将自动使用流式传输。如果服务器不支持流式传输，客户端将发送非流式信息。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Defining the Event Consumers"
msgstr "定义事件消费者"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"When creating our A2A client, we need to specify event consumers that will "
"be used to handle the responses\n"
"that will be received from the A2A server agent. Let's see how to define a "
"consumer that handles the different\n"
"types of events:"
msgstr "创建 A2A 客户端时，我们需要指定用于处理从 A2A 服务器代理接收的响应的事件消费者。让我们看看如何定义处理不同类型事件的消费者："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"This defines how to handle a `Message` received from the server agent. The "
"server agent will send a response that contains a `Message` for immediate, "
"self-contained interactions that are stateless."
msgstr ""
"这定义了如何处理从服务器代理收到的 `Message` 。服务器代理将发送一个包含 `Message` 的响应，用于无状态的即时、自足交互。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"This defines how to handle an `UpdateEvent` received from the server agent "
"for a specific task. There are\n"
"two types of `UpdateEvents` that can be received."
msgstr "这定义了如何处理从服务器代理收到的用于特定任务的 `UpdateEvent` 。可接收两种类型的 `UpdateEvents` 。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"A `TaskStatusUpdateEvent` notifies the client of a change in a task's status."
" This is typically used in streaming interactions. If this is the final "
"event in the stream for this interaction, `taskStatusUpdateEvent.isFinal()`\n"
"will return `true`."
msgstr ""
"`TaskStatusUpdateEvent` 通知客户端任务状态的变化。这通常用于流式交互。如果这是本次交互流中的最后一个事件， "
"`taskStatusUpdateEvent.isFinal()` 将返回 `true` 。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"A `TaskArtifactUpdateEvent` notifies the client that an artifact has been "
"generated or updated. An artifact contains output generated by an agent "
"during a task. This is typically used in streaming interactions."
msgstr "`TaskArtifactUpdateEvent` 通知客户端已生成或更新工件。工件包含代理在任务期间生成的输出。这通常用于流式交互。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"This defines how to handle a `Task` received from the server agent. A `Task` "
"will be processed by the server agent through a defined lifecycle until it "
"reaches an interrupted state or a terminal state."
msgstr "这定义了如何处理从服务器代理收到的 `Task` 。服务器代理将通过定义的生命周期处理 `Task` ，直到它达到中断状态或终端状态。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Transport Selection"
msgstr "运输选择"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"When creating our `Client`, we used the `withTransport` method to specify "
"that we want the client\n"
"to support both gRPC and JSON-RPC, in that order. The `Client.builder` "
"selects the appropriate\n"
"transport protocol to use based on information obtained from the A2A server "
"agent's `AgentCard`,\n"
"taking into account the transports configured for the client. In this sample "
"application, because\n"
"the server agent's preferred transport is gRPC, the gRPC transport will be "
"used."
msgstr ""
"在创建 `Client` 时，我们使用 `withTransport` 方法指定我们希望客户端依次支持 gRPC 和 JSON-RPC。 `Client."
"builder` 会根据从 A2A 服务器代理的 `AgentCard` "
"获取的信息选择要使用的适当传输协议，同时考虑到为客户端配置的传输协议。在本示例应用程序中，由于服务器代理的首选传输协议是 gRPC，因此将使用 gRPC "
"传输协议。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Using the A2A Client"
msgstr "使用 A2A 客户端"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The sample application contains a `TestClientRunner` that can be run using "
"`JBang`:"
msgstr "示例应用程序包含一个 `TestClientRunner` ，可使用 `JBang` 运行："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "You should see output similar to this:"
msgstr "您应该会看到类似下面的输出："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"You can also experiment with sending different messages to the A2A server "
"agent using the `--message` option\n"
"as follows:"
msgstr "您还可以尝试使用 `--message` 选项向 A2A 服务器代理发送不同的信息，具体方法如下："

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The complete source code and instructions for starting the client are "
"available https://github.com/a2aproject/a2a-samples/tree/main/samples/java/"
"agents/dice_agent_multi_transport/client[here]. There\n"
"are also details on how to use an A2A client that uses the A2A Python SDK "
"instead of the A2A Java SDK\n"
"to communicate with our A2A server agent."
msgstr ""
"link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport/client[这里] 有完整的源代码和启动客户端的说明。这里还有关于如何使用 A2A Python "
"SDK 而不是 A2A Java SDK 与我们的 A2A 服务器代理进行通信的 A2A 客户端的详细信息。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"The addition of multi-transport support to the A2A Java SDK, as demonstrated "
"in the new Dice Agent\n"
"sample, is a big step towards creating more flexible, performant, polyglot "
"multi-agent systems."
msgstr ""
"正如新的 Dice Agent 样本所展示的那样，在 A2A Java SDK "
"中添加多传输支持是朝着创建更灵活、性能更强、多用户的多代理系统迈出的一大步。"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "Further Reading"
msgstr "更多阅读"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport[Dice Agent Sample]"
msgstr ""
"link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents/"
"dice_agent_multi_transport[骰子代理样本]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"https://quarkus.io/blog/quarkus-a2a-java-0-3-0-alpha-release/[Getting "
"Started with Quarkus and A2A Java SDK 0.3.0]"
msgstr ""
"link:https://quarkus.io/blog/quarkus-a2a-java-0-3-0-alpha-release/[Quarkus 和 "
"A2A Java SDK 0.3.0 入门]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"https://quarkus.io/blog/quarkus-a2a-java-0-3-0-beta-release/[A2A Java SDK: "
"Support for the REST Transport is Now Here]"
msgstr ""
"link:https://quarkus.io/blog/quarkus-a2a-java-0-3-0-beta-release/[A2A Java "
"SDK：支持 REST 传输]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"https://github.com/a2aproject/a2a-samples/tree/main/samples/java/agents[A2A "
"Java SDK Samples]"
msgstr ""
"link:https://github.com/a2aproject/a2a-samples/tree/main/samples/java/"
"agents[A2A Java SDK 示例]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid ""
"https://github.com/a2aproject/a2a-java/blob/main/README.md[A2A Java SDK "
"Documentation]"
msgstr ""
"link:https://github.com/a2aproject/a2a-java/blob/main/README.md[A2A Java SDK "
"文档]"

#: _posts/2025-09-25-quarkus-a2a-java-grpc.adoc
#, fuzzy
msgid "https://a2a-protocol.org/latest/specification/[A2A Specification]"
msgstr "link:https://a2a-protocol.org/latest/specification/[A2A 规格]"
