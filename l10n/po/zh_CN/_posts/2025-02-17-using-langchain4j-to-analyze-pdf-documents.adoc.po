msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Using LangChain4j to analyze PDF documents"
msgstr "使用 LangChain4j 分析 PDF 文档"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Learn how to extract structured metadata from PDF documents using "
"LangChain4j and AI to automate document analysis."
msgstr "了解如何使用 LangChain4j 和人工智能从 PDF 文档中提取结构化元数据，实现文档分析自动化。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"In my consulting work, clients frequently present us with challenging "
"problems that require innovative solutions.\n"
"Recently, we were tasked with extracting structured metadata from PDF "
"documents through automated analysis. Below, I'll share a simplified version "
"of this real-world challenge and how we approached it."
msgstr ""
"在我的咨询工作中，客户经常向我们提出需要创新解决方案的挑战性问题。最近，我们的任务是通过自动分析从 PDF "
"文档中提取结构化元数据。下面，我将与大家分享这一现实挑战的简化版本，以及我们是如何应对的。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Use Case"
msgstr "使用案例"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Our client receives compressed archives (.zip files) containing up to "
"hundreds of portable document format (PDF) lease documents that need review. "
"Each document contains property lease details that must be validated for "
"accuracy. The review process involves checking various business rules - for "
"example, identifying leases with terms shorter than 2 years. Currently, this "
"document validation is done manually, which is time-consuming. The client "
"wants to automate and streamline this review workflow to improve efficiency."
msgstr ""
"我们的客户会收到压缩档案（.zip 文件），其中包含多达数百份需要审核的便携式文档格式 (PDF) "
"租赁文件。每个文件都包含必须验证准确性的物业租赁详细信息。审查过程包括检查各种业务规则，例如，识别期限短于 2 "
"年的租赁。目前，这种文档验证是手动完成的，非常耗时。客户希望实现这一审查工作流程的自动化和简化，以提高效率。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Some complications with these lease documents are:"
msgstr "这些租赁文件的一些复杂之处在于"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"The documents are not in a standard format so each lease may be written in a "
"different way by a different property manager."
msgstr "这些文件没有标准格式，因此不同的物业经理可能会以不同的方式书写每份租约。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"The documents may be scanned, so the text is sometimes human writing and not "
"typewritten."
msgstr "文件可能是扫描件，因此文本有时是人写的，而不是打字机打的。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"The documents may contain multiple pages, which are not always in the same "
"order."
msgstr "文件可能包含多页，而且顺序不一定相同。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"The lease terms may not be an actual date but written as \"Expires five "
"years from the start date\" or \"Expires on the anniversary of the start "
"date\"."
msgstr "租赁条款可能不是一个实际的日期，而是写成 \"从开始日期起五年内到期 \"或 \"在开始日期的周年纪念日到期\"。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Metadata such as acreage and tax parcel information is needed by our client "
"to validate the lease details."
msgstr "我们的客户需要耕地面积和纳税地块信息等元数据来验证租赁细节。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"You can understand why this is time consuming for a human to review and "
"validate the documents."
msgstr "你可以理解为什么人工审核和验证文件会耗费大量时间。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Our Solution"
msgstr "我们的解决方案"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"After consulting with https://github.com/dliubarskyi[Dmytro Liubarskyi] and "
"collaborating with the Quarkus team, we implemented a solution using "
"LangChain4j for document metadata extraction. We chose https://ai.google.dev/"
"docs/gemini_api_overview[Google Gemini] as our Large Language Model (LLM) "
"since it excels at PDF analysis through its built-in Optical Character "
"Recognition (OCR) capabilities, enabling accurate text extraction from both "
"digital and scanned documents."
msgstr ""
"在向 link:https://github.com/dliubarskyi[Dmytro Liubarskyi] 咨询并与 Quarkus "
"团队合作后，我们使用 LangChain4j 实现了文档元数据提取解决方案。我们选择 link:https://ai.google.dev/docs/"
"gemini_api_overview[Google Gemini] 作为我们的大型语言模型 (LLM)，因为它通过内置的光学字符识别 (OCR) "
"功能擅长 PDF 分析，能够从数字文档和扫描文档中准确提取文本。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Technical Details"
msgstr "技术细节"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The application is built using:"
msgstr "该应用程序使用"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Quarkus - A Kubernetes-native Java framework"
msgstr "Quarkus - Kubernetes 原生 Java 框架"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "LangChain4j - Java bindings for LangChain to interact with LLMs"
msgstr "LangChain4j - LangChain 的 Java 绑定，用于与 LLM 交互"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Google Gemini AI - For PDF document analysis and information extraction"
msgstr "谷歌双子座人工智能 - 用于 PDF 文档分析和信息提取"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Quarkus REST - For handling multipart file uploads"
msgstr "Quarkus REST - 用于处理多部分文件上传"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"HTML/JavaScript frontend - Simple UI for file upload and results display"
msgstr "HTML/JavaScript 前端 - 用于文件上传和结果显示的简单用户界面"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The backend processes the PDF through these steps:"
msgstr "后台通过这些步骤处理 PDF："

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Accepts PDF upload via multipart form data"
msgstr "通过多部分表单数据接受 PDF 上传"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Converts PDF content to base64 encoding"
msgstr "将 PDF 内容转换为 base64 编码"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Sends to Gemini AI with a structured JSON schema for response formatting"
msgstr "向 Gemini AI 发送结构化 JSON 模式，以便格式化响应"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Returns parsed lease information in a standardized format"
msgstr "以标准格式返回解析后的租赁信息"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Displays results in a tabular format on the web interface"
msgstr "在网络界面上以表格形式显示结果"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "The main components are:"
msgstr "主要包括"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "`LeaseAnalyzerResource` - REST endpoint for PDF analysis"
msgstr "`LeaseAnalyzerResource` - 用于 PDF 分析的 REST 端点"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "`LeaseReport` - Data structure for lease information"
msgstr "`LeaseReport` - 租赁信息的数据结构"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Web interface for file upload and results display"
msgstr "用于上传文件和显示结果的网络界面"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "How it works"
msgstr "工作原理"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"First we need a Google Gemini API key. You can get one for free, see more "
"details here: https://ai.google.dev/gemini-api/docs/api-key[Gemini API Key "
"Documentation^]."
msgstr ""
"首先，我们需要一个 Google Gemini API 密钥。您可以免费获得一个，详情请点击此处： link:https://ai.google.dev/"
"gemini-api/docs/api-key[双子座 API 密钥文档] 。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Next we need to install the LangChain4j dependencies:"
msgstr "接下来，我们需要安装 LangChain4j 依赖项："

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Configure Gemini LLM"
msgstr "配置双子座 LLM"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Next we need to wire up the Gemini LLM to the application (using your Google "
"AI Gemini API key)."
msgstr "接下来，我们需要将 Gemini LLM 与应用程序连接起来（使用 Google AI Gemini API 密钥）。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Logging the request and response is optional but can be helpful for "
"debugging."
msgstr "记录请求和响应是可选项，但有助于调试。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Register the AI service"
msgstr "注册人工智能服务"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "We must register the AI service to use the `LeaseAnalyzer` interface."
msgstr "我们必须注册人工智能服务，才能使用 `LeaseAnalyzer` 接口。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Define your data structure"
msgstr "定义数据结构"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Now we need to model the data structure for the lease information that we "
"want the LLM to extract from any lease document.  You can customize these "
"fields based on the information you need from the PDF documents but in our "
"use case below we are extracting the following information:"
msgstr ""
"现在，我们需要为租赁信息的数据结构建模，以便 LLM 从任何租赁文档中提取这些信息。您可以根据需要从 PDF "
"文档中提取的信息自定义这些字段，但在下面的用例中，我们将提取以下信息："

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Create the REST endpoint"
msgstr "创建 REST 端点"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"Lastly, we need to create a `LeaseAnalyzerResource` class that will use the "
"LLM to extract the lease information from the PDF document."
msgstr "最后，我们需要创建一个 `LeaseAnalyzerResource` 类，使用 LLM 从 PDF 文档中提取租约信息。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"There is a simple HTML/JavaScript frontend that allows you to upload a PDF "
"document and view the results.  In the example below 3 different lease "
"documents were uploaded and analyzed."
msgstr ""
"它有一个简单的 HTML/JavaScript 前端，允许您上传 PDF 文档并查看结果。在下面的示例中，我们上传并分析了 3 份不同的租赁文件。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid "Lease Analyzer Results"
msgstr "租赁分析结果"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"You can find the complete example code on https://github.com/melloware/"
"quarkus-lease-analyzer[GitHub^]."
msgstr ""
"您可以在 link:https://github.com/melloware/quarkus-lease-analyzer[GitHub] "
"上找到完整的示例代码。"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
#, fuzzy
msgid ""
"This article demonstrated how LangChain4j and AI can be leveraged to "
"automatically extract structured metadata from PDF documents. By "
"implementing this solution, our client will significantly reduce manual "
"document processing time, potentially saving thousands of work hours "
"annually. The combination of LangChain4j and Google Gemini AI proves to be a "
"powerful approach for automating document analysis workflows."
msgstr ""
"这篇文章展示了如何利用 LangChain4j 和人工智能从 PDF "
"文档中自动提取结构化元数据。通过实施这一解决方案，我们的客户将大大减少人工处理文档的时间，每年可能节省数千个工时。事实证明，LangChain4j 和 "
"Google Gemini AI 的结合是实现文档分析工作流程自动化的有力方法。"
