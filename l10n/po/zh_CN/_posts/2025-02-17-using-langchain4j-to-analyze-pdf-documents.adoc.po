msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Using LangChain4j to analyze PDF documents"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Learn how to extract structured metadata from PDF documents using LangChain4j and AI to automate document analysis."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid ""
"In my consulting work, clients frequently present us with challenging problems that require innovative solutions.\n"
"Recently, we were tasked with extracting structured metadata from PDF documents through automated analysis. Below, I'll share a simplified version of this real-world challenge and how we approached it."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Use Case"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Our client receives compressed archives (.zip files) containing up to hundreds of portable document format (PDF) lease documents that need review. Each document contains property lease details that must be validated for accuracy. The review process involves checking various business rules - for example, identifying leases with terms shorter than 2 years. Currently, this document validation is done manually, which is time-consuming. The client wants to automate and streamline this review workflow to improve efficiency."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Some complications with these lease documents are:"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "The documents are not in a standard format so each lease may be written in a different way by a different property manager."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "The documents may be scanned, so the text is sometimes human writing and not typewritten."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "The documents may contain multiple pages, which are not always in the same order."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "The lease terms may not be an actual date but written as \"Expires five years from the start date\" or \"Expires on the anniversary of the start date\"."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Metadata such as acreage and tax parcel information is needed by our client to validate the lease details."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "You can understand why this is time consuming for a human to review and validate the documents."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Our Solution"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "After consulting with https://github.com/dliubarskyi[Dmytro Liubarskyi] and collaborating with the Quarkus team, we implemented a solution using LangChain4j for document metadata extraction. We chose https://ai.google.dev/docs/gemini_api_overview[Google Gemini] as our Large Language Model (LLM) since it excels at PDF analysis through its built-in Optical Character Recognition (OCR) capabilities, enabling accurate text extraction from both digital and scanned documents."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Technical Details"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "The application is built using:"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Quarkus - A Kubernetes-native Java framework"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "LangChain4j - Java bindings for LangChain to interact with LLMs"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Google Gemini AI - For PDF document analysis and information extraction"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Quarkus REST - For handling multipart file uploads"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "HTML/JavaScript frontend - Simple UI for file upload and results display"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "The backend processes the PDF through these steps:"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Accepts PDF upload via multipart form data"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Converts PDF content to base64 encoding"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Sends to Gemini AI with a structured JSON schema for response formatting"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Returns parsed lease information in a standardized format"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Displays results in a tabular format on the web interface"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "The main components are:"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "`LeaseAnalyzerResource` - REST endpoint for PDF analysis"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "`LeaseReport` - Data structure for lease information"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Web interface for file upload and results display"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "How it works"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "First we need a Google Gemini API key. You can get one for free, see more details here: https://ai.google.dev/gemini-api/docs/api-key[Gemini API Key Documentation^]."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Next we need to install the LangChain4j dependencies:"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Configure Gemini LLM"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Next we need to wire up the Gemini LLM to the application (using your Google AI Gemini API key)."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Quarkus LangChain4j will provide autoconfiguration for Gemini in a future release. Currently, manual configuration is required since the Gemini integration is still evolving, with upstream LangChain4j offering three different modules for Google's AI APIs."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Define your data structure"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Now we need to model the data structure for the lease information that we want the LLM to extract from any lease document.  You can customize these fields based on the information you need from the PDF documents but in our use case below we are extracting the following information:"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Create the REST endpoint"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Lastly, we need to create a `LeaseAnalyzerResource` class that will use the LLM to extract the lease information from the PDF document."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "There is a simple HTML/JavaScript frontend that allows you to upload a PDF document and view the results.  In the example below 3 different lease documents were uploaded and analyzed."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Lease Analyzer Results"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "You can find the complete example code on https://github.com/melloware/quarkus-lease-analyzer[GitHub^]."
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "Conclusion"
msgstr ""

#: _posts/2025-02-17-using-langchain4j-to-analyze-pdf-documents.adoc
msgid "This article demonstrated how LangChain4j and AI can be leveraged to automatically extract structured metadata from PDF documents. By implementing this solution, our client will significantly reduce manual document processing time, potentially saving thousands of work hours annually. The combination of LangChain4j and Google Gemini AI proves to be a powerful approach for automating document analysis workflows."
msgstr ""
