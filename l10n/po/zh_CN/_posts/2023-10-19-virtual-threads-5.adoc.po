# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-19 08:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Compiling virtual thread applications into native executables"
msgstr "将虚拟线程应用程序编译成本地可执行文件"

#. type: YAML Front Matter: synopsis
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Learn how to compile applications using virtual threads into native executable."
msgstr "了解如何将使用虚拟线程的应用程序编译成本地可执行文件。"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"In https://quarkus.io/blog/virtual-threads-2/[another blog post], we have seen how you can implement a CRUD application with Quarkus to utilize virtual threads.\n"
"This post will show how you can compile such an application into a native executable."
msgstr "在 link:https://quarkus.io/blog/virtual-threads-2/[另一篇博文] 中，我们看到了如何使用 Quarkus 利用虚拟线程实现 CRUD 应用程序。本篇博文将介绍如何将此类应用程序编译为本地可执行文件。"

#. type: Title ==
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Installing GraalVM 21"
msgstr "安装 GraalVM 21"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"To compile a Quarkus application leveraging virtual threads into a native executable, you need a GraalVM version supporting Java 21.\n"
"You can download it from https://github.com/graalvm/graalvm-ce-builds/releases/tag/jdk-21.0.0[GitHub]."
msgstr "要将利用虚拟线程的 Quarkus 应用程序编译成本地可执行文件，您需要一个支持 Java 21 的 GraalVM 版本。您可以从 link:https://github.com/graalvm/graalvm-ce-builds/releases/tag/jdk-21.0.0[GitHub] 下载。"

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "Alternatively, you can use the https://sdkman.io/[SDKMAN] tool to install it:"
msgstr "或者，您也可以使用 link:https://sdkman.io/[SDKMAN] 工具进行安装："

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "Once installed, make sure the `GRAALVM_HOME` environment variable points to the GraalVM installation directory:"
msgstr "安装完成后，请确保 `GRAALVM_HOME` 环境变量指向 GraalVM 安装目录："

#. type: Title ==
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Compiling the application into a native executable"
msgstr "将应用程序编译成本地可执行文件"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"We will reuse the CRUD application developed in a https://quarkus.io/blog/virtual-threads-2/[previous blog post].\n"
"The source code is located in the https://github.com/quarkusio/virtual-threads-demos/tree/main/crud-example[virtual-threads-demos GitHub repository].\n"
"Note that while we are using the CRUD application, the same approach can be used with any Quarkus application leveraging virtual threads, including the other demos from the repository."
msgstr "我们将重复使用 link:https://quarkus.io/blog/virtual-threads-2/[上] 一篇 link:https://quarkus.io/blog/virtual-threads-2/[博文] 中开发的 CRUD 应用程序。源代码位于 link:https://github.com/quarkusio/virtual-threads-demos/tree/main/crud-example[virtual-threads-demos GitHub 代码库中] 。请注意，虽然我们使用的是 CRUD 应用程序，但同样的方法也可用于任何利用虚拟线程的 Quarkus 应用程序，包括该资源库中的其他演示。"

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "First make sure you use Java 21+ and that the `GRAALVM_HOME` environment variable points to the GraalVM installation directory."
msgstr "首先确保您使用 Java 21+，并且 `GRAALVM_HOME` 环境变量指向 GraalVM 安装目录。"

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "Then, in the `pom.xml` file, add the `native` profile:"
msgstr "然后，在 `pom.xml` 文件中添加 `native` 配置文件："

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"The `native` profile is activated when the `native` property is set.\n"
"So, compile the application with:"
msgstr "当设置 `native` 属性时，就会激活 `native` 配置文件。因此，编译应用程序时请使用"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"The compilation takes a few minutes.\n"
"Once done, you can run the application:"
msgstr "编译只需几分钟。完成后，即可运行应用程序："

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "1) First, start the database:"
msgstr "1) 首先，启动数据库："

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "2) Then, start the application:"
msgstr "2) 然后，启动应用程序："

#. type: Plain text
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid "You get:"
msgstr "你会得到"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"Then, open the application in a browser (http://localhost:8080) and start adding, updating, and completing tasks.\n"
"You will see in the logs that the processing of these requests are executed on virtual threads:"
msgstr "然后，在浏览器（ link:http://localhost:8080[http://localhost:8080）] 中打开应用程序，开始添加、更新和完成任务。您将在日志中看到，这些请求的处理是在虚拟线程上执行的："

#. type: Title ==
#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "摘要"

#: _posts/2023-10-19-virtual-threads-5.adoc
#, fuzzy
msgid ""
"This blog post explains how to compile a Quarkus application leveraging virtual threads into a native executable.\n"
"First, make sure that you have a GraalVM installation supporting Java 21+.\n"
"Then, add the `native` profile to the `pom.xml` file and compile the application using the `-Dnative` option.\n"
"Finally, run it as any other native executable!"
msgstr "本博文将介绍如何将利用虚拟线程的 Quarkus 应用程序编译成本地可执行文件。首先，请确保您安装了支持 Java 21+ 的 GraalVM。然后，在 `pom.xml` 文件中添加 `native` 配置文件，并使用 `-Dnative` 选项编译应用程序。最后，像运行其他本地可执行文件一样运行它！"
