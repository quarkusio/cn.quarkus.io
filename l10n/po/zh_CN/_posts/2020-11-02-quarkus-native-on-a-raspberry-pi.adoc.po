# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy, no-wrap
msgid "Quarkus native running on a Raspberry Pi"
msgstr "在树莓派上运行的Quarkus本机"

#. type: YAML Front Matter: synopsis
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy, no-wrap
msgid "Running a Quarkus native app inside a container on a Raspberry Pi"
msgstr "在Raspberry Pi上的容器中运行Quarkus本地应用程序"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Intro"
msgstr "介绍"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"When I've been introduced to Quarkus, back in December 2018, I suddenly had the feeling the Quarkus runtime has the potential of covering ~95% of the software use-cases.\n"
"My friend Sanne demoed Quarkus on his laptop when the runtime was still in an alpha state, far from being the large, extended and mature framework everybody knows nowadays. And still, I could experience a new way of think, implement and deploy java apps."
msgstr "早在 2018 年 12 月，当我被介绍给 Quarkus 时，我突然感觉 Quarkus 运行时有潜力覆盖 ~95% 的软件用例。我的朋友 Sanne 在他的笔记本电脑上演示了 Quarkus，当时该运行时还处于 alpha 状态，远非如今人人皆知的大型、扩展和成熟框架。尽管如此，我还是体验到了一种思考、实施和部署 Java 应用程序的新方法。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "I’ve been recently working on a Hackfest for Red Hat EMEA partners to spread awareness about the potential and the performance of the Quarkus framework. My main technical goal was to demonstrate Quarkus can run everywhere and thanks to its performance capabilities coming from the native compilation process it definitely is the runtime of choice for IoT devices (a.k.a. Far Edge)."
msgstr "我最近在为红帽欧洲、中东和非洲地区的合作伙伴举办Hackfest，以传播对Quarkus框架的潜力和性能的认识。我的主要技术目标是证明Quarkus可以在任何地方运行，由于它的性能来自于本地编译过程，它绝对是物联网设备（又称远缘）的首选运行时。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "To achieve the above goal, I’ve picked up a single-board computer with an integrated ARM-compatible central processing unit and made a Quarkus native app running into a container on top of a Linux based operating system. Here is how:"
msgstr "为了实现上述目标，我拿起了一台集成了ARM兼容中央处理器的单板计算机，并制作了一个Quarkus原生应用程序，在基于Linux的操作系统之上运行到一个容器中。下面是方法。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "*Single-board computer:* The ARM-compatible CPU integrated into the single-board computer must support 64-bit mode."
msgstr "*单板计算机：* 单板计算机中集成的 ARM 兼容 CPU 必须支持 64 位模式。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "*Operating system:*"
msgstr "*操作系统：*"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "To make a Quarkus native container image run in a container, a 64-bit Linux OS is required;"
msgstr "要在容器中运行 Quarkus 本机容器映像，需要使用 64 位 Linux 操作系统；"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The OS must support aarch64 CPUs, which leads us to the need for an aarch64-base distribution available for that OS;"
msgstr "操作系统必须支持arch64 CPU，这导致我们需要一个可用于该操作系统的arch64-base发行版。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Nice to have: the target OS should fully support the target single-board computer.**"
msgstr "不错的选择：目标操作系统应完全支持目标单板计算机。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "*Container technology:* surprise, surprise! an OCI standard container engine is compulsory to run containers on Linux :-)"
msgstr "*容器技术：* 惊喜，惊喜！在 Linux 上运行容器必须使用 OCI 标准容器引擎：-)"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "*Build tools:* as per the large amount of resources required by the GraalVM to compile Quarkus in native mode, an additional we need an ARM server / Virtual machine to achieve that goal. The server should meet the following minimum requirements:"
msgstr "*构建工具：* 由于 GraalVM 在本地模式下编译 Quarkus 需要大量资源，我们还需要一个 ARM 服务器/虚拟机来实现这一目标。服务器应满足以下最低要求："

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "CPU: same ARM model as the one embedded in the target single-board computer"
msgstr "中央处理器：与目标单板计算机嵌入的 ARM 型号相同"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Cores: 4"
msgstr "内核4"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Ram: 8Gb"
msgstr "内存： 8Gb"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Disk space: 20Gb"
msgstr "磁盘空间：20Gb"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "*Container registry:* In order to be able to deploy onto the single-board computer the container image containing the Quarkus native app built in the ARM server, an account on a remote container registry is required."
msgstr "*容器注册表：* 要在单板计算机上部署包含 ARM 服务器内置的 Quarkus 本地应用程序的容器映像，需要一个远程容器注册表账户。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Technology"
msgstr "技术"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Single-sensor board"
msgstr "单传感器电路板"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Choosing the target single-board computer model has been quite an easy task: I already had a Raspberry Pi meeting the requirements above:"
msgstr "选择目标单板计算机模型是一项相当容易的任务：我已经有一个符合上述要求的Raspberry Pi。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Model:_ Raspberry Pi 3 B+"
msgstr " _型号。_ 树莓派3 B+"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_SOC:_ Broadcom BCM2837B0, Cortex-A53 (ARMv8) 64-bit SoC"
msgstr " _SOC：_ 博通BCM2837B0，Cortex-A53（ARMv8）64位SoC"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_CPU:_ 1.4GHz 64-bit quad-core ARM Cortex-A53 CPU"
msgstr " _CPU。_ 1.4GHz 64位四核ARM Cortex-A53 CPU"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_RAM:_ 1GB LPDDR2 SDRAM"
msgstr "内存 _：_ 1GB lpddr2 sdram"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_WIFI:_ Dual-band 802.11ac wireless LAN (2.4GHz and 5GHz ) and Bluetooth 4.2"
msgstr " _WIFI。_ 双频802.11ac无线局域网（2.4GHz和5GHz）和蓝牙4.2"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Ethernet:_ Gigabit Ethernet over USB 2.0 (max 300 Mbps). Power-over-Ethernet support (with separate PoE HAT). Improved PXE network and USB mass-storage booting."
msgstr " _以太网。_ 通过USB 2.0的千兆以太网（最大300Mbps）。支持以太网供电（使用单独的PoE HAT）。改进的PXE网络和USB大容量存储的启动。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Thermal management:_ Yes"
msgstr " _热管理。是_ "

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Video:_ Yes – VideoCore IV 3D. Full-size HDMI"
msgstr " _视频。_ 是 - VideoCore IV 3D。全尺寸的HDMI"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Audio:_ Yes"
msgstr " _音频。_ 有"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_USB 2.0:_ 4 ports"
msgstr " _USB 2.0:_ 4个端口"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_GPIO:_ 40-pin"
msgstr " _GPIO：_ 40针"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Power:_ 5V/2.5A DC power input"
msgstr " _电源：_ 5V/2.5A直流电源输入"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Operating system support:_ Linux and Unix"
msgstr " _操作系统支持。L_ inux和Unix"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "OS"
msgstr "操作系统"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"I’ve tried a few operating system meeting the requirements listed above. The two possible solutions were Fedora Internet of Things Edition and Gentoo.\n"
"After some tests, I’ve picked up https://iot.fedoraproject.org/[Fedora IoT] for the following reasons:"
msgstr "我试过一些符合上述要求的操作系统。两个可能的解决方案是 Fedora 物联网版和 Gentoo。经过测试，我选择了 link:https://iot.fedoraproject.org/[Fedora] 物联网版，原因如下："

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Full, native support to 64-bit architecture (aarch64)"
msgstr "对64位架构（arch64）的全面、本地支持"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Stability"
msgstr "稳定性"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Usability"
msgstr "可用性"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Maturity"
msgstr "成熟度"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Lifecycle"
msgstr "生命周期"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Full support on RPi 3 B+"
msgstr "在RPi 3 B+上全面支持"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Container technology"
msgstr "集装箱技术"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "This one has been an easy task as well: https://podman.io/[Podman]. Podman is a daemonless container engine for developing, managing, and running OCI Containers on your Linux System. Containers can either be run as root or in rootless mode. Moreover, there’s no need for installing additional components/layers to Fedora IoT basic installation as the Podman container engine is already available in the OS distribution."
msgstr "这个也是一个容易的任务。 link:https://podman.io/[Podman] 。Podman是一个无守护程序的容器引擎，用于在Linux系统上开发、管理和运行OCI容器。容器既可以以root身份运行，也可以在无根模式下运行。此外，在Fedora IoT的基本安装中不需要安装额外的组件/层，因为Podman容器引擎已经在操作系统发行中可用。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Moreover, from a deeper technical perspective, due to the fact cgroups on fedora is now v2 using Docker would force you to appy several tweeks and to downgrade the cgroups versio to v1 in order to avoid getting warning and eventually failures."
msgstr "此外，从更深层次的技术角度来看，由于Fedora上的cgroups现在是v2版，使用Docker将迫使你应用几个细节，并将cgroups版本降级到v1版，以避免得到警告和最终失败。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"The reason why Podman is the contained of choice is very well explained in the following https://podman.io/blogs/2019/10/29/podman-crun-f31.html[article].\n"
"I'm quoting the quick explanation:"
msgstr "下面这 link:https://podman.io/blogs/2019/10/29/podman-crun-f31.html[篇文章] 很好地解释了 Podman 成为首选的原因。我引用的是快速解释："

#. type: delimited block _
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The crun command is the runtime the allows for cgroup V2 support and is supplied starting with Fedora 31. Other container systems use the runc runtime. However, runc only supports cgroup V1. The cgroup kernel feature allows you to allocate resources such as CPU time, network bandwidth and system memory to a container. Version 1 of cgroup only supports containers that are run by root, while version 2 supports containers that are run by root or a non-privileged user."
msgstr "crun命令是允许cgroup V2支持的运行时间，从Fedora 31开始提供。其他容器系统使用runc运行时。然而，runc只支持cgroup V1。cgroup内核功能允许你为容器分配资源，比如CPU时间、网络带宽和系统内存。cgroup的第1版只支持由root运行的容器，而第2版则支持由root或非特权用户运行的容器。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The output from the command \"podman info\" on the RPi related to the OCI runtime is the following:"
msgstr "RPi上与OCI运行时有关的 \"podman info \"命令的输出如下。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Meaning the Podman version already included in Fedora IoT 31 and later fully supports cgroup v2 thanks to the fact it uses \"crun\" runtime rather than the classic \"runc\" runtime, embedded in the other linux distributions and in the fedora releases before v31."
msgstr "这意味着已经包含在Fedora IoT 31及以后版本中的Podman完全支持cgroup v2，这是因为它使用了 \"crun \"运行时，而不是经典的 \"runc \"运行时，在其他linux发行版和v31之前的fedora版本中都嵌入了这一点。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Build tools"
msgstr "构建工具"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "There are multiple ways of provisioning an aarch64 server shipped with enough resources to build quarkus in native mode nowadays:"
msgstr "现在有多种方法可以提供一个有足够资源的arch64服务器，以便在本地模式下构建quarkus。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Spend a reasonable, but not small, budget to purchase a physical ARM server (don’t do this at home);"
msgstr "花合理但不小的预算来购买一台物理ARM服务器（不要在家里做这个）。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Spend a very small budget to provision an ARM VM on the public cloud (fastest, recommended if you are not running a Linux os on your host);"
msgstr "花很少的预算在公有云上配置一个ARM虚拟机（最快，如果你的主机上没有运行Linux操作系统，建议使用）。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Provision a VM on your host machine using QEmu (cheapest);"
msgstr "使用QEmu（最便宜的）在你的主机上配置一个虚拟机。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "__Run QEmu within a container, emulating the quarkus container images (still under investigation and tests)__."
msgstr " _在一个容器中运行QEmu，模拟quarkus容器图像（仍在调查和测试中）_ 。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "As I’m running Fedora Workstation on my desktop, I’ve picked up the 3rd option."
msgstr "由于我在桌面上运行Fedora Workstation，我选择了第三种方案。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Container registry"
msgstr "集装箱登记册"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The remote container registry of choice is https://quay.io/[Quay.io]. More details about setting up the account created on quay.io will be shared in a dedicated section of this article."
msgstr "远程容器注册表的首选是 link:https://quay.io/[Quay.io] 。有关设置在 quay.io 上创建的账户的更多详情，将在本文的专门章节中与大家分享。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Implementation"
msgstr "实施"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "This section will guide you through the following"
msgstr "本节将指导你完成以下工作"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Setting up the VM"
msgstr "设置虚拟机"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Setting up the RPi and Fedora IoT"
msgstr "设置RPi和Fedora IoT"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Connecting the container engine to the quay.io account"
msgstr "将容器引擎连接到quay.io账户上"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Compiling and deploying your Quarkus native app on Podman"
msgstr "在Podman上编译和部署你的Quarkus本地应用程序"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Outcome"
msgstr "结果"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "1. Setting up the VM"
msgstr ""
"\n"
" 设置虚拟机"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"This goal can be achieved using VM technology based on QEmu.\n"
"QEmu plays an important role in this task, cause that’s the best upstream tool to use to make a virtual machine emulating the target cpu architecture."
msgstr "使用基于 QEmu 的虚拟机技术可以实现这一目标。QEmu 在这项任务中扮演着重要角色，因为它是制作模拟目标 CPU 架构的虚拟机的最佳上游工具。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Setup a Virtual machine using QEmu"
msgstr "使用 QEmu 设置虚拟机"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "On a linux distro, the use of VMM (Virtual Machine Manager is highly recommended):"
msgstr "在linux发行版上，强烈建议使用VMM（虚拟机管理器）。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The minimum requirements for the virtual machine are the following:"
msgstr "虚拟机的最低要求如下。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "CPU: 4 cores *Cortex-A53* (ARMv8) 64-bit"
msgstr "CPU。4核 *Cortex-A53* （ARMv8）64位"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "RAM: 8 GB"
msgstr "内存：8GB"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Disk: 10Gb"
msgstr "磁盘：10Gb"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Networking: bridge"
msgstr "网络：桥梁"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "OS: Fedora Minimal (latest stable) - aarch64 (https://download.fedoraproject.org/pub/fedora-secondary/releases/32/Spins/aarch64/images/Fedora-Minimal-32-1.6.aarch64.raw.xz[link])"
msgstr "操作系统。Fedora Minimal (最新稳定版) - aarch64 link:https://download.fedoraproject.org/pub/fedora-secondary/releases/32/Spins/aarch64/images/Fedora-Minimal-32-1.6.aarch64.raw.xz[(链接] )"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Runtime: GraalVM (latest) - aarch64  (https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.2.0/graalvm-ce-java11-linux-aarch64-20.2.0.tar.gz[link])"
msgstr "运行时：GraalVM（最新） - aarch64 ( link:https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.2.0/graalvm-ce-java11-linux-aarch64-20.2.0.tar.gz[链接] )"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "image:/assets/images/posts/quarkus-native-on-a-raspberry-pi/vm-cpu-config.png[width=100%]"
msgstr "image:/assets/images/posts/quarkus-native-on-a-raspberry-pi/vm-cpu-config.png[alt=\"vm cpu config\", width=\"100%\"]"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "As a side note, please consider increasing the disk sizing of the VM in case you want to reuse it for additional builds and tests."
msgstr "作为附带说明，请考虑增加虚拟机的磁盘大小，以备你想重复使用它进行更多的构建和测试。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Setup the GraalVM environment"
msgstr "设置 GraalVM 环境"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "On your VM, you will need GCC, and the glibc and zlib headers. Examples for common distributions:"
msgstr "在你的虚拟机上，你将需要GCC，以及glibc和zlib头文件。常见发行版的例子。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Install OpenJdk:"
msgstr "安装OpenJdk。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"Download  the latest version of graalvm for your architecture (aarch64) from https://github.com/graalvm/graalvm-ce-builds/releases[here] and unpack it.\n"
"Detailed instructions https://www.graalvm.org/docs/getting-started-with-graalvm/linux/[here]."
msgstr "从 link:https://github.com/graalvm/graalvm-ce-builds/releases[此处] 为您的体系结构下载最新版本的 graalvm（aarch64），然后解压缩。详细说明请点击 link:https://www.graalvm.org/docs/getting-started-with-graalvm/linux/[此处] 。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Move the graalvm content into /usr/lib/graalvm and set the environment variables adding the following code snippet into /etc/profile:"
msgstr "将gralvm的内容移到/usr/lib/graalvm中，并设置环境变量，在/etc/profile中加入以下代码片断。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
msgid "Example:"
msgstr "例如："

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "2. Setting up the RPi and Fedora IoT"
msgstr ""
"\n"
" 设置 RPi 和 Fedora IoT"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Download the latest Fedora IoT distro"
msgstr "下载最新的 Fedora IoT 发行版"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Download the stable and fully supported version of Fedora IoT for Raspberry Pi from https://dl.fedoraproject.org/pub/alt/iot/[here]. Pick up the raw image for aarch64."
msgstr "从 link:https://dl.fedoraproject.org/pub/alt/iot/[这里] 下载稳定和完全支持的Fedora IoT for Raspberry Pi版本。拿起arch64的原始镜像。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Flash the operating system on the SD card"
msgstr "在 SD 卡上闪存操作系统"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Non-Linux OS"
msgstr "非 Linux 操作系统"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"If you are not running any linux based OS on hour host, in order to easily, safely and quickly install the OS image on the MicroSD card I highly recommended to download the official Raspberry Imager tool from https://www.raspberrypi.org/downloads/[here].\n"
"The Raspberry Pi Imager how-to can be found https://www.raspberrypi.org/blog/raspberry-pi-imager-imaging-utility/[here].\n"
"The good news is that we have already gone through the creation of the ARM-based virtual machine, so you already have a linux distro to use to flash the Fedora IoT OS on the SD card!"
msgstr "如果你没有在主机上运行任何基于 linux 的操作系统，为了方便、安全、快速地将操作系统镜像安装到 MicroSD 卡上，我强烈建议你从 link:https://www.raspberrypi.org/downloads/[这里] 下载 Raspberry Imager 官方工具。Raspberry Pi Imager 的使用方法可以在 link:https://www.raspberrypi.org/blog/raspberry-pi-imager-imaging-utility/[这里] 找到。好消息是，我们已经创建了基于 ARM 的虚拟机，所以你已经有了一个 linux 发行版，可以用来在 SD 卡上闪存 Fedora IoT 操作系统！"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "On a Linux distro"
msgstr "在 Linux 操作系统上"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"Fedora OS linux distro provides a tool that dramatically simplifies the task: fedora-arm-installer.\n"
"Let's add the tool to the OS:"
msgstr "Fedora OS linux 发行版提供了一个能极大简化任务的工具：Fedora-arm-installer。让我们将该工具添加到操作系统中："

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "An example of how to setup the DS card if you are running fedora:"
msgstr "如果你运行的是fedora的话，一个关于如何设置DS卡的例子。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"please refer to the official tool guide to get additional insights about it.\n"
"The tool is described https://docs.fedoraproject.org/en-US/iot/physical-device-setup/#_scripted_image_transfer_with_arm_image_installer[here]."
msgstr "请参阅官方工具指南，了解更多相关信息。 link:https://docs.fedoraproject.org/en-US/iot/physical-device-setup/#_scripted_image_transfer_with_arm_image_installer[此处] 介绍了该工具。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "As a side note, the resulting SD card will contain 3 partitions:"
msgstr "顺便提一下，生成的SD卡将包含3个分区。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_BIOS_ (U-Boot) - 1.1 Gb"
msgstr " _BIOS_ （U-Boot） - 1.1Gb"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Boot_ - 525 Mb"
msgstr " _启动_ - 525 Mb"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "_Root_ - Occupies the remaining unallocated space in the SD card"
msgstr " _根部_ - 占据SD卡中剩余的未分配的空间"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "image:/assets/images/posts/quarkus-native-on-a-raspberry-pi/sd-card-partitions.png[width=100%]"
msgstr "image:/assets/images/posts/quarkus-native-on-a-raspberry-pi/sd-card-partitions.png[alt=\"sd card partitions\", width=\"100%\"]"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Enabling 64bit on RPi cpu"
msgstr "在 RPi CPU 上启用 64 位"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"After the flashing operation has completed successfully, it's important to have a look at the config file of the operating system. edit the file _config.txt_ and make sure the section *[all]* starts with the following key-value pairs:\n"
"arm_control=0x200, arm_64bit=1"
msgstr "编辑 _config.txt_ 文件，确保 *[all]* 部分以下列键值对开头：arm_control=0x200, arm_64bit=1"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "e.g.:"
msgstr "如："

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "After first boot"
msgstr "首次启动后"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The following steps may not be necessary if you are happy with the fault keyboard layout or if you are connecting your RPi to the network with aLAN cable..."
msgstr "如果您对错误的键盘布局感到满意，或者如果您用LAN电缆将RPi连接到网络上，那么下面的步骤可能就没有必要了......"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Keyboard Layout"
msgstr "键盘布局"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Find your keymap of choice in the list obtained by issuing the following command:"
msgstr "在通过发布以下命令获得的列表中找到你所选择的键盘地图。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "And set it into the system config:"
msgstr "并将其设置到系统配置中。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Enable internet access through WiFi connection"
msgstr "通过 WiFi 连接上网"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Get the list of available networks"
msgstr "获取可用的网络列表"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "And connect to the Wi-Fi network of choice"
msgstr "并连接到所选择的Wi-Fi网络"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Disable firewall"
msgstr "禁用防火墙"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Only because it is a demo!!! :-)"
msgstr "只因为它是一个演示！！！。:-)"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Create a new user for the device"
msgstr "为设备创建新用户"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid ""
"Thanks to the fedora-arm-installer tool, we've added out public key to the root user.\n"
"Using root user on a linux system is never a good idea or, let’s say, a good practice.\n"
"For this reason, we’re going to add a new administrative user with wheel privileges to our OS:"
msgstr "多亏了 fedora-arm-installer 工具，我们把公钥添加到了 root 用户。在 Linux 系统中使用 root 用户从来不是个好主意，或者说，不是个好做法。因此，我们要在操作系统中添加一个新的管理用户，并赋予其 wheel 权限："

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "3. Connecting the container engine to the quay.io account"
msgstr ""
"\n"
" 将容器引擎连接到 quay.io 账户"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "If you haven’t got it yet, create a free account on quay.io."
msgstr "如果你还没有得到它，请在quay.io上创建一个免费账户。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Sign into Quay.io"
msgstr "登录 Quay.io"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "To sign into Quay.io, execute the podman login quay.io command:"
msgstr "要登录 Quay.io，请执行 podman login quay.io 命令："

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Note: If you go to your Quay account settings you can create an encrypted password for more security."
msgstr "注意：如果您进入您的Quay账户设置，您可以创建一个加密的密码，以提高安全性。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "4. Compiling and deploying your Quarkus native app on Podman"
msgstr ""
"\n"
" 在 Podman 上编译和部署 Quarkus 原生应用程序"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Back on the VM side."
msgstr "回到虚拟机那边。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Building the executable"
msgstr "构建可执行文件"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "You’ll need git to download the source code and execute it:"
msgstr "你需要git来下载源代码并执行它。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Clone the quarkus quickstarts repository and pick up the quarkus quickstart of choice."
msgstr "克隆quarkus quickstarts资源库并选择quarkus quickstart。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Enter the root directory of the quickstart of choice (e.g. __getting-started__) and start the build:"
msgstr "进入所选择的快速启动的根目录（如 _getting-started_ ）并开始构建。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The whole Maven process takes roughly 40 mins. Blease be aware that this could take longer in case of a sarvice with more features (i.e. importing and using more modules):"
msgstr "整个Maven过程大约需要40分钟。请注意，如果是具有更多功能的服务器（即导入和使用更多模块），这可能需要更长的时间。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The native quarkus executable must be packaged into a container image in order to be able to run it on a container runtime. To achieve this goal, let’s ask the container runtime already installed into your VM to build the container image:"
msgstr "原生的夸克斯可执行文件必须被打包成一个容器镜像，以便能够在容器运行时运行它。为了实现这一目标，让我们要求已经安装到你的虚拟机中的容器运行时来构建容器镜像。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Push the container image to the container registry of choice to share it with the edge device:"
msgstr "将容器镜像推送到所选择的容器注册处，以便与边缘设备共享。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Deploying the executable"
msgstr "部署可执行文件"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "On the RPi:"
msgstr "在RPi上。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "This paragraph shows the outcome produced by the above steps:"
msgstr "本段显示了上述步骤所产生的结果。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Startup/Stop time:"
msgstr "启动/停止时间"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The application starts in 55 ms and stops in 7 ms. This is impressive if you consider the Quarkus native app is running on the RPi3 cpu (Please have another look at the cpu specs at the very beginning of this article)!"
msgstr "该应用程序在55毫秒内启动，7毫秒内停止。如果你考虑到Quarkus本地应用程序是在RPi3 cpu上运行的，这就令人印象深刻了（请再看看本文最开始的cpu规格）!"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Memory footprint:"
msgstr "内存占用"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The following screenshot of the output of the \"top\" command on the RPi shows how cheap it is to run Quarkus native apps on top of the container technology:"
msgstr "下面是RPi上 \"top \"命令的输出截图，显示了在容器技术之上运行Quarkus原生应用程序是多么便宜。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Roughly 22 megs for a java-based application exposing a simple web page and a REST API!"
msgstr "对于一个基于java的应用程序，暴露出一个简单的网页和一个REST API，大概有22兆的容量"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Connecting to the service"
msgstr "连接服务"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "The following screenshot shows the webpage served by the quarkus microservice running natively on podman installed in the RPi:"
msgstr "下面的截图显示了由安装在RPi中的podman上原生运行的quarkus微服务提供的网页。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Conclusions"
msgstr "结论"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Big Picture"
msgstr "大图片"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "This article reproduces the steps to compile and run a Quarkus native app on a Raspberry Pi cpu. This process is potentially valid for all the cpus belonging to the ARM v8 family, with some potential exceptions due to the fact the architecture of few ARM based cpus may differ from the standard one for that version."
msgstr "本文再现了在Raspberry Pi cpu上编译和运行Quarkus本地应用程序的步骤。这个过程可能适用于所有属于ARM v8系列的cpu，但有一些潜在的例外，因为少数基于ARM的cpu的架构可能与该版本的标准架构不同。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Building tools"
msgstr "建筑工具"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "For this PoC I've used a QEmu-base VM. That promotes reusability, but it's still expensive in terms of usability (QEmu works like a charm on linux OS, but not on Windows and MacOS). As stated at the beginning of this article, a more flexible, portable and scalable solution still based on cpu emulation and container technology is under investiogation at the moment. That would help the delegation and scalability of build process."
msgstr "在这个PoC中，我使用了一个基于QEmu的虚拟机。这促进了可重用性，但在可用性方面仍然很昂贵（QEmu在linux操作系统上工作得很好，但在Windows和MacOS上则不行）。正如本文开头所说，目前正在研究一种更加灵活、可移植和可扩展的解决方案，它仍然基于cpu仿真和容器技术。这将有助于构建过程的授权和可扩展性。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Be aware that QEmu-based tools are still a workaround. GraalVM is missing the cross-compile feature and it will take a while to release it."
msgstr "请注意，基于QEmu的工具仍然是一种变通方法。GraalVM缺少交叉编译功能，需要一段时间才能发布。"

#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "Quarkus everywhere"
msgstr "到处都是夸克斯"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "It's clear that Quarkus can potentially run everywhere. It is, of course, a matter of supportability from GraalVM to the underlying architecture."
msgstr "很明显，Quarkus 可以在任何地方运行。当然，这取决于 GraalVM 对底层架构的支持能力。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "So far I feel comfortable in stating that this is just the beginning and lots more features and capabilities are yet to come."
msgstr "到目前为止，我可以放心地说，这仅仅是个开始，更多的功能和性能还将陆续推出。"

#. type: Plain text
#: _posts/2020-11-02-quarkus-native-on-a-raspberry-pi.adoc
#, fuzzy
msgid "It would very nice to have a distribution of Mandrel for aarch64. Mandrel is aligned with the `native-image` capabilities from GraalVM with OpenJDK and Red Hat Enterprise Linux libraries to improve maintainability. Looking forward to testing it ;-)"
msgstr "如果能有一个适用于 aarch64 的 Mandrel 发行版，那就再好不过了。Mandrel 与 GraalVM 的 `native-image` 功能以及 OpenJDK 和 Red Hat Enterprise Linux 库保持一致，以提高可维护性。期待测试它;-)"
