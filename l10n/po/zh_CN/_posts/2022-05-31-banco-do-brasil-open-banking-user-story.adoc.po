# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-26 21:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Banco do Brasil extracts Open Banking investment data with Quarkus and Kafka"
msgstr "巴西银行利用Quarkus和Kafka提取开放银行的投资数据"

#. type: YAML Front Matter: synopsis
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Banco do Brasil extracts investment data from the Brazilian Open Banking environment using Quarkus and Kafka to scale horizontally the processing with multiple instances and simultaneous worker threads."
msgstr "巴西银行使用Quarkus和Kafka从巴西的开放银行环境中提取投资数据，通过多个实例和同步的工作线程来横向扩展处理。"

#. type: delimited block _
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Banco do Brasil S.A. is a Brazilian financial services company headquartered in Brasília, Brazil. The oldest bank in Brazil, and among the oldest banks in continuous operation in the world, it was founded by John VI, King of Portugal, in 1808. It is the second largest banking institution in Brazil, as well as the second largest in Latin America, and the seventy-seventh largest bank in the world. Banco do Brasil is controlled by the Brazilian government and is listed on the B3 stock exchange in São Paulo. footnote:[https://en.wikipedia.org/wiki/Banco_do_Brasil]"
msgstr "Banco do Brasil S.A.是一家巴西金融服务公司，总部设在巴西的Brasília。它是巴西最古老的银行，也是世界上持续运营的最古老的银行之一，由葡萄牙国王约翰六世于1808年创立。它是巴西第二大银行机构，也是拉丁美洲第二大银行，是世界上第77大银行。巴西银行由巴西政府控制，在圣保罗的B3证券交易所上市。[ link:#_footnotedef_1[1, id=\"_footnoteref_1\", class=\"footnote\", title=\"View footnote.\"]]"

#. type: Title ==
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "The Challenge"
msgstr "挑战"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "There's an Investment Portfolio application in Banco do Brasil where all the client's investments are grouped together. This helps our financial specialists to give advice and also allows the customer to see all of their investments in one place. This information is stored on a daily basis, thus it is possible to create graphics showing the changes in the client's investments over time."
msgstr "在Banco do Brasil有一个投资组合应用程序，所有客户的投资都集中在一起。这有助于我们的金融专家提供建议，也允许客户在一个地方看到他们所有的投资。这些信息每天都会被存储，因此可以创建图形，显示客户的投资随时间的变化。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "With Brazilian Open Banking's creation, now it is possible to retrieve our customers investments' data from other financial institutions."
msgstr "随着巴西开放银行的建立，现在有可能从其他金融机构检索我们客户的投资数据。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "According to Brazilian Central Bank:"
msgstr "据巴西中央银行称。"

#. type: delimited block _
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The Banco Central do Brasil (BCB - Central Bank of Brazil) and the National Monetary Council (CMN) define the Brazilian Open Banking environment as the sharing of data, products and services between regulated entities — financial institutions, payment institutions and other entities licensed by BCB — at the customers' discretion, as far as their own data is concerned (individuals or legal entities).footnote:[https://www.bcb.gov.br/en/financialstability/open_banking]"
msgstr "巴西中央银行（BCB--巴西中央银行）和国家货币委员会（CMN）将巴西开放银行环境定义为受监管的实体--金融机构、支付机构和BCB许可的其他实体--之间共享数据、产品和服务，就客户自己的数据而言，由客户自行决定（个人或法律实体）。[ link:#_footnotedef_1[1, id=\"_footnoteref_1\", class=\"footnote\", title=\"View footnote.\"]]"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The business leaders envisioned the opportunity to improve customer experience by aggregating all investments, from others financial institutions, into our brand new and powerful Investment Portfolio solution."
msgstr "业务领导人设想了一个机会，即通过将来自其他金融机构的所有投资汇总到我们全新的、强大的投资组合解决方案中来改善客户体验。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The task was to extract this data in two different ways:"
msgstr "任务是以两种不同的方式提取这些数据。"

#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "*Daily* - on every work day."
msgstr "*每日* - 每个工作日。"

#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "*On demand* - when the data is requested by the financial specialists or directly by the customer."
msgstr "*按需* - 财务专家或客户直接要求提供数据。"

#. type: Title ==
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Technical Challenges to extract data from Open Banking"
msgstr "从开放银行提取数据的技术挑战"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "There were some difficulties in accomplishing this task."
msgstr "在完成这项任务时，有一些困难。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Number of clients to extract and the API throttling"
msgstr "要提取的客户数量和API节流"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "We have millions of customers, so the application must be able to scale up to handle all the processing. At first there were not so many clients using this feature, but this number is growing daily."
msgstr "我们有数以百万计的客户，所以应用程序必须能够扩大规模以处理所有的处理。起初没有那么多客户使用这个功能，但这个数字每天都在增长。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The challenge is that we have a throttling rule for using the APIs from the other financial institutions. So, we can scale up our application to cope with the demand, but we need to respect the maximum number of API calls we can do per minute."
msgstr "挑战在于，我们有一个使用其他金融机构的API的节流规则。因此，我们可以扩大我们的应用程序，以应对需求，但我们需要尊重每分钟可以进行的API调用的最大数量。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Concurrency between on demand requests and daily processing"
msgstr "按需请求和日常处理之间的并发性"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The on demand requests cannot be put at the end of the processing queue concurrently with the daily process."
msgstr "按需请求不能与日常流程同时放在处理队列的最后。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "This would be a problem, because the daily process can take hours and our clients and financial specialists cannot wait all this time when they make a request."
msgstr "这将是一个问题，因为每天的程序可能需要几个小时，我们的客户和财务专家在提出要求时不能等待这么长时间。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "APIs instability"
msgstr "API的不稳定性"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The daily processing must accurately store the data of every work day."
msgstr "日常处理必须准确存储每个工作日的数据。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The difficulty is that sometimes some financial institutions have problems, so it is not possible to be sure that the Open Banking information will be available every day."
msgstr "困难的是，有时一些金融机构会出现问题，所以不可能保证每天都有开放银行的信息。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "It is necessary to create some rules, where we can reprocess information from previous days."
msgstr "有必要创建一些规则，在这里我们可以重新处理前几天的信息。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, no-wrap
msgid "Observability"
msgstr "可观察性"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "We need to have some metrics to be able to know if the system is working correctly or if there is a problem."
msgstr "我们需要有一些衡量标准，以便能够知道系统是否正常工作或是否有问题。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "For instance, \"why is the data extraction taking so long today?\" \"Is it some financial institution that is having a problem?\" \"Is it our system?\" \"Our database?\""
msgstr "例如，\"为什么今天的数据提取需要这么长时间？\"\"是某个金融机构出了问题吗？\"\"是我们的系统吗？\"\"我们的数据库？\""

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Other questions we must answer are \"Has the daily process already run today?\" \"How many API calls had a problem in the last processing?\""
msgstr "我们必须回答的其他问题有：\"今天的日常处理已经运行了吗？\"\"在上次处理中，有多少个API调用出现了问题？\""

#. type: Title ==
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Legacy Application Architecture"
msgstr "遗留的应用程序架构"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The legacy Investment Portfolio backend runs in a mainframe environment, with COBOL programs, JCL procedures and DB2 database."
msgstr "传统的投资组合后端在主机环境中运行，有COBOL程序、JCL程序和DB2数据库。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Daily, this application receives huge files with investment data from other internal systems of our bank, like Investment Funds, Accounts and Shares."
msgstr "每天，这个应用程序都会从我们银行的其他内部系统，如投资基金、账户和股票，收到巨大的投资数据文件。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "It is important to recognize that the mainframe environment thrives with this kind of massive processing, reading large amounts of data files and storing data on the database using specialized processes that don't execute individual SQLs. This means that we can generate a file with millions of records and execute one DB2 procedure that stores all this data very quickly."
msgstr "重要的是要认识到，大型机环境是靠这种大规模的处理来发展的，读取大量的数据文件，并使用不执行单个SQL的专门过程在数据库上存储数据。这意味着我们可以生成一个有数百万条记录的文件，并执行一个DB2过程，非常迅速地存储所有这些数据。"

#. type: Title ==
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Architecture to solve the problem"
msgstr "解决问题的架构"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "New Options"
msgstr "新选项"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Banco do Brasil technology now has a private cloud orchestrated with Kubernetes, where we are able to run everything that can be built in a container. The most common languages used are Java, TypeScript, Python and Go."
msgstr "巴西银行的技术现在有一个用Kubernetes协调的私有云，在那里我们能够运行一切可以在容器中构建的东西。最常用的语言是Java、TypeScript、Python和Go。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Quarkus was chosen by our Development Supporting Team as the official Java framework to be used. The main reasons were:"
msgstr "Quarkus被我们的开发支持团队选择为官方使用的Java框架。主要原因是。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Very good development experience with fast startup time and live reload."
msgstr "非常好的开发经验，快速启动时间和实时重载。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Quarkus implements the Eclipse MicroProfile specification meaning that we are not locked in one specific solution, so theoretically we can change to another MicroProfile implementation if needed."
msgstr "Quarkus实现了Eclipse MicroProfile规范，这意味着我们没有被锁定在一个特定的解决方案中，所以理论上我们可以在需要时改变到另一个MicroProfile实现。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The Quarkus community is very active, bugs are solved quickly and new features are released frequently."
msgstr "Quarkus社区非常活跃，错误很快得到解决，新功能也经常发布。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Quarkus is cloud-native."
msgstr "Quarkus是云原生的。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Therefore, Quarkus is being massively used by us to create microservices. We have all sorts of applications that use it, the most common are simple API CRUDs, but we also have batch processes, integration with other institutions using REST APIs, integration with B3, the Brazilian stock exchange, using the FIX (Financial Information eXchange) protocol, low latency applications, and much more."
msgstr "因此，Quarkus正被我们大规模地用于创建微服务。我们有各种各样的应用，最常见的是简单的API CRUD，但我们也有批处理，使用REST API与其他机构的整合，使用FIX（金融信息交换）协议与巴西证券交易所B3的整合，低延迟应用，等等。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "To integrate with the FIX protocol, we use https://www.quickfixj.org/[QuickFIX/J], a Java open-source solution. We created this https://github.com/felipewind/fix-trading-simulator[Fix Trading Simulator] project showing how you can use QuickFIX/J with Quarkus."
msgstr "为了与FIX协议集成，我们使用 link:https://www.quickfixj.org/[QuickFIX/J] ，一个Java开源解决方案。我们创建了这个 link:https://github.com/felipewind/fix-trading-simulator[修复交易模拟器] 项目，展示了如何使用QuickFIX/J与Quarkus。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Our decision"
msgstr "我们的决定"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "A new system was created in our company to provide integration with the other financial institutions that participate in the Brazilian Open Banking environment. It's our *Open Banking Integrator* and it was built with Quarkus."
msgstr "我们公司创建了一个新的系统，以提供与参与巴西开放银行环境的其他金融机构的整合。这就是我们的 *开放银行集成器* ，它是用Quarkus建立的。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "At this point, we needed to decide how we would overcome all the project challenges. Would we stick with the mainframe, where it would be possible to communicate with our *Open Banking Integrator*, or should we try something new?"
msgstr "在这一点上，我们需要决定我们将如何克服所有的项目挑战。我们是坚持使用大型机，在那里可以与我们的 *开放银行集成商* 进行沟通，还是应该尝试新的东西？"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "As with all decisions in software architecture, we always have pros and cons. In the end, we decided to solve this problem running microservices written in Quarkus in our private cloud. The main reasons were:"
msgstr "和软件架构中的所有决定一样，我们总是有利有弊。最后，我们决定解决这个问题，在我们的私有云中运行用Quarkus编写的微服务。主要原因是。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "It is easier to scale the process horizontally."
msgstr "横向扩展这个过程比较容易。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Increase possibilites to expose metrics that allow a good observability."
msgstr "增加暴露指标的可能性，以实现良好的可观察性。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Fault tolerance control, specially Timeout, Circuit Breaker, Bulkhead, and Retry."
msgstr "容错控制，特别是超时、断路、隔板和重试。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Good integration with Kafka."
msgstr "与Kafka的良好整合。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "The new architecture"
msgstr "新的架构"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "We decided to create four microservices to handle the problems:"
msgstr "我们决定创建四个微服务来处理这些问题。"

#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "*Investment-api* - Responsible for creating a layer of asynchronous communication between the frontend applications and the open banking investment data. When the information is already fresh and available, it responds imediately with a 200 (ok) from the REST APIs, but when it is not, it responds with a 202 (accepted) and then sends a message to the *on-demand* topic, that will be processed by the *extractor* microservice."
msgstr "*Investment-api* - 负责在前端应用程序和开放式银行投资数据之间创建一个异步通信层。当信息已经新鲜可用时，它会立即从 REST API 响应 200（确定），但当信息不可用时，它会响应 202（接受），然后向 *按需* 主题发送消息，由 *提取器微* 服务进行处理。"

#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "*Scheduler* - Responsible for controlling the daily process. Accesses the *Open Banking Integrator* database to retrieve all the clients that shared investment data on the open banking and send one message per client to the *extractor* microservice using the *daily* topic."
msgstr "*调度* 程序 - 负责控制每日流程。访问 *开放银行集成器* 数据库，检索所有在开放银行上共享投资数据的客户，并使用 *每日* 主题向每个客户发送一条消息到 *提取器微* 服务。"

#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "*Extractor* - The heart of this system. It receives messages from the *on-demand* and the *daily* topics. Accesses the *Open Banking Integrator* system and stores data."
msgstr "*提取器* - 该系统的核心。它从 *按需* 和 *每日* 主题中接收信息。访问 *Open Banking Integrator* 系统并存储数据。"

#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "*Monitoring* - Collects metrics from the above microservices with Prometheus, gives observability with Grafana's dashboards and send alerts when problems occur."
msgstr "*监控* - 利用 Prometheus 收集上述微服务的指标，利用 Grafana 的仪表板提供可观察性，并在出现问题时发送警报。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Daily process"
msgstr "每日进程"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "On demand process"
msgstr "按需加工"

#. type: Title ==
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Quarkus helping us in the project"
msgstr "Quarkus在项目中帮助我们"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Processing Kafka messages simultaneously inside one instance"
msgstr "在一个实例中同时处理Kafka消息"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The *extractor* microservice is deployed with two different configurations. One for the *on-demand* process and the other for the *daily* process. Each one receives a specific Kafka Topic, the quantity of pods needed and the number of simultaneous worker threads that must process the topic."
msgstr " *提取器微* 服务被部署为两种不同的配置。一个用于 *按* 需处理，另一个用于 *日常* 处理。每一个都会收到一个特定的Kafka主题、所需的pod数量以及必须处理该主题的同时工作线程的数量。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "We can scale the *extractor* processing by creating new instances of the application to read specific Kafka partitions. For instance, if our Kafka topic has three partitions, we can create three instances of our application, each one processing one different partition."
msgstr "我们可以通过创建新的应用程序实例来读取特定的Kafka分区来扩展 *提取器* 的处理。例如，如果我们的Kafka主题有三个分区，我们可以创建三个应用程序的实例，每个实例处理一个不同的分区。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "But, to use one entire instance of the application to process one message at a time seems like a waste of resources. In the past our requirement was that each running pod should be able to process more than one message from the Kafka topic simultaneously. This challenge was the most exciting part of the project."
msgstr "但是，用整个应用程序的一个实例来一次处理一个消息似乎是在浪费资源。过去我们的要求是，每个运行的pod应该能够同时处理来自Kafka主题的一个以上的消息。这个挑战是项目中最令人兴奋的部分。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The team thought that we would need to do this programatically, receiving the messages from the Kafka consumer and creating threads manually. Then, we read the https://quarkus.io/guides/kafka#blocking-processing[Quarkus Kafka guide] and discovered that it was possible to do some tuning in the worker thread pool that consumes messages. The guide says that there is more information on the SmallRye Reactive Messaging documentation."
msgstr "团队认为，我们需要通过编程来完成这个工作，从Kafka消费者那里接收消息，并手动创建线程。然后，我们阅读了 link:https://quarkus.io/guides/kafka#blocking-processing[Quarkus Kafka指南] ，发现有可能在消费消息的工人线程池中做一些调整。指南中说，SmallRye Reactive Messaging文档中有更多信息。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "In the https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.1/advanced/blocking.html[SmallRye Reactive Messaging – Handling blocking execution guide], we found that if we don't need to process our messages in order, we actually can define the worker pool size that will consume Kafka messages. This was like magic for us! All we needed to do was to put these annotations in our Kafka Consumer:"
msgstr "在 link:https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.1/advanced/blocking.html[SmallRye Reactive Messaging - Handling blocking execution指南] 中，我们发现，如果我们不需要按顺序处理我们的消息，实际上我们可以定义消耗Kafka消息的worker pool大小。这对我们来说就像魔法一样!我们需要做的就是把这些注解放到我们的Kafka消费者中。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Now, we can configure the worker pool size, that means how many threads are going to process our Kafka messages simultaneously, passing this parameter:"
msgstr "现在，我们可以通过这个参数来配置工作者池的大小，也就是有多少个线程要同时处理我们的Kafka消息。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Each extraction demands calls to APIs that are provided by other financial institutions, sometimes this takes more time than the default amount of time defined by the Vert.x worker pool, that is 60 seconds. After 60 seconds, the application receives warnings informing us that our worker thread is blocked. It's possible to configure this with this parameter:"
msgstr "每次提取都需要调用其他金融机构提供的API，有时这需要的时间超过Vert.x工作者池定义的默认时间，即60秒。60秒后，应用程序会收到警告，通知我们的工作线程被阻塞了。可以通过这个参数来配置。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "We created the project https://github.com/felipewind/poc-kafka-quarkus[POC Kakfa Quarkus], where you can simulate this feature of running simultaneous threads to process messages from a Kafka topic."
msgstr "我们创建了项目 link:https://github.com/felipewind/poc-kafka-quarkus[POC Kakfa Quarkus] ，在这里你可以模拟运行同步线程来处理来自Kafka主题的消息这一功能。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Multiple persistence units with Hibernate ORM"
msgstr "使用Hibernate ORM的多个持久性单元"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "This feature was very important to our project. The *Open Banking Integrator* has some business data stored in an Oracle database. To improve the speed of processing, there is some information that we need to obtain directly from this database. As our application has a DB2 database, the Hibernate ORM Multiple Persistence units feature was very helpful. More information is available on the https://quarkus.io/guides/hibernate-orm#multiple-persistence-units[Hibernate Quarkus Guide]."
msgstr "这个功能对我们的项目非常重要。 *开放银行集成器有* 一些业务数据存储在一个Oracle数据库中。为了提高处理速度，有一些信息我们需要直接从这个数据库中获取。由于我们的应用程序有一个DB2数据库，Hibernate ORM的多个持久化单元功能非常有帮助。更多的信息可以在 link:https://quarkus.io/guides/hibernate-orm#multiple-persistence-units[Hibernate Quarkus指南] 中找到。"

#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Fault tolerance Retry"
msgstr "容错重试"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The APIs we execute can return errors saying that the system is temporarily unavailable. In this situation, we need to wait some time and try again."
msgstr "我们执行的API可能会返回错误，说系统暂时不可用。在这种情况下，我们需要等待一些时间，然后再尝试。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "This is very simple when using the `@Retry` annotation:"
msgstr "在使用 `@Retry` 注释时，这非常简单。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "We can configure the `maxRetries` and the `delay` between the retries with these properties:"
msgstr "我们可以通过这些属性配置 `maxRetries` 和重试之间的 `delay` 。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.1/microprofile-fault-tolerance-spec.html#configuration[MicroProfile Fault Tolerance specification guide] explains that we can configure these values individually (class or method) or globally."
msgstr "link:https://download.eclipse.org/microprofile/microprofile-fault-tolerance-2.1/microprofile-fault-tolerance-spec.html#configuration[MicroProfile容错规范指南] 解释说，我们可以单独配置这些值（类或方法）或全局。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "This configuration is very useful because we don't want the retries to take too much time in our tests, so it is possible to set values specifically for the tests:"
msgstr "这个配置非常有用，因为我们不希望重试在我们的测试中花费太多的时间，所以可以专门为测试设置值。"

#. type: Title ===
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Synchronizing access with fault tolerance Bulkhead"
msgstr "同步访问与容错 隔板"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Our *scheduler* microservice can't run the schedule in parallel."
msgstr "我们的 *调度器微* 服务不能并行地运行时间表。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "We deploy it on Kubernetes with the strategy type *Recreate*, meaning that all pods are terminated before a new one is created. This guarantees that only one pod at a time will be executed. So how do we avoid multiple threads from the same instance executing the same method at the same time?"
msgstr "我们在Kubernetes上部署它的策略类型是 *Recreate* ，这意味着在创建一个新的pod之前，所有的pod都被终止。这保证了每次只有一个pod被执行。那么我们如何避免同一实例的多个线程同时执行同一个方法呢？"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The answer is to use the `Bulkhead` fault tolerance annotation:"
msgstr "答案是使用 `Bulkhead` 容错注释。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "When a request cannot be added to the waiting queue, a `BulkheadException` will be thrown."
msgstr "当请求无法添加到等待队列时，将抛出 `BulkheadException` 。"

#. type: Title ==
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy, no-wrap
msgid "Final words about Quarkus"
msgstr "关于夸克斯的最后一句话"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "Our organization has hundreds of Java programmers, but one problem that we see is the difficulty to hire people who already have experience with Quarkus. We though believe that a person who has experience with other Java frameworks can easily learn Quarkus - especially since Quarkus relies on existing and proven technologies (JAX-RS, CDI, Hibernate ORM, Eclipse MicroProfile...) - and, with time, we will have more professionals mastering it."
msgstr "我们公司有数百名 Java 程序员，但我们发现的一个问题是，很难聘用到已经拥有 Quarkus 使用经验的人员。不过我们相信，有其他 Java 框架经验的人也能轻松学会 Quarkus，尤其是因为 Quarkus 依赖于现有的成熟技术（JAX-RS、CDI、Hibernate ORM、Eclipse MicroProfile......），而且随着时间的推移，我们会有更多的专业人员掌握它。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "In the team experience, Quarkus helps us to build reliable applications with all the resources needed to run a modern application on a cloud environment."
msgstr "根据团队的经验，Quarkus 可以帮助我们构建可靠的应用程序，并提供在云环境中运行现代应用程序所需的所有资源。"

#. type: Plain text
#: _posts/2022-05-31-banco-do-brasil-open-banking-user-story.adoc
#, fuzzy
msgid "The development experience is awesome and very often new versions are published creating new features making Quarkus even better."
msgstr "开发体验非常棒，而且经常会发布新版本，创建新功能，使 Quarkus 变得更好。"
