# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Micrometer is recommended for metrics with Quarkus 1.9"
msgstr "建议用Quarkus 1.9进行测量时使用千分表。"

#. type: YAML Front Matter: synopsis
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Micrometer is the recommended approach for metrics with Quarkus."
msgstr "Micrometer是推荐使用Quarkus进行度量的方法。"

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"Though Quarkus offers extensions for MicroProfile,\n"
"including metrics,\n"
"we're now recommending the use of the Micrometer extension for metrics in Quarkus with the release of 1.9."
msgstr ""

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Brief MicroProfile Metrics History"
msgstr "MicroProfile度量衡简史"

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"During the creation of the MicroProfile Metrics specification in 2017,\n"
"Dropwizard Metrics was the most popular metrics library at that time.\n"
"It was a natural fit for MicroProfile to use DropWizard Metrics as inspiration for a metrics specification."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"The monitoring ecosystem for cloud environments has evolved considerably since then,\n"
"and that has prompted a re-evaluation of how we approach working with metrics."
msgstr ""

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Why Micrometer?"
msgstr "为什么是千分尺？"

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"During the last 3-4 years,\n"
"there's been a growing focus on the needs of Site Reliability Engineers (SREs) in monitoring the operations of many varied services.\n"
"This focus leads to driving simplicity and ease of use to the SRE world.\n"
"We don't want make the life of an SRE harder!"
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"The design and development of Micrometer focused on the needs of SREs from the very beginning.\n"
"A key aspect to that approach is separating out the metric implementation into the registries,\n"
"enabling different registries to customize how the metric export,\n"
"aligning with a specific monitoring tool."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"Micrometer was built to adapt to the changing cloud native landscape while presenting a steady API for applications and libraries to use.\n"
"Each MeterRegistry implementation encapsulates its specific aggregation and reporting requirements.\n"
"There are MeterRegistry implementations available for cloud monitoring systems like Prometheus and Statsd,\n"
"as well as service providers like Datadog, New Relic or Stackdriver.\n"
"You can include more than one of these registries at the same time, too."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"While Micrometer has an API for applications to use,\n"
"practical usage is more focused on the MeterBinder abstraction.\n"
"MeterBinders allow instrumentation for application libraries to be added later.\n"
"It is even better when your application framework can register discovered MeterBinders on your behalf."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"Micrometer does follow different naming conventions than Dropwizard or MP Metrics, for a few reasons.\n"
"First, it uses a dot notation for all metric names, e.g. my.metric.name.\n"
"Each registry implementation can then apply its own naming convention to convert that name into something that matches its convention.\n"
"The Prometheus MeterRegistry converts my.metric.name into my_metric_name, for example.\n"
"Second, Micrometer was built around the notion of dimensional metrics, rather than adapting to it later."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"Another benefit to using Micrometer is its usage in the wider Java ecosystem.\n"
"Spring Boot and Micronaut both use Micrometer, amongst others.\n"
"In an environment where SREs are monitoring instances of different Java frameworks,\n"
"having them all produce metrics with the same names and dimensions is incredibly beneficial."
msgstr ""

#. type: Plain text
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid "For example, we likely have a metric for an HTTP endpoint like below:"
msgstr "例如，我们可能有一个HTTP端点的指标，如下所示。"

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"With Quarkus,\n"
"the Micrometer extension emits the same HTTP endpoint metric irrespective of whether it was created by JAX-RS,\n"
"Vert.x, or Undertow without the developer needing to add anything to their code.\n"
"The only effort required is to activate metrics."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"The http metrics emitted by the Micrometer extension is the also same as what is emitted by Spring Boot and Micronaut,\n"
"allowing SREs to work with aggregated http metrics regardless of which Java framework is used."
msgstr ""

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Can I still use MicroProfile Metrics?"
msgstr "我还能使用MicroProfile Metrics吗？"

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"The MicroProfile Metrics extension, `quarkus-smallrye-metrics`,\n"
"is still available and usable by applications.\n"
"For all the reasons outlined in <<why-micrometer>>,\n"
"Quarkus no longer recommends applications use the extension."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"In the short to medium term,\n"
"we will be working with the MicroProfile Metrics community to evolve the specification to be aligned with Micrometer.\n"
"What that means for the specification is not likely to be known until some time in 2021."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"For those that prefer to retain compatibility with MicroProfile Metrics,\n"
"despite the problems discussed in <<why-micrometer>>,\n"
"that will remain possible,\n"
"but at the discretion of application developers to make the informed choice."
msgstr ""

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "摘要"

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"Since 1.8 Quarkus offered two extensions for metrics,\n"
"`quarkus-micrometer` and `quarkus-smallrye-metrics`.\n"
"With the release of 1.9,\n"
"Quarkus will be recommending `quarkus-micrometer` for use with metrics."
msgstr ""

#: _posts/2020-10-19-micrometer-metrics.adoc
msgid ""
"Come play with the extension,\n"
"we love it for many reasons and hope you will too.\n"
"Reach out if you have any issues using the Micrometer extension in Quarkus!"
msgstr ""
