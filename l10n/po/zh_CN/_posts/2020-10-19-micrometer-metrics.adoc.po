# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Micrometer is recommended for metrics with Quarkus 1.9"
msgstr "建议用Quarkus 1.9进行测量时使用千分表。"

#. type: YAML Front Matter: synopsis
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Micrometer is the recommended approach for metrics with Quarkus."
msgstr "Micrometer是推荐使用Quarkus进行度量的方法。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Though Quarkus offers extensions for MicroProfile,\n"
"including metrics,\n"
"we're now recommending the use of the Micrometer extension for metrics in Quarkus with the release of 1.9."
msgstr "尽管 Quarkus 为 MicroProfile 提供了包括度量标准在内的扩展功能，但我们现在建议在 Quarkus 1.9 版本中使用 Micrometer 扩展功能来进行度量。"

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Brief MicroProfile Metrics History"
msgstr "MicroProfile度量衡简史"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"During the creation of the MicroProfile Metrics specification in 2017,\n"
"Dropwizard Metrics was the most popular metrics library at that time.\n"
"It was a natural fit for MicroProfile to use DropWizard Metrics as inspiration for a metrics specification."
msgstr "在 2017 年创建 MicroProfile Metrics 规范期间，Dropwizard Metrics 是当时最流行的度量库。MicroProfile 自然而然地将 DropWizard Metrics 作为度量规范的灵感来源。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"The monitoring ecosystem for cloud environments has evolved considerably since then,\n"
"and that has prompted a re-evaluation of how we approach working with metrics."
msgstr "从那时起，云环境的监控生态系统已经发生了很大的变化，这促使我们重新评估如何使用指标。"

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Why Micrometer?"
msgstr "为什么是千分尺？"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"During the last 3-4 years,\n"
"there's been a growing focus on the needs of Site Reliability Engineers (SREs) in monitoring the operations of many varied services.\n"
"This focus leads to driving simplicity and ease of use to the SRE world.\n"
"We don't want make the life of an SRE harder!"
msgstr "在过去的三四年间，网站可靠性工程师（SRE）在监控各种服务运行方面的需求日益受到关注。这种关注促使站点可靠性工程师的工作变得更加简单和易用。我们不想让站点可靠性工程师的工作变得更难！"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"The design and development of Micrometer focused on the needs of SREs from the very beginning.\n"
"A key aspect to that approach is separating out the metric implementation into the registries,\n"
"enabling different registries to customize how the metric export,\n"
"aligning with a specific monitoring tool."
msgstr "Micrometer 的设计和开发从一开始就注重 SRE 的需求。这种方法的一个关键方面是将指标实施分离到注册表中，使不同的注册表能够定制指标的输出方式，并与特定的监控工具保持一致。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Micrometer was built to adapt to the changing cloud native landscape while presenting a steady API for applications and libraries to use.\n"
"Each MeterRegistry implementation encapsulates its specific aggregation and reporting requirements.\n"
"There are MeterRegistry implementations available for cloud monitoring systems like Prometheus and Statsd,\n"
"as well as service providers like Datadog, New Relic or Stackdriver.\n"
"You can include more than one of these registries at the same time, too."
msgstr "Micrometer 的建立是为了适应不断变化的云原生环境，同时提供稳定的 API 供应用程序和库使用。每个 MeterRegistry 实现都封装了特定的聚合和报告要求。MeterRegistry 实现适用于 Prometheus 和 Statsd 等云监控系统，以及 Datadog、New Relic 或 Stackdriver 等服务提供商。您也可以同时包含多个注册表。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"While Micrometer has an API for applications to use,\n"
"practical usage is more focused on the MeterBinder abstraction.\n"
"MeterBinders allow instrumentation for application libraries to be added later.\n"
"It is even better when your application framework can register discovered MeterBinders on your behalf."
msgstr "虽然 Micrometer 有一个应用程序接口供应用程序使用，但实际使用更侧重于 MeterBinder 抽象。MeterBinders 允许稍后添加应用程序库的仪器。如果您的应用程序框架能代表您注册已发现的 MeterBinders，效果会更好。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Micrometer does follow different naming conventions than Dropwizard or MP Metrics, for a few reasons.\n"
"First, it uses a dot notation for all metric names, e.g. my.metric.name.\n"
"Each registry implementation can then apply its own naming convention to convert that name into something that matches its convention.\n"
"The Prometheus MeterRegistry converts my.metric.name into my_metric_name, for example.\n"
"Second, Micrometer was built around the notion of dimensional metrics, rather than adapting to it later."
msgstr "Micrometer 遵循的命名规则与 Dropwizard 或 MP Metrics 不同，原因有以下几点。首先，它对所有度量名称使用点符号，例如 my.metric.name。然后，每个注册表实施都可以应用自己的命名约定，将该名称转换为符合其约定的名称。例如，Prometheus MeterRegistry 将 my.metric.name 转换为 my_metric_name。其次，Micrometer 是围绕维度度量的概念建立的，而不是后来才适应它的。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Another benefit to using Micrometer is its usage in the wider Java ecosystem.\n"
"Spring Boot and Micronaut both use Micrometer, amongst others.\n"
"In an environment where SREs are monitoring instances of different Java frameworks,\n"
"having them all produce metrics with the same names and dimensions is incredibly beneficial."
msgstr "使用 Micrometer 的另一个好处是可以在更广泛的 Java 生态系统中使用。Spring Boot 和 Micronaut 都使用 Micrometer。在 SRE 监控不同 Java 框架实例的环境中，让它们都生成具有相同名称和维度的度量是非常有益的。"

#. type: Plain text
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid "For example, we likely have a metric for an HTTP endpoint like below:"
msgstr "例如，我们可能有一个HTTP端点的指标，如下所示。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"With Quarkus,\n"
"the Micrometer extension emits the same HTTP endpoint metric irrespective of whether it was created by JAX-RS,\n"
"Vert.x, or Undertow without the developer needing to add anything to their code.\n"
"The only effort required is to activate metrics."
msgstr "有了 Quarkus，无论 HTTP 端点度量指标是由 JAX-RS、Vert.x 还是 Undertow 创建的，Micrometer 扩展都会发出相同的 HTTP 端点度量指标，开发人员无需在代码中添加任何内容。唯一需要做的就是激活度量。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"The http metrics emitted by the Micrometer extension is the also same as what is emitted by Spring Boot and Micronaut,\n"
"allowing SREs to work with aggregated http metrics regardless of which Java framework is used."
msgstr "Micrometer 扩展发布的 http 指标与 Spring Boot 和 Micronaut 发布的指标相同，这样，无论使用哪种 Java 框架，SRE 都能使用聚合的 http 指标。"

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Can I still use MicroProfile Metrics?"
msgstr "我还能使用MicroProfile Metrics吗？"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"The MicroProfile Metrics extension, `quarkus-smallrye-metrics`,\n"
"is still available and usable by applications.\n"
"For all the reasons outlined in <<why-micrometer>>,\n"
"Quarkus no longer recommends applications use the extension."
msgstr "MicroProfile Metrics 扩展（ `quarkus-smallrye-metrics` ）仍然可用，应用程序也可以使用。出于 <<why-micrometer>> 中概述的所有原因，Quarkus 不再建议应用程序使用该扩展。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"In the short to medium term,\n"
"we will be working with the MicroProfile Metrics community to evolve the specification to be aligned with Micrometer.\n"
"What that means for the specification is not likely to be known until some time in 2021."
msgstr "在中短期内，我们将与 MicroProfile Metrics 社区合作，使规范与 Micrometer 保持一致。这对规范意味着什么，可能要到 2021 年才能知晓。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"For those that prefer to retain compatibility with MicroProfile Metrics,\n"
"despite the problems discussed in <<why-micrometer>>,\n"
"that will remain possible,\n"
"but at the discretion of application developers to make the informed choice."
msgstr "对于那些希望保留与 MicroProfile Metrics 的兼容性的应用程序，尽管存在 <<why-micrometer>> 中讨论的问题，但仍有可能保留兼容性，但由应用程序开发人员酌情做出明智的选择。"

#. type: Title ==
#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy, no-wrap
msgid "Summary"
msgstr "摘要"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Since 1.8 Quarkus offered two extensions for metrics,\n"
"`quarkus-micrometer` and `quarkus-smallrye-metrics`.\n"
"With the release of 1.9,\n"
"Quarkus will be recommending `quarkus-micrometer` for use with metrics."
msgstr "自 1.8 版起，Quarkus 为度量衡提供了两个扩展： `quarkus-micrometer` 和 `quarkus-smallrye-metrics` 。随着 1.9 版本的发布，Quarkus 将推荐 `quarkus-micrometer` 用于度量。"

#: _posts/2020-10-19-micrometer-metrics.adoc
#, fuzzy
msgid ""
"Come play with the extension,\n"
"we love it for many reasons and hope you will too.\n"
"Reach out if you have any issues using the Micrometer extension in Quarkus!"
msgstr "快来体验扩展功能吧！我们喜欢它有很多原因，希望你也能喜欢。如果您在使用 Quarkus 的千分尺扩展时遇到任何问题，请联系我们！"
