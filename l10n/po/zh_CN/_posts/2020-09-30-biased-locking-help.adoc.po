# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "maxandersen"
msgstr "冯小刚"

#. type: YAML Front Matter: date
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "2020-09-30"
msgstr "2020-09-30"

#. type: YAML Front Matter: layout
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "职位"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "In Java 15 *biased locking* is now disabled by default and is planned to be removed in the Java Virtual Machine as per JEP 374. We need your help seeing if it affects Quarkus performance in your application."
msgstr "在Java 15中，有 *偏见的锁定* 现在是默认禁用的，并计划按照JEP 374在Java虚拟机中删除。我们需要你的帮助，看看它是否会影响你的应用程序中的Quarkus性能。"

#. type: YAML Front Matter: tags
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "help"
msgstr "帮助"

#. type: YAML Front Matter: title
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:1
#, fuzzy, no-wrap
msgid "Biased locking removed from Java - does it affect you ?"
msgstr "有偏见的锁定从Java中移除 - 它影响到你了吗？"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:11
#, fuzzy
msgid "Last week we became aware that the OpenJDK team in Java 15 have disabled *biased locking* (https://openjdk.java.net/jeps/374[JEP 374]) in the Java virtual machine. This is a change from previous versions and could *potentially* have a negative impact on Java application's performance."
msgstr "上周我们意识到，Java 15中的OpenJDK团队已经禁用了Java虚拟机中的偏置 *锁* link:https://openjdk.java.net/jeps/374[（JEP 374] ）。这是对以前版本的改变， *有* 可能对Java应用程序的性能产生负面影响。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:13
#, fuzzy
msgid "Red Hat's own performance teams are currently running performance tests to see how it affects our Java middleware, but no amount of generic testing can reveal how this change affects real-world applications."
msgstr "红帽自己的性能团队目前正在进行性能测试，看看它对我们的Java中间件有什么影响，但无论怎样的通用测试都无法揭示这种变化对现实世界的应用有什么影响。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:15
#, fuzzy
msgid "That is where you come in."
msgstr "这就是你进来的地方。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:17
#, fuzzy
msgid "We would like to get info from you on whether your application performance is affected by biased locking or not."
msgstr "我们想从你那里得到信息，了解你的应用程序的性能是否受到偏置锁的影响。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:19
#, fuzzy
msgid "To do so please try the following in your application performance tests:"
msgstr "要做到这一点，请在你的应用程序性能测试中尝试以下内容。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:21
#, fuzzy
msgid "Run your Quarkus application performance tests as you normally would with the following command line flags on Java 11 (jdk11u) and if feasible Java 15 (jdk15):"
msgstr "在Java 11(jdk11u)上运行Quarkus应用程序的性能测试，如果可行的话，在Java 15(jdk15)上使用以下命令行标志。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:23
#, fuzzy, no-wrap
msgid "*enabled*: -XX:+UseBiasedLocking -XX:BiasedLockingStartupDelay=0\n"
msgstr " *启用* 。-XX:+UseBiasedLocking -XX:BiasedLockingStartupDelay=0"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:25
#, fuzzy, no-wrap
msgid "*disabled*: -XX:-UseBiasedLocking\n"
msgstr " *禁用* 。-XX:-UseBiasedLocking"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:27
#, fuzzy
msgid "We would like to know the result of this no matter if you see a regression or not on the same Java Virtual Machine."
msgstr "我们想知道这样做的结果，无论你在同一台Java虚拟机上是否看到回归。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:29
#, fuzzy
msgid "If you are able then running it with the following scenarios would be of great help too:"
msgstr "如果你能做到，那么在以下情况下运行它也会有很大帮助。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:31
#, fuzzy
msgid "single-threaded"
msgstr "单线程"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:32
#, fuzzy
msgid "thread count ~= hardware core count"
msgstr "线程数 ~= 硬件核心数"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:33
#, fuzzy
msgid "thread count ~= N * hardware core count where 8 < N < 16"
msgstr "线程数 ~= N * 硬件核心数，其中 8 < N < 16"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:35
#, fuzzy
msgid "The intent of these are to see how the level of concurrency affects the result."
msgstr "这些的目的是要看看并发程度如何影响结果。"

#. type: Title ==
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:36
#, fuzzy, no-wrap
msgid "Reporting the result"
msgstr "报告结果"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:39
#, fuzzy
msgid "Please https://github.com/quarkusio/quarkus/issues/new?assignees=&labels=kind%2Fbug&template=bug_report.md&title=%28jep374%29[open a bug] with `[jep374]` in the title + your project. i.e. `[jep374] results for acme project crazy panda` containing the following information per run in the description:"
msgstr "请在标题中用 `[jep374]` +你的项目 link:https://github.com/quarkusio/quarkus/issues/new?assignees=&labels=kind%2Fbug&template=bug_report.md&title=%28jep374%29[开一个bug] 。即 `[jep374] results for acme project crazy panda` ，在描述中每一次运行包含以下信息。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:47
#, fuzzy
msgid "``` jvm used: jdk11 or jdk15 thread-count: 1..N (if you know)  hardware-core count: N (if you know)  performance test result: with biased locking performance test result: without biased locking ```"
msgstr " `` "

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:49
#, fuzzy
msgid "This will help us immensely. Thank you!"
msgstr "这将对我们有极大的帮助。谢谢你！\"。"

#. type: Title ==
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:50
#, fuzzy, no-wrap
msgid "Background"
msgstr "背景介绍"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:53
#, fuzzy
msgid "Below is some background context on biased locking - all optional reading - you don't need to understand the details to help us by running your performance tests and let us know if anything changes."
msgstr "下面是关于偏置锁的一些背景情况--所有的阅读都是可选的--你不需要了解这些细节，通过运行你的性能测试来帮助我们，如果有什么变化，请让我们知道。"

#. type: Title ===
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:54
#, fuzzy, no-wrap
msgid "What is biased locking?"
msgstr "什么是偏向性锁定？"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:57
#, fuzzy
msgid "Biased locking lowers the cost of /uncontended/ synchronization."
msgstr "有偏见的锁定降低了/不和谐/同步的成本。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:60
#, fuzzy, no-wrap
msgid ""
"*Without biased locking*: a thread needs to set and clear a lock bit\n"
"when it performs repeated synchronizations on the same object. It also needs to wait for those set/clear writes to be drained to local cache before proceeding to execute further memory operations.\n"
msgstr " *没有偏向性锁定* ：线程在对同一对象进行重复同步时，需要设置和清除一个锁位。它还需要等待这些设置/清除的写入量被排到本地缓存中，然后再继续执行进一步的内存操作。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:62
#, fuzzy, no-wrap
msgid "*With biased locking*: the first time a thread synchronizes on an object it does a bit more work to acquire synchronized ('bias' it to the thread). Subsequent syncrhonizations proceed via a simple read test with no need to  drain to cache.\n"
msgstr " *偏置锁* ：线程第一次对一个对象进行同步时，会做一些更多的工作来获得同步（\"偏置 \"给线程）。随后的同步通过一个简单的读取测试进行，不需要消耗缓存。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:65
#, fuzzy
msgid "Where's the trade off? Well, if a biased lock is contended then there is more work to do to bias and unbias the lock. However, it is known that many synchronized operations are uncontended."
msgstr "交易在哪里？好吧，如果一个有偏见的锁被争夺，那么有更多的工作要做，以偏向和不偏向的锁。然而，众所周知，许多同步操作是无争议的。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:71
#, fuzzy
msgid "Biasing can be big win when a potentially concurrent data structure is actually used sequentially. The case where it helps most is exemplified in the problem we already found in class `DataOutputStream`. Normally only one thread writes a `DataOutputStream` and it is often not read until the stream has been filled. All the same, every `putInt()` or `putLong()`` call invokes a syncrhonized method to increment the byte count by 4 or 8.  That's needed just in case some other thread might want to reliably locate the end of the valid buffer data but that rarely happens. So, the unbiased case suffers lock write and cache drain delays at every basic put operation."
msgstr "当一个潜在的并发数据结构实际上是按顺序使用时，偏置可以成为一个大赢家。它最有帮助的情况是在我们已经发现的问题中的例子： `DataOutputStream` 。通常只有一个线程写一个 `DataOutputStream` ，而且通常在流被填满之前不会被读取。同样，每一个 `putInt()` 或 `putLong()`` 的调用都会调用一个同步化的方法，将字节数增加4或8。这只是在其他线程可能想要可靠地定位有效缓冲区数据的结束时需要的，但这很少发生。所以，无偏的情况下，在每一个基本的put操作中都会有锁写入和缓存耗尽的延迟。"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:73
#, fuzzy
msgid "A similar case occurs with class ByteOutput Stream. Method putByte is synchronized. So writing a single byte involves a lock and unlock. n.b. method putInt calls putByte 4 times, requiring 4 locks and unlocks. Method putLong calls it 8 times!"
msgstr "类似的情况发生在ByteOutput Stream类中。方法putByte是同步的。因此，写一个字节需要锁和解锁。方法putLong调用了8次!"

#. type: Title ===
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:74
#, fuzzy, no-wrap
msgid "Why is biased locking being removed?"
msgstr "为什么有偏见的锁定被删除？"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:78
#, fuzzy
msgid "The implementation of biased locking adds a great deal of complexity to the JVM and is understood by only a small subset of the most experienced engineers. The cost of maintaining it and designing around it is significantly slowing down progress on new features. It has been a long term goal to remove it if at all possible. Some OpenJDK contributors wanted to remove it right away in jdk15 others argue for a slower deprecation route in order to check that we could really dispense with it."
msgstr "偏置锁的实现给JVM增加了大量的复杂性，而且只有一小部分最有经验的工程师能够理解。维护它和围绕它进行设计的成本大大减缓了新功能的进展。如果可能的话，删除它一直是一个长期目标。一些OpenJDK的贡献者希望在jdk15中立即删除它，而另一些人则主张采用较慢的弃用路线，以检查我们是否真的可以放弃它。"

#. type: Title ==
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:79
#, fuzzy, no-wrap
msgid "What happens next?"
msgstr "接下来会发生什么？"

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:82
msgid "We are collecting our own internal performance tests across multiple teams in Red Hat and will gather data from community reported tests too and see what the data indicates. At this stage we are making no assumption that the removal of biased locking will definitely make performance worse. We know that in some cases not having biased locks will improve performance. Our concern is to find cases, like the JDK examples above, where it might cause serious performance degradation and get an idea of how bad, and also how common, the worst cases might be."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:84
msgid "Once processed we might reach out to those reporting scenarios with unexpected results and get more details."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:87
msgid "Then we'll work with the larger OpenJDK community to aid in deciding if biased locking can be turned off completely or a longer graceful deprecation period is needed."
msgstr ""

#. type: Plain text
#: upstream/_posts/2020-09-30-biased-locking-help.adoc:88
msgid "In any case - Thank you for your help and interest in making Java better!"
msgstr ""
