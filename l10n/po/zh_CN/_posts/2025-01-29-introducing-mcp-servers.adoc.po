msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Introducing Model Context Protocol servers project"
msgstr "模型上下文协议服务器项目介绍"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Introducing the Model Context Protocol servers project which provides a set of MCP servers implemented using Quarkus and Java. Starting with JDBC, filesystem and JavaFX."
msgstr "介绍模型上下文协议服务器项目，该项目提供一套使用 Quarkus 和 Java 实现的 MCP 服务器。从 JDBC、文件系统和 JavaFX 开始。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Today, I'm excited to introduce the Model Context Protocol (MCP) servers project."
msgstr "今天，我很高兴向大家介绍模型上下文协议 (MCP) 服务器项目。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Model Context Protocol is the recent approach to enable AI models to interact with your applications and services in a nice decoupled way."
msgstr "模型上下文协议（Model Context Protocol）是最近推出的一种方法，可让人工智能模型以一种良好的解耦方式与应用程序和服务进行交互。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "The https://github.com/quarkiverse/quarkus-mcp-servers[mcp-servers] project is as far as I know the first one to provide a set of MCP servers implemented using Java and at least uniquely Quarkus."
msgstr "据我所知， link:https://github.com/quarkiverse/quarkus-mcp-servers[mcp-servers] 项目是第一个提供一套使用 Java 和 Quarkus 实现的 MCP 服务器的项目。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Intended to show-case the capabilities of the Model Context Protocol, and inspiration for what you can do with it - especially in Java."
msgstr "旨在展示模型上下文协议的功能，并启发您如何使用它（尤其是在 Java 中）。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "The Servers"
msgstr "服务器"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "At time of writing there are three servers implemented:"
msgstr "在编写本报告时，共有三台服务器投入使用："

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "JDBC"
msgstr "JDBC"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Let your AI app introspect and interact to any JDBC-compatible database, let it be PostgreSQL, MySQL, MariaDB, SQLite, Oracle, etc. image:https://github.com/quarkiverse/quarkus-mcp-servers/raw/main/jdbc/images/jdbc-trends-demo.png[JDBC server]"
msgstr "让您的人工智能应用程序与任何兼容 JDBC 的数据库（PostgreSQL、MySQL、MariaDB、SQLite、Oracle 等）进行内省和交互。 image:https://github.com/quarkiverse/quarkus-mcp-servers/raw/main/jdbc/images/jdbc-trends-demo.png[alt=\"JDBC server\"]"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Filesystem"
msgstr "文件系统"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Access the file system of your machine, let it be your home directory, your code directory, your project directory, etc. image:https://github.com/quarkiverse/quarkus-mcp-servers/raw/main/filesystem/images/filesystem-demo.png[Filesystem server]"
msgstr "访问机器的文件系统，比如你的主目录、代码目录、项目目录等。 image:https://github.com/quarkiverse/quarkus-mcp-servers/raw/main/filesystem/images/filesystem-demo.png[alt=\"Filesystem server\"]"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "JavaFX"
msgstr "JavaFX"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Draw on a JavaFX canvas, get your AI to draw some art for you! Based on idea from https://gist.github.com/konczdev/5e6774d2d8640bf83baab88cb068bcc2[@konczdev]image:https://github.com/quarkiverse/quarkus-mcp-servers/raw/main/jfx/images/jfx-demo.png[JavaFX server]"
msgstr "在 JavaFX 画布上作画，让人工智能为你绘制艺术作品！基于 link:https://gist.github.com/konczdev/5e6774d2d8640bf83baab88cb068bcc2[@konczdev] 的创意 image:https://github.com/quarkiverse/quarkus-mcp-servers/raw/main/jfx/images/jfx-demo.png[alt=\"JavaFX server\"]"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Each server is implemented using Quarkus and Java, and each server is available to easily run using JBang. No need for user to install Java, Quarkus or any other Java tool."
msgstr "每个服务器都使用 Quarkus 和 Java 实现，每个服务器都可使用 JBang 轻松运行。用户无需安装 Java、Quarkus 或任何其他 Java 工具。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "How to use the servers"
msgstr "如何使用服务器"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "The general setup is to install https://jbang.dev/download/[JBang], preferably using a package manager as then desktop apps are more likely to find `jbang` in the PATH."
msgstr "一般设置是安装 link:https://jbang.dev/download/[JBang] ，最好使用软件包管理器，因为这样桌面应用程序更有可能在 PATH 中找到 `jbang` 。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Then in your MCP client configure it with:"
msgstr "然后在 MCP 客户端中进行配置："

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "`jbang [server-name]@quarkiverse/quarkus-mcp-servers [arguments]`"
msgstr "`jbang [server-name]@quarkiverse/quarkus-mcp-servers [arguments]`"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "For example to run the JDBC server to connect to a MariaDB database you would do:"
msgstr "例如，要运行 JDBC 服务器以连接 MariaDB 数据库，您需要这样做："

#: _posts/2025-01-29-introducing-mcp-servers.adoc
msgid "`jbang jdbc@quarkiverse/quarkus-mcp-servers jdbc:mariadb://localhost:3306/test --user root --password mysecretpassword`"
msgstr ""

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "or use a downlodable SQLite database of Netflix movies:"
msgstr "或使用 Netflix 电影的可下载 SQLite 数据库："

#: _posts/2025-01-29-introducing-mcp-servers.adoc
msgid "`jbang jdbc@quarkiverse/quarkus-mcp-servers jdbc:sqlite:%{https://github.com/lerocha/netflixdb/releases/download/v1.0.0/netflixdb.sqlite}`"
msgstr ""

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Tthe `%{}` syntax is a JBang feature to download a file from a URL in the command line and use it as a local file."
msgstr "`%{}` 语法是 JBang 的一项功能，可通过命令行从 URL 下载文件并将其作为本地文件使用。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Similar there is `jbang jfx@quarkiverse/quarkus-mcp-servers` to draw on a JavaFX canvas, and `jbang filesystem@quarkiverse/quarkus-mcp-servers [path]` to access the file system."
msgstr "类似的还有在 JavaFX 画布上绘图的 `jbang jfx@quarkiverse/quarkus-mcp-servers` 和访问文件系统的 `jbang filesystem@quarkiverse/quarkus-mcp-servers [path]` 。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Tested MCP Clients"
msgstr "经测试的 MCP 客户端"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "During development we tested the servers with the following clients:"
msgstr "在开发过程中，我们用以下客户端对服务器进行了测试："

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "https://claude.ai/download[Claude Desktop]"
msgstr "link:https://claude.ai/download[克劳德桌面]"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "https://github.com/chrishayuk/mcp-cli[mcp-cli]"
msgstr "link:https://github.com/chrishayuk/mcp-cli[mcp-cli]"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "https://block.github.io/goose/docs/quickstart/[Goose]"
msgstr "link:https://block.github.io/goose/docs/quickstart/[鹅]"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "There are more MCP clients out there, and we're sure that the servers will work with many more."
msgstr "现在有更多的 MCP 客户端，我们相信服务器还能与更多的客户端配合使用。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Goose is noteworthy given it is opensource and available both as a desktop app (on MacOS) and as a cli tool. It was https://block.github.io/goose/docs/quickstart/[recently announced] with full support for the Model Context Protocol."
msgstr "值得注意的是，Goose 是开源的，既可以作为桌面应用程序（在 MacOS 上），也可以作为 cli 工具。 link:https://block.github.io/goose/docs/quickstart/[最近，它发布了] 对模型上下文协议的全面支持。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Here I configured Goose to use the SQLLite database from the Northwind sample database with this setup stored in `~/.config/goose/config.yaml`:"
msgstr "在这里，我将 Goose 配置为使用北风示例数据库中的 SQLLite 数据库，并将此设置存储在 `~/.config/goose/config.yaml` 中："

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Note: we do recommend to use `goose config` to generate/edit the config file."
msgstr "注意：我们建议使用 `goose config` 生成/编辑配置文件。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "With the above config Goose will be able to use the JDBC server to connect to the SQLLite database:"
msgstr "有了上述配置，大鹅就能使用 JDBC 服务器连接到 SQLLite 数据库："

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Unique features for Quarkus MCP Servers"
msgstr "Quarkus MCP 服务器的独特功能"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "All that is great, but why use Quarkus for implementing the MCP servers?"
msgstr "这一切都很好，但为什么要使用 Quarkus 来实施 MCP 服务器呢？"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "First is that the programming model provided by Quarkus is very powerful, allowing you to easily focus on the business logic of your application. See https://quarkus.io/blog/mcp-server/[previous blog] for details on how to implement a server or look at the https://github.com/quarkiverse/quarkus-mcp-servers/blob/main/jdbc/src/main/java/io/quarkus/mcp/servers/jdbc/MCPServerJDBC.java[code of the JDBC servers]. Notice how compact it is!"
msgstr "首先，Quarkus 提供的编程模型非常强大，可以让你轻松专注于应用程序的业务逻辑。有关如何实现服务器或查看 link:https://github.com/quarkiverse/quarkus-mcp-servers/blob/main/jdbc/src/main/java/io/quarkus/mcp/servers/jdbc/MCPServerJDBC.java[JDBC 服务器代码的] 详细信息，请参阅 link:https://quarkus.io/blog/mcp-server/[上一篇博客] 。请注意它是多么紧凑！"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
msgid "Second, is the vast Java ecosystem provides things like JDBC drivers which enables us to make a single server that works with any JDBC-compatible database. We use `jbang` to dynamically download https://github.com/quarkiverse/quarkus-mcp-servers/blob/main/jdbc/.scripts/mcpjdbc.java[the right JDBC driver] and then launch the quarkus mcp server. Similar is done for `jfx` to https://github.com/quarkiverse/quarkus-mcp-servers/blob/main/jbang-catalog.json#L34[fetch] the right OS specific JavaFX dependencies."
msgstr ""

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Thirdly, ability to run the servers as a native executable. In the MCP servers project the `filesystem` server is https://github.com/quarkiverse/quarkus-mcp-servers/releases[published as a native executable] you can download and gain a much faster startup time."
msgstr "第三，能够以本地可执行文件的形式运行服务器。在 MCP 服务器项目中， `filesystem` 服务器 link:https://github.com/quarkiverse/quarkus-mcp-servers/releases[以本地可执行文件的形式发布] ，您可以下载并获得更快的启动时间。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "There is also a lot of interesting things to come around how to use quarkus dev mode with MCP servers and testing - but that will be for another blog post."
msgstr "围绕如何在 MCP 服务器和测试中使用 quarkus 开发模式，还有很多有趣的事情要做，但这将是下一篇博文的主题。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "JBang required or not ?"
msgstr "是否需要 JBang？"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "JBang is in general not required to run an MCP server, but it makes it much easier and makes it possible for anyone, especially non-Java developers to use these servers."
msgstr "一般来说，运行 MCP 服务器并不需要 JBang，但 JBang 使运行 MCP 服务器变得更容易，并使任何人（尤其是非 Java 开发人员）都有可能使用这些服务器。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "You can of course run a simple MCP servers as a normal Java application, but then you need to install right version of Java, download the server and their dependencies and run it like `java -jar [path to server jar]`."
msgstr "当然，您也可以像运行普通 Java 应用程序一样运行简单的 MCP 服务器，但需要安装正确的 Java 版本，下载服务器及其依赖项，然后像运行 `java -jar [path to server jar]` 一样运行它。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "For the MCP servers project we have chosen to use JBang as we go beyond and utiize JBang to dynamically fetch drivers and OS specific deps. Without JBang that would be much harder, if not impossible to make consumable."
msgstr "在 MCP 服务器项目中，我们选择使用 JBang，因为我们超越了 JBang 的功能，并利用 JBang 动态获取驱动程序和操作系统特定的部署。如果没有 JBang，即使不是不可能，也很难做到这一点。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Sky is the limit!"
msgstr "天空才是极限"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "The Model Context Protocol opens up exciting possibilities for building intelligent applications using your application data with your favourite programming language and framework. With Quarkus MCP Servers, you have a powerful foundation to create your own Java based servers that can bridge AI with any data source or system you can imagine."
msgstr "模型上下文协议（Model Context Protocol）开辟了令人兴奋的可能性，让您可以使用自己喜欢的编程语言和框架，利用自己的应用数据构建智能应用程序。有了 Quarkus MCP 服务器，您就有了一个强大的基础，可以创建自己的基于 Java 的服务器，将人工智能与您能想象到的任何数据源或系统连接起来。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Whether you want to connect to your favorite database, integrate with your company's internal systems, or build something completely new - the sky truly is the limit! The simplicity of implementing MCP servers with Quarkus means you can focus on the creative aspects rather than the plumbing."
msgstr "无论您是想连接到您最喜爱的数据库、与公司内部系统集成，还是构建全新的系统，Quarkus 都能为您提供无限可能！使用 Quarkus 实施 MCP 服务器的简便性意味着您可以专注于创意方面，而不是管道方面。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "We'd love to see what you build! Leave a comment or consider contributing your MCP servers back to the community through the https://github.com/quarkiverse/quarkus-mcp-servers[Quarkiverse MCP Servers project]. Your implementation could help others solve similar problems or inspire them to create something even more amazing."
msgstr "我们很乐意看到您的作品！请发表评论，或考虑通过 link:https://github.com/quarkiverse/quarkus-mcp-servers[Quarkiverse MCP 服务] 器 link:https://github.com/quarkiverse/quarkus-mcp-servers[项目] 将您的 link:https://github.com/quarkiverse/quarkus-mcp-servers[MCP 服务器] 贡献回社区。您的实现可以帮助其他人解决类似的问题，或者激发他们创造出更令人惊叹的东西。"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "So what are you waiting for? Grab the code, fire up your IDE, and start building your own MCP server today. The future of AI-powered applications is here, and you can be part of shaping it!"
msgstr "还等什么？拿起代码，启动你的集成开发环境，今天就开始构建你自己的 MCP 服务器吧。人工智能应用的未来就在这里，而你可以参与其中！"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "Have Fun!"
msgstr "玩得开心"

#: _posts/2025-01-29-introducing-mcp-servers.adoc
#, fuzzy
msgid "p.s. Next week on Thursday February 6th we're hosting a https://quarkus.io/insights/[MCP server Insights] where we will discuss the MCP server and client SDK's in Quarkus project and how you can use it to build your own MCP servers and extend your AI infused applications."
msgstr "p.s. 下周 2 月 6 日（周四），我们将举办 link:https://quarkus.io/insights/[MCP 服务器透视] ，届时我们将讨论 Quarkus 项目中的 MCP 服务器和客户端 SDK，以及如何使用它来构建自己的 MCP 服务器和扩展人工智能应用。"
