# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "GoWithFlow chooses Quarkus to deliver fast to production with minimal risk"
msgstr "GoWithFlow选择Quarkus，以最小的风险快速交付生产"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "GoWithFlow, a recent startup based out of Portugal, a spin-off from https://www.ceiia.com/[CEiiA] with https://www.galp.com/corp/en/[Galp] as a majority shareholder, provides integrated mobility solutions that can both provision end-to-end services to new mobility operators (eg. running a scooter-sharing network, managing an EV charging network, managing a fleet), but also gather data from other mobility operators, e.g.car-sharing operators, public transportation, etc, and thus provide a single access to mobility within a city. They consolidate all this data for consumption by citizens via their mobile phone apps that can help them locate the closest shared vehicle, or the most optimal way to get from point A to point B using multiple transportation options, for example."
msgstr "GoWithFlow是一家最近在葡萄牙成立的创业公司，从 link:https://www.ceiia.com/[CEiiA] 分离出来， link:https://www.galp.com/corp/en/[Galp] 是大股东，它提供综合的移动解决方案，既可以为新的移动运营商提供端到端的服务（例如，运行一个摩托车共享网络，管理一个电动车充电网络，管理一个车队），也可以收集其他移动运营商的数据，例如，汽车共享运营商，公共交通等，从而提供一个城市内移动的单一通道。他们整合所有这些数据，供市民通过他们的手机应用程序使用，可以帮助他们找到最近的共享车辆，或使用多种交通选择从A点到B点的最理想方式。"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "They had a monolithic application server to support all their apps and their developers were experiencing 2 to 3-minutes deploy cycles to test any change made to the code. In addition, it was taking them 2 to 3 months to go to production every time there was a change, no matter how small it was, which required them to deploy the entire system - even parts that had not been modified at all - making the whole process highly risky."
msgstr "他们有一个单一的应用服务器来支持他们所有的应用程序，他们的开发人员正经历着2到3分钟的部署周期来测试对代码的任何修改。此外，每次有变化时，不管变化有多小，他们都要花2到3个月的时间去生产，这需要他们部署整个系统--甚至是根本没有被修改过的部分--使整个过程充满风险。"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "GoWithFlow is in the process of moving their workloads to containers on the cloud so cloud resource consumption costs are always top-of-mind and they are always trying to find better ways to optimize memory and compute usage on the cloud."
msgstr "GoWithFlow正在将他们的工作负载转移到云上的容器，所以云资源消耗成本一直是他们关注的重点，他们一直在努力寻找更好的方法来优化云上的内存和计算使用。"

#. type: Title ==
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Lower cloud resource consumption"
msgstr "降低云资源消耗"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "When Raul Valdoleiros, Architect and DevOps Leader at GoWithFlow, first heard of Quarkus, he was extremely interested in its capabilities and features. They looked at other similar solutions in the market but after evaluating Quarkus, they decided to move forward with it. In comparing it with their existing monolithic solution, they realized the enormous memory savings introduced by Quarkus, 79% reduction in memory consumption under load, to be exact. The following table shows the results of their evaluation:"
msgstr "当GoWithFlow的架构师和DevOps负责人Raul Valdoleiros第一次听说Quarkus时，他对它的能力和特点非常感兴趣。他们看了市场上其他类似的解决方案，但在评估了Quarkus之后，他们决定继续使用它。在与他们现有的单片机解决方案的比较中，他们意识到Quarkus引入了巨大的内存节省，确切地说，在负载下内存消耗减少了79%。下表显示了他们的评估结果。"

#. type: Block title
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Evaluation results"
msgstr "评价结果"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Runtime mode"
msgstr "运行时间模式"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "RAM at startup"
msgstr "启动时的RAM"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "RAM with load"
msgstr "有负载的RAM"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Monolith"
msgstr "巨石"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "1.3 GB"
msgstr "1.3 GB"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "1.5 GB"
msgstr "1.5 GB"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Quarkus JVM-mode"
msgstr "Quarkus JVM-mode"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "90 MB"
msgstr "90 MB"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "800 MB"
msgstr "800 MB"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Quarkus native-mode"
msgstr "夸库斯原生模式"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "11 MB"
msgstr "11MB"

#. type: Table
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "320 MB"
msgstr "320 MB"

#. type: Title ==
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Rich functionality with small learning curve"
msgstr "功能丰富，学习难度小"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "Besides its low memory consumption and lightning fast startup time, GoWithFlow selected Quarkus because of the rich set of frameworks, extensions, and rich functionality included with it. Raul describes Quarkus as _\"an incredible integration project that includes functionality, like MicroProfile, Vert.x, Kafka, and Keycloak, and many others.\"_"
msgstr "除了它的低内存消耗和闪电般的启动时间，GoWithFlow选择Quarkus是因为它所包含的丰富框架、扩展和丰富的功能。Raul将Quarkus描述为 _\"一个令人难以置信的集成项目，包括的功能，如MicroProfile、Vert.x、Kafka和Keycloak，以及其他许多功能。\"_ "

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "Because Quarkus extensions are composed of frameworks and functionality that GoWithFlow developers already knew, it was very easy for them to learn and quickly become productive. Although Quarkus introduces innovative technology for running Java on the cloud and containers, developers found it familiar and were able to pick it up with a small learning curve because all its extensions were familiar to them. Nevertheless, they did spend some time familiarizing themselves with aspects related to native images and features for which Quarkus did not yet have extensions."
msgstr "因为Quarkus扩展是由GoWithFlow开发人员已经知道的框架和功能组成的，所以他们非常容易学习并迅速成为生产力。虽然Quarkus引入了在云和容器上运行Java的创新技术，但开发人员发现它很熟悉，并且能够以较小的学习曲线拿下它，因为它的所有扩展都是他们熟悉的。然而，他们确实花了一些时间来熟悉与本地图像和功能有关的方面，而Quarkus还没有这方面的扩展。"

#. type: Title ==
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "The prototype"
msgstr "原型"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "Once GoWithFlow selected Quarkus for Java development, they started a prototype project, which consisted of the implementation of 4 microservices. Using the Quarkus built-in testing harness, developers implemented automated tests, which are run during build time in both JVM and native modes. They also optimized the pipeline processes to avoid any human intervention during the deployment to production, where the microservices run in native mode. Integration testing consists of launching the application and testing the entire system through the web interface, which invokes the Quarkus microservices. All this work was accomplished by 3 developers from their Architecture team and GoWithFlow is very happy with what they have accomplished so far."
msgstr "当GoWithFlow选择Quarkus进行Java开发时，他们开始了一个原型项目，其中包括4个微服务的实现。使用Quarkus内置的测试线束，开发人员实现了自动化测试，这些测试在JVM和本地模式下的构建时间内运行。他们还优化了管道流程，以避免在部署到生产过程中的任何人工干预，其中微服务以本地模式运行。集成测试包括启动应用程序，并通过调用Quarkus微服务的Web界面来测试整个系统。所有这些工作都是由他们的架构团队的3名开发人员完成的，GoWithFlow对他们目前所完成的工作非常满意。"

#. type: Title ==
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Developer Productivity"
msgstr "开发者的生产力"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "GoWithFlow had been running their application in a monolithic application server. This meant that they had to roll out the entire application to production even if a small change had been applied to it. Besides being time consuming with releases taking 2 to 3 months, they felt that this was risky because they had to constantly release code that hadn’t been modified. In addition, developers had to wait 2 to 3 minutes to see their changes while they waited for the deployment of their changes to the application server. These lengthened the development process, which negatively impacted developer productivity and their ability to innovate and stay ahead of the competition. They worked on speeding up their development process and a key element that helped them accomplish this was the container-first approach of Quarkus. Now, they no longer have to wait months for production releases. In addition, developers can now use Quarkus live coding capabilities to test their source code changes immediately, which saves a lot of development and troubleshooting time, as described by Raul _“live coding is one of Quarkus best features if not the best one.”_"
msgstr "GoWithFlow一直在单体应用服务器中运行他们的应用程序。这意味着他们必须将整个应用推广到生产中，即使是一个小的变化。除了耗费时间，发布需要2到3个月的时间，他们认为这是有风险的，因为他们必须不断地发布没有被修改的代码。此外，开发人员不得不等待2到3分钟才能看到他们的修改，同时他们还要等待将他们的修改部署到应用服务器上。这些都延长了开发过程，这对开发人员的生产力以及他们的创新和保持竞争优势的能力产生了负面影响。他们努力加快他们的开发过程，帮助他们实现这一目标的一个关键因素是Quarkus的容器优先方法。现在，他们不再需要等待几个月的生产发布。此外，开发人员现在可以使用Quarkus的实时编码功能，立即测试他们的源代码变化，这节省了大量的开发和故障排除时间，正如Raul所描述的那样 _，\"实时编码是Quarkus最好的功能之一，如果不是最好的话。_ "

#. type: Title ==
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy, no-wrap
msgid "Future plans"
msgstr "未来计划"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "GoWithFlow currently delivers every week to production and are working on optimizing their development process with the goal of achieving continuous deployment in the future. As part of this work, they also plan to continue to break their monolith into Quarkus-based microservices by having the entire development team dedicated to this effort, a total of 10 developers. This team will also continue to develop new functionality in Quarkus."
msgstr "GoWithFlow目前每周都向生产交付，并且正在努力优化他们的开发流程，目标是在未来实现持续部署。作为这项工作的一部分，他们还计划继续将他们的单体分解成基于Quarkus的微服务，让整个开发团队专门从事这项工作，总共有10名开发人员。这个团队还将继续开发Quarkus的新功能。"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "_\"Quarkus including MicroProfile was very important to us\"_ Raul mentions when referring to their use of MicroProfile Health, MicroProfile Config, MicroProfile Fault Tolerance and MicroProfile Rest Client extensions. In the future, they plan to use MicroProfile OpenTracing to visualize requests that traverse different microservices and this is a key functionality to them."
msgstr "\"Raul在提到他们使用MicroProfile Health、MicroProfile Config、MicroProfile Fault Tolerance和MicroProfile Rest Client扩展时说： _\"Quarkus包括MicroProfile对我们非常重要_ 。在未来，他们计划使用MicroProfile OpenTracing来可视化穿越不同微服务的请求，这对他们来说是一个关键功能。"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "GoWithFlow is happy with what they have accomplished so far with Quarkus running in production in native mode and continue to collaborate with the community to foster its innovation."
msgstr "GoWithFlow 对 Quarkus 以原生模式在生产中运行所取得的成就感到满意，并将继续与社区合作，促进其创新。"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "关于Quarkus的更多信息。"

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Quarkus网站 http://quarkus.io "

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Quarkus GitHub项目: https://github.com/quarkusio/quarkus "

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Quarkus Twitter: https://twitter.com/QuarkusIO "

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Quarkus chat: https://quarkusio.zulipchat.com/ "

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkus邮件列表 https://groups.google.com/forum/#!forum/quarkus-dev "

#. type: Plain text
#: _posts/2019-11-06-gowithflow-chooses-quarkus-to-deliver-fast-to-production.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[使用 Quarkus 的四个理由]"
