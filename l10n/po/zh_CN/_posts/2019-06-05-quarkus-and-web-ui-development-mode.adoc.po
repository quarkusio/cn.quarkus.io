# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:1
#, no-wrap
msgid "kkhan"
msgstr ""

#. type: YAML Front Matter: date
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:1
#, no-wrap
msgid "2019-06-05 14:00:00.000 -0600"
msgstr ""

#. type: YAML Front Matter: layout
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:1
#, no-wrap
msgid "post"
msgstr ""

#. type: YAML Front Matter: tags
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:1
#, no-wrap
msgid "development-tips"
msgstr ""

#. type: Title =
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:1
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:9
#, no-wrap
msgid "Quarkus and Web UI Development"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:12
msgid "In this blog post we will take advantage of the respective development modes of both Quarkus and Angular CLI and see how we can develop a zero turnaround web application backed by a RESTful API on Quarkus. While I am using Angular, *the concepts are the same for other modern web application frameworks.*"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:14
msgid "The source code for this blog can be found at https://github.com/kabir/blog-quarkus-ui-development. It contains a README which explains in detail how the application was set up and how we implemented each step, addressing problems we uncovered along our way."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:16
msgid "You need to have https://nodejs.org/en/download/package-manager/[Node], https://yarnpkg.com/en/docs/install[Yarn] and https://cli.angular.io[Angular CLI] installed on your system, and familiarity with Angular and Quarkus is assumed."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:18
msgid "Clone the https://github.com/kabir/blog-quarkus-ui-development[project], and go into its folder. First run:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:20
#, no-wrap
msgid "$mvn -Dui.deps compile\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:22
msgid "This downloads all the dependencies needed to build our web application. Then run:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:24
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:95
#, no-wrap
msgid "$mvn package -Dui.dev -Dui.proxy quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:26
msgid "The `-Dui` system property enables a Maven profile to build the web application. The output directory for the web application `webapp/dist/webapp` gets bundled into the Quarkus application. We will talk about `-Dui.proxy` later on."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:28
msgid "Go to http://localhost:8080 in your browser and take a look at our sample application. It contains a few different pages. Go to the one called `Rest` which makes a REST call. We can change the return value of the https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleResource.java[`SampleServlet.hello()`] method. If you refresh the page you will see the changes made reflected automatically!"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:30
msgid "With what we have so far, if we were to make changes to the user interface in our web application, we would need to stop Quarkus and run the above command to build the web application again and restart quarkus. This is not what we want, so we take advantage of Angular's https://angular.io/guide/build#proxying-to-a-backend-server[proxy]. https://facebook.github.io/create-react-app/docs/proxying-api-requests-in-development[React] and https://cli.vuejs.org/config/#devserver-proxy[Vue] have something similar."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:32
msgid "In another terminal window go into the `webapp/` folder of the cloned project, and run:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:34
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:99
#, no-wrap
msgid "$yarn proxy\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:36
msgid "This will start the Angular development server in proxy mode on port 4200. Go to http://localhost:4200 and you will see the same application as you saw earlier on port 8080, but served by the Angular development server while accessing the REST endpoints from the running Quarkus application. If you make any changes to any of the Angular components set up in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] you will see your changes reflected."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:38
msgid "This is great!!! We can now be super-productive and make changes in both our front-end and our back-end, and see the changes immediately without needing to rebuild, repackage and restart our application!"
msgstr ""

#. type: Title ==
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:39
#, no-wrap
msgid "Adjustments Summary"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:42
msgid "The example project has already been set up with the needed adjustments to work properly both as a bundled application and in development mode. These are the main tweaks:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:44
msgid "Handle the Angular routes in the UI rather than on the back-end. This is important for the bundled version (running on port 8080)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:45
msgid "Enable the Angular proxy to allow for the UI to call REST endpoints served by Quarkus."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:46
msgid "Signal to the back-end that the front-end is running in a proxy, i.e. not served by us. This is important if the back-end needs to redirect to a page in the front-end."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:48
msgid "We will focus on the changes needed to make this work well, and not go into the details of how the application is set up."
msgstr ""

#. type: Title ===
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:49
#, no-wrap
msgid "Handle Angular Routes"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:51
msgid "Add a filter, https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/AngularRouteFilter.java[AngularRouteFilter]. The essence of its `doFilter()` method is:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:54
#, no-wrap
msgid "chain.doFilter(request, response);\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:64
#, no-wrap
msgid ""
"if (response.getStatus() == 404) {\n"
"    String path = request.getRequestURI().substring(\n"
"            request.getContextPath().length()).replaceAll(\"[/]+$\", \"\");\n"
"    if (!FILE_NAME_PATTERN.matcher(path).matches()) {\n"
"        // We could not find the resource, i.e. it is not anything known to the server (i.e. it is not a REST\n"
"        // endpoint or a servlet), and does not look like a file so try handling it in the front-end routes.\n"
"        request.getRequestDispatcher(\"/\").forward(request, response);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:67
msgid "This filter is only needed when running the application bundled in Quarkus (port 8080). It is not needed when connecting to the application running in Angular (port 4200). It's purpose is to allow us to **bookmark pages** in the application. All the server knows about are things like:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:69
msgid "the REST endpoints"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:70
msgid "deployed servlets"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:71
msgid "the resources in the `META-INF/resources/` folder of the application"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:73
msgid "The `META-INF/resources/` in our case contains the application's index.html and the transpiled resources."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:75
msgid "Without this filter, if you go to one of the Angular routes directly (e.g if you try to refresh when on http://localhost:8080/rest which is the `Rest` page we saw earlier) Quarkus will think it is a file, a REST endpoint or a servlet. Since Quarkus has no knowledge of anything called `/rest` you end up with a 404 (Not Found) status. The filter checks the status code of the request after calling `chain.doFilter()`. If the status is 404 and does not seem to be a file, we forward this request to `/`, which in turn serves up the `index.html` file. By doing a forward the path and parameters of the request are preserved. Angular then figures out that `/rest` is one of its known routes and displays the appropriate page of the application. Once the web application is loaded in the browser, Angular takes over and handles all the internal links to other routes in the web application (as an example, if you are on http://localhost:8080 and click on the link taking you to http://localhost:8080/other there is no round-trip to the server)."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:77
msgid "There are other ways you can handle this too, e.g. by checking the path against a set of hard-coded known paths that are to be handled by the back-end, but for my purposes the above has worked very well. The key is to invoke:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:79
#, no-wrap
msgid "request.getRequestDispatcher(\"/\").forward(request, response);\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:81
msgid "if it is something that should be handled by Angular."
msgstr ""

#. type: Title ===
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:83
#, no-wrap
msgid "Set up the Angular proxy"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:85
msgid "The proxy is configured in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/proxy.conf.json[proxy.conf.json]. All REST calls to anything under `/api` will be passed to the back-end running on port 8080. To run the Angular development server with this configuration, we have added a `proxy` configuration to the `scripts` section of https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/package.json[`package.json`]."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:87
msgid "In our case, we have a servlet which needs to redirect back to the front-end (something I found I needed to implement OAuth in my main project). That has a check for the `-Dui.proxy` system property we saw earlier when handling the `/callback` path in https://github.com/kabir/blog-quarkus-ui-development/blob/master/src/main/java/org/kabir/quarkus/ui/SampleServlet.java[`SampleServlet`]. If this property is set, we prepend `https://localhost:4200` (the address of the Angular proxy) to the redirect URL if we find the proxy is running on port 4200."
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:89
msgid "Finally, `DefaultComponent` in https://github.com/kabir/blog-quarkus-ui-development/blob/master/webapp/src/app/app.component.ts[`app.component.ts`] has a direct link to our servlet running in the back-end. It has a check to see if the web application is running in the proxy (i.e. its port is 4200), and if this is the case it adjusts the url from `/servlet/make-external-call` to point to the Quarkus back-end running on port 8080."
msgstr ""

#. type: Title ==
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:90
#, no-wrap
msgid "Last words"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:93
msgid "We have seen how with a minimum amount of configuration we can have both the back-end and front-end of our application running in Quarkus's and Angular's respective development modes. During development this removes the need to rebuild the application when we change something. You can just code away, and see the changes when you refresh your browser. This is done by starting Quarkus with:"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:97
msgid "and starting the Angular application (from the `webapp/` folder) with"
msgstr ""

#. type: Title ===
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:101
#, no-wrap
msgid "Packaging for development"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:103
msgid "If you want to do a rebuild now and again to package the application and run it all in Quarkus run"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:105
#, no-wrap
msgid "$mvn package -Dui.dev quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:107
msgid "By not passing in -Dui.proxy we disable the checks for whether the front-end runs in a proxy. `-Dui.dev` builds the web application so it is part of the Quarkus application."
msgstr ""

#. type: Title ===
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:108
#, no-wrap
msgid "Packaging for production"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:110
msgid "To package the application for production, use"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:112
#, no-wrap
msgid "$mvn package -Dui\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:114
msgid "`-Dui` builds the web application just like `-Dui.dev`, but it does more optimisations for production. Those optimisations take some time."
msgstr ""

#. type: Title ===
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:115
#, no-wrap
msgid "Packaging for cloud native"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:117
msgid "Finally to build a native image, make sure you have set up GraalVM as outlined https://quarkus.io/guides/building-native-image[here]. Then build the application to generate the native executable."
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:119
#, no-wrap
msgid "$mvn package -Dui -Pnative\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:121
msgid "Running this we see the super-fast startup time Quarkus gives us in native mode:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-06-05-quarkus-and-web-ui-development-mode.adoc:125
#, no-wrap
msgid ""
"$./target/blog-quarkus-ui-development-0.1.0-runner\n"
"2019-06-06 10:57:02,254 INFO  [io.quarkus] (main) Quarkus 0.15.0 started in 0.005s. Listening on: http://[::]:8080\n"
"2019-06-06 10:57:02,464 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jsonb]\n"
msgstr ""
