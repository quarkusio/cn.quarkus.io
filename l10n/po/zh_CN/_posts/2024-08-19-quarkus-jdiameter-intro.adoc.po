msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Revolutionising Telecom Microservice - Modernising JDiameter with Quarkus"
msgstr "革新电信微服务--利用 Quarkus 对 JDiameter 进行现代化改造"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "My journey of with JDiameter and Quarkus"
msgstr "我与 JDiameter 和 Quarkus 的旅程"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
msgid "Introduction"
msgstr "简介"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "The Diameter protocol serves as a cornerstone in any modern telecommunication backend, providing authentication, authorisation, and accounting (AAA) services in 3G, IMS, 4G, and 5G networks. Several vendors offer commercially licensed Diameter stacks, most of which are written in C++. As a result, many in the Java world have turned to the open-source RestComm JDiameter stack."
msgstr "Diameter 协议是任何现代电信后端的基石，可在 3G、IMS、4G 和 5G 网络中提供身份验证、授权和记账（AAA）服务。一些供应商提供商业授权的 Diameter 栈，其中大部分是用 C++ 编写的。因此，Java 世界中的许多人转向了开源 RestComm JDiameter 栈。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Developed in the early 2010s, JDiameter has not received any updates in the last seven years. A major challenge with JDiameter is its reliance on outdated dependencies—some with known Common Vulnerabilities and Exposures (CVEs)—and others that are deprecated or no longer supported. Additionally, JDiameter was written in Java 1.7, which restricts the use of modern advancements in the Java language, such as virtual threading."
msgstr "JDiameter 开发于 2010 年代初，在过去七年中没有进行过任何更新。JDiameter 面临的一个主要挑战是，它依赖于过时的依赖项--其中一些依赖项存在已知的常见漏洞和暴露 (CVE)，还有一些依赖项已被弃用或不再受支持。此外，JDiameter 是用 Java 1.7 编写的，这限制了 Java 语言中现代先进技术（如虚拟线程）的使用。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "With the shift towards microservices in telecommunications, many organisations now develop solutions that are deployed and managed using platforms like Kubernetes and OpenShift. In the Java ecosystem, developers have several microservices frameworks to choose from, with the major ones being Spring Boot, Micronaut, and my preferred choice, Quarkus."
msgstr "随着电信领域向微服务的转变，许多组织现在都在开发使用 Kubernetes 和 OpenShift 等平台部署和管理的解决方案。在 Java 生态系统中，开发人员有多个微服务框架可供选择，主要有 Spring Boot、Micronaut 和我的首选 Quarkus。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Over the past seven years, I have primarily developed solutions for charging and billing subscribers in prepaid mobile networks, including writing both a Diameter Routing Agent (DRA) and an Online Charging System (OCS). In both instances, I used Quarkus as the microservices framework and JDiameter as the Diameter stack—with much frustration, I must add."
msgstr "在过去的七年里，我主要为预付费移动网络的用户开发收费和计费解决方案，包括编写 Diameter 路由代理（DRA）和在线计费系统（OCS）。在这两种情况下，我都使用 Quarkus 作为微服务框架，并使用 JDiameter 作为 Diameter 栈--我必须补充说，这让我感到非常沮丧。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "The solutions we developed were functional, but they felt more like a Quarkus application with a JDiameter sidecar. The Diameter stack operated independently, without leveraging the benefits offered by the Quarkus framework."
msgstr "我们开发的解决方案虽然功能强大，但感觉更像是带有 JDiameter 辅助功能的 Quarkus 应用程序。Diameter 堆栈独立运行，没有利用 Quarkus 框架提供的优势。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Quarkus JDiameter Extension"
msgstr "Quarkus JDiameter 扩展"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Eventually, my frustration with the sidecar approach of integrating JDiameter with Quarkus led me to develop a solution that would allow the two to work more harmoniously. This initiative resulted in the creation of the Quarkus JDiameter extension."
msgstr "最终，我对将 JDiameter 与 Quarkus 集成在一起的并行方法感到失望，于是开发了一种能让两者更和谐地工作的解决方案。这一举措促成了 Quarkus JDiameter 扩展的诞生。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "As mentioned earlier, the RestComm JDiameter stack had been neglected and was in dire need of some attention. My first step was to modernise the JDiameter stack by removing deprecated dependencies and updating the outdated ones to their latest versions."
msgstr "如前所述，RestComm JDiameter 栈一直被忽视，亟需关注。我的第一步是删除过时的依赖项，并将过时的依赖项更新到最新版本，从而使 JDiameter 栈现代化。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "Two key changes were made to the stack. The first was removing Pico containers—an outdated dependency injection framework from the pre-Java EE era—and the second was replacing the concurrency logic from the old Thread Group model with the more modern Thread Pool model. With the introduction of thread pooling, the Diameter stack can now utilise virtual threading!"
msgstr "对堆栈进行了两项关键修改。首先是删除了 Pico 容器--一种来自前 Java EE 时代的过时依赖注入框架；其次是用更现代的线程池模型取代了旧线程组模型的并发逻辑。引入线程池后，Diameter 协议栈现在可以利用虚拟线程！"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "The next challenge was to develop a Quarkus extension to integrate the Diameter stack into the Quarkus framework. I had three main objectives with this extension:"
msgstr "下一个挑战是开发一个 Quarkus 扩展，将 Diameter 栈集成到 Quarkus 框架中。这个扩展有三个主要目标："

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "*Simplified Configuration*: Moving the configuration to the \"application.properties“ file to make the stack easier to configure."
msgstr "*简化配置* ：将配置移至 \"application.properties \"文件，使堆栈更易于配置。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "*Dependency Injection*: Enabling dependency injection of Diameter stacks and configuration into a scoped service."
msgstr "*依赖注入* ：将 Diameter 栈和配置的依赖注入到范围服务中。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "*Interceptor Service Framework*: Creating an interceptor service framework for a more straightforward implementation of Diameter applications."
msgstr "*拦截器服务框架* ：创建拦截器服务框架，以便更直接地实施 Diameter 应用程序。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
msgid "The Quarkus JDiameter stack has been released and is now part of Quarkiverse Hub. You can find it at link:https://github.com/quarkiverse/quarkus-jdiameter[Quarkiverse Hub]. Documentation for the stack is available at link:https://docs.quarkiverse.io/quarkus-jdiameter/dev/index.html[Quarkus JDiameter Documentation]."
msgstr ""

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "There is still considerable potential for tighter integration of the JDiameter stack into the Quarkus framework. A future project could involve exposing the statistics collected in the stack via the Quarkus MicroProfile Metrics interface."
msgstr "将 JDiameter 协议栈更紧密地集成到 Quarkus 框架中还有很大的潜力。未来的一个项目可能涉及通过 Quarkus MicroProfile Metrics 接口公开在栈中收集的统计数据。"

#: _posts/2024-08-19-quarkus-jdiameter-intro.adoc
#, fuzzy
msgid "If you’ve been frustrated with integrating JDiameter in a microservice environment, as I was, give the Quarkus JDiameter extension a try!"
msgstr "如果您和我一样，在微服务环境中集成 JDiameter 时遇到挫折，不妨试试 Quarkus JDiameter 扩展！"
