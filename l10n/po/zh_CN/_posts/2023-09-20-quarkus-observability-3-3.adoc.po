# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-09-26 09:09+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Observability in Quarkus 3"
msgstr "夸克 3 的可观测性"

#. type: YAML Front Matter: synopsis
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "What has changed in Observability on Quarkus from version 3.0 to 3.3."
msgstr "从 3.0 版到 3.3 版，Quarkus 上的 Observability 有哪些变化？"

#. type: Title ==
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Observability in Quarkus"
msgstr "夸克空间的可观测性"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid ""
"Observability on a software system can be described as the capability to allow a human to ask and answer questions.\n"
"To enable developers and support engineers in understanding how their applications behave, Quarkus 3.3 includes many improvements to its main observability related extensions:"
msgstr "软件系统的可观察性可以描述为允许人类提问和回答问题的能力。为了让开发人员和支持工程师了解他们的应用程序是如何运行的，Quarkus 3.3 对其主要的可观察性相关扩展进行了许多改进："

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "https://quarkus.io/guides/opentelemetry[`quarkus-opentelemetry`] (tracing)"
msgstr "link:https://quarkus.io/guides/opentelemetry[quarkus-opentelemetry] （追踪）"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "https://quarkus.io/guides/telemetry-micrometer[`quarkus-micrometer`] (metrics)"
msgstr "link:https://quarkus.io/guides/telemetry-micrometer[quarkus-micrometer] (度量)"

#. type: Title ==
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "OpenTelemetry"
msgstr "开放式遥测"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "https://opentelemetry.io/docs/concepts/signals/traces/[OpenTelemetry tracing] is used to understand the flow of requests as they traverse through multiple services."
msgstr "link:https://opentelemetry.io/docs/concepts/signals/traces/[OpenTelemetry 跟踪] 技术用于了解请求在多个服务中的流动情况。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "The `quarkus-opentelemetry` extension already had a major upgrade on https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.0#opentelemetry[Quarkus 3.0], where the configurations aligned with the ones used by the OpenTelemetry (OTel) community. This made available many configurations that were not previously available in Quarkus. Other improvements include:"
msgstr "`quarkus-opentelemetry` 扩展已在 link:https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.0#opentelemetry[Quarkus 3.0] 上进行了重大升级，其中的配置与 OpenTelemetry (OTel) 社区使用的配置一致。这使得许多以前在 Quarkus 中无法使用的配置变得可用。其他改进包括"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "The OpenTelemetry extension can be used in dev mode and now reloads properly."
msgstr "OpenTelemetry 扩展可在开发模式下使用，现在可正常重新加载。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "OTel Service Provider Interface (SPI) hooks for Sampler and SpanExporter were made available along with the existing user implementations with CDI for many OTel classes: `IdGenerator`, Resource attributes, `Sampler` and `SpanProcessor`."
msgstr "用于 Sampler 和 SpanExporter 的 OTel 服务提供商接口 (SPI) 钩子与许多 OTel 类的 CDI 现有用户实现一起提供： `IdGenerator` 资源属性、 `Sampler` 和 `SpanProcessor` 。"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "At the same time, the JDBC tracing activation was made simpler, just requiring the use of a property:"
msgstr "同时，JDBC 跟踪激活也变得更加简单，只需使用一个属性即可："

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "On https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.3#opentelemetry-otel[Quarkus 3.3] many improvements were made to the `quarkus-opentelemetry` extension. The most impactful ones are"
msgstr "link:https://github.com/quarkusio/quarkus/wiki/Migration-Guide-3.3#opentelemetry-otel[Quarkus 3.3] 对 `quarkus-opentelemetry` 扩展进行了许多改进。其中影响最大的是"

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Removal of the OkHttp dependency"
msgstr "移除 OkHttp 依赖关系"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "In previous versions of the Quarkus exporter used the upstream OTel libraries and leveraged the OkHttp library to send the spans to the OTel Collector. This unnecessary dependency was removed and replaced by Quarkus specific Vert.x GRPC and HTTP clients. As previously, the exporter continues to be automatically wired with CDI, that’s why the `quarkus.otel.traces.exporter` property defaults to `cdi` on Quarkus 3+."
msgstr "以前版本的 Quarkus 输出程序使用上游 OTel 库，并利用 OkHttp 库将跨度发送到 OTel 收集器。这一不必要的依赖已被移除，取而代之的是 Quarkus 特定的 Vert.x GRPC 和 HTTP 客户端。与之前一样，输出程序将继续自动与 CDI 连接，这就是为什么在 Quarkus 3+ 上 `quarkus.otel.traces.exporter` 属性默认为 `cdi` 的原因。"

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Exporter support fot the HTTP protocol"
msgstr "支持 HTTP 协议的输出程序"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Up until Quarkus 3.2, the OTel exporter could only use the GRPC protocol, while Quarkus now supports HTTP as well. To use the new HTTP protocol, the `quarkus.otel.exporter.otlp.traces.protocol` property must be set to `http/protobuf`. The `quarkus.otel.traces.exporter.endpoint` property must also be set to the OTel Collector HTTP endpoint. Here's an example when using 4318, the default HTTP port on the OTel Collector:"
msgstr "在 Quarkus 3.2 之前，OTel 输出程序只能使用 GRPC 协议，而 Quarkus 现在也支持 HTTP。要使用新的 HTTP 协议，必须将 `quarkus.otel.exporter.otlp.traces.protocol` 属性设置为 `http/protobuf` 。还必须将 `quarkus.otel.traces.exporter.endpoint` 属性设置为 OTel Collector HTTP 端点。下面是一个使用 4318（OTel 收集器的默认 HTTP 端口）的示例："

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Exporters support TLS"
msgstr "出口商支持 TLS"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Both GRPC and HTTP exporters now support Transport Layer Security (TLS) and custom certificates."
msgstr "GRPC 和 HTTP 输出程序现在都支持传输层安全（TLS）和自定义证书。"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Like the other rest clients in Quarkus, the exporter's certificate verification will also be disabled if you set:"
msgstr "与 Quarkus 中的其他其他客户端一样，如果设置了以下选项，输出器的证书验证也将被禁用："

#. type: delimited block =
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "This setting should not be used in production as it will disable any kind of SSL verification."
msgstr "这个设置不应该在生产中使用，因为它将禁用任何形式的SSL验证。"

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Customise the propagation header"
msgstr "自定义传播标题"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "We added a way to customise the propagation header."
msgstr "我们添加了自定义传播标题的方法。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "You can create a CDI bean implementing the `TextMapPropagatorCustomizer` interface."
msgstr "您可以创建一个实现 `TextMapPropagatorCustomizer` 接口的 CDI Bean。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "This can be used to restrict propagation of OpenTelemetry trace headers and prevent potentially sensitive data to be sent to third party systems."
msgstr "这可用于限制 OpenTelemetry 跟踪头的传播，防止潜在敏感数据被发送到第三方系统。"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "This is an example of a customizer that removes the Baggage header:"
msgstr "这是一个移除行李标题的自定义器示例："

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Identify the user in the spans"
msgstr "在跨度中识别用户"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Valuable debugging information about the user related to each span can be added by setting:"
msgstr "通过设置，可以添加与每个跨度相关的宝贵的用户调试信息："

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "The user’s ID and roles will be added to the span attributes, if available."
msgstr "如果有的话，用户 ID 和角色将被添加到跨度属性中。"

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Hardening"
msgstr "硬化"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Many bug fixes and small improvements were made to the extension, including:"
msgstr "对扩展进行了许多错误修复和小幅改进，包括"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Reduce the memory allocation needed to report spans."
msgstr "减少报告跨度所需的内存分配。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Fix the `http.route` span attribute value in some cases."
msgstr "修复 `http.route` span 属性值在某些情况下的问题。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Properly report of the `service.name` value. The value can be set in 3 different properties, from higher to lower priority:"
msgstr "正确报告 `service.name` 值。该值可在 3 个不同的属性中设置，优先级从高到低："

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "`quarkus.otel.service.name`"
msgstr "`quarkus.otel.service.name`"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "`quarkus.otel.resource.attributes`"
msgstr "`quarkus.otel.resource.attributes`"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "`quarkus.application.name`"
msgstr "`quarkus.application.name`"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Exception's stack traces are now reported in the span attributes."
msgstr "现在会在 span 属性中报告异常的堆栈跟踪。"

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "OpenTelemetry upgrades."
msgstr "OpenTelemetry 升级。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "OTel moves fast! Since working on Quarkus 3.0 we have performed 7 version upgrades, moving `opentelemetry-java` from version 1.21.0 to 1.28.0."
msgstr "OTel 行动迅速！自开发 Quarkus 3.0 以来，我们进行了 7 次版本升级，将 `opentelemetry-java` 从 1.21.0 版升级到 1.28.0 版。"

#. type: Title ==
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Micrometer"
msgstr "千分尺"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Metrics in Quarkus are based on the https://micrometer.io/[Micrometer library]. Data can be exported directly to Prometheus with the `quarkus-micrometer-registry-prometheus extension`. If you want to send data to an OTel Collector, you can use the https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/micrometer-registry-otlp.html[`quarkus-micrometer-registry-otlp`] Quarkiverse extension, among https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/index.html[other options]."
msgstr "Quarkus 中的度量指标基于 link:https://micrometer.io/[Micrometer 库] 。数据可以通过 `quarkus-micrometer-registry-prometheus extension` 直接导出到 Prometheus。如果要将数据发送到 OTel 收集器，可以使用 link:https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/micrometer-registry-otlp.html[quarkus-micrometer-registry-otlp] Quarkiverse 扩展等 link:https://docs.quarkiverse.io/quarkus-micrometer-registry/dev/index.html[选项] 。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "These were some of the recent improvements to the `quarkus-micrometer` extension:"
msgstr "这些都是 `quarkus-micrometer` 扩展程序最近的一些改进："

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Netty allocator metrics"
msgstr "净分配器指标"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "The extension will now provide Netty allocation metrics by default. Netty uses  memory allocators to pool the memory buffers for reuse. These metrics will give you a deeper understanding of the memory usage of your application. Direct and Heap memory usage will be reported."
msgstr "现在，该扩展将默认提供 Netty 分配指标。Netty 使用内存分配器来集中内存缓冲区，以便重复使用。这些指标将让你更深入地了解应用程序的内存使用情况。将报告直接内存和堆内存的使用情况。"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "To disable these metrics, please set:"
msgstr "要禁用这些指标，请设置："

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Custom tags with HTTP server data"
msgstr "带有 HTTP 服务器数据的自定义标记"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Customise emitted tags by creating a CDI bean implementing the `HttpServerMetricsTagsContributor` interface. This allows user code to compute arbitrary tags based on the details of HTTP requests. This is an implementation example were the `Foo` header value is used to set the `foo` tag."
msgstr "通过创建一个实现 `HttpServerMetricsTagsContributor` 接口的 CDI Bean 来定制所发出的标记。这样，用户代码就可以根据 HTTP 请求的详细信息计算任意标签。这是一个实施示例，其中 `Foo` 头值用于设置 `foo` 标签。"

#. type: delimited block =
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Only set tags with low cardinality values, meaning that the number of possible different values is low. For example, a tag with the HTTP method is a good candidate, but a tag with the HTTP full path is not."
msgstr "只设置具有较低 cardinality 值的标签，即可能的不同值较少。例如，带有 HTTP 方法的标签是一个很好的候选标签，但带有 HTTP 全路径的标签则不是。"

#. type: Title ===
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy, no-wrap
msgid "Use `MeterRegistryCustomizer` for arbitrary customizations to meter registries"
msgstr "使用 `MeterRegistryCustomizer` 对仪表注册表进行任意定制"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid ""
"By providing CDI beans that implement `io.quarkus.micrometer.runtime.MeterRegistryCustomizer`, the user code can change the configuration of any `MeterRegistry` that has been activated.\n"
"Unless an implementation is annotated with `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint`, the customization applies to all `MeterRegistry` instances."
msgstr "通过提供实现 `io.quarkus.micrometer.runtime.MeterRegistryCustomizer` 的 CDI Bean，用户代码可以更改任何已激活的 `MeterRegistry` 的配置。除非某个实现注释为 `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint` ，否则定制将适用于所有 `MeterRegistry` 实例。"

#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "This is a method example with a customizer that sets the `foo` tag oo all metrics:"
msgstr "这是一个带有自定义器的方法示例，可设置 `foo` 标记 oo 所有度量指标："

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "and emitted metrics by implementing `MeterRegistryCustomizer`."
msgstr "并通过实施 `MeterRegistryCustomizer` 排放指标。"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Some small bug fixes and other features like:"
msgstr "一些小错误修复和其他功能，如"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Auth failures will now populate the metrics URI tag."
msgstr "现在，认证失败会弹出度量 URI 标签。"

#. type: Title ==
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, no-wrap
msgid "Conclusion"
msgstr "解决方案"

#. type: Plain text
#: _posts/2023-09-20-quarkus-observability-3-3.adoc
#, fuzzy
msgid "Quarkus observability extensions have now improved across the board. We currently recommend using OpenTelemetry for tracing and Micrometer for metrics and export all the data using OTel's OTLP protocol to the OpenTelemetry Collector. This will allow you to use the best of both worlds."
msgstr "Quarkus 的可观测性扩展功能现已全面改进。我们目前建议使用 OpenTelemetry 进行跟踪，使用 Micrometer 进行度量，并使用 OTel 的 OTLP 协议将所有数据导出到 OpenTelemetry 收集器。这样，您就可以同时使用这两种技术。"
