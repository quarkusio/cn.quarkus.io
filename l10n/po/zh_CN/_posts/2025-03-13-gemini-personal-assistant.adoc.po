msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Secure Agentic AI with Quarkus and Google Gemini"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Explain how Quarkus LangChain4j and OIDC can help to create secure agentic Google Gemini AI services"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Introduction"
msgstr "简介"

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] project provides top-class integration between Quarkus and https://github.com/langchain4j/langchain4j[LangChain4j], helping developers to create Generative and Agentic AI agents."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Agentic AI in particular, which https://blogs.nvidia.com/blog/what-is-agentic-ai/[uses sophisticated reasoning and iterative planning to autonomously solve complex, multi-step problems], is getting a lot of the developer's attention today. You are encouraged to read https://quarkus.io/blog/agentic-ai-with-quarkus/[Agentic AI with Quarkus - part 1] and https://quarkus.io/blog/agentic-ai-with-quarkus-p2/[Agentic AI with Quarkus - part 2] blog posts and learn about techniques and patterns for creating Agentic AI agents with https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j]."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "In this article, we introduce `Gemini Personal Assistant`, Secure Agentic AI agent which helps the currently logged-in user to analyze scheduled events, update and create new events, and keep an eye on event conflicts in the user's Google calendars."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Agentic AI and user identity"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Agentic AI does not work in isolation. To provide a personalized advice the AI service which works with multiple users must be able to access a user identity."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "The user identity acts as a glue between LLM and the user-specific, changing data."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Integrated AI security"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "It is necessary to note that for an AI agent that can work with the users data to make it to production, it must be secured."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "But what does creating a secure AI agent involve ?"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "AI security is a complex topic, and it will be covered in depth in the https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] documentation. https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] already offers an important https://docs.quarkiverse.io/quarkus-langchain4j/dev/guardrails.html[Guardrails] AI security feature, supporting the data verification and prompt anonimization."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "For the purpose of this article, an important point is that AI security is an integral part of your application's security architecture."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid ""
"Only authenticated users can access the sensitive application data. It is the case with or without AI being involved.\n"
"Agentic AI agents that are allowed to work with the user data can only be accessible by the authenticated users, for the AI be able to work with the user identity."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Designing an integrated application and AI security architecture is essential for creating secure, capable, production-quality Agentic AI agents."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "API keys versus access tokens"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Using API keys provides an easiest option for accessing LLM:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "When an AI service serves many users in the organization, the API key must be organization wide for everyone in the organization be able to have their data analyzed by LLM. API key is a long time token which must be kept secured."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "If your application works with users who log-in with an OpenId Connect provider such as Google, which also hosts LLM, managing API keys with a long lifespan safely is a security challenge that can be avoided given that the time-constrained access tokens acquired during the Google authentication are already available. Furthermore, the organization wide API keys can not be used to access Google services on behalf of the currently logged-in user."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "As you can see, using access tokens to access Gemini looks similar to using API keys. The difference is, the access token is scoped by the current user authentication, it is time constrained and it can be used to access any Google service that requires an access token."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Using access tokens fits into the integrated security concept perfectly: users login to your application with Google using an OpenId Connect authorization code flow, the application propagates an access token acquired as part of this flow to Google services to access them on behalf of the authenticated user, with the Google Gemini service being only one of such services. The user logs out, the session and the corresponding ID and access tokens are deleted."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "And the security bonus point is that the current user will be asked by Google, after the authentication is complete, to authorize your application to use Generative API on the user's behalf."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Therefore, we will work with the access tokens."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid ""
"https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] supports two Gemini model providers, https://ai.google.dev/[AI Gemini] and https://cloud.google.com/vertex-ai[Vertex AI Gemini].\n"
"https://ai.google.dev/[AI Gemini] can accept both API keys and access tokens while https://cloud.google.com/vertex-ai[Vertex AI Gemini] requires access tokens."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "For the moment, we will use https://cloud.google.com/vertex-ai[Vertex AI Gemini], however we plan to switch to https://ai.google.dev/[AI Gemini] due to its simpler configuration soon."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Gemini Personal Assistant"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Ok, let's create our secure Gemini Personal Assistant."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Architecture"
msgstr "应用结构"

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Gemini Personal Assistant is a WebSockets chatbot which is only available to users authenticated with Google."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Users who login to the application with Google can access the Personal Assistant bot and ask it to help to analyze and manage the schedule for the next few days or weeks."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "The Personal Assistant is able to greet the logged-in user by name and access Google Calendar API on behalf of the user, inform about the schedule, add new events, modify events and warn about the conflicts."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "We are going to look at the key dependencies, configuration properties and code fragments."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "You can find the complete project source https://github.com/sberyozkin/quarkus-langchain4j-gemini[here]."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Maven dependencies"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Add the following dependencies:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "`quarkus-websockets-next` is required to support WebSockets for the chat bot."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "`quarkus-oidc` is required to secure the Quarkus endpoint which uses AI service"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "`quarkus-rest-client-oidc-token-propagation` supports access token propagation to Google services such as Google Calendar"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "`quarkus-langchain4j-oidc-model-auth-provider` supports access token propagation to remote model providers such as Vertex AI Gemini"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "`quarkus-langchain4j-vertex-ai-gemini` brings Vertex AI Gemini model provider extension"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Configuration"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Next we create the configuration:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Require Google authentication."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Follow https://quarkus.io/guides/security-openid-connect-providers#google[steps described in the Quarkus OIDC documentation] to register a Quarkus application in Google Cloud and use the generated application client id and secret, and note the Google project id."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Request that an access token issued after the user authentication has permissions to access generative API provided by Gemini and Calendar API for the AI Service tools support. Users will be asked to authorize the registered application to access these APIs on the user's behalf."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Configure the Gemini model id. Note that no API key is configured: the `quarkus-langchain4j-oidc-model-auth-provider` dependency will make sure the current Google user access token is propagated to Google Gemini."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Specify the Google project id."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Configure Calendar API base URL for the Google Calendar tool to work."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Implementation"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Now we create the AI service:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid ""
"The system prompt is the most important feature of this AI service. It requires a lot of tuning to get the best out\n"
"of Gemini. For example, note the `logged-in user` text matches one of the tool descriptions below for Gemini to get the information related to the currently logged in user. Providing precise information about API that Gemini may need to work with is very important. Please try to tune it futher during your experiments with Gemini Personal Assistant."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Request Gemini to evaluate a question about the schedule within the provided time bounds."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Gemini Personal Assistant depends on two tools to get the user-specific login information:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Tools can only be accessed if the authenticated user initiated the Gemini query."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Use the ID token acquired during the Google authorization code flow authentication as a user identity representation."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Use the current user identity to get the user's full name for Gemini to greet the user."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Return an email address of the currently logged in user. For example, Gemini can use this tool to find a primary calendar whose description matches the user's email address."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "It also uses a Google Calendar REST client tool to deal with the user requests about the schedule:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid ""
"Use the access token acquired during the Google authorization code flow authentication to access Calendar API on the user's behalf.\n"
"The token propagation with a single annotation only is supported by `quarkus-rest-client-oidc-token-propagation`."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "REST client method tool for getting a list of calendars"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "REST client method tool for getting a list of events"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "REST client method tool for updating events"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Tool parameter types which are also described in the system prompt."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Next task is to ensure that Gemini Personal Assistant is available to the authenticated users only:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Require that WebSockets Upgrade can succeed only if the user is authenticated and that the security identiy is bound to the connection."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Greet the user; Gemini Personal Assistant is not busy yet at this point."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Ask Gemini Personal Assistant to work with the user query about the schedule within the provided time bounds."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Google Login, logout and user interaction support"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Please check the complete https://github.com/sberyozkin/quarkus-langchain4j-gemini[Gemini Personal Assistant] project source to see how Google login, logout and other user interactions are managed. We do not cover it here since the way it is done is not directly related to the work of Gemini Personal Assistant."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Trying it out"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Now it is time to see what Gemini Personal Assistant can really do."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Start the application in the dev mode:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "and go to `http://localhost:8080`:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "After you login with Google, you will be greeted and offered an option to work with Gemini Personal Assistant:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "After selecting the Personal Assistant icon, you will be greated by Personal Assistant. Let's ask it something about the schedule:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Personal Assistant has managed to get a user name and a list of user calendars with the help of tools."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Let's ask it to check the primary calendar:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "I asked it to use the one with my email address and the assitant was able to find it with the help from one of the tools which provides my email address. Sometimes, Personal Assistant can figure out which calendar is a primary one from the system prompt alone, which informs it that a calendar whose `primary` field is set to `true` is a primary calendar. But sometimes it needs hints."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Now it gives the schedule update:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Actually, as it happens, my friend just called and asked to delay our scheduled lunch by 1 hour, let's ask Gemini Personal Assistant to do it:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "And I can confirm my primary calendar was updated successfully, with the event rescheduled for 1 hour later. We'll touch on how to manage tools with side-effects later in this post."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Let's ask the question about the events from another calendar:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Personal Assistant is learning so it may need a bit of help to find the right calendar:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "and now it is happy to give an update:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "It also offers its help to add it to (another) calendar. Let's say yes, but I'm not sure it does not conflict with other events in my primary calendar:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Gemini Personal Assistant assures me that no, there is no conflict:"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "And we can continue the conversation with a friendly Gemini Personal Assistant."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "How Agentic Gemini Personal Assistant is ?"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "So, Gemini Personal Assistant helped us with queries about the schedule, event modifications and conflict checks."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "You may be asking, is it really Agentic AI which is expected to https://blogs.nvidia.com/blog/what-is-agentic-ai/[use sophisticated reasoning and iterative planning to autonomously solve complex, multi-step problems] ?"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Speaking about the calendars alone, if you have a busy schedule with events coming from multiple calendars, having an AI agent which can help you manage the schedule is Agentic AI."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "In this demo we have only asked questions and got answers."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "But it is not dificult to imagine an application running a background (autonomous) calendar check and broadcasting a message to the logged in user when a new event got added to one of the calendar. The agent can check user-specific data in the local database or other Google services such as GMail, inform the user accordingly, help the user to react to the data coming out of multiple sources at the same time."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "The foundation block which makes Gemini Personal Assistant ready to help to as many users in the organization as necessary is in place: it can access the user identity. Sky is the limit to what it can do with the user-specific data."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Security Considerations"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "We have dealt with several important security considerations."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "The obvious consideration is that you do not want to allow unauthenticated access to LLM which works with the sensitve data. It is common sense and not specific to the AI security domain."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "The tricker issue is how to prevent LLM making mistakes when calling tools with side-effects. For example, if you look at the Google Calendar REST API client tool which allows to modify the event, you will note the `calendarId` parameter - the agent finds the id of a specific calendar from the list of calendars. How can the user be protected from the event beng moved to the wrong calendar ?"
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "The https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] team is looking at various options such as guardrails and hallucination strategies for tools."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "You can also have your tool do the checks before making an actual call. For example, instead of having a declarative REST client tool that can update calendars, have a Tool bean which injects Google Calendar REST client and enforces that a calendar update event call is allowed only if it is `PersonalAssistant` calendar which is about to be updated."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "As far as the actual chat-bot implementation is concerned, ensuring a secure WebSockets HTTP upgrade is critical but it is complicated by the fact that JavaScript WebSockets API does not enforce the same origin requirement. Nonetheless, using a technique such as a custom ticketing system, combined with using a secure `wss:` scheme can help to minimize risks. Look at the https://github.com/quarkiverse/quarkus-langchain4j/tree/main/samples/secure-sql-chatbot[secure-sql-chatbot] demo in the https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] repository for more details."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Please note that using WebSockets is not a pre-requisite for implementing a Personal Assistant. You can use JAX-RS, Qute, SSE instead."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "In this post, we have introduced Secure Agentic Gemini Personal Assistant."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Are you thinking about actually making AI work in production ? https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] is here to help."
msgstr ""

#: _posts/2025-03-13-gemini-personal-assistant.adoc
msgid "Enjoy !"
msgstr ""
