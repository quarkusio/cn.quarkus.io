msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Optimizing Java for the Cloud-Native Era with Quarkus"
msgstr "利用 Quarkus 为云原生时代优化 Java"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"This blog post invites you to discover how Quarkus can help your company cut "
"costs, streamline development, and modernize your Java stack for today’s "
"cloud-native world."
msgstr "这篇博文邀请您了解 Quarkus 如何帮助您的公司降低成本、简化开发流程，并使您的 Java 栈现代化，以适应当今的云原生世界。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Intro"
msgstr "介绍"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"This post explores how Quarkus can help organizations reduce costs, "
"streamline development, and modernize their Java applications for today’s "
"cloud-native environments.\n"
"It outlines the real-world benefits of adopting Quarkus and highlights how "
"its core features address the performance and scalability challenges "
"commonly associated with traditional Java frameworks."
msgstr ""
"这篇文章探讨了 Quarkus 如何帮助企业降低成本、简化开发流程，并使其 Java "
"应用程序现代化，以适应当今的云原生环境。文章概述了采用Quarkus在现实世界中的好处，并重点介绍了Quarkus的核心功能如何解决传统Java框架通常面临的性能和可扩展性挑战。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus is already being adopted across industries.\n"
"One example is Orange, a global telecom provider that selected Quarkus to "
"support its 5G API initiative, and benefited from fast startup times, a "
"lightweight footprint, and seamless integration with Kubernetes."
msgstr ""
"各行各业都已采用 Quarkus。其中一个例子是全球电信供应商Orange选择Quarkus来支持其5G "
"API计划，并受益于快速启动时间、轻量级足迹以及与Kubernetes的无缝集成。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"After evaluating multiple frameworks, Orange chose Quarkus as the optimal "
"solution for exposing 5G APIs, thanks to its fast startup, lightweight "
"footprint, modularity, and seamless Kubernetes deployment.\n"
"Quarkus successfully deployed 10 APIs across 4G/5G network cores, with "
"smooth upgrades and optimized resource usage.\n"
"This solidified Quarkus as a key technology for telecom innovation."
msgstr ""
"在对多个框架进行评估后，Orange 选择 Quarkus 作为公开 5G API 的最佳解决方案，这得益于其快速启动、轻量级占用空间、模块化和 "
"Kubernetes 的无缝部署。Quarkus成功地在4G/5G网络核心部署了10个API，并实现了平滑升级和优化资源使用。这巩固了 Quarkus "
"作为电信创新关键技术的地位。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"For a collection of user stories from the community, see the link:https://"
"quarkus.io/userstories/[Quarkus user stories blog] series.\n"
"These stories highlight how different teams and organizations are using "
"Quarkus in the real world."
msgstr ""
"如需了解来自社区的用户故事，请参阅 link:https://quarkus.io/userstories/[Quarkus 用户故事博客] "
"系列。这些故事重点介绍了不同团队和组织如何在现实世界中使用 Quarkus。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "What does Quarkus have to offer?"
msgstr "夸克斯能提供什么？"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Developer joy with live coding and dev mode"
msgstr "实时编码和开发模式让开发人员乐在其中"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus streamlines the traditional write-compile-deploy-refresh cycle by "
"offering live coding support out of the box. As developers make changes, "
"Quarkus automatically detects, recompiles, and redeploys the application, "
"which eliminates the need for manual restarts."
msgstr ""
"Quarkus 通过提供开箱即用的实时编码支持，简化了传统的编写-编译-部署-刷新周期。当开发人员进行修改时，Quarkus "
"会自动检测、重新编译并重新部署应用程序，从而消除了手动重启的需要。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"While similar functionality has existed through third-party tools, Quarkus "
"integrates it natively and without licensing overhead. This significantly "
"boosts productivity and enhances the developer experience."
msgstr "虽然类似的功能已通过第三方工具实现，但 Quarkus 将其原生集成，且无需支付许可费用。这大大提高了工作效率，增强了开发人员的体验。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Cost efficiency and performance"
msgstr "成本效益和性能"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"By optimizing for low memory usage and fast startup times, Quarkus enables "
"higher-density deployments and rapid scaling.\n"
"For comparable workloads, Quarkus typically consumes fewer resources such as "
"CPU and memory, which can lead to significant cost savings in cloud "
"environments.\n"
"However, organizations considering the switch should always measure and "
"evaluate their specific workloads to validate these benefits in practice."
msgstr ""
"通过优化低内存使用率和快速启动时间，Quarkus "
"可以实现更高密度的部署和快速扩展。对于可比的工作负载，Quarkus通常消耗更少的CPU和内存等资源，从而在云环境中大大节约成本。不过，考虑转换的企业应始终衡量和评估其特定工作负载，以便在实践中验证这些优势。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Reactive at its core"
msgstr "核心是反应"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"At its core, Quarkus is built on Eclipse Vert.x, a high-performance reactive "
"toolkit.\n"
"Still, it allows developers to work primarily in an imperative style while "
"leveraging the performance benefits of its reactive underpinnings.\n"
"This hybrid approach allows developers to squeeze out even more efficiency "
"from traditional imperative programming while offering the flexibility to "
"adopt reactive patterns where they make sense.\n"
"Unlike traditional reactive-only frameworks, Quarkus enables developers to "
"combine both imperative and reactive styles in a single application.\n"
"This is particularly beneficial for systems requiring high throughput and "
"low latency, ensuring that applications remain robust under heavy load.\n"
"Quarkus's reactive model makes it ideal for event-driven architectures and "
"microservices."
msgstr ""
"Quarkus 的核心是基于 Eclipse Vert."
"x，这是一个高性能的反应式工具包。不过，它允许开发人员主要以命令式风格工作，同时利用其反应式基础的性能优势。这种混合方法允许开发人员从传统的命令式编程中榨取更多的效率，同时在合理的地方灵活地采用反应式模式。与传统的反应式框架不同，Quarkus "
"能让开发人员在单个应用程序中结合命令式和反应式两种风格。这对于要求高吞吐量和低延迟的系统尤为有利，可确保应用程序在高负载情况下保持稳健。Quarkus "
"的反应模型使其成为事件驱动架构和微服务的理想选择。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "A basic example of reactive messaging in Quarkus:"
msgstr "Quarkus 中反应式消息传递的一个基本示例："

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"In this example, prices are received from one channel (`prices`), converted, "
"and sent to another channel (`converted-prices`).\n"
"This pattern supports high-throughput, event-driven processing with clean "
"and efficient logic."
msgstr ""
"在此示例中，价格从一个通道 ( `prices` ) 接收，转换后发送到另一个通道 ( `converted-prices` ) "
"。这种模式以简洁高效的逻辑支持高吞吐量、事件驱动处理。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"An example of a reactive HTTP endpoint using reactive routes in Quarkus:"
msgstr "在 Quarkus 中使用反应路由的反应式 HTTP 端点示例："

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"This route handles HTTP GET requests reactively using `Uni` from Mutiny, "
"making it easy to build non-blocking, low-latency APIs."
msgstr "该路由使用 Mutiny 的 `Uni` 对 HTTP GET 请求进行反应式处理，从而轻松构建无阻塞、低延迟的应用程序接口。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Which of your current development pains could Quarkus solve?"
msgstr "Quarkus 可以解决您当前的哪些开发痛点？"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"One often-overlooked benefit of Quarkus is how it improves onboarding and "
"standardization across teams.\n"
"With built-in conventions, automatic service provisioning, and curated "
"extension defaults, Quarkus helps developers get up to speed quickly and "
"encourages consistent patterns across projects."
msgstr ""
"Quarkus 的一个经常被忽视的优点是它如何改善团队间的入职培训和标准化。通过内置的惯例、自动服务供应和精心设计的扩展默认设置，Quarkus "
"可以帮助开发人员快速上手，并鼓励各项目采用一致的模式。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
msgid "Dev Services"
msgstr "开发服务"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus Dev Services reduce friction during development and testing by "
"automatically provisioning required services such as databases, message "
"brokers, or identity providers.\n"
"For example, if your application includes PostgreSQL, Kafka, or Keycloak "
"extensions, Quarkus can spin up the necessary containers without any manual "
"setup.\n"
"This allows you to focus on coding instead of configuring infrastructure, "
"accelerating your local development workflow."
msgstr ""
"Quarkus Dev "
"Services可以自动配置数据库、消息代理或身份提供商等所需服务，从而减少开发和测试过程中的摩擦。例如，如果你的应用包含PostgreSQL、Kafka或Keycloak扩展，Quarkus就可以启动必要的容器，而无需任何手动设置。这样，你就可以专注于编码，而不是配置基础设施，从而加快本地开发工作流程。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Vast extension ecosystem"
msgstr "庞大的扩展生态系统"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus offers a rich extension ecosystem that simplifies integration with "
"essential technologies such as databases, messaging systems, authentication "
"providers, and cloud services.\n"
"In addition to official extensions, the Quarkiverse community provides a "
"growing collection of open-source extensions maintained by contributors "
"across the ecosystem.\n"
"This broadens the range of supported technologies and enables developers to "
"benefit from shared solutions and community expertise."
msgstr ""
"Quarkus 提供了一个丰富的扩展生态系统，可简化与数据库、消息系统、身份验证提供商和云服务等基本技术的集成。除了官方扩展之外，Quarkiverse "
"社区还提供了由整个生态系统的贡献者维护的不断增长的开源扩展。这扩大了支持技术的范围，使开发人员能够从共享解决方案和社区专业知识中获益。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Popular extensions include:\n"
"* `quarkus-hibernate-orm` and `quarkus-jdbc-postgresql` for seamless data "
"persistence.\n"
"* `quarkus-smallrye-reactive-messaging` and `quarkus-kafka-client` for "
"reactive messaging and Apache Kafka integration.\n"
"* `quarkus-oidc` for implementing OpenID Connect authentication and securing "
"applications.\n"
"* `quarkus-micrometer` and `quarkus-opentelemetry` for observability, "
"metrics, and tracing.\n"
"* `quarkus-container-image-docker` and `quarkus-kubernetes` for "
"containerization and deployment to Kubernetes platforms."
msgstr ""
"流行的扩展包括* `quarkus-hibernate-orm` 和 `quarkus-jdbc-postgresql` 用于无缝数据持久化。* "
"`quarkus-smallrye-reactive-messaging` 和 `quarkus-kafka-client` 用于反应式消息传递和 "
"Apache Kafka 集成。* `quarkus-oidc` 用于实施 OpenID Connect 身份验证和确保应用程序安全。* "
"`quarkus-micrometer` 和 `quarkus-opentelemetry` 用于可观察性、度量和跟踪。* `quarkus-"
"container-image-docker` 和 `quarkus-kubernetes` 用于容器化和部署到 Kubernetes 平台。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"These extensions are widely adopted because they reduce boilerplate, provide "
"reliable default configurations out of the box, and follow cloud-native best "
"practices—making it easy to plug Quarkus into real-world architectures."
msgstr ""
"这些扩展之所以被广泛采用，是因为它们减少了模板，提供了可靠的开箱即用默认配置，并遵循云原生最佳实践，使Quarkus可以轻松地接入现实世界的架构中。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"“OK, I would like to try it, but is it easy enough to migrate my workflow to "
"Quarkus?”"
msgstr "\"好吧，我想试试，但将我的工作流程迁移到 Quarkus 是否足够简单？"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Migrating to a new framework can feel daunting, even when it promises better "
"performance, lower costs, and an improved developer experience.\n"
"It’s like being offered a better house in a better neighborhood, but "
"hesitating because of the hassle of packing, moving, and settling in."
msgstr ""
"迁移到一个新的框架可能会让人望而生畏，即使它能带来更好的性能、更低的成本和更佳的开发人员体验。这就好比有人提出要在更好的社区买更好的房子，但却因为打包、搬家和安顿的麻烦而犹豫不决。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"With Quarkus, the transition doesn’t have to be disruptive.\n"
"Thanks to its compatibility with standard Java APIs, support for Jakarta EE "
"and Spring, and a wide range of extensions, many projects can adopt Quarkus "
"incrementally without rewriting existing code.\n"
"Whether you're coming from a traditional Java EE application server, a "
"Spring-based stack, or another framework such as Micronaut or Dropwizard, "
"Quarkus provides familiar APIs, tooling, and migration guides to ease the "
"transition.\n"
"The platform supports commonly used Jakarta specifications like JAX-RS, CDI, "
"JPA, and Bean Validation out of the box.\n"
"For Spring users, the compatibility layer includes support for widely used "
"annotations and components.\n"
"See the link:https://quarkus.io/guides/spring-di[Spring DI guide] to learn "
"more."
msgstr ""
"有了Quarkus，过渡并不一定是破坏性的。由于 Quarkus 与标准 Java API 兼容、支持 Jakarta EE 和 Spring "
"以及广泛的扩展，许多项目都可以逐步采用 Quarkus，而无需重写现有代码。无论您是来自传统的 Java EE 应用服务器、基于 Spring "
"的堆栈，还是来自 Micronaut 或 Dropwizard 等其他框架，Quarkus 都能提供熟悉的 "
"API、工具和迁移指南，帮助您轻松过渡。该平台支持常用的 Jakarta 规范，如 JAX-RS、CDI、JPA 和 Bean "
"Validation。对于 Spring 用户，兼容性层包括对广泛使用的注解和组件的支持。请参阅 link:https://quarkus.io/"
"guides/spring-di[Spring DI 指南] 了解更多信息。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Need assistance getting started?\n"
"You’re not alone.\n"
"The Quarkus team offers expert guidance throughout the migration journey, "
"from initial architecture reviews to production readiness.\n"
"Whether you're evaluating the framework or planning a full transition, "
"support is available to help ensure a smooth and successful adoption."
msgstr ""
"入门需要帮助？你并不孤单。从最初的架构审查到生产准备就绪，Quarkus "
"团队将在整个迁移过程中提供专业指导。无论您是在评估框架还是计划全面过渡，我们都能提供支持，帮助您确保顺利、成功地采用该框架。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"All it takes is a decision to move forward.\n"
"Your team deserves a faster, leaner, and cloud-native future."
msgstr "只需决定向前迈进。您的团队理应拥有一个更快、更精简和云原生的未来。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "Concluding note"
msgstr "结束语"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid ""
"Quarkus is redefining Java development by combining modern features with the "
"robustness of the Java ecosystem.\n"
"Its focus on developer productivity, performance, and seamless integration "
"positions it as a formidable framework for building efficient, cloud-native "
"applications.\n"
"Whether you're looking to optimize costs, enhance development speed, or "
"adopt a reactive approach, Quarkus is a game-changer for Java developers."
msgstr ""
"Quarkus 将现代功能与 Java 生态系统的稳健性相结合，重新定义了 Java "
"开发。它注重开发人员的生产力、性能和无缝集成，使其成为构建高效云原生应用程序的强大框架。无论您是希望优化成本、提高开发速度，还是采用反应式方法，Quarkus "
"都将改变 Java 开发人员的游戏规则。"

#: _posts/2025-03-31-mmaler-blogpost-1-intro.adoc
#, fuzzy
msgid "The end."
msgstr "结束。"
