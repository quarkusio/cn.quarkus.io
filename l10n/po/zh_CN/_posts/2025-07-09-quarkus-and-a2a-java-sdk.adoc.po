msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Getting Started with Quarkus and the A2A Java SDK"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Today, we released A2A Java SDK 0.2.3.Beta1. This makes it possible to quickly get started with Quarkus and A2A."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "A couple of weeks ago, we https://quarkus.io/blog/a2a-project-launches-java-sdk/[announced] that our https://github.com/a2aproject/a2a-java[A2A Java SDK] has been contributed to the official A2A project! This was a collaboration between our WildFly and Quarkus teams at Red Hat and Google. Today, we have released A2A Java SDK 0.2.3.Beta1, which aligns with the v0.2.3 version of the https://github.com/a2aproject/A2A/tree/v0.2.3[A2A specification]. In this blog post, we'll cover how to easily get started with Quarkus and A2A using the A2A Java SDK."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "You can also check out our https://www.youtube.com/watch?v=5CZzW-wvEQs[short video] that gives an introduction to the A2A Java SDK."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "What's A2A?"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Before jumping into the details, let's go through what https://a2aproject.github.io/A2A/specification/[A2A] is. The _Agent2Agent_ (A2A) protocol is an open standard developed by Google. It enables AI agents to communicate and collaborate with one another, regardless of each agent's underlying framework, language, or vendor. This is important, as it paves the way for polyglot multi-agent systems."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Main Concepts"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The A2A protocol involves a few important concepts:"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "*User* - This is the end user who has a request that will require the help of one or more agents."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "*A2A Client* - This is the client that will send requests on the user's behalf to an A2A server agent."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "*A2A Server* - This is the server agent that will receive and respond to requests from an A2A client agent. An A2A server agent exposes an HTTP endpoint that implements the A2A protocol."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "A2A client and A2A server agents can be implemented using different languages and frameworks. They just need to be able to speak with each other using the A2A protocol. Communication happens using JSON-RPC 2.0 over HTTP(S) as the transport. A2A SDKs written for various programming languages enable this interoperability."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The https://github.com/orgs/a2aproject/repositories[A2A project] aims to provide SDKs for various languages. Using the https://github.com/a2aproject/a2a-python[A2A Python SDK] and our https://github.com/a2aproject/a2a-java[A2A Java SDK], for example, it's possible for an A2A client agent written in Python to communicate with an A2A server agent written in Java and vice versa."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "From a Quarkus LangChain4j AI Service to an A2A Server Agent"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Let's say we have a https://docs.quarkiverse.io/quarkus-langchain4j/dev/ai-services.html[Quarkus LangChain4j AI service] that can respond to user queries about the weather by making use of a weather MCP server:"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "To turn this weather agent into an A2A server agent, there are a few simple steps we need to follow:"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Add an A2A Java SDK Server Dependency"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The `io.github.a2asdk` `groupId` is temporary and will likely change for future releases. Keep an eye on the `a2a-java` https://github.com/a2aproject/a2a-java/blob/main/README.md[README] for up-to-date documentation."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "`a2a-java-sdk-server-quarkus` provides access to the core classes that make up the A2A specification and provides the HTTP endpoint that implements the A2A protocol. This dependency makes use of Quarkus Reactive Routes. If not using Quarkus, the `a2a-java-sdk-server-jakarta` dependency can be used to expose an A2A server agent in a Jakarta server supporting CDI and Jakarta RESTful Web Services."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Add a Class that Creates an A2A `AgentCard`"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The `AgentCard` is a class that describes the capabilities of an A2A server agent. Other agents or clients will use this to understand what our weather agent can do. The A2A Java SDK will automatically expose this agent card at the server agent's `.well-known/agent.json` URI. For example, if our A2A server agent is running on http://localhost:10001, the agent card will be available at http://localhost:10001/.well-known/agent.json."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The URL of our A2A server agent. We set `quarkus.http.port` to `10001` in our `application.properties` file so our A2A server agent will be available at http://localhost:10001."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Indicates the capabilities of our A2A server agent like whether it supports streaming, push notifications, and state transition history."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Describes what our agent can do."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "An example query that our agent can handle."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Add a class that creates an A2A `AgentExecutor`"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The `AgentExecutor` is a class that will be used to process requests sent to our A2A server agent. It will pass the requests received from the A2A client to our Quarkus LangChain4j AI service and is responsible for returning the responses back to the A2A client. The A2A Java SDK will call this executor when a request is sent to our A2A server agent."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Notice that the `AgentExecutor` interface specifies two methods, `execute` and `cancel`, that we need to implement."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "This is our Quarkus LangChain4j AI service."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The `execute` method will be used to process requests from an A2A client."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Here we are invoking our Quarkus LangChain4j AI service."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The `cancel` method be used to cancel an ongoing request."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "That's it, we can now start our Quarkus application as shown below and our A2A server agent will be available at http://localhost:10001. A2A client agents can now send weather-related queries to our A2A server agent and our agent will respond with the weather information."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "We've gone from a Quarkus LangChain4j AI service to an A2A server agent in just a few steps!"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The source code for this example is available https://github.com/a2aproject/a2a-samples/tree/main/samples/multi_language/python_and_java_multiagent/weather_agent[here]."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Validating our A2A Server Agent Using the A2A Inspector"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The https://github.com/a2aproject/a2a-inspector[A2A Inspector] is a web application that's very easy to run and can be used to inspect any A2A server agent."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "We can use the A2A Inspector to validate our A2A server agent by specifying our server agent's URL in the `Connect` text box."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The A2A Inspector will obtain and show our server agent's agent card:"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Notice that this matches the information we provided in our `WeatherAgentCardProducer` class."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "You can also use the inspector to send requests to the A2A server agent and to view the raw HTTP requests and responses."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Multi-Agent Orchestration with Python and Java Server Agents"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Let's take a look at a more complex example that makes use of our weather A2A server agent."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "This is a multi-agent example where a host agent delegates requests to two different A2A server agents, an Airbnb agent and our Weather agent, based on the user's question. Under the hood, the host agent makes use of each agent's agent card to determine the capabilities of each agent and uses an LLM to determine which agent to delegate the request to based on their capabilities."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The https://github.com/a2aproject/a2a-samples/tree/main/samples/multi_language/python_and_java_multiagent/airbnb_agent[Airbnb agent] is a Python agent that's implemented using LangGraph and makes use of the A2A Python SDK."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The https://github.com/a2aproject/a2a-samples/tree/main/samples/multi_language/python_and_java_multiagent/weather_agent[Weather agent] is our Java agent that's implemented using Quarkus LangChain4j and makes use of the A2A Java SDK."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Notice that the host agent uses A2A clients written in Python to communicate with the server agents. It's also possible to use an https://github.com/a2aproject/a2a-java?tab=readme-ov-file#a2a-client[A2A client] written in Java using our A2A Java SDK."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "The complete source code for this example is available https://github.com/a2aproject/a2a-samples/tree/main/samples/multi_language/python_and_java_multiagent[here]. To experiment with this multi-agent example, try sending different types of questions to the host agent, for example:"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "What's the weather in New York, NY?"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Find me a room in LA, CA, July 7-9, 2 adults"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Notice that the host agent will delegate the first question to the Weather agent and the second question to the Airbnb agent."
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "And the second question will be delegated to the Airbnb agent:"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "We've seen how easy it is to get started with Quarkus and A2A using the A2A Java SDK. With just a few steps, we can turn a Quarkus LangChain4j AI service into an A2A server agent that can communicate with other A2A agents, regardless of the language or framework they are implemented in. The LangChain4j and Quarkus teams are also working on removing most of the boilerplate code to expose an A2A server and interact with A2A clients. So, stay tuned!"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "Further Reading"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "https://a2aproject.github.io/A2A/specification/[A2A Specification]"
msgstr ""

#: _posts/2025-07-09-quarkus-and-a2a-java-sdk.adoc
msgid "https://github.com/a2aproject/a2a-java/blob/main/README.md[A2A Java SDK Documentation]"
msgstr ""
