# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
#, fuzzy, no-wrap
msgid "Tips to use Hibernate ORM with Quarkus profiles and live coding mode"
msgstr "使用Hibernate ORM与Quarkus配置文件和实时编码模式的技巧"

#. type: YAML Front Matter: synopsis
#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
#, fuzzy, no-wrap
msgid "Hibernate ORM lets you generate or update the database schema. Let's explore when to use such option in combination with live coding."
msgstr "Hibernate ORM允许你生成或更新数据库模式。让我们探讨一下何时结合现场编码使用这种选项。"

#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
msgid ""
"Quarkus live coding (aka dev mode) is really useful for applications that mix front end or services and database access.\n"
"There are a few common approaches to make the best of it."
msgstr ""

#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
msgid ""
"The first choice is to use `quarkus.hibernate-orm.database.generation=drop-and-create` in conjunction with `import.sql`.\n"
"That way for every change to your app and in particular to your entities, the database schema will be properly recreated\n"
"and your data fixture (stored in `import.sql`) will be used to repopulate it from scratch.\n"
"This is best to perfectly control your environment and works magic with Quarkus live coding mode:\n"
"your entity changes or any change to your `import.sql` is immediately picked up and the schema updated without restarting the application!"
msgstr ""

#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
msgid ""
"By default, Hibernate ORM, upon boot, will read and execute the SQL statements in the `/import.sql` file (if present).\n"
"You can change the file name by changing the property `quarkus.hibernate-orm.sql-load-script` in `application.properties`."
msgstr ""

#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
msgid ""
"The second approach is to use `quarkus.hibernate-orm.database.generation=update`.\n"
"This approach is best when you do many entity changes but\n"
"still need to work on a copy of the production data\n"
"or if you want to reproduce a bug that is based on specific database entries.\n"
"`update` is a best effort from Hibernate ORM and will fail in specific situations\n"
"including altering your database structure which could lead to data loss.\n"
"For example if you change structures related to the foreign key, Hibernate ORM might have to bail out.\n"
"But for development, these limitations are acceptable."
msgstr ""

#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
msgid ""
"The third approach is to use `quarkus.hibernate-orm.database.generation=none`.\n"
"This approach is best when you are working on a copy of the production data but want to fully control the schema evolution.\n"
"Or if you use a database schema migration tool like https://quarkus.io/guides/flyway[Flyway].\n"
"When you make a change to an entity, make sure to adapt the database schema accordingly."
msgstr ""

#. type: Plain text
#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
#, fuzzy
msgid "Do not use `quarkus.hibernate-orm.database.generation` `drop-and-create` and `update` in your production environment. You have been warned :)"
msgstr "不要在你的生产环境中使用 `quarkus.hibernate-orm.database.generation` `drop-and-create` 和 `update` 。你已经被警告了 :)"

#. type: Title ==
#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
#, fuzzy, no-wrap
msgid "Now with Quarkus profiles"
msgstr "现在有了Quarkus配置文件"

#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
msgid ""
"It becomes really powerful when combined with Quarkus configuration profiles.\n"
"You can define different https://quarkus.io/guides/config#configuration-profiles[configuration profiles]\n"
"to select different behaviors depending on your environment.\n"
"This is great because you can define different combinations of Hibernate ORM properties matching the development style you currently need."
msgstr ""

#. type: Block title
#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
#, no-wrap
msgid "application.properties"
msgstr ""

#: _posts/2019-08-01-hibernate-orm-config-profiles.adoc
msgid ""
"I hope you have found this tip useful.\n"
"Hibernate ORM schema update, data fixture, Quarkus dev mode and its configuration profiles are a powerful combination!"
msgstr ""
