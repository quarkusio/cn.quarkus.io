# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy, no-wrap
msgid "Platforms and Streams: a new way to discover Quarkus extensions"
msgstr "平台和流：发现Quarkus扩展的新方法"

#. type: YAML Front Matter: synopsis
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy, no-wrap
msgid "The platform model and supporting tools available in Quarkus 2.1.0.Final make it easy to discover and work with the Quarkus extension ecosystem."
msgstr "Quarkus 2.1.0.Final中提供的平台模型和支持工具使得发现和使用Quarkus扩展生态系统变得容易。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "Co-authored by Erin Schnabel"
msgstr "合著：Erin Schnabel"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "As you may have seen from recent Quarkus Insights episodes (#48, #55 and #57, specifically), we've made a number of changes to our tools in the 2.x stream to improve the developer experience.  When 2.0 was released, a few sharp-eyed Quarkus CLI users spotted some new options and we're excited to explain what those are all about with the release of Quarkus 2.1."
msgstr "正如你可能从最近的Quarkus Insights episodes（#48，#55和#57，特别是）中看到的，我们在2.x流中对我们的工具做了一些改变以改善开发者的体验。当2.0发布时，一些眼尖的Quarkus CLI用户发现了一些新的选项，我们很高兴在Quarkus 2.1的发布中解释这些选项是怎么回事。"

#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "**TL;DR:** We have a whole new set of more granular BOMs that you can use instead of the big `quarkus-universe-bom`. We have deployed a registry service that aligns and manages platform compatibility across these more granular BOMs and our tools (maven, gradle and CLI) know how to work with this registry to simplify the discovery of extensions that work with your project."
msgstr "*简要说明：* 我们有一套全新的更细粒度的 BOM，您可以使用它们来替代大型 `quarkus-universe-bom` 。我们部署了一个注册表服务，用于调整和管理这些更细化的 BOM 的平台兼容性，我们的工具（maven、gradle 和 CLI）知道如何与该注册表配合使用，从而简化了发现与您的项目配合使用的扩展的过程。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "As of the 2.1.0.Final release, the Quarkus CLI uses this registry to resolve the Quarkus platform used by your project."
msgstr "从2.1.0.Final版本开始，Quarkus CLI使用这个注册表来解决你的项目所使用的Quarkus平台。"

#. type: Title ==
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy, no-wrap
msgid "The Evolution of the Platform Model"
msgstr "平台模式的演变"

#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid ""
"The Quarkus 1.x platform was based on a single BOM - `io.quarkus:quarkus-universe-bom`, that would be imported by Quarkus applications. The universe BOM would include all the Quarkus\n"
"platform extensions plus their dependencies. BOMs are meant to make it easy to align common dependencies on versions that work for all the libraries and frameworks used in an application.\n"
"However, badly composed BOMs may actually make it very difficult or practically impossible to achieve that. Generally speaking, the wider the scope of the dependencies a BOM manages,\n"
"the higher the risk of running into incompatiblity issues when users include libraries that aren't managed by the BOM into their applications."
msgstr "Quarkus 1.x 平台基于单一的 BOM - `io.quarkus:quarkus-universe-bom` ，Quarkus 应用程序将导入该 BOM。宇宙 BOM 包括所有 Quarkus 平台扩展及其依赖项。BOM 的目的是为了便于将共同的依赖关系调整到适用于应用程序中使用的所有库和框架的版本上。但是，如果 BOM 构成不当，实际上就很难或根本不可能实现这一目标。一般来说，BOM 管理的依赖关系范围越广，当用户在其应用程序中包含 BOM 未管理的库时，出现不兼容问题的风险就越高。"

#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid ""
"The `io.quarkus:quarkus-universe-bom`, as its artifactId implies, is certainly a large and diverse BOM, including dependencies of Camel, Google Cloud Services, Kogito, OptaPlanner\n"
"and other Quarkus platform members. Importing `io.quarkus:quarkus-universe-bom` will enforce ~3600 dependency version constraints on an application."
msgstr "`io.quarkus:quarkus-universe-bom` 正如其 artifactId 所暗示的那样，这无疑是一个庞大而多样化的 BOM，包括 Camel、Google Cloud Services、Kogito、OptaPlanner 和其他 Quarkus 平台成员的依赖关系。导入 `io.quarkus:quarkus-universe-bom` 将对应用程序强制执行 ~3600 个依赖关系版本约束。"

#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid ""
"Besides the fact that it's practically\n"
"always way more than necessary, it may actually cause a serious compatibility issue that could have been avoided if the Quarkus platform BOM was not trying to manage the \"universe\".\n"
"For example, including a library that depends on a different version of the `commons-beanutils:commons-beanutils` than Camel Quarkus into an application that actually does not include any\n"
"Camel Quarkus extension may become problematic, because the `io.quarkus:quarkus-universe-bom` will enforce the version required by Camel Quarkus."
msgstr "除了实际上总是远远超出需要之外，它实际上可能会导致严重的兼容性问题，而如果 Quarkus 平台 BOM 不试图管理 \"宇宙 \"的话，这个问题是可以避免的。例如，将依赖于与 Camel Quarkus 版本不同的 `commons-beanutils:commons-beanutils` 的库加入到实际上不包含任何 Camel Quarkus 扩展的应用程序中，可能会产生问题，因为 `io.quarkus:quarkus-universe-bom` 会强制执行 Camel Quarkus 所需的版本。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "As of Quarkus 2.0.0.Final, in addition to the monolithic `io.quarkus:quarkus-universe-bom`, we also define a number of platform-member-specific BOMs, e.g."
msgstr "从Quarkus 2.0.0.Final开始，除了单体 `io.quarkus:quarkus-universe-bom` ，我们还定义了一些针对平台成员的BOM，例如："

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "`io.quarkus.platform:quarkus-bom:2.1.0.Final` - an equivalent of the `io.quarkus:quarkus-bom`;"
msgstr " `io.quarkus.platform:quarkus-bom:2.1.0.Final` - 一个相当于 。 `io.quarkus:quarkus-bom` "

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "`io.quarkus.platform:quarkus-camel-bom:2.1.0.Final` - manages only the Camel Quarkus-related extensions and their required dependencies;"
msgstr " `io.quarkus.platform:quarkus-camel-bom:2.1.0.Final` - 只管理Camel Quarkus相关的扩展及其所需的依赖。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "`io.quarkus.platform:quarkus-kogito-bom:2.1.0.Final` - manages only the Kogito Quarkus-related extensions and their required dependencies;"
msgstr " `io.quarkus.platform:quarkus-kogito-bom:2.1.0.Final` - 只管理Kogito Quarkus相关的扩展和它们所需的依赖。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "etc"
msgstr "等等"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "Now applications need to import only the relevant BOMs, which avoids enforcing dependency constraints from the rest of the \"universe\"."
msgstr "现在，应用程序只需要导入相关的BOM，这就避免了从 \"宇宙 \"的其他部分强制执行依赖性约束。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "Given that every member-specific BOM is actually a fragment of the `io.quarkus:quarkus-universe-bom`, member BOMs can be imported in any order w/o creating a conflict."
msgstr "鉴于每个成员特定的BOM实际上是 `io.quarkus:quarkus-universe-bom` 的一个片段，成员BOM可以按任何顺序导入而不产生冲突。"

#. type: Title ==
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy, no-wrap
msgid "Dev Tools Support"
msgstr "开发工具支持"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "The dev tools, such as the Quarkus CLI, Maven or Gradle plugins, can be used to create and manage a Quarkus application project using the new platform model."
msgstr "开发工具，如Quarkus CLI、Maven或Gradle插件，可以用来创建和管理使用新平台模型的Quarkus应用项目。"

#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid ""
"The `io.quarkus:quarkus-universe-bom` was still the default BOM in Quarkus 2.0.0.Final. As of Quarkus 2.1.0.Final, we recommend using the more granular,\n"
"member-specific BOMs instead."
msgstr "`io.quarkus:quarkus-universe-bom` 仍是 Quarkus 2.0.0.Final 中的默认 BOM。从 Quarkus 2.1.0.Final 开始，我们建议使用更精细、针对特定成员的 BOM。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "The easiest way to explore this new platform resolution capability is using the new https://quarkus.io/guides/cli-tooling[Quarkus CLI], which can be installed using e.g."
msgstr "探索这种新的平台解决能力的最简单方法是使用新的 link:https://quarkus.io/guides/cli-tooling[Quarkus CLI] ，它可以通过以下方式安装，例如"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "Once installed you can create a project by executing"
msgstr "一旦安装完毕，你可以通过执行以下命令创建一个项目"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "For earlier versions of the CLI (pre-2.1.0.Final), you need to specify the `--registry-client` option, or the created project will use the `io.quarkus:quarkus-universe-bom` associated with the client's version."
msgstr "对于早期版本的CLI（2.1.0.Final之前），你需要指定 `--registry-client` 选项，否则创建的项目将使用与客户端版本相关的 `io.quarkus:quarkus-universe-bom` 。"

#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "The generated `pom.xml` will be importing the following BOM:"
msgstr "生成的 `pom.xml` 将导入以下物料清单："

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "which is an equivalent of the `io.quarkus:quarkus-bom` that does not include any of the other platform members, such as Camel, Kogito, OptaPlanner, etc."
msgstr "这是一个等同于 `io.quarkus:quarkus-bom` ，不包括任何其他平台成员，如Camel、Kogito、OptaPlanner，等等。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "Let's create another project that does include a Kogito extension:"
msgstr "让我们创建另一个项目，其中确实包括一个Kogito扩展。"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "The new project imports two BOMs (i.e. two fragments of the `io.quarkus:quarkus-universe-bom` that are relevant to the project):"
msgstr "新项目导入两个BOM（即两个与项目相关的 `io.quarkus:quarkus-universe-bom` 的片段）。"

#. type: Title ==
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy, no-wrap
msgid "Wider Quarkus Ecosystem Support in the Dev Tools"
msgstr "开发工具中更广泛的Quarkus生态系统支持"

#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid ""
"The https://quarkus.io/guides/platform[Quarkus platform] does not represent the whole Quarkus extension ecosystem, aka Quarkiverse, but rather a set of extensions that target\n"
"the primary use-cases of Quarkus as a development stack. Which means that there are still plenty of Quarkus extensions that aren't present in a Quarkus platform (BOM),\n"
"e.g. most of the extensions hosted on the https://github.com/quarkiverse[Quarkiverse Hub]. These non-platform extensions could still be added\n"
"to Quarkus applications as usual application dependencies. The Quarkus 2.1.0.Final dev tools make it very easy, e.g."
msgstr "link:https://quarkus.io/guides/platform[Quarkus 平台] 并不代表整个 Quarkus 扩展生态系统（又称 Quarkiverse），而是一组针对 Quarkus 作为开发堆栈的主要用途的扩展。这意味着仍有大量的 Quarkus 扩展并不存在于 Quarkus 平台（BOM）中，例如大多数托管在 Quarkiverse link:https://github.com/quarkiverse[Hub] 上的扩展。这些非平台扩展仍然可以添加到 Quarkus 应用程序中，就像通常的应用程序依赖关系一样。Quarkus 2.1.0.Final 开发工具可以轻松做到这一点，例如"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "will create a new Quarkus project with a non-platform https://github.com/quarkiverse/quarkus-prettytime[Quarkus Pretty Time extension]."
msgstr "将创建一个新的Quarkus项目，该项目有一个非平台的 link:https://github.com/quarkiverse/quarkus-prettytime[Quarkus Pretty Time扩展] 。"

#. type: Title ==
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy, no-wrap
msgid "Registry Client Support in the Maven and Gradle Plugins"
msgstr "Maven 和 Gradle 插件中的注册表客户端支持"

#. type: Plain text
#: _posts/2021-07-30-quarkus-2x-platform-quarkiverse-registry.adoc
#, fuzzy
msgid "The Quarkus Maven and Gradle plugins can still be used to manage Quarkus projects."
msgstr "Quarkus Maven 和 Gradle 插件仍可用于管理 Quarkus 项目。"
