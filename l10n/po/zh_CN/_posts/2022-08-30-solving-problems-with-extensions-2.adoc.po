# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-08-29 11:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: title
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy, no-wrap
msgid "Solving problems with Quarkus extensions (2/n)"
msgstr "用Quarkus扩展来解决问题 (2/n)"

#. type: YAML Front Matter: synopsis
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy, no-wrap
msgid "The unique build infrastructure of Quarkus allows you to solve complex issues in a very simple way by developing custom extensions."
msgstr "Quarkus独特的构建基础设施允许你通过开发自定义扩展，以非常简单的方式解决复杂问题。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "We are all good: 2 posts make a series!"
msgstr "我们都很好：2个帖子组成一个系列!"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "If you haven't looked at the first post of this series, I invite you to link:/blog/solving-problems-with-extensions/[read it]!"
msgstr "如果你还没有看这个系列的第一篇文章，我邀请你去 link:/blog/solving-problems-with-extensions/[读一读] !"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"**Problem of the day:** A library is using the `@Inject` annotation to handle its internal injection and, when used on beans, that will conflict with the CDI injection we have in Quarkus.\n"
"Leading to the impossibility for the CDI layer to inject these objects as they are not CDI beans."
msgstr ""

#. type: Title ==
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy, no-wrap
msgid "Some context"
msgstr "一些背景"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"As for the first post of the series, this post is based on my work on https://github.com/quarkiverse/quarkus-github-app[the Quarkus GitHub App extension]\n"
"that allows you to develop GitHub Apps based on Quarkus at light speed with very little boilerplate."
msgstr ""

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"The newest feature of this extension is the ability to easily develop comment-based commands in your GitHub apps.\n"
"For instance, do something when a user posts a `@bot do-something` in a comment of a pull request."
msgstr ""

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"While it is possible to implement it all by yourself with the standard features of Quarkus GitHub App,\n"
"we developed an additional extension to make things even easier."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "Implementing a comment-based command with this extension is as easy as:"
msgstr "用这个扩展实现基于评论的命令，就像这样简单。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "The `run()` method of the `DoSomething` class will be called any time a user posts `@bot do-something` as a comment in an issue or pull request."
msgstr "当用户在问题或拉动请求中发布 `@bot do-something` 作为评论时， `DoSomething` 类的 `run()` 方法将被调用。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "These are the basics but the extension has a ton of other features such as reaction-based feedback, scopes, permissions..."
msgstr "这些是最基本的，但该扩展有大量的其他功能，如基于反应的反馈、作用域、权限等。"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"This extension is based on the https://rvesse.github.io/airline/[Airline library].\n"
"This library is designed to easily parse and execute command lines.\n"
"While originally designed to develop CLI applications, it is a perfect fit for our usage."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "One problem that we have with this library is that it uses the `@Inject` annotation for injecting some objects into commands such as `GlobalMetadata`:"
msgstr "我们在这个库中遇到的一个问题是，它使用 `@Inject` 注解来将一些对象注入到命令中，如 `GlobalMetadata` 。"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"This is a problem for us as this `@Inject` annotation is used by CDI injection and, in the context of our extension, the `@Command` classes are CDI beans.\n"
"Thus, this particular `@Inject` annotation will also be interpreted by ArC, our CDI implementation, and ArC will try to inject `GlobalMetadata` as a CDI bean... and fail because it is not a CDI bean."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "Suffice to say it won't work very well and we need to fix it."
msgstr "可以说，这不会有很好的效果，我们需要解决这个问题。"

#. type: delimited block =
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "Not making `@Command` classes CDI beans is NOT an option as we want regular CDI injection to work."
msgstr "不使 `@Command` 类的CDI豆不是一个选项，因为我们希望常规的CDI注入能够工作。"

#. type: Title ==
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy, no-wrap
msgid "How can we work around this?"
msgstr "我们如何才能解决这个问题？"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"Ideally, the Airline library wouldn't use the `@Inject` annotation for its internal purpose\n"
"and the good news is, in the latest versions, the annotation used for injection can be specified."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "But for the sake of the exercise, let's stick to the previous Airline version."
msgstr "但为了练习，让我们坚持使用以前的航空公司版本。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "So now what?"
msgstr "那么现在怎么办？"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"The set of classes the Airline library is susceptible to inject is limited:\n"
"it is used to inject a limited number of classes and to handle composition (i.e. sharing components across several commands)."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "For these use cases, we somehow need ArC to ignore the injection points."
msgstr "对于这些用例，我们在某种程度上需要ArC来忽略注入点。"

#. type: Title ==
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy, no-wrap
msgid "AnnotationTransformers to the rescue"
msgstr "AnnotationTransformers to rescue"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"If you are familiar with Quarkus, you are probably familiar with the notion of Jandex index.\n"
"In Quarkus, we build indexes of the project annotations and these indexes are used by our core and extensions to find annotations (and more)."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "ArC, our CDI implementation, is one of the components that consumes the Jandex indexes."
msgstr "ArC，我们的CDI实现，是消耗Jandex索引的组件之一。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "Interestingly though, ArC does not consume the Jandex index as is:"
msgstr "但有趣的是，ArC并不像现在这样消耗Jandex指数。"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"Annotations transformers can add, remove, update existing annotations before consumption by ArC.\n"
"These are used by several features in Quarkus, for instance Hibernate Validator interceptor support."
msgstr ""

#. type: delimited block =
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "Annotations transformers do NOT modify the original classes, nor do they modify the Jandex indexes."
msgstr "注释转化器不会修改原始类，也不会修改Jandex索引。"

#. type: delimited block =
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "Using annotations transfomers will solely impact ArC, our CDI implementation."
msgstr "使用注释变换器将完全影响ArC，我们的CDI实现。"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"This behavior is of great interest to us:\n"
"we could hide the annotations from ArC using an annotations transformer\n"
"while keeping them available for Airline to consume them via reflection."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "Let's create our annotations transformer:"
msgstr "让我们来创建我们的注释转化器。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "Our class implements `AnnotationsTransformer`."
msgstr "我们的类实现了 `AnnotationsTransformer` 。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "We inject the Jandex index in our transformer as we will need it to detect composition."
msgstr "我们将Jandex指数注入我们的转化器中，因为我们需要它来检测组成。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "We are only interested in fields so let's apply our transformer to fields only."
msgstr "我们只对字段感兴趣，所以让我们的变换器只应用于字段。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "If the field is not annotated with `@Inject`, it is of no interest to us."
msgstr "如果这个字段没有注解 `@Inject` ，那么我们就没有兴趣。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "If the field type is `GlobalMetadata`, `GroupMetadata` or `CommandMetadata`, we know it is the responsibility of Airline to inject it."
msgstr "如果字段类型是 `GlobalMetadata` , `GroupMetadata` 或 `CommandMetadata` ，我们知道这是航空公司的责任，要注入它。"

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "We are also detecting composition."
msgstr "我们也在检测成分。"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"We remove the `@Inject` annotation from the transformed view visible to ArC.\n"
"Make sure you don't forget to finalize the transformation with `.done()`."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "For composition, we detect if the field is of a type that contains `@Arguments` or `@Option` annotations."
msgstr "对于组成，我们检测字段是否属于包含 `@Arguments` 或 `@Option` 注释的类型。"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"Now that we have created our annotations transformer,\n"
"we need to make sure Quarkus knows about it."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, fuzzy
msgid "As usual, for the Quarkus build process, you just need to produce a `BuildItem` to register the annotations transformer:"
msgstr "像往常一样，对于Quarkus的构建过程，你只需要产生一个 `BuildItem` ，以注册注解转化器。"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"And that's it, from now on, the `@Inject` annotations consumed by the Airline library will be hidden from ArC,\n"
"while still being visible from the Airline library, which uses reflection."
msgstr ""

#. type: Plain text
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid "Regular CDI injection is still supported as only the `@Inject` annotations handled by Airline are hidden from ArC."
msgstr ""

#. type: Title ==
#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
#, no-wrap
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2022-08-30-solving-problems-with-extensions-2.adoc
msgid ""
"Once again, we have seen how the unique build infrastructure of Quarkus can solve real life issues with very little boilerplate.\n"
"And that with unified concepts that are very easy to grasp."
msgstr ""
