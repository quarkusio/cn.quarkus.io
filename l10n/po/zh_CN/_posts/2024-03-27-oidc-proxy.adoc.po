msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Use OIDC Proxy to integrate OIDC service endpoints with custom GPT"
msgstr "使用 OIDC 代理将 OIDC 服务端点与自定义 GPT 集成"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Explain how OIDC Proxy can help to integrate OIDC service endpoints with custom GPT"
msgstr "解释 OIDC 代理如何帮助将 OIDC 服务端点与自定义 GPT 集成"

#: _posts/2024-03-27-oidc-proxy.adoc
msgid "Introduction"
msgstr "简介"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] is a new https://github.com/quarkiverse[Quarkiverse] extension which can help to integrate https://quarkus.io/guides/security-oidc-bearer-token-authentication[OIDC service endpoints] with external Single-page applications (SPA)."
msgstr "link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] 是一种新的 link:https://github.com/quarkiverse[Quarkiverse] 扩展，可帮助将 link:https://quarkus.io/guides/security-oidc-bearer-token-authentication[OIDC 服务端点] 与外部单页应用程序（SPA）集成。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "SPA runs in the browser and uses the https://quarkus.io/guides/security-oidc-code-flow-authentication#overview-of-the-oidc-authorization-code-flow-mechanism[OIDC authorization code flow], but without relying on Quarkus, to authenticate the current user and accesses the Quarkus OIDC service endpoint with the access token on behalf of the authenticated user. Here is a simple diagram showing how this process works, copied to this post from the https://quarkus.io/guides/security-oidc-bearer-token-authentication[OIDC Bearer token guide] for your convenience:"
msgstr "SPA 在浏览器中运行，使用 link:https://quarkus.io/guides/security-oidc-code-flow-authentication#overview-of-the-oidc-authorization-code-flow-mechanism[OIDC 授权代码流] （但不依赖于 Quarkus）来验证当前用户，并代表通过验证的用户使用访问令牌访问 Quarkus OIDC 服务端点。下面是从 link:https://quarkus.io/guides/security-oidc-bearer-token-authentication[OIDC Bearer 令牌指南] 中复制到这篇文章中的一个简单示意图，以方便您了解这一过程的工作原理："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "As illustrated in the picture above, the OIDC provider authenticates the current user. The SPA receives the ID, access, and, possibly, refresh tokens as the outcome of the authorization code flow and uses the access token to access the Quarkus OIDC service endpoint."
msgstr "如上图所示，OIDC 提供商对当前用户进行身份验证。作为授权码流的结果，SPA 会收到 ID、访问令牌和刷新令牌，并使用访问令牌访问 Quarkus OIDC 服务端点。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"The SPA interacts with the OIDC provider.\n"
"Thus, it must know the provider connection details, including the registered OIDC application's client ID and other OIDC-specific details required to complete the authorization code flow successfully.\n"
"You must also provide a _callback_ URL in your registered OIDC application, which may not always be acceptable."
msgstr "SPA 与 OIDC 提供商交互。因此，它必须知道提供程序连接的详细信息，包括已注册 OIDC 应用程序的客户端 ID 以及成功完成授权代码流所需的其他 OIDC 特定详细信息。您还必须在已注册的 OIDC 应用程序中提供一个 _回调_ URL，这可能并不总是可以接受的。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"The https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] extension simplifieds this whole setup.\n"
"It acts as a proxy between the SPA and Quarkus OIDC service endpoints and delegates to the real OIDC provider to support an authorization code flow.\n"
"It allows integrating OIDC service endpoints with SPAs without having to expose the internal OIDC connection details to this SPA, and thus, sends all the required details to the user browser."
msgstr "link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC 代理] 扩展简化了整个设置。它充当 SPA 与 Quarkus OIDC 服务端点之间的代理，并委托真正的 OIDC 提供商支持授权代码流。它允许将 OIDC 服务端点与 SPA 集成，而无需向该 SPA 公开内部 OIDC 连接详情，从而将所有必要的详情发送到用户浏览器。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Another use case for the OIDC Proxy is to support several https://quarkus.io/guides/security-oidc-code-flow-authentication[Quarkus OIDC web-app] endpoints to authenticate users using the same OIDC proxy configuration before accessing the OIDC service endpoint."
msgstr "OIDC 代理的另一个用例是支持多个 link:https://quarkus.io/guides/security-oidc-code-flow-authentication[Quarkus OIDC 网络应用] 程序端点，以便在访问 OIDC 服务端点之前使用相同的 OIDC 代理配置对用户进行身份验证。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "How does this OIDC proxy actually work? We are coming to that, but first, let's talk about custom GPT actions."
msgstr "OIDC 代理究竟是如何工作的呢？接下来我们将讨论这个问题，但首先让我们来谈谈自定义 GPT 操作。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Custom GPT Actions"
msgstr "自定义 GPT 操作"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "https://chat.openai.com[ChatGPT] has introduced https://platform.openai.com/docs/actions/introduction[Actions], which can be used to create custom GPTs. For example, you can create a custom GPT which can enhance your ChatGPT conversation experience by connecting it to your API endpoints."
msgstr "link:https://chat.openai.com[ChatGPT] 引入了可用于创建自定义 GPT 的 \" link:https://platform.openai.com/docs/actions/introduction[操作] \"。例如，您可以创建自定义 GPT，通过将其连接到 API 端点来增强您的 ChatGPT 会话体验。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"One of the challenges when connecting a custom GPTs with your API is the authentication, how your custom GPT can be https://platform.openai.com/docs/actions/authentication[authenticated] to be allowed to access the API.\n"
"The https://platform.openai.com/docs/actions/authentication/oauth[OAuth] option is the best option when you need a user-specific permission to access the API, and this is what https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] will help you to achieve without exposing all the OIDC/OAuth2 connection details."
msgstr "将自定义 GPT 与 API 相连接时面临的挑战之一是身份验证，即如何对自定义 GPT 进行 link:https://platform.openai.com/docs/actions/authentication[身份验证] 以允许其访问 API。当你需要特定用户权限来访问 API 时， link:https://platform.openai.com/docs/actions/authentication/oauth[OAuth] 选项是最好的选择，而这正是 link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] 可以帮助你实现的，而且不会暴露所有 OIDC/OAuth2 连接细节。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Be aware that at the moment, custom GPT actions can only be created with ChatGPT Plus and Enterprise subscriptions."
msgstr "请注意，目前只有 ChatGPT Plus 和企业订阅才能创建自定义 GPT 操作。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Quarkus Fitness Adviser"
msgstr "Quarkus 健身顾问"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"Ok, let's see how it works more precisely.\n"
"To illustrate this, we are going to create the `Quarkus Fitness Adviser,` a custom GPT that analyzes activities recorded in Strava and other social providers which track physical exercise."
msgstr "好了，让我们来看看它是如何更精确地工作的。为了说明这一点，我们将在 `Quarkus Fitness Adviser,` 上创建一个自定义 GPT，用于分析 Strava 和其他跟踪体育锻炼的社交服务提供商记录的活动。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "We will do it by registering a https://www.strava.com/[Strava] API Application, creating a https://quarkus.io/guides/security-openid-connect-providers#strava[Strava OAuth2] service endpoint, proxying it with https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy], providing an HTTPS tunnel with <<ngrok, NGrok>> and finally, creating a custom GPT which uses https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] to authenticate the GPT users to Strava and use access tokens to access the Quarkus Strava OIDC service endpoint to analyze the recorded activities."
msgstr "我们将通过注册 link:https://www.strava.com/[Strava] API 应用程序、创建 link:https://quarkus.io/guides/security-openid-connect-providers#strava[Strava OAuth2] 服务端点、使用 link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] 对其进行代理、使用 xref:ngrok[NGrok] 提供 HTTPS 隧道，最后创建一个自定义 GPT，使用 link:https://github.com/quarkiverse/quarkus-oidc-proxy[OIDC Proxy] 对 GPT 用户和 Strava 进行身份验证，并使用访问令牌访问 Quarkus Strava OIDC 服务端点来分析记录的活动。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Step 1 - Strava Application Registration"
msgstr "步骤 1 - Strava 应用程序注册"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "We will start by registering a new `Quarkus Fitness Adviser` application in Strava:"
msgstr "我们将首先在 Strava 中注册一个新的 `Quarkus Fitness Adviser` 应用程序："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Note that the `Authorization Callback Domain` points to your free <<ngrok, NGrok>> (or in production, the real) domain representing the domain where OIDC Proxy is available, likely to be the same domain where your Quarkus micro-services are hosted as well. It is an important feature of Quarkus OIDC Proxy as it lets OIDC provider administrators to point to the trusted domain as opposed to a 3rd party domain."
msgstr "请注意， `Authorization Callback Domain` 指向您的免费 xref:ngrok[NGrok] （或生产中的真实）域，该域代表 OIDC 代理服务器可用的域，很可能与您的 Quarkus 微服务托管的域相同。这是 Quarkus OIDC Proxy 的一项重要功能，因为它允许 OIDC 提供商管理员指向可信域，而不是第三方域。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Also, note that the fact that only a domain is accepted as a callback option is specific to the https://www.strava.com/[Strava] application registration process. Allowing only specific absolute callback URLs is recommended in general, and the Quarkus https://quarkus.io/guides/security-openid-connect-providers#strava[Strava OAuth2] integration enforces that only a single callback URL is allowed."
msgstr "此外，请注意，仅接受域作为回调选项这一事实是 link:https://www.strava.com/[Strava] 应用程序注册流程所特有的。一般来说，建议只允许特定的绝对回调 URL，Quarkus link:https://quarkus.io/guides/security-openid-connect-providers#strava[Strava OAuth2] 集成会强制要求只允许一个回调 URL。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "After completing the application registration, write down the generated client id and secret. We will need them later."
msgstr "完成应用程序注册后，请记下生成的客户 ID 和密码。我们稍后会用到它们。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Step 2 - Quarkus Strava Service"
msgstr "步骤 2 - Quarkus Strava 服务"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Quarkus OIDC integrates the https://quarkus.io/guides/security-openid-connect-providers#strava[Strava OAuth2 provider] and encapsulates all the Strava OAuth2 specific details. You just need one line in your configuration file: `quarkus.oidc.provider=strava`."
msgstr "Quarkus OIDC 集成了 link:https://quarkus.io/guides/security-openid-connect-providers#strava[Strava OAuth2 提供商] ，并封装了 Strava OAuth2 的所有具体细节。您只需在配置文件中加入一行： `quarkus.oidc.provider=strava` 。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"The Strava provider is _mostly_ OAuth2-compliant.\n"
"But, it uses HTTP query parameters to complete the authorization code flow POST token request, while using the form parameters is a usual option.\n"
"It also uses a comma `,` separator when multiple scopes are requested during the initial redirect to Strava, while space ' ' is the typical separator character."
msgstr "Strava 提供商 _大多_ 符合 OAuth2 标准。不过，它使用 HTTP 查询参数来完成授权代码流 POST 令牌请求，而使用表单参数则是一个常见选项。在初始重定向到 Strava 期间请求多个作用域时，它还使用逗号 `,` 作为分隔符，而空格 ' ' 是典型的分隔符。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"The Quarkus OIDC proxy can handle it because it relies on the Quarkus OIDC knowledge. It should be noted that custom GPT does not support these options with its built-in OAuth authentication option.\n"
"Fortunately, the proxy is going to handle that for us."
msgstr "Quarkus OIDC 代理可以处理它，因为它依赖于 Quarkus OIDC 知识。需要注意的是，自定义 GPT 的内置 OAuth 身份验证选项不支持这些选项。幸运的是，代理将为我们处理这个问题。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"Alright, it's time to write that application.\n"
"First, you need to add a few Maven dependencies to your project:"
msgstr "好了，是时候编写应用程序了。首先，您需要在项目中添加几个 Maven 依赖项："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "You need Quarkus `3.9.0+`."
msgstr "您需要 Quarkus `3.9.0+` 。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Next we create the OIDC configuration:"
msgstr "接下来，我们创建 OIDC 配置："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"By default, `quarkus.oidc.provider=strava` enables a Quarkus OIDC `web-app` application type that can support an authorization code flow.\n"
"But our endpoint acts as a Quarkus OIDC `service` that accepts the bearer access tokens from the custom  GPT.\n"
"Thus, we override the application type to `service`.\n"
"Instead, the OIDC Proxy will manage the authorization code flow."
msgstr "默认情况下， `quarkus.oidc.provider=strava` 会启用可支持授权码流的 Quarkus OIDC `web-app` 应用程序类型。但我们的端点作为 Quarkus OIDC `service` ，接受来自自定义 GPT 的承载访问令牌。因此，我们将应用程序类型覆盖为 `service` 。取而代之的是，OIDC 代理将管理授权代码流。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Note how the extra https://developers.strava.com/docs/reference/[Strava API] scopes are added to the scopes which are already enabled by `quarkus.oidc.provider=strava`, instead of overriding them. See https://quarkus.io/guides/security-openid-connect-providers#provider-scope[Provider scopes] for more information."
msgstr "请注意额外的 link:https://developers.strava.com/docs/reference/[Strava API] 作用域是如何通过 `quarkus.oidc.provider=strava` 添加到已启用的作用域中的，而不是覆盖它们。更多信息请参阅 link:https://quarkus.io/guides/security-openid-connect-providers#provider-scope[提供商] 作用域。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "The client id, secret and the extra scopes are not really required by the OIDC service endpoint. These properties are set to support OIDC Proxy which needs to know how to correctly handle the OIDC authorization code flow requests from the external SPA."
msgstr "OIDC 服务端点并不真正需要客户端 id、secret 和额外的作用域。设置这些属性是为了支持 OIDC 代理，因为代理需要知道如何正确处理来自外部 SPA 的 OIDC 授权代码流请求。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "We also add the following properties:"
msgstr "我们还增加了以下属性："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"First, we configure the REST client to point to the base Strava API endpoint.\n"
"We then tune a little bit the way https://quarkus.io/guides/openapi-swaggerui[Quarkus generates OpenAPI document] to make it acceptable by a custom GPT configuration process."
msgstr "首先，我们配置 REST 客户端，使其指向基本 Strava API 端点。然后，我们对 link:https://quarkus.io/guides/openapi-swaggerui[Quarkus 生成 OpenAPI 文档] 的方式稍作调整，使其能够被自定义 GPT 配置流程所接受。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"Now that we have tied up the configuration, we need to define the REST client interface calling the Strava API.\n"
"It automatically https://quarkus.io/guides/security-openid-connect-providers#access-provider-services-with-token-propagation[propagates] the Strava access tokens to access the user-specific Strava data:"
msgstr "配置完成后，我们需要定义调用 Strava API 的 REST 客户端接口。它会自动 link:https://quarkus.io/guides/security-openid-connect-providers#access-provider-services-with-token-propagation[传播] Strava 访问令牌，以访问特定用户的 Strava 数据："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Now, let's implement the primary endpoint of our application, which exposes the same API as Strava. It accepts the access tokens from a custom GPT and uses the REST client to forward them to Strava:"
msgstr "现在，让我们来实现应用程序的主端点，它将提供与 Strava 相同的 API。它接受来自自定义 GPT 的访问令牌，并使用 REST 客户端将其转发给 Strava："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Access to the `FitnessAdviserService` endpoint requires a verified access token."
msgstr "访问 `FitnessAdviserService` 端点需要经过验证的访问令牌。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"Note, to accept binary Strava access tokens, this endpoint verifies them indirectly by requesting `UserInfo` from Strava during the token authentication process, which is enabled by the `quarkus.oidc.provider=strava` declaration.\n"
"In this case, `UserInfo` represents a Strava athlete profile, which is already available to the endpoint by the time it makes an outbound  REST client call. For example, the `FitnessAdviserService` endpoint passes a `UserInfo` athlete `id` attribute to `StravaClient` to request the current authenticated athlete's stats."
msgstr "请注意，为了接受二进制 Strava 访问令牌，该端点会在令牌验证过程中通过 `quarkus.oidc.provider=strava` 声明启用向 Strava 请求 `UserInfo` 来间接验证它们。在这种情况下， `UserInfo` 代表 Strava 运动员配置文件，端点在向外发出 REST 客户端调用时已经可以使用该配置文件。例如， `FitnessAdviserService` 端点将 `UserInfo` athlete `id` 属性传递给 `StravaClient` ，以请求当前已认证运动员的统计数据。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "If it were an access token issued by a provider such as Keycloak or Auth0, then it would be verified locally with the Keycloak or Auth0 public verification keys and https://quarkus.io/guides/security-oidc-bearer-token-authentication#accessing-jwt-claims[injected directly as JsonWebToken]."
msgstr "如果它是由 Keycloak 或 Auth0 等提供商签发的访问令牌，则会在本地使用 Keycloak 或 Auth0 公共验证密钥进行验证，然后 link:https://quarkus.io/guides/security-oidc-bearer-token-authentication#accessing-jwt-claims[直接作为 JsonWebToken 注入] 。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Step 3 - OIDC Proxy"
msgstr "步骤 3 - OIDC 代理"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"Finally, let's talk about the OIDC Proxy.\n"
"We have our OIDC Strava service endpoint calling the Stava API.\n"
"It is time to make it accessible to the external SPA using the OIDC Proxy and an authorization code flow authentication process."
msgstr "最后，让我们来谈谈 OIDC 代理。我们的 OIDC Strava 服务端点调用了 Stava API。现在是使用 OIDC 代理和授权代码流验证流程使外部 SPA 可以访问该服务的时候了。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "All we need to do is adding the following dependency:"
msgstr "我们只需添加以下依赖关系："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "It exposes the OIDC `/q/oidc/authorize` endpoint to accept custom GPT authentication redirects and the `/q/oidc/token` endpoint to exchange the authorization code and tokens."
msgstr "它公开了 OIDC `/q/oidc/authorize` 端点，以接受定制的 GPT 验证重定向，并公开了 `/q/oidc/token` 端点，以交换授权码和令牌。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Let's now update the application configuration to setup our proxy:"
msgstr "现在让我们更新应用程序配置，设置代理："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Request OIDC Proxy to create an endpoint that will support redirects from the actual OIDC provider. As explained in the <<strava_application_registration>> section, it can be helpful to register the known, trusted domain URL in the OIDC provider's dashboard. This property is already set to `/strava` with the Strava provider by default to restrict the possible callback URLs, as explained in the <<strava_application_registration>> section; this example shows how it can be customized. You do not have to use `quarkus.oidc.authentication.redirect-path`, but please be aware of this property."
msgstr "请求 OIDC 代理创建一个端点，以支持来自实际 OIDC 提供商的重定向。如 <<strava_application_registration>> 部分所述，在 OIDC 提供商的仪表板中注册已知的可信域 URL 可能会有所帮助。如 <<strava_application_registration>> 部分所述，Strava 提供商已将此属性默认设置为 `/strava` ，以限制可能的回调 URL；本例展示了如何对其进行自定义。您不必使用 `quarkus.oidc.authentication.redirect-path` ，但请注意该属性。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "The external callback URL where OIDC Proxy will redirect the user to after accepting the `quarkus.oidc.authentication.redirect-path` callback."
msgstr "在接受 `quarkus.oidc.authentication.redirect-path` 回调后，OIDC 代理将把用户重定向到的外部回调 URL。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "<<ngrok, NGrok>> will terminate the HTTPS connection before calling an `HTTP` based endpoint, so the original `HTTPS` scheme must be used for building an external redirect URL."
msgstr "在调用基于 `HTTP` 的端点之前， xref:ngrok[NGrok] 会终止 HTTPS 连接，因此必须使用原始的 `HTTPS` 方案来构建外部重定向 URL。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"Set the external client id and secret that will be used during the integration with the 3rd party SPA. Use these properties if you do not want to expose\n"
"the real client id and secret to the SPA."
msgstr "设置与第三方 SPA 集成时将使用的外部客户 ID 和密码。如果不想向 SPA 公开真实的客户端 ID 和密码，请使用这些属性。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "We're done! Let's run it:"
msgstr "我们完成了！开始运行吧"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "If you prefer to use the Quarkus _dev_ mode, then, to allow the redirects from the external SPA to the OIDC Proxy authorization endpoint, you have to disable the DevUI CORS control:"
msgstr "如果您喜欢使用 Quarkus _开发_ 模式，那么为了允许从外部 SPA 重定向到 OIDC 代理授权端点，您必须禁用 DevUI CORS 控制："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Step 4 - NGrok"
msgstr "步骤 4 - NGrok"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "3rd party SPA will most likely require that the OIDC provider endpoints are HTTPS-based, therefore, to make OIDC Proxy endpoints use the HTTPS scheme on the localhost, using https://ngrok.com/[NGrok] is the simplest way to do it."
msgstr "第三方 SPA 很可能要求 OIDC 提供商端点基于 HTTPS，因此，要让 OIDC 代理端点在本地主机上使用 HTTPS 方案，使用 link:https://ngrok.com/[NGrok] 是最简单的方法。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Note that:"
msgstr "请注意"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"does not prevent the NGrok warning that the website is served for free from NGrok, which confuses the custom GPT's OAuth authorization code flow support.\n"
"In this case you should enable an HTTP tunnel as described in this https://stackoverflow.com/questions/73017353/how-to-bypass-ngrok-browser-warning[Stack Overflow post], for example:"
msgstr "并不能防止 NGrok 警告说网站是由 NGrok 免费提供的，这会混淆自定义 GPT 的 OAuth 授权代码流支持。在这种情况下，您应该按照 link:https://stackoverflow.com/questions/73017353/how-to-bypass-ngrok-browser-warning[Stack Overflow 帖子] 中的描述启用 HTTP 隧道："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Step 5 - Create the custom GPT"
msgstr "第 5 步 - 创建自定义 GPT"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "As noted in the <<gpt_actions>> section, custom GPT actions can only be created with ChatGPT Plus and Enterprise subscriptions. Please see the <<next-steps>> section below for other suggestions to experiment with OIDC Proxy."
msgstr "如 <<gpt_actions>> 部分所述，自定义 GPT 操作只能通过 ChatGPT Plus 和 Enterprise 订阅创建。有关使用 OIDC 代理进行实验的其他建议，请参阅下面的 <<next-steps>> 部分。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Login to your ChatGPT account, and choose `Create` in `My GPTs`:"
msgstr "登录您的 ChatGPT 账户，在 `My GPTs` 中选择 `Create` ："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Name it as `Quarkus Fitness Adviser` and provide its description:"
msgstr "将其命名为 `Quarkus Fitness Adviser` 并提供说明："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Next, choose an `OAuth` authentication option:"
msgstr "然后，选择 `OAuth` 身份验证选项："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "and set the OAuth2 authorize and token endpoint addresses, keeping in mind your free <<ngrok>> domain name and that you have set the OIDC Proxy root address to `/oidc` in the <<oidc_proxy>> section:"
msgstr "并设置 OAuth2 授权和令牌端点地址，同时牢记您的免费 <<ngrok>> 域名，以及您已在 <<oidc_proxy>> 部分将 OIDC 代理根地址设置为 `/oidc` ："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Set the client id and secret to the external client id and external client secret properties which you configured in the <<oidc_proxy>> section."
msgstr "将客户 ID 和秘密设置为在 <<oidc_proxy>> 部分配置的外部客户 ID 和外部客户秘密属性。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"Now you can see that this custom GPT's OAuth setup has been completed without sharing a single detail related to the Strava provider configuration in the Quarkus OIDC service endpoint.\n"
"You also do not need to set the scopes, OIDC Proxy knows about them from the Quarkus OIDC endpoint configuration."
msgstr "现在你可以看到，这个自定义 GPT 的 OAuth 设置已经完成，无需分享与 Quarkus OIDC 服务端点中 Strava 提供商配置相关的任何细节。你也不需要设置作用域，OIDC 代理就能从 Quarkus OIDC 端点配置中了解它们。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Next, import an OpenAPI schema by choosing an `Import from URL` option and entering `http://<your-free-ngrok-domain>/q/openapi`:"
msgstr "接下来，选择 `Import from URL` 选项并输入 `http://<your-free-ngrok-domain>/q/openapi` :"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "At this point you are ready to save this GPT and start using it."
msgstr "此时，您就可以保存此 GPT 并开始使用它了。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Note this GPT's callback, this is the external callback URI value you configured in the <<oidc_proxy>> section:"
msgstr "请注意此 GPT 的回调，即您在 <<oidc_proxy>> 部分配置的外部回调 URI 值："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "You have to decide if you would like to share this GPT. Most likely, after testing it, you will prefer to share it with your team to test it, and eventually, with your customers."
msgstr "您必须决定是否要共享此 GPT。最有可能的是，在测试之后，您更愿意与您的团队共享以进行测试，最终与您的客户共享。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "In this case, the first thing you have to do is to ask ChatGPT for a typical privacy policy text, if you do not already have it, and after modifying it as necessary, save it, for example, in a `privacy.txt` document in the `src/main/resources/META-INF/resources/` of your <<strava_service>> application and link to it in the `Privacy Policy` configuration field as `http://<your-free-ngrok-domain>/privacy.txt`. Finally, publish it using the `Anyone with a link` option."
msgstr "在这种情况下，您首先要做的是向 ChatGPT 索取一份典型的隐私政策文本（如果您还没有的话），然后对其进行必要的修改，例如，将其保存在 <<strava_service>> 应用程序的 `src/main/resources/META-INF/resources/` 中的 `privacy.txt` 文档中，并在 `Privacy Policy` 配置字段中将其链接为 `http://<your-free-ngrok-domain>/privacy.txt` .最后，使用 `Anyone with a link` 选项将其发布。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "`Quarkus Fitness Adviser` is now ready:"
msgstr "`Quarkus Fitness Adviser` 现在已经准备就绪："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Step 6 - Use the custom GPT"
msgstr "第 6 步 - 使用自定义 GPT"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Let's start with asking `Quarkus Fitness Adviser` to check the athlete profile:"
msgstr "首先请 `Quarkus Fitness Adviser` 查看运动员档案："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "When you ask the GPT the first question, it will attempt to sign you in using the OAuth authentication option. Select the `Sign in` option and you will be redirected to OIDC Proxy which will in turn redirect to Strava to authenticate:"
msgstr "当您向 GPT 提出第一个问题时，它会尝试使用 OAuth 身份验证选项登录。选择 `Sign in` 选项，您将被重定向到 OIDC 代理，然后再重定向到 Strava 进行身份验证："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Enter your Strava name and password and continue. You will be asked to authenticate again only when the access token acquired with the authorization code flow has expired."
msgstr "输入您的 Strava 名称和密码并继续。只有当通过授权码流获取的访问令牌过期时，才会要求您再次进行身份验证。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "After the successful authentication you will be asked to authorize the `Quarkus Fitness Adviser` applicaton which you registered in the <<strava_application_registration>> section:"
msgstr "验证成功后，系统会要求您授权在 <<strava_application_registration>> 部分注册的 `Quarkus Fitness Adviser` 应用程序："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "The https://developers.strava.com/docs/authentication/#detailsaboutrequestingaccess[Strava API scopes] which have been configured for the <<strava_service>> affect what you will be asked to authorize."
msgstr "为 <<strava_service>> 配置的 link:https://developers.strava.com/docs/authentication/#detailsaboutrequestingaccess[Strava API 范围] 会影响要求您授权的内容。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"You will now be redirected to the custom GPT with the authorization code which will be exchanged for the access and refresh tokens using OIDC Proxy.\n"
"The GPT will now want to talk to the Quarkus API and ask you to approve it:"
msgstr "您现在将被重定向到带有授权代码的自定义 GPT，该代码将使用 OIDC 代理交换访问和刷新令牌。现在，GPT 将与 Quarkus API 对话，并要求你批准它："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Approve it and `Quarkus Fitness Adviser` will provide the first answer:"
msgstr "批准后， `Quarkus Fitness Adviser` 将提供第一个答案："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "It also provides information about your bike, running shoes, and gives some initial recommendations. You can now ask for some advice on balancing cycling and swimming, running, etc."
msgstr "它还提供了有关自行车和跑鞋的信息，并给出了一些初步建议。现在，您可以就如何平衡骑自行车和游泳、跑步等问题咨询一些建议。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Next, let's ask about the the latest activity:"
msgstr "接下来，我们来了解一下最近的活动："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Ask it to be more specific about the latest activity and provide some advice. Quarkus Fitness Adviser responds:"
msgstr "请它更具体地说明最近的活动，并提供一些建议。Quarkus 健身顾问回复："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "and concludes with a sound advice to have good rest and recovery."
msgstr "最后还提出了良好休息和恢复的合理建议。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Finally, let's ask it to check the profile again and provide more recommendations. `Quarkus Fitness Adviser` is happy to help and provides, in my case, eight personalized recommendations, I will only show the start of the response:"
msgstr "最后，让它再次检查个人资料并提供更多推荐。 `Quarkus Fitness Adviser` 很乐意提供帮助，在我的案例中，它提供了 8 个个性化推荐，我将只显示回复的开头："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "and the end of it:"
msgstr "和结束："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "We will return to this advice later in this post."
msgstr "稍后我们将再次讨论这一建议。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Let's finish by saying `Thank you`:"
msgstr "最后，让我们说 `Thank you` ："

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Next Steps"
msgstr "下一步工作"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"So far, `Quarkus Fitness Adviser` has helped to analyze the authenticated athlete's profile and activities.\n"
"Please experiment further by creating a more advanced version of `Quarkus Fitness Adviser` by checking the routes, zones, and other fitness data supported by the https://developers.strava.com/docs/reference/[Strava API]."
msgstr "到目前为止， `Quarkus Fitness Adviser` 已帮助分析了认证运动员的个人资料和活动。请进一步尝试创建更高级版本的 `Quarkus Fitness Adviser` ，检查 link:https://developers.strava.com/docs/reference/[Strava API] 支持的路线、区域和其他健身数据。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Create a new custom GPT with the help of https://quarkus.io/guides/security-openid-connect-providers[any other well-known social provider supported in Quarkus]."
msgstr "借助 link:https://quarkus.io/guides/security-openid-connect-providers[Quarkus 支持的任何其他知名社交提供商] ，创建新的自定义 GPT。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Also note, your Quarkus OIDC service endpoint does not have to propagate the access token. For example, if you use Keycloak or Auth0, then the access tokens in JWT formats issued by these OIDC compliant providers can be verified by Quarkus OIDC to provide a role-based or permission-based access control for custom GPT's requests, with the service endpoint returning data from the database, etc."
msgstr "还请注意，您的 Quarkus OIDC 服务端点不必传播访问令牌。例如，如果你使用 Keycloak 或 Auth0，那么由这些符合 OIDC 标准的提供商签发的 JWT 格式的访问令牌就可以通过 Quarkus OIDC 进行验证，从而为自定义 GPT 的请求提供基于角色或权限的访问控制，并由服务端点从数据库返回数据等。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "You are also encouraged to look closely at the https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] project which provides a top class integration between Quarkus and the https://github.com/langchain4j/langchain4j[LangChain4j] library."
msgstr "我们还鼓励您仔细研究 link:https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] 项目，该项目提供了 Quarkus 和 link:https://github.com/langchain4j/langchain4j[LangChain4j] 库之间的顶级集成。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "How about creating a custom GPT which will use OIDC Proxy to authenticate custom GPT users to Keycloak or Auth0 or Azure and access Quarkus OIDC service endpoint powered by https://github.com/quarkiverse/quarkus-langchain4j[Quarkus LangChain4j] ? Give it a try please !"
msgstr "如何创建一个自定义 GPT，使用 OIDC 代理将自定义 GPT 用户认证到 Keycloak 或 Auth0 或 Azure，并访问由 Quarkus link:https://github.com/quarkiverse/quarkus-langchain4j[LangChain4j] 支持的 link:https://github.com/quarkiverse/quarkus-langchain4j[Quarkus] OIDC 服务端点？请尝试一下！"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "What if you do not have ChatGPT Plus or Enterprise subscriptions ?"
msgstr "如果您没有订阅 ChatGPT Plus 或企业版，该怎么办？"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Not a problem, OIDC Proxy will work with any SPA which implements an authorization code flow and prefers to have an OIDC provider neutral integration, please test OIDC Proxy with such SPAs."
msgstr "没问题，OIDC 代理可与任何实现授权代码流并希望与 OIDC 提供商中立集成的 SPA 配合使用，请使用此类 SPA 测试 OIDC 代理。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Alternatively, experiment with configuring Quarkus OIDC `web-app` applications using OIDC Proxy to authenticate users before calling OIDC service endpoints. For example, imagine three different Quarkus OIDC `web-app` applications using the same Keycloak realm to authenticate the users with an authorization code flow and propagating the access tokens to the same OIDC `service` application. Now, instead of setting the Keycloak specific details in all of the OIDC `web-app` applications, you can try to add OIDC Proxy to the OIDC Service endpoint and configure the OIDC `web-app` applications to use OIDC Proxy."
msgstr "或者，尝试使用 OIDC 代理配置 Quarkus OIDC `web-app` 应用程序，以便在调用 OIDC 服务端点之前对用户进行身份验证。例如，设想三个不同的 Quarkus OIDC `web-app` 应用程序使用相同的 Keycloak 领域，通过授权代码流对用户进行身份验证，并将访问令牌传播到相同的 OIDC `service` 应用程序。现在，与其在所有 OIDC `web-app` 应用程序中设置 Keycloak 具体细节，不如尝试将 OIDC 代理添加到 OIDC 服务端点，并配置 OIDC `web-app` 应用程序使用 OIDC 代理。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Security Considerations"
msgstr "安全考虑因素"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "You have already seen several OIDC Proxy security features in the <<oidc_proxy>> section."
msgstr "您已经在 <<oidc_proxy>> 部分看到了一些 OIDC 代理的安全功能。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "General OIDC Proxy feature is about hiding all the real OIDC provider specific details from the SPA, including all the OAuth2 or OIDC provider specific details, as well as the extra scopes which are requested during the authentication redirect to the provider."
msgstr "一般 OIDC 代理功能是要从 SPA 隐藏所有真正的 OIDC 提供商特定细节，包括所有 OAuth2 或 OIDC 提供商特定细节，以及在验证重定向到提供商时请求的额外作用域。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "OIDC Proxy allows you to set the trusted domain in the allowed callback URI which is registered in the OIDC provider and enables a callback bridge between the real OIDC provider and the external SPA."
msgstr "OIDC 代理允许在 OIDC 提供商注册的允许回调 URI 中设置受信任域，并在真正的 OIDC 提供商和外部 SPA 之间启用回调桥接。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "You can hide the real client id and client secret which OIDC Proxy must use from the external SPA."
msgstr "您可以向外部 SPA 隐藏 OIDC 代理必须使用的真实客户 ID 和客户秘密。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "You can request that OIDC Proxy does not return a refresh and/or ID token from the authorization code token exchange to the SPA."
msgstr "您可以要求 OIDC 代理不从授权码令牌交换中向 SPA 返回刷新和/或 ID 令牌。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid ""
"Refresh token is the most powerful token, usually with a long life-span. If an SPA leaks it, alongside the client id and secret, the attacker can\n"
"refresh and use access tokens to access the API for a long time. Therefore, if you are concerned about SPA, such as a custom GPT, possibly leaking this information, add `quarkus.oidc-proxy.allow-refresh-token=false` to the configuration to request OIDC Proxy to remove the refresh token value from the authorization code flow response which it is about to return to the GPT. It will not block a given custom GPT from using the Quarkus API, it will only require this GPT to re-authenticate the user when the access token has expired, as opposed to refreshing it."
msgstr "刷新令牌是功能最强大的令牌，通常具有较长的生命周期。如果 SPA 将其与客户端 ID 和秘密一起泄漏，攻击者就可以长期刷新并使用访问令牌访问 API。因此，如果您担心 SPA（如自定义 GPT）可能泄露此信息，请在配置中添加 `quarkus.oidc-proxy.allow-refresh-token=false` ，要求 OIDC 代理从即将返回给 GPT 的授权代码流响应中删除刷新令牌值。它不会阻止特定的自定义 GPT 使用 Quarkus API，只会要求该 GPT 在访问令牌过期时重新认证用户，而不是刷新访问令牌。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "ID token contains information about the currently authenticated user. If you know that the SPA does not need an ID token, such as a custom GPT which only works with the access and refresh tokens, then it is recommended to block returning it with `quarkus.oidc-proxy.allow-id-token=false`"
msgstr "ID 标记包含当前已验证用户的信息。如果知道 SPA 不需要 ID 令牌，例如自定义 GPT 只使用访问令牌和刷新令牌，那么建议使用 `quarkus.oidc-proxy.allow-id-token=false`"

#: _posts/2024-03-27-oidc-proxy.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "In this post, we looked at how https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] can help to integrate OIDC service endpoints with SPA without having to expose the internal OIDC connection details. We have built `Quarkus Fitness Adviser`, a https://platform.openai.com/docs/actions/introduction[custom GPT], which uses OIDC Proxy to authenticate users with https://quarkus.io/guides/security-openid-connect-providers#strava[Strava] and provides fitness advice by reading the authenticated user-specific data from the Quarkus OIDC Strava service."
msgstr "在这篇文章中，我们探讨了 link:https://github.com/quarkiverse/quarkus-oidc-proxy[Quarkus OIDC Proxy] 如何帮助将 OIDC 服务端点与 SPA 集成，而无需暴露内部 OIDC 连接细节。我们构建了 `Quarkus Fitness Adviser` ，这是一个 link:https://platform.openai.com/docs/actions/introduction[自定义的 GPT] ，它使用 OIDC Proxy 对 link:https://quarkus.io/guides/security-openid-connect-providers#strava[Strava] 用户进行验证，并通过从 Quarkus OIDC Strava 服务读取经过验证的特定用户数据来提供健身建议。"

#: _posts/2024-03-27-oidc-proxy.adoc
#, fuzzy
msgid "Enjoy Quarkus, and, as the `Quarkus Fitness Adviser` recommended, enjoy the ride!"
msgstr "享受夸克斯，正如 `Quarkus Fitness Adviser` 所建议的那样，享受旅程！"
