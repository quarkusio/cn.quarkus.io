msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Introducing Quarkus quickjs4j: Seamless JavaScript Integration in Your Quarkus Applications"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "A new Quarkiverse extension that brings JavaScript execution to your Java applications with compile-time code generation and full CDI integration."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Introduction"
msgstr "简介"

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"We're excited to announce the release of the Quarkus quickjs4j extension, a powerful new addition to the\n"
"Quarkus ecosystem that enables seamless execution of JavaScript code within your Java applications. Built\n"
"on top of the https://github.com/roastedroot/quickjs4j[quickjs4j library], this extension brings the\n"
"lightweight QuickJS JavaScript engine to both JVM and Native Quarkus, with full CDI integration and\n"
"compile-time optimizations."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"Whether you need to execute dynamic business logic, implement configurable rules engines, or integrate with\n"
"JavaScript-based algorithms, the Quarkus quickjs4j extension provides a type-safe, performant solution that\n"
"leverages Quarkus's build-time processing capabilities."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Why JavaScript in Java Applications?"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"Quarkus applications often need to execute dynamic logic that can be modified without recompiling the entire\n"
"application. JavaScript provides an excellent solution for this use case, offering:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Dynamic Configuration**: Update business rules and logic without application restarts"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Scripting Capabilities**: Enable power users to customize application behavior"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Algorithm Integration**: Leverage existing JavaScript libraries and algorithms"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Rapid Prototyping**: Quickly test and iterate on complex logic"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"The Quarkus quickjs4j extension makes this integration seamless while maintaining the performance and developer\n"
"experience you expect from Quarkus."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Key Features"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Compile-time Code Generation"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"The extension automatically generates CDI beans and proxy classes for your JavaScript interfaces during build\n"
"time, ensuring optimal performance and early error detection."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Full CDI Integration"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "JavaScript interfaces are first-class citizens in your Quarkus application, injectable like any other CDI bean."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Flexible Script Loading"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"Load JavaScript files from multiple sources:\n"
"- Classpath resources (recommended for packaged scripts)\n"
"- Filesystem paths (for dynamic script loading)\n"
"- URLs (for remote script execution)\n"
"- Anywhere else (using the optional Factory pattern)"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Context Support"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"Pass Java objects as context to JavaScript execution, enabling bidirectional communication between Java and\n"
"JavaScript code."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Sandboxed Execution"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"QuickJs4J provides a secure and efficient way to execute JavaScript within Java. By running code in a sandbox,\n"
"it ensures:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Memory safety – JavaScript runs in isolation, protecting your application from crashes or memory leaks."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "No system access by default – JavaScript cannot access the filesystem, network, or other sensitive resources unless explicitly allowed."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Portability – Being pure Java bytecode, it runs wherever the JVM does."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Native-image friendly – Compatible with GraalVM's native-image for fast, lightweight deployments."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"Whether you're embedding scripting capabilities or isolating untrusted code, QuickJs4J is designed for safe and\n"
"seamless integration."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Getting Started"
msgstr "入门指南"

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Adding the extension to your Quarkus application is straightforward. First, add the dependency to your `pom.xml`:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "You'll also need to enable the annotation processor for code generation:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Simple Example: JavaScript Calculator"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Let's create a simple calculator to demonstrate the extension's capabilities."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "First, define a Java interface annotated with `@ScriptInterface` and `@ScriptImplementation`:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Next, create the JavaScript implementation in `src/main/resources/calculator.js`:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Finally, inject and use the calculator in your Quarkus application:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"That's it! The extension handles all the complexity of JavaScript execution, type conversion, and CDI\n"
"integration behind the scenes."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Advanced Features"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Context Objects for Bidirectional Communication"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"A powerful feature of quickjs4j is the ability to provide Java context objects that JavaScript code\n"
"can invoke:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Your JavaScript code can then call these Java methods:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Factory Pattern for Dynamic Scripts"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "For scenarios where you need to load scripts dynamically at runtime, use the factory pattern:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"This approach is perfect for applications that need to execute user-provided scripts or\n"
"load scripts from external sources.  Note that the execution of the script is fully sandboxed.\n"
"Only the methods exposed by the Context can be invoked from within the script."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Error Handling and Debugging"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "JavaScript errors are propagated as Java exceptions, making debugging straightforward:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Build-time Magic"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Behind the scenes, the extension performs build-time code generation, creating:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**CDI Bean Classes**: `{InterfaceName}_CDI` - Injectable CDI beans"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Factory Classes**: `{InterfaceName}_Factory` - Injectable factory beans"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Proxy Classes**: `{InterfaceName}_Proxy` - Generated by quickjs4j"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Context Builtins**: `{ContextName}_Builtins` - JavaScript-accessible Java methods"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"This build-time approach ensures minimal runtime overhead while providing full IDE\n"
"support with code completion and type checking."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Performance Considerations"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"The QuickJS engine is designed for lightweight, fast JavaScript execution. Combined with\n"
"Quarkus's build-time optimizations, the extension provides:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Fast Startup**: Minimal impact on application startup time"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Low Memory Footprint**: Efficient memory usage for JavaScript execution"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Native Image Support**: Full compatibility with GraalVM native images"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Build-time Validation**: Early detection of interface mismatches and errors"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Use Cases"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "The Quarkus quickjs4j extension is perfect for:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Business Rules Engines**: Implement configurable business logic"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Template Processing**: Generate dynamic content with JavaScript templates"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Algorithm Integration**: Leverage existing JavaScript algorithms and libraries"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**User Scripting**: Allow power users to customize application behavior"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "**Configuration Logic**: Implement complex configuration scenarios"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Current Status and Future Plans"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"The extension is currently in **experimental status**, meaning APIs may evolve based on\n"
"community feedback. We're actively working on:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Enhanced error reporting and debugging capabilities"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Performance optimizations"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Configurable JavaScript engine options"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Improved IDE integration and tooling"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"In particular, we have a lot of work to do in optimizing performance.  There are\n"
"clear tradeoffs to consider around flexibility and speed, as well as customization.\n"
"The current experimental implementation takes a very conservative approach to\n"
"ensure full sandboxing and thread safety.  The result is a slower implementation,\n"
"but one that is guaranteed to be thread safe and fully sandboxed."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Getting Involved"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"The Quarkus quickjs4j extension is part of the Quarkiverse ecosystem and welcomes community\n"
"contributions. Whether you're interested in:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Reporting bugs or requesting features"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Contributing code improvements"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Sharing use cases and examples"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Improving documentation"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"Visit our https://github.com/quarkiverse/quarkus-quickjs4j[GitHub repository] to get involved.\n"
"We would really love for you to try out quickjs4j in Quarkus and give us feedback.  The best\n"
"way to evolve the functionality is by hearing from users!"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"The Quarkus quickjs4j extension opens up exciting possibilities for Java developers who need\n"
"to integrate JavaScript execution into their applications. With its compile-time code generation,\n"
"full CDI integration, and flexible script loading options, it provides a powerful yet easy-to-use\n"
"solution for dynamic code execution."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"Try it out and let us know what you think! We're excited to see what the community builds with this\n"
"capability."
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "Links and Resources"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid ""
"If you want to learn more about QuickJS itself, or the upstream quickjs4j Java project,\n"
"here are some helpful links:"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "https://github.com/quarkiverse/quarkus-quickjs4j[Quarkus quickjs4j GitHub Repository]"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "https://github.com/roastedroot/quickjs4j[quickjs4j Library]"
msgstr ""

#: _posts/2025-07-15-quickjs4j.adoc
msgid "https://bellard.org/quickjs/[QuickJS JavaScript Engine]"
msgstr ""
