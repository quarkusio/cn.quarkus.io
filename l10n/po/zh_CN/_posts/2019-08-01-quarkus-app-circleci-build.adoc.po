# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: YAML Front Matter: author
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, fuzzy, no-wrap
msgid "ewittman"
msgstr "ewittman"

#. type: YAML Front Matter: date
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, fuzzy, no-wrap
msgid "2019-08-01"
msgstr "2019-08-01"

#. type: YAML Front Matter: layout
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, fuzzy, no-wrap
msgid "post"
msgstr "职位"

#. type: YAML Front Matter: synopsis
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, fuzzy, no-wrap
msgid "With a little bit of config mojo, it is possible (and useful) to build a native Quarkus application in CircleCI."
msgstr "有了一点配置的魔力，在CircleCI中建立一个原生的Quarkus应用程序是可能的（而且很有用）。"

#. type: YAML Front Matter: tips
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:1
#, fuzzy, no-wrap
msgid "development-tips"
msgstr "发展-提示"

#. type: Title =
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:9
#, fuzzy, no-wrap
msgid "Using CircleCI to Build a Native Quarkus Application"
msgstr "使用CircleCI建立一个本地Quarkus应用程序"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:15
#, fuzzy
msgid "An important part of any software project, Quarkus applications included, is continuous integration. A popular tool in the CI space is https://circleci.com/[CircleCI], especially with open source projects. There is lots of documentation out there about how to configure CircleCI for a standard Maven project. However, building a native Quarkus executable requires one or two extra steps. This blog post describes how to make it happen."
msgstr "任何软件项目的一个重要部分，包括Quarkus应用程序，是持续集成。CI领域的一个流行工具是 link:https://circleci.com/[CircleCI] ，特别是在开源项目中。关于如何为一个标准的Maven项目配置CircleCI，外面有很多文档。然而，构建一个本地Quarkus可执行文件需要一到两个额外的步骤。这篇博文描述了如何实现这一目标。"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:17
#, fuzzy
msgid "If you're in a hurry, just scroll down to the full (and annotated) example at the bottom of this post."
msgstr "如果你很着急，只需向下滚动到本帖底部的完整（和注释）的例子。"

#. type: Title ==
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:18
#, fuzzy, no-wrap
msgid "Anatomy of a CircleCI Job"
msgstr "剖析CircleCI的工作"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:24
#, fuzzy
msgid "If you aren't familiar with CircleCI, a good place to start might be their https://circleci.com/docs/2.0/configuration-reference/[configuration documentation reference].  This blog post assumes you have a basic familiarity with CircleCI and just want a little bit of help configuring a native Quarkus build. For the most part, the job is configured just like any standard Maven build, including:"
msgstr "如果你不熟悉CircleCI，一个好的开始可能是他们的 link:https://circleci.com/docs/2.0/configuration-reference/[配置文档参考] 。这篇博文假设你已经对CircleCI有了基本的了解，只是想在配置本地Quarkus构建时得到一点帮助。在大多数情况下，工作的配置与任何标准的Maven构建一样，包括。"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:26
#, fuzzy
msgid "Checkout from source"
msgstr "从源头结账"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:27
#, fuzzy
msgid "Dependency caching"
msgstr "依赖性缓存"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:28
#, fuzzy
msgid "Build"
msgstr "构建"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:29
#, fuzzy
msgid "Test"
msgstr "测试"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:32
#, fuzzy
msgid "However for a native Quarkus build, the extra configuration centers around installing https://www.graalvm.org/[GraalVM] and then performing (and verifying) the native image build."
msgstr "然而，对于原生Quarkus的构建，额外的配置集中在安装 link:https://www.graalvm.org/[GraalVM] ，然后执行（并验证）原生镜像的构建。"

#. type: Title ===
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:33
#, fuzzy, no-wrap
msgid "Docker vs. Machine"
msgstr "Docker vs. Machine"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:37
#, fuzzy
msgid "CircleCI allows https://circleci.com/docs/2.0/configuration-reference/#docker-$$-$$machine-$$-$$macosexecutor[three types of \"executors\"] (the runtime environment used to perform the build job). These are:"
msgstr "CircleCI允许 link:https://circleci.com/docs/2.0/configuration-reference/#docker--machine--macosexecutor[三种类型的 \"执行器\"] （用于执行构建作业的运行环境）。它们是"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:39
#, fuzzy
msgid "docker"
msgstr "装载机"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:40
#, fuzzy
msgid "machine"
msgstr "机器"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:41
#, fuzzy
msgid "macos"
msgstr "macos"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:45
#, fuzzy
msgid "It seems that when performing a build using **docker** it is very common to run out of memory. So it is recommended that you use https://circleci.com/docs/2.0/executor-types/#using-machine[**machine**] for your executor. Fortunately, the default virtual machine that is used already contains most of the build tools needed, including (but by no means limited to):"
msgstr "似乎在使用 *docker* 进行构建时，内存耗尽是很常见的。所以建议你用 link:https://circleci.com/docs/2.0/executor-types/#using-machine[*机器*] 来做执行器。幸运的是，使用的默认虚拟机已经包含了大部分需要的构建工具，包括（但绝不限于）。"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:47
#, fuzzy
msgid "Java"
msgstr "爪哇"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:48
#, fuzzy
msgid "Maven"
msgstr "雯雯"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:49
#, fuzzy
msgid "Chrome"
msgstr "铬合金"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:50
#, fuzzy
msgid "PhantomJS"
msgstr "PhantomJS"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:52
#, fuzzy
msgid "The only build tool you will need that is not pre-installed is GraalVM..."
msgstr "你将需要的唯一没有预装的构建工具是GraalVM..."

#. type: Title ===
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:53
#, fuzzy, no-wrap
msgid "GraalVM and native-image"
msgstr "GraalVM和native-image"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:60
#, fuzzy
msgid "In order to successfully build a Quarkus native app using the `mvnw package -Pnative` command, GraalVM must be installed and available at the `GRAALVM_HOME` environment variable. This means that your build config must include the appropriate command(s) needed to download, unpack, and install GraalVM. And you also must configure the `GRAALVM_HOME` environment variable appropriately. There are many ways to install GraalVM, but just one example might be something like this:"
msgstr "为了成功地使用 `mvnw package -Pnative` 命令构建Quarkus本地应用程序，GraalVM必须被安装并在 `GRAALVM_HOME` 环境变量中可用。这意味着你的构建配置必须包括下载、解压和安装GraalVM所需的适当命令。而且你还必须适当地配置 `GRAALVM_HOME` 环境变量。安装GraalVM的方法有很多，但只有一个例子是这样的。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:66
#, no-wrap
msgid ""
"      - run:\n"
"          name: Install GraalVM\n"
"          command: curl https://github.com/oracle/graal/releases/download/vm-19.1.1/graalvm-ce-linux-amd64-19.1.1.tar.gz -O -J -L && tar xfz graalvm-ce-linux-amd64-19.1.1.tar.gz && mv graalvm-ce-19.1.1 .graalvm && rm graalvm-ce-linux-amd64-19.1.1.tar.gz\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:71
#, fuzzy
msgid "Once GraalVM is installed, you will also need to install https://www.graalvm.org/docs/reference-manual/aot-compilation/[**native-image**], which is an add-on to GraalVM. This is done by using the `gu` utility that comes with GraalVM. In the CircleCI config, it might look something like this:"
msgstr "一旦安装了GralVM，你还需要安装 link:https://www.graalvm.org/docs/reference-manual/aot-compilation/[*native-image*] ，它是GralVM的一个附加组件。这可以通过使用GralVM附带的 `gu` 工具来完成。在CircleCI的配置中，它可能看起来像这样。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:77
#, no-wrap
msgid ""
"      - run:\n"
"          name: Install native-image\n"
"          command: $GRAALVM_HOME/bin/gu install native-image\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:81
#, fuzzy
msgid "As mentioned, you will need to set the `GRAALVM_HOME` environment variable. You can either do that globally in the `environment` section of the config, or you can set it separately for each **run** command. It's usually easiest to do the former:"
msgstr "如前所述，你将需要设置 `GRAALVM_HOME` 环境变量。你可以在配置的 `environment` 部分进行全局设置，也可以为每个 *运行* 命令单独设置。通常最简单的是做前者。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:86
#, no-wrap
msgid ""
"    environment:\n"
"      GRAALVM_HOME: /home/circleci/repo/.graalvm\n"
msgstr ""

#. type: Title ===
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:88
#, fuzzy, no-wrap
msgid "Native Build and Verify"
msgstr "本地构建和验证"

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:92
#, fuzzy
msgid "After GraalVM and native-image are installed, you can simply create one or more **run** commands to build and verify your native Quarkus app. It will look like this:"
msgstr "在安装了GraalVM和native-image之后，你可以简单地创建一个或多个 *运行* 命令来构建和验证你的本地Quarkus应用程序。它看起来就像这样。"

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:103
#, no-wrap
msgid ""
"      - run:\n"
"          name: Build (Native)\n"
"          command: ./mvnw clean package -Pnative -DskipTests -Dmaven.test.skip=true\n"
"          no_output_timeout: 30m\n"
"      - run:\n"
"          name: Verify (Native)\n"
"          command: ./mvnw verify -Pnative\n"
"          no_output_timeout: 30m\n"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:110
#, fuzzy
msgid "You will notice that both commands have an additional setting for `no_output_timeout`. It seems that the **native-image** tool does not always complete in a timely fashion. Sometimes it is quick, but sometimes it takes a little bit of time - more than the CircleCI default timeout of 10 minutes. I'm sure that as the GraalVM native-image tool matures, this will be improved (both the total time it takes to run and the variability). Until then, simply increasing the timeout seems to work well."
msgstr "你会注意到这两个命令都有一个额外的设置，即 `no_output_timeout` 。看来， *本地图像* 工具并不总是及时完成。有时它很快，但有时它需要一点时间--超过CircleCI默认的10分钟的超时。我相信，随着GraalVM native-image工具的成熟，这一点会得到改善（包括运行的总时间和变化性）。在那之前，简单地增加超时时间似乎效果不错。"

#. type: Title ==
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:111
#, no-wrap
msgid "Full Example (Annotated)"
msgstr ""

#. type: Plain text
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:115
msgid "You probably just skipped all of the information above this point and want to copy/paste the example, don't you? Yeah that's what I would do too! Here is a full working example (**.circleci/config.yml**) of a native Quarkus build job in CircleCI:"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:137
#, no-wrap
msgid ""
"#\n"
"# Native Quarkus CircleCI configuration file\n"
"#\n"
"version: 2\n"
"jobs:\n"
"  build:\n"
"    # Use \"machine\" instead of e.g. \"docker\" for better/faster results\n"
"    machine: true\n"
"    # Uses a \"medium\" sized machine - maybe increase this to \"large\" if you pay for CircleCI\n"
"    resource_class: medium\n"
"    working_directory: ~/repo\n"
"    environment:\n"
"      MAVEN_OPTS: -Xmx6400m\n"
"      # Set the GRAALVM_HOME env variable to the location where we will be installing GraalVM\n"
"      GRAALVM_HOME: /home/circleci/repo/.graalvm\n"
"    steps:\n"
"      # Checkout the source code\n"
"      # ########################\n"
"      - checkout\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:145
#, no-wrap
msgid ""
"      # Restore any files we may have cached\n"
"      # ########################\n"
"      - restore_cache:\n"
"          keys:\n"
"            - v1-dependencies-{{ checksum \"pom.xml\" }}\n"
"            # fallback to using the latest cache if no exact match is found\n"
"            - v1-dependencies-\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:156
#, no-wrap
msgid ""
"      # Download maven dependencies so that we can cache them\n"
"      # ########################\n"
"      - run:\n"
"          name: Download Dependencies\n"
"          command: mvn dependency:go-offline\n"
"      # Cache the maven dependencies\n"
"      - save_cache:\n"
"          paths:\n"
"            - ~/.m2\n"
"          key: v1-dependencies-{{ checksum \"pom.xml\" }}\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:165
#, no-wrap
msgid ""
"      # Standard maven build and test phases - does not perform a native build (or verify)\n"
"      # ########################\n"
"      - run:\n"
"          name: Build (Standard)\n"
"          command: ./mvnw clean package -DskipTests -Dmaven.test.skip=true\n"
"      - run:\n"
"          name: Verify (Standard)\n"
"          command: ./mvnw test\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:174
#, no-wrap
msgid ""
"      # Install GraalVM and native-image, needed for a native Quarkus build\n"
"      # ########################\n"
"      - run:\n"
"          name: Install GraalVM\n"
"          command: curl https://github.com/oracle/graal/releases/download/vm-19.1.1/graalvm-ce-linux-amd64-19.1.1.tar.gz -O -J -L && tar xfz graalvm-ce-linux-amd64-19.1.1.tar.gz && mv graalvm-ce-19.1.1 .graalvm && rm graalvm-ce-linux-amd64-19.1.1.tar.gz\n"
"      - run: \n"
"          name: Install native-image\n"
"          command: $GRAALVM_HOME/bin/gu install native-image\n"
msgstr ""

#. type: delimited block -
#: upstream/_posts/2019-08-01-quarkus-app-circleci-build.adoc:185
#, no-wrap
msgid ""
"      # Perform a native Quarkus build and verify\n"
"      # ########################\n"
"      - run:\n"
"          name: Build (Native)\n"
"          command: ./mvnw clean package -Pnative -DskipTests -Dmaven.test.skip=true\n"
"          no_output_timeout: 30m\n"
"      - run:\n"
"          name: Verify (Native)\n"
"          command: ./mvnw verify -Pnative\n"
"          no_output_timeout: 30m\n"
msgstr ""
