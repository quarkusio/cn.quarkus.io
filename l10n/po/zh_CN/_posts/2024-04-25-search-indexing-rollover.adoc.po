msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Indexing rollover with Quarkus and Hibernate Search"
msgstr "使用 Quarkus 和 Hibernate 搜索进行索引翻转"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "This is the first post in the series that dives into the implementation details of the search.quarkus.io application. Are you interested in near zero-downtime reindexing? Then this one is for you!"
msgstr "这是深入研究 search.quarkus.io 应用程序实现细节系列的第一篇文章。你对近乎零停机时间的重新索引感兴趣吗？那么这篇文章就是为你准备的！"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"This is the first post in the series diving into the implementation details of the\n"
"link:https://github.com/quarkusio/search.quarkus.io[application] backing the guide search of\n"
"link:https://quarkus.io/guides/[quarkus.io]."
msgstr "这是深入探讨 link:https://github.com/quarkusio/search.quarkus.io[应用程序] 实施细节的系列文章中的第一篇，它支持 link:https://quarkus.io/guides/[quarkus.io] 的指南搜索。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Does your application need full-text search capabilities? Do you need to keep your application running\n"
"and producing search results without any downtime, even when reindexing all your data?\n"
"Look no further. In this post, we'll cover how you can approach this problem\n"
"and solve it in practice with a few low-level APIs, provided you use Hibernate Search,\n"
"be it link:{quarkus-hibernate-search-docs-url}[on top of Hibernate ORM]\n"
"or https://quarkus.io/version/main/guides/hibernate-search-standalone-elasticsearch[in standalone mode]."
msgstr "您的应用程序需要全文搜索功能吗？您是否需要保持应用程序的运行，并在不停机的情况下生成搜索结果，即使在重新索引所有数据时也是如此？请继续往下看。在本篇文章中，我们将介绍如何利用一些底层应用程序接口（API）来处理和解决这个问题，前提是你必须使用 Hibernate Search，无论是 link:{quarkus-hibernate-search-docs-url}[在 Hibernate ORM 的顶层] 还是在 link:https://quarkus.io/version/main/guides/hibernate-search-standalone-elasticsearch[独立模式] 下。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"The approach suggested in this post is based on the fact that Hibernate Search uses\n"
"link:{hibernate-search-docs-url}#backend-elasticsearch-indexlayout[aliased indexes],\n"
"and communicates with the actual index through a read/write alias, depending on the operation it needs to perform.\n"
"For example, a search operation will be routed to a read index alias,\n"
"while an indexing operation will be sent to a write index alias."
msgstr "本文章中建议的方法基于这样一个事实，即 Hibernate Search 使用别名 link:{hibernate-search-docs-url}#backend-elasticsearch-indexlayout[索引] ，并根据需要执行的操作，通过读/写别名与实际索引通信。例如，搜索操作将被路由到读取索引别名，而索引操作将被发送到写入索引别名。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"This approach is implemented and successfully used in our Quarkus application that backs the guides'\n"
"search of https://quarkus.io/guides/[quarkus.io/guides/].\n"
"You can see the complete implementation here:\n"
"link:https://github.com/quarkusio/search.quarkus.io/blob/d956b6a1341d8693fa1d6b7881f3840f48bdaacd/src/main/java/io/quarkus/search/app/indexing/Rollover.java#L44-L331[rollover implementation]\n"
"and link:https://github.com/quarkusio/search.quarkus.io/blob/d956b6a1341d8693fa1d6b7881f3840f48bdaacd/src/main/java/io/quarkus/search/app/indexing/IndexingService.java#L226-L244[rollover usage]."
msgstr "这种方法已在我们的 Quarkus 应用程序中实施并成功使用，该应用程序支持在 link:https://quarkus.io/guides/[quarkus.io/guides/] 中搜索指南。你可以在这里看到完整的实现过程： link:https://github.com/quarkusio/search.quarkus.io/blob/d956b6a1341d8693fa1d6b7881f3840f48bdaacd/src/main/java/io/quarkus/search/app/indexing/Rollover.java#L44-L331[滚动实现] 和 link:https://github.com/quarkusio/search.quarkus.io/blob/d956b6a1341d8693fa1d6b7881f3840f48bdaacd/src/main/java/io/quarkus/search/app/indexing/IndexingService.java#L226-L244[滚动使用] 。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Applications using Hibernate Search can keep their search indexes up-to-date by updating the index gradually,\n"
"as the data on which the index documents are based is modified, providing a near real-time index synchronisation."
msgstr "使用 Hibernate Search 的应用程序可以在索引文档所基于的数据被修改时，通过逐步更新索引来保持其搜索索引的最新状态，从而提供近乎实时的索引同步。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"On the other hand, if the search requirements allow for a delay in synchronisation\n"
"or the data is updated only at certain times of day, the option of mass indexing can effectively keep the indexes up-to-date.\n"
"The link:{hibernate-search-docs-url}[Hibernate Search documentation] provides more information about these approaches\n"
"and other Hibernate Search capabilities."
msgstr "另一方面，如果搜索要求允许延迟同步，或者数据只在一天中的特定时间更新，则批量索引选项可以有效地保持索引的最新状态。有关这些方法和其他 link:{hibernate-search-docs-url}[Hibernate 搜索] 功能的更多信息，请参阅 Hibernate 搜索 link:{hibernate-search-docs-url}[文档] 。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"The application discussed in this post is using the mass indexing approach.\n"
"This means that at certain events, e.g., when a new version of the application is deployed or a scheduled time is reached,\n"
"the application has to process the documentation guides and create search index documents from them."
msgstr "本文章中讨论的应用程序使用的是批量索引方法。这意味着在某些事件中，例如在部署应用程序的新版本或达到预定时间时，应用程序必须处理文档指南并从中创建搜索索引文档。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Now, since we want our application to keep  providing results to any search requests while we add/update documents to the indexes,\n"
"we cannot perform a simple reindexing operation\n"
"using a link:{hibernate-search-docs-url}#search-batchindex-massindexer[mass indexer],\n"
"or the recently added link:{quarkus-hibernate-search-docs-url}#management[management endpoint in Quarkus],\n"
"as these would drop all existing documents from the index before indexing them:\n"
"search operations would not be able to match them anymore until reindexing finishes."
msgstr "现在，由于我们希望在向索引添加/更新文档的同时，应用程序还能继续为任何搜索请求提供结果，因此我们不能使用 link:{hibernate-search-docs-url}#search-batchindex-massindexer[批量索引器] 或 link:{quarkus-hibernate-search-docs-url}#management[Quarkus 中] 最近添加的 link:{quarkus-hibernate-search-docs-url}#management[管理端点] 来执行简单的重新建立索引操作，因为这些操作会在建立索引之前从索引中删除所有现有文档：在重新建立索引完成之前，搜索操作将无法再匹配这些文档。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Instead, we can create a new index with the same schema and route any write operations to it."
msgstr "相反，我们可以创建一个具有相同模式的新索引，并将任何写入操作路由到该索引。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Since Hibernate Search does not provide the rollover feature out of the box (https://hibernate.atlassian.net/browse/HSEARCH-3499[yet])\n"
"we will need to resort to using the lower-level APIs to access the Elasticsearch client and perform the required operations ourselves.\n"
"To do so, we need to follow a few simple steps:"
msgstr "由于 Hibernate Search 并不提供开箱即用的翻转功能（ link:https://hibernate.atlassian.net/browse/HSEARCH-3499[目前还] 没有），因此我们需要使用底层应用程序接口来访问 Elasticsearch 客户端，并自己执行所需的操作。为此，我们需要遵循几个简单的步骤："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the mapping information for the index we want to reindex using the schema manager."
msgstr "使用模式管理器获取要重新索引的索引的映射信息。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"@Inject\n"
"SearchMapping searchMapping; // <1>\n"
"// ...\n"
"\n"
"searchMapping.scope(MyIndexedEntity.class).schemaManager() // <2>\n"
"    .exportExpectedSchema((backendName, indexName, export) -> { // <3>\n"
"        var createIndexRequestBody = export.extension(ElasticsearchExtension.get())\n"
"                .bodyParts().get(0); // <4>\n"
"        var mappings = createIndexRequestBody.getAsJsonObject(\"mappings\"); // <5>\n"
"        var settings =createIndexRequestBody.getAsJsonObject(\"settings\"); // <6>\n"
"    });"
msgstr "@Inject SearchMapping searchMapping; // <1>."

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Inject `SearchMapping` somewhere in your app so that we can use it to access a schema manager."
msgstr "在应用程序中注入 `SearchMapping` ，以便我们使用它访问模式管理器。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Get a schema manager for the indexed entity we are interested in (`MyIndexedEntity`).\n"
"If all entities should be targeted, then `Object.class` can be used to create the scope."
msgstr "为我们感兴趣的索引实体获取模式管理器 ( `MyIndexedEntity` )。如果要针对所有实体，则可使用 `Object.class` 创建作用域。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Use the export schema API to access the mapping information."
msgstr "使用导出模式 API 访问映射信息。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Use the extension to get access to the Elasticsearch-specific `.bodyParts()` method that returns\n"
"a JSON representing the JSON HTTP body needed to create the indexes."
msgstr "使用该扩展可访问 Elasticsearch 特有的 `.bodyParts()` 方法，该方法会返回一个 JSON，代表创建索引所需的 JSON HTTP 主体。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the mapping information for the particular index."
msgstr "获取特定索引的映射信息。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the settings for the particular index."
msgstr "获取特定索引的设置。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the reference to the Elasticsearch client, so we can perform API calls to the search backend cluster:"
msgstr "获取 Elasticsearch 客户端的引用，这样我们就可以对搜索后端集群执行 API 调用："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"@Inject\n"
"SearchMapping searchMapping; // <1>\n"
"// ...\n"
"RestClient client = searchMapping.backend() // <2>\n"
"    .unwrap(ElasticsearchBackend.class) // <3>\n"
"    .client(RestClient.class); // <4>"
msgstr "@Inject SearchMapping searchMapping; // <1> RestClient client = searchMapping.backend() // <2> .unwrap(ElasticsearchBackend.class) // <3> .client(RestClient.class); // <4>."

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Access the backend from a search mapping instance."
msgstr "从搜索映射实例访问后台。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Unwrap the backend to the `ElasticsearchBackend`, so that we can access backend-specific APIs."
msgstr "将后端解包到 `ElasticsearchBackend` ，这样我们就可以访问后端特定的 API。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get a reference to the Elasticsearch's rest client."
msgstr "获取 Elasticsearch 休息客户端的引用。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Create a new index using the OpenSearch/Elasticsearch rollover API\n"
"that would allow us to keep using the existing index for read operations,\n"
"while write operations will be sent to the new index:"
msgstr "使用 OpenSearch/Elasticsearch 翻转 API 创建一个新索引，允许我们继续使用现有索引进行读取操作，而写入操作将发送到新索引："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"@Inject\n"
"SearchMapping searchMapping; // <1>\n"
"// ...\n"
"\n"
"SearchIndexedEntity<?> entity = searchMapping.indexedEntity(MyIndexedEntity.class);\n"
"var index = entity.indexManager().unwrap(ElasticsearchIndexManager.class).descriptor(); // <2>\n"
"\n"
"var request = new Request(\"POST\", \"/\" + index.writeName() + \"/_rollover\"); // <3>\n"
"var body = new JsonObject();\n"
"body.add(\"mappings\", mappings);\n"
"body.add(\"settings\", settings);\n"
"body.add(\"aliases\", new JsonObject()); // <4>\n"
"request.setEntity(new StringEntity(gson.toJson(body), ContentType.APPLICATION_JSON));\n"
"\n"
"var response = client.performRequest(request); // <5>\n"
"//..."
msgstr "@Inject SearchMapping searchMapping; // <1>."

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get the index descriptor to get the aliases from it."
msgstr "获取索引描述符以从中获取别名。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Start building the rollover request body using the write index alias from the index descriptor."
msgstr "使用索引描述符中的写入索引别名开始构建翻转请求正文。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Note that we are including an empty \"aliases\" so that the aliases are not copied over to the new index,\n"
"except for the write alias (which is implicitly updated since the rollover request is targeting it directly).\n"
"We don't want the read alias to start pointing to the new index immediately."
msgstr "请注意，我们包含了一个空的 \"别名\"，这样除了写别名（由于翻转请求直接针对它，所以它被隐式更新）外，其他别名不会被复制到新索引。我们不希望读取别名立即开始指向新索引。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Perform the rollover API request using the Elasticsearch REST client obtained in the previous step."
msgstr "使用上一步获得的 Elasticsearch REST 客户端执行翻转 API 请求。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "With this successfully completed, indexes are in the state we wanted:"
msgstr "成功完成后，索引就处于我们想要的状态了："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "We can start populating our write index without affecting search requests."
msgstr "我们可以在不影响搜索请求的情况下开始填充写入索引。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Once we are done with indexing, we can either commit or rollback depending on the results:"
msgstr "索引编制完成后，我们可以根据结果提交或回滚："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Committing the index rollover means that we are happy with the results and ready to switch to the new index\n"
"for both reading and writing operations while removing the old one. To do that, we need to send a request to the cluster:"
msgstr "提交索引翻转意味着我们对结果感到满意，并准备好切换到新索引进行读写操作，同时删除旧索引。为此，我们需要向群集发送一个请求："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"var client = ... <1>\n"
"\n"
"var request = new Request(\"POST\", \"_aliases\"); // <2>\n"
"request.setEntity(new StringEntity(\"\"\"\n"
"        {\n"
"            \"actions\": [\n"
"                {\n"
"                    \"add\": {  // <3>\n"
"                        \"index\": \"%s\",\n"
"                        \"alias\": \"%s\",\n"
"                        \"is_write_index\": false\n"
"                    },\n"
"                    \"remove_index\": {  // <4>\n"
"                        \"index\": \"%s\"\n"
"                    }\n"
"                }\n"
"            ]\n"
"        }\n"
"        \"\"\".formatted( newIndexName, readAliasName, oldIndexName ) // <5>\n"
"    , ContentType.APPLICATION_JSON));\n"
"\n"
"var response = client.performRequest(request); // <5>\n"
"//..."
msgstr "var client = ... <1>"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Get access to the Elasticsearch REST client as described above."
msgstr "如上所述，访问 Elasticsearch REST 客户端。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Start creating an `_aliases` API request."
msgstr "开始创建 `_aliases` API 请求。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Add an action to update the index aliases to use the new index for both read and write operations.\n"
"Here, we must make the read alias point to the new index."
msgstr "添加一个操作来更新索引别名，以便在读取和写入操作中使用新索引。在此，我们必须让读取别名指向新索引。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Add an action to remove the old index."
msgstr "添加删除旧索引的操作。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"The names of the new/old index can be retrieved from the response of the initial `_rollover` API request,\n"
"while the aliases can be retrieved from the index descriptor."
msgstr "新/旧索引的名称可从 `_rollover` API 初始请求的响应中获取，而别名则可从索引描述符中获取。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Otherwise, if we have encountered an error or decided for any other reason to stop the rollover, we can roll back to using\n"
"the initial index:"
msgstr "否则，如果我们遇到错误或出于其他原因决定停止滚动，我们可以回滚到使用初始索引："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"var client = ... <1>\n"
"\n"
"var request = new Request(\"POST\", \"_aliases\"); // <2>\n"
"request.setEntity(new StringEntity(\"\"\"\n"
"        {\n"
"            \"actions\": [\n"
"                {\n"
"                    \"add\": {  // <3>\n"
"                        \"index\": \"%s\",\n"
"                        \"alias\": \"%s\",\n"
"                        \"is_write_index\": true\n"
"                    },\n"
"                    \"remove_index\": {  // <4>\n"
"                        \"index\": \"%s\"\n"
"                    }\n"
"                }\n"
"            ]\n"
"        }\n"
"        \"\"\".formatted( oldIndexName, writeAliasName, newIndexName ) // <5>\n"
"    , ContentType.APPLICATION_JSON));\n"
"\n"
"var response = client.performRequest(request); // <5>\n"
"//..."
msgstr "var client = ... <1>"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Add an action to update the index aliases to use the old index for both read and write operations.\n"
"Here, we must make the write alias point back to the old index."
msgstr "添加一个操作来更新索引别名，以便在读取和写入操作中使用旧索引。在此，我们必须使写别名指向旧索引。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Add an action to remove the new index."
msgstr "添加删除新索引的操作。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Keep in mind that in case of a rollback, your initial index may be out of sync if any write operations were performed\n"
"while the write alias was pointing to the new index."
msgstr "请记住，在回滚的情况下，如果在写别名指向新索引时执行了任何写操作，那么初始索引可能会不同步。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "With this knowledge, we can organize the rollover process as follows:"
msgstr "有了这些知识，我们就可以对翻转过程做出如下安排："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"try (Rollover rollover = Rollover.start(searchMapping)) {\n"
"    // Perform the indexing operations ...\n"
"    rollover.commit();\n"
"}"
msgstr "try (Rollover rollover = Rollover.start(searchMapping)){ // 执行索引操作 ... rollover.commit(); }"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Where the `Rollover` class will look as follows:"
msgstr "`Rollover` 类的外观如下："

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"class Rollover implements Closeable {\n"
"    public static Rollover start(SearchMapping searchMapping) {\n"
"        // initiate the rollover process by sending the _rollover request ...\n"
"        // ...\n"
"        return new Rollover( client, rolloverResponse );  // <1>\n"
"    }\n"
"\n"
"    @Override\n"
"    public void close() {\n"
"        if ( !done ) { // <2>\n"
"            rollback();\n"
"        }\n"
"    }\n"
"\n"
"    public void commit() {\n"
"        // send the `_aliases` request to switch to the *new* index\n"
"        // ...\n"
"        done = true;\n"
"    }\n"
"\n"
"    public void rollback() {\n"
"        // send the `_aliases` request to switch to the *old* index\n"
"        // ...\n"
"        done = true;\n"
"    }\n"
"}"
msgstr "class Rollover implements Closeable { public static Rollover start(SearchMapping searchMapping) { // 通过发送 _rollover 请求启动翻转过程 ... // ... return new Rollover( client, rolloverResponse ); // <1> }"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "Keep the reference to the Elasticsearch REST client to perform API calls."
msgstr "保留对 Elasticsearch REST 客户端的引用，以便执行 API 调用。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid "If we haven't successfully committed the rollover, it'll be rolled back on close."
msgstr "如果我们没有成功提交展期，它将在关闭时回滚。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Once again, for a complete working example of this rollover implementation, check out the\n"
"link:https://github.com/quarkusio/search.quarkus.io[search.quarkus.io on GitHub]."
msgstr "再次强调，如需完整的翻转实现示例，请访问 link:https://github.com/quarkusio/search.quarkus.io[GitHub 上的 search.quarkus.io] 。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"If you find this feature useful and would like to have it built-in into your Hibernate Search and Quarkus apps\n"
"feel free to reach out to us on the https://hibernate.atlassian.net/browse/HSEARCH-3499[pending feature requests]\n"
"to discuss your ideas and suggestions."
msgstr "如果你觉得这个功能很有用，并希望将其内置到你的 Hibernate Search 和 Quarkus 应用程序中，请随时通过 link:https://hibernate.atlassian.net/browse/HSEARCH-3499[待处理的功能请求] 联系我们，讨论你的想法和建议。"

#: _posts/2024-04-25-search-indexing-rollover.adoc
#, fuzzy
msgid ""
"Stay tuned for more details in the coming weeks as we publish more blog posts\n"
"diving into other interesting implementation aspects of this application.\n"
"Happy searching and rolling over!"
msgstr "未来几周，我们将发布更多博文，深入探讨此应用程序的其他有趣实施方面，敬请期待更多详情。搜索和翻滚愉快！"
