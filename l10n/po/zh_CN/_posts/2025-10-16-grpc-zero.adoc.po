msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Quarkus gRPC Zero"
msgstr "Quarkus gRPC Zero"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"gRPC code generation that runs on the JVM so you do not need native protoc "
"binaries."
msgstr "gRPC 代码生成可在 JVM 上运行，因此无需本地 protoc 二进制文件。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "*Make gRPC code generation portable: no native protoc, no surprises.*"
msgstr "*使 gRPC 代码生成具有可移植性：无本地 protoc，无意外。*"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "TL;DR"
msgstr "简要说明"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Quarkus gRPC Zero brings gRPC code generation into the JVM so you no longer "
"need native 'protoc' binaries. Add the extension, build your project, and "
"the generated stubs appear just like before."
msgstr ""
"Quarkus gRPC Zero 将 gRPC 代码生成引入 JVM，因此你不再需要本地 \"protoc "
"\"二进制文件。添加扩展，构建项目，生成的存根就会像以前一样出现。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"The important outcome is consistent, portable builds across developer "
"machines, CI, containers, and even unusual architectures."
msgstr "重要的成果是在开发人员机器、CI、容器，甚至是不同寻常的架构之间实现一致、可移植的构建。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Why this matters"
msgstr "为什么这很重要"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"If you have spent time wrestling with platform-specific `protoc` binaries, "
"cross-compiled plugins, you know the cost: slow onboarding, fragile builds, "
"extra Docker layers, and ongoing maintenance. Quarkus gRPC Zero removes that "
"operational burden so teams can focus on APIs and features instead of trying "
"to find the right combination of dependencies to compile `proto` files."
msgstr ""
"如果你曾花时间与特定平台的 `protoc` 二进制文件、交叉编译的插件打交道，你就会知道其中的代价：缓慢的上架、脆弱的构建、额外的 Docker "
"层以及持续的维护。Quarkus gRPC Zero消除了这种操作负担，因此团队可以专注于API和功能，而不是试图找到正确的依赖关系组合来编译 "
"`proto` 。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "What Quarkus gRPC Zero does"
msgstr "Quarkus gRPC Zero 的功能"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Quarkus gRPC Zero runs the `protoc` compilation inside the JVM as a pure "
"Quarkus _codegen_  module."
msgstr "Quarkus gRPC Zero 作为纯粹的 Quarkus _codegen_ 模块，在 JVM 内运行 `protoc` 编译。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"From a developer point of view nothing changes: you keep writing `.proto` "
"files, run your Quarkus build, and use the generated sources."
msgstr "从开发者的角度来看，这一切都不会改变：你可以继续编写 `.proto` 文件，运行 Quarkus 编译，并使用生成的源代码。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"The difference is that builds are portable and predictable on any JVM host. "
"It avoids having to download dozen of dependencies to handle every OS/"
"architecture combination."
msgstr "不同之处在于，在任何 JVM 主机上，构建都是可移植和可预测的。它避免了为处理各种操作系统/体系结构组合而下载大量依赖项的麻烦。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Benefits"
msgstr "益处"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Portable builds that behave the same on laptops, CI, containers, and edge "
"devices."
msgstr "便携式构建，在笔记本电脑、CI、容器和边缘设备上表现相同。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Simpler CI and less downloads as you don't need native executables."
msgstr "由于不需要本地可执行文件，CI 更简单，下载更少。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Less maintenance for platform teams who no longer manage platform-specific "
"toolchains."
msgstr "减少平台团队的维护工作，他们不再需要管理特定平台的工具链。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"A small, self-contained Java dependency that performs `proto` file "
"compilation."
msgstr "一个小型、独立的 Java 依赖项，可执行 `proto` 文件编译。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Quick start"
msgstr "快速启动"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Add the extension to your project. Replace 'VERSION' with the release you "
"choose."
msgstr "将扩展添加到项目中。将 \"版本 \"替换为您选择的版本。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"If you are migrating from an existing Quarkus gRPC setup, you need to "
"exclude the 'quarkus-grpc-codegen' artifact from your 'quarkus-grpc' "
"dependency and add 'quarkus-grpc-zero' instead as a drop-in replacement.\n"
"Build your project as usual and generated sources will appear during the "
"build step."
msgstr ""
"如果你是从现有的 Quarkus gRPC 设置迁移而来，你需要从 \"quarkus-grpc \"依赖关系中排除 \"quarkus-grpc-"
"codegen\"，并添加 \"quarkus-grpc-zero \"作为直接替换。像往常一样构建你的项目，生成的源代码将在构建步骤中出现。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Example workflow"
msgstr "工作流程示例"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Add the 'quarkus-grpc' dependency with exclusions for 'quarkus-grpc-codegen' "
"and include 'quarkus-grpc-zero'."
msgstr ""
"添加 \"quarkus-grpc \"依赖关系，排除 \"quarkus-grpc-codegen\"，并包含 \"quarkus-grpc-"
"zero\"。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Keep authoring '.proto' files as before."
msgstr "继续像以前一样编写\".proto \"文件。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Run the Quarkus build. Generated stubs will be produced on the JVM and "
"compilation completes normally."
msgstr "运行 Quarkus 编译。生成的存根将在 JVM 上生成，编译也将正常完成。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"The developer ergonomics are unchanged, but there are no native tools "
"invoked during the process."
msgstr "开发人员的人体工学设计保持不变，但在开发过程中不会调用本地工具。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Current status and roadmap"
msgstr "现状和路线图"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Quarkus gRPC Zero is  currently experimental but ready for early adopters."
msgstr "Quarkus gRPC Zero 目前处于试验阶段，但已为早期用户做好准备。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"It passes integration tests and works in typical Quarkus builds.\n"
"We are actively improving the project and welcome feedback, real-world "
"testing, and bug reports to guide stabilization and future features."
msgstr ""
"它通过了集成测试，并能在典型的 Quarkus 版本中运行。我们正在积极改进该项目，欢迎反馈、实际测试和错误报告，以指导项目的稳定和未来功能的开发。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Under the Hood"
msgstr "引擎盖下"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"The extension embeds a version of `libprotobuf`, compiled to WebAssembly "
"(with the CLI stripped out) and translated into pure Java bytecode thanks to "
"https://chicory.dev[Chicory].\n"
"The result is a self-contained JAR that provides the full `protoc` engine "
"capabilities (including plugin support) and runs on any JVM, transparently "
"and portably across platforms."
msgstr ""
"该扩展嵌入了一个 `libprotobuf` 版本，编译为 WebAssembly（去除了 CLI），并通过 link:https://chicory."
"dev[Chicory] 转换为纯 Java 字节码。这样就形成了一个自包含的 JAR，它提供了完整的 `protoc` "
"引擎功能（包括插件支持），并能在任何 JVM 上运行，具有跨平台的透明性和可移植性。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Try it and report any errors"
msgstr "试用并报告任何错误"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Please try Quarkus gRPC Zero in your projects.\n"
"We want real-world feedback and we especially want to hear about any errors, "
"edge cases, or surprising behavior you encounter.\n"
"We are happy to quickly to turn things around to fix outstanding bugs."
msgstr ""
"请在您的项目中试用 Quarkus gRPC "
"Zero。我们需要真实世界的反馈，尤其希望听到您遇到的任何错误、边缘情况或令人惊讶的行为。我们很高兴能尽快修复尚未解决的错误。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"If you see an error, open a ticket at the project repository: https://github."
"com/quarkiverse/quarkus-grpc-zero/issues[quarkiverse/quarkus-grpc-zero "
"issues]"
msgstr ""
"如果您发现错误，请在项目库中开票： link:https://github.com/quarkiverse/quarkus-grpc-zero/"
"issues[quarkiverse/quarkus-grpc-zero issues]"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Your reports will shape the project and help us make code generation "
"reliable for everyone."
msgstr "您的报告将影响项目的发展，帮助我们为每个人提供可靠的代码生成。"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid "Closing"
msgstr "闭幕"

#: _posts/2025-10-16-grpc-zero.adoc
#, fuzzy
msgid ""
"Quarkus gRPC Zero is about outcomes: consistent builds and no more native "
"`protoc` maintenance.\n"
"Try it, use it in your CI, and please report any feedback so we can make it "
"production-ready for every environment."
msgstr ""
"Quarkus gRPC Zero 着眼于成果：一致的构建，不再需要原生 `protoc` 维护。请试用它，在您的 CI "
"中使用它，并报告任何反馈意见，以便我们能让它为每个环境的生产就绪。"
