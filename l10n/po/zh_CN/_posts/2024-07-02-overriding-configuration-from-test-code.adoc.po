msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Overriding the configuration of a Quarkus app from its test code"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Increase your test coverage by overriding the configuration of your Quarkus app from its test code."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"Overriding the configuration of a Quarkus app from its test code is often required to achieve a good test coverage.\n"
"Whenever a config property determines how the app behaves, all possible config values need to be tested."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "All branches need to be tested"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "In a real project, this interface would likely be `public` and declared in a separate file."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"There are many ways to override the configuration from the test code.\n"
"This post will show you five approaches, with a particular focus on the benefits and drawbacks of each of them."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "All code snippets from this post (and more!) are available in the https://github.com/gwenneg/blog-overriding-configuration-from-test-code[gwenneg/blog-overriding-configuration-from-test-code^] repository."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "[[quarkus-test-profiles]] Approach #1: Quarkus test profiles"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"https://quarkus.io/guides/getting-started-testing#testing_different_profiles[Quarkus test profiles^] are one of the best ways to override the configuration.\n"
"They can be used while testing in native mode, unlike most approaches listed in this post.\n"
"In addition to the config override, they provide https://quarkus.io/guides/getting-started-testing#writing-a-profile[many additional capabilities^] which make it easier to test Quarkus apps."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"From a configuration override perspective, test profiles suffer however from a few drawbacks.\n"
"First, Quarkus is restarted before each test profile is used, which obviously slows down the tests execution.\n"
"The tests also have to be split into several test profiles and classes to cover multiple values of the same config properties.\n"
"As a result, bigger projects may end up with lots of test profiles and spend a lot of time restarting Quarkus between tests.\n"
"Maintaining or reviewing the test code may also be more challenging with test profiles."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "The code to be tested"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Test profiles work with both https://quarkus.io/guides/config-mappings[config mappings^] and `@ConfigProperty`."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"Most guides about test profiles will introduce them in a verbose way to demonstrate all their capabilities.\n"
"A test profile can actually be added to an existing test class with only a few extra lines:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "The test class which is also a test profile"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"The test class itself can implement `QuarkusTestProfile` if the profile isn't shared across multiple test classes.\n"
"This can make the maintenance and reviews of the test code easier.\n"
"If multiple test classes depend on the same profile, then that profile will likely need to be declared in a dedicated class."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This method comes from `QuarkusTestProfile` and makes it possible to override the configuration from the test code."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "The config key generated from the `FeaturesConfig` interface is prefixed with `features.` while the config key that comes from the `@ConfigProperty` injection has no prefix."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Test profiles can also leverage https://quarkus.io/guides/config-reference#profile-aware-files[profile aware files^] to override the configuration from the test code:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "application-blog.properties"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "When that is used, the test profile needs to override the default config profile:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "The test code"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This method comes from `QuarkusTestProfile` and makes it possible to override the default config profile."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "The `application-blog.properties` file will be loaded because the `blog` config profile is active."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"If the tests are run in JVM mode only and not in native mode, the `application-blog.properties` file can be placed in the `src/test/resources` folder.\n"
"An additional `application.properties` file (possibly empty) is also required in the same location to enable profile aware files."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"If the tests are run in native mode, the same `application-blog.properties` and `application.properties` files are needed as well, but they have to be placed in the `src/main/resources` folder.\n"
"The `application.properties` file also needs to contain the following line:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "application.properties"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Approach #2: mocking the config with Mockito"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Now, here's my favorite approach when native testing is not required."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "First, let's see how that works with a https://quarkus.io/guides/config-mappings[config mapping^]:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This annotation can be omitted."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"This is required to make the `FeaturesConfig` interface implementation proxyable.\n"
"Without that, it wouldn't be possible to mock it with `@InjectMock`."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"The config class is mocked with the help of the `quarkus-junit5-mockito` extension.\n"
"Injections are not supported in tests in native mode, so this only works when the test is run in JVM mode."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "The configuration can be mocked from the test method or from a method annotated with one of JUnit's https://junit.org/junit5/docs/current/user-guide/#writing-tests-definitions[lifecycle annotations^] such as `@BeforeEach`."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"What if your project relies on `@ConfigProperty` instead of `@ConfigMapping`?\n"
"Well, that works too!\n"
"You'll just need to move the config properties to an extra `@ApplicationScoped` bean.\n"
"That bean may or may not be used to centralize all config properties from the Quarkus app."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "A centralized config class, with logging at application startup"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This method is executed at application startup. See the https://quarkus.io/guides/lifecycle#listening-for-startup-and-shutdown-events[Application initialization and termination^] guide for more details about the application lifecycle events."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "`TreeMap` helps automatically sort the map entries by keys alphabetically."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"The application config is logged at startup.\n"
"This can really help if you ever need to investigate an issue based on past logs.\n"
"Be careful not to log any sensitive config values though! (e.g. secrets or passwords)"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This approach can also leverage the `@ParameterizedTest` feature from JUnit and test several values of a config property with a single test method:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "The test code based on @ParameterizedTest"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "When the tests are run, this method will be invoked once for each value provided with the `@ValueSource` annotation."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Approach #3: constructor injection"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"What if you need native testing in a big project that suffers from the Quarkus test profiles drawbacks mentioned earlier in this post?\n"
"Injecting the configuration through your CDI beans constructors might be the right approach for you."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"The configuration is injected in the constructor of the CDI bean.\n"
"This approach works with both https://quarkus.io/guides/config-mappings[config mappings^] and `@ConfigProperty`."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This is used to override the configuration from the `FeaturesConfig` interface."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"The configuration is overridden from the test when the bean constructor is invoked.\n"
"The first argument overrides the configuration that relies on `@ConfigMapping`.\n"
"The second argument overrides the configuration that relies on `@ConfigProperty`."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"With this approach, no injections will be performed by CDI when the tests are run because the bean is instantiated manually instead of being managed by the CDI container from Quarkus.\n"
"That drawback can be mitigated by injecting all dependencies (other beans and/or configuration) through the constructor of the tested bean.\n"
"When that is done, CDI injections still won't work but the test code will be able to provide all dependencies required for the test execution."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Approach #4: testing components"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"Quarkus recently introduced an experimental feature called https://quarkus.io/guides/getting-started-testing#testing-components[Testing components^] which can be used to override the configuration from the test code.\n"
"That feature is provided by the `quarkus-junit5-component` extension."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"This approach doesn't start the full Quarkus app.\n"
"It only starts the CDI container and injects the fields from the test which are annotated with `@jakarta.inject.Inject` or `@io.quarkus.test.InjectMock`.\n"
"It can therefore be much faster, especially in bigger projects, than the full Quarkus app restarts that come with <<quarkus-test-profiles,Quarkus test profiles>>."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This approach doesn't work with native testing because it relies on injections in the test code, which are only supported when the tests are run in JVM mode."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Let's see how that works:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Testing components works with both https://quarkus.io/guides/config-mappings[config mappings^] and `@ConfigProperty`."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "The usual `@QuarkusTest` annotation has been replaced with `@QuarkusComponentTest`."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "`@TestConfigProperty` can be used on the test class, a test method or both."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Approach #5: system properties"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"I would definitely NOT recommend this approach, but it does exist and it kinda works, so I'll mention it anyway.\n"
"System properties can be used to override the configuration from the test code.\n"
"This approach suffers however from major drawbacks:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "It doesn't work in native mode."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "It doesn't work with https://quarkus.io/guides/config-mappings[config mappings^]."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"It only works once when the configuration is defined in an `@ApplicationScoped` or `@Singleton` bean, before that bean has been initialized.\n"
"After the bean initialization, any changes made to system properties will have no effect on the configuration."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "System properties can be set from the command line with Maven or Gradle:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Maven command"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "They can also be set from the test code:"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "In this code snippet, tests are run in a fixed order to demonstrate a limitation of system properties."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This test always runs first."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "This test always runs last."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"This test depends on a CDI bean with a default `@Singleton` scope which was already initialized by the previous test.\n"
"As a consequence, the outcome of this test cannot be changed from the system property."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"First, this post is not a comprehensive list of all existing approaches to override the configuration from the test code.\n"
"There are additional options such as using reflection (hardly maintainable) which I did not include, and probably approaches I'm not even aware of.\n"
"Please don't hesitate to share your experience and opinion about this topic in the comments!"
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"Most of you probably started reading this post with a question in mind: what is the best approach?\n"
"Well, as you probably understood through the post, none of them is perfect (yet).\n"
"They all come with drawbacks.\n"
"In my experience, the real question is not about picking the best approach, but rather about how to better combine different approaches and use the best they each have to offer."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid ""
"If you're unsure about which approach you may introduce in your project, the https://github.com/gwenneg/blog-overriding-configuration-from-test-code[gwenneg/blog-overriding-configuration-from-test-code^] repository might help you make that decision.\n"
"It contains an implementation of all approaches mentioned in this post."
msgstr ""

#: _posts/2024-07-02-overriding-configuration-from-test-code.adoc
msgid "Thanks for reading this post! I hope it will help you better test your Quarkus apps."
msgstr ""
