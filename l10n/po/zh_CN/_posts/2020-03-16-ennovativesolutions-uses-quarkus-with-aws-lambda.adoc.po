# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Ennovative Solutions uses Quarkus with AWS Lambda to deliver a better customer experience with their new product PURQR"
msgstr "Ennovative Solutions使用Quarkus和AWS Lambda为其新产品PURQR提供更好的客户体验"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://www.ennovative-solutions.be/[Ennovative Solutions] is an IT Consulting and Services company out of Diepenbeek, Belgium. By working with many customers, including ones in retail, they identified that many of them were suffering low sales due to poor customer experience. As a result, in 2019, they created a new application called https://www.purqr.com/?fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR] (Purchasing via QR codes), which is a new cloud platform that comes with both a backend application and a mobile application to manage retailers’ physical store showrooms. By using the mobile app, one can perform in store analytics, e.g. popular products & categories, best performing salespersons, etc., and deliver a more personalized experience to end customers. The platform also manages appointments and customer data so when they leave the showroom they can receive an overview of what they liked via mail. In addition, PURQR integrates to customers’ quoting systems. For example, one of its goals is to provide customers with a more personalized follow-up quote to turn it into a sale. The solution also keeps customer information for further communication and possible co-sale and up-sale opportunities. Because one scans the products as part of its processes, one can get insights into popular products that the company can then stock up on.  Their cloud platform can improve customer experience and also increase sales."
msgstr "link:https://www.ennovative-solutions.be/[Ennovative Solutions] 是一家位于比利时迪彭贝克的IT咨询和服务公司。通过与许多客户合作，包括零售业的客户，他们发现许多客户由于客户体验不佳而导致销售额低。因此，在2019年，他们创建了一个新的应用程序，名为 link:https://www.purqr.com/?fbclid=IwAR2nSQcVWEOEIiL0XLva4IAkjJWmehU8FdS2YtMAwpC1jFdflGbvmmmOwT8[PURQR] （通过二维码采购），这是一个新的云平台，带有后台应用程序和移动应用程序，用于管理零售商？ 实体店展厅。通过使用移动应用程序，人们可以进行店内分析，如热门产品和类别、表现最好的销售人员等，并为终端客户提供更个性化的体验。该平台还管理预约和客户数据，因此当他们离开展厅时，可以通过邮件收到他们喜欢的东西的概述。此外，PURQR还与客户的报价系统相整合。例如，其目标之一是为客户提供更加个性化的后续报价，以将其转化为销售。该解决方案还保留了客户信息，以便进一步沟通，并提供可能的联合销售和追加销售机会。因为一个人扫描产品是其流程的一部分，所以可以洞察到受欢迎的产品，然后公司可以囤积。他们的云平台可以改善客户体验，也可以增加销售。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Their journey into Quarkus"
msgstr "他们进入Quarkus的旅程"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "For the development of PURQR, Ennovative Solutions decided to follow a Function-as-a-Service approach by using AWS Lambda as the serverless computing platform. When Dennis Baerten, Software Engineer with Ennovative Solutions, started his journey using AWS Lambda, he described it as _“I ran into the long startup times using regular Java in AWS Lambda”._ They soon realized that using plain Java on this serverless computing platform was not going to deliver the performance and experience that they were after. This is when they started to look at other options."
msgstr "对于PURQR的开发，Ennovative Solutions决定通过使用AWS Lambda作为无服务器计算平台，遵循功能即服务的方法。当Ennovative Solutions的软件工程师Dennis Baerten开始使用AWS Lambda的旅程时，他这样描述： _\"我遇到了在AWS Lambda中使用普通Java的漫长启动时间\"。_ 他们很快意识到，在这个无服务器计算平台上使用普通的Java并不能提供他们所追求的性能和体验。这时他们开始研究其他的选择。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "From Micronaut to Quarkus"
msgstr "从Micronaut到Quarkus"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "A colleague of Dennis’ told him to look at Micronaut, which is another framework that supports GraalVM. He tried out Micronaut but encountered difficulties getting it to work with the type of application he was building. Furthermore, there was no Micronaut plugin to build his native image in AWS. _“Quarkus had more features and extensions than Micronaut that could be compiled to native (compatible with GraalVM)”,_ Dennis asserted. When he got started with Quarkus, one of the first things Dennis did was to enroll himself to the Quarkus Zulip channel. Dennis engaged and connected with the Quarkus community and obtained quick replies to his questions and even found some bugs in Quarkus. He was even able to apply the fixes himself via GitHub Pull Requests, which were eventually merged into the Quarkus project. Dennis expressed _“I valued and was very pleased with the support from the Quarkus community, which is very active”._ In addition, the fact that Red Hat was behind Quarkus was also important to Dennis. He was familiar with Hibernate and other open source technologies that are sponsored by Red Hat. He knew Red Hat was a big player in the IT world so knowing this gave Dennis the confidence in the technology. Knowing that Red Hat was a sponsor of Quarkus, reassured him about his decision to use it to implement his application."
msgstr "Dennis的一个同事告诉他可以看看Micronaut，这是另一个支持GraalVM的框架。他尝试了Micronaut，但遇到了一些困难，无法让它与他正在构建的应用程序类型兼容。此外，没有Micronaut插件可以在AWS中构建他的本地镜像。 _Quarkus比Micronaut有更多的功能和扩展，可以编译成本地的（与GraalVM兼容），_ Dennis断言道。当他开始使用Quarkus时，Dennis做的第一件事就是把自己注册到Quarkus Zulip频道。Dennis与Quarkus社区进行了接触和联系，他的问题得到了快速的答复，甚至发现了Quarkus中的一些错误。他甚至能够自己通过GitHub Pull Requests来应用这些修正，这些修正最终被合并到Quarkus项目中。Dennis表示 _：\"我很重视并非常满意来自Quarkus社区的支持，这个社区非常活跃。_ 此外，Red Hat在Quarkus背后的事实对Dennis来说也很重要。他对Hibernate和其他由Red Hat赞助的开源技术非常熟悉。他知道Red Hat是IT界的一个大玩家，所以知道这一点让Dennis对该技术充满信心。知道Red Hat是Quarkus的赞助商，使他对使用Quarkus来实现他的应用程序的决定感到放心。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions had tried Micronaut during the proof of concept phase. However, after learning about Quarkus and its benefits over Micronaut, they migrated everything to Quarkus. In their opinion, some of these benefits included:"
msgstr "Ennovative Solutions曾在概念验证阶段尝试过Micronaut。然而，在了解了Quarkus和它比Micronaut更多的好处后，他们把所有的东西都迁移到Quarkus上。在他们看来，其中的一些好处包括。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Great support via Zulip"
msgstr "通过Zulip获得巨大支持"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ability to directly contribute to the project"
msgstr "有能力直接为项目做出贡献"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Fast innovation"
msgstr "快速创新"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Fast project release cadence that provides quick bug fixes and new features"
msgstr "快速的项目发布节奏，提供快速的错误修复和新功能"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus is following closely what happens with GraalVM"
msgstr "Quarkus正在密切关注GraalVM的情况"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus is a hot topic and innovative technology that is talked about a lot at Java conferences"
msgstr "Quarkus是一个热门话题和创新技术，在Java会议上经常被人谈论。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "PURQR high-level architecture"
msgstr "PURQR高层架构"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "PURQR consists of 7 Quarkus microservices that are currently running in production. They have been in production since October 2019."
msgstr "PURQR由7个Quarkus微服务组成，目前正在生产中运行。它们从2019年10月开始投入生产。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Most of the microservices are HTTP-based and sit behind an Amazon API Gateway and at the backend they are all AWS Lambda functions. These microservices are:"
msgstr "大多数微服务是基于HTTP的，位于亚马逊API网关后面，在后端它们都是AWS Lambda函数。这些微服务是"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "External product view - viewing capabilities for products for the end consumer"
msgstr "外部产品视图--面向终端消费者的产品查看功能"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Product repository - this is where information about products reside"
msgstr "产品库--这是产品信息的存放地"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Company settings - interface to set company wide parameters"
msgstr "公司设置 - 设置公司范围内参数的界面"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Appointments - customer appointments functionality"
msgstr "预约--客户预约功能"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Label generation - capabilities for generating Dymo labels"
msgstr "标签生成--生成Dymo标签的能力"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Notifications - SQS consumer for asynchronous emails"
msgstr "通知 - 异步邮件的SQS消费者"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Summary - aggregates all the data to display on the dashboard for the business owner"
msgstr "摘要 - 汇总所有数据，显示在仪表板上，供企业主参考。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Here’s a high-level pictorial of the PURQR system that uses Quarkus with AWS Lamdba:"
msgstr "下面是使用Quarkus和AWS Lamdba的PURQR系统的高级图解。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "As depicted in the logical architecture diagram above, the Quarkus-based microservices all run as AWS Lambda functions. It is worth mentioning that all these microservices run in test and production in Quarkus native mode, which leverages GraalVM native image. For local development and debugging purposes, they run these microservices in Quarkus JVM mode using https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[AWS Serverless Application Model] (SAM) on their local machines."
msgstr "正如上面的逻辑架构图所描述的，基于Quarkus的微服务都以AWS Lambda函数的形式运行。值得一提的是，所有这些微服务在测试和生产中都以Quarkus原生模式运行，它利用了GraalVM原生图像。出于本地开发和调试的目的，他们在本地机器上使用 link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/what-is-sam.html[AWS无服务器应用模型] （SAM）在Quarkus JVM模式下运行这些微服务。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Lastly, _“moving to Quarkus was easy.  Getting everything to work in native mode took a couple of days. And it took about two months to develop the complete application”,_ added Dennis."
msgstr "最后， _\"转移到Quarkus很容易。让所有东西在本地模式下工作只花了几天时间。D_ ennis补充说：\" _开发完整的应用程序大约花了两个月时间_ 。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus benefits"
msgstr "Quarkus的好处"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions found Quarkus to be a very valuable and rich Java stack with a wide range of capabilities to implement any type of business application. Among the many benefits that Quarkus provided to them, running Java applications in AWS Lambda functions without the downside of cold starts was one of them. Quarkus fast startup time was key here because they wanted to reduce the cold start timing of AWS Lambda functions to a bare minimum when running in both test and production environments. For example, _“using Spring with AWS Lambda would have been prohibitive because the startup time of Spring in AWS Lambda is too big from my research”,_ Dennis mentioned ( https://keyholesoftware.com/2018/04/26/aws-lambda-with-spring-boot/[1] , https://dzone.com/articles/aws-lambda-with-spring-boot[2] , https://pattern-match.com/blog/2019/07/11/springboot2-and-aws-lambda-quick-fix/[3] ). Also, from past experience, he had seen that _“using plain Java with AWS Lambda, it was taking 6 to 7 seconds for a cold startup whereas with Quarkus it takes about 200 milliseconds”,_ Dennis added. However, in order to be more thorough in his research, he took one of the simplest functions (no dependency injection, logging) he had and ran it in AWS Lambda in plain Java and Quarkus native mode, the latter being a combination of Quarkus + GraalVM native image. The measurements, as reported by the AWS Lambda platform, are as follows:"
msgstr "Ennovative Solutions发现Quarkus是一个非常有价值和丰富的Java堆栈，具有广泛的功能，可以实现任何类型的商业应用。在Quarkus为他们提供的众多好处中，在AWS Lambda函数中运行Java应用而没有冷启动的弊端是其中之一。Quarkus的快速启动时间是这里的关键，因为他们想把AWS Lambda函数在测试和生产环境中运行时的冷启动时间降到最低。例如，Dennis提到： _\"在AWS Lambda中使用Spring会让人望而却步，因为根据我的研究，Spring在AWS Lambda中的启动时间太长了\"_ 。此外，根据过去的经验，他看到 _\"使用普通Java和AWS Lambda，冷启动需要6到7秒，而使用Quarkus则需要200毫秒\"，_ Dennis补充说。然而，为了更彻底地进行研究，他选择了一个最简单的函数（没有依赖注入和日志），并在AWS Lambda中以普通Java和Quarkus本地模式运行，后者是Quarkus和GraalVM本地图像的组合。根据AWS Lambda平台的报告，测量结果如下。"

#. type: Block title
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus with AWS Lambda - measurements"
msgstr "Quarkus与AWS Lambda - 测量"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Metric name"
msgstr "公制名称"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Plain Java"
msgstr "纯粹的Java"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Quarkus native mode"
msgstr "夸库斯原生模式"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Cold start time (ms)"
msgstr "冷启动时间（毫秒）"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "584.13"
msgstr "584.13"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "222.07"
msgstr "222.07"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Execution time (ms)"
msgstr "执行时间（毫秒）"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "76.12"
msgstr "76.12"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "6.67"
msgstr "6.67"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Memory consumed (MB)"
msgstr "消耗的内存（MB）"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "102"
msgstr "102"

#. type: Table
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "72"
msgstr "72"

#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "In the table above, you can see a 62% reduction in cold start from plain Java to Quarkus native and a 91% reduction in execution time from plain Java to Quarkus native mode!  For memory consumption, there was a 29% reduction in going from plain Java to Quarkus native."
msgstr "从上表中可以看出，从纯 Java 到 Quarkus 本机，冷启动时间减少了 62%，从纯 Java 到 Quarkus 本机模式，执行时间减少了 91%！在内存消耗方面，从纯 Java 到 Quarkus 原生模式减少了 29%。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "By using Quarkus with AWS Lambda, Ennovative Solutions have been able to lower the cloud resource consumption costs, which include the use of AWS Lambda, SQS, DynamoDB, Route53, among others. Presently, PURQR has a handful of customers so their monthly costs are minimal. However, Dennis mentions that as their number of customers grows so will their cloud resource consumption costs.  _“As these costs increase, this is when the benefit of using Quarkus will be experienced due to its more efficient use of cloud resources and fast startup time compared to plain Java and Spring Boot”,_ Dennis stated."
msgstr "通过使用Quarkus与AWS Lambda，Ennovative Solutions已经能够降低云资源消耗成本，其中包括使用AWS Lambda、SQS、DynamoDB、Route53等等。目前，PURQR的客户屈指可数，所以他们的月度成本是最低的。然而，Dennis提到，随着他们的客户数量增加，他们的云资源消耗成本也会增加。Dennis说： _\"随着这些成本的增加，这时就会体验到使用Quarkus的好处，因为与普通的Java和Spring Boot相比，它能更有效地利用云资源和快速启动时间_ 。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "As a Spring developer, Dennis found Quarkus very easy to learn. He mentioned _“it took me about 3 days to get familiar with the Quarkus stack”._ In fact, he highlighted that the fast learning curve attracted him to Quarkus as well. He was also particularly impressed by the Quarkus documentation, which _\"is very good\",_ he added. Dennis thinks the Quarkus guides are very thorough and provide good detailed information. This is another reason why he selected Quarkus."
msgstr "作为一个Spring开发者，Dennis发现Quarkus非常容易学习。他提到 _\"我花了大约3天时间来熟悉Quarkus的堆栈\"。_ 事实上，他强调，快速的学习曲线也吸引了他对Quarkus的兴趣。他还说，Quarkus的文档也给他留下了特别深刻的印象，它 _\"非常好\"_ 。Dennis认为Quarkus的指南非常全面，提供了很好的详细信息。这是他选择Quarkus的另一个原因。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "Lessons Learned"
msgstr "汲取的经验教训"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus can run in JVM mode and native mode. If you are interested in running your application in Quarkus native mode, Dennis recommends to first check if Quarkus offers extensions for your required functional requirements. For example, if you’d like to access an in-memory-data-grid (IMDG) like Kafka, he suggests you first search the Quarkus extensions to see if there’s any extension related to this need. Quarkus extensions can compile to native so it’s better to check if Quarkus offers your required functionality before you start implementing your application with a library for which Quarkus does not provide an extension. If you don’t find a Quarkus extension for the third-party library you want to use, then Dennis recommends to check the Quarkus project issues to see if there’s already a pending request to “quark” the third-party library. Also, you’d want to check with the third-party library authors/project to see if they already have a Quarkus extension or are working on one.  You don’t want to find out that you can’t compile your application to a native executable after you have spent hours developing it! You want to avoid this if your goal is to compile to native. In short, the lesson learned here is _“check first if there are Quarkus extensions available for what you need”_, Dennis suggests."
msgstr "Quarkus可以在JVM模式和本地模式下运行。如果你对在Quarkus本地模式下运行你的应用程序感兴趣，Dennis建议你首先检查Quarkus是否为你所需要的功能需求提供了扩展。例如，如果你想访问像Kafka这样的内存数据网格（IMDG），他建议你首先搜索Quarkus扩展，看看是否有与此需求相关的扩展。Quarkus扩展可以编译成本地的，所以在你开始用Quarkus没有提供扩展的库来实现你的应用之前，最好先检查Quarkus是否提供了你所需要的功能。如果你没有找到你想使用的第三方库的Quarkus扩展，那么Dennis建议你检查Quarkus项目的问题，看看是否已经有一个待定的请求来 \"quark \"这个第三方库。另外，你还可以向第三方库的作者/项目查询，看看他们是否已经有了 Quarkus 扩展，或者正在开发一个。你不希望在你花了几个小时开发你的应用程序后，发现你不能把它编译成一个本地可执行文件！你希望避免这种情况。如果你的目标是编译成本地程序，你要避免这种情况。简而言之，这里的教训是 _\"首先检查是否有Quarkus扩展可以满足你的需求？_ Dennis建议。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "They were not able to use live coding with Quarkus because this capability does not currently support AWS Serverless Application Model (SAM) for the AWS Lambda functions running on their local machines."
msgstr "他们无法使用Quarkus的实时编码，因为这种能力目前不支持AWS无服务器应用模型（SAM），不支持在他们本地机器上运行的AWS Lambda函数。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Lastly, although learning Quarkus was fast, learning the internals of Quarkus native mode was more challenging and took longer to understand."
msgstr "最后，虽然学习Quarkus的速度很快，但学习Quarkus原生模式的内部结构更具挑战性，需要更长的时间来理解。"

#. type: Title ==
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy, no-wrap
msgid "The future"
msgstr "未来"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Ennovative Solutions plans to continue using Quarkus for future development of PURQR as well as other solutions. They are extremely impressed by this new technology and the involvement and active participation of its community. About the Quarkus project, Dennis’s parting thoughts are _“Great job! Keep up the good work and continue accepting work from the community.”_"
msgstr "Ennovative Solutions计划继续使用Quarkus进行PURQR以及其他解决方案的未来开发。他们对这项新技术以及其社区的参与和积极参与印象深刻。关于Quarkus项目，Dennis的临别感言是： _\"干得好！_ 继续保持良好的工作状态，并继续接受来自世界各地的客户。 _继续保持良好的工作，并继续接受来自社区的工作\"。_ "

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "For more information on Quarkus:"
msgstr "关于Quarkus的更多信息。"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus website: http://quarkus.io"
msgstr "Quarkus网站 http://quarkus.io "

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus GitHub project: https://github.com/quarkusio/quarkus"
msgstr "Quarkus GitHub项目: https://github.com/quarkusio/quarkus "

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus Twitter: https://twitter.com/QuarkusIO"
msgstr "Quarkus Twitter: https://twitter.com/QuarkusIO "

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus chat: https://quarkusio.zulipchat.com/"
msgstr "Quarkus chat: https://quarkusio.zulipchat.com/ "

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "Quarkus mailing list: https://groups.google.com/forum/#!forum/quarkus-dev"
msgstr "Quarkus邮件列表 https://groups.google.com/forum/#!forum/quarkus-dev "

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://youtube.com/quarkusio[Quarkus YouTube Channel]"
msgstr "link:https://youtube.com/quarkusio[夸库斯YouTube频道]"

#. type: Plain text
#: _posts/2020-03-16-ennovativesolutions-uses-quarkus-with-aws-lambda.adoc
#, fuzzy
msgid "https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[Four reasons to use Quarkus]"
msgstr "link:https://www.redhat.com/cms/managed-files/cl-4-reasons-try-quarkus-checklist-f19180cs-201909-en.pdf[使用 Quarkus 的四个理由]"
