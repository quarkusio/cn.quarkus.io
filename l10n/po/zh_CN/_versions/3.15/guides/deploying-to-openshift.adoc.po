msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Deploying on OpenShift"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "This guide covers generating and deploying OpenShift resources based on sane default and user supplied configuration."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Access to an OpenShift cluster (Minishift is a viable option)"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "OpenShift CLI (Optional, only required for manual deployment)"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Bootstrapping the project"
msgstr "创建项目"

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "First, we need a new project that contains the OpenShift extension. This can be done using the following command:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"Quarkus offers the ability to automatically generate OpenShift resources based on sane defaults and user supplied configuration.\n"
"The OpenShift extension is actually a wrapper extension that brings configures the xref:deploying-to-kubernetes.adoc[Kubernetes]\n"
"extension with sensible defaults so that it's easier for the user to get started with Quarkus on OpenShift."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "When we added the OpenShift extension to the command line invocation above, the following dependency was added to the `pom.xml`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Log Into the OpenShift Cluster"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"Before we build and deploy our application we need to log into an OpenShift cluster.\n"
"You can log in via the https://docs.openshift.com/container-platform/4.9/cli_reference/openshift_cli/getting-started-cli.html[OpenShift CLI]:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Log In - OpenShift CLI Example"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "You'll be prompted for the required information such as server URL, password, etc."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Alternatively, you may log in using the API token:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Log In - OpenShift CLI With API Token Example"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "You can request the token via the _Copy Login Command_ link in the OpenShift web console."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"Finally, you don't need to use the OpenShift CLI at all.\n"
"Instead, set the `quarkus.kubernetes-client.api-server-url` config property and authenticate with the `quarkus.kubernetes-client.token`, or `quarkus.kubernetes-client.username` and `quarkus.kubernetes-client.password` respectively:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Build and Deployment"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "You can trigger a build and deployment in a single step or build the container image first and then configure the OpenShift application manually if you need <<control_application_config,more control over the deployment configuration>>."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "To trigger a build and deployment in a single step:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "If you want to test your application immediately then set the `quarkus.openshift.route.expose` config property to `true` to <<exposing_routes,expose the service automatically>>, e.g. add `-Dquarkus.openshift.route.expose=true` to the command above."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "When using `DeploymentConfig` and xref:deploying-to-kubernetes.adoc#service_binding[Service Binding], re-deploying might remove the configuration added by OpenShift to allow service discovery. A new container image build will trigger a refresh of the Quarkus app in OpenShift: `-Dquarkus.container-image.build=true` which might be enough in most situations. If you need to update the OpenShift resources, you need to delete the binding first to create it again after new deployment."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"This command will build your application locally, then trigger a container image build and finally apply the generated OpenShift resources automatically.\n"
"The generated resources use a Kubernetes `Deployment`, but still make use of OpenShift specific resources like `Route`, `BuildConfig` etc."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "As of OpenShift 4.14, the https://access.redhat.com/articles/7041372[`DeploymentConfig` object has been deprecated]."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"Since `Deployment` is a Kubernetes resource and not OpenShift specific, it can't possibly leverage `ImageStream` resources, as is the case with `DeploymentConfig`. This means that the image references need to include the container image registry that hosts the image.\n"
"When the image is built, using OpenShift builds (s2i binary and docker strategy) the OpenShift internal image registry `image-registry.openshift-image-registry.svc:5000` will be used, unless another registry has been explicitly specified by the user. Please note, that in the internal registry the project/namespace name is added as part of the image repository: `image-registry.openshift-image-registry.svc:5000/<project name>/<name>:<tag>`, so users will need to make sure that the target project/namespace name is aligned with the `quarkus.container-image.group`."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "The https://access.redhat.com/articles/7041372[deprecation document] contains additional information about how to set up/use automatic rollbacks, triggers, lifecycle hooks, and custom strategies."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"You can use the OpenShift web console to verify that the above command has created an image stream, a service resource and has deployed the application.\n"
"Alternatively, you can run the following OpenShift CLI commands:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Lists the image streams created."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Get the list of pods."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Get the list of Kubernetes services."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"Note that the service is not exposed to the outside world by default.\n"
"So unless you've used the `quarkus.openshift.route.expose` config property to expose the created service automatically you'll need to expose the service manually."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Expose The Service - OpenShift CLI Example"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Expose the service."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Get the list of exposed routes."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Access your application."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Configure the OpenShift Application Manually"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "If you need more control over the deployment configuration you can build the container image first and then configure the OpenShift application manually."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "To trigger a container image build:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"The build that will be performed is a _s2i binary_ build.\n"
"The input of the build is the jar that has been built locally and the output of the build is an `ImageStream` that is configured to automatically trigger a deployment.\n"
"The base/builder image is specified using `base-jvm-image` and `base-native-image` for jvm and native mode respectively. An ImageStream for the image is automatically generated, unless these properties are used to reference an existing ImageStreamTag in the internal openshift registry. For example:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "During the build you may find the `Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed` exception due to self-signed certificate. To solve this, just add the following line to your `application.properties`:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "For more information, see xref:deploying-to-kubernetes.adoc#client-connection-configuration[deploying to Kubernetes]."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Once the build is done we can create a new application from the relevant `ImageStream`."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Lists the image streams created. The image stream of our application should be tagged as <project>/openshift-quickstart:1.0.0-SNAPSHOT."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Create a new application from the image source."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Expose the service to the outside world."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"After this setup the next time the container image is built a deployment to OpenShift is triggered automatically.\n"
"In other words, you don't need to repeat the above steps."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Non-S2I Builds"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Out of the box the OpenShift extension is configured to use xref:container-image.adoc#s2i[container-image-s2i]. However, it's still possible to use other container image extensions like:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "xref:container-image.adoc#docker[container-image-docker]"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "xref:container-image.adoc#jib[container-image-jib]"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "When a non-s2i container image extension is used, an `ImageStream` is created that is pointing to an external `dockerImageRepository`. The image is built and pushed to the registry and the `ImageStream` populates the tags that are available in the `dockerImageRepository`."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "To select which extension will be used for building the image:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "or"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Customizing"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "All available customization options are available in the xref:deploying-to-kubernetes.adoc#openshift[OpenShift configuration options]."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Some examples are provided in the sections below:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Exposing Routes"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "To expose a `Route` for the Quarkus application:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "You don't necessarily need to add this property in the `application.properties`. You can pass it as a command line argument:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "The same applies to all properties listed below."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Securing the Route resource"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "To secure the incoming connections, OpenShift provides several types of TLS termination to serve certifications. You can read more information about how to secure routes in https://docs.openshift.com/container-platform/4.12/networking/routes/secured-routes.html[the official OpenShift guide]."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Let's see an example about how to configure a secured Route using passthrough termination by simply adding the \"quarkus.openshift.route.tls\" properties:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Labels"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "To add a label in the generated resources:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Annotations"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "To add an annotation in the generated resources:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Environment variables"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "OpenShift provides multiple ways of defining environment variables:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "key/value pairs"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "import all values from a Secret or ConfigMap"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "interpolate a single value identified by a given field in a Secret or ConfigMap"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "interpolate a value from a field within the same resource"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Environment variables from key/value pairs"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "To add a key/value pair as an environment variable in the generated resources:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n"
"Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Environment variables from Secret"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"To add all key/value pairs of `Secret` as environment variables just apply the following configuration, separating each `Secret`\n"
"to be used as source by a comma (`,`):"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "which would generate the following in the container definition:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "The following extracts a value identified by the `keyName` field from the `my-secret` Secret into a `foo` environment variable:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "This would generate the following in the `env` section of your container:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Environment variables from ConfigMap"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"To add all key/value pairs from `ConfigMap` as environment variables just apply the following configuration, separating each\n"
"`ConfigMap` to be used as source by a comma (`,`):"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"The following extracts a value identified by the `keyName` field from the `my-config-map` ConfigMap into a `foo`\n"
"environment variable:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Environment variables from fields"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "It's also possible to use the value from another field to add a new environment variable by specifying the path of the field to be used as a source, as follows:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Changing the generated deployment resource"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Beside generating a `Deployment` resource, you can also choose to get either a `DeploymentConfig`, `StatefulSet`, `Job`, or a `CronJob` resource instead via `application.properties`:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Generating Job resources"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "If you want to generate a Job resource, you need to add the following property via the `application.properties`:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "If you are using the Picocli extension, by default the Job resource will be generated."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "You can provide the arguments that will be used by the Kubernetes Job via the property `quarkus.openshift.arguments`. For example, adding the property `quarkus.openshift.arguments=A,B`."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Finally, the Kubernetes job will be launched every time that is installed in OpenShift. You can know more about how to run Kubernetes jobs in this https://kubernetes.io/docs/concepts/workloads/controllers/job/#running-an-example-job[link]."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "You can configure the rest of the Kubernetes Job configuration using the properties under `quarkus.openshift.job.xxx` (see xref:deploying-to-openshift#quarkus-kubernetes_quarkus-openshift-job-parallelism[link])."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Generating CronJob resources"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "If you want to generate a CronJob resource, you need to add the following property via the `application.properties`:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "CronJob resources require the https://en.wikipedia.org/wiki/Cron[Cron] expression to specify when to launch the job via the property `quarkus.openshift.cron-job.schedule`. If not provide, the build will fail."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "You can configure the rest of the Kubernetes CronJob configuration using the properties under `quarkus.openshift.cron-job.xxx` (see xref:deploying-to-openshift.adoc#quarkus-kubernetes_quarkus-openshift-cron-job-parallelism[link])."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Validation"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "A conflict between two definitions, e.g. mistakenly assigning both a value and specifying that a variable is derived from a field, will result in an error being thrown at build time so that you get the opportunity to fix the issue before you deploy your application to your cluster where it might be more difficult to diagnose the source of the issue."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Similarly, two redundant definitions, e.g. defining an injection from the same secret twice, will not cause an issue but will indeed report a warning to let you know that you might not have intended to duplicate that definition."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Backwards compatibility"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Previous versions of the OpenShift extension supported a different syntax to add environment variables. The older syntax is still supported but is deprecated, and it's advised that you migrate to the new syntax."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Old vs. new syntax"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Old"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "New"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Plain variable"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env-vars.my-env-var.value=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env.vars.my-env-var=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "From field"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env-vars.my-env-var.field=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env.fields.my-env-var=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "All from `ConfigMap`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env-vars.xxx.configmap=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env.configmaps=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "All from `Secret`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env-vars.xxx.secret=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env.secrets=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "From one `Secret` field"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env-vars.foo.secret=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env.mapping.foo.from-secret=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env-vars.foo.value=field`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env.mapping.foo.with-key=field`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "From one `ConfigMap` field"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env-vars.foo.configmap=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "`quarkus.openshift.env.mapping.foo.from-configmap=foobar`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"If you redefine the same variable using the new syntax while keeping the old syntax, **ONLY** the new version will be kept, and a warning will be issued to alert you of the problem. For example, if you define both\n"
"`quarkus.openshift.env-vars.my-env-var.value=foobar` and `quarkus.openshift.env.vars.my-env-var=newValue`, the extension will only generate an environment variable `MY_ENV_VAR=newValue` and issue a warning."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Mounting volumes"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "The OpenShift extension allows the user to configure both volumes and mounts for the application."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Any volume can be mounted with a simple configuration:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "This will add a mount to my pod for volume `my-volume` to path `/where/to/mount`"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "The volumes themselves can be configured as shown in the sections below:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Secret volumes"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "ConfigMap volumes"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Persistent Volume Claims"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Knative - OpenShift Serverless"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "OpenShift also provides the ability to use Knative via the link:https://www.openshift.com/learn/topics/serverless[OpenShift Serverless] functionality."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "The first order of business is to instruct Quarkus to generate Knative resources by setting:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid ""
"In order to leverage OpenShift S2I to build the container image on the cluster and use the resulting container image for the Knative application,\n"
"we need to set a couple of configuration properties:"
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "The application can then be deployed to OpenShift Serverless by enabling the standard `quarkus.kubernetes.deploy=true` property."
msgstr ""

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/3.15/guides/deploying-to-openshift.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
