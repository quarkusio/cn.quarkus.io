msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Using OpenID Connect (OIDC) and Keycloak to centralize authorization"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Learn how to enable bearer token authorization in your Quarkus application using link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] for secure access to protected resources."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"The `quarkus-keycloak-authorization` extension relies on `quarkus-oidc`.\n"
"It includes a policy enforcer that regulates access to secured resources.\n"
"Access is governed by permissions set in Keycloak.\n"
"Currently, this extension is compatible solely with Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC service applications]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "It provides a flexible and dynamic authorization capability based on Resource-Based Access Control."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Rather than explicitly enforcing access through specific mechanisms such as role-based access control (RBAC), `quarkus-keycloak-authorization` determines request permissions based on resource attributes such as name, identifier, or Uniform Resource Identifier (URI).\n"
"This process involves sending a `quarkus-oidc`-verified bearer access token to Keycloak Authorization Services for an authorization decision."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Use `quarkus-keycloak-authorization` only if you work with Keycloak and have Keycloak Authorization Services enabled to make authorization decisions.\n"
"Use `quarkus-oidc` if you do not work with Keycloak or work with Keycloak but do not have its Keycloak Authorization Services enabled to make authorization decisions."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"By shifting authorization responsibilities outside your application, you enhance security through various access control methods while eliminating the need for frequent re-deployments whenever security needs evolve.\n"
"In this case, Keycloak acts as a centralized authorization hub, managing your protected resources and their corresponding permissions effectively."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"For more information, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] guide.\n"
"It is important to realize that the Bearer token authentication mechanism does the authentication and creates a security identity.\n"
"Meanwhile, the `quarkus-keycloak-authorization` extension applies a Keycloak Authorization Policy to this identity based on the current request path and other policy settings."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "For more information, see https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services documentation]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Prerequisites"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org[Keycloak]"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Architecture"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "In this example, we build a very simple microservice that offers two endpoints:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "`/api/users/me`"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "`/api/admin`"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"These endpoints are protected.\n"
"Access is granted only when a client sends a bearer token with the request.\n"
"This token must be valid, having a correct signature, expiration date, and audience.\n"
"Additionally, the microservice must trust the token."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"The bearer token is issued by a Keycloak server and represents the subject for which the token was issued.\n"
"For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"The `/api/users/me` endpoint can be accessed by any user with a valid token.\n"
"As a response, it returns a JSON document with details about the user obtained from the information carried on the token.\n"
"This endpoint is protected with RBAC, and only users granted with the `user` role can access this endpoint."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The `/api/admin` endpoint is protected with RBAC, and only users granted the `admin` role can access it."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"This is a very simple example of using RBAC policies to govern access to your resources.\n"
"However, Keycloak supports other policies that you can use to perform even more fine-grained access control.\n"
"By using this example, you'll see that your application is completely decoupled from your authorization policies, with enforcement purely based on the accessed resource."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Solution"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The solution is in the `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[directory]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Creating the project"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"First, we need a new project.\n"
"Create a new project with the following command:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"This command generates a project, importing the `keycloak-authorization` extension.\n"
"This extension implements a Keycloak Adapter for Quarkus applications and provides all the necessary capabilities to integrate with a Keycloak server and perform bearer token authorization."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `oidc` and `keycloak-authorization` extensions\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "This adds the following dependencies to your build file:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "pom.xml"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "build.gradle"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Let's start by implementing the `/api/users/me` endpoint.\n"
"As you can see in the following source code, it is a regular Jakarta REST resource:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Be aware that we have not defined annotations such as `@RolesAllowed` to explicitly enforce access to a resource.\n"
"Instead, the extension is responsible for mapping the URIs of the protected resources in Keycloak and evaluating the permissions accordingly, granting or denying access depending on the permissions granted by Keycloak."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Configuring the application"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The OpenID Connect extension allows you to define the adapter configuration by using the `application.properties` file, which is usually located in the `src/main/resources` directory."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Adding a `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that Dev Services for Keycloak launches a container for you when the application is run in dev mode.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"By default, applications that use the `quarkus-oidc` extension are marked as a `service` type application (see `quarkus.oidc.application-type`).\n"
"This extension also supports only  `web-app` type applications but only if the access token returned as part of the authorization code grant response is marked as a source of roles: `quarkus.oidc.roles.source=accesstoken` (`web-app` type applications check ID token roles by default)."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Starting and configuring the Keycloak server"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Do not start the Keycloak server when you run the application in dev mode.\n"
"Dev Services for Keycloak launches a container.\n"
"For more information, see the <<keycloak-dev-mode,Running the application in Dev mode>> section."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "To start a Keycloak server, use the following Docker command:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "where `keycloak.version` must be `25.0.6` or later and the `keycloak-keystore.jks` can be found in https://github.com/quarkusio/quarkus-quickstarts/blob/main/security-keycloak-authorization-quickstart/config/keycloak-keystore.jks[quarkus-quickstarts/security-keycloak-authorization-quickstart/config]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Try to access your Keycloak server at https://localhost:8543[localhost:8543]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"To access the Keycloak Administration Console, log in as the `admin` user.\n"
"The username and password are both `admin`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.\n"
"For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "After importing the realm you can see the resource permissions:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "It explains why the endpoint has no `@RolesAllowed` annotations - the resource access permissions are set directly in Keycloak."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Running the application in dev mode"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "To run the application in dev mode, use:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] launches a Keycloak container and imports a `quarkus-realm.json`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "When asked to log in to a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Log in as `alice` (password: `alice`), who only has a `User Permission` to access the `/api/users/me` resource:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Access `/api/admin`, which returns `403`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Access `/api/users/me`, which returns `200`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Log out and log in as `admin` (password: `admin`), who has both `Admin Permission` to access the `/api/admin` resource and `User Permission` to access the `/api/users/me` resource:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Access `/api/admin`, which returns `200`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"If you have started xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] without importing a realm file such as link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[quarkus-realm.json] that is already configured to support Keycloak Authorization, create a default `quarkus` realm without Keycloak authorization policies.\n"
"In this case, you must select the `Keycloak Admin` link in the `OpenId Connect` Dev UI card and configure link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services] in the default `quarkus` realm."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The `Keycloak Admin` link is easy to find in Dev UI:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "When logging into the Keycloak admin console, the username and password are both `admin`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"If your application uses Keycloak authorization configured with link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_policy_js[JavaScript policies] that are deployed in a JAR file, you can set up Dev Services for Keycloak to transfer this archive to the Keycloak container.\n"
"For instance:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"`policies` alias is created for the `/policies.jar` classpath resource.\n"
"Policy archive can also be located in the file system."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The policies archive is mapped to the `/opt/keycloak/providers/policies.jar` container location."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Running the application in JVM mode"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "After exploring the application in dev mode, you can run it as a standard Java application."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "First compile it:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Then run it:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Running the application in native mode"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "This same demo can be compiled into native code; no modifications are required."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "This implies that you no longer need to install a JVM on your production environment because the runtime technology is included in the produced binary and optimized to run with minimal resources."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Compilation takes a bit longer, so this step is turned off by default; let's build again by enabling the `native` profile:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "After a while, you can run this binary directly:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Testing the application"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "See the preceding <<keycloak-dev-mode,Running the application in Dev mode>> section about testing your application in a dev mode."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "You can test the application launched in JVM or native modes with `curl`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The application uses bearer token authorization, and the first thing to do is obtain an access token from the Keycloak server to access the application resources:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The preceding example obtains an access token for user `alice`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"Any user is allowed to access the\n"
"`http://localhost:8080/api/users/me` endpoint,\n"
"which returns a JSON payload with details about the user."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role.\n"
"If you try to access this endpoint with the previously issued access token, you get a `403` response from the server."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "To access the admin endpoint, get a token for the `admin` user:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Injecting the authorization client"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"In some cases, using the link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] is beneficial for tasks such as managing resources and obtaining permissions directly from Keycloak.\n"
"For this purpose, you can inject an `AuthzClient` instance into your beans as follows:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "If you want to use the `AuthzClient` directly, set `quarkus.keycloak.policy-enforcer.enable=true`; otherwise, no bean is available for injection."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Mapping protected resources"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "By default, the extension fetches resources on-demand from Keycloak, using their URI to identify and map the resources in your application that need to be protected."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "To disable this on-demand fetching and instead pre-load resources at startup, apply the following configuration setting:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "The time required to pre-load resources from Keycloak at startup varies based on their quantity, potentially affecting your application's initial load time.\""
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "More about configuring protected resources"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "In the default configuration, Keycloak manages the roles and decides who can access which routes."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"To configure the protected routes by using the `@RolesAllowed` annotation or the `application.properties` file, check the xref:security-oidc-bearer-token-authentication.adoc[OpenID Connect (OIDC) Bearer token authentication] and xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guides.\n"
"For more details, check the xref:security-overview.adoc[Quarkus Security overview]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Access to public resources"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"To enable access to a public resource without the `quarkus-keycloak-authorization` applying its policies, create a `permit` HTTP Policy configuration in `application.properties`.\n"
"For more information, see the xref:security-authorize-web-endpoints-reference.adoc[Authorization of web endpoints] guide."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "There's no need to deactivate policy checks for a Keycloak Authorization Policy with settings such as these:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "To block access to the public resource to anonymous users, you can create an enforcing Keycloak Authorization Policy:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Only the default tenant configuration applies when controlling anonymous access to the public resource is required."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Checking permission scopes programmatically"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"In addition to resource permissions, you can specify method scopes.\n"
"The scope usually represents an action that can be performed on a resource.\n"
"You can create an enforcing Keycloak Authorization Policy with a method scope.\n"
"For example:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "User must have resource permission 'Scope Permission Resource' and scope 'read'"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"The Keycloak Policy Enforcer now secures the `/api/protected/standard-way` request path, eliminating the need for additional annotations such as `@RolesAllowed`.\n"
"However, in certain scenarios, a programmatic check is necessary.\n"
"You can achieve this by injecting a `SecurityIdentity` instance into your beans, as shown in the following example.\n"
"Or, you can get the same result by annotating the resource method with `@PermissionsAllowed`.\n"
"The following example demonstrates three resource methods, each requiring the same `read` scope:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Request sub-path `/standard-way` requires both resource permission and scope `read` according to the configuration properties we previously set in the `application.properties`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Request sub-path `/programmatic-way` only requires permission `Scope Permission Resource`, but we can enforce scope with `SecurityIdentity#checkPermission`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"The `@PermissionsAllowed` annotation only grants access to the requests with permission `Scope Permission Resource` and scope `read`.\n"
"For more information, see the section xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Authorization using annotations] of the Security Authorization guide."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Multi-tenancy"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "You can set up policy enforcer configurations for each tenant, similar to how it is done with xref:security-openid-connect-multitenancy.adoc[OpenID Connect (OIDC) multi-tenancy]."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "For example:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Dynamic tenant configuration resolution"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"If you need a more dynamic configuration for the different tenants you want to support and don’t want to end up\n"
"with multiple entries in your configuration file, you can use the `io.quarkus.keycloak.pep.TenantPolicyConfigResolver`."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "This interface allows you to dynamically create tenant configurations at runtime:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Create or update the `/enhanced-config` path in the default tenant config."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Add `/new-config` path into tenant config populated with documented configuration default values."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Use default static tenant configuration resolution based on the `application.properties` file and other SmallRye Config configuration sources."
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "Configuration reference"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid ""
"This configuration adheres to the official [Keycloak Policy Enforcer Configuration](https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter) guidelines.\n"
"For detailed insights into various configuration options, see the following documentation:"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "References"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/documentation.html[Keycloak documentation]"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""

#: _versions/3.15/guides/security-keycloak-authorization.adoc
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr ""
