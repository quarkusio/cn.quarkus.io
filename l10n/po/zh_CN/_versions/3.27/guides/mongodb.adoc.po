msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.27/guides/mongodb.adoc
msgid "Using the MongoDB Client"
msgstr "使用MongoDB客户端"

#: _versions/3.27/guides/mongodb.adoc
msgid "MongoDB is a well known NoSQL Database that is widely used."
msgstr "MongoDB是一个众所周知的NoSQL数据库，被广泛使用。"

#: _versions/3.27/guides/mongodb.adoc
msgid "In this guide, we see how you can get your REST services to use the MongoDB database."
msgstr "在本指南中，我们看到如何让你的REST服务使用MongoDB数据库。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.27/guides/mongodb.adoc
msgid "MongoDB installed or Docker installed"
msgstr "安装了MongoDB或安装了Docker"

#: _versions/3.27/guides/mongodb.adoc
msgid "Architecture"
msgstr "应用结构"

#: _versions/3.27/guides/mongodb.adoc
msgid "The application built in this guide is quite simple: the user can add elements in a list using a form and the list is updated."
msgstr "本指南中构建的应用程序非常简单：用户可以使用一个表单在列表中添加元素并更新列表。"

#: _versions/3.27/guides/mongodb.adoc
msgid "All the information between the browser and the server is formatted as JSON."
msgstr "浏览器和服务器之间的所有信息都被格式化为JSON。"

#: _versions/3.27/guides/mongodb.adoc
msgid "The elements are stored in MongoDB."
msgstr "这些元素被存储在MongoDB中。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Solution"
msgstr "解决方案"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#: _versions/3.27/guides/mongodb.adoc
msgid "The solution is located in the `mongodb-quickstart` link:{quickstarts-tree-url}/mongodb-quickstart[directory]."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#: _versions/3.27/guides/mongodb.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"This command generates a Maven structure importing the Quarkus REST (formerly RESTEasy Reactive) Jackson and MongoDB Client extensions.\n"
"After this, the `quarkus-mongodb-client` extension has been added to your build file."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `mongodb-client` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `mongodb-client` 扩展添加到你的项目中："

#: _versions/3.27/guides/mongodb.adoc
msgid "This will add the following to your `pom.xml`:"
msgstr "这将在你的 `pom.xml` 中添加以下内容："

#: _versions/3.27/guides/mongodb.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.27/guides/mongodb.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.27/guides/mongodb.adoc
msgid "Creating your first JSON REST service"
msgstr "创建你的第一个JSON REST服务"

#: _versions/3.27/guides/mongodb.adoc
msgid "In this example, we will create an application to manage a list of fruits."
msgstr "在这个例子中，我们将创建一个应用程序来管理fruit列表。"

#: _versions/3.27/guides/mongodb.adoc
msgid "First, let's create the `Fruit` bean as follows:"
msgstr "首先，让我们创建 `Fruit` 实体类，如下所示："

#: _versions/3.27/guides/mongodb.adoc
msgid "Nothing fancy. One important thing to note is that having a default constructor is required by the JSON serialization layer."
msgstr "这非常的简单。需要注意的一件事是， JSON 序列化层需要具有默认构造函数。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Now create a `org.acme.mongodb.FruitService` that will be the business layer of our application and store/load the fruits from the mongoDB database."
msgstr "现在创建一个 `org.acme.mongodb.FruitService` ，它将是我们应用程序的业务层，并从mongoDB数据库 store/load fruits。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Now, create the `org.acme.mongodb.FruitResource` class as follows:"
msgstr "现在，创建 `org.acme.mongodb.FruitResource` 类，如下所示："

#: _versions/3.27/guides/mongodb.adoc
msgid "The implementation is pretty straightforward, and you just need to define your endpoints using the Jakarta REST annotations and use the `FruitService` to list/add new fruits."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Configuring the MongoDB database"
msgstr "配置MongoDB数据库"

#: _versions/3.27/guides/mongodb.adoc
msgid "The main property to configure is the URL to access the MongoDB instance. Almost all configuration can be included in the connection URI, so we advise you to do so. You can find more information in the MongoDB documentation: https://docs.mongodb.com/manual/reference/connection-string/"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "A sample configuration should look like this:"
msgstr "示例配置应如下所示："

#: _versions/3.27/guides/mongodb.adoc
msgid "In this example, we are using a single instance running on localhost:"
msgstr "在此示例中，我们在 localhost 上运行的单个实例："

#: _versions/3.27/guides/mongodb.adoc
msgid "Resolving mongo+srv:// URLs"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"When using `mongo+srv://` URLs, the MongoDB driver resolves DNS SRV records to retrieve the list of hosts to connect to.\n"
"By default, it relies on a DNS client implemented using JNDI."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"For security reasons, Quarkus restricts JNDI usage within applications to help mitigate potential vulnerabilities like Log4Shell.\n"
"To support `mongo+srv://`, Quarkus provides an alternative DNS client."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"However, in some environments, this alternative DNS client may be unable to resolve `SRV` records.\n"
"If you encounter such issues, you can revert to the MongoDB driver’s default DNS client by setting the following properties:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "This restores the default JNDI-based resolution mechanism used by the MongoDB driver."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Use the MongoDB Dev Services"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "See xref:mongodb-dev-services.adoc[MongoDB Dev Services]."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Multiple MongoDB Clients"
msgstr "多个MongoDB客户端"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"MongoDB allows you to configure multiple clients.\n"
"Using several clients works the same way as having a single client."
msgstr "MongoDB允许你配置多个客户端。使用多个客户端的方式与拥有一个客户端的方式相同。"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"Notice there's an extra bit in the key (the `users` and `inventory` segments).\n"
"The syntax is as follows: `quarkus.mongodb.[optional name.][mongo connection property]`.\n"
"If the name is omitted, it configures the default client."
msgstr "注意在键中有一个额外的位（ `users` 和 `inventory` 段）。语法如下： `quarkus.mongodb.[optional name.][mongo connection property]` 。如果省略了名称，则配置默认的客户端。"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"The use of multiple MongoDB clients enables multi-tenancy for MongoDB by allowing to connect to multiple MongoDB clusters. +\n"
"If you want to connect to multiple databases inside the same cluster,\n"
"multiple clients are **not** necessary as a single client is able to access all databases in the same cluster\n"
"(as a JDBC connection is able to access to multiple schemas inside the same database)."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Named Mongo client Injection"
msgstr "以Mongo客户端的名字进行注入"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"When using multiple clients, each `MongoClient`, you can select the client to inject using the `io.quarkus.mongodb.MongoClientName` qualifier.\n"
"Using the above properties to configure three different clients, you can also inject each one as follows:"
msgstr "当使用多个客户端时，每个 `MongoClient` ，你可以使用 `io.quarkus.mongodb.MongoClientName` 修饰语选择要注入的客户端。使用上述属性来配置三个不同的客户端，你也可以按以下方式来注入每个客户端："

#: _versions/3.27/guides/mongodb.adoc
msgid "Running a MongoDB Database"
msgstr "运行MongoDB数据库"

#: _versions/3.27/guides/mongodb.adoc
msgid "As by default, `MongoClient` is configured to access a local MongoDB database on port 27017 (the default MongoDB port), if you have a local running database on this port, there is nothing more to do before being able to test it!"
msgstr "在默认情况下， `MongoClient` 被配置为在27017端口（默认的MongoDB端口）上访问本地的MongoDB数据库，如果你在这个端口上有一个本地运行的数据库，那么在能够测试之前，不需要做其他操作！"

#: _versions/3.27/guides/mongodb.adoc
msgid "If you want to use Docker to run a MongoDB database, you can use the following command to launch one:"
msgstr "如果你想使用Docker来运行MongoDB数据库，你可以使用以下命令来启动一个数据库："

#: _versions/3.27/guides/mongodb.adoc
msgid "If you use <<dev-services,Dev Services>>, launching the container manually is not necessary."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Creating a frontend"
msgstr "创建一个网页"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"Now let's add a simple web page to interact with our `FruitResource`.\n"
"Quarkus automatically serves static resources located under the `META-INF/resources` directory.\n"
"In the `src/main/resources/META-INF/resources` directory, add a `fruits.html` file with the content from this link:{quickstarts-blob-url}/mongodb-quickstart/src/main/resources/META-INF/resources/fruits.html[fruits.html] file in it."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "You can now interact with your REST service:"
msgstr "现在你可以与你的REST服务进行交互："

#: _versions/3.27/guides/mongodb.adoc
msgid "start Quarkus with:"
msgstr "启动Quarkus："

#: _versions/3.27/guides/mongodb.adoc
msgid "CLI"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Maven"
msgstr "Maven"

#: _versions/3.27/guides/mongodb.adoc
msgid "Gradle"
msgstr "Gradle"

#: _versions/3.27/guides/mongodb.adoc
msgid "open a browser to `http://localhost:8080/fruits.html`"
msgstr "打开浏览器访问 `<a href=\"http://localhost:8080/fruits.html\" class=\"bare\">http://localhost:8080/fruits.html</a>` "

#: _versions/3.27/guides/mongodb.adoc
msgid "add new fruits to the list via the form"
msgstr "通过表格添加新的fruits到列表中"

#: _versions/3.27/guides/mongodb.adoc
msgid "Reactive MongoDB Client"
msgstr "响应式MongoDB客户端"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"A reactive MongoDB Client is included in Quarkus.\n"
"Using it is as easy as using the classic MongoDB Client.\n"
"You can rewrite the previous example to use it like the following."
msgstr "Quarkus中包含一个响应式MongoDB客户端。使用它就像使用经典的MongoDB客户端一样简单。你可以重写前面的例子来使用它，如下所示："

#: _versions/3.27/guides/mongodb.adoc
msgid "Mutiny"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"The MongoDB reactive client uses Mutiny reactive types.\n"
"If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "MongoDB的响应式客户端使用Mutiny响应式类型。如果你不熟悉Mutiny，请查看 link:mutiny-primer.html[Mutiny - 一个直观的响应式编程库] 。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Simplifying MongoDB Client usage using BSON codec"
msgstr "使用BSON编解码器简化MongoDB客户端的使用"

#: _versions/3.27/guides/mongodb.adoc
msgid "By using a Bson `Codec`, the MongoDB Client will take care of the transformation of your domain object to/from a MongoDB `Document` automatically."
msgstr "通过使用Bson `Codec` ，MongoDB 客户端将自动处理您的域对象与 MongoDB `Document` 的相互转化。"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"First you need to create a Bson `Codec` that will tell Bson how to transform your entity to/from a MongoDB `Document`.\n"
"Here we use a `CollectibleCodec` as our object is retrievable from the database (it has a MongoDB identifier), if not we would have used a `Codec` instead.\n"
"More information in the codec documentation: https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/data-formats/codecs/."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Then you need to create a `CodecProvider` to link this `Codec` to the `Fruit` class."
msgstr "然后你需要创建一个 `CodecProvider` 来把这个 `Codec` 链接到 `Fruit` 类。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Quarkus takes care of registering the `CodecProvider` for you as a CDI bean of `@Singleton` scope."
msgstr "Quarkus负责为你注册 `CodecProvider` ，作为 `@Singleton` 范围的CDI bean。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Finally, when getting the `MongoCollection` from the database you can use directly the `Fruit` class instead of the `Document` one, the codec will automatically map the `Document` to/from your `Fruit` class."
msgstr "最后，当从数据库中获取 `MongoCollection` 时，你可以直接使用 `Fruit` 类，而不是 `Document` ，编解码器会自动将 `Document` 与 `Fruit` 类相互映射（从 `Fruit` 类映射 `Document` 或者将 `Document` 映射到 `Fruit` 类）。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Here is an example of using a `MongoCollection` with the `FruitCodec`."
msgstr "这是一个将 `MongoCollection` 与 `FruitCodec` 一起使用的示例。"

#: _versions/3.27/guides/mongodb.adoc
msgid "The POJO Codec"
msgstr "POJO编解码器"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"The link:https://www.mongodb.com/docs/drivers/java/sync/current/fundamentals/data-formats/document-data-format-pojo/[POJO Codec] provides a set of annotations that enable the customization of\n"
"the way a POJO is mapped to a MongoDB collection and this codec is initialized automatically by Quarkus.\n"
"This codec also supports Java records so you can use them for your POJOs or an attribute of your POJOs."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"One of these annotations is the `@BsonDiscriminator` annotation that allows to storage multiple Java types in a single MongoDB collection by adding\n"
"a discriminator field inside the document. It can be useful when working with abstract types or interfaces."
msgstr "其中一个注解是 `@BsonDiscriminator` ，它允许通过在文档中添加一个判别字段来在单个MongoDB集合中存储多个Java类型。在处理抽象类型或接口时，它可能很有用。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Quarkus will automatically register all the classes annotated with `@BsonDiscriminator` with the POJO codec."
msgstr "Quarkus 将使用 POJO codec自动注册所有使用 `@BsonDiscriminator` 的类。"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"The POJO Codec have enhanced generic support via `PropertyCodecProvider`,\n"
"Quarkus will automatically register any `PropertyCodecProvider` with the POJO Codec (these classes are automatically made CDI beans of `@Singleton` scope).\n"
"When building native executables and using generic types, you might need to register the type arguments for reflection."
msgstr "POJO Codec通过 `PropertyCodecProvider` 增强了对泛型的支持，Quarkus会自动在POJO Codec中注册任何 `PropertyCodecProvider` （这些类会自动成为 `@Singleton` 范围的CDI bean）。当构建本地可执行文件和使用用泛型类型时，你可能需要用反射来注册类型参数。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Simplifying MongoDB with Panache"
msgstr "用Panache简化MongoDB"

#: _versions/3.27/guides/mongodb.adoc
msgid "The xref:mongodb-panache.adoc[MongoDB with Panache] extension facilitates the usage of MongoDB by providing active record style entities (and repositories) like you have in xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] and focuses on making your entities trivial and fun to write in Quarkus."
msgstr "link:mongodb-panache.html[MongoDB with Panache] 扩展通过提供活动记录样式实体（和存储库）来促进 MongoDB 的使用，就像您在 link:hibernate-orm-panache.html[Hibernate ORM with Panache] 中所拥有的一样，并关注让你的实体在 Quarkus 中编写变得简单而有趣。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Schema migration with Liquibase"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"The xref:liquibase-mongodb.adoc[Liquibase MongoDB] extension facilitates the initialization of a MongoDB database including indices and initial data.\n"
"It implements the same schema migration facilities that Liquibase offers for SQL databases."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Connection Health Check"
msgstr "连接健康检查"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"If you are using the `quarkus-smallrye-health` extension, `quarkus-mongodb-client` will automatically add a readiness health check\n"
"to validate the connection to the cluster."
msgstr "如果你使用 `quarkus-smallrye-health` 扩展， `quarkus-mongodb-client` 将自动添加就绪状态检查，以验证与集群的连接。"

#: _versions/3.27/guides/mongodb.adoc
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr "因此，当你访问应用程序的 `/q/health/ready` 端点时，可获得有关于连接验证状态的信息。"

#: _versions/3.27/guides/mongodb.adoc
msgid "This behavior can be disabled by setting the `quarkus.mongodb.health.enabled` property to `false` in your `application.properties`."
msgstr "可以通过在 `application.properties` 中将 `quarkus.mongodb.health.enabled` 属性设置为 `false` 来禁用此行为。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Metrics"
msgstr "指标"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"If you are using the `quarkus-micrometer` or `quarkus-smallrye-metrics` extension, `quarkus-mongodb-client` can provide metrics about the connection pools.\n"
"This behavior must first be enabled by setting the `quarkus.mongodb.metrics.enabled` property to `true` in your `application.properties`."
msgstr "如果你使用 `quarkus-micrometer` 或 `quarkus-smallrye-metrics` 扩展， `quarkus-mongodb-client` 可以提供关于连接池的指标。这种行为必须首先通过在你的 `application.properties` 中设置 `quarkus.mongodb.metrics.enabled` 属性为 `true` 来启用。"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"So when you access the `/q/metrics` endpoint of your application you will have information about the connection pool status.\n"
"When using xref:smallrye-metrics.adoc[SmallRye Metrics], connection pool metrics will be available under the `vendor` scope."
msgstr "因此，当你访问你的应用程序的 `/q/metrics` 端点时，你将得到有关连接池状态的信息。当使用 link:smallrye-metrics.html[SmallRye Metrics] 时，连接池指标将在 `vendor` 范围内可用。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Tracing"
msgstr "跟踪"

#: _versions/3.27/guides/mongodb.adoc
msgid "To use tracing with MongoDB, you need to add the xref:opentelemetry.adoc[`quarkus-opentelemetry`] extension to your project."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Even with all the tracing infrastructure in place the mongodb tracing is not enabled by default, and you need to enable it by setting this property:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Testing helpers"
msgstr "测试助手"

#: _versions/3.27/guides/mongodb.adoc
msgid "xref:#dev-services[Dev Services for MongoDB] is your best option to start a MongoDB database for your unit tests."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"But if you can't use it, you can start a MongoDB database using one of the two `QuarkusTestResourceLifecycleManager` that Quarkus provides.\n"
"They rely on link:https://github.com/flapdoodle-oss/de.flapdoodle.embed.mongo[Flapdoodle embedded MongoDB]."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "`io.quarkus.test.mongodb.MongoTestResource` will start a single instance on port 27017."
msgstr "`io.quarkus.test.mongodb.MongoTestResource` 将在27017端口启动一个单一的实例。"

#: _versions/3.27/guides/mongodb.adoc
msgid "`io.quarkus.test.mongodb.MongoReplicaSetTestResource` will start a replicaset with two instances, one on port 27017 and the other on port 27018."
msgstr "`io.quarkus.test.mongodb.MongoReplicaSetTestResource` 将启动一个有两个实例的复制集，一个在27017端口，另一个在27018端口。"

#: _versions/3.27/guides/mongodb.adoc
msgid "To use them, you need to add the `io.quarkus:quarkus-test-mongodb` dependency to your pom.xml."
msgstr "要使用它们，你需要在你的pom.xml中添加 `io.quarkus:quarkus-test-mongodb` 依赖。"

#: _versions/3.27/guides/mongodb.adoc
msgid "For more information about the usage of a `QuarkusTestResourceLifecycleManager` please read xref:getting-started-testing.adoc#quarkus-test-resource[Quarkus test resource]."
msgstr "有关 `QuarkusTestResourceLifecycleManager` 的更多信息，请阅读 link:getting-started-testing.html#quarkus-test-resource[Quarkus测试资源] 。"

#: _versions/3.27/guides/mongodb.adoc
msgid "To set the desired port MongoDB will listen to when it is launched, the following code should be used:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "To set the desired MongoDB version that will be launched, the following code should be used:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"The string value used can be any of one of the `de.flapdoodle.embed.mongo.distribution.Version` or `de.flapdoodle.embed.mongo.distribution.Version.Main` enums.\n"
"If no version is specified, `Version.Main.V4_0` is used by default."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "The legacy client"
msgstr "旧客户端"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"We don't include the legacy MongoDB client by default. It contains the now retired MongoDB Java API (DB, DBCollection,... )\n"
"and the `com.mongodb.MongoClient` that is now superseded by `com.mongodb.client.MongoClient`."
msgstr "我们默认不包括旧版的MongoDB客户端。它包含现已废弃的MongoDB Java API（DB、DBCollection......）以及现已被 `com.mongodb.client.MongoClient` 所取代的 `com.mongodb.MongoClient` 。"

#: _versions/3.27/guides/mongodb.adoc
msgid "If you want to use the legacy API, you need to add the following dependency to your build file:"
msgstr "如果你想使用旧的API，你需要在你的构建文件中添加以下依赖："

#: _versions/3.27/guides/mongodb.adoc
msgid "TLS configuration"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "If you want to use SSL/TLS encryption, you need to add this property in your `application.properties`:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "You can also configure the client to use a tls configuration from the TLS registry, this will enable tls:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "You can configure the client to trust servers with certificates with invalid hostnames:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Building a native executable"
msgstr "构建一个本地可执行文件"

#: _versions/3.27/guides/mongodb.adoc
msgid "You can use the MongoDB client in a native executable."
msgstr "你可以在一个本地可执行文件中使用MongoDB客户端。"

#: _versions/3.27/guides/mongodb.adoc
msgid "You can build a native executable with the usual command:"
msgstr "你可以使用常用命令构建本机可执行文件："

#: _versions/3.27/guides/mongodb.adoc
msgid "Running it is as simple as executing `./target/mongodb-quickstart-1.0.0-SNAPSHOT-runner`."
msgstr "运行它就像执行 `./target/mongodb-quickstart-1.0.0-SNAPSHOT-runner` 一样简单。"

#: _versions/3.27/guides/mongodb.adoc
msgid "You can then point your browser to `http://localhost:8080/fruits.html` and use your application."
msgstr "然后你可以使用的浏览器访问 `<a href=\"http://localhost:8080/fruits.html\" class=\"bare\">http://localhost:8080/fruits.html</a>` 来使用你的应用程序。"

#: _versions/3.27/guides/mongodb.adoc
msgid "Currently, Quarkus doesn't support link:https://docs.mongodb.com/manual/core/security-client-side-encryption/[Client-Side Field Level Encryption] in native mode."
msgstr "目前，Quarkus在本地模式下不支持 link:https://docs.mongodb.com/manual/core/security-client-side-encryption/[客户端字段级加密] 。"

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"If you encounter the following error when running your application in native mode: +\n"
"`Failed to encode 'MyObject'. Encoding 'myVariable' errored with: Can't find a codec for class org.acme.MyVariable.` +\n"
"This means that the `org.acme.MyVariable` class is not known to GraalVM, the remedy is to add the `@RegisterForReflection` annotation to your `MyVariable` class.\n"
"More details about the `@RegisterForReflection` annotation can be found on the xref:writing-native-applications-tips.adoc#registerForReflection[native application tips] page."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Customize the Mongo client configuration programmatically"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "If you need to customize the Mongo client configuration programmatically, you need to implement the `io.quarkus.mongodb.runtime.MongoClientCustomizer` interface and expose it as a CDI _application scoped_ bean:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"The bean can customize a specific client using the `@MongoClientName` qualifier to indicate the client name.\n"
"When there is no qualifier, it customizes the default client.\n"
"At most one customizer can be used per client.\n"
"If multiple customizers targeting the same client are detected, an exception is thrown at build time."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid ""
"This feature can be used to configure client-side field level encryption (CSFLE).\n"
"Follows the instructions from https://www.mongodb.com/docs/manual/core/csfle/[the Mongo web site] to configure CSFLE:"
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Client-side field level encryption, and feature relying on https://github.com/mongodb/libmongocrypt[Mongo Crypt] in general, are not supported in native mode."
msgstr ""

#: _versions/3.27/guides/mongodb.adoc
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/3.27/guides/mongodb.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
