# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-12 02:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "Using Security with WebAuthn"
msgstr "使用WebAuthn的安全性"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"This guide demonstrates how your Quarkus application can use WebAuthn authentication instead of\n"
"passwords."
msgstr "本指南演示了你的Quarkus应用程序如何使用WebAuthn认证来代替密码。"

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "A WebAuthn or PassKeys-capable device, or https://developer.chrome.com/docs/devtools/webauthn/[an emulator of those]."
msgstr "支持 WebAuthn 或 PassKeys 的设备，或 link:https://developer.chrome.com/docs/devtools/webauthn/[这些设备的模拟器] 。"

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Introduction to WebAuthn"
msgstr "WebAuthn简介"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"https://webauthn.guide/[WebAuthn] is an authentication mechanism designed to replace passwords. In short, every\n"
"time you write a service for registering new users, or logging them in, instead of asking for a password, you\n"
"use WebAuthn, which will replace the password."
msgstr "link:https://webauthn.guide/[WebAuthn] 是一种旨在取代密码的身份验证机制。简而言之，每次编写用于注册新用户或登录用户的服务时，都可以使用 WebAuthn 来代替要求输入密码。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"WebAuthn replaces the password with a proof of identity. In practice, users, instead of having to invent a password,\n"
"store it or remember it, will use a hardware token that will generate a proof of identity specifically for your\n"
"service or website. This can be done by asking users to press their thumb on their phone, or pressing a button\n"
"on a https://www.yubico.com[YubiKey] on a computer."
msgstr "WebAuthn 以身份证明取代密码。在实践中，用户不必再编造密码、存储密码或记住密码，而是使用一个硬件令牌，该令牌会专门为您的服务或网站生成一个身份证明。这可以通过要求用户按下手机上的拇指或按下电脑上 link:https://www.yubico.com[YubiKey] 的按钮来实现。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"So, when you register your user, you use your browser to enter your user information (username, your name, etc…)\n"
"and instead of typing a password to identify yourself, you click a button which will invoke the WebAuthn browser\n"
"API which will ask you to do something (press a button, use your fingerprint). Then, your browser will generate\n"
"a proof of identity which you can send to your service instead of a password."
msgstr "因此，当您注册用户时，您可以使用浏览器输入您的用户信息（用户名、姓名等......），然后点击一个按钮来调用 WebAuthn 浏览器 API，该 API 会要求您做一些事情（按下按钮、使用指纹），而不是输入密码来表明您的身份。然后，浏览器会生成一个身份证明，您可以将其发送到您的服务，而不是密码。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"This proof of identity, when you register, consists mostly in a public key. Actually there's a lot of stuff in\n"
"there but the most interesting is the public key. This public key is not stored on your device, or your browser.\n"
"It is generated especially for the target service (tied to its URI), and derived from the hardware authenticator.\n"
"So the association of the hardware authenticator and the target service will always derive the same private and\n"
"public key pair, none of which are stored anywhere. You can for example, take your YubiKey to another computer\n"
"and it will keep generating the same private/public keys for the same target service."
msgstr "注册时的身份证明主要包括一个公钥。其实里面有很多东西，但最有趣的还是公钥。这个公钥不会存储在你的设备或浏览器中。它是专门为目标服务生成的（与其 URI 绑定），并从硬件验证器中导出。因此，硬件验证器和目标服务的关联将始终产生相同的私钥和公钥对，它们都不会存储在任何地方。例如，你可以把 YubiKey 带到另一台电脑上，它将继续为相同的目标服务生成相同的私钥/公钥。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"So, when you register, you send (mostly) a public key instead of a password, and the service stores that information\n"
"as WebAuthn credentials for your new user account, and this is what will identify you later."
msgstr "因此，当你注册时，你发送的（主要是）公钥而不是密码，服务会将该信息作为 WebAuthn 凭据存储到你的新用户账户中，这就是以后识别你身份的依据。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Then, when you need to log in to that service, instead of typing your password (which doesn't exist, remember?),\n"
"you press a button on the login form, and the browser will ask you to do something, and then it will send\n"
"a signature to your service instead of a password. That signature requires the private key that is derived from\n"
"your authenticator hardware and the target service, and so when your service receives it, it can verify that it\n"
"corresponds to the signature of the public key you stored as credentials."
msgstr "然后，当你需要登录该服务时，你不用输入密码（密码不存在，还记得吗？），而是按下登录表单上的一个按钮，浏览器会要求你做一些事情，然后它会向你的服务发送一个签名，而不是密码。该签名需要从你的验证器硬件和目标服务中提取的私钥，因此当你的服务收到该签名时，可以验证它是否与你作为凭证存储的公钥的签名一致。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"So, to recap: registration sends a generated public key instead of a password, and login sends a signature for\n"
"that public key, allowing you to verify that the user is who they were when they registered."
msgstr "因此，概括地说：注册时发送的是生成的公钥而不是密码，登录时发送的是该公钥的签名，这样就可以验证用户是否就是注册时的用户。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"In practice, it's a little more complex, because there needs to be a handshake with the server before you\n"
"can use the hardware authenticator (ask for a challenge and other things), so there are always two calls to your\n"
"service: one before login or registration, before calling the hardware authenticator, and then the normal\n"
"login or registration."
msgstr "在实际操作中，情况会稍微复杂一些，因为在使用硬件验证器之前，需要与服务器进行握手（请求挑战等），所以总是要对服务进行两次调用：一次是在登录或注册之前，一次是在调用硬件验证器之前，然后才是正常的登录或注册。"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "And also there are a lot more fields to store than just a public key, but we will help you with that."
msgstr "还有，除了公钥，还有很多字段需要存储，但我们会帮助你解决这个问题。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Just in case you get there wondering what's the relation with https://fidoalliance.org/passkeys/[PassKeys]\n"
"and whether we support it: sure, yes, PassKeys is a way that your authenticator devices can share and sync\n"
"their credentials, which you can then use with our WebAuthn authentication."
msgstr "万一你想知道 link:https://fidoalliance.org/passkeys/[PassKeys] 和我们是否支持它有什么关系：当然，是的，PassKeys 是一种让你的验证器设备共享和同步凭据的方式，然后你就可以使用我们的 WebAuthn 验证。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The WebAuthn specification requires HTTPS to be used for communication with the server, though\n"
"some browsers allow `localhost`. If you must use HTTPS in dev mode, you can always use the\n"
"https://docs.quarkiverse.io/quarkus-ngrok/dev/index.html[quarkus-ngrok] extension."
msgstr "WebAuthn 规范要求在与服务器通信时使用 HTTPS，不过有些浏览器允许使用 `localhost` 。如果必须在开发模式下使用 HTTPS，可以使用 link:https://docs.quarkiverse.io/quarkus-ngrok/dev/index.html[quarkus-ngrok] 扩展。"

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "In this example, we build a very simple microservice which offers four endpoints:"
msgstr "在这个例子中，我们建立了一个非常简单的微服务，提供四个端点。"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/public`"
msgstr " `/api/public` "

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/public/me`"
msgstr " `/api/public/me` "

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/users/me`"
msgstr " `/api/users/me` "

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/admin`"
msgstr " `/api/admin` "

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The `/api/public` endpoint can be accessed anonymously.\n"
"The `/api/public/me` endpoint can be accessed anonymously and returns the current username if there is one, or `<not logged in>` if not.\n"
"The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.\n"
"The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
msgstr "`/api/public` 端点可以匿名访问。 `/api/public/me` 端点可以匿名访问，如果有用户名，则返回当前用户名；如果没有用户名，则返回 `<not logged in>` 。 `/api/admin` 端点受 RBAC（基于角色的访问控制）保护，只有被授予 `admin` 角色的用户才能访问。在该端点，我们使用 `@RolesAllowed` 注释来声明执行访问限制。 `/api/users/me` 端点也受 RBAC（基于角色的访问控制）保护，只有被授予 `user` 角色的用户才能访问。作为响应，它会返回一个包含用户详细信息的 JSON 文档。"

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "The solution is located in the `security-webauthn-quickstart` link:{quickstarts-tree-url}/security-webauthn-quickstart[directory]."
msgstr "该解决方案位于 `security-webauthn-quickstart` {quickstarts-tree-url}/security-webauthn-quickstart[目录]中。"

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: delimited block =
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
msgstr "不要忘记添加选择的数据库连接器库。这里我们使用PostgreSQL作为身份存储。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"This command generates a Maven project, importing the `security-webauthn` extension\n"
"which allows you to use WebAuthn to authenticate users."
msgstr "该命令将生成一个 Maven 项目，并导入 `security-webauthn` 扩展，以便使用 WebAuthn 对用户进行身份验证。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `security-webauthn` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果已经配置了 Quarkus 项目，可以在项目基本目录下运行以下命令，将 `security-webauthn` 扩展添加到项目中："

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "Writing the application"
msgstr "编写应用程序"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular Jakarta REST resource:"
msgstr "让我们从实现 `/api/public` 端点开始。正如你从下面的源代码中看到的，它只是一个普通的JAX-RS资源。"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "端点 `/api/admin` 的源代码也非常简单。这里的主要区别是，我们使用 `@RolesAllowed` 注解来确保只有被授予 `admin` 角色的用户才能访问该端点："

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.\n"
"We are using `SecurityContext` to get access to the current authenticated Principal and we return the user's name. This information is loaded from the database."
msgstr "最后，让我们来看看 `/api/users/me` 端点。从下面的源代码中可以看到，我们只信任 `user` 角色的用户。我们使用 `SecurityContext` 访问当前通过身份验证的 Principal，并返回用户名。这些信息是从数据库中加载的。"

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Storing our WebAuthn credentials"
msgstr "储存我们的WebAuthn凭证"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"We can now describe how our WebAuthn credentials are stored in our database with two entities. Note that we've\n"
"simplified the model in order to only store one credential per user (who could actually have more than one WebAuthn credential\n"
"and other data such as roles):"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "And our user entity:"
msgstr ""

#. type: Title ====
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "A note about usernames and credential IDs"
msgstr "关于用户名和凭证ID的说明"

#: _versions/main/guides/security-webauthn.adoc
msgid "Usernames are unique and to your users. Every created WebAuthn credential record has a unique ID."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"You can allow (if you want, but you don't have to) your users to have more than one authenticator device,\n"
"which means a single username can map to multiple credential IDs, all of which identify the same user."
msgstr ""

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Exposing your entities to Quarkus WebAuthn"
msgstr "将你的实体暴露给Quarkus WebAuthn"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"You need to define a bean implementing the link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] in order to allow the Quarkus WebAuthn\n"
"extension to load and store credentials. This is where you tell Quarkus how to turn your data model into the\n"
"WebAuthn security model:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"Warning: When implementing your own `WebAuthnUserProvider.store` method, make sure that you never allow creating\n"
"new credentials for a `username` that already exists. Otherwise you risk allowing third-parties to impersonate existing\n"
"users by letting them add their own credentials to existing accounts. If you want to allow existing users to register\n"
"more than one WebAuthn credential, you must make sure in `WebAuthnUserProvider.store` that the user is currently logged\n"
"in under the same `username` to which you want to add new credentials. In every other case, make sure to return a failed\n"
"`Uni` from this method. In this particular example, this is checked using a unicity constraint on the user name, which\n"
"will cause the transaction to fail if the user already exists."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "Configuration"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"Because we want to delegate login and registration to the default Quarkus WebAuthn endpoints, we need to enable them\n"
"in configuration (`src/main/resources/application.properties`):"
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Writing the HTML application"
msgstr "编写HTML应用程序"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"We now need to write a web page with links to all our APIs, as well as a way to register a new user, login, and logout,\n"
"in `src/main/resources/META-INF/resources/index.html`:"
msgstr "现在，我们需要在 `src/main/resources/META-INF/resources/index.html` 中编写一个网页，其中包含指向所有 API 的链接，以及注册新用户、登录和注销的方法："

#: _versions/main/guides/security-webauthn.adoc
msgid "Trying the application"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "The application is now protected and the identities are provided by our database."
msgstr "现在，该应用程序受到保护，身份由我们的数据库提供。"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "Run your application in dev mode with:"
msgstr "在开发模式下运行你的应用程序。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"which will start a PostgreSQL Dev Service container,\n"
"and open http://localhost:8080 in your browser."
msgstr "这将启动 PostgreSQL Dev Service 容器，并在浏览器中打开 http://localhost:8080 。"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "Initially, you will have no credentials registered, and no current user:"
msgstr "最初，你将没有注册的凭证，也没有当前用户。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The current user is displayed on the left, and you can use the top menu to try accessing the public API, which\n"
"should work, while the user and admin APIs will fail and redirect you to the current page."
msgstr "当前用户显示在左侧，您可以使用顶部菜单尝试访问公共 API，这应该可以正常工作，而用户和管理员 API 则会失败并重定向到当前页面。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Start by registering your WebAuthn credentials by entering a username, first and last names on the `Register`\n"
"form on the right, then pressing the `Register` button:"
msgstr "首先在右侧的 `Register` 表单中输入用户名、姓和名，然后按 `Register` 按钮注册 WebAuthn 凭据："

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Your browser will ask you to activate your WebAuthn authenticator (you will need a WebAuthn-capable browser\n"
"and possibly device, or you can use https://developer.chrome.com/docs/devtools/webauthn/[an emulator of those]):"
msgstr "浏览器会要求您激活 WebAuthn 身份验证器（您需要一个支持 WebAuthn 的浏览器和可能的设备，也可以使用 link:https://developer.chrome.com/docs/devtools/webauthn/[这些] 设备的 link:https://developer.chrome.com/docs/devtools/webauthn/[模拟器] ）："

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "You will then be logged in, and can check that the user API is now accessible:"
msgstr "然后你将被登录，并可以检查用户API现在是否可以访问。"

#: _versions/main/guides/security-webauthn.adoc
msgid "At this stage you can `Logout`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "Then press the `Login` button, and you will be logged in:"
msgstr "然后按 `Login` 按钮，你就可以登录了。"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "The admin API is only accessible if you register with the `admin` user name."
msgstr "只有当你用 `admin` 用户名注册时，才能访问管理API。"

#: _versions/main/guides/security-webauthn.adoc
msgid "Explanation of the flow for WebAuthn authentication."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "There are two modes of operation for how you want to handle user and credential creation:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"By default, the solution we have seen handles user and credential creation and logins automatically\n"
"via the <<WebAuthn endpoints>> provided out of the box by this extension."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"In this scenario, all you have to to is provide a link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] to\n"
"tell Quarkus how to find, store and update your credentials (see\n"
"<<Exposing your entities to Quarkus WebAuthn>>)."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"Thus, triggering a registration on the client requires obtaining a challenge from the server (see\n"
"<<Obtain a registration challenge>>), which will then be returned to the client which\n"
"uses that to create new credentials and send them to the server (see\n"
"<<Trigger a registration>>) which will store the credentials and log you in:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"Later, triggering a login on the client requires obtaining a challenge from the server (see\n"
"<<Obtain a login challenge>>), which will then be returned to the client which\n"
"uses that to get the required credentials and send proof of them to the server (see\n"
"<<Trigger a login>>) which will update the credentials and log you in:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"If you want to customise the registration and login flow, you can also handle user and credential\n"
"creation and logins yourself via your own logic (see <<Handling login and registration endpoints yourself>>)."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "WebAuthn endpoints"
msgstr "WebAuthn端点"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "The Quarkus WebAuthn extension comes out of the box with these REST endpoints pre-defined:"
msgstr "Quarkus WebAuthn扩展开箱即预设了这些REST端点。"

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Obtain a registration challenge"
msgstr "获得登记挑战"

#: _versions/main/guides/security-webauthn.adoc
msgid "`GET /q/webauthn/register-options-challenge?username=<username>&displayName=<displayName>`: Set up and obtain a registration challenge"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "Query parameters:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "`username` is a username. Required."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "`displayName` is a human-palatable name for the user account. Optional."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "This causes a cookie to be set for the challenge, it will be used by the registration step later."
msgstr ""

#. type: Block title
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Response"
msgstr "响应"

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Trigger a registration"
msgstr "触发注册"

#: _versions/main/guides/security-webauthn.adoc
msgid "`POST /q/webauthn/register?username=<username>`: Trigger a registration"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"This uses the challenge cookie set by the registration challenge and clears it. It\n"
"also uses your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] to store the new credentials, and sets up\n"
"the <<configuration-reference,session cookie>> to log you in."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "This is only enabled if the `quarkus.webauthn.enable-registration-endpoint` configuration is set to `true`."
msgstr ""

#. type: Block title
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Request"
msgstr "要求"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "This returns a 204 with no body."
msgstr "这将返回一个没有主体的204。"

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Obtain a login challenge"
msgstr "获得一个登录挑战"

#: _versions/main/guides/security-webauthn.adoc
msgid "`GET /q/webauthn/login-options-challenge?username=<username>`: Set up and obtain a login challenge"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "`username` is a username. Optional in the case of https://www.w3.org/TR/webauthn-3/#discoverable-credential[Discoverable Credentials] (with PassKeys)."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "This causes a cookie to be set for the challenge, it will be used by the login step later."
msgstr ""

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Trigger a login"
msgstr "触发一次登录"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"This uses the challenge cookie set by the login challenge and clears it. It\n"
"also uses your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] to find and update the credentials, and sets up\n"
"the <<configuration-reference,session cookie>> to log you in."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "This is only enabled if the `quarkus.webauthn.enable-login-endpoint` configuration is set to `true`."
msgstr ""

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Logout"
msgstr "登出"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "`GET /q/webauthn/logout`: Logs you out"
msgstr " `GET /q/webauthn/logout` :将你的信息记录下来"

#: _versions/main/guides/security-webauthn.adoc
msgid "This will clear the <<configuration-reference,session cookie>> to log you out."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "This returns a 302 redirect to the root URI of your application."
msgstr "这将返回一个302重定向到你的应用程序的根URI。"

#: _versions/main/guides/security-webauthn.adoc
msgid "Related Origins"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "`GET /.well-known/webauthn`: Retreives the list of https://passkeys.dev/docs/advanced/related-origins/[related origins]."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "This defaults to the current origin on which Quarkus is deployed, but can be <<quarkus-security-webauthn_quarkus-webauthn-origins,configured>>."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "WebAuthn JavaScript library"
msgstr "WebAuthn JavaScript库"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Because there's so much JavaScript needed to set WebAuthn up in the browser, the Quarkus WebAuthn extension ships with\n"
"a JavaScript library to help you talk to the WebAuthn endpoints, at `/q/webauthn/webauthn.js`. You can set it up like this:"
msgstr "由于在浏览器中设置 WebAuthn 需要大量 JavaScript，Quarkus WebAuthn 扩展随附了一个 JavaScript 库，以帮助你与 WebAuthn 端点对话，网址是 `/q/webauthn/webauthn.js` 。你可以这样设置"

#: _versions/main/guides/security-webauthn.adoc
msgid "Or, if you need to customise the endpoints:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "CSRF considerations"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"If you use the endpoints provided by Quarkus, they will not be protected by xdoc:security-csrf-prevention.adoc[CSRF], but\n"
"if you define your own endpoints and use this JavaScript library to access them you will need to configure CSRF via headers:"
msgstr ""

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Invoke registration"
msgstr "调用注册"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"The `webAuthn.register` method invokes the registration challenge endpoint, then calls the authenticator and invokes the registration endpoint\n"
"for that registration, and returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object]:"
msgstr ""

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Invoke login"
msgstr "调用登录"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"The `webAuthn.login` method invokes the login challenge endpoint, then calls the authenticator and invokes the login endpoint\n"
"for that login, and returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object]:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid "The username is optional, in the case of https://www.w3.org/TR/webauthn-3/#discoverable-credential[Discoverable Credentials] (with PassKeys)"
msgstr ""

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Only invoke the registration challenge and authenticator"
msgstr "只调用注册挑战和认证器"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"The `webAuthn.registerClientSteps` method invokes the registration challenge endpoint, then calls the authenticator and returns\n"
"a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object] containing a\n"
"JSON object suitable for being sent to the registration endpoint. You can use that JSON object in order to store the credentials\n"
"in hidden form `input` elements, for example, and send it as part of a regular HTML form:"
msgstr ""

#. type: Title ===
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Only invoke the login challenge and authenticator"
msgstr "只调用注册挑战和认证器"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"The `webAuthn.loginClientSteps` method invokes the login challenge endpoint, then calls the authenticator and returns\n"
"a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object] containing a\n"
"JSON object suitable for being sent to the login endpoint. You can use that JSON object in order to store the credentials\n"
"in hidden form `input` elements, for example, and send it as part of a regular HTML form:"
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Handling login and registration endpoints yourself"
msgstr "自己处理登录和注册端点"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"Sometimes, you will want to ask for more data than just a username in order to register a user,\n"
"or you want to deal with login and registration with custom validation, and so the default WebAuthn login\n"
"and registration endpoints are not enough."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"In this case, you can use the `WebAuthn.loginClientSteps` and `WebAuthn.registerClientSteps` methods from the JavaScript\n"
"library, store the authenticator data in hidden form elements, and send them as part of your form payload\n"
"to the server to your custom login or registration endpoints."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"If you are storing them in form input elements, you can then use the link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnLoginResponse.html[`WebAuthnLoginResponse`] and\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnRegistrationResponse.html[`WebAuthnRegistrationResponse`] classes,\n"
"mark them as `@BeanParam` and then use the\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#login(io.quarkus.security.webauthn.WebAuthnLoginResponse,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.login`]\n"
"and link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#register(io.quarkus.security.webauthn.WebAuthnRegisterResponse,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.register`]\n"
"methods to replace the `/q/webauthn/login` and `/q/webauthn/register` endpoints."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"In most cases you can keep using the `/q/webauthn/login-options-challenge` and `/q/webauthn/register-options-challenge` challenge-initiating\n"
"endpoints, because this is not where custom logic is required."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"In this case, the registration flow is a little different because you will write your own registration endpoint\n"
"which will handle storing of the credentials and setting up the session cookie:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"Similarly, the login flow is a little different because you will write your own login endpoint\n"
"which will handle updating the credentials and setting up the session cookie:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"If you handle user and credential creation and logins yourself in your endpoints, you only need\n"
"to provide a read-only view of your entities in your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`], so you can skip\n"
"the `store` and `update` methods:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"When setting up your own login and registration endpoints, you don't need to enable the default endpoints, so you can\n"
"remove the `quarkus.webauthn.enable-login-endpoint` and `quarkus.webauthn.enable-registration-endpoint` configuration."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"Thankfully, you can use the link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] bean to handle the WebAuthn-specific part of\n"
"your registration and login endpoints, and focus on your own logic:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"The link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`]\n"
"methods do not set or read the <<configuration-reference,session cookie>>, so you will have to take care\n"
"of it yourself, but it allows you to use other means of storing the user, such as JWT. You can use the\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#rememberUser(java.lang.String,io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.rememberUser`]\n"
" and link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html#logout(io.vertx.ext.web.RoutingContext)[`WebAuthnSecurity.logout`]\n"
" methods on the same link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] class if you want to manually set up login cookies."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Blocking version"
msgstr "封锁版本"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"If you're using a blocking data access to the database, you can safely block on the\n"
"link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnSecurity.html[`WebAuthnSecurity`] methods,\n"
"with `.await().indefinitely()`, because nothing is async in the `register` and `login` methods, besides the\n"
"data access with your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`]."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"You will have to add the `@Blocking` annotation on your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] class in order for the\n"
"Quarkus WebAuthn endpoints to defer those calls to the worker pool."
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "Virtual-Threads version"
msgstr "虚拟线程版本"

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"You will have to add the `@RunOnVirtualThread` annotation on your link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] class in order to tell the\n"
"Quarkus WebAuthn endpoints to defer those calls to the worker pool."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Testing WebAuthn"
msgstr "测试WebAuthn"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Testing WebAuthn can be complicated because normally you need a hardware token, which is why we've made the\n"
"`quarkus-test-security-webauthn` helper library:"
msgstr "测试 WebAuthn 可能比较复杂，因为通常需要硬件令牌，这也是我们开发 `quarkus-test-security-webauthn` 辅助库的原因："

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"With this, you can use link:{webauthn-test-api}/io/quarkus/test/security/webauthn/WebAuthnHardware.html[`WebAuthnHardware`]\n"
"to emulate an authenticator token, as well as the\n"
"link:{webauthn-test-api}/io/quarkus/test/security/webauthn/WebAuthnEndpointHelper.html[`WebAuthnEndpointHelper`]\n"
"helper methods in order to invoke the WebAuthn endpoints, or even fill your form\n"
"data for custom endpoints:"
msgstr ""

#: _versions/main/guides/security-webauthn.adoc
msgid ""
"For this test, since we're testing both the provided callback endpoint, which updates users\n"
"in its link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] and the manual `LoginResource` endpoint, which deals with users\n"
"manually, we need to override the link:{webauthn-api}/io/quarkus/security/webauthn/WebAuthnUserProvider.html[`WebAuthnUserProvider`] with one that doesn't update the\n"
"`scooby` user:"
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The security encryption key can be set with the\n"
"link:all-config#quarkus-vertx-http_quarkus.http.auth.session.encryption-key[`quarkus.http.auth.session.encryption-key`]\n"
"configuration option, as described in the link:security-authentication-mechanisms#form-auth[security guide]."
msgstr "安全加密密钥可通过 link:all-config#quarkus-vertx-http_quarkus.http.auth.session.encryption-key[quarkus.http.auth.session.encryption-key] 配置选项设置安全加密密钥，详见 link:security-authentication-mechanisms#form-auth[安全指南] 。"

#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _versions/main/guides/security-webauthn.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/main/guides/security-webauthn.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"
