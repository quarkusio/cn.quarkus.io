msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Getting Started to Quarkus Messaging with Apache Kafka"
msgstr "使用 Apache Kafka 开始使用 Quarkus 消息传输技术"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "This guide demonstrates how your Quarkus application can utilize Quarkus Messaging to interact with Apache Kafka."
msgstr "本指南演示了 Quarkus 应用程序如何利用 Quarkus Messaging 与 Apache Kafka 进行交互。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Architecture"
msgstr "应用结构"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"In this guide, we are going to develop two applications communicating with Kafka.\n"
"The first application sends a _quote request_ to Kafka and consumes Kafka messages from the _quote_ topic.\n"
"The second application receives the _quote request_ and sends a _quote_ back."
msgstr "在本指南中，我们将开发两个与 Kafka 通信的应用程序。第一个应用程序向 Kafka 发送 _报价请求_ ，并从 _报价_ 主题消费 Kafka 消息。第二个应用程序接收 _报价请求_ 并发回 _报价_ 。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"The first application, the _producer_, will let the user request some quotes over an HTTP endpoint.\n"
"For each quote request a random identifier is generated and returned to the user, to mark the quote request as _pending_.\n"
"At the same time, the generated request id is sent over a Kafka topic `quote-requests`."
msgstr "第一个应用程序，即 _生产者_ ，将让用户通过 HTTP 端点请求一些报价。每个报价请求都会生成一个随机标识符并返回给用户，以将报价请求标记为 _待处理_ 。与此同时，生成的请求 ID 会通过 Kafka 主题 `quote-requests` 发送。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "The second application, the _processor_, will read from the `quote-requests` topic, put a random price to the quote, and send it to a Kafka topic named `quotes`."
msgstr "第二个应用程序（ _处理器_ ）将从 `quote-requests` 主题中读取数据，在报价中加入一个随机价格，然后将其发送到名为 `quotes` 的 Kafka 主题中。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"Lastly, the _producer_ will read the quotes and send them to the browser using server-sent events.\n"
"The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr "最后， _生产商_ 将读取报价，并通过服务器发送事件将其发送到浏览器。因此，用户将看到报价从 _待定_ 价格实时更新为已收到的价格。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Solution"
msgstr "解决方案"

#: _versions/main/guides/kafka-getting-started.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create applications step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议你按照下面章节中的说明，一步一步地创建应用程序。但是，你可以直接转到已完成的示例。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库可使用命令： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[压缩包] 。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "The solution is located in the `kafka-quickstart` link:{quickstarts-tree-url}/kafka-quickstart[directory]."
msgstr "解决方案位于 `kafka-quickstart` link:{quickstarts-tree-url}/kafka-quickstart[目录] 中。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "首先，我们需要创建两个项目： _producer_ 和 _processor_ 。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "To create the _producer_ project, in a terminal run:"
msgstr "要创建 _producer_ 项目，请在终端中运行："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "This command creates the project structure and selects two Quarkus extensions we will be using:"
msgstr "该命令创建项目结构，并选择我们将使用的两个 Quarkus 扩展："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Quarkus REST (formerly RESTEasy Reactive) and its Jackson support (to handle JSON) to serve the HTTP endpoint."
msgstr "Quarkus REST（前身为 RESTEasy Reactive）及其 Jackson 支持（处理 JSON）为 HTTP 端点提供服务。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "The Kafka connector for Reactive Messaging"
msgstr "用于反应式消息传递的 Kafka 连接器"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "要创建 _processor_ 项目，请在同一目录下运行："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "At that point, you should have the following structure:"
msgstr "此时，您应该有以下结构："

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Open the two projects in your favorite IDE."
msgstr "在你喜欢的IDE中打开这两个项目。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Dev Services"
msgstr "开发服务"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"No need to start a Kafka broker when using the dev mode or for tests.\n"
"Quarkus starts a broker for you automatically.\n"
"See xref:kafka-dev-services.adoc[Dev Services for Kafka] for details."
msgstr "使用开发模式或进行测试时，无需启动 Kafka 代理。Quarkus 会自动为你启动代理。详情请参见 xref:kafka-dev-services.adoc[Kafka 的开发服务] 。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "The Quote object"
msgstr "Quote对象"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"The `Quote` class will be used in both _producer_ and _processor_ projects.\n"
"For the sake of simplicity, we will duplicate the class.\n"
"In both projects, create the `src/main/java/org/acme/kafka/model/Quote.java` file, with the following content:"
msgstr "`Quote` 类将在 _生产者_ 和 _处理器_ 项目中使用。为简单起见，我们将复制该类。在这两个项目中，创建 `src/main/java/org/acme/kafka/model/Quote.java` 文件，内容如下："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"JSON representation of `Quote` objects will be used in messages sent to the Kafka topic\n"
"and also in the server-sent events sent to web browsers."
msgstr "`Quote` 对象的 JSON 表示法将用于发送到 Kafka 主题的消息以及发送到网络浏览器的服务器发送事件中。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"Quarkus has built-in capabilities to deal with JSON Kafka messages.\n"
"In a following section, we will create serializer/deserializer classes for Jackson."
msgstr "Quarkus 内置了处理 JSON Kafka 消息的功能。在接下来的章节中，我们将为 Jackson 创建序列化器/解序列化器类。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Sending quote request"
msgstr "发送报价请求"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Inside the _producer_ project, create the `src/main/java/org/acme/kafka/producer/QuotesResource.java` file and add the following content:"
msgstr "在 _制作人_ 项目中，创建 `src/main/java/org/acme/kafka/producer/QuotesResource.java` 文件并添加以下内容："

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "注入一个响应式消息 `Emitter` ，来向 `quote-requests` 通道发送消息。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "On a post request, generate a random UUID and send it to the Kafka topic using the emitter."
msgstr "在发布请求时，生成一个随机 UUID，并使用发射器将其发送到 Kafka 主题。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Return the same UUID to the client."
msgstr "向客户端返回相同的 UUID。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"The `quote-requests` channel is going to be managed as a Kafka topic, as that's the only connector on the classpath.\n"
"If not indicated otherwise, like in this example, Quarkus uses the channel name as topic name.\n"
"So, in this example, the application writes into the `quote-requests` topic.\n"
"Quarkus also configures the serializer automatically, because it finds that the `Emitter` produces `String` values."
msgstr "`quote-requests` 频道将作为 Kafka 主题进行管理，因为这是 classpath 上唯一的连接器。如果没有其他说明，比如本例，Quarkus 会使用通道名称作为主题名称。因此，在本例中，应用程序将写入 `quote-requests` 主题。Quarkus 还会自动配置序列化器，因为它发现 `Emitter` 会生成 `String` 值。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "When you have multiple connectors, you would need to indicate which connector you want to use in the application configuration."
msgstr "当你有多个连接器时，你需要在应用程序配置中指出你想要使用哪个连接器。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Processing quote requests"
msgstr "处理报价请求"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"Now let's consume the quote request and give out a price.\n"
"Inside the _processor_ project, create the `src/main/java/org/acme/kafka/processor/QuotesProcessor.java` file and add the following content:"
msgstr "现在我们来处理报价请求并给出价格。在 _处理器_ 项目中，创建 `src/main/java/org/acme/kafka/processor/QuotesProcessor.java` 文件并添加以下内容："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Indicates that the method consumes the items from the `requests` channel."
msgstr "表示该方法消耗 `requests` 频道中的项目。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel."
msgstr "表示将方法返回的对象发送到 `quotes` 频道。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "表示该处理是 _blocking_ ，不能在调用者线程上运行。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"For every Kafka _record_ from the `quote-requests` topic, Reactive Messaging calls the `process` method, and sends the returned `Quote` object to the `quotes` channel.\n"
"In this case, we need to configure the channel in the `application.properties` file, to configures the `requests` and `quotes` channels:"
msgstr "对于来自 `quote-requests` 主题的每一条 Kafka _记录_ ，Reactive Messaging 都会调用 `process` 方法，并将返回的 `Quote` 对象发送到 `quotes` 通道。在这种情况下，我们需要在 `application.properties` 文件中配置通道，以配置 `requests` 和 `quotes` 通道："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.\n"
"The configuration properties are structured as follows:"
msgstr "请注意，在这种情况下，我们有一个传入和一个传出连接器配置，每个配置都有不同的名称。配置属性的结构如下："

#: _versions/main/guides/kafka-getting-started.adoc
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value` "

#: _versions/main/guides/kafka-getting-started.adoc
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr "`channel-name` 片段必须与 `@Incoming` 和 `@Outgoing` 注解中设定的值相匹配:"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "`quote-requests` -> Kafka topic from which we read the quote requests"
msgstr "`quote-requests` → 我们从中读取引文请求的卡夫卡主题"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "`quotes` -> Kafka topic in which we write the quotes"
msgstr "`quotes` → 卡夫卡主题，我们在其中写引文"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"More details about this configuration is available on the https://kafka.apache.org/documentation/#producerconfigs[Producer configuration] and https://kafka.apache.org/documentation/#consumerconfigs[Consumer configuration] section from the Kafka documentation. These properties are configured with the prefix `kafka`.\n"
"An exhaustive list of configuration properties is available in xref:kafka.adoc#kafka-configuration[Kafka Reference Guide - Configuration]."
msgstr "有关此配置的更多详情，请参阅 Kafka 文档中的 \" link:https://kafka.apache.org/documentation/#producerconfigs[生产者配置] \"和 \" link:https://kafka.apache.org/documentation/#consumerconfigs[消费者] 配置 \"部分。这些属性的配置前缀是 `kafka` 。 xref:kafka.adoc#kafka-configuration[Kafka 参考指南 - 配置》（Kafka Reference Guide - Configuration] ）中提供了详尽的配置属性列表。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"`mp.messaging.incoming.requests.auto.offset.reset=earliest` instructs the application to start reading the topics from the first offset, when there is no committed offset for the consumer group.\n"
"In other words, it will also process messages sent before we start the processor application."
msgstr "`mp.messaging.incoming.requests.auto.offset.reset=earliest` 指示应用程序从第一个偏移量开始读取主题，此时消费者组还没有承诺的偏移量。换句话说，它也会处理在我们启动处理器应用程序之前发送的信息。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"There is no need to set serializers or deserializers.\n"
"Quarkus detects them, and if none are found, generates them using JSON serialization."
msgstr "无需设置序列化器或反序列化器。Quarkus 会检测它们，如果没有，就会使用 JSON 序列化生成它们。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Receiving quotes"
msgstr "接收报价"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"Back to our _producer_ project.\n"
"Let's modify the `QuotesResource` to consume quotes from Kafka and send them back to the client via Server-Sent Events:"
msgstr "回到我们的 _生产者_ 项目。让我们修改 `QuotesResource` ，以便从 Kafka 中获取报价，并通过服务器发送事件（Server-Sent Events）将其发送回客户端："

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "使用 `@Channel` 修饰符注入 `quotes` 通道"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "表示内容是使用 `Server Sent Events` 发送的"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Returns the stream (_Reactive Stream_)"
msgstr "返回流 (_Reactive Stream_) 。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"No need to configure anything, as Quarkus will automatically associate the `quotes` channel to the `quotes` Kafka topic.\n"
"It will also generate a deserializer for the `Quote` class."
msgstr "无需任何配置，Quarkus 会自动将 `quotes` 频道与 `quotes` Kafka 主题相关联。它还会为 `Quote` 类生成一个反序列化器。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Message serialization in Kafka"
msgstr "Kafka 中的消息序列化"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"In this example we used Jackson to serialize/deserialize Kafka messages.\n"
"For more options on message serialization, see xref:kafka.adoc#kafka-serialization[Kafka Reference Guide - Serialization]."
msgstr "在本例中，我们使用 Jackson 对 Kafka 消息进行序列化/反序列化。有关消息序列化的更多选项，请参阅《 xref:kafka.adoc#kafka-serialization[Kafka 参考指南 - 序列化] 》。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"We strongly suggest adopting a contract-first approach using a schema registry.\n"
"To learn more about how to use Apache Kafka with the schema registry and Avro, follow the\n"
"xref:kafka-schema-registry-avro.adoc[Using Apache Kafka with Schema Registry and Avro] guide for Avro\n"
"or you can follow the xref:kafka-schema-registry-json-schema.adoc[Using Apache Kafka with Schema Registry and JSON Schema] guide.."
msgstr "我们强烈建议使用模式注册表采用合同优先的方法。要了解有关如何将 Apache Kafka xref:kafka-schema-registry-avro.adoc[与] 模式注册表和 Avro 结合使用的更多信息，请参阅《将 xref:kafka-schema-registry-avro.adoc[Apache Kafka 与模式注册表和 Avro 结合使用》（Using Apache Kafka with Schema Registry and Avro] guide for Avro）或《将 xref:kafka-schema-registry-json-schema.adoc[Apache Kafka 与模式注册表和 JSON Schema 结合使用》（Using Apache Kafka with Schema Registry and JSON Schema] guide）。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "The HTML page"
msgstr "HTML页面"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Final touch, the HTML page requesting quotes and displaying the prices obtained over SSE."
msgstr "最后，HTML 页面要求报价并显示通过上交所获得的价格。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Inside the _producer_ project, create the `src/main/resources/META-INF/resources/quotes.html` file with the following content:"
msgstr "在 _制作人_ 项目中，创建 `src/main/resources/META-INF/resources/quotes.html` 文件，内容如下："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"Nothing spectacular here.\n"
"When the user clicks the button, HTTP request is made to request a quote, and a pending quote is added to the list.\n"
"On each quote received over SSE, the corresponding item in the list is updated."
msgstr "没有什么特别之处。当用户点击按钮时，就会发出 HTTP 请求，要求报价，并将待定报价添加到列表中。通过 SSE 收到的每个报价都会更新列表中的相应项目。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Get it running"
msgstr "运行"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"You just need to run both applications.\n"
"In one terminal, run:"
msgstr "您只需运行这两个应用程序。在一个终端中，运行"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "In another terminal, run:"
msgstr "在另外一个终端中，运行:"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"Quarkus starts a Kafka broker automatically, configures the application and shares the Kafka broker instance between different applications.\n"
"See xref:kafka-dev-services.adoc[Dev Services for Kafka] for more details."
msgstr "Quarkus 会自动启动 Kafka 代理，配置应用程序，并在不同应用程序之间共享 Kafka 代理实例。更多详情，请参阅 \" xref:kafka-dev-services.adoc[Kafka 的开发服务] \"。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "在你的浏览器中打开 `http://localhost:8080/quotes.html` ，点击按钮来请求一些报价。"

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Running in JVM or Native mode"
msgstr "在JVM或本地模式下运行"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"When not running in dev or test mode, you will need to start your Kafka broker.\n"
"You can follow the instructions from the https://kafka.apache.org/quickstart[Apache Kafka website] or create a `docker-compose.yaml` file with the following content:"
msgstr "不在开发或测试模式下运行时，需要启动 Kafka 代理。你可以按照 link:https://kafka.apache.org/quickstart[Apache Kafka 网站] 上的说明进行操作，或者创建一个包含以下内容的 `docker-compose.yaml` 文件："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Make sure you first build both applications in JVM mode with:"
msgstr "确保首先在 JVM 模式下用"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Once packaged, run `docker-compose up`."
msgstr "打包后，运行 `docker-compose up` 。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "This is a development cluster, do not use in production."
msgstr "这是一个开发集群，请勿用于生产。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"You can also build and run our applications as native executables.\n"
"First, compile both applications as native:"
msgstr "您也可以将我们的应用程序作为本地可执行文件编译和运行。首先，将两个应用程序都编译为本地程序："

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "Run the system with:"
msgstr "运行系统："

#: _versions/main/guides/kafka-getting-started.adoc
msgid "Going further"
msgstr "进一步探索"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"This guide has shown how you can interact with Kafka using Quarkus.\n"
"It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr "本指南介绍了如何使用 Quarkus 与 Kafka 交互。它利用 link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] 构建数据流应用程序。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid "For the exhaustive list of features and configuration options, check the xref:kafka.adoc[Reference guide for Apache Kafka Extension]."
msgstr "有关功能和配置选项的详尽列表，请查阅 xref:kafka.adoc[Apache Kafka Extension 参考指南] 。"

#: _versions/main/guides/kafka-getting-started.adoc
#, fuzzy
msgid ""
"In this guide we explore how we can interact with Apache Kafka using the Quarkus Messaging extensions.\n"
"Quarkus extension for Kafka also allows\n"
"xref:kafka.adoc#kafka-bare-clients[using Kafka clients directly]."
msgstr "在本指南中，我们将探讨如何使用 Quarkus 消息传递扩展与 Apache Kafka 进行交互。Quarkus Kafka 扩展还允许 xref:kafka.adoc#kafka-bare-clients[直接使用 Kafka 客户端] 。"
