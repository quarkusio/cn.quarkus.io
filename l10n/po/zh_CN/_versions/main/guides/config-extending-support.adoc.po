# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/config-extending-support.adoc:6
#, no-wrap
msgid "Extending Configuration Support"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-extending-support.adoc:16
#, no-wrap
msgid "Custom `ConfigSource`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:20
msgid "It's possible to create a custom `ConfigSource` as specified in link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:23
msgid "With a Custom `ConfigSource` it is possible to read additional configuration values and add them to the `Config` instance in a defined ordinal. This allows overriding values from other sources or falling back to other values."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/config-extending-support.adoc:24
#, no-wrap
msgid "config-sources.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:31
msgid "A custom `ConfigSource` requires an implementation of `org.eclipse.microprofile.config.spi.ConfigSource` or `org.eclipse.microprofile.config.spi.ConfigSourceProvider`. Each implementation requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism, either in `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource` or `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSourceProvider` files."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-extending-support.adoc:32
#: upstream/_versions/main/guides/config-extending-support.adoc:131
#: upstream/_versions/main/guides/config-extending-support.adoc:181
#: upstream/_versions/main/guides/config-extending-support.adoc:365
#, no-wrap
msgid "Example"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:35
msgid "Consider a simple in-memory `ConfigSource`:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-extending-support.adoc:36
#: upstream/_versions/main/guides/config-extending-support.adoc:135
#, no-wrap
msgid "org.acme.config.InMemoryConfigSource"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:40
#: upstream/_versions/main/guides/config-extending-support.adoc:139
#: upstream/_versions/main/guides/config-extending-support.adoc:189
#: upstream/_versions/main/guides/config-extending-support.adoc:257
#: upstream/_versions/main/guides/config-extending-support.adoc:277
#: upstream/_versions/main/guides/config-extending-support.adoc:309
#: upstream/_versions/main/guides/config-extending-support.adoc:371
#, no-wrap
msgid "package org.acme.config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:42
#: upstream/_versions/main/guides/config-extending-support.adoc:194
#, no-wrap
msgid "import org.eclipse.microprofile.config.spi.ConfigSource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:46
#, no-wrap
msgid ""
"import java.util.HashMap;\n"
"import java.util.Map;\n"
"import java.util.Set;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:49
#, no-wrap
msgid ""
"public class InMemoryConfigSource implements ConfigSource {\n"
"    private static final Map<String, String> configuration = new HashMap<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:53
#, no-wrap
msgid ""
"    static {\n"
"        configuration.put(\"my.prop\", \"1234\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:58
#, no-wrap
msgid ""
"    @Override\n"
"    public int getOrdinal() {\n"
"        return 275;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:63
#, no-wrap
msgid ""
"    @Override\n"
"    public Set<String> getPropertyNames() {\n"
"        return configuration.keySet();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:68
#, no-wrap
msgid ""
"    @Override\n"
"    public String getValue(final String propertyName) {\n"
"        return configuration.get(propertyName);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:74
#, no-wrap
msgid ""
"    @Override\n"
"    public String getName() {\n"
"        return InMemoryConfigSource.class.getSimpleName();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:77
#: upstream/_versions/main/guides/config-extending-support.adoc:150
#: upstream/_versions/main/guides/config-extending-support.adoc:223
#: upstream/_versions/main/guides/config-extending-support.adoc:395
msgid "And registration in:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-extending-support.adoc:78
#: upstream/_versions/main/guides/config-extending-support.adoc:151
#, no-wrap
msgid "META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:82
#: upstream/_versions/main/guides/config-extending-support.adoc:155
#, no-wrap
msgid "org.acme.config.InMemoryConfigSource\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:86
msgid "The `InMemoryConfigSource` will be ordered between the `.env` source, and the `application.properties` source due to the `275` ordinal:"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:89
#, no-wrap
msgid "ConfigSource"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:91
#, no-wrap
msgid "Ordinal"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:92
#, no-wrap
msgid "System Properties"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:94
#, no-wrap
msgid "400"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:95
#, no-wrap
msgid "Environment Variables from System"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:97
#, no-wrap
msgid "300"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:98
#, no-wrap
msgid "Environment Variables from `.env` file"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:100
#, no-wrap
msgid "295"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:101
#, no-wrap
msgid "InMemoryConfigSource"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:103
#, no-wrap
msgid "275"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:104
#, no-wrap
msgid "`application.properties` from `/config`"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:106
#, no-wrap
msgid "260"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:107
#, no-wrap
msgid "`application.properties` from application"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:109
#, no-wrap
msgid "250"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:110
#, no-wrap
msgid "`microprofile-config.properties` from application"
msgstr ""

#. type: Table
#: upstream/_versions/main/guides/config-extending-support.adoc:111
#, no-wrap
msgid "100"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:117
msgid "In this case, `my.prop` from `InMemoryConfigSource` will only be used if the config engine is unable to find a value in xref:config-reference.adoc#system-properties[System Properties], xref:config-reference.adoc#environment-variables[Environment Variables from System] or xref:config-reference.adoc#env-file[Environment Variables from .env file] in this order."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-extending-support.adoc:118
#, no-wrap
msgid "ConfigSource Init"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:122
msgid "When a Quarkus application starts, a `ConfigSource` can be initialized twice. One time for _STATIC INIT_ and a second time for _RUNTIME INIT_:"
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/config-extending-support.adoc:123
#, no-wrap
msgid "STATIC INIT"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:130
msgid "Quarkus starts some of its services during static initialization, and `Config` is usually one of the first things that is created. In certain situations it may not be possible to add a custom `ConfigSource`. For instance, if the `ConfigSource` requires other services, like a database access, it will not be available at this stage, and cause a chicken-egg problem. For this reason, any custom `ConfigSource` requires the annotation `@io.quarkus.runtime.configuration.StaticInitSafe` to mark the source as safe to be used at this stage."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:134
#: upstream/_versions/main/guides/config-extending-support.adoc:184
msgid "Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:142
#, no-wrap
msgid ""
"import org.eclipse.microprofile.config.spi.ConfigSource;\n"
"import io.quarkus.runtime.annotations.StaticInitSafe;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:145
#, no-wrap
msgid ""
"@StaticInitSafe\n"
"public class InMemoryConfigSource implements ConfigSource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:147
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:158
msgid "The `InMemoryConfigSource` will be available during _STATIC INIT_."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:161
msgid "A custom `ConfigSource` is not automatically added during Quarkus _STATIC INIT_. It requires to be marked with the `@io.quarkus.runtime.configuration.StaticInitSafe` annotation."
msgstr ""

#. type: Title ====
#: upstream/_versions/main/guides/config-extending-support.adoc:162
#, no-wrap
msgid "RUNTIME INIT"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:166
msgid "The _RUNTIME INIT_ stage happens after _STATIC INIT_. In this stage a `ConfigSource` can be initialized again. There are no restrictions at this stage, and a custom source is added to the `Config` instance as expected."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-extending-support.adoc:168
#, no-wrap
msgid "`ConfigSourceFactory`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:176
msgid "Another way to create a `ConfigSource` is via the https://github.com/smallrye/smallrye-config[SmallRye Config] `io.smallrye.config.ConfigSourceFactory` API. The difference between the https://github.com/smallrye/smallrye-config[SmallRye Config] factory and the standard way to create a `ConfigSource` as specified in link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config], is the factory ability to provide a context with access to the available configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:180
msgid "Each implementation of `io.smallrye.config.ConfigSourceFactory` requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceFactory` file."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-extending-support.adoc:185
#, no-wrap
msgid "org.acme.config.URLConfigSourceFactory"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:192
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.OptionalInt;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:199
#, no-wrap
msgid ""
"import io.smallrye.config.ConfigSourceContext;\n"
"import io.smallrye.config.ConfigSourceFactory;\n"
"import io.smallrye.config.ConfigValue;\n"
"import io.smallrye.config.PropertiesConfigSource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:207
#, no-wrap
msgid ""
"public class URLConfigSourceFactory implements ConfigSourceFactory {\n"
"    @Override\n"
"    public Iterable<ConfigSource> getConfigSources(final ConfigSourceContext context) {\n"
"        final ConfigValue value = context.getValue(\"config.url\");\n"
"        if (value == null || value.getValue() == null) {\n"
"            return Collections.emptyList();\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:214
#, no-wrap
msgid ""
"        try {\n"
"            return Collections.singletonList(new PropertiesConfigSource(new URL(value.getValue())));\n"
"        } catch (IOException e) {\n"
"            throw new RuntimeException(e);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:220
#, no-wrap
msgid ""
"    @Override\n"
"    public OptionalInt getPriority() {\n"
"        return OptionalInt.of(290);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-extending-support.adoc:224
#, no-wrap
msgid "META-INF/services/io.smallrye.config.ConfigSourceFactory"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:228
#, no-wrap
msgid "org.acme.config.URLConfigSourceFactory\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:234
msgid "By implementing `io.smallrye.config.ConfigSourceFactory`, a list of `ConfigSource` may be provided via the `Iterable<ConfigSource> getConfigSources(ConfigSourceContext context)` method. The `ConfigSourceFactory` may also assign a priority by overriding the method `OptionalInt getPriority()`. The priority values is used to sort multiple `io.smallrye.config.ConfigSourceFactory` (if found)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:237
msgid "`io.smallrye.config.ConfigSourceFactory` priority does not affect the `ConfigSource` ordinal. These are sorted independently."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:243
msgid "When the Factory is initializing, the provided `ConfigSourceContext` may call the method `ConfigValue getValue(String name)`. This method looks up configuration names in all ``ConfigSource``s that were already initialized by the `Config` instance, including sources with lower ordinals than the ones defined in the `ConfigSourceFactory`. The `ConfigSource` list provided by a `ConfigSourceFactory` is not taken into consideration to configure other sources produced by a lower priority `ConfigSourceFactory`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-extending-support.adoc:245
#, no-wrap
msgid "Custom `Converter`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:249
msgid "It is possible to create a custom `Converter` type as specified by link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/converters.asciidoc#adding-custom-converters[MicroProfile Config]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:253
msgid "A custom `Converter` requires an implementation of `org.eclipse.microprofile.config.spi.Converter<T>`. Each implementation requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism in the `META-INF/services/org.eclipse.microprofile.config.spi.Converter` file. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:259
#, no-wrap
msgid "public class MicroProfileCustomValue {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:261
#, no-wrap
msgid "    private final int number;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:265
#, no-wrap
msgid ""
"    public MicroProfileCustomValue(int number) {\n"
"        this.number = number;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:270
#, no-wrap
msgid ""
"    public int getNumber() {\n"
"        return number;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:273
msgid "The corresponding converter will look similar to the one below."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:279
#, no-wrap
msgid "import org.eclipse.microprofile.config.spi.Converter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:281
#, no-wrap
msgid "public class MicroProfileCustomValueConverter implements Converter<MicroProfileCustomValue> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:287
#, no-wrap
msgid ""
"    @Override\n"
"    public MicroProfileCustomValue convert(String value) {\n"
"        return new MicroProfileCustomValue(Integer.parseInt(value));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:291
msgid "The custom converter class must be `public`, must have a `public` constructor with no arguments, and must not be `abstract`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:293
msgid "The custom configuration type converts the configuration value automatically:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:298
#, no-wrap
msgid ""
"@ConfigProperty(name = \"configuration.value.name\")\n"
"MicroProfileCustomValue value;\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-extending-support.adoc:300
#, no-wrap
msgid "Converter priority"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:305
msgid "The `javax.annotation.Priority` annotation overrides the `Converter` priority and change converters precedence to fine tune the execution order. By default, if no `@Priority` is specified by the `Converter`, the converter is registered with a priority of `100`. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:312
#, no-wrap
msgid ""
"import javax.annotation.Priority;\n"
"import org.eclipse.microprofile.config.spi.Converter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:315
#, no-wrap
msgid ""
"@Priority(150)\n"
"public class MyCustomConverter implements Converter<MicroProfileCustomValue> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:318
#, no-wrap
msgid ""
"    @Override\n"
"    public MicroProfileCustomValue convert(String value) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:325
#, no-wrap
msgid ""
"        final int secretNumber;\n"
"        if (value.startsFrom(\"OBF:\")) {\n"
"            secretNumber = Integer.parseInt(SecretDecoder.decode(value));\n"
"        } else {\n"
"            secretNumber = Integer.parseInt(value);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:329
#, no-wrap
msgid ""
"        return new MicroProfileCustomValue(secretNumber);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:333
msgid "Since it converts the same value type (`MicroProfileCustomValue`) and has a priority of `150`, it will be used instead of a `MicroProfileCustomValueConverter` which has a default priority of `100`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:336
msgid "All Quarkus core converters use the priority value of `200`. To override any Quarkus specific converter, the priority value should be higher than `200`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-extending-support.adoc:338
#, no-wrap
msgid "Config Interceptors"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:345
msgid "https://github.com/smallrye/smallrye-config[SmallRye Config] provides an interceptor chain that hooks into the configuration values resolution. This is useful to implement features like xref:config-reference.adoc#profiles[Profiles], xref:config-reference.adoc#property-expressions[Property Expressions], or just logging to find out where the config value was loaded from."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:349
msgid "An interceptor requires an implementation of `io.smallrye.config.ConfigSourceInterceptor`. Each implementation requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceInterceptor` file."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:355
msgid "The `io.smallrye.config.ConfigSourceInterceptor` is able to intercept the resolution of a configuration name with the method `ConfigValue getValue(ConfigSourceInterceptorContext context, String name)`. The `ConfigSourceInterceptorContext` is used to proceed with the interceptor chain. The chain can be short-circuited by returning an instance of `io.smallrye.config.ConfigValue`. The `ConfigValue` objects hold information about the key name, value, config source origin and ordinal."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:357
msgid "The interceptor chain is applied before any conversion is performed on the configuration value."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:361
msgid "Interceptors may also be created with an implementation of `io.smallrye.config.ConfigSourceInterceptorFactory`. Each implementation requires registration via the https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceInterceptorFactory` file."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:364
msgid "The `ConfigSourceInterceptorFactory` may initialize an interceptor with access to the current chain (so it can be used to configure the interceptor and retrieve configuration values) and set the priority."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-extending-support.adoc:367
#, no-wrap
msgid "org.acme.config.LoggingConfigSourceInterceptor"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:373
#, no-wrap
msgid "import javax.annotation.Priority;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:376
#, no-wrap
msgid ""
"import io.smallrye.config.ConfigSourceInterceptor;\n"
"import io.smallrye.config.ConfigLogging;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:380
#, no-wrap
msgid ""
"@Priority(Priorities.LIBRARY + 200)\n"
"public class LoggingConfigSourceInterceptor implements ConfigSourceInterceptor {\n"
"    private static final long serialVersionUID = 367246512037404779L;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:392
#, no-wrap
msgid ""
"    @Override\n"
"    public ConfigValue getValue(final ConfigSourceInterceptorContext context, final String name) {\n"
"        ConfigValue configValue = doLocked(() -> context.proceed(name));\n"
"        if (configValue != null) {\n"
"            ConfigLogging.log.lookup(configValue.getName(), configValue.getLocation(), configValue.getValue());\n"
"        } else {\n"
"            ConfigLogging.log.notFound(name);\n"
"        }\n"
"        return configValue;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-extending-support.adoc:396
#, no-wrap
msgid "META-INF/services/io.smallrye.config.ConfigSourceInterceptor"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-extending-support.adoc:400
#, no-wrap
msgid "org.acme.config.LoggingConfigSourceInterceptor\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-extending-support.adoc:403
msgid "The `LoggingConfigSourceInterceptor` logs looks up configuration names in the provided logging platform. The log information includes config name and value, the config source origin and location if exists."
msgstr ""
