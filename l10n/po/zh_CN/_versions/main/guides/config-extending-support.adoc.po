# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-10 13:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/config-extending-support.adoc
#, no-wrap
msgid "Extending Configuration Support"
msgstr "扩展配置支持"

#. type: Title ==
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "Custom `ConfigSource`"
msgstr "定制 `ConfigSource` "

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"It's possible to create a custom `ConfigSource` as specified in\n"
"link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config]."
msgstr "可以按照 link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config] 中的指定创建自定义 `ConfigSource` 。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"With a Custom `ConfigSource` it is possible to read additional configuration values and add them to the `Config`\n"
"instance in a defined ordinal. This allows overriding values from other sources or falling back to other values."
msgstr "通过自定义 `ConfigSource` ，可以读取额外的配置值，并将其按定义的顺序添加到 `Config` 实例中。这样就可以覆盖其他来源的值或回退到其他值。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"A custom `ConfigSource` requires an implementation of `org.eclipse.microprofile.config.spi.ConfigSource` or\n"
"`org.eclipse.microprofile.config.spi.ConfigSourceProvider`. Each implementation requires registration via\n"
"the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] mechanism, either in\n"
"`META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource` or\n"
"`META-INF/services/org.eclipse.microprofile.config.spi.ConfigSourceProvider` files."
msgstr "自定义 `ConfigSource` 需要 `org.eclipse.microprofile.config.spi.ConfigSource` 或 `org.eclipse.microprofile.config.spi.ConfigSourceProvider` 的实现。每种实现都需要通过 link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[服务加载] 器机制（在 `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource` 或 `META-INF/services/org.eclipse.microprofile.config.spi.ConfigSourceProvider` 文件中）进行注册。"

#. type: Title ===
#: _versions/main/guides/config-extending-support.adoc
#, no-wrap
msgid "Example"
msgstr "例子"

#. type: Plain text
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid "Consider a simple in-memory `ConfigSource`:"
msgstr "考虑一个简单的内存中 `ConfigSource` 。"

#. type: Block title
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "org.acme.config.InMemoryConfigSource"
msgstr "org.acme.config.InMemoryConfigSource"

#. type: Plain text
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid "And registration in:"
msgstr "并登记在册。"

#. type: Block title
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource"
msgstr "META-INF/services/org.eclipse.microprofile.config.spi.ConfigSource"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"The `InMemoryConfigSource` will be ordered between the `.env` source, and the `application.properties` source due to\n"
"the `275` ordinal:"
msgstr "由于 `275` 的序号， `InMemoryConfigSource` 将在 `.env` 源和 `application.properties` 源之间排序："

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "ConfigSource"
msgstr "配置源"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "Ordinal"
msgstr "顺序"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "System Properties"
msgstr "系统属性"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "400"
msgstr "400"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "Environment Variables from System"
msgstr "来自系统的环境变量"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "300"
msgstr "300"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "Environment Variables from `.env` file"
msgstr "来自 `.env` 文件的环境变量"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "295"
msgstr "295"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "InMemoryConfigSource"
msgstr "记忆中的配置源(InMemoryConfigSource)"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "275"
msgstr "275"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "`application.properties` from `/config`"
msgstr " `application.properties` 从 `/config` "

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "260"
msgstr "260"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "`application.properties` from application"
msgstr " `application.properties` 来自应用的"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "250"
msgstr "250"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "`microprofile-config.properties` from application"
msgstr " `microprofile-config.properties` 来自应用的"

#. type: Table
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "100"
msgstr "100"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"In this case, `my.prop` from `InMemoryConfigSource` will only be used if the config engine is unable to find a value\n"
"in xref:config-reference.adoc#system-properties[System Properties],\n"
"xref:config-reference.adoc#environment-variables[Environment Variables from System] or\n"
"xref:config-reference.adoc#env-file[Environment Variables from .env file] in this order."
msgstr "在这种情况下，只有当配置引擎无法在 \"系统 xref:config-reference.adoc#system-properties[属性] \"、\" xref:config-reference.adoc#environment-variables[系统环境变量] \"或\" xref:config-reference.adoc#env-file[.env 文件] 环境变量 \"中找到相应值时，才会使用 `my.prop` from `InMemoryConfigSource` 。"

#. type: Title ===
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "ConfigSource Init"
msgstr "配置源启动"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"When a Quarkus application starts, a `ConfigSource` can be initialized twice. One time for _STATIC INIT_ and a second\n"
"time for _RUNTIME INIT_:"
msgstr "当 Quarkus 应用程序启动时，可以对 `ConfigSource` 进行两次初始化。一次是 _静态_ 初始化，第二次是 _运行时_ 初始化："

#. type: Title ====
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "STATIC INIT"
msgstr "静态 INIT"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"Quarkus starts some of its services during static initialization, and `Config` is usually one of the first things that\n"
"is created. In certain situations it may not be possible to add a custom `ConfigSource`. For instance, if the\n"
"`ConfigSource` requires other services, like a database access, it will not be available at this stage, and cause a\n"
"chicken-egg problem. For this reason, any custom `ConfigSource` requires the annotation\n"
"`@io.quarkus.runtime.configuration.StaticInitSafe` to mark the source as safe to be used at this stage."
msgstr "Quarkus 在静态初始化过程中会启动一些服务，而 `Config` 通常是最先创建的服务之一。在某些情况下，可能无法添加自定义 `ConfigSource` 。例如，如果 `ConfigSource` 需要其他服务（如数据库访问），那么在此阶段它将不可用，从而导致鸡生蛋、蛋生鸡的问题。因此，任何自定义 `ConfigSource` 都需要注释 `@io.quarkus.runtime.configuration.StaticInitSafe` 来标记源在此阶段可以安全使用。"

#. type: Plain text
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid "Consider:"
msgstr "考虑一下。"

#. type: Plain text
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid "The `InMemoryConfigSource` will be available during _STATIC INIT_."
msgstr " `InMemoryConfigSource` ，在 _STATIC INIT_ 期间就可以使用。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"A custom `ConfigSource` is not automatically added during Quarkus _STATIC INIT_. It requires to be marked with\n"
"the `@io.quarkus.runtime.configuration.StaticInitSafe` annotation."
msgstr "Quarkus _STATIC INIT_ 不会自动添加自定义 `ConfigSource` 。它需要用 `@io.quarkus.runtime.configuration.StaticInitSafe` 注释来标记。"

#. type: Title ====
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "RUNTIME INIT"
msgstr "运行时间INIT"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"The _RUNTIME INIT_ stage happens after _STATIC INIT_. In this stage a `ConfigSource` can be initialized again. There\n"
"are no restrictions at this stage, and a custom source is added to the `Config` instance as expected."
msgstr "_运行时初始化（RUNTIME INIT_ ）阶段发生在 _静态初始化（STATIC INIT_ ）之后。在此阶段， `ConfigSource` 可以再次初始化。在此阶段没有任何限制，自定义源会如期添加到 `Config` 实例中。"

#. type: Title ==
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "`ConfigSourceFactory`"
msgstr " `ConfigSourceFactory` "

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"Another way to create a `ConfigSource` is via the https://github.com/smallrye/smallrye-config[SmallRye Config]\n"
"`io.smallrye.config.ConfigSourceFactory` API. The difference between the\n"
"https://github.com/smallrye/smallrye-config[SmallRye Config] factory and the standard way to create a `ConfigSource` as\n"
"specified in\n"
"link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Config],\n"
"is the factory ability to provide a context with access to the available configuration."
msgstr "创建 `ConfigSource` 的另一种方法是通过 link:https://github.com/smallrye/smallrye-config[SmallRye Config] `io.smallrye.config.ConfigSourceFactory` API。 link:https://github.com/smallrye/smallrye-config[SmallRye Config] 工厂与 link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#custom-configsources-via-configsourceprovider[MicroProfile Conf] ig 中指定的创建 `ConfigSource` 的标准方法之间的区别在于，工厂能够提供访问可用配置的上下文。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"Each implementation of `io.smallrye.config.ConfigSourceFactory` requires registration via\n"
"the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader]\n"
"mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceFactory` file."
msgstr "`io.smallrye.config.ConfigSourceFactory` 的每个实现都需要通过 `META-INF/services/io.smallrye.config.ConfigSourceFactory` 文件中的 link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] 机制进行注册。"

#. type: Block title
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "org.acme.config.URLConfigSourceFactory"
msgstr "org.acme.config.URLConfigSourceFactory"

#. type: Block title
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "META-INF/services/io.smallrye.config.ConfigSourceFactory"
msgstr "META-INF/services/io.smallrye.config.ConfigSourceFactory"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"By implementing `io.smallrye.config.ConfigSourceFactory`, a list of `ConfigSource` may be provided via the\n"
"`Iterable<ConfigSource> getConfigSources(ConfigSourceContext context)` method. The `ConfigSourceFactory` may also\n"
"assign a priority by overriding the method `OptionalInt getPriority()`. The priority values is used to sort\n"
"multiple `io.smallrye.config.ConfigSourceFactory` (if found)."
msgstr "通过实施 `io.smallrye.config.ConfigSourceFactory` ，可通过 `Iterable<ConfigSource> getConfigSources(ConfigSourceContext context)` 方法提供 `ConfigSource` 列表。 `ConfigSourceFactory` 也可以通过覆盖 `OptionalInt getPriority()` 方法来分配优先级。优先级值用于对多个 `io.smallrye.config.ConfigSourceFactory` 进行排序（如有）。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"`io.smallrye.config.ConfigSourceFactory` priority does not affect the `ConfigSource` ordinal. These are\n"
"sorted independently."
msgstr "`io.smallrye.config.ConfigSourceFactory` 优先级不会影响 排序。它们是独立排序的。 `ConfigSource`"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"When the Factory is initializing, the provided `ConfigSourceContext` may call the method\n"
"`ConfigValue getValue(String name)`. This method looks up configuration names in all ``ConfigSource``s that were already\n"
"initialized by the `Config` instance, including sources with lower ordinals than the ones defined in the\n"
"`ConfigSourceFactory`. The `ConfigSource` list provided by a `ConfigSourceFactory` is not taken into consideration to\n"
"configure other sources produced by a lower priority `ConfigSourceFactory`."
msgstr "工厂初始化时，所提供的 `ConfigSourceContext` 可能会调用 `ConfigValue getValue(String name)` 方法。该方法会查找 `Config` 实例已初始化的所有 `ConfigSource` 中的配置名称，包括序号比 `ConfigSourceFactory` 中定义的序号低的源。在配置优先级较低的 `ConfigSourceFactory` 产生的其他源时，不会考虑 `ConfigSourceFactory` 提供的 `ConfigSource` 列表。"

#. type: Title ==
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "Custom `Converter`"
msgstr "定制 `Converter` "

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"It is possible to create a custom `Converter` type as specified by\n"
"link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/converters.asciidoc#adding-custom-converters[MicroProfile Config]."
msgstr "可以根据 link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/converters.asciidoc#adding-custom-converters[MicroProfile Config] 的指定创建自定义 `Converter` 类型。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"A custom `Converter` requires an implementation of `org.eclipse.microprofile.config.spi.Converter<T>`. Each implementation\n"
"requires registration via the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader]\n"
"mechanism in the `META-INF/services/org.eclipse.microprofile.config.spi.Converter` file. Consider:"
msgstr "自定义 `Converter` 需要 `org.eclipse.microprofile.config.spi.Converter<T>` 的实现。每个实现都需要通过 `META-INF/services/org.eclipse.microprofile.config.spi.Converter` 文件中的 link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] 机制进行注册。考虑一下："

#. type: Plain text
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid "The corresponding converter will look similar to the one below."
msgstr "相应的转换器将看起来与下面类似。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"The custom converter class must be `public`, must have a `public` constructor with no arguments, and must not be\n"
"`abstract`."
msgstr "自定义转换器类必须是 `public` ，必须有一个不带参数的 `public` 构造函数，并且必须不是 `abstract` 。"

#. type: Plain text
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid "The custom configuration type converts the configuration value automatically:"
msgstr "自定义配置类型会自动转换配置值。"

#. type: Title ===
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "Converter priority"
msgstr "转换器优先"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"The `jakarta.annotation.Priority` annotation overrides the `Converter` priority and change converters precedence to fine\n"
"tune the execution order. By default, if no `@Priority` is specified by the `Converter`, the converter is registered\n"
"with a priority of `100`. Consider:"
msgstr "`jakarta.annotation.Priority` 注解会覆盖 `Converter` 优先级，并改变转换器的优先级，以微调执行顺序。默认情况下，如果 `Converter` 没有指定 `@Priority` ，转换器的注册优先级为 `100` ："

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"Since it converts the same value type (`MicroProfileCustomValue`) and has a priority of `150`, it will be used\n"
"instead of a `MicroProfileCustomValueConverter` which has a default priority of `100`."
msgstr "由于它转换了相同的值类型 ( `MicroProfileCustomValue` ) 并具有 `150` 的优先级，因此将使用它来代替 `MicroProfileCustomValueConverter` ，后者的默认优先级为 `100` 。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"All Quarkus core converters use the priority value of `200`. To override any Quarkus specific converter, the\n"
"priority value should be higher than `200`."
msgstr "所有 Quarkus 核心转换器的优先级值均为 `200` 。要覆盖任何 Quarkus 特定转换器，优先级值应高于 `200` 。"

#. type: Title ==
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "Config Interceptors"
msgstr "配置拦截器"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"https://github.com/smallrye/smallrye-config[SmallRye Config] provides an interceptor chain that hooks into the\n"
"configuration values resolution. This is useful to implement features like\n"
"xref:config-reference.adoc#profiles[Profiles],\n"
"xref:config-reference.adoc#property-expressions[Property Expressions],\n"
"or just logging to find out where the config value was loaded from."
msgstr "link:https://github.com/smallrye/smallrye-config[SmallRye Config] 提供了一个拦截器链，可以钩住配置值的解析。这对实现 xref:config-reference.adoc#profiles[配置文件] 、 xref:config-reference.adoc#property-expressions[属性表达式] 等功能非常有用，或者只是记录一下配置值是从哪里加载的。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"An interceptor requires an implementation of `io.smallrye.config.ConfigSourceInterceptor`. Each implementation\n"
"requires registration via the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader]\n"
"mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceInterceptor` file."
msgstr "拦截器需要 `io.smallrye.config.ConfigSourceInterceptor` 的实现。每个实现都需要通过 `META-INF/services/io.smallrye.config.ConfigSourceInterceptor` 文件中的 link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] 机制进行注册。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"The `io.smallrye.config.ConfigSourceInterceptor` is able to intercept the resolution of a configuration name with the\n"
"method `ConfigValue getValue(ConfigSourceInterceptorContext context, String name)`. The `ConfigSourceInterceptorContext`\n"
"is used to proceed with the interceptor chain. The chain can be short-circuited by returning an instance of\n"
"`io.smallrye.config.ConfigValue`. The `ConfigValue` objects hold information about the key name, value, config source\n"
"origin and ordinal."
msgstr "`io.smallrye.config.ConfigSourceInterceptor` 可通过 `ConfigValue getValue(ConfigSourceInterceptorContext context, String name)` 方法拦截配置名称的解析。 `ConfigSourceInterceptorContext` 用于继续执行拦截器链。通过返回 `io.smallrye.config.ConfigValue` 的实例，可使拦截链短路。 `ConfigValue` 对象包含有关键名、值、配置源起源和序号的信息。"

#. type: Plain text
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid "The interceptor chain is applied before any conversion is performed on the configuration value."
msgstr "在对配置值进行任何转换之前，拦截器链被应用。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"Interceptors may also be created with an implementation of `io.smallrye.config.ConfigSourceInterceptorFactory`. Each\n"
"implementation requires registration via the https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader]\n"
"mechanism in the `META-INF/services/io.smallrye.config.ConfigSourceInterceptorFactory` file."
msgstr "拦截器也可以通过 `io.smallrye.config.ConfigSourceInterceptorFactory` 的实现来创建。每个实现都需要通过 `META-INF/services/io.smallrye.config.ConfigSourceInterceptorFactory` 文件中的 link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/util/ServiceLoader.html[ServiceLoader] 机制进行注册。"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"The `ConfigSourceInterceptorFactory` may initialize an interceptor with access to the current chain\n"
"(so it can be used to configure the interceptor and retrieve configuration values) and set the priority."
msgstr "`ConfigSourceInterceptorFactory` 可初始化拦截器，使其能访问当前链（以便用于配置拦截器和检索配置值）并设置优先级。"

#. type: Block title
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "org.acme.config.LoggingConfigSourceInterceptor"
msgstr "org.acme.config.LoggingConfigSourceInterceptor"

#. type: Block title
#: _versions/main/guides/config-extending-support.adoc
#, fuzzy, no-wrap
msgid "META-INF/services/io.smallrye.config.ConfigSourceInterceptor"
msgstr "META-INF/services/io.smallrye.config.ConfigSourceInterceptor"

#: _versions/main/guides/config-extending-support.adoc
#, fuzzy
msgid ""
"The `LoggingConfigSourceInterceptor` logs looks up configuration names in the provided logging platform. The log\n"
"information includes config name and value, the config source origin and location if exists."
msgstr "`LoggingConfigSourceInterceptor` 日志会在提供的日志平台中查找配置名称。日志信息包括配置名称和值、配置源来源和位置（如果存在）。"
