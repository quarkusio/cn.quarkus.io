# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-10 13:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "Command Mode Applications"
msgstr "命令模式的应用"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "This reference covers how to write applications that run and then exit."
msgstr "本参考书涵盖了如何编写运行后退出的应用程序。"

#. type: Title ==
#: _versions/main/guides/command-mode-reference.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/main/guides/command-mode-reference.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "The solution is located in the `getting-started-command-mode` link:{quickstarts-tree-url}/getting-started-command-mode[directory]."
msgstr "该解决方案位于 `getting-started-command-mode` {quickstarts-tree-url}/getting-started-command-mode[目录]中。"

#. type: Title ==
#: _versions/main/guides/command-mode-reference.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "First, we need to create a new Quarkus project with the following command:"
msgstr "首先，我们需要用以下命令创建一个新的Quarkus项目。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"The suggested project creation command lines disable the codestarts to avoid including a REST server. Similarly, if you use code.quarkus.io to generate a\n"
"project, you need to go to *MORE OPTIONS -> Starter Code* and select *No* to avoid adding the RESTEasy Reactive extension."
msgstr "建议的项目创建命令行禁用了 codestarts，以避免包含 REST 服务器。同样，如果使用 code.quarkus.io 生成项目，则需要进入 \" *更多选项\" → \"启动代码* \"并选择 \" *否* \"，以避免添加 RESTEasy Reactive 扩展。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "The RESTEasy Reactive extension is added automatically only if you ask for codestarts and you didn't specify any extensions."
msgstr "只有当你要求提供codestarts并且没有指定任何扩展时，才会自动添加RESTEasy Reactive扩展。"

#. type: Title ==
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "Writing Command Mode Applications"
msgstr "编写命令模式的应用程序"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"There are two different approaches that can be used to implement applications\n"
"that exit."
msgstr "有两种不同的方法可以用来实现退出应用程序。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "Implement `QuarkusApplication` and have Quarkus run this method automatically"
msgstr "实施 `QuarkusApplication` ，让Quarkus自动运行这个方法"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus"
msgstr "实现 `QuarkusApplication` 和一个Java主方法，并使用Java主方法来启动Quarkus"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"In this document the `QuarkusApplication` instance is referred to as the application main,\n"
"and a class with a Java main method is the Java main."
msgstr "在本文中， `QuarkusApplication` 实例被称为应用程序 main，而带有 Java main 方法的类则被称为 Java main。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "The simplest possible command mode application with access to Quarkus APIs might appear as follows:"
msgstr "访问Quarkus API的最简单的命令模式应用可能如下。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "The `@QuarkusMain` annotation tells Quarkus that this is the main entry point."
msgstr "`@QuarkusMain` 注释告诉 Quarkus 这是主要入口点。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "The `run` method is invoked once Quarkus starts, and the application stops when it finishes."
msgstr "一旦 Quarkus 启动，就会调用 `run` 方法，应用程序结束时就会停止。"

#. type: Title ===
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "Contexts"
msgstr "背景"

#. type: Block title
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "Got a `ContextNotActiveException`?"
msgstr "有一个 `ContextNotActiveException` ？"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"A command mode application (like a CLI) is a bit different from say an HTTP service, there is a single call from the command line.\n"
"So the notion of _request_ let alone multiple requests does not exist per se.\n"
"Therefore, request scope is not the default."
msgstr "命令模式应用程序（如 CLI）与 HTTP 服务有些不同，它只需从命令行进行一次调用。因此， _请求的_ 概念本身并不存在，更不用说多个请求了。因此，请求范围不是默认的。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"To get access to your application beans and services, be aware that a `@QuarkusMain` instance is an application scoped bean by default.\n"
"It has access to singletons, application and dependent scoped beans."
msgstr "要访问应用程序 Bean 和服务，请注意 `@QuarkusMain` 实例默认是应用程序作用域 Bean。它可以访问单子、应用程序和从属作用域 Bean。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"If you want to interact with beans that requires a request scope, simply add the `@ActivateRequestContext` annotation on your `run()` method.\n"
"This let `run()` have access to methods like `listAll()` and `query*` methods on a Panache Entity.\n"
"Without it, you will eventually get a `ContextNotActiveException` when accessing such classes/beans."
msgstr "如果您想与需要请求作用域的 Bean 交互，只需在 `run()` 方法上添加 `@ActivateRequestContext` 注解即可。这样， `run()` 就可以访问 Panache 实体上的 `listAll()` 和 `query*` 方法。如果没有这个注解，在访问此类类/Bean 时最终会得到 `ContextNotActiveException` 。"

#. type: Title ===
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "Main method"
msgstr "主要方法"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "If we want to use a Java main to run the application main it would look like:"
msgstr "如果我们想用一个Java main来运行应用程序的main，它看起来就像。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"This is effectively the same as running the `HelloWorldMain` application main directly, but has the advantage it can\n"
"be run from the IDE."
msgstr "这实际上与直接运行 `HelloWorldMain` 应用程序主程序相同，但其优点是可以在集成开发环境中运行。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "If a class that implements `QuarkusApplication` and has a Java main then the Java main will be run."
msgstr "如果一个实现了 `QuarkusApplication` ，并且有一个Java main的类，那么Java main将被运行。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"It is recommended that a Java main perform very little logic, and just\n"
"launch the application main. In development mode the Java main will run in a\n"
"different ClassLoader to the main application, so may not behave as you would\n"
"expect."
msgstr "建议 Java 主程序只执行很少的逻辑，只启动应用程序主程序。在开发模式下，Java main 将在与主程序不同的 ClassLoader 中运行，因此其行为可能与您预期的不同。"

#. type: Title ====
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "Multiple Main Methods"
msgstr "多种主要方法"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"It is possible to have multiple main methods in an application, and select between them at build time.\n"
"The `@QuarkusMain` annotation takes an optional 'name' parameter, and this can be used to select the\n"
"main to run using the `quarkus.package.main-class` build time configuration option. If you don't want\n"
"to use annotations this can also be used to specify the fully qualified name of a main class."
msgstr "在一个应用程序中可以有多个主方法，并在构建时在它们之间进行选择。 `@QuarkusMain` 注解包含一个可选的 \"name \"参数，可用于使用 `quarkus.package.main-class` 构建时配置选项选择要运行的主方法。如果不想使用注解，也可以用它来指定主类的全称。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"By default, the `@QuarkusMain` with no name (i.e. the empty string) will be used, and if it is not present\n"
"and `quarkus.package.main-class` is not specified then Quarkus will automatically generate a main class\n"
"that just runs the application."
msgstr "默认情况下，将使用无名的 `@QuarkusMain` （即空字符串），如果不存在且未指定 `quarkus.package.main-class` ，Quarkus 将自动生成一个只运行应用程序的主类。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"The `name` of `@QuarkusMain` must be unique (including the default of the empty string). If you\n"
"have multiple `@QuarkusMain` annotations in your application the build will fail if the names are not\n"
"unique."
msgstr "`@QuarkusMain` 的 `name` 必须是唯一的（包括默认的空字符串）。如果应用程序中有多个 `@QuarkusMain` 注释，如果名称不唯一，构建将失败。"

#. type: Title ===
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "The command mode lifecycle"
msgstr "命令模式的生命周期"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "When running a command mode application the basic lifecycle is as follows:"
msgstr "当运行一个命令模式的应用程序时，其基本生命周期如下。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "Start Quarkus"
msgstr "启动Quarkus"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "Run the `QuarkusApplication` main method"
msgstr "运行 `QuarkusApplication` 主方法"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "Shut down Quarkus and exit the JVM after the main method returns"
msgstr "在main方法返回后关闭Quarkus并退出JVM。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"Shutdown is always initiated by the application main thread returning. If you want to run some logic on startup,\n"
"and then run like a normal application (i.e. not exit) then you should call `Quarkus.waitForExit` from the main\n"
"thread (A non-command mode application is essentially just running an application that just calls `waitForExit`)."
msgstr "关闭总是由应用程序主线程返回启动。如果想在启动时运行一些逻辑，然后像正常应用程序一样运行（即不退出），则应从主线程调用 `Quarkus.waitForExit` （非命令模式应用程序本质上就是运行一个只调用 `waitForExit` 的应用程序）。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"If you want to shut down a running application and you are not in the main thread, then you should call `Quarkus.asyncExit`\n"
"in order to unblock the main thread and initiate the shutdown process."
msgstr "如果要关闭正在运行的应用程序，而自己又不在主线程中，则应调用 `Quarkus.asyncExit` ，以解除对主线程的阻塞并启动关闭进程。"

#. type: Title ===
#: _versions/main/guides/command-mode-reference.adoc
#, no-wrap
msgid "Development Mode"
msgstr "开发模式"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"Also, for command mode applications, the dev mode is supported.\n"
"When you start your application in dev mode, the command mode application is executed:"
msgstr "此外，对于命令模式应用程序，还支持开发模式。在开发模式下启动应用程序时，将执行命令模式应用程序："

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "As command mode applications will often require arguments to be passed on the command line, this is also possible in dev mode:"
msgstr "由于命令模式的应用程序经常需要在命令行上传递参数，这在开发模式下也是可行的。"

#. type: Block title
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "CLI"
msgstr "CLI"

#. type: Block title
#: _versions/main/guides/command-mode-reference.adoc
#, no-wrap
msgid "Maven"
msgstr "Maven"

#. type: Block title
#: _versions/main/guides/command-mode-reference.adoc
#, no-wrap
msgid "Gradle"
msgstr "Gradle"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "You should see the following down the bottom of the screen after the application is stopped:"
msgstr "在应用程序停止后，你应该看到屏幕下方有以下内容。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"You can press the `Space bar` key and the application will be started again.\n"
"You can also use the `e` hotkey to edit the command line arguments and restart your application."
msgstr "您可以按 `Space bar` 键，应用程序将再次启动。您还可以使用 `e` 热键编辑命令行参数并重新启动应用程序。"

#. type: Title ==
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "Testing Command Mode Applications"
msgstr "测试命令模式的应用"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"Command Mode applications can be tested using the `@QuarkusMainTest` and `@QuarkusMainIntegrationTest` annotations. These\n"
"work in a similar way to `@QuarkusTest` and `@QuarkusIntegrationTest` where `@QuarkusMainTest` will run the CLI tests\n"
"within the current JVM, while `QuarkusIntegrationTest` is used to run the generated executable (both jars and native)."
msgstr "命令模式应用程序可使用 `@QuarkusMainTest` 和 `@QuarkusMainIntegrationTest` 注释进行测试。它们的工作方式与 `@QuarkusTest` 和 `@QuarkusIntegrationTest` 类似，其中 `@QuarkusMainTest` 将在当前 JVM 中运行 CLI 测试，而 `QuarkusIntegrationTest` 则用于运行生成的可执行文件（包括 jars 和本地文件）。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "We can write a simple test for our CLI application above as follows:"
msgstr "我们可以为我们上面的CLI应用程序写一个简单的测试，如下所示。"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"Each test method must be annotated with `@Launch` to automatically start the application or have a `QuarkusMainLauncher`\n"
"parameter to manually launch the application."
msgstr "每个测试方法都必须用 `@Launch` 进行注释，以便自动启动应用程序，或使用 `QuarkusMainLauncher` 参数手动启动应用程序。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "We can then extend this with an integration test that can be used to test the native executable or runnable jar:"
msgstr "然后，我们可以用一个集成测试来扩展它，该测试可以用来测试本地可执行文件或可运行的jar。"

#. type: Title ===
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy, no-wrap
msgid "Mocking"
msgstr "嘲弄"

#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid ""
"CDI injection is not supported in the `@QuarkusMainTest` tests.\n"
"Consequently, mocking CDI beans with `QuarkusMock` or `@InjectMock` is not supported either."
msgstr "`@QuarkusMainTest` 测试不支持 CDI 注入。因此，也不支持使用 `QuarkusMock` 或 `@InjectMock` 模拟 CDI Bean。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "It is possible to mock CDI beans by leveraging xref:getting-started-testing.adoc#testing_different_profiles[test profiles] though."
msgstr "不过，可以利用 xref:getting-started-testing.adoc#testing_different_profiles[测试配置文件] 来模拟 CDI Bean。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "For instance, in the following test, the singleton `CdiBean1` will be mocked by `MockedCdiBean1`:"
msgstr "例如，在下面的测试中，单例 `CdiBean1` 将被 `MockedCdiBean1` 模拟："

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "List all the CDI beans for which you want to enable an alternative mocked bean."
msgstr "列出要启用替代模拟 bean 的所有 CDI Bean。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "Use `@Alternative` without a `@Priority`. Make sure you don't use `@Mock`."
msgstr "`@Priority` 使用 `@Alternative` 时，请确保不要使用 `@Mock` 。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "The scope of the mocked bean should be consistent with the original one."
msgstr "模拟 bean 的范围应与原始 bean 一致。"

#. type: Plain text
#: _versions/main/guides/command-mode-reference.adoc
#, fuzzy
msgid "Using this pattern, you can enable specific alternatives for any given test."
msgstr "使用这种模式，您可以为任何给定的测试启用特定的替代方案。"
