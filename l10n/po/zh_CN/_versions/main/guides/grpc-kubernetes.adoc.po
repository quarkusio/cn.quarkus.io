# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-12 02:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/grpc-kubernetes.adoc
#, no-wrap
msgid "Deploying your gRPC Service in Kubernetes"
msgstr ""

#: _versions/main/guides/grpc-kubernetes.adoc
msgid ""
"This page explains how to deploy your gRPC service in Quarkus in Kubernetes.\n"
"We'll continue with the example from xref:grpc-getting-started.adoc[the Getting Started gRPC guide]."
msgstr ""

#. type: Title ==
#: _versions/main/guides/grpc-kubernetes.adoc
#, no-wrap
msgid "Configuring your project to use the Quarkus Kubernetes extension"
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "Add the Quarkus Kubernetes extension to your build file:"
msgstr ""

#. type: Block title
#: _versions/main/guides/grpc-kubernetes.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/grpc-kubernetes.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "Next, we want to expose our application using the Kubernetes Ingress resource:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "The Quarkus Kubernetes will bind the HTTP server using the port name `http` and the gRPC server using the port name `grpc`. By default, the Quarkus application will only expose the port name `http`, so only the HTTP server will be publicly accessible. To expose the gRPC server instead, set the `quarkus.kubernetes.ingress.target-port=grpc` property in your application.properties:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "If you configure Quarkus to use the same port for both HTTP and gRPC servers with the property `quarkus.grpc.server.use-separate-server=false`, then you don't need to change the default `target-port`."
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "Finally, we need to generate the Kubernetes manifests by running the command in a terminal:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "Once generated, you can look at the `target/kubernetes` directory:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "You can find more information about how to deploy the application in Kubernetes in the xref:deploying-to-kubernetes.adoc#deployment[the Kubernetes guide]."
msgstr ""

#. type: Title ==
#: _versions/main/guides/grpc-kubernetes.adoc
#, no-wrap
msgid "Using gRPC Health probes"
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "By default, the Kubernetes resources do not contain readiness and liveness probes. To add them, import the Smallrye Health extension to your build file:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "More information about the health extension can be found in xref:microprofile-health.adoc[the Microprofile Health guide]."
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "By the default, this extension will configure the probes to use the HTTP server (which is provided by some extensions like the Quarkus RESTEasy reactive extension). Internally, this probe will also use xref:grpc-service-implementation.adoc#health[the generated gRPC Health services]."
msgstr ""

#. type: Plain text
#: _versions/main/guides/grpc-kubernetes.adoc
msgid "If your application does not use any Quarkus extension that exposes an HTTP server, you can still configure the probes to directly use the gRPC Health service by adding the property `quarkus.kubernetes.readiness-probe.grpc-action-enabled=true` into your configuration:"
msgstr ""
