# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-06-17 02:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/config-reference.adoc:6
#, no-wrap
msgid "Configuration Reference Guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:16
msgid "The content of this guide has been revised and split into additional topics. Please check the <<additional-information,Additional Information>> section."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:21
msgid "In this reference guide we're going to describe various aspects of Quarkus configuration. A Quarkus application and Quarkus itself (core and extensions) are both configured via the same mechanism that leverages the https://github.com/smallrye/smallrye-config[SmallRye Config] API an implementation of the https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] specification."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:24
msgid "If you're looking for information how to make a Quarkus extension configurable then see the <<writing-extensions.adoc#configuration,Writing Your Own Extension>> guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:26
#, no-wrap
msgid "Config Sources"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:29
msgid "By default, Quarkus reads configuration properties from multiple sources (by descending ordinal):"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:31
msgid "(400) <<system-properties,System properties>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:32
msgid "(300) <<environment-variables,Environment variables>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:33
msgid "(295) <<env-file,.env>> file in the current working directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:34
msgid "(260) <<application-properties-file,Quarkus Application configuration file>> in `$PWD/config/application.properties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:35
msgid "(250) <<application-properties-file,Quarkus Application configuration file>> `application.properties` in classpath"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:37
msgid "(100) <<microprofile-config-properties-file,MicroProfile Config configuration file>> `META-INF/microprofile-config.properties` in classpath"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:43
msgid "The final configuration is the aggregation of the properties defined by all these sources. A configuration property lookup starts by the highest ordinal configuration source available and works it way down to other sources until a match is found. This means that any configuration property may override a value just by setting a different value in a higher ordinal config source. For example, a property configured using an environment property overrides the value provided using the `application.properties` file."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/config-reference.adoc:44
#, no-wrap
msgid "config-sources.png"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:47
#, no-wrap
msgid "System properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:51
msgid "System properties can be handed to the application through the `-D` flag during startup. The following examples assign the value `youshallnotpass` to the attribute `quarkus.datasource.password`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:53
msgid "For Quarkus dev mode: `./mvnw quarkus:dev -Dquarkus.datasource.password=youshallnotpass`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:54
msgid "For a runner jar: `java -Dquarkus.datasource.password=youshallnotpass -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:55
msgid "For a native executable: `./target/myapp-runner -Dquarkus.datasource.password=youshallnotpass`"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:57
#, no-wrap
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:60
msgid "For a runner jar: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; java -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:61
msgid "For a native executable: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; ./target/myapp-runner`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:64
msgid "Environment variables names follow the conversion rules specified by link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#default-configsources[MicroProfile Config]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:66
msgid "SmallRye Config specifies link:https://smallrye.io/smallrye-config/latest/config/environment-variables/[additional conversion rules]."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:68
#, no-wrap
msgid "`.env` file in the current working directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:71
#: upstream/_versions/main/guides/config-reference.adoc:259
msgid "..env"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:74
#, no-wrap
msgid "QUARKUS_DATASOURCE_PASSWORD=youshallnotpass <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:76
msgid "The name `QUARKUS_DATASOURCE_PASSWORD` the same conversion rules used for <<environment-variables>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:79
msgid "For `dev` mode, this file can be placed in the root of the project, but it is advised to **not** check it in to version control."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:81
msgid "Environment variables in the `.env` file are not available via the `System.getenv(String)` API."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:83
#, no-wrap
msgid "Quarkus Application configuration file"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:91
msgid "The Quarkus Application configuration file is loaded from the classpath resources, for instance `src/main/resources/application.properties`, `src/test/resources/application.properties` or from a `jar` dependency that contains an `application.properties` entry. Each `application.properties` found is treated as a separate `ConfigSource` and follow the same rules as every other source (override per property). Additionally, the configuration file may also reside in `$PWD/config/application.properties`. The loading starts from the config folder and then classpath order (`application.properties` files in the application sources will have priority on the classloader loading order)."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-reference.adoc:92
#, no-wrap
msgid "`application.properties`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:97
#: upstream/_versions/main/guides/config-reference.adoc:115
#, no-wrap
msgid ""
"greeting.message=hello <1>\n"
"quarkus.http.port=9090 <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:99
#: upstream/_versions/main/guides/config-reference.adoc:117
msgid "This is a user-defined configuration property."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:100
#: upstream/_versions/main/guides/config-reference.adoc:118
msgid "This is a configuration property consumed by the `quarkus-vertx-http` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:104
msgid "The `config/application.properties` is also available in `dev` mode. The file needs to be placed inside the build tool output directory (`target` for Maven and `build/classes/java/main` for Gradle). Keep in mind however that any cleaning operation from the build tool like `mvn clean` or `gradle clean` will remove the `config` directory as well."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:106
#, no-wrap
msgid "MicroProfile Config configuration file"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:109
msgid "The MicroProfile Config configuration file in `src/main/resources/META-INF/microprofile-config.properties`."
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-reference.adoc:110
#, no-wrap
msgid "`microprofile-config.properties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:121
msgid "It works in the exact same way as Quarkus Application configuration file `application.properties`. Recommendation is to use Quarkus `application.properties`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:122
#, no-wrap
msgid "Additional Config Sources"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:125
msgid "Quarkus provides additional extensions which cover other configuration formats and stores:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:127
msgid "xref:config-yaml.adoc[YAML]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:128
msgid "xref:vault.adoc[HashiCorp Vault]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:129
msgid "xref:consul-config.adoc[Consul]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:130
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:132
msgid "It is also possible to create a xref:config-extending-support.adoc#custom-config-source[Custom Config Source]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:133
#, no-wrap
msgid "Inject"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:137
msgid "Quarkus uses https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] annotations to inject the configuration properties in the application."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:142
#: upstream/_versions/main/guides/config-reference.adoc:152
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.message\") <1>\n"
"String message;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:145
msgid "You can use `@Inject @ConfigProperty` or just `@ConfigProperty`. The `@Inject` annotation is not necessary for members annotated with `@ConfigProperty`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:147
msgid "If the application attempts to inject a configuration property that is not set, an error is thrown."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:155
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.suffix\", defaultValue=\"!\") <2>\n"
"String suffix;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:158
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.name\")\n"
"Optional<String> name; <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:160
msgid "If you do not provide a value for this property, the application startup fails with `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:161
msgid "The default value is injected if the configuration does not provide a value for `greeting.suffix`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:162
msgid "This property is optional - an empty `Optional` is injected if the configuration does not provide a value for `greeting.name`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:164
msgid "Use xref:config-mappings.adoc#config-mappings[Config Mappings] to group similar configuration properties."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:165
#, no-wrap
msgid "Default Values"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:172
msgid "If a property is associated with a default value (by way of the `defaultValue` attribute), and no configuration value is supplied for the property, then rather than throwing a `javax.enterprise.inject.spi.DeploymentException`, the default value will be used. The `defaultValue` value is expressed as a `String`, and uses the same conversion mechanism used to process configuration values. Several Built-in Converters already exist for primitives, boxed primitives, and other classes; for example:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:174
msgid "Primitives: `boolean`, `byte`, `short`, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:175
msgid "Boxed primitives: `java.lang.Boolean`, `java.lang.Byte`, `java.lang.Short`, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:176
msgid "Optional containers: `java.util.Optional`, `java.util.OptionalInt`, `java.util.OptionalLong`, and `java.util.OptionalDouble`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:177
msgid "Java `enum` types"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:178
msgid "JSR 310 `java.time.Duration`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:179
msgid "JDK networking `java.net.SocketAddress`, `java.net.InetAddress`, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:182
msgid "As you might expect, these converters are `org.eclipse.microprofile.config.spi.Converter` implementations. Therefore, these converters comply with the Microprofile or custom implementation providers expression rules like:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:184
msgid "Boolean values will be `true` in cases \"true\", \"1\", \"YES\", \"Y\" \"ON\". Otherwise, value will be interpreted as false"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:185
msgid "For float and double values the fractional digits must be separated by a dot `.`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:190
msgid "Note that when a combination of `Optional*` types and the `defaultValue` attribute are used, the defined `defaultValue` will still be used and if no value is given for the property, the `Optional*` will be present and populated with the converted default value. However, when the property is explicitly empty, the default value is not used and the `Optional` will be empty. Consider this example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:195
#, no-wrap
msgid ""
"# missing value, optional property\n"
"greeting.name =\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:200
msgid "In this case, since `greeting.name` was configured to be `Optional*` up above, the corresponding property value will be an empty `Optional` and execution will continue normally. This would be the case even if there was a default value configured: the default value is *not* used if the property is explicitly cleared in the configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:202
msgid "On the other hand, this example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:207
#, no-wrap
msgid ""
"# missing value, non-optional\n"
"greeting.suffix =\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:211
msgid "will result in a `java.util.NoSuchElementException: SRCFG02004: Required property greeting.message not found` on startup and the default value will not be assigned."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:213
msgid "Below is an example of a Quarkus-supplied converter:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:218
#, no-wrap
msgid ""
"@ConfigProperty(name = \"server.address\", defaultValue = \"192.168.1.1\")\n"
"InetAddress serverAddress;\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:220
#, no-wrap
msgid "Programmatically access"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:224
msgid "The `org.eclipse.microprofile.config.ConfigProvider.getConfig()` API allows to access the Config API programmatically.  This API is mostly useful in situations where CDI injection is not available."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:229
#, no-wrap
msgid ""
"String databaseName = ConfigProvider.getConfig().getValue(\"database.name\", String.class);\n"
"Optional<String> maybeDatabaseName = ConfigProvider.getConfig().getOptionalValue(\"database.name\", String.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:233
msgid "Do not use `System.getProperty(String)` or `System.getEnv(String)` to retrieve configuration values. These APIs are not configuration aware and do not support the features described in this guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:235
#, no-wrap
msgid "Profiles"
msgstr "配置文件"

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:239
msgid "We often need to configure differently our application depending on the target _environment_. For example, the local development environment may be different from the production environment."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:242
msgid "Configuration Profiles allow for multiple configurations in the same file or separate files and select between them via a profile name."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:243
#, no-wrap
msgid "Profile in the property name"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:246
msgid "To be able to set properties with the same name, each property needs to be prefixed with a percentage sign `%` followed by the profile name and a dot `.` in the syntax `%{profile-name}.config.name`:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-reference.adoc:247
#: upstream/_versions/main/guides/config-reference.adoc:267
#: upstream/_versions/main/guides/config-reference.adoc:292
#: upstream/_versions/main/guides/config-reference.adoc:316
#: upstream/_versions/main/guides/config-reference.adoc:392
#: upstream/_versions/main/guides/config-reference.adoc:403
#: upstream/_versions/main/guides/config-reference.adoc:412
#: upstream/_versions/main/guides/config-reference.adoc:436
#: upstream/_versions/main/guides/config-reference.adoc:467
#: upstream/_versions/main/guides/config-reference.adoc:485
#, no-wrap
msgid "application.properties"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:252
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%dev.quarkus.http.port=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:255
msgid "The Quarkus HTTP port will be 9090. If the `dev` profile is active it will be 8181."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:257
msgid "Profiles in the `.env` file follow the syntax `_{PROFILE}_CONFIG_KEY=value`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:263
#, no-wrap
msgid ""
"QUARKUS_HTTP_PORT=9090\n"
"_DEV_QUARKUS_HTTP_PORT=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:266
msgid "If a profile does not define a value for a specific attribute, the _default_ (no profile) value is used:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:273
#, no-wrap
msgid ""
"bar=”hello”\n"
"baz=”bonjour”\n"
"%dev.bar=”hallo”\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:278
msgid "With the `dev` profile enabled, the property `bar` has the value `hallo`, but the property `baz` has the value `bonjour`. If the `prod` profile is enabled, `bar` has the value `hello` (as there is no specific value for the `prod` profile), and `baz` the value `bonjour`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:279
#, no-wrap
msgid "Default Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:282
msgid "By default, Quarkus provides three profiles, that activate automatically in certain conditions:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:284
#, no-wrap
msgid "*dev* - Activated when in development mode (i.e. `quarkus:dev`)\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:285
#, no-wrap
msgid "*test* - Activated when running tests\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:286
#, no-wrap
msgid "*prod* - The default profile when not running in development or test mode\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:287
#, no-wrap
msgid "Custom Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:291
msgid "It is also possible to create additional profiles and activate them with the `quarkus.profile` configuration property. A single config property with the new profile name is the only requirement:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:297
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.port=9999\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:300
msgid "Setting `quarkus.profile` to `staging` will activate the `staging` profile."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:302
msgid "Only a single profile may be active at a time."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:307
msgid "The `io.quarkus.runtime.configuration.ProfileManager#getActiveProfile` API provides a way to retrieve the active profile programmatically."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:309
msgid "Using `@ConfigProperty(\"quarkus.profile\")` will *not* work properly."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:311
#, no-wrap
msgid "Profile aware files"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:315
msgid "In this case, properties for a specific profile may reside in an `application-{profile}.properties` named file. The previous example may be expressed as:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:321
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.test-port=9091\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/config-reference.adoc:323
#, no-wrap
msgid "application-staging.properties"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:328
#, no-wrap
msgid ""
"quarkus.http.port=9190\n"
"quarkus.http.test-port=9191\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:333
msgid "In this style, the configuration names in the profile aware file do not need to be prefixed with the profile name."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:335
msgid "Properties in the profile aware file have priority over profile aware properties defined in the main file."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:340
msgid "The profile aware file must be present in the exact same location as the main `application.properties` file."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:342
#, no-wrap
msgid "Parent Profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:346
msgid "A Parent Profile adds one level of hierarchy to the current profile. The configuration `quarkus.config.profile.parent` accepts a single profile name."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:349
msgid "When the Parent Profile is active, if a property cannot be found in the current active Profile, the config lookup fallbacks to the Parent Profile. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:354
#, no-wrap
msgid ""
"quarkus.profile=dev\n"
"quarkus.config.profile.parent=common\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:357
#, no-wrap
msgid ""
"%common.quarkus.http.port=9090\n"
"%dev.quarkus.http.ssl-port=9443\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:360
#, no-wrap
msgid ""
"quarkus.http.port=8080\n"
"quarkus.http.ssl-port=8443\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:363
msgid "Then"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:365
msgid "The active profile is `dev`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:366
msgid "The parent profile is `common`"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:367
msgid "`quarkus.http.port` is 9090"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:368
msgid "`quarkus.http.ssl-port` is 9443"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:369
#, no-wrap
msgid "Default Runtime Profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:372
msgid "The default Quarkus runtime profile is set to the profile used to build the application:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:377
#, no-wrap
msgid ""
"./mvnw package -Pnative -Dquarkus.profile=prod-aws\n"
"./target/my-app-1.0-runner // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:379
msgid "The command will run with the `prod-aws` profile. This can be overridden using the `quarkus.profile` configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:381
#, no-wrap
msgid "Property Expressions"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:385
msgid "Quarkus provides property expressions expansion on configuration values. An expression string is a mix of plain strings and expression segments, which are wrapped by the sequence `${ ... }`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:389
msgid "These expressions are resolved when the property is read. So if the configuration property is build time the property expression will be resolved at build time. If the configuration property is overridable at runtime it will be resolved at runtime."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:391
msgid "Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:397
#, no-wrap
msgid ""
"remote.host=quarkus.io\n"
"callable.url=https://${remote.host}/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:400
msgid "The resolved value of the `callable.url` property is `https://quarkus.io/`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:402
msgid "Another example would be defining different database servers by profile:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:408
#, no-wrap
msgid ""
"%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/mydatabase?useSSL=false\n"
"quarkus.datasource.jdbc.url=jdbc:mysql://remotehost:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:411
msgid "can be simplified to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:417
#, no-wrap
msgid ""
"%dev.application.server=localhost\n"
"application.server=remotehost\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:419
#, no-wrap
msgid "quarkus.datasource.jdbc.url=jdbc:mysql://${application.server}:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:422
msgid "Additionally, the Expression Expansion engine supports the following segments:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:424
msgid "`${expression:value}` - Provides a default value after the `:` if the expansion doesn't find a value."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:425
msgid "`${my.prop${compose}}` - Composed expressions. Inner expressions are resolved first."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:426
msgid "`${my.prop}${my.prop}` - Multiple expressions."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:428
msgid "If an expression cannot be expanded and no default is supplied a `NoSuchElementException` is thrown."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:431
msgid "Expressions lookups are performed in all config sources. The expression values and expansion values may reside in different config sources."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:432
#, no-wrap
msgid "With Environment Variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:435
msgid "Property Expressions also work with Environment Variables."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:441
#, no-wrap
msgid ""
"remote.host=quarkus.io\n"
"application.host=${HOST:${remote.host}}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:445
msgid "This will expand the `HOST` environment variable and use the value of the property `remote.host` as the default value if `HOST` is not set."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:446
#, no-wrap
msgid "Accessing a generating UUID"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:451
msgid "The default config source from Quarkus provides a random UUID value.  It generates the UUID at startup time.  So, the value changes between startups, including reloads in dev mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:455
msgid "You can access the generated value using the `quarkus.uuid` property.  Use <<property-expressions, expressions>> to access it: `${quarkus.uuid}`.  For example, it can be useful to configure a Kafka client with a unique consumer group:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:459
#, no-wrap
msgid "mp.messaging.incoming.prices.group.id=${quarkus.uuid}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:461
#, no-wrap
msgid "Clearing properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:466
msgid "Run time properties which are optional, and which have had values set at build time or which have a default value, may be explicitly cleared by assigning an empty string to the property. Note that this will _only_ affect runtime properties, and will _only_ work with properties whose values are not required."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:471
#, no-wrap
msgid "remote.host=quarkus.io\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:474
msgid "A lookup to `remote.host` with `-Dremote.host=` will throw an Exception, because the system property cleared the value."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:476
#, no-wrap
msgid "Indexed Properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:480
msgid "A config value which contains unescaped commas may be converted to `Collection`. This works for simple cases, but it becomes cumbersome and limited for more advanced cases."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:484
msgid "Indexed Properties provide a way to use indexes in config property names to map specific elements in a `Collection` type. Since the indexed element is part of the property name and not contained in the value, this can also be used to map complex object types as `Collection` elements. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:489
#, no-wrap
msgid "my.collection=dog,cat,turtle\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/config-reference.adoc:493
#, no-wrap
msgid ""
"my.indexed.collection[0]=dog\n"
"my.indexed.collection[1]=cat\n"
"my.indexed.collection[2]=turtle\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:496
msgid "The indexed property syntax uses the property name and square brackets `[ ] with an index in between."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:501
msgid "A call to `Config#getValues(\"my.collection\", String.class)`, will automatically create and convert a `List<String>` that contains the values `dog`, `cat` and `turtle`. A call to `Config#getValues(\"my.indexed.collection\", String.class)` returns the exact same result. If the same property name exists in both forms (regular and indexed), the regular value has priority."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:505
msgid "The indexed property is sorted by their index before being added to the target `Collection`. Any gaps contained in the indexes do not resolve to the target `Collection`, which means that the `Collection` result will store all values without any gaps."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:507
#, no-wrap
msgid "Configuring Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:512
msgid "Quarkus itself is configured via the same mechanism as your application. Quarkus reserves the `quarkus.` namespace for its own configuration. For example to configure the HTTP server port you can set `quarkus.http.port` in `application.properties`. All the Quarkus configuration properties are xref:all-config.adoc[documented and searchable]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/main/guides/config-reference.adoc:517
msgid "As mentioned above, properties prefixed with `quarkus.` are effectively reserved for configuring Quarkus itself and its extensions. Therefore, the `quarkus.` prefix should **never** be used for application specific properties."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/config-reference.adoc:519
#, no-wrap
msgid "Build Time configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:524
msgid "Some Quarkus configurations only take effect during build time, meaning is not possible to change them at runtime. These configurations are still available at runtime but as read-only and have no effect in Quarkus behaviour. A change to any of these configurations requires a rebuild of the application itself to reflect changes of such properties."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:526
msgid "The properties fixed at build time are marked with a lock icon (icon:lock[]) in the xref:all-config.adoc[list of all configuration options]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:530
msgid "However, some extensions do define properties _overridable at runtime_. A simple example is the database URL, username and password which is only known specifically in your target environment, so they can be set and influence the application behaviour at runtime."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:531
#, no-wrap
msgid "Change build time properties after your application has been published"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:534
msgid "If you are in the rare situation that you need to change the build time configuration after your application is built, then check out how xref:reaugmentation.adoc[re-augmentation] can be used to rebuild the augmentation output for a different build time configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:536
#, no-wrap
msgid "Additional Information"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:539
msgid "xref:config-yaml.adoc[YAML ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:540
msgid "xref:vault.adoc[HashiCorp Vault ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:541
msgid "xref:consul-config.adoc[Consul ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:542
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:543
msgid "xref:config-mappings.adoc[Mapping configuration to objects]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:544
msgid "xref:config-extending-support.adoc[Extending configuration support]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:546
msgid "Quarkus relies on link:https://github.com/smallrye/smallrye-config/[SmallRye Config] and inherits its features:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:548
msgid "Additional ``ConfigSource``s"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:549
msgid "Additional ``Converter``s"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:550
msgid "Indexed properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:551
msgid "Parent profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:552
msgid "Interceptors for configuration value resolution"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:553
msgid "Relocate configuration properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:554
msgid "Fallback configuration properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:555
msgid "Logging"
msgstr "日志"

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:556
msgid "Hide secrets"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/config-reference.adoc:559
msgid "For more information, please check the link:https://smallrye.io/smallrye-config/latest[SmallRye Config documentation]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/config-reference.adoc:560
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"
