# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:6
#, no-wrap
msgid "Deploying to Heroku"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:10
msgid "In this guide you will learn how to deploy a Quarkus based web application as a web-dyno to Heroku."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:12
msgid "This guide covers:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:14
msgid "Update Quarkus HTTP Port"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:15
msgid "Install the Heroku CLI"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:16
msgid "Deploy the application to Heroku"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:17
msgid "Deploy the application as Docker image to Heroku"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:18
msgid "Deploy the native application as Docker image to Heroku"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:19
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:25
msgid "https://www.heroku.com/[A Heroku Account]. Free accounts work."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:26
msgid "https://devcenter.heroku.com/articles/heroku-cli[Heroku CLI installed]"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:27
#, no-wrap
msgid "Introduction"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:32
msgid "Heroku is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.  It supports several languages like Java, Ruby, Node.js, Scala, Clojure, Python, PHP, and Go.  In addition it offers a container registry that can be used to deploy prebuilt container images."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:34
msgid "Heroku can be used in different ways to run a Quarkus application:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:36
msgid "As a plain Java program running in a container defined by Heroku's environment"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:37
msgid "As a containerized Java program running in a container defined by the Quarkus build process"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:38
msgid "As a containerized native program running in a container defined by the Quarkus build process"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:41
msgid "All three approaches need to be aware of the port that Heroku assigns to it to handle traffic.  Luckily, there's a dynamic configuration property for it."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:43
msgid "The guide assumes that you have the https://devcenter.heroku.com/articles/heroku-cli[Heroku CLI] installed."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:44
#, no-wrap
msgid "Common project setup"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:47
msgid "This guide will take as input an application developed in the xref:getting-started.adoc[Getting Started guide]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:50
msgid "Make sure you have the getting-started application at hand, or clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]. The solution is located in the `getting-started` directory."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:53
msgid "Heroku can react on changes in your repository, run CI and redeploy your application when your code changes.  Therefore we start with a valid repository already."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:55
msgid "Also, make sure your Heroku CLI is working:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:60
#, no-wrap
msgid ""
"heroku --version\n"
"heroku login\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:62
#, no-wrap
msgid "Prepare the Quarkus HTTP Port"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:67
msgid "Heroku picks a random port and assigns it to the container that is eventually running your Quarkus application.  That port is available as an environment variable under `$PORT`.  The easiest way to make Quarkus in all deployment scenarios aware of it is using the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:71
#, no-wrap
msgid "quarkus.http.port=${PORT:8080}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:75
msgid "This reads as: \"Listen on `$PORT` if this is a defined variable, otherwise listen on 8080 as usual.\" Run the following to add this to your `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:80
#, no-wrap
msgid ""
"echo \"quarkus.http.port=\\${PORT:8080}\" >> src/main/resources/application.properties\n"
"git commit -am \"Configure the HTTP Port.\"\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:82
#, no-wrap
msgid "Deploy the repository and build on Heroku"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:86
msgid "The first variant uses the Quarkus Maven build to create the _quarkus-app_ application structure containing the runnable \"fast-jar\" as well as all libraries needed inside Heroku's build infrastructure and then deploying that result, the other one uses a local build process to create an optimized container."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:88
msgid "Two additional files are needed in your application's root directory:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:90
msgid "`system.properties` to configure the Java version"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:91
msgid "`Procfile` to configure how Heroku starts your application"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:93
msgid "Quarkus needs JDK 11, so we specify that first:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:99
#, no-wrap
msgid ""
"echo \"java.runtime.version=11\" >> system.properties\n"
"git add system.properties\n"
"git commit -am \"Configure the Java version for Heroku.\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:102
msgid "We will deploy a web application so we need to configure the type `web` in the Heroku `Procfile` like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:108
#, no-wrap
msgid ""
"echo \"web: java \\$JAVA_OPTS -jar target/quarkus-app/quarkus-run.jar\" >> Procfile\n"
"git add Procfile\n"
"git commit -am \"Add a Procfile.\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:111
msgid "Your application should already be runnable via `heroku local web`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:113
msgid "Let's create an application in your account and deploy that repository to it:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:119
#, no-wrap
msgid ""
"heroku create\n"
"git push heroku master\n"
"heroku open\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:122
msgid "The application will have a generated name and the terminal should output that. `heroku open` opens your default browser to access your new application."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:124
msgid "To access the REST endpoint via curl, run:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:129
#, no-wrap
msgid ""
"APP_NAME=`heroku info | grep  \"=== .*\" |sed \"s/=== //\"`\n"
"curl $APP_NAME.herokuapp.com/hello\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:132
msgid "Of course, you can use the Heroku CLI to connect this repo to your GitHub account, too, but this is out of scope for this guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:133
#, no-wrap
msgid "Deploy as container"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:136
msgid "The advantage of pushing a whole container is that we are in complete control over its content and maybe even choose to deploy a container with a native executable running on GraalVM."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:138
msgid "First, login to Heroku's container registry:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:142
#, no-wrap
msgid "heroku container:login\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:145
msgid "We need to add an extension to our project to build container images via the Quarkus Maven plugin:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:151
#, no-wrap
msgid ""
"mvn quarkus:add-extension -Dextensions=\"container-image-docker\"\n"
"git add pom.xml\n"
"git commit -am \"Add container-image-docker extension.\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:155
msgid "The image we are going to build needs to be named accordingly to work with Heroku's registry and deployment.  We get the generated name via `heroku info` and pass it on to the (local) build:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:164
#, no-wrap
msgid ""
"APP_NAME=`heroku info | grep  \"=== .*\" |sed \"s/=== //\"`\n"
"mvn clean package\\\n"
"  -Dquarkus.container-image.build=true\\\n"
"  -Dquarkus.container-image.group=registry.heroku.com/$APP_NAME\\\n"
"  -Dquarkus.container-image.name=web\\\n"
"  -Dquarkus.container-image.tag=latest\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:167
msgid "With Docker installed, you can now push the image and release it:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:172
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:209
#, no-wrap
msgid ""
"docker push registry.heroku.com/$APP_NAME/web\n"
"heroku container:release web --app $APP_NAME\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:175
msgid "You can and should check the logs to see if your application is now indeed running from the container:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:179
#, no-wrap
msgid "heroku logs --app $APP_NAME --tail\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:183
msgid "The initial push is rather big, as all layers of the image need to be transferred.  The following pushes will be smaller."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:187
msgid "The biggest advantage we take when deploying our app as a container is to deploy a container with the natively compiled application.  Why? Because Heroku will stop or sleep the application when there's no incoming traffic.  A native application will wake up much faster from its sleep."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:190
msgid "The process is pretty much the same.  We opt in to compiling a native image inside a local container, so that we don't have to deal with installing GraalVM locally:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:201
#, no-wrap
msgid ""
"APP_NAME=`heroku info | grep  \"=== .*\" |sed \"s/=== //\"`\n"
"mvn clean package\\\n"
"  -Dquarkus.container-image.build=true\\\n"
"  -Dquarkus.container-image.group=registry.heroku.com/$APP_NAME\\\n"
"  -Dquarkus.container-image.name=web\\\n"
"  -Dquarkus.container-image.tag=latest\\\n"
"  -Pnative\\\n"
"  -Dquarkus.native.container-build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/deploying-to-heroku.adoc:204
msgid "After that, push and release again:"
msgstr ""
