msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Observability Dev Services with Grafana OTel LGTM"
msgstr "使用 Grafana OTel LGTM 提供可观察性开发服务"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "https://github.com/grafana/docker-otel-lgtm[OTel-LGTM] is `all-in-one` Docker image containing OpenTelemetry's https://github.com/open-telemetry/opentelemetry-proto/blob/main/docs/README.md[OTLP] as the protocol to transport metrics, tracing and logging data to an https://opentelemetry.io/docs/collector[OpenTelemetry Collector] which then stores signals data into https://prometheus.io/[Prometheus] (metrics), https://github.com/grafana/tempo[Tempo] (traces) and https://github.com/grafana/loki[Loki] (logs), only to have it visualized by https://github.com/grafana/grafana[Grafana]. It's used by Quarkus Observability to provide the Grafana OTel LGTM Dev Resource."
msgstr "link:https://github.com/grafana/docker-otel-lgtm[OTel-LGTM] 是 `all-in-one` Docker 镜像，其中包含 OpenTelemetry 的 link:https://github.com/open-telemetry/opentelemetry-proto/blob/main/docs/README.md[OTLP] ，作为向 link:https://opentelemetry.io/docs/collector[OpenTelemetry 收集器] 传输度量、跟踪和日志数据的协议，然后收集器将信号数据存储到 link:https://prometheus.io/[Prometheus] （度量）、 link:https://github.com/grafana/tempo[Tempo] （跟踪）和 link:https://github.com/grafana/loki[Loki] （日志）中，再由 link:https://github.com/grafana/grafana[Grafana] 进行可视化。Quarkus Observability 利用它提供了 Grafana OTel LGTM Dev Resource。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Configuring your project"
msgstr "配置项目"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Add the Quarkus Grafana OTel LGTM sink (where data goes) extension to your build file:"
msgstr "在构建文件中添加 Quarkus Grafana OTel LGTM sink（数据去向）扩展："

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Metrics"
msgstr "指标"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you need metrics, add the Micrometer OTLP registry to your build file:"
msgstr "如果需要度量，请将 Micrometer OTLP 注册表添加到构建文件中："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "When using the https://micrometer.io/[MicroMeter's] Quarkiverse OTLP registry to push metrics to Grafana OTel LGTM, the `quarkus.micrometer.export.otlp.url` property is automatically set to OTel collector endpoint as seen from the outside of the docker container."
msgstr "当使用 link:https://micrometer.io/[MicroMeter 的] Quarkiverse OTLP 注册表将指标推送到 Grafana OTel LGTM 时， `quarkus.micrometer.export.otlp.url` 属性会自动设置为从 docker 容器外部看到的 OTel 收集器端点。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Tracing"
msgstr "跟踪"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "For Tracing add the `quarkus-opentelemetry` extension to your build file:"
msgstr "要进行跟踪，请在构建文件中添加 `quarkus-opentelemetry` 扩展名："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The `quarkus.otel.exporter.otlp.endpoint` property is automatically set to OTel collector endpoint as seen from the outside of the docker container."
msgstr "`quarkus.otel.exporter.otlp.endpoint` 属性会自动设置为从 docker 容器外部看到的 OTel 收集器端点。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "The `quarkus.otel.exporter.otlp.protocol` is set to `http/protobuf`."
msgstr "`quarkus.otel.exporter.otlp.protocol` 设置为 `http/protobuf` 。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Access Grafana"
msgstr "访问 Grafana"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Once you start your app in dev mode:"
msgstr "在开发模式下启动应用程序后"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "You will see a log entry like this:"
msgstr "您将看到这样一条日志记录："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Remember that Grafana is accessible in an ephemeral port, so you need to check the logs to see which port is being used. In this example, the grafana endpoint is `grafana.endpoint=http://localhost:42797`."
msgstr "请记住，Grafana 是通过短暂端口访问的，因此需要检查日志以查看使用的端口。在本例中，Grafana 端点是 `grafana.endpoint=http://localhost:42797` 。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you miss the message you can always check the port with this Docker command:"
msgstr "如果您错过了该消息，可以使用此 Docker 命令检查端口："

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "Additional configuration"
msgstr "其他配置"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "This extension will configure your `quarkus-opentelemetry` and `quarkus-micrometer-registry-otlp` extensions to send data to the OTel Collector bundled with the Grafana OTel LGTM image."
msgstr "该扩展将配置您的 `quarkus-opentelemetry` 和 `quarkus-micrometer-registry-otlp` 扩展，以便将数据发送到与 Grafana OTel LGTM 映像捆绑在一起的 OTel 收集器。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "If you don't want all the hassle with Dev Services (e.g. lookup and re-use of existing running containers, etc) you can simply disable Dev Services and enable just Dev Resource usage:"
msgstr "如果你不想要开发服务带来的所有麻烦（如查找和重复使用现有运行的容器等），你可以直接禁用开发服务，只启用开发资源使用："

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Tests"
msgstr "测试"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "And for the least 'auto-magical' usage in the tests, simply disable both (Dev Resources are already disabled by default):"
msgstr "如果想在测试中使用最少的 \"自动魔法\"，只需禁用这两种功能即可（默认情况下已禁用 \"开发资源\"）："

#: _versions/main/guides/observability-devservices-lgtm.adoc
msgid "And then explicitly list LGTM Dev Resource in the test as a `@QuarkusTestResource` resource:"
msgstr ""

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Testing full Grafana OTel LGTM stack - example"
msgstr "测试完整的 Grafana OTel LGTM 堆栈 - 示例"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Use existing Quarkus MicroMeter OTLP registry"
msgstr "使用现有的 Quarkus MicroMeter OTLP 注册表"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Simply inject the Meter registry into your code -- it will periodically push metrics to Grafana LGTM's OTLP HTTP endpoint."
msgstr "只需在代码中注入 Meter 注册表，它就会定期将指标推送到 Grafana LGTM 的 OTLP HTTP 端点。"

#: _versions/main/guides/observability-devservices-lgtm.adoc
#, fuzzy
msgid "Where you can then check Grafana's datasource API for existing metrics data."
msgstr "然后，您可以检查 Grafana 的数据源 API，查看现有的度量数据。"
