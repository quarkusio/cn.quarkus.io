msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "TLS registry reference"
msgstr "TLS 注册表参考"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The TLS registry is a Quarkus extension centralizing the TLS configuration for the application.\n"
"You can use the TLS registry to define the configuration in one place and reference it from multiple places in the application."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The TLS extension is automatically added to your project when you use a compatible extension.\n"
"For example, if your application uses Quarkus REST, gRPC, or reactive routes, the TLS registry is automatically added to your project."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using TLS registry"
msgstr "使用 TLS 注册表"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "To configure a TLS connection, including key and trust stores, use the `quarkus.tls.*` properties."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The configuration model always contains a default (unnamed) TLS configuration that is configured by properties directly under `quarkus.tls.*`.\n"
"In addition, it allows you to define separate named configurations; these use `quarkus.tls.<name>.*` properties.\n"
"However, by using the `quarkus.tls.<name>.*` properties, you can also have specific configurations for specific connections."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the HTTP server to use https://"
msgstr "配置 HTTP 服务器以使用 https://"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the HTTP server to use HTTPS, you can use the following configuration:"
msgstr "要将 HTTP 服务器配置为使用 HTTPS，可以使用以下配置："

#: _versions/main/guides/tls-registry-reference.adoc
msgid "With a `p12` (PKCS12) keystore, use the following configuration:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Instead of the default configuration, you can use a named configuration:"
msgstr "您可以使用命名配置来代替默认配置："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure a client to use https://"
msgstr "配置客户端使用 https://"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "As an example to illustrate client configuration, we will use a gRPC client:"
msgstr "举例说明客户端配置，我们将使用 gRPC 客户端："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuring mTLS"
msgstr "配置 mTLS"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"To configure mTLS, set up both the server and the client.\n"
"Each will require a keystore and a truststore:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "the server keystore contains the server certificate and private key"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "the client keystore contains the client certificate and private key"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "the server truststore contains the client certificate (to authenticate the client)"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "the client truststore contains the server certificate (to authenticate the server)"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Referencing a TLS configuration"
msgstr "引用 TLS 配置"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "After you have configured a _named_ configuration by using `quarkus.tls.<name>`, reference it by using the `tls-configuration-name` property:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuring TLS"
msgstr "配置 TLS"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Configuring TLS is mainly about key stores and trust stores.\n"
"The configuration depends on the format (`pem`, `p12`, `jks`...).\n"
"There are other important properties too.\n"
"This section details the various properties you can use to configure TLS."
msgstr "配置 TLS 主要涉及密钥存储和信任存储。配置取决于格式（ `pem` , `p12` , `jks` ... ）。还有其他一些重要属性。本节将详细介绍用于配置 TLS 的各种属性。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Key stores"
msgstr "主要商店"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Key stores are used to store the private key and the certificate.\n"
"They are mainly used on the server side but can also be used on the client side when mTLS is used."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PEM key stores"
msgstr "PEM 密钥存储"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Privacy Enhanced Mail (PEM) keystores are composed of a list of pairs of two files: the certificate and the private key.\n"
"The certificate file is a `.crt` or `.pem` file; the private key file is often a `.key` file."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "To configure a PEM keystore, use the following properties:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"In general, you only need a single pair consisting of a certificate and a private key.\n"
"Even if the certificate is part of a certificate chain, it includes only one private key corresponding to the end-entity certificate."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"When multiple pairs are configured, the selection is based on Server Name Indication (SNI).\n"
"The client sends the server name it wants to connect to, and the server selects the appropriate pair of certificates and private keys.\n"
"To use this feature, ensure xref:./tls-registry-reference.adoc#sni[SNI] is enabled on both the client and server."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"When configuring multiple key or certificate pairs, the order follows the lexicographical order of their names, as demonstrated with `a` and `b` in the previous example.\n"
"The pair with the lowest lexicographical order is considered the first.\n"
"You can define the order by using the `quarkus.tls.key-store.pem.order` property.\n"
"For example, `quarkus.tls.key-store.pem.order=b,c,a`.\n"
"This setting is crucial when using SNI, where the first specified pair is used as the default."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PKCS12 key stores"
msgstr "PKCS12 密钥存储"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "PKCS12 key stores are a single file containing the certificate and the private key."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "To configure a PKCS12 keystore, use the following properties:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"`.p12` files are password-protected, so you need to provide the password to open the keystore.\n"
"These files can include more than one certificate and private key."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "If this is the case, take either of the following actions:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Provide the alias of the certificate and the private key you want to use."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the alias, use the following properties:"
msgstr "要配置别名，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Alternatively, use SNI to select the appropriate certificate and private key.\n"
"Note that all keys must use the same password."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "JKS key stores"
msgstr "JKS 钥匙存放处"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"JKS key stores are a single file containing the certificate and the private key.\n"
"Note that the JKS format should be avoided as it is less secure than PKCS12.\n"
"To configure a JKS keystore, use the following properties:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the keystore.\n"
"Also, they can include more than one certificate and private key.\n"
"If this is the case:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "SNI"
msgstr "SNI"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Server Name Indication (SNI) is a TLS extension allowing a client to specify the hostname it attempts to connect to during the TLS handshake.\n"
"It enables a server to present different TLS certificates for multiple domains on a single IP address, facilitating secure communication for virtual hosting scenarios."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To enable SNI, use the following property:"
msgstr "要启用 SNI，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
msgid "With this setting enabled, the client indicates the server name during the TLS handshake, allowing the server to select the appropriate certificate:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "When configuring the keystore with PEM files, multiple certificate (CRT) and key files must be provided. CRT is a common file extension for X.509 certificate files, typically in PEM (Privacy-Enhanced Mail) format. These files contain the public certificate."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"When configuring the keystore with a JKS or P12 file, the server selects the appropriate certificate based on the SNI (Server Name Indication) hostname provided by the client during the TLS handshake.\n"
"The server matches the SNI hostname with the common name (CN) or subject alternative names (SAN) configured in the certificates stored in the keystore.\n"
"All keystore and alias passwords must be identical, and there is no need to set the alias property."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Credential providers"
msgstr "证书提供者"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "You can use a credential provider instead of passing the keystore password and alias password in the configuration."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"A credential provider offers a way to retrieve the keystore and alias password.\n"
"Note that the credential provider is only used if the password or alias password is not set in the configuration."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a credential provider, use the following properties:"
msgstr "要配置凭证提供程序，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The credential provider can only be used with PKCS12 and JKS key stores."
msgstr "凭证提供程序只能与 PKCS12 和 JKS 密钥存储一起使用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trust stores"
msgstr "信托商店"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Trust stores are used to store the certificates of the trusted parties.\n"
"In regular TLS, the client uses a truststore to authenticate the server.\n"
"With mutual TLS (mTLS), both the server and the client use truststores to authenticate each other."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PEM trust stores"
msgstr "PEM 信托存储"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"PEM trust stores are composed of a list of `.crt` or `.pem` files.\n"
"Each of them contains a certificate."
msgstr "PEM 信任存储由 `.crt` 或 `.pem` 文件列表组成。每个文件都包含一个证书。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "To configure a PEM truststore, use the following properties:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PKCS12 trust stores"
msgstr "PKCS12 信托存储"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"PKCS12 trust stores are a single file containing the certificates.\n"
"You can use the alias to select the appropriate certificate when multiple certificates are included."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "To configure a PKCS12 truststore, use the following properties:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"`.p12` files are password-protected, so you need to provide the password to open the truststore.\n"
"However, unlike key stores, the alias does not require a password because it contains a public certificate, not a private key."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "JKS trust stores"
msgstr "JKS 信托商店"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"JKS truststores are single files containing multiple certificates.\n"
"You can use the alias to select the appropriate certificate when multiple certificates are present.\n"
"However, avoid using the JKS format as it is less secure than PKCS12."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "To configure a JKS truststore, use the following properties:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the truststore.\n"
"However, unlike keystores, the alias does not require a password because it contains a public certificate, not a private key."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Instead of passing the truststore password in the configuration, you can use a credential provider.\n"
"A credential provider allows you to retrieve passwords and other credentials.\n"
"Note that the credential provider is used only if the password is not set in the configuration."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The credential provider can only be used with PKCS12 and JKS trust stores."
msgstr "凭据提供程序只能与 PKCS12 和 JKS 信任存储一起使用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Other properties"
msgstr "其他财产"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "While key stores and trust stores are the most important properties, there are other properties you can use to configure TLS."
msgstr "虽然密钥存储和信任存储是最重要的属性，但你还可以使用其他属性来配置 TLS。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "While the following examples use the _default_ configuration, you can use the _named_ configuration by prefixing the properties with the configuration's name."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Cipher suites"
msgstr "密码套件"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Cipher suites are the list of ciphers that you can use during the TLS handshake.\n"
"You can configure the ordered list of enabled cipher suites.\n"
"If not configured, a reasonable default is selected from the built-in ciphers.\n"
"However, when specified, your configuration precedes the default suite defined by the SSL engine in use."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the cipher suites, use the following property:"
msgstr "要配置密码套件，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "TLS protocol versions"
msgstr "TLS 协议版本"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The TLS protocol versions are the list of protocols that can be used during the TLS handshake.\n"
"Enabled TLS protocol versions are specified as an ordered list separated by commas.\n"
"The relevant configuration property is `quarkus.tls.protocols` (or `quarkus.tls.<name>.protocols` for named TLS configurations).\n"
"It defaults to `TLSv1.3, TLSv1.2` if not configured."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "The supported values are: `TLSv1`, `TLSv1.1`, `TLSv1.2`, `TLSv1.3`."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To only enable `TLSv1.3`, configure the following property:"
msgstr "要只启用 `TLSv1.3` ，请配置以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Handshake timeout"
msgstr "握手超时"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"When a TLS connection is established, the handshake phase is the first step.\n"
"During this phase, the client and server exchange information to establish the connection, typically the cipher suite, the TLS protocol version, the certification validation, and so on."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the timeout for the handshake phase, use the following property:"
msgstr "要配置握手阶段的超时，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "ALPN"
msgstr "ALPN"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Application-Layer Protocol Negotiation (ALPN) is a TLS extension that allows the client and server to negotiate which protocol they will use for communication during the TLS handshake.\n"
"ALPN enables more efficient communication by allowing the client to indicate its preferred application protocol to the server before establishing the TLS connection."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "This helps in scenarios like HTTP/2, where multiple protocols might be available, allowing for faster protocol selection."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"ALPN is enabled by default.\n"
"To disable it, use the following property:"
msgstr "ALPN 默认已启用。要禁用它，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Certificate Revocation List (CRL)"
msgstr "证书吊销列表 (CRL)"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"A Certificate Revocation List (CRL) is a list of certificates the issuing Certificate Authority (CA) revoked before their scheduled expiration date.\n"
"When a certificate is compromised, no longer needed, or deemed invalid, the CA adds it to the CRL to inform relying parties not to trust it anymore."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"You can configure the CRL with the list of certificate files you do not trust anymore.\n"
"Two formats are allowed: DER and PKCS#7 (P7B)."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When using the DER format, you must pass DER-encoded CRLs."
msgstr "使用 DER 格式时，必须传递 DER 编码的 CRL。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "When using the PKCS#7 format, you must pass the PKCS#7 `SignedData` object, with the only significant field being `crls`."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the CRL, use the following property:"
msgstr "要配置 CRL，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trusting all certificates and hostname verification"
msgstr "信任所有证书和主机名验证"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "These two properties should not be used in production."
msgstr "这两个属性不应在生产中使用。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "You can configure your TLS connection to trust all certificates and disable the hostname verification."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Note that these are two different processes:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Trusting all certificates ignores the certificate validation, so all certificates are trusted.\n"
"This method is useful for testing with self-signed certificates, but it should not be used in production."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Hostname verification is the process of verifying the server's identity.\n"
"It is useful to prevent man-in-the-middle attacks and often defaults to `HTTPS` or `LDAPS`."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To trust all certificates, use the following property:"
msgstr "要信任所有证书，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To disable the hostname verification, use the following property:"
msgstr "要禁用主机名验证，请使用以下属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following table lists the supported properties:"
msgstr "下表列出了支持的属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The registry API"
msgstr "注册表 API"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "While extensions automatically use the TLS registry, you can also access the TLS configuration programmatically through the registry API."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"To access the TLS configuration, inject the `TlsConfigurationRegistry` bean.\n"
"You can retrieve a named TLS configuration by calling `get(\"<NAME>\")` or the default configuration by calling `getDefault()`."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `TlsConfiguration` object contains the key stores, trust stores, cipher suites, protocols, and other properties.\n"
"It also provides a way to create an `SSLContext` from the configuration."
msgstr "`TlsConfiguration` 对象包含密钥存储、信任存储、密码套件、协议和其他属性。它还提供了从配置中创建 `SSLContext` 的方法。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "As Vert.x is omnipresent in Quarkus, you can also use the `TlsConfiguration` object to configure the Vert.x client or server such as `KeyCertOptions`, `TrustOptions`, and so on."
msgstr "由于 Vert.x 在 Quarkus 中无处不在，因此也可以使用 `TlsConfiguration` 对象来配置 Vert.x 客户端或服务器，如 `KeyCertOptions` , `TrustOptions` 等。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Registering a certificate from an extension"
msgstr "从分机注册证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"This section is only for extension developers.\n"
"An extension can register a certificate in the TLS registry.\n"
"This is useful when an extension needs to provide a certificate to the application or provides a different format."
msgstr "本部分仅供扩展开发人员使用。扩展可以在 TLS 注册表中注册证书。这在扩展需要向应用程序提供证书或提供不同格式的证书时非常有用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To achieve this, the extension _processor_ must produce a `TlsCertificateBuildItem`.\n"
"A `TlsCertificateBuildItem` is composed of a name and a `CertificateSupplier`."
msgstr "为此，扩展 _处理器_ 必须生成 `TlsCertificateBuildItem` 。 `TlsCertificateBuildItem` 由名称和 `CertificateSupplier` 组成。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The certificate supplier is a runtime object generally retrieved by using a recorder method.\n"
"Here is an example of a certificate supplier:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Startup checks"
msgstr "启动检查"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "When the application starts, the TLS registry performs several checks to ensure the configuration is correct:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Key stores and trust stores are accessible."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Aliases are available and accessible in the key stores and trust stores."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Certificates are valid."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Cipher suites and protocols are valid."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Certificate Revocation Lists (CRLs) are valid."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "If any of these checks fail, the application will not start."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Reloading certificates"
msgstr "重装证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `TlsConfiguration` obtained from the `TLSConfigurationRegistry` includes a mechanism for reloading certificates.\n"
"The `reload` method refreshes the key stores and trust stores, typically by reloading them from the file system."
msgstr "从 `TLSConfigurationRegistry` 获取的 `TlsConfiguration` 包括重新加载证书的机制。 `reload` 方法刷新密钥存储和信任存储，通常是从文件系统重新加载它们。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The reload operation is not automatic and must be triggered manually.\n"
"Additionally, the `TlsConfiguration` implementation must support reloading (which is the case for the configured certificate)."
msgstr "重载操作不是自动的，必须手动触发。此外， `TlsConfiguration` 实现必须支持重载（配置的证书就是这种情况）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `reload` method returns a `boolean` indicating whether the reload was successful.\n"
"A value of `true` means the reload operation was successful, not necessarily that there were updates to the certificates."
msgstr "`reload` 方法返回 `boolean` ，表示重载是否成功。 `true` 表示重载操作成功，但不一定表示证书有更新。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"After a `TlsConfiguration` has been reloaded, servers and clients using this configuration may need to perform specific actions to apply the new certificates.\n"
"The recommended approach is to fire a CDI event (`CertificateReloadedEvent`) that servers and clients can listen to and make the necessary changes:"
msgstr "`TlsConfiguration` 重新加载后，使用此配置的服务器和客户端可能需要执行特定操作以应用新证书。建议的方法是触发一个 CDI 事件 ( `CertificateReloadedEvent` )，服务器和客户端可以监听该事件并进行必要的更改："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "These APIs provide a way to implement custom certificate reloading."
msgstr "这些应用程序接口提供了一种实现自定义证书重载的方法。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Periodic reloading"
msgstr "定期重装"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The TLS registry includes a built-in mechanism for periodically checking the file system for changes and reloading certificates.\n"
"You can configure periodic certificate reloading by using properties.\n"
"The `reload-period` property specifies the interval for reloading certificates and will emit a `CertificateReloadedEvent` each time certificates are reloaded."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "For each named configuration, you can set a specific reload period:"
msgstr "对于每个已命名的配置，您都可以设置特定的重载周期："

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Remember that the impacted server and client may need to listen to the `CertificateReloadedEvent` to apply the new certificates.\n"
"This is automatically done for the Quarkus HTTP server, including the management interface if it is enabled."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using Kubernetes secrets or cert-manager"
msgstr "使用 Kubernetes 秘密或证书管理器"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When running in Kubernetes, you can use Kubernetes secrets to store the key stores and trust stores."
msgstr "在 Kubernetes 中运行时，可以使用 Kubernetes secrets 来存储密钥存储区和信任存储区。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using Kubernetes secrets"
msgstr "使用 Kubernetes 的秘密"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"To use Kubernetes secrets, you need to create a secret with the key stores and trust stores.\n"
"Consider the following secret as an example:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "The easiest way to use these certificates is to mount the secret as a volume in the pod:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Then, you can configure the TLS registry to use the certificates:"
msgstr "然后，就可以配置 TLS 注册表以使用证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can combine this with the periodic reloading to automatically reload the certificates when they change."
msgstr "您可以将此功能与定期重新加载功能相结合，在证书发生变化时自动重新加载证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using cert-manager"
msgstr "使用证书管理器"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"When running in Kubernetes, you can use cert-manager to generate and renew certificates automatically.\n"
"Cert-manager produces a secret containing the keystores and truststores.\n"
"Configuring the TLS registry is the same as when using Kubernetes secrets.\n"
"The generated secret includes the following files:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`tls.crt` for the certificate"
msgstr "`tls.crt` 证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`tls.key` for the private key"
msgstr "`tls.key` 的私钥"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`ca.crt` for the CA certificate (if needed)"
msgstr "`ca.crt` CA 证书（如需要）"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To handle the renewal, you can use the periodic reloading mechanism:"
msgstr "要处理更新，可以使用定期重新加载机制："

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Working with OpenShift serving certificates"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"When running your application in OpenShift, you can leverage the https://docs.openshift.com/container-platform/4.16/security/certificates/service-serving-certificate.html[OpenShift serving certificates] to generate and renew TLS certificates automatically.\n"
"The Quarkus TLS registry can use these certificates and Certificate Authority (CA) files to handle HTTPS traffic and validate certificates securely."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Acquiring a certificate"
msgstr "获取证书"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"To have OpenShift generate a certificate, annotate an existing _Service_ object.\n"
"The generated certificate will be stored in a secret, which you can then mount in your pod."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Consider the following _Service_ example:"
msgstr "请看下面的 _服务_ 示例："

#: _versions/main/guides/tls-registry-reference.adoc
msgid "The annotation `service.beta.openshift.io/serving-cert-secret-name` instructs OpenShift to generate a certificate and store it in a secret named `my-tls-secret`."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "To use the stored certificate:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Add this annotation to your already running service:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Mount the secret as a volume in your pod by updating your _Deployment_ configuration:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Define a volume to mount the secret. Use the same name as the secret declared above."
msgstr "定义一个卷来挂载该秘密文件。使用与上面声明的秘密相同的名称。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Set up the keystore with the paths to the certificate and private key. This can be configured using environment variables or configuration files. Here, we use environment variables. OpenShift serving certificates always create the `tls.crt` and `tls.key` files."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Mount the secret in the container. Ensure the path matches the one used in the configuration (here `/etc/tls`)."
msgstr "将秘密挂载到容器中。确保路径与配置中使用的路径一致（此处为 `/etc/tls` ）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the port to serve HTTPS."
msgstr "配置端口以提供 HTTPS 服务。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"By setting the `quarkus.tls.key-store.pem.acme.cert` and `quarkus.tls.key-store.pem.acme.key` variables (or their environment variable variant as done above), the TLS registry will use the certificate and private key from the secret.\n"
"This configures the default keystore for the Quarkus HTTP server, allowing it to use the certificate.\n"
"For information about using this certificate in a named configuration, see <<referencing-a-tls-configuration>>."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Deploy your application to use the certificate generated by OpenShift.\n"
"This will make the service available over HTTPS."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trusting the Certificate Authority (CA)"
msgstr "信任证书颁发机构 (CA)"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Now that your service uses a certificate issued by OpenShift, configure your client applications to trust this certificate.\n"
"To do so, create a ConfigMap that holds the CA certificate, and then configure the pod to mount it."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "As demonstrated below with a Quarkus REST client, the same principle applies to any client."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Start by defining an _empty_ ConfigMap, which will be populated with the CA certificate:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `service.beta.openshift.io/inject-cabundle` annotation is used to inject the CA certificate into the ConfigMap.\n"
"Note that the ConfigMap initially has no data — it is empty.\n"
"During its processing, OpenShift injects the CA certificate into the ConfigMap in the `service-ca.crt` file."
msgstr "`service.beta.openshift.io/inject-cabundle` 注解用于将 CA 证书注入 ConfigMap。请注意，ConfigMap 最初没有数据，是空的。在处理过程中，OpenShift 会将 CA 证书注入 `service-ca.crt` 文件中的 ConfigMap。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Mount the ConfigMap by adding a volume and mounting it in your _Deployment_ configuration:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Mount the ConfigMap in the container. Ensure the path matches the one used in the configuration (here `/deployments/tls`)."
msgstr "将 ConfigMap 挂载到容器中。确保路径与配置中使用的路径一致（此处为 `/deployments/tls` ）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Define a volume to mount the ConfigMap and reference the ConfigMap that receives the CA certificate."
msgstr "定义挂载 ConfigMap 的卷，并引用接收 CA 证书的 ConfigMap。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Configure the REST client to use this CA certificate."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Consider the following REST client interface:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Configure the base URI and the configuration key.\n"
"The name must be in the format `<service-name>.<namespace>.svc`; otherwise, the certificate will not be trusted.\n"
"Ensure that the `configKey` is also configured."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Configure the REST client to trust the CA certificate generated by OpenShift:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the `hero` REST client with the TLS configuration named `my-service-tls`."
msgstr "使用名为 `my-service-tls` 的 TLS 配置配置 `hero` REST 客户端。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Set up the `my-service-tls` TLS configuration, specifically the truststore with the CA certificate.\n"
"Ensure the path matches the one used in the Kubernetes _Deployment_ configuration.\n"
"The file is always named `service-ca.crt`."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Certificate renewal"
msgstr "证书续期"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"OpenShift automatically renews the certificates it generates.\n"
"When the certificate is renewed, the secret is updated with the new certificate and private key."
msgstr "OpenShift 会自动更新其生成的证书。证书更新时，密钥会用新证书和私钥更新。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To ensure your application uses the new certificate, you can leverage the Quarkus TLS registry's periodic reloading feature.\n"
"By setting the `reload-period` property, the TLS registry will periodically check the key stores and trust stores for changes and reload them if needed:"
msgstr "为确保应用程序使用新证书，可以利用 Quarkus TLS 注册表的定期重载功能。通过设置 `reload-period` 属性，TLS 注册表会定期检查密钥存储区和信任存储区的变化，并在需要时重新加载："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"You can also implement a custom mechanism to reload the certificates when the secret is updated.\n"
"See <<reloading-certificates>> for more information."
msgstr "您也可以采用自定义机制，在更新秘密时重新加载证书。更多信息，请参阅 <<reloading-certificates>> 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Quarkus CLI commands and development CA (Certificate Authority)"
msgstr "Quarkus CLI 命令和开发 CA（证书颁发机构）"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry provides CLI commands to generate a development CA and trusted certificates.\n"
"This avoids having to use self-signed certificates locally."
msgstr "TLS 注册表提供 CLI 命令，用于生成开发 CA 和可信证书。这就避免了在本地使用自签名证书。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"In most cases, you generate the Quarkus Development CA once and then generate certificates signed by this CA.\n"
"The Quarkus Development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"It is only valid for development purposes and only trusted on the local machine.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`, and installed in the system truststore."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Understanding self-signed versus CA-signed certificates"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When developing with TLS, you can use two types of certificates:"
msgstr "使用 TLS 开发时，可以使用两种类型的证书："

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"**Self-signed certificate**: The certificate is signed by the same entity that uses it.\n"
"It is not trusted by default.\n"
"This type of certificate is typically used when a Certificate Authority (CA) is unavailable or you want a simple setup.\n"
"It is not suitable for production and should only be used for development."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"**CA-signed certificate**: The certificate is signed by a Certificate CA, a trusted entity.\n"
"This certificate is trusted by default and is the standard choice for production environments."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"While you can use a self-signed certificate for local development, it has limitations.\n"
"Browsers and tools like `curl`, `wget`, and `httpie` typically do not trust self-signed certificates, requiring manual import."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"To avoid this issue, you can use a development CA to sign certificates and install the CA in the system truststore.\n"
"This ensures that the system trusts all certificates signed by the CA."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Quarkus simplifies the generation of a development CA and the certificates that are signed by this CA."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generate a development CA"
msgstr "生成开发 CA"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"Note that the generated CA is only valid for development purposes and can only be trusted on the local machine."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Generate a development CA:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"`--install` installs the CA in the system truststore.\n"
"Windows, Mac, and Linux (Fedora and Ubuntu) are supported.\n"
"However, depending on your browser, you might need to import the generated CA manually.\n"
"Refer to your browser's documentation for more information.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"`--renew` renews the CA if it already exists.\n"
"When this option is used, the private key is changed, so you need to regenerate the certificates signed by the CA.\n"
"If the CA expires, it will automatically renew without requiring the `--renew` option."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "`--truststore` also generates a PKCS12 truststore containing the CA certificate."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "When installing the certificate, your system might ask for your password to install the certificate in the system truststore or ask for confirmation in a dialog on Windows."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "On Windows, run as administrator from an elevated terminal to install the CA in the system truststore."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generate a trusted (signed) certificate"
msgstr "生成可信（签名）证书"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"After installing the Quarkus Development CA, you can generate a trusted certificate.\n"
"This certificate will be signed by the Quarkus Development CA and trusted by your system."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "This command generates a certificate signed by the Quarkus Development CA, which your system will trust if properly installed or imported."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The certificate is stored in `./.certs/`.\n"
"Two files are generated:"
msgstr "证书存储在 `./.certs/` 中。生成两个文件："

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"`$NAME-keystore.p12`: Contains the private key and the certificate.\n"
"It is password-protected."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "`$NAME-truststore.p12`: Contains the CA certificate, which you can use as a truststore, for example, for testing."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Additional options are available:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"A `.env` file is also generated when generating the certificate, making the Quarkus dev mode aware of these certificates.\n"
"So, then, if you run your application in dev mode, it will use these certificates:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Now, you can open the Dev UI using HTTPS: `https://localhost:8443/q/dev` or issue a request using `curl`:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "A self-signed certificate is generated if the Quarkus Development CA is not installed."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generating a self-signed certificate"
msgstr "生成自签名证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Even if the Quarkus Development CA is installed, you can generate a self-signed certificate:"
msgstr "即使安装了 Quarkus 开发 CA，也可以生成自签名证书："

#: _versions/main/guides/tls-registry-reference.adoc
msgid "This generates a self-signed certificate that the Quarkus Development CA does not sign."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Uninstalling the Quarkus Development CA"
msgstr "卸载 Quarkus 开发 CA"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Uninstalling the Quarkus Development CA from your system depends on your OS."
msgstr "从系统中卸载 Quarkus Development CA 取决于操作系统。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Windows"
msgstr "在 Windows 上删除 CA 证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To delete the CA certificate on Windows, use the following commands from a Powershell terminal with administrator rights:"
msgstr "要在 Windows 上删除 CA 证书，请在具有管理员权限的 Powershell 终端上使用以下命令："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Replace `$Serial_Number` with the serial number of the CA certificate."
msgstr "将 `$Serial_Number` 替换为 CA 证书的序列号。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Linux"
msgstr "在 Linux 上删除 CA 证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Fedora, you can use the following command:"
msgstr "在 Fedora 上，您可以使用以下命令："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Ubuntu, you can use the following command:"
msgstr "在 Ubuntu 上，您可以使用以下命令："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Mac"
msgstr "在 Mac 上删除 CA 证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Mac, you can use the following command:"
msgstr "在 Mac 上，您可以使用以下命令："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Automatic certificate management with Let's Encrypt"
msgstr "使用 Let's Encrypt 自动管理证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "https://letsencrypt.org[Let's Encrypt] is a free, automated certificate authority provided by https://www.abetterinternet.org/[Internet Security Research Group]."
msgstr "link:https://letsencrypt.org[Let's Encrypt] 是 link:https://www.abetterinternet.org/[Internet Security Research Group] 提供的免费自动证书颁发机构。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Let's Encrypt uses https://datatracker.ietf.org/doc/html/rfc8555[Automated certificate management environment (ACME) protocol] to support automatic certificate issuance and renewal.\n"
"To learn more about Let's Encrypt and ACME, see https://letsencrypt.org/docs/[Let's Encrypt documentation]."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The TLS registry extension allows a CLI ACME client to issue and renew Let's Encrypt certificates.\n"
"Your application uses this TLS registry extension to resolve ACME protocol challenges."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Follow the steps below to have your Quarkus application prepared and automatically updated with new and renewed Let's Encrypt certificates."
msgstr "请按照以下步骤准备您的 Quarkus 应用程序，并使用新的和更新的 Let's Encrypt 证书进行自动更新。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Ensure that a fully resolvable DNS domain name is available that you can use to access your application.\n"
"You can use this domain name to create a Let's Encrypt account and support Let's Encrypt ACME challenges to prove that you own this domain.\n"
"You can use https://ngrok.com/[ngrok] to start experimenting with the Quarkus Let's Encrypt ACME feature; for more information, see the <<lets-encrypt-ngrok>> section below."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Your Quarkus HTTPS application must use a _build-time_ property to enable a Let's Encrypt ACME challenge route:"
msgstr "您的 Quarkus HTTPS 应用程序必须使用 _构建时_ 属性来启用 Let's Encrypt ACME 挑战路由："

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The TLS registry can manage the challenge process from either the main HTTP interface or the management interface.\n"
"Using a management interface is **strongly** recommended to let Quarkus deal with ACME challenge configuration separately from the main application's deployment and security requirements:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "The challenge is served from the primary HTTP interface (accessible from your DNS domain name)."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Do not start your application yet."
msgstr "先不要开始申请。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Application preparation"
msgstr "申请准备"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Before you request a Let's Encrypt certificate, you must run the TLS registry Let's Encrypt CLI `prepare` command to prepare your application:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Make sure you run a prepare command in the root directory of your application."
msgstr "确保在应用程序的根目录下运行 prepare 命令。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The `prepare` command does the following:"
msgstr "`prepare` 命令执行以下操作："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Creates a `.letsencrypt` folder in your application's root directory"
msgstr "在应用程序根目录下创建 `.letsencrypt` 文件夹"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Creates a self-signed domain certificate and private key for your application configured in the previous <<lets-encrypt-prerequisites>> step to be able to start and accept HTTPS requests"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Creates a `.env` configuration file in your application's root directory and configures the application to use the self-signed domain certificate and private key (until we get the Let's Encrypt certificate)"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following snippet shows an example of the generated `.env` file:"
msgstr "下面的代码段显示了生成 `.env` 文件的示例："

#: _versions/main/guides/tls-registry-reference.adoc
msgid "The `.env` file does not contain the `quarkus.tls.lets-encrypt.enabled` and `quarkus.management.enabled` properties as they are build-time properties that require a rebuild of the application."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Start your application"
msgstr "开始申请"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can start your application:"
msgstr "您可以开始申请："

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Access your application endpoint by using `https://your-domain-name:8443/`; for example, `https://your-domain-name:8443/hello`, and accept a self-signed certificate in the browser."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Next, keep the application running and request your first Let's Encrypt certificate."
msgstr "接下来，继续运行应用程序，申请第一份 Let's Encrypt 证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Issue certificate"
msgstr "颁发证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "From the application directory, run the `issue-certificate` command to acquire your first Let's Encrypt certificate:"
msgstr "从应用程序目录运行 `issue-certificate` 命令，获取第一份 Let's Encrypt 证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Set your domain name."
msgstr "设置域名"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Provide your contact email address that Let's Encrypt can use to contact you in case of any issues with your Let's Encrypt account."
msgstr "提供您的联系电子邮件地址，以便 Let's Encrypt 在您的 Let's Encrypt 账户出现任何问题时与您联系。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Set your application management URL, which you can use to handle ACME challenges.\n"
"Use `https://localhost:8443/` if you choose not to enable a management router in the <<lets-encrypt-prerequisites>> step."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "During the processing of the `issue-certificate` command, the TLS registry CLI performs the following tasks:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Checks if the application is prepared to serve the challenge."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Creates and records Let's Encrypt account information."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Issues a Let's Encrypt certificate request."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Interacts with the Quarkus application to resolve ACME challenges."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Once the Let's Encrypt certificate chain and private key have been successfully acquired, they are converted to PEM format and copied to your application's `.letsencrypt` folder.\n"
"The TLS registry is informed that a new certificate and private key are ready and reloads them automatically."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Now, access your application's endpoint using `https://your-domain-name:8443/` again.\n"
"Confirm in the browser that the Let's Encrypt certificate authority is now signing your domain certificate."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Note that currently, the `issue-certificate` command implicitly creates a Let's Encrypt account to make it easy for users to get started with the ACME protocol.\n"
"Support for the Let's Encrypt account management will evolve further."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Renew certificate"
msgstr "更新证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Renewing certificates is similar to issuing the first certificate, but it requires an existing account created during the <<lets-encrypt-issue-certificate>> step."
msgstr "证书续期与签发第一份证书类似，但需要使用在 <<lets-encrypt-issue-certificate>> 步骤中创建的现有账户。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Run the following command to renew your Let's Encrypt certificate:"
msgstr "运行以下命令更新 Let's Encrypt 证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "During this command, TLS registry CLI reads a Let's Encrypt account information recorded during the <<lets-encrypt-issue-certificate>> step, issues a Let's Encrypt certificate request, and communicates with a Quarkus application to have ACME challenges resolved."
msgstr "在该命令中，TLS 注册表 CLI 会读取 <<lets-encrypt-issue-certificate>> 步骤中记录的 Let's Encrypt 账户信息，发出 Let's Encrypt 证书请求，并与 Quarkus 应用程序通信，以解决 ACME 挑战。"

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Once the Let's Encrypt certificate chain and private key have been successfully renewed, they are converted to PEM format and copied to your application's `.letsencrypt` folder.\n"
"The TLS registry is notified when a new certificate and private key are ready, and it automatically reloads them."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Use ngrok for testing"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "https://ngrok.com/[ngrok] can be used to provide a secure HTTPS tunnel to your application running on localhost, and make it easy to test HTTPS based applications."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "ngrok provides a simplified way of getting started with the Quarkus Let's Encrypt ACME feature."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"The first thing you have to do with ngrok is to ask it to reserve a domain.\n"
"You can use https://github.com/quarkiverse/quarkus-ngrok[Quarkiverse ngrok] in dev mode or reserve it directly in the ngrok dashboard."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid ""
"Unfortunately, you cannot use your ngrok domain to test the Quarkus Let's Encrypt ACME feature immediately.\n"
"This is because ngrok itself uses Let's Encrypt and intercepts ACME challenges that are meant to be handled by the Quarkus application instead."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Therefore, remove the ngrok Let's Encrypt certificate policy from your ngrok domain:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "`YOUR-RESERVED-DOMAIN-ID` is your reserved domain's id which starts from `rd_`, you can find it in the https://dashboard.ngrok.com/cloud-edge/domains[ngrok dashboard domains section]."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Now, because ngrok only forwards ACME challenges over HTTP, start ngrok as follows:"
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
msgid "`8080` is the localhost HTTP port your application is listening on."
msgstr ""

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can now test the Quarkus Let's Encrypt ACME feature from your local machine."
msgstr "现在你可以在本地机器上测试 Quarkus Let's Encrypt ACME 功能了。"
