msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "TLS registry reference"
msgstr "TLS 注册表参考"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS Registry is a Quarkus extension that centralizes TLS configuration, making it easier to manage and maintain secure connections across your application.\n"
"When defining TLS configurations in a single centralized location, you can use the TLS Registry to reference these configurations from multiple components within the application, which ensures consistency and reduces the potential for configuration errors."
msgstr "TLS 注册表是 Quarkus 的一个扩展功能，可以集中管理 TLS 配置，从而更轻松地管理和维护应用程序中的安全连接。在单个集中位置定义 TLS 配置时，可以使用 TLS 注册表从应用程序中的多个组件引用这些配置，从而确保一致性并减少配置错误的可能性。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS Registry consolidates settings and supports multiple named configurations.\n"
"Therefore, you can tailor TLS settings for different application parts.\n"
"This flexibility is particularly useful when different components require distinct security configurations."
msgstr "TLS 注册表整合了各种设置，并支持多种命名配置。因此，您可以为不同的应用部分量身定制 TLS 设置。当不同的组件需要不同的安全配置时，这种灵活性尤其有用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS Registry extension is automatically included in your project when you use compatible extensions, such as Quarkus REST, gRPC\n"
", or Reactive Routes\n"
".\n"
"As a result, applications that use the TLS Registry can be ready to handle secure communications out of the box.\n"
"TLS Registry also provides features like automatic certificate reloading, Let's Encrypt (ACME) integration, Kubernetes Cert-Manager support, and compatibility with various keystore formats, such as PKCS12, PEM, and JKS."
msgstr "当你使用兼容的扩展（如 Quarkus REST、gRPC 或 Reactive Routes）时，TLS Registry 扩展会自动包含在你的项目中。因此，使用 TLS Registry 的应用程序开箱即可处理安全通信。TLS Registry 还提供了自动证书重载、Let's Encrypt (ACME) 集成、Kubernetes Cert-Manager 支持以及与 PKCS12、PEM 和 JKS 等各种密钥存储格式兼容等功能。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using the TLS registry"
msgstr "使用 TLS 注册表"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To configure a TLS connection, including key and truststores, use the `+quarkus.tls.*+` properties.\n"
"These properties are required for:"
msgstr "要配置 TLS 连接，包括密钥和信任存储，请使用 `quarkus.tls.*` 属性。以下情况需要使用这些属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Setting up the default TLS configuration, defined directly under `+quarkus.tls.*+`"
msgstr "设置默认 TLS 配置，直接在 `quarkus.tls.*`"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Creating separate, named configurations by using `+quarkus.tls.<name>.*+`.\n"
"By specifying the `+quarkus.tls.<name>.*+` properties, you can adapt the TLS settings for a specific component."
msgstr "使用 `quarkus.tls.<name>.*` 创建单独命名的配置。通过指定 `quarkus.tls.<name>.*` 属性，可以调整特定组件的 TLS 设置。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuring HTTPS for a HTTP server"
msgstr "为 HTTP 服务器配置 HTTPS"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To ensure secure client-server communication, the client is often required to verify the server's authenticity."
msgstr "为确保客户端与服务器通信的安全性，通常要求客户端验证服务器的真实性。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The server must use a keystore that contains its certificate and private key"
msgstr "服务器必须使用包含证书和私钥的密钥库"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The client needs to be configured with a truststore to validate the server's certificate"
msgstr "客户端需要配置一个信任库，以验证服务器的证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"During the TLS handshake, the server presents its certificate, which the client then validates.\n"
"This prevents man-in-the-middle attacks and secures data transmission."
msgstr "在 TLS 握手过程中，服务器会出示其证书，然后由客户端进行验证。这可以防止中间人攻击，确保数据传输安全。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The following sections guide you through setting up HTTPS by using PEM or PKCS12 keystore types.\n"
"In addition, they provide information on how to use named configurations to specify and manage multiple TLS setups at once, which makes it possible for you to define distinct settings for each."
msgstr "以下章节将指导你使用 PEM 或 PKCS12 密钥存储类型设置 HTTPS。此外，这些章节还介绍了如何使用命名配置来同时指定和管理多个 TLS 设置，这样就可以为每个设置定义不同的设置。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Use one of the following configuration examples based on your keystore type:"
msgstr "根据密钥存储类型使用以下配置示例之一："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*By using PEM files:*"
msgstr "*使用 PEM 文件：*"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*By using a `p12` (PKCS12) keystore:*"
msgstr "*使用<code>p12</code> (PKCS12) 密钥存储：*"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*Distinguishing multiple configurations with names:*"
msgstr "*用名称区分多种配置：*"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuring HTTPS for a client"
msgstr "为客户端配置 HTTPS"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following example configures a gRPC client named \"hello\" to use HTTPS with a truststore from the default TLS configuration:"
msgstr "下面的示例将配置名为 \"hello \"的 gRPC 客户端使用带有默认 TLS 配置信任存储的 HTTPS："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuring mTLS"
msgstr "配置 mTLS"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To set up mutual TLS (mTLS) in your {project-name} application, configure the server and the client by creating and managing both a keystore and a truststore for each:"
msgstr "要在 {project-name} 应用程序中设置互用 TLS (mTLS)，需要为服务器和客户端分别创建和管理密钥库和信任库："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*Server keystore*: Contains the server's certificate and private key."
msgstr "*服务器密钥库* ：包含服务器证书和私钥。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*Client keystore*: Contains the client's certificate and private key."
msgstr "*客户端密钥库* ：包含客户端证书和私钥。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*Server truststore*: Stores the client's certificate for authenticating the client."
msgstr "*服务器信任库* ：存储客户端证书，用于验证客户端身份。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*Client truststore*: Stores the server's certificate for authenticating the server."
msgstr "*客户端信任库* ：存储用于验证服务器的服务器证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "An example configuration for specifying keystores and truststores:"
msgstr "指定密钥库和信任库的配置示例："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This configuration enables mTLS by ensuring that both the server and client validate each other's certificates, which provides an additional layer of security."
msgstr "这种配置通过确保服务器和客户端验证彼此的证书来启用 mTLS，从而提供额外的安全层。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Referencing a TLS configuration"
msgstr "引用 TLS 配置"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To reference an example  _named_ configuration that you created by using the `quarkus.tls.<name>.*` properties as explained in <<using-the-tls-registry>>\n"
", use the `tls-configuration-name` property as shown in the following examples:"
msgstr "如 <<using-the-tls-registry>> 中所述，要引用通过使用 `quarkus.tls.<name>.*` 属性创建的 _命名_ 配置示例，请使用 `tls-configuration-name` 属性，如以下示例所示："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Example configuration for the core HTTP server:"
msgstr "核心 HTTP 服务器的配置示例："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Example configuration for a gRPC client:"
msgstr "gRPC 客户端配置示例："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuring TLS"
msgstr "配置 TLS"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"TLS configuration primarily involves managing keystores and truststores.\n"
"The specific setup depends on the format used, such as PEM, P12, or JKS."
msgstr "TLS 配置主要涉及管理密钥库和信任库。具体设置取决于所使用的格式，如 PEM、P12 或 JKS。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following sections outline the various properties available for configuring TLS."
msgstr "以下各节概述了可用于配置 TLS 的各种属性。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Key stores"
msgstr "主要商店"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Key stores are used to store private keys and the certificates.\n"
"They are mainly used on the server side but can also be used on the client side when mTLS is used."
msgstr "密钥存储用于存储私钥和证书。它们主要用于服务器端，但在使用 mTLS 时也可用于客户端。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PEM keystores"
msgstr "PEM 密钥存储"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Privacy Enhanced Mail (PEM) keystores are composed of a list of file pairs:"
msgstr "隐私增强邮件 (PEM) 密钥存储由一系列文件对组成："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*The certificate file* - a `.crt` or `.pem` file"
msgstr "*证书文件* - `.crt` 或 `.pem` 文件"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "*The private key file* - often a `.key` file"
msgstr "*私钥文件* - 通常是 `.key` 文件"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a PEM keystore:"
msgstr "配置 PEM 密钥存储："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"In most cases, you only need a single pair consisting of a certificate and a private key.\n"
"Even if the certificate is part of a certificate chain, it includes only one private key that corresponds to the end-entity certificate."
msgstr "在大多数情况下，你只需要由证书和私钥组成的单一配对。即使证书是证书链的一部分，它也只包括一个与终端实体证书相对应的私钥。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When multiple pairs are configured, the selection of one of the configured pairs of certificates and private keys is based on Server Name Indication (SNI).\n"
"The client sends the name of the server to which the client is attempting to connect, and the server selects the appropriate pair of certificates and private keys.\n"
"To use this feature, ensure that xref:./tls-registry-reference.adoc#sni[SNI] is enabled on both the client and server."
msgstr "如果配置了多对证书和私钥，则根据服务器名称指示（SNI）选择其中一对证书和私钥。客户端发送试图连接的服务器名称，服务器就会选择相应的证书和私钥对。要使用此功能，请确保客户端和服务器都启用了 xref:./tls-registry-reference.adoc#sni[SNI] 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When configuring multiple key pairs or certificate pairs, the server executes the configured pairs in a lexicographical order of their names by default, as demonstrated with `store.pem.a` and `store.pem.b` in the previous example.\n"
"The pair with the lowest lexicographical order is executed first.\n"
"To change this, you can define the order by using the `quarkus.tls.key-store.pem.order` property.\n"
"For example, `quarkus.tls.key-store.pem.order=b,c,a`."
msgstr "配置多个密钥对或证书对时，服务器默认按名称的词序执行配置的密钥对，如上例 `store.pem.a` 和 `store.pem.b` 所示。具有最低词典顺序的配对将首先执行。要更改顺序，可以使用 `quarkus.tls.key-store.pem.order` 属性定义顺序。例如， `quarkus.tls.key-store.pem.order=b,c,a` ."

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This setting is important when using SNI, because it uses the first specified pair as the default."
msgstr "该设置在使用 SNI 时非常重要，因为它会使用第一个指定的配对作为默认值。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PKCS12 keystores"
msgstr "PKCS12 密钥存储"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PKCS12 keystores are single files that contain the certificate and the private key."
msgstr "PKCS12 密钥存储是包含证书和私钥的单一文件。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a PKCS12 keystore:"
msgstr "配置 PKCS12 密钥存储："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`.p12` files are password-protected, so you need to provide the password to open the keystore."
msgstr "`.p12` 文件受密码保护，因此需要提供密码才能打开密钥存储。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"These files can include more than one certificate and private key.\n"
"If this is the case, take either of the following actions:"
msgstr "这些文件可能包含多个证书和私人密钥。如果是这种情况，请执行以下任一操作："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Provide and configure the alias of the certificate and the private key you want to use:"
msgstr "提供并配置要使用的证书别名和私钥："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Alternatively, use SNI to select the appropriate certificate and private key.\n"
"Note that all keys must use the same password."
msgstr "或者，使用 SNI 选择适当的证书和私人密钥。请注意，所有密钥必须使用相同的密码。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "JKS keystores"
msgstr "JKS 密钥库"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "JKS keystores are single files that contain the certificate and the private key for the server or client, used to authenticate and establish secure communications in TLS/SSL connections."
msgstr "JKS 密钥库是包含服务器或客户端证书和私钥的单一文件，用于在 TLS/SSL 连接中验证和建立安全通信。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"JKS is an old but still widely used Java-specific format.\n"
"However, to work with this format, you must use specific, and nowadays also deprecated, Java tooling.\n"
"Thus, its use with your {project-name} application is not recommended."
msgstr "JKS 是一种古老但仍在广泛使用的 Java 专用格式。不过，要使用这种格式，您必须使用特定的、如今也已过时的 Java 工具。因此，不建议在您的 {project-name} 应用程序中使用这种格式。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Additionally, OpenShift cert-manager or Let's Encrypt does not typically provide JKS and remains PEM-only."
msgstr "此外，OpenShift cert-manager 或 Let's Encrypt 通常不提供 JKS，仍然只提供 PEM。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a JKS keystore:"
msgstr "配置 JKS 密钥存储："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the keystore.\n"
"Also, they can include more than one certificate and private key.\n"
"If this is the case:"
msgstr "`.jks` 文件受密码保护，因此需要提供密码才能打开密钥存储。此外，它们可能包含多个证书和私钥。如果是这种情况"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "SNI"
msgstr "SNI"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Server Name Indication (SNI) is a TLS extension that makes it possible for a client to specify the host name to which it attempts to connect during the TLS handshake.\n"
"SNI enables a server to present different TLS certificates for multiple domains on a single IP address, which facilitates secure communication for virtual hosting scenarios."
msgstr "服务器名称指示（SNI）是一种 TLS 扩展，可让客户端在 TLS 握手过程中指定尝试连接的主机名称。SNI 使服务器能在单个 IP 地址上为多个域提供不同的 TLS 证书，从而促进虚拟主机场景的安全通信。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To enable SNI:"
msgstr "启用 SNI："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "With SNI enabled, the client indicates the server name during the TLS handshake, which allows the server to select the appropriate certificate:"
msgstr "启用 SNI 后，客户端会在 TLS 握手过程中指明服务器名称，这样服务器就能选择合适的证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When configuring the keystore with PEM files, multiple certificate (CRT) and key files must be provided.\n"
"CRT is a common file extension for X.509 certificate files, typically in PEM (Privacy-Enhanced Mail) format.\n"
"These files contain the public certificate."
msgstr "使用 PEM 文件配置密钥存储时，必须提供多个证书 (CRT) 和密钥文件。CRT 是 X.509 证书文件的常用文件扩展名，通常为 PEM（隐私增强邮件）格式。这些文件包含公共证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When configuring the keystore with a JKS or P12 file, the server selects the appropriate certificate based on the SNI host name provided by the client during the TLS handshake.\n"
"The server matches the SNI hostname with the common name (CN) or subject alternative names (SAN) configured in the certificates stored in the keystore.\n"
"All keystore and alias passwords must be identical."
msgstr "用 JKS 或 P12 文件配置密钥库时，服务器会根据客户端在 TLS 握手过程中提供的 SNI 主机名选择合适的证书。服务器会将 SNI 主机名与密钥库中存储的证书中配置的通用名称 (CN) 或主题备选名称 (SAN) 相匹配。所有密钥库和别名密码必须相同。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Credential providers"
msgstr "证书提供者"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can use a credential provider instead of passing the keystore password and alias password in the configuration."
msgstr "您可以使用凭据提供程序，而不是在配置中传递密钥库密码和别名密码。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"A credential provider offers a way to retrieve the keystore and alias password.\n"
"Note that the credential provider is only used if the password or alias password is not set in the configuration."
msgstr "凭据提供程序提供了一种检索密钥库和别名密码的方法。请注意，只有在配置中未设置密码或别名密码时，才会使用凭据提供程序。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a credential provider:"
msgstr "要配置凭证提供程序："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The credential provider can only be used with PKCS12 and JKS keystores."
msgstr "凭证提供程序只能与 PKCS12 和 JKS 密钥存储一起使用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trust stores"
msgstr "信托商店"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Trust stores are used to store the certificates of the trusted parties.\n"
"In regular TLS, the client uses a truststore to authenticate the server.\n"
"With mutual TLS (mTLS), both the server and the client use truststores to authenticate each other."
msgstr "信任存储用于存储受信任方的证书。在普通 TLS 中，客户端使用信任库来验证服务器。在相互 TLS（mTLS）中，服务器和客户端都使用信任库来验证对方。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PEM truststores"
msgstr "PEM 信托商店"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"PEM truststores are composed of a list of `.crt` or `.pem` files.\n"
"Each of them contains a certificate."
msgstr "PEM 信任库由 `.crt` 或 `.pem` 文件列表组成。每个文件都包含一个证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a PEM truststore:"
msgstr "配置 PEM 信任存储："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "PKCS12 truststores"
msgstr "PKCS12 信托库"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"PKCS12 truststores are a single file containing the certificates.\n"
"You can use the alias to select the appropriate certificate when multiple certificates are included."
msgstr "PKCS12 信任库是包含证书的单一文件。当包含多个证书时，可使用别名选择相应的证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a PKCS12 truststore:"
msgstr "配置 PKCS12 信任存储："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`.p12` files are password-protected, so you need to provide the password to open the truststore.\n"
"However, unlike keystores, the alias does not require a password because it contains a public certificate, not a private key."
msgstr "`.p12` 文件受密码保护，因此需要提供密码才能打开信任存储。不过，与密钥存储不同，别名不需要密码，因为它包含的是公共证书，而不是私钥。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "JKS truststores"
msgstr "JKS 信托商店"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"JKS truststores are single files that contain multiple certificates.\n"
"You can use the alias to select the appropriate certificate when multiple certificates are present.\n"
"However, avoid using the JKS format, because it is less secure than PKCS12."
msgstr "JKS 信任库是包含多个证书的单一文件。当存在多个证书时，可以使用别名来选择适当的证书。不过，请避免使用 JKS 格式，因为它的安全性低于 PKCS12。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure a JKS truststore:"
msgstr "配置 JKS 信任存储："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`.jks` files are password-protected, so you need to provide the password to open the truststore.\n"
"However, unlike keystores, the alias does not require a password because it contains a public certificate, not a private key."
msgstr "`.jks` 文件受密码保护，因此需要提供密码才能打开信任存储。不过，与密钥存储不同，别名不需要密码，因为它包含的是公共证书，而不是私钥。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Instead of passing the truststore password in the configuration, you can use a credential provider.\n"
"A credential provider allows you to retrieve passwords and other credentials.\n"
"Note that the credential provider is used only if the password is not set in the configuration."
msgstr "您可以使用凭证提供程序，而不是在配置中传递信任存储密码。凭据提供程序允许你检索密码和其他凭据。请注意，只有在配置中未设置密码时，才会使用凭据提供程序。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The credential provider can only be used with PKCS12 and JKS truststores."
msgstr "凭据提供程序只能与 PKCS12 和 JKS 信任存储一起使用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Other properties"
msgstr "其他财产"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "While keystores and truststores are the most important properties, there are other properties you can use to configure TLS."
msgstr "虽然密钥库和信任库是最重要的属性，但你还可以使用其他属性来配置 TLS。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "While the following examples use the _default_ configuration, you can use the _named_ configuration by prefixing the properties with the configuration's name."
msgstr "以下示例使用的是 _默认_ 配置，但也可以通过在属性前加上配置名称来使用 _已命名的_ 配置。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Cipher suites"
msgstr "密码套件"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Cipher suites are a list of ciphers that you can use during the TLS handshake.\n"
"You can configure an ordered list of enabled cipher suites.\n"
"If not configured, a reasonable default is selected from the built-in ciphers.\n"
"However, when specified, your configuration precedes the default suite defined by the SSL engine in use."
msgstr "密码套件是 TLS 握手过程中可以使用的密码列表。您可以配置已启用密码套件的有序列表。如果未配置，则会从内置密码中选择一个合理的默认值。但是，如果指定了密码套件，则配置会优先于使用中的 SSL 引擎所定义的默认套件。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the cipher suites:"
msgstr "配置密码套件"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "TLS protocol versions"
msgstr "TLS 协议版本"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS protocol versions are the list of protocols that can be used during the TLS handshake.\n"
"Enabled TLS protocol versions are specified as an ordered list separated by commas.\n"
"The relevant configuration property is `quarkus.tls.protocols` (or `quarkus.tls.<name>.protocols` for named TLS configurations).\n"
"It defaults to `TLSv1.3, TLSv1.2` if not configured."
msgstr "TLS 协议版本是 TLS 握手过程中可使用的协议列表。已启用的 TLS 协议版本以有序列表的形式指定，以逗号分隔。相关配置属性为 `quarkus.tls.protocols` （或 `quarkus.tls.<name>.protocols` （用于命名 TLS 配置）。如果未配置，默认值为 `TLSv1.3, TLSv1.2` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The available options are `TLSv1`, `TLSv1.1`, `TLSv1.2`, and `TLSv1.3`."
msgstr "可用选项为 `TLSv1` , `TLSv1.1` , `TLSv1.2` 和 `TLSv1.3` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "For example, to only enable `TLSv1.3`:"
msgstr "例如，只启用 `TLSv1.3` ："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Handshake timeout"
msgstr "握手超时"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When a TLS connection is established, the handshake phase is the first step.\n"
"During this phase, the client and server exchange information to establish the connection, which typically includes the cipher suite, the TLS protocol version, and the certification validation."
msgstr "建立 TLS 连接时，第一步是握手阶段。在这一阶段，客户端和服务器交换信息以建立连接，通常包括密码套件、TLS 协议版本和认证验证。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the timeout for the handshake phase:"
msgstr "要配置握手阶段的超时："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "ALPN"
msgstr "ALPN"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Application-Layer Protocol Negotiation (ALPN) is a TLS extension that allows the client and server to negotiate which protocol they will use for communication during the TLS handshake.\n"
"ALPN enables more efficient communication by allowing the client to indicate its preferred application protocol to the server before establishing the TLS connection."
msgstr "应用层协议协商（Application-Layer Protocol Negotiation，ALPN）是 TLS 的扩展，允许客户端和服务器协商在 TLS 握手过程中使用哪种协议进行通信。ALPN 允许客户端在建立 TLS 连接前向服务器表明其首选应用协议，从而提高通信效率。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This helps in scenarios like HTTP/2, where multiple protocols might be available, allowing for faster protocol selection."
msgstr "这有助于在 HTTP/2 等场景中使用多种协议，从而更快地选择协议。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "ALPN is enabled by default."
msgstr "ALPN 默认已启用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To disable it:"
msgstr "要禁用它："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Disabling ALPN is not recommended for non-experts, as it can lead to performance degradation, protocol negotiation issues, and unexpected behavior, particularly with protocols like HTTP/2.\n"
"However, disabling ALPN can be useful for diagnosing native inconsistencies or testing performance in specific edge cases where protocol negotiation causes conflicts."
msgstr "不建议非专业人员禁用 ALPN，因为它会导致性能下降、协议协商问题和意外行为，尤其是 HTTP/2 等协议。不过，禁用 ALPN 对于诊断本地不一致性或在协议协商导致冲突的特定边缘情况下测试性能很有用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Certificate Revocation List (CRL)"
msgstr "证书吊销列表 (CRL)"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"A Certificate Revocation List (CRL) is a list of certificates that the issuing Certificate Authority (CA) revoked before their scheduled expiration date.\n"
"When a certificate is compromised, no longer needed, or deemed invalid, the CA adds it to the CRL to inform relying parties not to trust it anymore."
msgstr "证书吊销列表（CRL）是签发证书的证书颁发机构（CA）在预定到期日之前吊销的证书列表。当证书受到损害、不再需要或被视为无效时，CA 会将其添加到 CRL 中，通知依赖方不要再信任该证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can configure the CRL with the list of certificate files you no longer trust by using the DER or PKCS#7 (P7B) formats."
msgstr "您可以使用 DER 或 PKCS#7 (P7B) 格式将不再信任的证书文件列表配置到 CRL 中。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "For the DER format, pass DER-encoded CRLs."
msgstr "对于 DER 格式，则传递 DER 编码的 CRL。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "For the PKCS#7 format, pass the `SignedData` object, where the only significant field is `crls`."
msgstr "对于 PKCS#7 格式，请传递 `SignedData` 对象，其中唯一重要的字段是 `crls` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure the CRL:"
msgstr "配置 CRL："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trusting all certificates and hostname verification"
msgstr "信任所有证书和主机名验证"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"You can configure your TLS connection to trust all certificates and disable the hostname verification.\n"
"Note that these are two different processes:"
msgstr "您可以将 TLS 连接配置为信任所有证书并禁用主机名验证。请注意，这是两个不同的过程："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Trusting all certificates ignores the certificate validation, so all certificates are trusted.\n"
"This method is useful for testing with self-signed certificates, but it should not be used in production."
msgstr "信任所有证书会忽略证书验证，因此所有证书都会被信任。这种方法适用于使用自签名证书进行测试，但不应在生产中使用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Hostname verification is the process of verifying the server's identity."
msgstr "主机名验证是验证服务器身份的过程。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "It is useful to prevent man-in-the-middle attacks and often defaults to `HTTPS` or `LDAPS`."
msgstr "它有助于防止中间人攻击，通常默认为 `HTTPS` 或 `LDAPS` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "These two properties should not be used in production."
msgstr "这两个属性不应在生产中使用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To trust all certificates:"
msgstr "信任所有证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To disable hostname verification:"
msgstr "要禁用主机名验证："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following table lists the supported properties:"
msgstr "下表列出了支持的属性："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The registry API"
msgstr "注册表 API"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "While extensions automatically use the TLS registry, you can also access the TLS configuration programmatically through the registry API."
msgstr "虽然扩展会自动使用 TLS 注册表，但你也可以通过注册表 API 以编程方式访问 TLS 配置。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To access the TLS configuration, inject the `TlsConfigurationRegistry` bean.\n"
"You can retrieve a named TLS configuration by calling `get(\"<NAME>\")` or the default configuration by calling `getDefault()`."
msgstr "要访问 TLS 配置，请注入 `TlsConfigurationRegistry` Bean。您可以通过调用 `get(\"<NAME>\")` 获取已命名的 TLS 配置，也可以通过调用 `getDefault()` 获取默认配置。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `TlsConfiguration` object contains the keystores, truststores, cipher suites, protocols, and other properties.\n"
"It also provides a way to create an `SSLContext` from the configuration."
msgstr "`TlsConfiguration` 对象包含密钥库、信任库、密码套件、协议和其他属性。它还提供了从配置中创建 `SSLContext` 的方法。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can also use the `TlsConfiguration` object to configure the Vert.x client or server, such as `KeyCertOptions`, `TrustOptions`, and so on."
msgstr "您还可以使用 `TlsConfiguration` 对象配置 Vert.x 客户端或服务器，如 `KeyCertOptions` , `TrustOptions` 等。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Registering a certificate from an extension"
msgstr "从分机注册证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"This section is only for extension developers.\n"
"An extension can register a certificate in the TLS registry.\n"
"This is useful when an extension needs to provide a certificate to the application or provides a different format."
msgstr "本部分仅供扩展开发人员使用。扩展可以在 TLS 注册表中注册证书。这在扩展需要向应用程序提供证书或提供不同格式的证书时非常有用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To register a certificate in the TLS registry by using the extension, the _processor_ extension must produce a `TlsCertificateBuildItem` composed of a name and a `CertificateSupplier`."
msgstr "要使用扩展在 TLS 注册表中注册证书， _处理器_ 扩展必须生成一个由名称和 `CertificateSupplier` 组成的 `TlsCertificateBuildItem` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The certificate supplier is a runtime object generally retrieved by using a recorder method."
msgstr "证书提供者是一个运行时对象，一般通过记录器方法获取。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "An example of a certificate supplier:"
msgstr "证书供应商示例："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Startup checks"
msgstr "启动检查"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When an application that uses the TLS extension starts, the TLS registry performs several checks to ensure the configuration is correct:"
msgstr "当使用 TLS 扩展的应用程序启动时，TLS 注册表会执行多项检查，以确保配置正确："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Keystores and truststores are accessible."
msgstr "可以访问钥匙店和信托店。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Aliases are available and accessible in the keystores and truststores."
msgstr "别名可在密钥库和信任库中使用和访问。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Certificates are valid."
msgstr "证书有效。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Cipher suites and protocols are valid."
msgstr "密码套件和协议有效。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Certificate Revocation Lists (CRLs) are valid."
msgstr "证书吊销列表（CRL）有效。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "If any of these checks fail, the application will not start."
msgstr "如果其中任何一项检查失败，应用程序将无法启动。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Reloading certificates"
msgstr "重装证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `TlsConfiguration` obtained from the `TLSConfigurationRegistry` includes a mechanism for reloading certificates.\n"
"The `reload` method refreshes the keystores and truststores, typically by reloading them from the file system."
msgstr "从 `TLSConfigurationRegistry` 获取的 `TlsConfiguration` 包含重载证书的机制。 `reload` 方法刷新密钥存储和信任存储，通常是从文件系统重新加载它们。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The reload operation is not automatic and must be triggered manually.\n"
"Additionally, the `TlsConfiguration` implementation must support reloading (which is the case for the configured certificate)."
msgstr "重载操作不是自动的，必须手动触发。此外， `TlsConfiguration` 实现必须支持重载（配置的证书就是这种情况）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `reload` method returns a `boolean` indicating whether the reload was successful.\n"
"A value of `true` means the reload operation was successful, not necessarily that there were updates to the certificates."
msgstr "`reload` 方法返回 `boolean` ，表示重载是否成功。 `true` 表示重载操作成功，但不一定表示证书有更新。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "After a `TlsConfiguration` has been reloaded, servers and clients using this configuration may need to perform specific actions to apply the new certificates."
msgstr "`TlsConfiguration` 重新加载后，使用此配置的服务器和客户端可能需要执行特定操作以应用新证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The recommended approach for informing clients and servers about the certificate reload is to fire a CDI event of\n"
"type `io.quarkus.tls.CertificateUpdatedEvent`.\n"
"To do so, inject a CDI event of this type and fire it when a reload occurs."
msgstr "向客户端和服务器通知证书重载的建议方法是触发 `io.quarkus.tls.CertificateUpdatedEvent` 类型的 CDI 事件。为此，可注入该类型的 CDI 事件，并在重载发生时触发该事件。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Manually triggering a reload and firing a `CertificateUpdatedEvent`:"
msgstr "手动触发装弹和发射 `CertificateUpdatedEvent` ："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"// in the class that performs the reload\n"
"@Inject\n"
"Event<CertificateUpdatedEvent> event;\n"
"@Inject\n"
"TlsConfigurationRegistry registry;\n"
"\n"
"public void reload() {\n"
"    TlsConfiguration config = registry.get(\"name\").orElseThrow();\n"
"    if (config.reload()) {\n"
"        event.fire(new CertificateUpdatedEvent(\"name\", config));\n"
"    }\n"
"}\n"
"\n"
"// In the server or client code\n"
"public void onReload(@Observes CertificateUpdatedEvent reload) {\n"
"    if (\"name\".equals(event.getName())) {\n"
"        server.updateSSLOptions(reload.tlsConfiguration().getSSLOptions());\n"
"        // Or update the SSLContext.\n"
"    }\n"
"\n"
"}"
msgstr "@Inject Event<CertificateUpdatedEvent> event; @Inject TlsConfigurationRegistry registry；"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Periodic reloading"
msgstr "定期重装"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry includes a built-in mechanism for periodically checking the file system for changes and reloading certificates.\n"
"The `reload-period` property specifies the interval for reloading certificates and emits a `CertificateUpdatedEvent` each time certificates are reloaded."
msgstr "TLS 注册表包含一个内置机制，用于定期检查文件系统的变化并重新加载证书。 `reload-period` 属性指定了重新加载证书的时间间隔，并在每次重新加载证书时发出 `CertificateUpdatedEvent` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure periodic certificate reloading:"
msgstr "要配置定期重载证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "For each named configuration, you can set a specific reload period:"
msgstr "对于每个已命名的配置，您都可以设置特定的重载周期："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Impacted server and client may need to listen to the `CertificateReloadedEvent` to apply the new certificates.\n"
"This is automatically done for the Quarkus HTTP server, including the management interface if it is enabled."
msgstr "受影响的服务器和客户端可能需要监听 `CertificateReloadedEvent` 以应用新证书。Quarkus HTTP 服务器（包括管理界面（如果启用））会自动执行此操作。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using Kubernetes secrets or cert-manager"
msgstr "使用 Kubernetes 秘密或证书管理器"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When running in Kubernetes, you can use Kubernetes secrets to store the keystores and truststores."
msgstr "在 Kubernetes 中运行时，可以使用 Kubernetes secrets 来存储密钥库和信任库。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using Kubernetes secrets"
msgstr "使用 Kubernetes 的秘密"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "By using the secret below as an example, create a secret with the keystores and truststores to use Kubernetes secrets:"
msgstr "以下面的秘密为例，创建一个带有密钥存储和信任存储的秘密，以便使用 Kubernetes 秘密："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Mount the secret as a volume in the pod, which is the easiest way to use these certificates:"
msgstr "将秘密作为卷挂载到 pod 中，这是使用这些证书的最简单方法："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the TLS registry to use the certificates:"
msgstr "配置 TLS 注册表以使用证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "You can combine this with the periodic reloading to automatically reload the certificates when they change."
msgstr "您可以将此功能与定期重新加载功能相结合，在证书发生变化时自动重新加载证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Using cert-manager"
msgstr "使用证书管理器"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When running in Kubernetes, you can use cert-manager to generate and renew certificates automatically.\n"
"Cert-manager produces a secret containing the keystores and truststores.\n"
"Configuring the TLS registry is the same as when using Kubernetes secrets.\n"
"The generated secret includes the following files:"
msgstr "在 Kubernetes 中运行时，可以使用 Cert-manager 自动生成和更新证书。Cert-manager 会生成一个包含密钥库和信任库的秘密。配置 TLS 注册表的方法与使用 Kubernetes 秘密时相同。生成的秘密包括以下文件："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`tls.crt` for the certificate"
msgstr "`tls.crt` 证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`tls.key` for the private key"
msgstr "`tls.key` 的私钥"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`ca.crt` for the CA certificate (if needed)"
msgstr "`ca.crt` CA 证书（如需要）"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To configure automatic certificate renewal, use the periodic reloading mechanism:"
msgstr "要配置自动证书更新，请使用定期重载机制："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Working with OpenShift serving certificates"
msgstr "使用 OpenShift 服务证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When running your application in OpenShift, you can use the link:https://docs.openshift.com/container-platform/4.16/security/certificates/service-serving-certificate.html[OpenShift serving certificates] to generate and renew TLS certificates automatically.\n"
"The Quarkus TLS registry can use these certificates and Certificate Authority (CA) files to handle HTTPS traffic and validate certificates securely."
msgstr "在 OpenShift 中运行应用程序时，可以使用 link:https://docs.openshift.com/container-platform/4.16/security/certificates/service-serving-certificate.html[OpenShift 服务证书] 自动生成和更新 TLS link:https://docs.openshift.com/container-platform/4.16/security/certificates/service-serving-certificate.html[证书] 。Quarkus TLS 注册表可以使用这些证书和证书颁发机构（CA）文件来处理 HTTPS 流量并安全地验证证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Acquiring a certificate"
msgstr "获取证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To have OpenShift generate a serving certificate, annotate an existing _Service_ object.\n"
"The generated certificate will be stored in a secret, which you can then mount in your pod."
msgstr "要让 OpenShift 生成服务证书，请注释现有的 _服务_ 对象。生成的证书将存储在一个密文中，然后你可以将其挂载到 pod 中。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following snippet uses an example _Service_ object with an annotation for generating a TLS certificate."
msgstr "下面的代码段使用了一个带有注释的 _服务_ 对象示例，用于生成 TLS 证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "View the configuration of the _Service_ object:"
msgstr "查看 _服务_ 对象的配置："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To generate a certificate, add his annotation to your already created OpenShift `service`:"
msgstr "要生成证书，请将其注释添加到已创建的 OpenShift `service` 中："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The annotation `service.beta.openshift.io/serving-cert-secret-name` instructs OpenShift to generate a certificate and store it in a secret named `my-tls-secret`."
msgstr "注释 `service.beta.openshift.io/serving-cert-secret-name` 指示 OpenShift 生成证书并将其存储在名为 `my-tls-secret` 的密文中。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Mount the secret as a volume in your pod by updating your _Deployment_ configuration:"
msgstr "更新 _部署_ 配置，将秘密作为卷挂载到 pod 中："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Define a volume to mount the secret.\n"
"Use the same name as the secret declared above."
msgstr "定义一个卷来挂载该秘密文件。使用与上面声明的秘密相同的名称。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Set up the keystore with the paths to the certificate and private key.\n"
"This can be configured by using environment variables or configuration files.\n"
"This example uses environment variables.\n"
"OpenShift serving certificates always create the `tls.crt` and `tls.key` files."
msgstr "用证书和私钥的路径设置密钥存储。可以使用环境变量或配置文件进行配置。本示例使用环境变量。OpenShift 服务证书总是创建 `tls.crt` 和 `tls.key` 文件。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Mount the secret in the container.\n"
"Ensure that the path matches the one used in the configuration (here `/etc/tls`)."
msgstr "将秘密挂载到容器中。确保路径与配置中使用的路径一致（此处为 `/etc/tls` ）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the port to serve HTTPS."
msgstr "配置端口以提供 HTTPS 服务。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Deploy your application to use the certificate generated by OpenShift.\n"
"This will make the service available over HTTPS."
msgstr "部署应用程序以使用 OpenShift 生成的证书。这将使服务通过 HTTPS 提供。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "By setting the `quarkus.tls.key-store.pem.acme.cert` and `quarkus.tls.key-store.pem.acme.key` variables or their environment variable variant, the TLS registry will use the certificate and private key from the secret."
msgstr "通过设置 `quarkus.tls.key-store.pem.acme.cert` 和 `quarkus.tls.key-store.pem.acme.key` 变量或其环境变量变体，TLS 注册表将使用密文中的证书和私钥。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"This configures the default keystore for the Quarkus HTTP server, which allows the server to use the certificate.\n"
"For information about using this certificate in a named configuration, see xref:referencing-a-tls-configuration[]."
msgstr "这将配置 Quarkus HTTP 服务器的默认密钥库，允许服务器使用证书。有关在命名配置中使用该证书的信息，请参阅 <<referencing-a-tls-configuration>> 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Trusting the Certificate Authority (CA)"
msgstr "信任证书颁发机构 (CA)"

#: _versions/main/guides/tls-registry-reference.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "<<acquiring-a-certificate>>"
msgstr "<<acquiring-a-certificate>>"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Now that your service uses a certificate issued by OpenShift, configure your client applications to trust this certificate.\n"
"To do so, create a ConfigMap that holds the CA certificate, and then configure the pod to mount it.\n"
"The following steps use a Quarkus REST client as an example, but the same approach applies to any client."
msgstr "既然您的服务使用的是 OpenShift 签发的证书，那么请配置您的客户端应用程序以信任该证书。为此，请创建一个包含 CA 证书的 ConfigMap，然后配置 pod 以加载该证书。下面的步骤以 Quarkus REST 客户端为例，但同样的方法适用于任何客户端。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Start by defining an _empty_ ConfigMap, which will be populated with the CA certificate:"
msgstr "首先定义一个 _空的_ ConfigMap，其中将填充 CA 证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The `service.beta.openshift.io/inject-cabundle` annotation is used to inject the CA certificate into the ConfigMap.\n"
"Note that the ConfigMap initially has no data — it is empty.\n"
"During its processing, OpenShift injects the CA certificate into the ConfigMap in the `service-ca.crt` file."
msgstr "`service.beta.openshift.io/inject-cabundle` 注解用于将 CA 证书注入 ConfigMap。请注意，ConfigMap 最初没有数据，是空的。在处理过程中，OpenShift 会将 CA 证书注入 `service-ca.crt` 文件中的 ConfigMap。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Mount the ConfigMap by adding a volume and mounting it in your _Deployment_ configuration:"
msgstr "在 _部署_ 配置中添加卷并加载 ConfigMap："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Mount the ConfigMap in the container.\n"
"Ensure that the path matches the one used in the configuration (in this example `/deployments/tls`)."
msgstr "将 ConfigMap 挂载到容器中。确保路径与配置中使用的路径一致（本例中为 `/deployments/tls` ）。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Define a volume to mount the ConfigMap and reference the ConfigMap that receives the CA certificate."
msgstr "定义挂载 ConfigMap 的卷，并引用接收 CA 证书的 ConfigMap。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the REST client to use this CA certificate."
msgstr "配置 REST 客户端以使用此 CA 证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Consider the following REST client interface:"
msgstr "请看下面的 REST 客户端界面："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Configure the base URI and the configuration key.\n"
"The name must be in the format `<service-name>.<namespace>.svc`.\n"
"Otherwise, the certificate will not be trusted.\n"
"Ensure that the `configKey` is also configured."
msgstr "配置基本 URI 和配置密钥。名称格式必须为 `<service-name>.<namespace>.svc` 。否则，证书将不被信任。确保 `configKey` 也已配置。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the REST client to trust the CA certificate generated by OpenShift:"
msgstr "配置 REST 客户端以信任 OpenShift 生成的 CA 证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Configure the `hero` REST client with the TLS configuration named `my-service-tls`."
msgstr "使用名为 `my-service-tls` 的 TLS 配置配置 `hero` REST 客户端。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Set up the `my-service-tls` TLS configuration, specifically the truststore with the CA certificate.\n"
"Ensure the path matches the one used in the Kubernetes _Deployment_ configuration.\n"
"The file is always named `service-ca.crt`."
msgstr "设置 `my-service-tls` TLS 配置，特别是带有 CA 证书的信任存储。确保路径与 Kubernetes _部署_ 配置中使用的路径一致。文件名始终为 `service-ca.crt` 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Certificate renewal"
msgstr "证书续期"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"OpenShift automatically renews the serving certificates it generates.\n"
"When the certificate is renewed, the secret is updated with the new certificate and private key."
msgstr "OpenShift 会自动更新其生成的服务证书。证书更新时，密钥会用新证书和私钥更新。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To ensure your application uses the new certificate, you can use the periodic reloading feature of the Quarkus TLS registry."
msgstr "为确保应用程序使用新证书，可以使用 Quarkus TLS 注册表的定期重载功能。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "By setting the `reload-period` property, the TLS registry will periodically check the keystores and truststores for changes and reload them if needed:"
msgstr "通过设置 `reload-period` 属性，TLS 注册表会定期检查密钥存储和信任存储的更改，并在需要时重新加载："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Optionally, implement a custom mechanism to reload the certificates when the secret is updated.\n"
"See <<reloading-certificates>> for more information."
msgstr "可选择实施自定义机制，以便在更新秘密时重新加载证书。更多信息，请参见 <<reloading-certificates>> 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Quarkus CLI commands and development Certificate Authority"
msgstr "Quarkus CLI 命令和开发证书颁发机构"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry provides Quarkus CLI commands to generate a development Certificate Authority (CA) and trusted certificates.\n"
"This avoids having to use self-signed certificates locally."
msgstr "TLS 注册表提供了 Quarkus CLI 命令，用于生成开发证书颁发机构（CA）和可信证书。这就避免了在本地使用自签名证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following snippet shows the description of the `quarkus tls` command, containing two sub-commands:"
msgstr "下面的代码段显示了 `quarkus tls` 命令的说明，该命令包含两个子命令："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This is useful for local development, as it allows Quarkus to act as its own certificate authority, which can be used to sign other certificates."
msgstr "这对本地开发非常有用，因为它允许 Quarkus 充当自己的证书颁发机构，可用于签署其他证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This is useful when creating a certificate for secure communication between your application and external services or clients during development."
msgstr "这对在开发过程中为应用程序与外部服务或客户端之间的安全通信创建证书非常有用。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"In most cases, you generate the Quarkus Development CA once and then generate certificates signed by this CA.\n"
"The Quarkus Development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"It is only valid for development purposes and only trusted on the local machine.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`, and installed in the system truststore."
msgstr "在大多数情况下，您只需生成一次 Quarkus 开发 CA，然后生成由该 CA 签名的证书。Quarkus 开发 CA 是一个证书颁发机构，可用于在本地签署证书。它仅对开发目的有效，并且仅在本地计算机上受信任。生成的 CA 位于 `$HOME/.quarkus/quarkus-dev-root-ca.pem` ，并安装在系统信任库中。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Understanding self-signed versus CA-signed certificates"
msgstr "了解自签名证书与 CA 签名证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When developing with TLS, you can use two types of certificates:"
msgstr "使用 TLS 开发时，可以使用两种类型的证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"**Self-signed certificate**: The certificate is signed by the same entity that uses it.\n"
"It is not trusted by default.\n"
"This type of certificate is typically used when a Certificate Authority (CA) is unavailable or you want a simple setup.\n"
"It is not suitable for production and should only be used for development."
msgstr "*自签证书* ：证书由使用该证书的同一实体签署。默认情况下不被信任。这种类型的证书通常在没有证书颁发机构（CA）或需要简单设置时使用。它不适合用于生产，只能用于开发。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"**CA-signed certificate**: The certificate is signed by a Certificate CA, a trusted entity.\n"
"This certificate is trusted by default and is the standard choice for production environments."
msgstr "*CA 签名证书* ：证书由证书 CA（一个受信任的实体）签署。该证书默认受信任，是生产环境的标准选择。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"While you can use a self-signed certificate for local development, it has limitations.\n"
"Browsers and tools like `curl`, `wget`, and `httpie` typically do not trust self-signed certificates, requiring manual import of the CA in your OS."
msgstr "虽然您可以使用自签名证书进行本地开发，但它也有局限性。浏览器和工具（如 `curl` 、 `wget` 和 `httpie` ）通常不信任自签名证书，需要在操作系统中手动导入 CA。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"To avoid this issue, you can use a development CA to sign certificates and install the CA in the system truststore.\n"
"This ensures that the system trusts all certificates signed by the CA."
msgstr "要避免这个问题，可以使用开发 CA 来签署证书，并将 CA 安装到系统信任库中。这样就能确保系统信任由 CA 签发的所有证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Quarkus simplifies the generation of a development CA and the certificates that are signed by this CA."
msgstr "Quarkus 简化了开发 CA 和由该 CA 签发的证书的生成过程。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generate a development CA"
msgstr "生成开发 CA"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The development CA is a Certificate Authority that can be used to sign certificates locally.\n"
"Note that the generated CA is only valid for development purposes and can only be trusted on the local machine."
msgstr "开发 CA 是一个证书颁发机构，可用于在本地签署证书。请注意，生成的 CA 仅对开发目的有效，并且只能在本地计算机上受信任。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "To generate a development CA:"
msgstr "生成开发 CA："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`--install` installs the CA in the system truststore.\n"
"Windows, Mac, and Linux (Fedora and Ubuntu) are supported.\n"
"However, depending on your browser, you might need to import the generated CA manually.\n"
"Refer to your browser's documentation for more information.\n"
"The generated CA is located in `$HOME/.quarkus/quarkus-dev-root-ca.pem`."
msgstr "`--install` 将 CA 安装到系统信任库中。支持 Windows、Mac 和 Linux（Fedora 和 Ubuntu）。不过，根据浏览器的不同，您可能需要手动导入生成的 CA。更多信息请参阅浏览器文档。生成的 CA 位于 。 `$HOME/.quarkus/quarkus-dev-root-ca.pem`"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`--renew` renews the CA if it already exists.\n"
"When this option is used, the private key is changed, so you need to regenerate the certificates signed by the CA.\n"
"If the CA expires, it will automatically renew without requiring the `--renew` option."
msgstr "`--renew` 更新已存在的 CA。使用该选项时，私钥会发生变化，因此需要重新生成由 CA 签发的证书。如果 CA 已过期，它将自动更新，无需使用 选项。 `--renew` "

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`--truststore` also generates a PKCS12 truststore containing the CA certificate."
msgstr "`--truststore` 还会生成一个包含 CA 证书的 PKCS12 信任库。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "When installing the certificate, your system might ask for your password to install the certificate in the system truststore or ask for confirmation in a dialog on Windows."
msgstr "安装证书时，系统可能会要求输入密码，以便将证书安装到系统信任库中，或者在 Windows 系统中要求在对话框中进行确认。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Windows, run as administrator from an elevated terminal to install the CA in the system truststore."
msgstr "在 Windows 系统中，以管理员身份从高架终端运行，在系统信任库中安装 CA。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generating a trusted (signed) certificate"
msgstr "生成可信（签名）证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "<<generate-a-development-ca>>"
msgstr "<<generate-a-development-ca>>"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"After installing the Quarkus Development CA, generate a trusted certificate.\n"
"This certificate will be signed by the Quarkus Development CA and trusted by your system."
msgstr "安装 Quarkus Development CA 后，生成可信证书。该证书将由 Quarkus 开发 CA 签名，并被你的系统所信任。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This command generates a certificate signed by the Quarkus Development CA, which your system will trust if properly installed or imported."
msgstr "该命令将生成由 Quarkus 开发 CA 签发的证书，如果安装或导入正确，系统将信任该证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The certificate is stored in `./.certs/`.\n"
"Two files are generated:"
msgstr "证书存储在 `./.certs/` 中。生成两个文件："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`$NAME-keystore.p12`: Contains the private key and the certificate.\n"
"It is password-protected."
msgstr "`$NAME-keystore.p12` :包含私钥和证书。它受密码保护。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`$NAME-truststore.p12`: Contains the CA certificate, which you can use as a truststore, for example, for testing."
msgstr "`$NAME-truststore.p12` :包含 CA 证书，您可以将其用作信任库，例如用于测试。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Additional options are available:"
msgstr "还可提供其他选项："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "A `.env` file is also generated when generating the certificate, making the Quarkus dev mode aware of these certificates."
msgstr "生成证书时还会生成一个 `.env` 文件，使 Quarkus 开发模式能识别这些证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Run your application in dev mode to use these certificates:"
msgstr "在开发模式下运行应用程序，以使用这些证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Open the Dev UI by using HTTPS: `https://localhost:8443/q/dev` or by issuing a `curl` request:"
msgstr "使用 HTTPS 打开开发人员用户界面： `https://localhost:8443/q/dev` 或发出 `curl` 请求："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Quarkus generates a self-signed certificate if the Quarkus Development CA is not installed."
msgstr "如果没有安装 Quarkus Development CA，Quarkus 会生成自签名证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Generating a self-signed certificate"
msgstr "生成自签名证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Even if the Quarkus Development CA is installed, you can generate a self-signed certificate:"
msgstr "即使安装了 Quarkus 开发 CA，也可以生成自签名证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "This generates a self-signed certificate that the Quarkus Development CA does not sign."
msgstr "这会生成一个自签名证书，Quarkus 开发 CA 不会签署该证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Uninstalling the Quarkus Development CA"
msgstr "卸载 Quarkus 开发 CA"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Uninstalling the Quarkus Development CA from your system depends on your OS."
msgstr "从系统中卸载 Quarkus Development CA 取决于操作系统。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Windows"
msgstr "在 Windows 上删除 CA 证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "List the CA certificate on Windows by using the Powershell terminal with administrator rights:"
msgstr "使用具有管理员权限的 Powershell 终端在 Windows 上列出 CA 证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Delete the stored CA certificate and replace `$Serial_Number` with the serial number of the CA certificate:"
msgstr "删除已存储的 CA 证书，并用 CA 证书的序列号替换 `$Serial_Number` ："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Linux"
msgstr "在 Linux 上删除 CA 证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Fedora:"
msgstr "在 Fedora 上"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Ubuntu:"
msgstr "在 Ubuntu 上"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Deleting the CA certificate on Mac"
msgstr "在 Mac 上删除 CA 证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "On Mac:"
msgstr "在 Mac 上"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Automatic certificate management with Let's Encrypt"
msgstr "使用 Let's Encrypt 自动管理证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "link:https://letsencrypt.org[Let's Encrypt] is a free, automated certificate authority provided by link:https://www.abetterinternet.org/[Internet Security Research Group]."
msgstr "link:https://letsencrypt.org[Let's Encrypt] 是 link:https://www.abetterinternet.org/[Internet Security Research Group] 提供的免费自动证书颁发机构。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Let's Encrypt uses link:https://datatracker.ietf.org/doc/html/rfc8555[Automated certificate management environment (ACME) protocol] to support automatic certificate issuance and renewal.\n"
"To learn more about Let's Encrypt and ACME, see link:https://letsencrypt.org/docs/[Let's Encrypt documentation]."
msgstr "Let's Encrypt 使用 link:https://datatracker.ietf.org/doc/html/rfc8555[自动证书管理环境（ACME）协议] 来支持证书的自动签发和更新。要了解有关 Let's Encrypt 和 ACME 的更多信息，请参阅 link:https://letsencrypt.org/docs/[Let's Encrypt 文档] 。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry extension allows a CLI ACME client to issue and renew Let's Encrypt certificates.\n"
"Your application uses this TLS registry extension to resolve ACME protocol challenges."
msgstr "TLS 注册表扩展允许 CLI ACME 客户端签发和更新 Let's Encrypt 证书。你的应用程序使用 TLS 注册表扩展解决 ACME 协议难题。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Follow the steps below to have your Quarkus application prepared and automatically updated with new and renewed Let's Encrypt certificates."
msgstr "请按照以下步骤准备您的 Quarkus 应用程序，并使用新的和更新的 Let's Encrypt 证书进行自动更新。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Ensure that a fully resolvable DNS domain name is available that you can use to access your application.\n"
"You can use this domain name to create a Let's Encrypt account and pass the Let's Encrypt ACME challenges to prove that you own this domain.\n"
"You can use link:https://ngrok.com/[ngrok] to start experimenting with the Quarkus Let's Encrypt ACME feature; for more information, see the <<lets-encrypt-ngrok,Testing with ngrok>> section below."
msgstr "确保有一个完全可解析的 DNS 域名，你可以用它来访问你的应用程序。你可以使用该域名创建 Let's Encrypt 账户，并通过 Let's Encrypt ACME 挑战来证明你拥有该域名。你可以使用 link:https://ngrok.com/[ngrok] 开始尝试 Quarkus Let's Encrypt ACME 功能；更多信息，请参阅下面的 \" xref:lets-encrypt-ngrok[使用 ngrok 测试] \"部分。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Your Quarkus HTTPS application must use a _build-time_ property to enable a Let's Encrypt ACME challenge route:"
msgstr "您的 Quarkus HTTPS 应用程序必须使用 _构建时_ 属性来启用 Let's Encrypt ACME 挑战路由："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The TLS registry can manage the challenge process from either the main HTTP interface or the management interface.\n"
"Using a management interface is **strongly** recommended to let Quarkus deal with ACME challenge configuration separately from the main application's deployment and security requirements:"
msgstr "TLS 注册表可以通过 HTTP 主界面或管理界面管理挑战过程。 *强烈建议* 使用管理界面，以便让 Quarkus 将 ACME 挑战配置与主应用程序的部署和安全要求分开处理："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Port 80"
msgstr "端口 80"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"The Let's Encrypt ACME challenge requires that the application is reachable on port `80` (basically: `http://your-dns-name`).\n"
"Ensure the port `80` is accessible from the Internet.\n"
"It might require an explicit security policy depending on your hosting provider."
msgstr "Let's Encrypt ACME 挑战要求应用程序可以通过 `80` 端口访问（基本上是这样： `http://your-dns-name` ).请确保 `80` 端口可从互联网访问。这可能需要明确的安全策略，具体取决于你的主机提供商。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"We also recommend setting `quarkus.http.insecure-requests` to `redirect` to redirect all HTTP requests to HTTPS.\n"
"The ACME challenge accepts self-signed certificates and up to 10 redirections:"
msgstr "我们还建议将 `quarkus.http.insecure-requests` 设置为 `redirect` ，以便将所有 HTTP 请求重定向到 HTTPS。ACME 挑战接受自签名证书和最多 10 次重定向："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The challenge is served from the primary HTTP interface (accessible from your DNS domain name)."
msgstr "挑战由主 HTTP 接口（可通过 DNS 域名访问）提供。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Do not start your application yet."
msgstr "先不要开始申请。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Application preparation"
msgstr "申请准备"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Before you request a Let's Encrypt certificate:"
msgstr "在申请 Let's Encrypt 证书之前："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Move to the root directory of your application."
msgstr "移动到应用程序的根目录。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Run the TLS registry Let's Encrypt CLI `prepare` command:"
msgstr "运行 TLS 注册表 Let's Encrypt CLI `prepare` 命令："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The `prepare` command does the following:"
msgstr "`prepare` 命令执行以下操作："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Creates a `.letsencrypt` folder in your application's root directory"
msgstr "在应用程序根目录下创建 `.letsencrypt` 文件夹"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Creates a self-signed domain certificate and private key for your application configured in the previous <<lets-encrypt-prerequisites,Let's Encrypt prerequisites>> step to be able to start and accept HTTPS requests"
msgstr "为上一步 xref:lets-encrypt-prerequisites[Let's Encrypt 先决条件] 中配置的应用程序创建自签名域证书和私钥，以便启动和接受 HTTPS 请求"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Creates a `.env` configuration file in your application's root directory and configures the application to use the self-signed domain certificate and private key (until we get the Let's Encrypt certificate)"
msgstr "在应用程序根目录下创建 `.env` 配置文件，并将应用程序配置为使用自签名域证书和私钥（直到我们获得 Let's Encrypt 证书为止）"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The following snippet shows an example of the generated `.env` file:"
msgstr "下面的代码段显示了生成 `.env` 文件的示例："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "The `.env` file does not contain the `quarkus.tls.lets-encrypt.enabled` and `quarkus.management.enabled` properties as they are build-time properties that require a rebuild of the application."
msgstr "`.env` 文件不包含 `quarkus.tls.lets-encrypt.enabled` 和 `quarkus.management.enabled` 属性，因为它们是构建时属性，需要重新构建应用程序。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Starting your application"
msgstr "开始申请"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Start your application:"
msgstr "开始申请"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Access your application endpoint by using `https://your-domain-name:8443/`; for example, `https://your-domain-name:8443/hello`, and accept a self-signed certificate in the browser."
msgstr "使用 `https://your-domain-name:8443/` ；例如 `https://your-domain-name:8443/hello` ，并在浏览器中接受自签名证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Keep the application running and request your first Let's Encrypt certificate."
msgstr "保持程序运行，申请第一份 Let's Encrypt 证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Issue a certificate"
msgstr "颁发证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "From the application directory, run the `issue-certificate` command to acquire your first Let's Encrypt certificate:"
msgstr "从应用程序目录运行 `issue-certificate` 命令，获取第一份 Let's Encrypt 证书："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Set your domain name."
msgstr "设置域名"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Provide your contact email address that Let's Encrypt can use to contact you in case of any issues with your Let's Encrypt account."
msgstr "提供您的联系电子邮件地址，以便 Let's Encrypt 在您的 Let's Encrypt 账户出现任何问题时与您联系。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Set your application management URL, which you can use to handle ACME challenges.\n"
"Use `https://localhost:8443/` if you choose not to enable a management router in the <<lets-encrypt-prerequisites,Let's Encrypt prerequisites>> step."
msgstr "设置应用程序管理 URL，用于处理 ACME 挑战。使用 `https://localhost:8443/` 如果你选择不在 xref:lets-encrypt-prerequisites[Let's Encrypt 先决条件] 步骤中启用管理路由器。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "During the processing of the `issue-certificate` command, the TLS registry CLI performs the following tasks:"
msgstr "在处理 `issue-certificate` 命令期间，TLS 注册表 CLI 会执行以下任务："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Checks if the application is prepared to serve the challenge."
msgstr "检查申请是否准备好接受质疑。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Creates and records Let's Encrypt account information."
msgstr "创建并记录 Let's Encrypt 账户信息。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Issues a Let's Encrypt certificate request."
msgstr "发出 Let's Encrypt 证书请求。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Interacts with the Quarkus application to resolve ACME challenges."
msgstr "与 Quarkus 应用程序互动，解决 ACME 面临的挑战。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"When the Let's Encrypt certificate chain and private key have been successfully acquired, they are converted to PEM format and copied to your application's `.letsencrypt` folder.\n"
"The TLS registry is informed that a new certificate and private key are ready and reloads them automatically."
msgstr "成功获取 Let's Encrypt 证书链和私钥后，它们会被转换为 PEM 格式并复制到应用程序的 `.letsencrypt` 文件夹。TLS 注册表会被告知新证书和私钥已准备就绪，并自动重新加载。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Access your application's endpoint using `https://your-domain-name:8443/` again.\n"
"Confirm in the browser that the Let's Encrypt certificate authority is now signing your domain certificate."
msgstr "再次使用 `https://your-domain-name:8443/` 再次访问应用程序端点。在浏览器中确认 Let's Encrypt 证书授权机构正在签署你的域名证书。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Note that currently, the `issue-certificate` command implicitly creates a Let's Encrypt account to make it easy for users to get started with the ACME protocol.\n"
"Support for the Let's Encrypt account management will evolve further."
msgstr "请注意，目前 `issue-certificate` 命令会隐式创建一个 Let's Encrypt 账户，以方便用户开始使用 ACME 协议。对 Let's Encrypt 账户管理的支持将进一步发展。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Renewing a certificate"
msgstr "更新证书"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Renewing certificates is similar to issuing the first certificate, but it requires an existing account created during the <<lets-encrypt-issue-certificate,Issue certificates with Let's Encrypt>> step."
msgstr "证书续期与签发第一份证书类似，但需要在 \" xref:lets-encrypt-issue-certificate[使用 Let's Encrypt 签发证书] \"步骤中创建的现有账户。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Run the following command to renew your Let's Encrypt certificate and set your domain DNS name:"
msgstr "运行以下命令更新 Let's Encrypt 证书并设置域名 DNS 名称："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "During this command, TLS registry CLI reads a Let's Encrypt account information recorded during the <<lets-encrypt-issue-certificate,Issue certificates with Let's Encrypt>> step, issues a Let's Encrypt certificate request, and communicates with a Quarkus application to have ACME challenges resolved."
msgstr "在该命令中，TLS 注册表 CLI 会读取 \" xref:lets-encrypt-issue-certificate[使用 Let] 's xref:lets-encrypt-issue-certificate[Encrypt 签发证书] \"步骤中记录的 Let's Encrypt 账户信息，发出 Let's Encrypt 证书请求，并与 Quarkus 应用程序通信，以解决 ACME 挑战。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"Once the Let's Encrypt certificate chain and private key have been successfully renewed, they are converted to PEM format and copied to your application's `.letsencrypt` folder.\n"
"The TLS registry is notified when a new certificate and private key are ready, and it automatically reloads them."
msgstr "Let's Encrypt 证书链和私钥更新成功后，会被转换为 PEM 格式并复制到应用程序的 `.letsencrypt` 文件夹。当新证书和私钥准备就绪时，TLS 注册表会收到通知，并自动重新加载它们。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Testing with ngrok"
msgstr "使用 ngrok 进行测试"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "link:https://ngrok.com/[ngrok] can be used to provide a secure HTTPS tunnel to your application running on localhost, and make it easy to test HTTPS based applications."
msgstr "link:https://ngrok.com/[ngrok] 可用于为运行在 localhost 上的应用程序提供安全的 HTTPS 通道，并可轻松测试基于 HTTPS 的应用程序。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "ngrok provides a simplified way of getting started with the Quarkus Let's Encrypt ACME feature."
msgstr "ngrok 提供了一种使用 Quarkus Let's Encrypt ACME 功能的简化方法。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Initiate testing by asking ngrok to reserve a domain:"
msgstr "请 ngrok 预留域名，开始测试："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"You can use link:https://github.com/quarkiverse/quarkus-ngrok[Quarkiverse ngrok] in dev mode or reserve it directly in the ngrok dashboard.\n"
"Unfortunately, you cannot use your ngrok domain to test the Quarkus Let's Encrypt ACME feature immediately.\n"
"This is because ngrok itself uses Let's Encrypt and intercepts ACME challenges that are meant to be handled by the Quarkus application instead."
msgstr "您可以在开发模式下使用 link:https://github.com/quarkiverse/quarkus-ngrok[Quarkiverse ngrok] ，也可以直接在 ngrok 面板中预留。遗憾的是，您不能立即使用 ngrok 域测试 Quarkus Let's Encrypt ACME 功能。这是因为 ngrok 本身使用了 Let's Encrypt 并拦截了本应由 Quarkus 应用程序处理的 ACME 挑战。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Therefore, remove the ngrok Let's Encrypt certificate policy from your ngrok domain:"
msgstr "因此，请删除 ngrok 域中的 ngrok Let's Encrypt 证书策略："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "`YOUR-RESERVED-DOMAIN-ID` is your reserved domain's id which starts from `rd_`, you can find it in the link:https://dashboard.ngrok.com/cloud-edge/domains[ngrok dashboard domains section]."
msgstr "`YOUR-RESERVED-DOMAIN-ID` 是您保留的域的 ID，从 开始，您可以在 `rd_` link:https://dashboard.ngrok.com/cloud-edge/domains[ngrok 面板域部分] 找到它。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Because ngrok only forwards ACME challenges over HTTP, start ngrok by using the following command:"
msgstr "由于 ngrok 只通过 HTTP 转发 ACME 挑战，因此请使用以下命令启动 ngrok："

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid ""
"`8080` is the localhost HTTP port your application is listening on.\n"
"Note that the application will be accessible from `http://YOUR-NGROK-DOMAIN` on port `80` but redirected to your local machine on port `8080`."
msgstr "`8080` 是应用程序监听的本地主机 HTTP 端口。请注意，应用程序可以从 `http://YOUR-NGROK-DOMAIN` `80` 端口访问应用程序，但会重定向到本地计算机的 `8080` 端口。"

#: _versions/main/guides/tls-registry-reference.adoc
#, fuzzy
msgid "Test the Quarkus Let's Encrypt ACME feature from your local machine."
msgstr "从本地计算机测试 Quarkus Let's Encrypt ACME 功能。"
