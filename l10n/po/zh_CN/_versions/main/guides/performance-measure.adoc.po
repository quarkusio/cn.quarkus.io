# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-06-17 02:52+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/performance-measure.adoc:6
#, no-wrap
msgid "Measuring Performance"
msgstr "衡量性能"

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:11
msgid "This guide covers:"
msgstr "本指南包括："

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:13
msgid "how we measure memory usage"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:14
msgid "how we measure startup time"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:15
msgid "which additional flags will Quarkus apply to native-image by default"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:18
msgid "All of our tests are run on the same hardware for a given batch.  It goes without saying, but it's better when you say it."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/performance-measure.adoc:19
#, no-wrap
msgid "How do we measure memory usage"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:24
msgid "When measuring the footprint of a Quarkus application, we measure https://en.wikipedia.org/wiki/Resident_set_size[Resident Set Size (RSS)] and not the JVM heap size which is only a small part of the overall problem.  The JVM not only allocates native memory for heap (`-Xms`, `-Xmx`) but also structures required by the jvm to run your application. Depending on the JVM implementation, the total memory allocated for an application will include, but not limited to:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:26
msgid "Heap space"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:27
msgid "Class metadata"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:28
msgid "Thread stacks"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:29
msgid "Compiled code"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:30
msgid "Garbage collection"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:31
#, no-wrap
msgid "Native Memory Tracking"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:34
msgid "In order to view the native memory used by the JVM, you can enable the https://docs.oracle.com/javase/8/docs/technotes/guides/vm/nmt-8.html[Native Memory Tracking] (NMT) feature in hotspot;"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:36
msgid "Enable NMT on the command line;"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:38
#, no-wrap
msgid " -XX:NativeMemoryTracking=[off | summary | detail] <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:40
msgid "NOTE: this feature will add a 5-10% performance overhead"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:42
msgid "It is then possible to use jcmd to dump a report of the native memory usage of the Hotspot JVM running your application;"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:44
#, no-wrap
msgid " jcmd <pid> VM.native_memory [summary | detail | baseline | summary.diff | detail.diff | shutdown] [scale= KB | MB | GB]\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:45
#, no-wrap
msgid "Cloud Native Memory Limits"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:49
msgid "It is important to measure the whole memory to see the impact of a Cloud Native application.  It is particularly true of container environments which will kill a process based on its full RSS memory usage."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:53
msgid "Likewise, don't fall into the trap of only measuring private memory which is what the process uses that is not shareable with other processes.  While private memory might be useful in an environment deploying many different applications (and thus sharing memory a lot), it is very misleading in environments like Kubernetes/OpenShift."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:54
#, no-wrap
msgid "Measuring Memory Correctly on Docker"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:57
msgid "In order to measure memory correctly **DO NOT use docker stat or anything derived from it** (e.g. ctop). This approach only measures a subset of the in-use resident pages, while the Linux Kernel, cgroups and cloud orchestration providers will utilize the full resident set in their accounting (determining whether a process is over the limits and should be killed)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:59
msgid "To measure accurately, a similar set of steps for measuring RSS on Linux should be performed. The docker `top` command allows running a `ps` command on the container host machine against the processes in the container instance. By utilizing this in combination with formatting output parameters, the rss value can be returned:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:61
#, no-wrap
msgid "  docker top <CONTAINER ID> -o pid,rss,args\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:63
msgid "For example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:67
#, no-wrap
msgid " $ docker top $(docker ps -q --filter ancestor=quarkus/myapp) -o pid,rss,args\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:70
#, no-wrap
msgid ""
"PID                 RSS                 COMMAND\n"
"2531                27m                 ./application -Dquarkus.http.host=0.0.0.0\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:73
msgid "Alternatively, one can jump directly into a privileged shell (root on the host), and execute a `ps` command directly:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:78
#, no-wrap
msgid ""
" $ docker run -it --rm --privileged --pid=host justincormack/nsenter1 /bin/ps -e -o pid,rss,args | grep application\n"
" 2531  27m ./application -Dquarkus.http.host=0.0.0.0\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:81
msgid "If you happen to be running on Linux, you can execute the `ps` command directly, since your shell is the same as the container host:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:83
#, no-wrap
msgid "  ps -e -o pid,rss,args | grep application\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:84
#, no-wrap
msgid "Platform Specific Memory Reporting"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:87
msgid "In order to not incur the performance overhead of running with NVM enabled, we measure the total RSS of an JVM application using tools specific to each platform."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/performance-measure.adoc:88
#, no-wrap
msgid "Linux"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:91
msgid "The linux https://linux.die.net/man/1/pmap[pmap] and https://linux.die.net/man/1/ps[ps] tools provide a report on the native memory map for a process"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:95
#, no-wrap
msgid " $ ps -o pid,rss,command -p <pid>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:98
#, no-wrap
msgid ""
"   PID   RSS COMMAND\n"
" 11229 12628 ./target/getting-started-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:103
#, no-wrap
msgid " $ pmap -x <pid>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:117
#, no-wrap
msgid ""
" 13150:   /data/quarkus-application -Xmx100m -Xmn70m\n"
" Address           Kbytes     RSS   Dirty Mode  Mapping\n"
" 0000000000400000   55652   30592       0 r-x-- quarkus-application\n"
" 0000000003c58000       4       4       4 r-x-- quarkus-application\n"
" 0000000003c59000    5192    4628     748 rwx-- quarkus-application\n"
" 00000000054c0000     912     156     156 rwx--   [ anon ]\n"
" ...\n"
" 00007fcd13400000    1024    1024    1024 rwx--   [ anon ]\n"
" ...\n"
" 00007fcd13952000       8       4       0 r-x-- libfreebl3.so\n"
" ...\n"
" ---------------- ------- ------- -------\n"
" total kB         9726508  256092  220900\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:120
msgid "Each Memory region that has been allocated for the process is listed;"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:122
msgid "Address: Start address of virtual address space"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:123
msgid "Kbytes: Size (kilobytes) of virtual address space reserved for region"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:124
#, no-wrap
msgid "RSS:     Resident set size (kilobytes).  This is the measure of how much memory space is actually being used\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:125
#, no-wrap
msgid "Dirty:   dirty pages (both shared and private) in kilobytes\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:126
#, no-wrap
msgid "Mode:    Access mode for memory region\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:127
#, no-wrap
msgid "Mapping: Includes application regions and Shared Object (.so) mappings for process\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:129
msgid "The Total RSS (kB) line reports the total native memory the process is using."
msgstr ""

#. type: Labeled list
#: upstream/_versions/main/guides/performance-measure.adoc:130
#, no-wrap
msgid "macOS"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:132
msgid "On macOS, you can use `ps x -o pid,rss,command -p <PID>` which list the RSS for a given process in KB (1024 bytes)."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:136
#, no-wrap
msgid "$ ps x -o pid,rss,command -p 57160\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:139
#, no-wrap
msgid ""
"  PID    RSS COMMAND\n"
"57160 288548 /Applications/IntelliJ IDEA CE.app/Contents/jdk/Contents/Home/jre/bin/java\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:142
msgid "Which means IntelliJ IDEA consumes 281,8 MB of resident memory."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/performance-measure.adoc:143
#, no-wrap
msgid "How do we measure startup time"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:148
msgid "Some frameworks use aggressive lazy initialization techniques.  It is important to measure the startup time to first request to most accurately reflect how long a framework needs to start.  Otherwise, you will miss the time the framework _actually_ takes to initialize."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:150
msgid "Here is how we measure startup time in our tests."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:152
msgid "We create a sample application that logs timestamps for certain points in the application lifecycle."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:157
#, no-wrap
msgid ""
"@Path(\"/\")\n"
"public class GreetingEndpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:159
#, no-wrap
msgid "    private static final String template = \"Hello, %s!\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:168
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/greeting\")\n"
"    @Produces(MediaType.APPLICATION_JSON)\n"
"    public Greeting greeting(@QueryParam(\"name\") String name) {\n"
"        System.out.println(new SimpleDateFormat(\"HH:mm:ss.SSS\").format(new java.util.Date(System.currentTimeMillis())));\n"
"        String suffix = name != null ? name : \"World\";\n"
"        return new Greeting(String.format(template, suffix));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:173
#, no-wrap
msgid ""
"    void onStart(@Observes StartupEvent startup) {\n"
"        System.out.println(new SimpleDateFormat(\"HH:mm:ss.SSS\").format(new Date()));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:176
msgid "We start looping in a shell, sending requests to the rest endpoint of the sample application we are testing."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:180
#, no-wrap
msgid "$ while [[ \"$(curl -s -o /dev/null -w ''%{http_code}'' localhost:8080/api/greeting)\" != \"200\" ]]; do sleep .00001; done\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:183
msgid "In a separate terminal, we start the timing application that we are testing, printing the time the application starts"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:187
#, no-wrap
msgid "$ date +\"%T.%3N\" &&  ./target/quarkus-timing-runner\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/performance-measure.adoc:193
#, no-wrap
msgid ""
"10:57:32.508\n"
"10:57:32.512\n"
"2019-04-05 10:57:32,512 INFO  [io.quarkus] (main) Quarkus 0.11.0 started in 0.002s. Listening on: http://127.0.0.1:8080\n"
"2019-04-05 10:57:32,512 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy-reactive, resteasy-reactive-jackson]\n"
"10:57:32.537\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:196
msgid "The difference between the final timestamp and the first timestamp is the total startup time for the application to serve the first request."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/performance-measure.adoc:197
#, no-wrap
msgid "Additional flags applied by Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:200
msgid "When Quarkus invokes GraalVM `native-image` it will apply some additional flags by default."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:202
msgid "You might want to know about the following ones in case you're comparing performance properties with other builds."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:203
#, no-wrap
msgid "Disable fallback images"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:207
msgid "Fallback native images are a feature of GraalVM to \"fall back\" to run your application in the normal JVM, should the compilation to native code fail for some reason."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:210
msgid "Quarkus disables this feature by setting `-H:FallbackThreshold=0`: this will ensure you get a compilation failure rather risking to not notice that the application is unable to really run in native mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:212
msgid "If you instead want to just run in Java mode, that's totally possible: just skip the native-image build and run it as a jar."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:213
#, no-wrap
msgid "Disable Isolates"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:216
msgid "Isolates are a neat feature of GraalVM, but Quarkus isn't using them at this stage."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:218
msgid "Disable via `-H:-SpawnIsolates`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:219
#, no-wrap
msgid "Disable auto-registration of all Service Loader implementations"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:223
msgid "Quarkus extensions can automatically pick the right services they need, while GraalVM's native-image defaults to include all services it's able to find on the classpath."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:225
msgid "We prefer listing services explicitly as it produces better optimised binaries. Disable it as well by setting `-H:-UseServiceLoaderFeature`."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:226
#, no-wrap
msgid "Better default for Garbage Collection implementation"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:229
msgid "The default in GraalVM seems meant to optimise for short-lived processes."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:232
#, no-wrap
msgid ""
"Quarkus defaults to server applications, so we switch to a better default by setting\n"
" `-H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime`.\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/performance-measure.adoc:233
#, no-wrap
msgid "Others ..."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:238
#, no-wrap
msgid ""
"This section is provided as high level guidance, but can't presume to be comprehensive as some flags are controlled\n"
" dynamically by the extensions, the platform you're building on, configuration details, your code and possibly\n"
" a combination of these.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:241
msgid "Generally speaking the ones listed here are those most likely to affect performance metrics, but in the right circumstances one could observe non-negligible impact from the other flags too."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/performance-measure.adoc:244
msgid "If you're to investigate some differences in detail make sure to check what Quarkus is invoking exactly: when the build plugin is producing a native image, the full command lines are logged."
msgstr ""
