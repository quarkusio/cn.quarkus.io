# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-15 02:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Using JWT RBAC"
msgstr "使用JWT RBAC"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"This guide explains how to integrate link:https://github.com/smallrye/smallrye-jwt/[SmallRye JWT] into your Quarkus application to implement link:https://tools.ietf.org/html/rfc7519[JSON Web Token (JWT)] security in compliance with the MicroProfile JWT specification.\n"
"You’ll learn how to verify JWTs, represent them as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`, and secure Quarkus HTTP endpoints using bearer token authorization and link:https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control]."
msgstr "本指南介绍了如何将 link:https://github.com/smallrye/smallrye-jwt/[SmallRye JWT] 集成到您的 Quarkus 应用程序中，以实现符合 MicroProfile JWT 规范的 link:https://tools.ietf.org/html/rfc7519[JSON Web 令牌（JWT）] 安全性。您将了解如何验证 JWT，将其表示为 MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken` ，以及如何使用承载令牌授权和 link:https://en.wikipedia.org/wiki/Role-based_access_control[基于角色的访问控制] 来确保 Quarkus HTTP 端点的安全。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"The Quarkus OpenID Connect (`quarkus-oidc`) extension also supports bearer token authorization and uses `smallrye-jwt` to represent bearer tokens as `JsonWebToken`.\n"
"For details, see the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer Token Authentication] guide."
msgstr "Quarkus OpenID Connect ( `quarkus-oidc` ) 扩展也支持不记名令牌授权，并使用 `smallrye-jwt` 将不记名令牌表示为 `JsonWebToken` 。有关详情，请参阅 xref:security-oidc-bearer-token-authentication.adoc[OIDC 不记名令牌验证] 指南。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"If your Quarkus application needs to authenticate users using the OIDC Authorization Code Flow, you must use the OpenID Connect extension.\n"
"For more information, refer to the xref:security-oidc-code-flow-authentication.adoc[OIDC Code Flow Mechanism for Protecting Web Applications]."
msgstr "如果您的 Quarkus 应用程序需要使用 OIDC 授权代码流对用户进行身份验证，则必须使用 OpenID Connect 扩展。更多信息，请参阅 \" xref:security-oidc-code-flow-authentication.adoc[保护 Web 应用程序的 OIDC 代码流机制] \"。"

#. type: Title ==
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Quickstart"
msgstr "快速入门"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"We recommend following the instructions in the upcoming sections to create the application step by step.\n"
"If you prefer, you can skip ahead to the completed example."
msgstr "我们建议您按照接下来章节的说明逐步创建应用程序。如果您愿意，可以跳到已完成的示例。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "To access the example, either clone the Git repository or download an archive:"
msgstr "要访问示例，可克隆 Git 仓库或下载存档："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Clone the repository: `git clone {quickstarts-clone-url}`."
msgstr "克隆版本库： `git clone {quickstarts-clone-url}` ."

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Download the {quickstarts-archive-url}[archive]."
msgstr "下载 {quickstarts-archive-url}[存档]。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The completed solution is located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory]."
msgstr "完成的解决方案位于 `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[目录] 中。"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "First, create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "This command generates the Maven project and imports the `smallrye-jwt` extension, which includes the {mp-jwt} support."
msgstr "该命令生成Maven项目并导入 `smallrye-jwt` 扩展，其中包括{mp-jwt}支持。"

#: _versions/main/guides/security-jwt.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-jwt` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `smallrye-jwt` 扩展到你的项目。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This command adds the following dependencies to your build file:"
msgstr "此命令将在构建文件中添加以下依赖项："

#. type: Block title
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Examine the Jakarta REST resource"
msgstr "检查JAX-RS资源"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Create a REST endpoint in `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` with the following content:"
msgstr "在 `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` 里，创建一个REST端点，内容如下:"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "REST endpoint V1"
msgstr "REST 端点 V1"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `JsonWebToken` interface is injected, providing access to claims associated with the current authenticated token. This interface extends `java.security.Principal`."
msgstr "注入 `JsonWebToken` 接口，以便访问与当前已验证令牌相关的权利要求。该接口扩展了 `java.security.Principal` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `@PermitAll` is a standard Jakarta security annotation. It indicates that the given endpoint is accessible by all callers, whether authenticated or not."
msgstr "`@PermitAll` 是一个标准的 Jakarta 安全注解。它表示所有调用者（无论认证与否）都可以访问给定的端点。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The Jakarta REST `SecurityContext` is injected to inspect the security state of the request. The `getResponseString()` function generates the response."
msgstr "Jakarta REST `SecurityContext` 被注入，以检查请求的安全状态。 `getResponseString()` 函数生成响应。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Checks if the call is insecure by checking if the request user/caller `Principal` against null."
msgstr "通过检查请求用户/调用者 `Principal` 是否为空，检查调用是否不安全。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Ensures the names in the `Principal` and `JsonWebToken` match because the `JsonWebToken` represents the current `Principal`."
msgstr "确保 `Principal` 和 `JsonWebToken` 中的名称相匹配，因为 `JsonWebToken` 代表当前的 `Principal` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Retrieves the name of the `Principal`."
msgstr "读取 `Principal` 的名称。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Builds a response containing the caller's name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`, and whether a non-null `JsonWebToken` was injected."
msgstr "生成包含调用者名称、请求 `SecurityContext` 的 `isSecure()` 和 `getAuthenticationScheme()` 状态以及是否注入了非空 `JsonWebToken` 的响应。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Run the application in dev mode"
msgstr "在开发模式下运行应用程序"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Now, you are ready to run the application in dev mode by using one of the following commands:"
msgstr "现在，您可以使用以下命令之一在开发模式下运行应用程序："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Then, you should see output similar to the following example:"
msgstr "然后，您会看到与下面示例类似的输出："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`quarkus:dev` output"
msgstr "`quarkus:dev` 产量"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Now that the REST endpoint is running, you can access it by using a command line tool such as curl:"
msgstr "现在 REST 端点已经运行，你可以使用 curl 等命令行工具访问它："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`curl` command for `/secured/permit-all`"
msgstr "`curl` 命令的 `/secured/permit-all`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This command returns the following response:"
msgstr "该命令返回以下响应："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You have not provided any JWT in our request, so you would not expect the endpoint to see any security state, and the response is consistent with that:"
msgstr "您没有在请求中提供任何 JWT，因此您不会希望端点看到任何安全状态，响应也与此相符："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`username` is anonymous."
msgstr "`username` 是匿名的。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`isHttps` is `false` because `https` is not used."
msgstr "`isHttps` 是 ，因为 没有被使用。 `false` `https` "

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`authScheme` is `null`."
msgstr "`authScheme` 是 。 `null`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`hasJWT` is `false`."
msgstr "`hasJWT` 是 。 `false`"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Use Ctrl-C to stop the Quarkus server."
msgstr "使用Ctrl-C来停止Quarkus服务器。"

#: _versions/main/guides/security-jwt.adoc
msgid ""
"So now let's actually secure something.\n"
"Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "所以，现在让我们真正让一些东西变得安全。看看下面的新端点方法 `helloRolesAllowed` ："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "REST endpoint V2"
msgstr "REST 端点 V2"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `JsonWebToken` is injected to access claims from the JWT."
msgstr "`JsonWebToken` 被注入以访问 JWT 中的请求。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This endpoint is exposed at `/secured/roles-allowed`."
msgstr "该端点通过 `/secured/roles-allowed` 公开。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `@RolesAllowed` annotation restricts access to users with either the \"User\" or \"Admin\" role."
msgstr "`@RolesAllowed` 注释限制 \"用户 \"或 \"管理员 \"角色的用户访问。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The response is constructed similarly to the `hello` method, with the addition of the `birthdate` claim retrieved directly from the injected `JsonWebToken`."
msgstr "响应的构造与 `hello` 方法类似，但增加了直接从注入的 `JsonWebToken` 中检索的 `birthdate` 索赔。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "After you make this addition to your `TokenSecuredResource`, rerun the `./mvnw quarkus:dev` command, and then try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint."
msgstr "在 `TokenSecuredResource` 中添加此内容后，重新运行 `./mvnw quarkus:dev` 命令，然后尝试 `curl -v http://127.0.0.1:8080/secured/roles-allowed ; echo` 尝试访问新端点。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Your output should be as follows:"
msgstr "你的输出应该如下："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`curl` command for `/secured/roles-allowed`"
msgstr "`curl` 命令的 `/secured/roles-allowed`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Excellent.\n"
"You did not provide a JWT in the request, so access to the endpoint was correctly denied.\n"
"Instead, you received an HTTP 401 Unauthorized error."
msgstr "非常好。您没有在请求中提供 JWT，因此端点访问被正确拒绝。相反，您收到了 HTTP 401 未授权错误。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "To access the endpoint, you must obtain and include a valid JWT in your request. This involves two steps:"
msgstr "要访问端点，必须在请求中获取并包含有效的 JWT。这包括两个步骤："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Configuring the {extension-name} extension with the necessary information to validate a JWT."
msgstr "使用验证 JWT 的必要信息配置 {extension-name} 扩展。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Generating a JWT with the appropriate claims to match the configuration."
msgstr "生成带有适当声明的 JWT，以匹配配置。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Configuring the {extension-name} extension security information"
msgstr "配置 { 扩展名} 扩展安全信息"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Create a `security-jwt-quickstart/src/main/resources/application.properties` with the following content:"
msgstr "创建一个 `security-jwt-quickstart/src/main/resources/application.properties` ，内容如下:"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Application properties for `TokenSecuredResource`"
msgstr "应用特性 `TokenSecuredResource`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Specifies the location of the public key file `publicKey.pem` on the classpath.\n"
"See <<add-public-key>> for adding this key."
msgstr "指定公钥文件 `publicKey.pem` 在 classpath 上的位置。请参阅 <<add-public-key>> 添加此密钥。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Defines the expected issuer as `https://example.com/issuer`."
msgstr "将预期发行人定义为 `https://example.com/issuer` ."

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Ensures the `publicKey.pem` file is included as a resource in the native executable."
msgstr "确保 `publicKey.pem` 文件作为资源包含在本地可执行文件中。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Adding a public key"
msgstr "添加公开密钥"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"The link:https://tools.ietf.org/html/rfc7519[JWT specification] defines various levels of security of JWTs that one can use.\n"
"The {mp-jwt} specification requires JWTs signed with the RSA-256 signature algorithm.\n"
"This in turn requires an RSA public key pair.\n"
"On the REST endpoint server side, you need to configure the location of the RSA public key to use to verify the JWT sent along with requests.\n"
"The `mp.jwt.verify.publickey.location=publicKey.pem` setting configured previously expects that the public key is available on the classpath as `publicKey.pem`.\n"
"To accomplish this, copy the following content to a `security-jwt-quickstart/src/main/resources/publicKey.pem` file."
msgstr "link:https://tools.ietf.org/html/rfc7519[JWT 规范] 定义了可以使用的各种安全级别的 JWT。{mp-jwt}规范要求使用 RSA-256 签名算法签署 JWT。这反过来又需要一个 RSA 公钥对。在 REST 端点服务器端，需要配置 RSA 公钥的位置，以用于验证随请求一起发送的 JWT。之前配置的 `mp.jwt.verify.publickey.location=publicKey.pem` 设置希望公钥在类路径上以 `publicKey.pem` 的形式存在。为此，请将以下内容复制到 `security-jwt-quickstart/src/main/resources/publicKey.pem` 文件。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "RSA public key PEM content"
msgstr "RSA 公钥 PEM 内容"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Generating a JWT"
msgstr "生成一个JWT"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Often, one obtains a JWT from an identity manager such as link:https://www.keycloak.org/[Keycloak].\n"
"But for this quickstart, you generate our own by using the JWT generation API provided by `smallrye-jwt`.\n"
"For more information, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "通常，我们会从 link:https://www.keycloak.org/[Keycloak] 等身份管理器获取 JWT。但在本快速入门中，我们将使用 `smallrye-jwt` 提供的 JWT 生成 API 生成自己的 JWT。更多信息，请参阅 xref:security-jwt-build.adoc[使用 SmallRye JWT 生成 JWT 标记] 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Take the code from the following listing and place it into `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java`:"
msgstr "从以下列表中提取代码，并将其放入 `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java` ："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`GenerateToken` main driver class"
msgstr "`GenerateToken` 主驱动程序类"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Sets the `iss` (issuer) claim in the JWT.\n"
"This value must match the server-side `mp.jwt.verify.issuer` configuration for the token to be considered valid."
msgstr "设置 JWT 中的 `iss` （发行方）声明。该值必须与服务器端 `mp.jwt.verify.issuer` 配置相匹配，令牌才会被视为有效。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Specifies the `upn` (User Principal Name) claim, which the {mp-jwt} specification defines as the preferred claim for identifying the `Principal` in container security APIs."
msgstr "指定 `upn` （用户主体名称）声明，{mp-jwt} 规范将其定义为在容器安全 API 中识别 `Principal` 的首选声明。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Defines the `groups` claim, which provides the group memberships and top-level roles assigned to the JWT bearer."
msgstr "定义 `groups` claim，提供分配给 JWT 承载器的组成员资格和顶级角色。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Adds a `birthdate` claim.\n"
"Because this can be considered sensitive information, consider encrypting claims as described in xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "添加 `birthdate` 声明。由于这可能被认为是敏感信息，因此请考虑按照 xref:security-jwt-build.adoc[使用 SmallRye JWT 生成 JWT 标记] 中的描述对声明进行加密。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Note that for this code to work, you need the content of the RSA private key corresponding to the public key you have in the `TokenSecuredResource` application.\n"
"Take the following PEM content and place it into `security-jwt-quickstart/src/test/resources/privateKey.pem`:"
msgstr "请注意，要使该代码正常工作，您需要与 `TokenSecuredResource` 应用程序中的公钥相对应的 RSA 私钥内容。将以下 PEM 内容放入 `security-jwt-quickstart/src/test/resources/privateKey.pem` ："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "RSA private key PEM content"
msgstr "RSA 私钥 PEM 内容"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Later, you configure the `smallrye.jwt.sign.key.location` property to specify the location of the private signing key."
msgstr "随后，你可以配置 `smallrye.jwt.sign.key.location` 属性，指定私人签名密钥的位置。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Generating keys with OpenSSL"
msgstr "使用 OpenSSL 生成密钥"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "It is also possible to generate a public and private key pair by using the OpenSSL command line tool."
msgstr "也可以使用 OpenSSL 命令行工具生成公钥和私钥对。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`openssl` commands to generate keys"
msgstr "`openssl` 生成密钥的命令"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "An additional step is required to generate and convert the private key to the PKCS#8 format, commonly used for secure key storage and transport."
msgstr "还需要一个额外的步骤来生成私人密钥并将其转换为 PKCS#8 格式，这种格式通常用于安全密钥存储和传输。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`openssl` commands to perform the conversion"
msgstr "`openssl` 命令来执行转换"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You can use the generated key pair instead of those used in this quickstart."
msgstr "您可以使用生成的密钥对，而不是本快速入门中使用的密钥对。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Ensure the <<run-application, application is running>> before generating the JSON Web Token (JWT) for the `TokenSecuredResource` endpoint."
msgstr "在为 `TokenSecuredResource` 端点生成 JSON 网络令牌 (JWT) 之前，确保 xref:run-application[应用程序正在运行] 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Next, use the following command to generate the JWT:"
msgstr "接下来，使用以下命令生成 JWT："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Sample JWT generation output"
msgstr "JWT 生成输出示例"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The JWT string is a Base64 URL-encoded string consisting of three parts, separated by `.` characters:"
msgstr "JWT 字符串是 Base64 URL 编码字符串，由三部分组成，中间用 `.` 字符分隔："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The header, which contains metadata about the token, such as the signing algorithm."
msgstr "标头，包含令牌的元数据，如签名算法。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The payload, also called \"claims\", which includes the token's claims or data."
msgstr "有效载荷，也称为 \"权利要求\"，包括令牌的权利要求或数据。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The signature, which verifies the token's integrity."
msgstr "签名，用于验证令牌的完整性。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Finally, secured access to `/secured/roles-allowed`"
msgstr "最后，安全访问 `/secured/roles-allowed`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Now, let's use this to make a secured request to the `/secured/roles-allowed` endpoint.\n"
"Make sure you have the Quarkus server still running in dev mode, and then run the following command, making sure to use your version of the generated JWT from the previous step:"
msgstr "现在，让我们用它向 `/secured/roles-allowed` 端点发出安全请求。确保 Quarkus 服务器仍在开发模式下运行，然后运行以下命令，确保使用上一步生成的 JWT 版本："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`curl` command for `/secured/roles-allowed` with JWT"
msgstr "`curl` `/secured/roles-allowed` 的命令"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Make sure to use the generated token as the HTTP Authorization Bearer scheme value."
msgstr "确保使用生成的标记作为 HTTP 授权承载器方案值。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Success! You now have the following:"
msgstr "成功！您现在拥有以下信息："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "A non-anonymous caller name: `jdoe@quarkus.io`"
msgstr "非匿名来电者姓名： `jdoe@quarkus.io`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "An authentication scheme: `Bearer`"
msgstr "验证方案 `Bearer`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "A non-null `JsonWebToken`"
msgstr "非空 `JsonWebToken`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `birthdate` claim value"
msgstr "`birthdate` 索赔值"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Using the `JsonWebToken` and claim injection"
msgstr "使用 `JsonWebToken` 和注入索赔"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Now that you can generate a JWT to access our secured REST endpoints, let's see what more you can do with the `JsonWebToken` interface and the JWT claims.\n"
"The `org.eclipse.microprofile.jwt.JsonWebToken` interface extends the `java.security.Principal` interface, and is the object type returned by the `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` call you used previously.\n"
"This means that code that does not use CDI but does have access to the REST container `SecurityContext` can get hold of the caller `JsonWebToken` interface by casting the `SecurityContext#getUserPrincipal()`."
msgstr "现在，您可以生成一个 JWT 来访问我们的安全 REST 端点，让我们看看您还能用 `JsonWebToken` 接口和 JWT 声明做些什么。 `org.eclipse.microprofile.jwt.JsonWebToken` 接口扩展了 `java.security.Principal` 接口，是您之前使用的 `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` 调用所返回的对象类型。 `JsonWebToken` 这意味着，不使用 CDI 但可以访问 REST 容器 `SecurityContext` 的代码可以通过将 `SecurityContext#getUserPrincipal()` ."

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"The `JsonWebToken` interface defines methods for accessing claims in the underlying JWT.\n"
"It provides accessors for common claims that are required by the {mp-jwt} specification and arbitrary claims that might exist in the JWT."
msgstr "`JsonWebToken` 接口定义了访问底层 JWT 中的请求的方法。该接口为{mp-jwt}规范所要求的普通请求和 JWT 中可能存在的任意请求提供了访问器。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"All the JWT claims can also be injected.\n"
"Let's expand our `TokenSecuredResource` with another endpoint `/secured/roles-allowed-admin` which uses the injected `birthdate` claim (as opposed to getting it from `JsonWebToken`):"
msgstr "所有 JWT 声明也都可以注入。让我们用另一个端点 `/secured/roles-allowed-admin` 来扩展我们的 `TokenSecuredResource` ，它使用注入的 `birthdate` 声明（而不是从 `JsonWebToken` 获取）："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `@RequestScoped` scope is required to enable injection of the `birthdate` claim as a `String`."
msgstr "`@RequestScoped` 范围是必要的，以便能够将 `birthdate` 索赔作为 `String` 注入。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `JsonWebToken` is injected here, providing access to all claims and JWT-related information."
msgstr "`JsonWebToken` 在此注入，可访问所有索赔和 JWT 相关信息。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `birthdate` claim is injected as a `String`. This highlights why the `@RequestScoped` scope is mandatory."
msgstr "`birthdate` 索赔是作为 `String` 注入的。这就突出了为什么 `@RequestScoped` 的范围是强制性的。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The injected `birthdate` claim is directly used to construct the response."
msgstr "注入的 `birthdate` 索赔要求直接用于构建响应。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Now generate the token again and run:"
msgstr "现在再次生成令牌并运行："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Run the application in JVM mode"
msgstr "以 JVM 模式运行应用程序"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You can run the application as a standard Java application."
msgstr "您可以将应用程序作为标准 Java 应用程序运行。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Compile the application:"
msgstr "编译应用程序："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "CLI"
msgstr "CLI"

#: _versions/main/guides/security-jwt.adoc
msgid "Maven"
msgstr "Maven"

#: _versions/main/guides/security-jwt.adoc
msgid "Gradle"
msgstr "Gradle"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Run the application:"
msgstr "运行应用程序："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Run the application in native mode"
msgstr "以本地模式运行应用程序"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"You can compile this same demo into native mode without any modifications.\n"
"This implies that you no longer need to install a JVM on your production environment.\n"
"The runtime technology is included in the produced binary and optimized to run with minimal resources required."
msgstr "您可以将同样的演示编译为本地模式，而无需做任何修改。这意味着您不再需要在生产环境中安装 JVM。运行时技术已包含在生成的二进制文件中，并经过优化，只需最少的资源即可运行。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Compilation takes a bit longer, so this step is disabled by default."
msgstr "编译需要较长的时间，因此默认禁用此步骤。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Build your application again by enabling the `native` profile:"
msgstr "启用 `native` 配置文件，重新构建应用程序："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Run the following binary directly:"
msgstr "直接运行以下二进制文件："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Explore the solution"
msgstr "探索解决方案"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory] repository contains all the versions covered in this quickstart guide, along with additional endpoints that demonstrate subresources using injected `JsonWebToken` tokens and their claims via CDI APIs."
msgstr "`security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[目录] 存储库包含本快速入门指南中涉及的所有版本，以及通过 CDI API 展示使用注入的 `JsonWebToken` 标记及其声明的子资源的附加端点。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "We encourage you to explore the `security-jwt-quickstart` directory and review the quickstart solutions to learn more about the features of the {extension-name} extension."
msgstr "我们建议您访问 `security-jwt-quickstart` 目录并查看快速入门解决方案，以进一步了解{扩展名}扩展的功能。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Reference guide"
msgstr "参考指南"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Supported injection scopes"
msgstr "支持的注入范围"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "`@ApplicationScoped`, `@Singleton` and `@RequestScoped` outer bean injection scopes are all supported when an `org.eclipse.microprofile.jwt.JsonWebToken` is injected, with the `@RequestScoped` scoping for `JsonWebToken` enforced to ensure the current token is represented."
msgstr "这里 `@ApplicationScoped` , `@Singleton` 和 `@RequestScoped` 外层Bean注入作用域在注入 `org.eclipse.microprofile.jwt.JsonWebToken` 时都是被支持的， `@RequestScoped` 作用域对 `JsonWebToken` 强制执行，以确保当前令牌被呈现。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "However, `@RequestScoped` must be used when the individual token claims are injected as simple types such as `String`, for example:"
msgstr "然而，当单个令牌要求被注入为简单的类型，例如 `String` ，必须使用 `@RequestScoped` ："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Note you can also use the injected `JsonWebToken` to access the individual claims, but setting `@RequestScoped` is unnecessary in this case."
msgstr "请注意，您也可以使用注入的 `JsonWebToken` 访问单个索赔，但在这种情况下无需设置 `@RequestScoped` 。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Please see link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI Injection Requirements] for more details."
msgstr "请参阅 link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI注入要求] 以了解更多细节。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Supported public key formats"
msgstr "支持的公钥格式"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Public keys can be formatted in any of the following formats, specified in order of precedence:"
msgstr "公钥可以按优先顺序格式化为以下任何一种格式："

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Public Key Cryptography Standards #8 (PKCS#8) PEM"
msgstr "公钥密码学标准#8（PKCS#8） PEM"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "JSON Web Key (JWK)"
msgstr "JSON网络密钥（JWK）"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS)"
msgstr "JSON网络密钥集(JWKS)"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "JSON Web Key (JWK) Base64 URL encoded"
msgstr "JSON Web Key (JWK) Base64 URL 编码"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS) Base64 URL encoded"
msgstr "JSON网络密钥集（JWKS）Base64 URL编码"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Dealing with verification keys"
msgstr "处理验证密钥"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you need to verify the token signature by using the asymmetric RSA or Elliptic Curve (EC) key, use the `mp.jwt.verify.publickey.location` property to refer to the local or remote verification key."
msgstr "如果需要使用非对称 RSA 或椭圆曲线 (EC) 密钥验证令牌签名，请使用 `mp.jwt.verify.publickey.location` 属性引用本地或远程验证密钥。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Use `mp.jwt.verify.publickey.algorithm` to customize the verification algorithm (default is `RS256`); for example, set it to `ES256` when working with the EC keys."
msgstr "使用 `mp.jwt.verify.publickey.algorithm` 自定义验证算法（默认值为 `RS256` ）；例如，在使用 EC 密钥时将其设置为 `ES256` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you need to verify the token signature by using the symmetric secret key, then either a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format must be used to represent this secret key, for example:"
msgstr "如果需要使用对称秘钥验证令牌签名，则必须使用 `JSON Web Key` (JWK) 或 `JSON Web Key Set` (JWK Set) 等格式来表示该秘钥："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"This secret key JWK must also be referred to with `smallrye.jwt.verify.key.location`.\n"
"`smallrye.jwt.verify.algorithm` should be set to `HS256`/`HS384`/`HS512`."
msgstr "该密钥 JWK 也必须用 `smallrye.jwt.verify.key.location` 表示。 `smallrye.jwt.verify.algorithm` 应设置为 `HS256` / `HS384` / `HS512` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Parse and verify `JsonWebToken` with `JWTParser`"
msgstr "解析和验证 `JsonWebToken` `JWTParser`"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "If the JWT token can not be injected, for example, if it is embedded in the service request payload or the service endpoint acquires it out of band, then one can use `JWTParser`:"
msgstr "如果JWT令牌不能被注入，例如，如果它被嵌入到服务请求的有效载荷中，或者服务端点在带外获得它，那么人们可以使用 `JWTParser` ："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"You can also use it to customize how the token is verified or decrypted.\n"
"For example, one can supply a local `SecretKey`:"
msgstr "您还可以使用它自定义令牌的验证或解密方式。例如，可以提供一个本地 `SecretKey` ："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Please also see the <<add-smallrye-jwt,How to Add SmallRye JWT directly>> section about using `JWTParser` without the `HTTP` support provided by `quarkus-smallrye-jwt`."
msgstr "另请参阅 \" xref:add-smallrye-jwt[如何直接添加 SmallRye JWT] \"部分，了解如何在没有 `quarkus-smallrye-jwt` 提供的 `HTTP` 支持的情况下使用 `JWTParser` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Token decryption"
msgstr "令牌解密"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If your application needs to accept tokens with encrypted claims or encrypted inner-signed claims, simply set the `smallrye.jwt.decrypt.key.location` property to point to the decryption key."
msgstr "如果您的应用程序需要接受带有加密权利要求或加密内部签名权利要求的令牌，只需设置 `smallrye.jwt.decrypt.key.location` 属性，指向解密密钥即可。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"If this is the only key property set, the incoming token is expected to contain only encrypted claims.\n"
"If either `mp.jwt.verify.publickey` or `mp.jwt.verify.publickey.location` verification properties are also set, then the incoming token is expected to contain the encrypted inner-signed token."
msgstr "如果只设置了这一个密钥属性，则传入的令牌将只包含加密的权利要求。如果同时设置了 `mp.jwt.verify.publickey` 或 `mp.jwt.verify.publickey.location` 验证属性，则收到的令牌将包含加密的内部签名令牌。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "See xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT] and learn how to generate the encrypted or inner-signed and then encrypted tokens quickly."
msgstr "请参阅 xref:security-jwt-build.adoc[使用 SmallRye JWT 生成 JWT 标记] ，了解如何快速生成加密或内部签名后再加密的标记。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Custom factories"
msgstr "定制工厂"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` is the default implementation used to parse and verify JWT tokens, converting them into `JsonWebToken` principals. This factory relies on the `MP JWT` and `smallrye-jwt` properties, as described in the `Configuration` section, to validate and customize JWT tokens."
msgstr "`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` 是用于解析和验证 JWT 标记并将其转换为 `JsonWebToken` principals 的默认实现。该工厂依赖 `Configuration` 部分所述的 `MP JWT` 和 `smallrye-jwt` 属性来验证和定制 JWT 标记。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you need to implement a custom factory—such as to skip re-verifying tokens that have already been validated by a firewall—you can do so in one of the following ways:"
msgstr "如果需要实现自定义工厂，例如跳过重新验证已通过防火墙验证的令牌，可以通过以下方式之一来实现："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Use the `ServiceLoader` mechanism by creating a `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` resource."
msgstr "通过创建 `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` 资源，使用 `ServiceLoader` 机制。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Provide an `Alternative` CDI bean implementation, like the example below:"
msgstr "提供 `Alternative` CDI Bean 实现，如下面的示例："

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Blocking calls"
msgstr "阻止通话"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`quarkus-smallrye-jwt` extension uses link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] library which is currently not reactive."
msgstr "`quarkus-smallrye-jwt` 扩展使用 link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] 库，该库目前不是反应型的。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "What it means from the perspective of `quarkus-smallrye-jwt`, which operates as part of the reactive Quarkus security architecture, is that an IO thread entering the link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] verification or decryption code might block in one of the following cases:"
msgstr "从作为反应式 Quarkus 安全架构一部分运行的 `quarkus-smallrye-jwt` 的角度来看，这意味着进入 link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT] 验证或解密代码的 IO 线程可能会在以下情况中阻塞："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The default key resolver refreshes the `JsonWebKey` set containing the keys, which involves a remote call to the OIDC endpoint."
msgstr "默认密钥解析器会刷新包含密钥的 `JsonWebKey` 集，这需要远程调用 OIDC 端点。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The custom key resolver, such as `AWS Application Load Balancer` (`ALB`) key resolver, resolves the keys against the AWS ALB key endpoint by using the current token's key identifier header value."
msgstr "自定义密钥解析器（如 `AWS Application Load Balancer` ( `ALB` ) 密钥解析器）通过使用当前令牌的密钥标识符头值，根据 AWS ALB 密钥端点解析密钥。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "In such cases, if connections are slow—for instance, taking more than 3 seconds to respond to the key endpoint—the current event loop thread is likely to become blocked."
msgstr "在这种情况下，如果连接速度很慢--例如，响应关键端点的时间超过 3 秒--当前事件循环线程很可能会被阻塞。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "To prevent it from blocking, set `quarkus.smallrye-jwt.blocking-authentication=true`."
msgstr "要防止其阻塞，请设置 `quarkus.smallrye-jwt.blocking-authentication=true` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Token propagation"
msgstr "令牌传播"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Please see the xref:security-openid-connect-client-reference.adoc#token-propagation-rest[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr "请参阅 \" xref:security-openid-connect-client-reference.adoc#token-propagation-rest[令牌传播] \"部分，了解向下游服务传播承载器访问令牌的情况。"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Testing"
msgstr "测试"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Automatic key generation"
msgstr "自动生成密钥"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"This extension generates an asymmetric RSA 2024 bit signing key pair in the dev and test modes if the verification key has not been configured.\n"
"Once the key pair is generated, the public RSA key is used to configure the `mp.jwt.verify.publickey` property, and the RSA private key is available to tests to sign tokens using `smallrye-jwt-build`, for example:"
msgstr "如果未配置验证密钥，该扩展会在开发和测试模式下生成非对称 RSA 2024 位签名密钥对。生成密钥对后，公共 RSA 密钥将用于配置 `mp.jwt.verify.publickey` 属性，而 RSA 私钥则可用于测试，例如使用 `smallrye-jwt-build` 签署令牌："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "See xref:security-jwt-build.adoc#sign-claims[signing claims guide] for mode details."
msgstr "有关模式的详细信息，请参阅 xref:security-jwt-build.adoc#sign-claims[签署索赔指南] 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You can disable automatic key generation by setting at least one of the following properties:"
msgstr "通过设置以下至少一个属性，可以禁用自动密钥生成功能："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.publickey.location`"
msgstr "`mp.jwt.verify.publickey.location`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.publickey`"
msgstr "`mp.jwt.verify.publickey`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.decrypt.key.location`"
msgstr "`mp.jwt.decrypt.key.location`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.key.location`"
msgstr "`smallrye.jwt.encrypt.key.location`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key.location`"
msgstr "`smallrye.jwt.sign.key.location`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key`"
msgstr "`smallrye.jwt.sign.key`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "In *dev* mode, if you do not explicitly configure the issuer using the `mp.jwt.verify.issuer` property, the {extension-name} extension will set a default issuer of `https://quarkus.io/issuer`."
msgstr "在 *开发* 模式下，如果不使用 `mp.jwt.verify.issuer` 属性明确配置签发器，{扩展名}扩展会将默认签发器设置为 `https://quarkus.io/issuer` ."

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you prefer to configure the issuer programmatically, set `mp.jwt.verify.issuer` to `NONE` to prevent the default value from being applied."
msgstr "如果您希望以编程方式配置签发器，请将 `mp.jwt.verify.issuer` 设置为 `NONE` ，以防止应用默认值。"

#. type: Title ====
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP-based JsonWebKey (JWK) set, then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "如果将 `mp.jwt.verify.publickey.location` 配置为指向 HTTPS 或基于 HTTP 的 JsonWebKey (JWK) 集，则可以使用与 xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect 承载令牌集成测试] `Wiremock` 部分所述相同的方法，只是将 `application.properties` 改为使用 MP JWT 配置属性："

#. type: Title ====
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Keycloak"
msgstr "Keycloak"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you work with Keycloak and configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP-based JsonWebKey (JWK) set, you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "如果使用 Keycloak 并将 `mp.jwt.verify.publickey.location` 配置为指向 HTTPS 或基于 HTTP 的 JsonWebKey (JWK) 集，则可以使用 xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect 承载令牌集成测试] Keycloak 部分所述的相同方法，但只需更改 `application.properties` 以使用 MP JWT 配置属性："

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Note that the tokens issued by Keycloak have an `iss` (issuer) claim set to the realm endpoint address."
msgstr "请注意，Keycloak发行的令牌有一个 `iss` （发行者）声称，设置为境界端点地址。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"If your Quarkus application runs in a Docker container, it might share a network interface with a Keycloak container started by DevServices for Keycloak.\n"
"In this scenario, the Quarkus application and Keycloak communicate through an internal shared Docker network."
msgstr "如果你的 Quarkus 应用程序在 Docker 容器中运行，它可能会与由 DevServices for Keycloak 启动的 Keycloak 容器共享一个网络接口。在这种情况下，Quarkus 应用程序和 Keycloak 通过内部共享的 Docker 网络进行通信。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "In such cases, use the following configuration instead:"
msgstr "在这种情况下，请使用以下配置代替："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Local public key"
msgstr "本地公用密钥"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect Bearer Token Integration testing] `Local public key` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "您可以使用与 xref:security-oidc-bearer-token-authentication.adoc#bearer-token-integration-testing[OpenID Connect 承载令牌集成测试] `Local public key` 部分所述相同的方法，但只需更改 `application.properties` 以使用 MP JWT 配置属性："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`TestSecurity` annotation"
msgstr "`TestSecurity` 标注"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "Add the following dependency:"
msgstr "添加以下依赖关系："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Then, write test code such as this:"
msgstr "然后，编写这样的测试代码："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "where the `ProtectedResource` class might look like this:"
msgstr "`ProtectedResource` 类可能是这样的："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Note that the `@TestSecurity` annotation must always be used, and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.\n"
"`@JwtSecurity` annotation is optional and can be used to set the additional token claims."
msgstr "请注意，必须始终使用 `@TestSecurity` 注释，其 `user` 属性将作为 `JsonWebToken.getName()` 返回，其 `roles` 属性将作为 `JsonWebToken.getGroups()` 返回。 `@JwtSecurity` 注释是可选的，可用于设置附加标记声明。"

#. type: delimited block =
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`@TestSecurity` and `@JwtSecurity` can be combined in a meta-annotation, as follows:"
msgstr " `@TestSecurity` 和 ，可以在一个元注释中结合起来，如下所示： `@JwtSecurity` "

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This is particularly useful if the same set of security settings needs to be used in multiple test methods."
msgstr "如果需要在多个测试方法中使用同一套安全设置，这一点特别有用。"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "How to check the errors in the logs"
msgstr "如何检查日志中的错误"

#. type: delimited block =
#: _versions/main/guides/security-jwt.adoc
msgid "Please enable `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` level logging to see more details about the token verification or decryption errors:"
msgstr "请启用 `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` 级日志，以查看有关令牌验证或解密错误的更多细节："

#: _versions/main/guides/security-jwt.adoc
msgid "Proactive authentication"
msgstr "主动认证"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If you'd like to skip the token verification when the public endpoint methods are invoked, disable the xref:security-proactive-authentication.adoc[proactive authentication]."
msgstr "如果你想在调用公共端点方法时跳过令牌验证，那么请停用 link:security-built-in-authentication.html#proactive-authentication[主动验证] 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Note that you can't access the injected `JsonWebToken` through public methods if token verification has not been done."
msgstr "请注意，如果没有进行令牌验证，就不能通过公共方法访问注入的 `JsonWebToken` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "How to add SmallRye JWT directly"
msgstr "如何直接添加 SmallRye JWT"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "To <<jwt-parser,parse and verify JsonWebToken with JWTParser>>, use `smallrye-jwt` instead of `quarkus-smallrye-jwt` directly for the following situations:"
msgstr "xref:jwt-parser[使用 JWTParser 解析和验证 JsonWebToken] 时，请在以下情况下使用 `smallrye-jwt` ，而不要直接使用 `quarkus-smallrye-jwt` ："

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You work with Quarkus extensions that do not support `HTTP`, such as `Quarkus GRPC`."
msgstr "你与不支持 `HTTP` ，如 `Quarkus GRPC` 的Quarkus扩展工作。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "You provide an extension-specific `HTTP`, the support of which conflicts with the support of those offered by `quarkus-smallrye-jwt` and `Vert.x HTTP`, such as `Quarkus AWS Lambda`."
msgstr "您提供了一个特定于扩展的 `HTTP` ，其支持与 `quarkus-smallrye-jwt` 和 `Vert.x HTTP` 提供的支持相冲突，例如 `Quarkus AWS Lambda` 。"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Start with adding the `smallrye-jwt` dependency:"
msgstr "首先添加 `smallrye-jwt` 依赖项："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Then, update `application.properties` to get all the CDI producers provided by `smallrye-jwt` included as follows:"
msgstr "然后，更新 `application.properties` ，使 `smallrye-jwt` 提供的所有 CDI 生产者都包含在内，如下所示："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Quarkus configuration"
msgstr "Quarkus配置"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "MicroProfile JWT configuration"
msgstr "MicroProfile JWT配置"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Property Name"
msgstr "物业名称"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Default"
msgstr "默认"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Description"
msgstr "描述"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "none"
msgstr "无"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The `mp.jwt.verify.publickey` config property allows the public key text to be supplied as a string. The public key is parsed from the supplied string in the order defined in the <<supported-public-key-formats>> section."
msgstr "`mp.jwt.verify.publickey` 配置属性允许以字符串形式提供公钥文本。公钥将按照 <<supported-public-key-formats>> 部分定义的顺序从提供的字符串中解析出来。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Config property allows for a specified external or internal location of the public key. The value can be a relative path or a URL. If the value points to an HTTPS-based JWK set, then, for it to work in native mode, the `quarkus.ssl.native` property must also be set to `true`. See xref:native-and-ssl.adoc[Using SSL With Native Executables] for more details."
msgstr "配置属性允许指定公钥的外部或内部位置。该值可以是相对路径或 URL。如果该值指向基于 HTTPS 的 JWK 集，那么要使其在本地模式下工作，还必须将 `quarkus.ssl.native` 属性设置为 `true` 。更多详情，请参阅 xref:native-and-ssl.adoc[使用本地可执行文件的 SSL] 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.publickey.algorithm`"
msgstr "`mp.jwt.verify.publickey.algorithm`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`RS256`"
msgstr "`RS256`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "List of signature algorithms. Set it to `ES256` to support the Elliptic Curve signature algorithm."
msgstr "签名算法列表。将其设置为 `ES256` 以支持椭圆曲线签名算法。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Config property allows for a specified external or internal location of the Private Decryption Key."
msgstr "配置属性允许指定私人解密密钥的外部或内部位置。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.decrypt.key.algorithm`"
msgstr "`mp.jwt.decrypt.key.algorithm`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`RSA-OAEP`,`RSA-OAEP-256`"
msgstr "`RSA-OAEP` , `RSA-OAEP-256`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "List of decryption algorithms. Set it to `RSA-OAEP-256` to support RSA-OAEP with SHA-256 only."
msgstr "解密算法列表。将其设置为 `RSA-OAEP-256` ，则仅支持使用 SHA-256 的 RSA-OAEP 算法。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.issuer`"
msgstr "`mp.jwt.verify.issuer`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Config property specifies the value of the `iss` (issuer) claim of the JWT that the server accepts as valid."
msgstr "配置属性指定服务器接受为有效的 JWT `iss` （签发者）声明的值。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.audiences`"
msgstr "`mp.jwt.verify.audiences`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Comma-separated list of audiences a token `aud` claim might contain."
msgstr "以逗号分隔的列表，列出 `aud` 标记声明可能包含的受众。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.clock.skew`"
msgstr "`mp.jwt.verify.clock.skew`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`60`"
msgstr "`60`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Clock skew in seconds used during the token expiration and age verification. An expired token is accepted if the current time is within the number of seconds specified by this property after the token expiration time. The default value is 60 seconds."
msgstr "令牌过期和年龄验证过程中使用的时钟偏差（以秒为单位）。如果当前时间在此属性指定的令牌过期时间后的秒数内，过期令牌将被接受。默认值为 60 秒。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.verify.token.age`"
msgstr "`mp.jwt.verify.token.age`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`none`"
msgstr "`none`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Number of seconds that must not elapse since the token `iat` (issued at) time."
msgstr "令牌 `iat` （发出时间）后不得超过的秒数。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.token.header`"
msgstr "`mp.jwt.token.header`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`Authorization`"
msgstr "`Authorization`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Set this property if another header, such as `Cookie`, is used to pass the token."
msgstr "如果使用其他标头（如 `Cookie` ）传递标记，则设置此属性。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`mp.jwt.token.cookie`"
msgstr "`mp.jwt.token.cookie`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Name of the cookie containing a token. This property is effective only if `mp.jwt.token.header` is set to `Cookie`."
msgstr "包含令牌的 cookie 名称。该属性只有在 `mp.jwt.token.header` 设置为 `Cookie` 时才有效。"

#. type: Title ===
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Additional SmallRye JWT configuration"
msgstr "额外的SmallRye JWT配置"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "SmallRye JWT provides more properties that can be used to customize the token processing:"
msgstr "SmallRye JWT 提供了更多属性，可用于自定义令牌处理："

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.secretkey`"
msgstr "`smallrye.jwt.verify.secretkey`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Secret key supplied as a string."
msgstr "以字符串形式提供的密钥。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.key.location`"
msgstr "`smallrye.jwt.verify.key.location`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "NONE"
msgstr "无"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Location of the verification key, which can point to both public and secret keys. Secret keys can only be in the JWK format. Note that 'mp.jwt.verify.publickey.location' is ignored if this property is set."
msgstr "验证密钥的位置，可指向公钥和密钥。秘钥只能是 JWK 格式。请注意，如果设置了该属性，\"mp.jwt.verify.publickey.location \"将被忽略。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.algorithm`"
msgstr "`smallrye.jwt.verify.algorithm`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Signature algorithm. This property should only be used to set a symmetric algorithm such as `HS256`. It is deprecated for setting asymmetric algorithms such as `ES256` - use 'mp.jwt.verify.publickey.algorithm' instead."
msgstr "签名算法。该属性只能用于设置对称算法，如 `HS256` 。对于设置非对称算法（如 `ES256` ），该属性已被弃用--请使用 \"mp.jwt.verify.publickey.algorithm\"。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.key-format`"
msgstr "`smallrye.jwt.verify.key-format`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`ANY`"
msgstr "`ANY`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property to a specific key format such as `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` or `JWK_BASE64URL` to optimize the way the verification key is loaded."
msgstr "将此属性设置为特定的密钥格式，如 `PEM_KEY` , `PEM_CERTIFICATE` , `JWK` 或 `JWK_BASE64URL` ，以优化验证密钥的加载方式。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.key-provider`"
msgstr "`smallrye.jwt.verify.key-provider`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`DEFAULT`"
msgstr "`DEFAULT`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "By default, PEM, JWK, or JWK key sets can be read from the local file system or fetched from URIs as required by MicroProfile JWT specification. Set this property to `AWS_ALB` to support an AWS Application Load Balancer verification key resolution."
msgstr "默认情况下，可从本地文件系统读取 PEM、JWK 或 JWK 密钥集，或根据 MicroProfile JWT 规范的要求从 URI 获取。将此属性设置为 `AWS_ALB` ，以支持 AWS 应用程序负载平衡器验证密钥解析。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.relax-key-validation`"
msgstr "`smallrye.jwt.verify.relax-key-validation`"

#: _versions/main/guides/security-jwt.adoc
msgid "false"
msgstr "false"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Relax the validation of the verification keys; setting this property to `true` allows public RSA keys with a length of less than 2048 bits."
msgstr "放宽验证密钥的验证；将此属性设置为 `true` ，可允许长度小于 2048 位的公开 RSA 密钥。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.certificate-thumbprint`"
msgstr "`smallrye.jwt.verify.certificate-thumbprint`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If this property is enabled, a signed token must contain either 'x5t' or 'x5t#S256' X509Certificate thumbprint headers. Verification keys can only be in JWK or PEM Certificate key formats. JWK keys must have an 'x5c' (Base64-encoded X509Certificate) property set."
msgstr "如果启用此属性，签名令牌必须包含 \"x5t \"或 \"x5t#S256 \"X509Certificate 缩略图 标头。验证密钥只能是 JWK 或 PEM 证书密钥格式。JWK 密钥必须设置 \"x5c\"（Base64-encoded X509Certificate）属性。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.header`"
msgstr "`smallrye.jwt.token.header`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Set this property if another header, such as `Cookie`, is used to pass the token. This property is deprecated - use 'mp.jwt.token.header'."
msgstr "如果使用其他标头（如 `Cookie` ）传递令牌，则设置此属性。该属性已被弃用，请使用 \"mp.jwt.token.header\"。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.key-cache-size`"
msgstr "`smallrye.jwt.key-cache-size`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`100`"
msgstr "`100` "

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Key cache size. Use this property and `smallrye.jwt.key-cache-time-to-live` to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr "密钥缓存大小。当密钥提供程序（如 `AWS_ALB` ）配置为 `smallrye.jwt.verify.key-provider=AWS_ALB` 以动态解析密钥时，可使用此属性和 `smallrye.jwt.key-cache-time-to-live` 控制密钥缓存。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.key-cache-time-to-live`"
msgstr "`smallrye.jwt.key-cache-time-to-live`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`10`"
msgstr "`10` "

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Key cache entry time-to-live in minutes. Use this property and `smallrye.jwt.key-cache-size` to control the key cache when a key provider such as `AWS_ALB` is configured with `smallrye.jwt.verify.key-provider=AWS_ALB` for resolving the keys dynamically."
msgstr "密钥缓存条目存活时间，以分钟为单位。当密钥提供者（如 `AWS_ALB` ）配置为 `smallrye.jwt.verify.key-provider=AWS_ALB` 以动态解析密钥时，可使用此属性和 `smallrye.jwt.key-cache-size` 控制密钥缓存。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.cookie`"
msgstr "`smallrye.jwt.token.cookie`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Name of the cookie containing a token. This property is effective only if `smallrye.jwt.token.header` is set to `Cookie`. This property is deprecated - use `mp.jwt.token.cookie`."
msgstr "包含令牌的 cookie 名称。该属性只有在 `smallrye.jwt.token.header` 设置为 `Cookie` 时才有效。该属性已被弃用--请使用 `mp.jwt.token.cookie` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.always-check-authorization`"
msgstr "`smallrye.jwt.always-check-authorization`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Set this property to `true` for the `Authorization` header to be checked even if the `smallrye.jwt.token.header` is set to `Cookie` but no cookie with a `smallrye.jwt.token.cookie` name exists."
msgstr "将此属性设置为 `true` ，即使 `smallrye.jwt.token.header` 设置为 `Cookie` 但不存在 `smallrye.jwt.token.cookie` 名称的 cookie，也会检查 `Authorization` 标头。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.schemes`"
msgstr "`smallrye.jwt.token.schemes`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`Bearer`"
msgstr "`Bearer`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Comma-separated list containing alternative single or multiple schemes, such as `DPoP`."
msgstr "以逗号分隔的列表，包含单个或多个备选方案，如 `DPoP` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.kid`"
msgstr "`smallrye.jwt.token.kid`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Key identifier. The verification JWK key and every JWT token must have a matching `kid` header if it is set."
msgstr "密钥标识符。如果设置了验证 JWK 密钥和每个 JWT 令牌，则必须有匹配的 `kid` 标头。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.time-to-live`"
msgstr "`smallrye.jwt.time-to-live`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "The maximum number of seconds a JWT can be issued for use. Effectively, the difference between the expiration date of the JWT and the issued at date must not exceed this value. Setting this property to a non-positive value relaxes the requirement for the token to have a valid 'iat' (issued at) claim."
msgstr "JWT 签发使用的最长秒数。实际上，JWT 的过期日期与签发日期之间的差值不能超过这个值。将此属性设置为非正值可以放宽对令牌具有有效 \"iat\"（签发日期）声明的要求。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.require.named-principal`"
msgstr "`smallrye.jwt.require.named-principal`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "`true`"
msgstr "`true` "

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "If an application relies on `java.security.Principal` returning a name, then a token must have a `upn` or `preferred_username` or `sub` claim set. Setting this property results in SmallRye JWT throwing an exception if none of these claims is available for the application code to deal with a non-null `Principal` name reliably."
msgstr "如果应用程序依赖 `java.security.Principal` 返回名称，那么令牌必须设置 `upn` 或 `preferred_username` 或 `sub` 声明。如果应用程序代码无法可靠地处理非空 `Principal` 名称，则设置该属性会导致 SmallRye JWT 引发异常。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.path.sub`"
msgstr "`smallrye.jwt.path.sub`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Path to the claim containing the subject name. It starts from the top-level JSON object and can contain multiple segments where each segment only represents a JSON object name, for example, `realms/subject`. This property can be used if a token has no 'sub' claim but has the subject set in a different claim. Use double quotes with the namespace-qualified claims."
msgstr "指向包含主题名称的主张的路径。它从顶层 JSON 对象开始，可以包含多个分段，其中每个分段只代表一个 JSON 对象名称，例如 `realms/subject` 。如果标记没有 \"子 \"权利要求，但在不同的权利要求中设置了主题，则可使用此属性。在名称空间限定的权利要求中使用双引号。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.claims.sub`"
msgstr "`smallrye.jwt.claims.sub`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property can set a default sub claim value when the current token has no standard or custom `sub` claim available. Effectively, this property can be used to customize the `java.security.Principal` name if no `upn` or `preferred_username` or `sub` claim is set."
msgstr "当当前标记没有可用的标准或自定义 `sub` 索赔时，该属性可设置默认子索赔值。实际上，如果没有设置 `upn` 或 `preferred_username` 或 `sub` 索赔，该属性可用于自定义 `java.security.Principal` 名称。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.path.groups`"
msgstr "`smallrye.jwt.path.groups`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Path to the claim containing the groups. It starts from the top-level JSON object and can contain multiple segments where each segment represents a JSON object name only, for example: `realm/groups`. This property can be used if a token has no 'groups' claim but has the groups set in a different claim. Use double quotes with the namespace-qualified claims."
msgstr "指向包含组的声明的路径。它从顶层 JSON 对象开始，可以包含多个分段，其中每个分段只代表一个 JSON 对象名称，例如： `realm/groups` 。如果标记没有 \"组 \"声明，但在其他声明中设置了组，则可使用此属性。在名称空间限定的声明中使用双引号。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.groups-separator`"
msgstr "`smallrye.jwt.groups-separator`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "space"
msgstr "空间"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Separator for splitting a string which might contain multiple group values. It is only used if the `smallrye.jwt.path.groups` property points to a custom claim with a string value. The default value is a single space because a standard OAuth2 `scope` claim might contain a space-separated sequence."
msgstr "分隔符，用于分割可能包含多个组值的字符串。只有当 `smallrye.jwt.path.groups` 属性指向具有字符串值的自定义请求时，才会使用该分隔符。默认值是单空格，因为标准 OAuth2 `scope` 声明可能包含空格分隔的序列。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.claims.groups`"
msgstr "`smallrye.jwt.claims.groups`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property can set a default groups claim value when the current token has no standard or custom groups claim available."
msgstr "当当前令牌没有可用的标准或自定义群组声明时，该属性可设置默认群组声明值。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.jwks.refresh-interval`"
msgstr "`smallrye.jwt.jwks.refresh-interval`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "60"
msgstr "60"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "JWK cache refresh interval in minutes. It is ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL-based JWK set and no HTTP `Cache-Control` response header with a positive `max-age` parameter value is returned from a JWK HTTPS endpoint."
msgstr "JWK 缓存刷新间隔（分钟）。除非 `mp.jwt.verify.publickey.location` 指向基于 HTTP 或 HTTPS URL 的 JWK 设置，并且没有从 JWK HTTPS 端点返回带有正 `max-age` 参数值的 HTTP `Cache-Control` 响应头，否则它将被忽略。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.jwks.forced-refresh-interval`"
msgstr "`smallrye.jwt.jwks.forced-refresh-interval`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "30"
msgstr "30"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Forced JWK cache refresh interval in minutes, which is used to restrict the frequency of the forced refresh attempts that might happen when the token verification fails due to the cache having no JWK key with a `kid` property matching the current token's `kid` header. It is ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL-based JWK set."
msgstr "强制 JWK 缓存刷新间隔（以分钟为单位），用于限制强制刷新尝试的频率，当缓存中没有与当前令牌的 `kid` 标头相匹配的 `kid` 属性的 JWK 密钥时，令牌验证可能会失败。除非 `mp.jwt.verify.publickey.location` 指向基于 HTTP 或 HTTPS URL 的 JWK 集，否则它将被忽略。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.expiration.grace`"
msgstr "`smallrye.jwt.expiration.grace`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "0"
msgstr "0"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Expiration grace in seconds. By default, an expired token is still accepted if the current time is no more than 1 min after the token expiry time. This property is deprecated. Use `mp.jwt.verify.clock.skew` instead."
msgstr "过期宽限期，以秒为单位。默认情况下，如果当前时间距令牌过期时间不超过 1 分钟，过期令牌仍会被接受。该属性已被弃用。请使用 `mp.jwt.verify.clock.skew` 代替。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.verify.aud`"
msgstr "`smallrye.jwt.verify.aud`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Comma-separated list of audiences a token `aud` claim might contain. This property is deprecated - use `mp.jwt.verify.audiences`."
msgstr "以逗号分隔的列表，列出 `aud` 标记声明可能包含的受众。该属性已被弃用--请使用 `mp.jwt.verify.audiences` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.required.claims`"
msgstr "`smallrye.jwt.required.claims`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Comma-separated list of the claims a token must contain."
msgstr "以逗号分隔的标记必须包含的权利要求列表。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.decrypt.key.location`"
msgstr "`smallrye.jwt.decrypt.key.location`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Config property to specify the external or internal location of Private Decryption Key. This property is deprecated - use `mp.jwt.decrypt.key.location`."
msgstr "配置属性，用于指定私人解密密钥的外部或内部位置。该属性已被弃用，请使用 `mp.jwt.decrypt.key.location` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.decrypt.algorithm`"
msgstr "`smallrye.jwt.decrypt.algorithm`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`RSA_OAEP`"
msgstr " `RSA_OAEP` "

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption algorithm."
msgstr "解密算法。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.decrypt.key`"
msgstr "`smallrye.jwt.decrypt.key`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption key supplied as a string."
msgstr "以字符串形式提供的解密密钥。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.token.decryption.kid`"
msgstr "`smallrye.jwt.token.decryption.kid`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption Key identifier. If it is set then the decryption JWK key as well every JWT token must have a matching `kid` header."
msgstr "解密密钥标识符。如果它被设置，那么解密JWK密钥以及每个JWT标记必须有一个匹配的 `kid` header。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.client.tls.certificate.path`"
msgstr "`smallrye.jwt.client.tls.certificate.path`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Path to TLS trusted certificate which might need to be configured if the keys have to be fetched over `HTTPS`."
msgstr "如果需要通过 `HTTPS` 获取密钥，可能需要配置 TLS 可信证书的路径。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.client.tls.trust-all`"
msgstr "`smallrye.jwt.client.tls.trust-all`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Trust all the hostnames. If the keys have to be fetched over `HTTPS` and this property is set to `true` then all the hostnames are trusted by default."
msgstr "信任所有的主机名。如果钥匙必须通过 `HTTPS` 获得，并且该属性被设置为 `true` ，那么所有的主机名都被默认信任。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.client.tls.hosts`"
msgstr "`smallrye.jwt.client.tls.hosts`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "Set of trusted hostnames. If the keys have to be fetched over `HTTPS` and `smallrye.jwt.client.tls.trust-all` is set to `false` then this property can be used to configure the trusted hostnames."
msgstr "受信任的主机名的集合。如果钥匙必须通过 `HTTPS` 获得，并且 `smallrye.jwt.client.tls.trust-all` 被设置为 `false` ，那么这个属性可以用来配置可信的主机名。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.http.proxy.host`"
msgstr "`smallrye.jwt.http.proxy.host`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "HTTP proxy host."
msgstr "HTTP代理主机。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.http.proxy.port`"
msgstr "`smallrye.jwt.http.proxy.port`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "80"
msgstr "80"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "HTTP proxy port."
msgstr "HTTP代理端口。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.type`"
msgstr "`smallrye.jwt.keystore.type`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`JKS`"
msgstr " `JKS` "

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property can be used to customize a keystore type if either `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file. If it is not set, the file name is checked to determine the keystore type before defaulting to `JKS`."
msgstr "如果 `mp.jwt.verify.publickey.location` 或 `mp.jwt.decrypt.key.location` 指向 `KeyStore` 文件，该属性可用于自定义密钥存储类型。如果未设置，则会检查文件名以确定密钥存储类型，然后默认为 `JKS` 。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.provider`"
msgstr "`smallrye.jwt.keystore.provider`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to customize a `KeyStore` provider if `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "如果 `mp.jwt.verify.publickey.location` 或 `mp.jwt.decrypt.key.location` 指向一个 `KeyStore` 文件，该属性可用于定制一个 `KeyStore` 提供者。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.password`"
msgstr "`smallrye.jwt.keystore.password`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Keystore password. If `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location`, this property must be set."
msgstr "Keystore 密码。如果 `mp.jwt.verify.publickey.location` 或 `mp.jwt.decrypt.key.location` ，则必须设置此属性。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.verify.key.alias`"
msgstr "`smallrye.jwt.keystore.verify.key.alias`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property has to be set to identify a public verification key which is extracted from `KeyStore` from a matching certificate if `mp.jwt.verify.publickey.location` points to a `KeyStore` file."
msgstr "如果 `mp.jwt.verify.publickey.location` 指向 `KeyStore` 文件，则必须设置此属性，以识别从 `KeyStore` 提取的公共验证密钥，该密钥来自匹配证书。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.decrypt.key.alias`"
msgstr "`smallrye.jwt.keystore.decrypt.key.alias`"

#. type: Table
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "如果 `mp.jwt.decrypt.key.location` 指向 `KeyStore` 文件，则必须将此属性设置为标识专用解密密钥。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.decrypt.key.password`"
msgstr "`smallrye.jwt.keystore.decrypt.key.password`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "This property can be set if a private decryption key's password in `KeyStore` is different from `smallrye.jwt.keystore.password` when `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "当 `mp.jwt.decrypt.key.location` 指向 `KeyStore` 文件时，如果 `KeyStore` 中私人解密密钥的密码与 `smallrye.jwt.keystore.password` 中的密码不同，则可设置此属性。"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "`smallrye.jwt.resolve-remote-keys-at-startup`"
msgstr "`smallrye.jwt.resolve-remote-keys-at-startup`"

#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "Set this property to true to resolve the remote keys at the application startup."
msgstr "将此属性设为 true，可在应用程序启动时解析远程键。"

#. type: Title ==
#: _versions/main/guides/security-jwt.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON网络令牌]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON网络签名]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON网络加密]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON网络算法]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "xref:security-jwt-build.adoc[使用 SmallRye JWT Build 对 JWT 令牌进行签名和加密]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[组合认证机制]"

#. type: Plain text
#: _versions/main/guides/security-jwt.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"
