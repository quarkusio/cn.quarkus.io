# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/dev-ui.adoc:6
#, no-wrap
msgid "Dev UI"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:11
msgid "This guide covers the Quarkus Dev UI for xref:building-my-first-extension.adoc[extension authors]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:15
msgid "Quarkus now ships with a new experimental Dev UI, which is available in dev mode (when you start quarkus with `mvn quarkus:dev`) at http://localhost:8080/q/dev[/q/dev] by default. It will show you something like this:"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/main/guides/dev-ui.adoc:16
#: upstream/_versions/main/guides/dev-ui.adoc:42
#: upstream/_versions/main/guides/dev-ui.adoc:125
#: upstream/_versions/main/guides/dev-ui.adoc:316
#: upstream/_versions/main/guides/dev-ui.adoc:401
#, no-wrap
msgid "Dev"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:16
#, no-wrap
msgid "dev-ui-overview.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:20
msgid "It allows you to quickly visualize all the extensions currently loaded, see their status and go directly to their documentation."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:22
msgid "On top of that, each extension can add:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:24
msgid "<<how-can-i-make-my-extension-support-the-dev-ui,Custom useful bits of runtime information in the overview>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:25
msgid "<<adding-full-pages,Full custom pages>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:26
msgid "<<advanced-usage-adding-actions,Interactive pages with actions>>"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:27
#, no-wrap
msgid "How can I make my extension support the Dev UI?"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:30
msgid "In order to make your extension listed in the Dev UI you don't need to do anything!"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:32
msgid "So you can always start with that :)"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:35
msgid "If you want to contribute badges or links in your extension card on the Dev UI overview page, like this:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:37
msgid "image:dev-ui-embedded.png[alt=Dev UI embedded,role=\"center\"]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:41
msgid "You have to add a file named `dev-templates/embedded.html` in your xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] extension module's resources:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:42
#, no-wrap
msgid "dev-ui-embedded-file.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:46
msgid "The contents of this file will be included in your extension card, so for example we can place two links with some styling and icons:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:56
#, no-wrap
msgid ""
"<a href=\"{config:http-path('quarkus.smallrye-openapi.path')}\" class=\"badge badge-light\">\n"
"  <i class=\"fa fa-map-signs fa-fw\"></i>\n"
"  OpenAPI</a>\n"
"<br>\n"
"<a href=\"{config:http-path('quarkus.swagger-ui.path')}/\" class=\"badge badge-light\">\n"
"  <i class=\"fa fa-map-signs fa-fw\"></i>\n"
"  Swagger UI</a>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:59
msgid "We use the Font Awesome Free icon set."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:63
msgid "Note how the paths are specified: `{config:http-path('quarkus.smallrye-openapi.path')}`. This is a special directive that the quarkus dev console understands: it will replace that value with the resolved route named 'quarkus.smallrye-openapi.path'."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:65
msgid "The corresponding non-application endpoint is declared using `.routeConfigKey` to associate the route with a name:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:73
#, no-wrap
msgid ""
"    nonApplicationRootPathBuildItem.routeBuilder()\n"
"            .route(openApiConfig.path) // <1>\n"
"            .routeConfigKey(\"quarkus.smallrye-openapi.path\") // <2>\n"
"            ...\n"
"            .build();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:75
msgid "The configured path is resolved into a valid route."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:76
msgid "The resolved route path is then associated with the key `quarkus.smallrye-openapi.path`."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:77
#, no-wrap
msgid "Path considerations"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:80
msgid "Paths are tricky business. Keep the following in mind:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:82
msgid "Assume your UI will be nested under the dev endpoint. Do not provide a way to customize this without a strong reason."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:83
msgid "Never construct your own absolute paths. Adding a suffix to a known, normalized and resolved path is fine."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:88
msgid "Configured paths, like the `dev` endpoint used by the console or the SmallRye OpenAPI path shown in the example above, need to be properly resolved against both `quarkus.http.root-path` and `quarkus.http.non-application-root-path`.  Use `NonApplicationRootPathBuildItem` or `HttpRootPathBuildItem` to construct endpoint routes and identify resolved path values that can then be used in templates."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:90
msgid "The `{devRootAppend}` variable can also be used in templates to construct URLs for static dev console resources, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:94
#, no-wrap
msgid "<img src=\"{devRootAppend}/resources/images/quarkus_icon_rgb_reverse.svg\" width=\"40\" height=\"30\" class=\"d-inline-block align-middle\" alt=\"Quarkus\"/>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:98
msgid "Refer to the xref:all-config.adoc#quarkus-vertx-http_quarkus.http.non-application-root-path[Quarkus Vertx HTTP configuration reference] for details on how the non-application root path is configured."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:99
#, no-wrap
msgid "Template and styling support"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:103
msgid "Both the `embedded.html` files and any full page you add in `/dev-templates` will be interpreted by xref:qute.adoc[the Qute template engine]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:106
msgid "This also means that you can xref:qute-reference.adoc#user_tags[add custom Qute tags] in `/dev-templates/tags` for your templates to use."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:109
msgid "The style system currently in use is https://getbootstrap.com/docs/4.6/getting-started/introduction/[Bootstrap V4 (4.6.0)] but note that this might change in the future."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:111
msgid "The main template also includes https://jquery.com/[jQuery 3.5.1], but here again this might change."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:112
#, no-wrap
msgid "Accessing Config Properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:117
msgid "A `config:property(name)` expression can be used to output the config value for the given property name.  The property name can be either a string literal or obtained dynamically by another expression.  For example `{config:property('quarkus.lambda.handler')}` and `{config:property(foo.propertyName)}`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:120
msgid "Reminder: do not use this to retrieve raw configured path values. As shown above, use `{config:http-path(...)}` with a known route configuration key when working with resource paths."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:121
#, no-wrap
msgid "Adding full pages"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:124
msgid "To add full pages for your Dev UI extension such as this one:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:125
#, no-wrap
msgid "dev-ui-page.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:130
msgid "You need to place them in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module's `/dev-templates` resource folder, like this page for the xref:cache.adoc[`quarkus-cache` extension]:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:179
#, no-wrap
msgid ""
"{#include main}// <1>\n"
"    {#style}// <2>\n"
"        .custom {\n"
"            color: gray;\n"
"        }\n"
"    {/style}\n"
"    {#script} // <3>\n"
"     $(document).ready(function(){\n"
"        $(function () {\n"
"          $('[data-toggle=\"tooltip\"]').tooltip()\n"
"        });\n"
"    });\n"
"    {/script}\n"
"    {#title}Cache{/title}// <4>\n"
"    {#body}// <5>\n"
"        <table class=\"table table-striped custom\">\n"
"            <thead class=\"thead-dark\">\n"
"                <tr>\n"
"                    <th scope=\"col\">Name</th>\n"
"                    <th scope=\"col\">Size</th>\n"
"                </tr>\n"
"            </thead>\n"
"            <tbody>\n"
"                {#for cacheInfo in info:cacheInfos}// <6>\n"
"                    <tr>\n"
"                        <td>\n"
"                            {cacheInfo.name}\n"
"                        </td>\n"
"                        <td>\n"
"                            <form method=\"post\"// <7> \n"
"                                  enctype=\"application/x-www-form-urlencoded\">\n"
"                                <label class=\"form-check-label\" for=\"clear\">\n"
"                                    {cacheInfo.size}\n"
"                                </label>\n"
"                                <input type=\"hidden\" name=\"name\" value=\"{cacheInfo.name}\">\n"
"                                <input id=\"clear\" type=\"submit\" \n"
"                                       class=\"btn btn-primary btn-sm\" value=\"Clear\" >\n"
"                            </form>\n"
"                        </td>\n"
"                    </tr>\n"
"                {/for}\n"
"            </tbody>\n"
"        </table>\n"
"    {/body}\n"
"{/include}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:181
msgid "In order to benefit from the same style as other Dev UI pages, extend the `main` template"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:182
msgid "You can pass extra CSS for your page in the `style` template parameter"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:183
msgid "You can pass extra JavaScript for your page in the `script` template parameter. This will be added inline after the JQuery script, so you can safely use JQuery in your script."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:184
msgid "Don't forget to set your page title in the `title` template parameter"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:185
msgid "The `body` template parameter will contain your content"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:187
msgid "In order for your template to read custom information from your Quarkus extension, you can use the `info` xref:qute-reference.adoc#namespace_extension_methods[namespace]."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:188
msgid "This shows an <<advanced-usage-adding-actions,interactive page>>"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:189
#, no-wrap
msgid "Linking to your full-page templates"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:194
msgid "Full-page templates for extensions live under a pre-defined `{devRootAppend}/{groupId}.{artifactId}/` directory that is referenced using the `urlbase` template parameter. Using configuration defaults, that would resolve to `/q/dev/io.quarkus.quarkus-cache/`, as an example."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:196
msgid "Use the `{urlbase}` template parameter to reference this folder in `embedded.html`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:202
#, no-wrap
msgid ""
"<a href=\"{urlbase}/caches\" class=\"badge badge-light\">// <1>\n"
"  <i class=\"fa ...\"></i>\n"
"  Caches <span class=\"badge badge-light\">{info:cacheInfos.size()}</span></a>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:204
msgid "Use the `urlbase` template parameter to reference full-page templates for your extension"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:205
#, no-wrap
msgid "Passing information to your templates"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:209
msgid "In `embedded.html` or in full-page templates, you will likely want to display information that is available from your extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:212
msgid "There are two ways to make that information available, depending on whether it is available at build time or at run time."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:216
msgid "In both cases we advise that you add support for the Dev UI in your `{pkg}.deployment.devconsole` package in a `DevConsoleProcessor` class (in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module)."
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:217
#, no-wrap
msgid "Passing run-time information"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:222
#: upstream/_versions/main/guides/dev-ui.adoc:326
#, no-wrap
msgid "package io.quarkus.cache.deployment.devconsole;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:227
#, no-wrap
msgid ""
"import io.quarkus.cache.runtime.CaffeineCacheSupplier;\n"
"import io.quarkus.deployment.IsDevelopment;\n"
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.devconsole.spi.DevConsoleRuntimeTemplateInfoBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:229
#: upstream/_versions/main/guides/dev-ui.adoc:291
#: upstream/_versions/main/guides/dev-ui.adoc:335
#, no-wrap
msgid "public class DevConsoleProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:236
#, no-wrap
msgid ""
"    @BuildStep(onlyIf = IsDevelopment.class)// <1>\n"
"    public DevConsoleRuntimeTemplateInfoBuildItem collectBeanInfo() {\n"
"        return new DevConsoleRuntimeTemplateInfoBuildItem(\"cacheInfos\",\n"
"                      new CaffeineCacheSupplier());// <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:239
msgid "Don't forget to make this xref:building-my-first-extension.adoc#deploying-the-greeting-feature[build step] conditional on being in dev mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:240
msgid "Declare a run-time dev `info:cacheInfos` template value"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:243
msgid "This will map the `info:cacheInfos` value to this supplier in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`runtime module`]:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:247
#, no-wrap
msgid "package io.quarkus.cache.runtime;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:253
#, no-wrap
msgid ""
"import java.util.ArrayList;\n"
"import java.util.Collection;\n"
"import java.util.Comparator;\n"
"import java.util.List;\n"
"import java.util.function.Supplier;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:256
#, no-wrap
msgid ""
"import io.quarkus.arc.Arc;\n"
"import io.quarkus.cache.CaffeineCache;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:258
#, no-wrap
msgid "public class CaffeineCacheSupplier implements Supplier<Collection<CaffeineCache>> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:265
#, no-wrap
msgid ""
"    @Override\n"
"    public List<CaffeineCache> get() {\n"
"        List<CaffeineCache> allCaches = new ArrayList<>(allCaches());\n"
"        allCaches.sort(Comparator.comparing(CaffeineCache::getName));\n"
"        return allCaches;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:272
#, no-wrap
msgid ""
"    public static Collection<CaffeineCache> allCaches() {\n"
"        // Get it from ArC at run-time\n"
"        return (Collection<CaffeineCache>) (Collection) \n"
"            Arc.container().instance(CacheManagerImpl.class).get().getAllCaches();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/main/guides/dev-ui.adoc:274
#, no-wrap
msgid "Passing build-time information"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:277
msgid "Sometimes you only need build-time information to be passed to your template, so you can do it like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:281
#, no-wrap
msgid "package io.quarkus.qute.deployment.devconsole;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:283
#, no-wrap
msgid "import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:289
#, no-wrap
msgid ""
"import io.quarkus.deployment.IsDevelopment;\n"
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.devconsole.spi.DevConsoleTemplateInfoBuildItem;\n"
"import io.quarkus.qute.deployment.CheckedTemplateBuildItem;\n"
"import io.quarkus.qute.deployment.TemplateVariantsBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:306
#, no-wrap
msgid ""
"    @BuildStep(onlyIf = IsDevelopment.class)\n"
"    public DevConsoleTemplateInfoBuildItem collectBeanInfo(\n"
"            List<CheckedTemplateBuildItem> checkedTemplates,// <1>\n"
"            TemplateVariantsBuildItem variants) {\n"
"        DevQuteInfos quteInfos = new DevQuteInfos();\n"
"        for (CheckedTemplateBuildItem checkedTemplate : checkedTemplates) {\n"
"            DevQuteTemplateInfo templateInfo = \n"
"                new DevQuteTemplateInfo(checkedTemplate.templateId,\n"
"                    variants.getVariants().get(checkedTemplate.templateId),\n"
"                    checkedTemplate.bindings);\n"
"            quteInfos.addQuteTemplateInfo(templateInfo);\n"
"        }\n"
"        return new DevConsoleTemplateInfoBuildItem(\"devQuteInfos\", quteInfos);// <2>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:308
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:310
msgid "Use whatever dependencies you need as input"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:311
msgid "Declare a build-time `info:devQuteInfos` DEV template value"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/dev-ui.adoc:312
#, no-wrap
msgid "Advanced usage: adding actions"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:315
msgid "You can also add actions to your Dev UI templates:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:316
#, no-wrap
msgid "dev-ui-interactive.png"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:321
msgid "This can be done by adding another xref:building-my-first-extension.adoc#deploying-the-greeting-feature[build step] to declare the action in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`deployment`] module:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:328
#, no-wrap
msgid "import static io.quarkus.deployment.annotations.ExecutionTime.STATIC_INIT;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:333
#, no-wrap
msgid ""
"import io.quarkus.cache.runtime.devconsole.CacheDevConsoleRecorder;\n"
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.deployment.annotations.Record;\n"
"import io.quarkus.devconsole.spi.DevConsoleRouteBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:343
#, no-wrap
msgid ""
"    @BuildStep\n"
"    @Record(value = STATIC_INIT, optional = true)// <1>\n"
"    DevConsoleRouteBuildItem invokeEndpoint(CacheDevConsoleRecorder recorder) {\n"
"        return new DevConsoleRouteBuildItem(\"caches\", \"POST\",\n"
"                                            recorder.clearCacheHandler());// <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:345
msgid "Mark the recorder as optional, so it will only be invoked when in dev mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:346
msgid "Declare a `POST {urlbase}/caches` route handled by the given handler"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:349
msgid "Note: you can see <<action-example,how to invoke this action from your full page>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:352
msgid "Now all you have to do is implement the recorder in your extension's xref:building-my-first-extension.adoc#description-of-a-quarkus-extension[`runtime module`]:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:357
#, no-wrap
msgid "package io.quarkus.cache.runtime.devconsole;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:366
#, no-wrap
msgid ""
"import io.quarkus.cache.CaffeineCache;\n"
"import io.quarkus.cache.runtime.CaffeineCacheSupplier;\n"
"import io.quarkus.runtime.annotations.Recorder;\n"
"import io.quarkus.devconsole.runtime.spi.DevConsolePostHandler;\n"
"import io.quarkus.vertx.http.runtime.devmode.devconsole.FlashScopeUtil.FlashMessageStatus;\n"
"import io.vertx.core.Handler;\n"
"import io.vertx.core.MultiMap;\n"
"import io.vertx.ext.web.RoutingContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:369
#, no-wrap
msgid ""
"@Recorder\n"
"public class CacheDevConsoleRecorder {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/dev-ui.adoc:389
#, no-wrap
msgid ""
"    public Handler<RoutingContext> clearCacheHandler() {\n"
"        return new DevConsolePostHandler() {// <1>\n"
"            @Override\n"
"            protected void handlePost(RoutingContext event, MultiMap form) // <2> \n"
"              throws Exception {\n"
"                String cacheName = form.get(\"name\");\n"
"                for (CaffeineCache cache : CaffeineCacheSupplier.allCaches()) {\n"
"                    if (cache.getName().equals(cacheName)) {\n"
"                        cache.invalidateAll();\n"
"                        flashMessage(event, \"Cache for \" + cacheName + \" cleared\");// <3>\n"
"                        return;\n"
"                    }\n"
"                }\n"
"                flashMessage(event, \"Cache for \" + cacheName + \" not found\", \n"
"                             FlashMessageStatus.ERROR);// <4>\n"
"            }\n"
"        };\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:393
msgid "While you can use https://vertx.io/docs/vertx-web/java/#_routing_by_http_method[any Vert.x handler], the `DevConsolePostHandler` superclass will handle your POST actions nicely, and auto-redirect to the `GET` URI right after your `POST` for optimal behavior."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:394
msgid "You can get the Vert.x `RoutingContext` as well as the `form` contents"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:395
msgid "Don't forget to add a message for the user to let them know everything went fine"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:396
msgid "You can also add error messages"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/dev-ui.adoc:400
msgid "Flash messages are handled by the `main` DEV template and will result in nice notifications for your users:"
msgstr ""

#. type: Target for macro image
#: upstream/_versions/main/guides/dev-ui.adoc:401
#, no-wrap
msgid "dev-ui-message.png"
msgstr ""
