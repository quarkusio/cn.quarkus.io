# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/main/guides/websockets.adoc:6
#, no-wrap
msgid "Using WebSockets"
msgstr "使用WebSockets"

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:12
msgid "This guide explains how your Quarkus application can utilize web sockets to create interactive web applications.  Because it's the _canonical_ web socket application, we are going to create a simple chat application."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:13
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:17
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:20
msgid "In this guide, we create a straightforward chat application using web sockets to receive and send messages to the other connected users."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:22
msgid "image:websocket-guide-architecture.png[alt=Architecture]"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:23
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:27
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can skip right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:29
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:31
msgid "The solution is located in the `websockets-quickstart` {quickstarts-tree-url}/websockets-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:32
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:35
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:41
msgid "This command generates the project (without any classes) and imports the `websockets` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:44
msgid "If you already have your Quarkus project configured, you can add the `websockets` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:49
msgid "This will add the following to your build file:"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/websockets.adoc:51
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:57
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-websockets</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/main/guides/websockets.adoc:60
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:63
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-websockets\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:66
msgid "If you only want to use the WebSocket client you should include `quarkus-websockets-client` instead."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:67
#, no-wrap
msgid "Handling web sockets"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:72
msgid "Our application contains a single class that handles the web sockets.  Create the `org.acme.websockets.ChatSocket` class in the `src/main/java` directory.  Copy the following content into the created file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:76
#: upstream/_versions/main/guides/websockets.adoc:181
#, no-wrap
msgid "package org.acme.websockets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:79
#, no-wrap
msgid ""
"import java.util.Map;\n"
"import java.util.concurrent.ConcurrentHashMap;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:88
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.websocket.OnClose;\n"
"import javax.websocket.OnError;\n"
"import javax.websocket.OnMessage;\n"
"import javax.websocket.OnOpen;\n"
"import javax.websocket.server.PathParam;\n"
"import javax.websocket.server.ServerEndpoint;\n"
"import javax.websocket.Session;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:92
#, no-wrap
msgid ""
"@ServerEndpoint(\"/chat/{username}\")         // <1>\n"
"@ApplicationScoped\n"
"public class ChatSocket {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:94
#, no-wrap
msgid "    Map<String, Session> sessions = new ConcurrentHashMap<>(); // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:99
#, no-wrap
msgid ""
"    @OnOpen\n"
"    public void onOpen(Session session, @PathParam(\"username\") String username) {\n"
"        sessions.put(username, session);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:105
#, no-wrap
msgid ""
"    @OnClose\n"
"    public void onClose(Session session, @PathParam(\"username\") String username) {\n"
"        sessions.remove(username);\n"
"        broadcast(\"User \" + username + \" left\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:111
#, no-wrap
msgid ""
"    @OnError\n"
"    public void onError(Session session, @PathParam(\"username\") String username, Throwable throwable) {\n"
"        sessions.remove(username);\n"
"        broadcast(\"User \" + username + \" left on error: \" + throwable);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:120
#, no-wrap
msgid ""
"    @OnMessage\n"
"    public void onMessage(String message, @PathParam(\"username\") String username) {\n"
"        if (message.equalsIgnoreCase(\"_ready_\")) {\n"
"            broadcast(\"User \" + username + \" joined\");\n"
"        } else {\n"
"            broadcast(\">> \" + username + \": \" + message);\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:130
#, no-wrap
msgid ""
"    private void broadcast(String message) {\n"
"        sessions.values().forEach(s -> {\n"
"            s.getAsyncRemote().sendObject(message, result ->  {\n"
"                if (result.getException() != null) {\n"
"                    System.out.println(\"Unable to send message: \" + result.getException());\n"
"                }\n"
"            });\n"
"        });\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:132
#: upstream/_versions/main/guides/websockets.adoc:235
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:134
msgid "Configures the web socket URL"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:135
msgid "Stores the currently opened web sockets"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:136
#, no-wrap
msgid "A slick web frontend"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:141
msgid "All chat applications need a _nice_ UI, well, this one may not be that nice, but does the work.  Quarkus automatically serves static resources contained in the `META-INF/resources` directory.  Create the `src/main/resources/META-INF/resources` directory and copy this {quickstarts-blob-url}/websockets-quickstart/src/main/resources/META-INF/resources/index.html[index.html] file in it."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:142
#, no-wrap
msgid "Run the application"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:145
msgid "Now, let's see our application in action. Run it with:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:149
msgid "Then open your 2 browser windows to http://localhost:8080/:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:151
msgid "Enter a name in the top text area (use 2 different names)."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:152
msgid "Click on connect"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:153
msgid "Send and receive messages"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:155
msgid "image:websocket-guide-screenshot.png[alt=Application]"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:157
msgid "As usual, the application can be packaged using:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:161
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:163
msgid "You can also build the native executable using:"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:167
msgid "You can also test your web socket applications using the approach detailed {quickstarts-blob-url}/websockets-quickstart/src/test/java/org/acme/websockets/ChatTest.java[here]."
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:168
#, no-wrap
msgid "WebSocket Clients"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:171
msgid "Quarkus also contains a WebSocket client. You can call `ContainerProvider.getWebSocketContainer().connectToServer` to create a websocket connection. By default the `quarkus-websockets` artifact includes both client and server support however if you only want the client you can include `quarkus-websockets-client` instead."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:175
msgid "When you connect to the server you can either pass in the Class of the annotated client endpoint you want to use, or an instance of `javax.websocket.Endpoint`. If you are using the annotated endpoint then you can use the exact same annotations as you can on the server, except it must be annotated with `@ClientEndpoint` instead of `@ServerEndpoint`."
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:177
msgid "The example below shows the client being used to test the chat endpoint above."
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:185
#, no-wrap
msgid ""
"import java.net.URI;\n"
"import java.util.concurrent.LinkedBlockingDeque;\n"
"import java.util.concurrent.TimeUnit;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:191
#, no-wrap
msgid ""
"import javax.websocket.ClientEndpoint;\n"
"import javax.websocket.ContainerProvider;\n"
"import javax.websocket.OnMessage;\n"
"import javax.websocket.OnOpen;\n"
"import javax.websocket.Session;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:194
#, no-wrap
msgid ""
"import org.junit.jupiter.api.Assertions;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:197
#, no-wrap
msgid ""
"import io.quarkus.test.common.http.TestHTTPResource;\n"
"import io.quarkus.test.junit.QuarkusTest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:200
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class ChatTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:202
#, no-wrap
msgid "    private static final LinkedBlockingDeque<String> MESSAGES = new LinkedBlockingDeque<>();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:205
#, no-wrap
msgid ""
"    @TestHTTPResource(\"/chat/stu\")\n"
"    URI uri;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:215
#, no-wrap
msgid ""
"    @Test\n"
"    public void testWebsocketChat() throws Exception {\n"
"        try (Session session = ContainerProvider.getWebSocketContainer().connectToServer(Client.class, uri)) {\n"
"            Assertions.assertEquals(\"CONNECT\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"            Assertions.assertEquals(\"User stu joined\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"            session.getAsyncRemote().sendText(\"hello world\");\n"
"            Assertions.assertEquals(\">> stu: hello world\", MESSAGES.poll(10, TimeUnit.SECONDS));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:218
#, no-wrap
msgid ""
"    @ClientEndpoint\n"
"    public static class Client {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:226
#, no-wrap
msgid ""
"        @OnOpen\n"
"        public void open(Session session) {\n"
"            MESSAGES.add(\"CONNECT\");\n"
"            // Send a message to indicate that we are ready,\n"
"            // as the message handler may not be registered immediately after this callback.\n"
"            session.getAsyncRemote().sendText(\"_ready_\");\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:231
#, no-wrap
msgid ""
"        @OnMessage\n"
"        void message(String msg) {\n"
"            MESSAGES.add(msg);\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/main/guides/websockets.adoc:233
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/main/guides/websockets.adoc:238
#, no-wrap
msgid "More WebSocket Information"
msgstr ""

#. type: Plain text
#: upstream/_versions/main/guides/websockets.adoc:241
msgid "The Quarkus WebSocket implementation is an implementation of link:https://jakarta.ee/specifications/websocket/[Jakarta Websockets]."
msgstr ""
