# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-12 02:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/flyway.adoc
#, no-wrap
msgid "Using Flyway"
msgstr "使用Flyway"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "https://flywaydb.org/[Flyway] is a popular database migration tool that is commonly used in JVM environments."
msgstr "link:https://flywaydb.org/[Flyway] 是一个流行的数据库迁移工具，通常用于JVM环境。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "Quarkus provides first class support for using Flyway as will be explained in this guide."
msgstr "本指南将会介绍Quarkus为使用Flyway提供了哪些一流的支持。"

#. type: Title ==
#: _versions/main/guides/flyway.adoc
#, no-wrap
msgid "Setting up support for Flyway"
msgstr "建立对Flyway的支持"

#: _versions/main/guides/flyway.adoc
msgid "As shown in the <<developing-with-flyway>> section, to start using Flyway with your project, you just need to:"
msgstr "参照 <<用flyway开发>> ，要开始在项目中使用Flyway，只需要："

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "add your migrations to the `{migrations-path}` folder as you usually do with Flyway"
msgstr "像通常使用Flyway那样，将你的迁移文件添加到 `{migrations-path}` 文件夹中。"

#: _versions/main/guides/flyway.adoc
msgid ""
"activate the `migrate-at-start` option to migrate the schema automatically or inject the `Flyway` object and run\n"
"your migration as you normally do"
msgstr "激活 `migrate-at-start` 选项来自动迁移表，或者添加 `Flyway` 对象，然后像通常那样运行迁移。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "In your build file, add the following dependencies:"
msgstr "在你的项目构建文件中，添加以下依赖："

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "the Flyway extension"
msgstr "Flyway扩展"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "your JDBC driver extension (`quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, `quarkus-jdbc-mariadb`, ...)"
msgstr "JDBC驱动扩展 (如 `quarkus-jdbc-postgresql` , `quarkus-jdbc-h2` , `quarkus-jdbc-mariadb` , ...)"

#: _versions/main/guides/flyway.adoc
msgid "unless you're using in-memory or file databases (such as H2 or SQLite), you need to add a flyway module dependency corresponding to the database you're using. (https://github.com/flyway/flyway/issues/3780[for more details])"
msgstr ""

#. type: Block title
#: _versions/main/guides/flyway.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/flyway.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/flyway.adoc
msgid ""
"Flyway support relies on the Quarkus datasource config.\n"
"It can be customized for the default datasource as well as for every <<multiple-datasources,named datasource>>.\n"
"First, you need to add the datasource config to the `{config-file}` file\n"
"in order to allow Flyway to manage the schema.\n"
"Also, you can customize the Flyway behaviour by using the following properties:"
msgstr "Flyway支持依赖于Quarkus的数据源配置。它可以为默认的数据源以及每个 link:#multiple-datasources[命名的数据源] 进行定制。首先，你需要将数据源配置添加到 `{config-file}` 文件中，以便让Flyway管理数据库模型。另外，你可以根据以下属性来设置Flyway。"

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _versions/main/guides/flyway.adoc
#, no-wrap
msgid "Developing with Flyway"
msgstr "用Flyway开发"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "The following is an example for the `{config-file}` file:"
msgstr "下面是 `{config-file}` 文件的一个例子。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "Add a SQL migration to the default folder following the Flyway naming conventions: `{migrations-path}/V1.0.0__Quarkus.sql`"
msgstr "按照Flyway的命名惯例，在默认文件夹中添加SQL迁移： `{migrations-path}/V1.0.0__Quarkus.sql` "

#: _versions/main/guides/flyway.adoc
msgid ""
"Now you can start your application and Quarkus will run the Flyway's\n"
"migrate method according to your config."
msgstr "现在可以启动你的应用程序，Quarkus会根据你的配置来运行Flyway的迁移方法。"

#: _versions/main/guides/flyway.adoc
msgid ""
"With `quarkus.flyway.migrate-at-start=true`, as in the example\n"
"above, Quarkus will execute the Flyway migration as part of the\n"
"xref:lifecycle.adoc[application startup]."
msgstr "如上例所述，通过设置 `quarkus.flyway.migrate-at-start=true` Quarkus将在 xref:lifecycle.adoc[应用启动] 的时候通过Flyway进行迁移。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "Inject the Flyway object if you want to use it directly"
msgstr "如果你想直接使用Flyway对象，请注入该对象"

#: _versions/main/guides/flyway.adoc
msgid ""
"In dev mode Quarkus will automatically restart the application if\n"
"any of the existing migration scripts get modified. If you want to take\n"
"advantage of this while developing and testing new migration scripts,\n"
"you will want to set `%dev.quarkus.flyway.clean-at-start=true`, so that\n"
"Flyway actually runs the modified migration."
msgstr "如果任何当前迁移脚本被修改，Quarkus在开发模式下会自动重启应用。如果你想在开发测试新的迁移脚本的时候充分利用这个特性，你需要设置  `%dev.quarkus.flyway.clean-at-start=true` ，这样Flyway会运行被修改的迁移脚本。"

#. type: Title ===
#: _versions/main/guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Repairing the Flyway schema history table"
msgstr "修复Flyway模式历史表"

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid ""
"There are different scenarios which may require _repairing_ the Flyway schema history table.\n"
"One such scenario is when a migration fails in a database which doesn't support transactional DDL\n"
"statements."
msgstr "在不同情况下，可能需要 _修复_ Flyway 模式历史表。其中一种情况是在不支持事务 DDL 语句的数据库中迁移失败。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "In such situations the link:https://flywaydb.org/documentation/command/repair[Flyway repair command] comes in handy. In Quarkus this can either be executed automatically before the migration by setting `quarkus.flyway.repair-at-start=true` or manually by injecting the `Flyway` object and calling `Flyway#repair()`."
msgstr "在这种情况下， link:https://flywaydb.org/documentation/command/repair[Flyway修复命令] 就派上用场了。在Quarkus中，这可以通过设置 `quarkus.flyway.repair-at-start=true` ，在迁移前自动执行，也可以通过注入 `Flyway` 对象和调用 `Flyway#repair()` ，手动执行。"

#. type: Title ==
#: _versions/main/guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Multiple datasources"
msgstr "多个数据源"

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid ""
"Flyway can be configured for multiple datasources.\n"
"The Flyway properties are prefixed exactly the same way as the named datasources, for example:"
msgstr "Flyway 可针对多个数据源进行配置。Flyway 属性的前缀与命名数据源的前缀完全相同，例如"

#: _versions/main/guides/flyway.adoc
msgid ""
"Notice there's an extra bit in the key.\n"
"The syntax is as follows: `quarkus.flyway.[optional name.][datasource property]`."
msgstr "请注意，键中有一个额外的位。语法如下： `quarkus.flyway.[optional name.][datasource property]` ."

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "Without configuration, Flyway is set up for every datasource using the default settings."
msgstr "在没有配置的情况下，Flyway对每个数据源都是使用默认设置。"

#. type: Title ==
#: _versions/main/guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Customizing Flyway"
msgstr "使用Flyway"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "In cases where Flyway needs to be configured in addition to the configuration options that Quarkus provides, the `io.quarkus.flyway.FlywayConfigurationCustomizer` class comes in handy."
msgstr "在Flyway需要在Quarkus提供的配置选项之外进行配置的情况下， `io.quarkus.flyway.FlywayConfigurationCustomizer` 类就会派上用场。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "To customize Flyway for the default datasource, simply add a bean like so:"
msgstr "要为默认数据源定制Flyway，只需像这样添加一个bean："

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid ""
"When named datasources are used, the `@FlywayDataSource` annotation can be used to specify the datasource to which the customizer applies.\n"
"For example, if there are multiple datasources one of which is called `users` and customization of Flyway is needed for only that datasource,\n"
"then the following code can be used:"
msgstr "当使用已命名的数据源时，可使用 `@FlywayDataSource` 注释来指定自定义器适用的数据源。例如，如果有多个数据源，其中一个名为 `users` ，而 Flyway 只需要对该数据源进行定制，则可使用以下代码："

#. type: Title ==
#: _versions/main/guides/flyway.adoc
#, no-wrap
msgid "Using the Flyway object"
msgstr "使用Flyway对象"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "In case you are interested in using the `Flyway` object directly, you can inject it as follows:"
msgstr "如果你有兴趣直接使用 `Flyway` 对象，可以按以下方式注入。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "Inject Flyway for named datasources using the Quarkus `FlywayDataSource` qualifier"
msgstr "使用Quarkus `FlywayDataSource` 限定符为指定的数据源注入Flyway。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "Inject Flyway for named datasources"
msgstr "为命名的数据源注入Flyway"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "Use the Flyway instance directly"
msgstr "直接使用Flyway实例"

#. type: Title ==
#: _versions/main/guides/flyway.adoc
#, no-wrap
msgid "Flyway and Hibernate ORM"
msgstr "Flyway和Hibernate ORM"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "When using Flyway together with Hibernate ORM, you can use the Dev UI to generate the initial schema creation script."
msgstr "当Flyway与Hibernate ORM一起使用时，你可以使用Dev UI来生成初始表创建脚本。"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
msgid "You can find more information about this feature in the xref:hibernate-orm.adoc#flyway[Hibernate ORM guide]."
msgstr "你可以在xref:hibernate-orm.adoc#flyway[Hibernate ORM guide]找到更多相关信息。"

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "Flyway and Reactive datasources"
msgstr "Flyway 和 Reactive 数据源"

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid ""
"Flyway internally relies on a JDBC datasource,\n"
"whereas reactive use cases will rely on xref:reactive-sql-clients.adoc[reactive SQL clients],\n"
"either directly or through xref:hibernate-reactive.adoc[Hibernate Reactive].\n"
"This is not a problem in Quarkus,\n"
"because xref:datasource.adoc#jdbc-and-reactive-datasources-simultaneously[a single configured datasource can be made available both through reactive clients and JDBC]."
msgstr "Flyway 内部依赖 JDBC 数据源，而反应式用例则直接或通过 xref:hibernate-reactive.adoc[Hibernate Reactive] 依赖 xref:reactive-sql-clients.adoc[反应式 SQL 客户端] 。这在 Quarkus 中不成问题，因为 xref:datasource.adoc#jdbc-and-reactive-datasources-simultaneously[一个配置好的数据源既可以通过反应式客户端提供，也可以通过] JDBC 提供。"

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid ""
"To use Flyway on a datasource you otherwise access reactively,\n"
"simply make sure to configure that datasource\n"
"both as xref:datasource.adoc#jdbc-datasource[JDBC]\n"
"and xref:datasource.adoc#reactive-datasource[reactive].\n"
"This involves in particular adding dependencies to Quarkus extensions\n"
"for both the JDBC driver and the reactive client,\n"
"for instance `quarkus-jdbc-postgresql` *and* `quarkus-reactive-pg-client`."
msgstr "要在以其他方式访问的数据源上使用 Flyway，只需确保将该数据源配置为 xref:datasource.adoc#jdbc-datasource[JDBC] 和 xref:datasource.adoc#reactive-datasource[反应式] 即可。这尤其需要为 JDBC 驱动程序和反应式客户端的 Quarkus 扩展添加依赖关系，例如 `quarkus-jdbc-postgresql` *和* `quarkus-reactive-pg-client` 。"

#. type: Title ==
#: _versions/main/guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Flyway on Kubernetes"
msgstr "Flyway和Hibernate ORM"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "Sometimes, it's helpful not to execute Flyway initialization on each application startup. One such example is when deploying"
msgstr "有时，不在每次应用程序启动时执行 Flyway 初始化会很有帮助。例如，在部署"

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid ""
"on Kubernetes, where it doesn't make sense to execute Flyway on every single replica. Instead it's desirable to execute it\n"
"once and then start the actual application without Flyway. To support this use case, when generating manifests for Kubernetes\n"
"the generated manifests contain a Kubernetes initialization `Job` for Flyway.\n"
"The `Job` performs initialization and the actual `Pod`, will starts once the `Job` is successfully completed."
msgstr "在 Kubernetes 上，在每个副本上执行 Flyway 并不合理。相反，最好是执行一次，然后在不使用 Flyway 的情况下启动实际应用。为了支持这种用例，在为 Kubernetes 生成清单时，生成的清单包含一个用于 Flyway 的 Kubernetes 初始化 `Job` 。 `Job` 执行初始化，而实际的 `Pod` ，将在 `Job` 成功完成后启动。"

#. type: Title ===
#: _versions/main/guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Disabling"
msgstr "禁用"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "The feature is enabled by default and can be globally disabled, using:"
msgstr "该功能默认为启用，也可通过以下方式全局禁用："

#. type: Plain text
#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "or on OpenShift:"
msgstr "或 OpenShift 上："

#. type: Title ===
#: _versions/main/guides/flyway.adoc
#, fuzzy, no-wrap
msgid "Using a custom image that controls waiting for the Job"
msgstr "使用可控制等待工作的自定义图像"

#. type: Plain text
#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "To change the `wait-for` image which by default is `groundnuty/k8s-wait-for:no-root-v1.7` you can use:"
msgstr "要更改 `wait-for` 图像（默认为 `groundnuty/k8s-wait-for:no-root-v1.7` ），可以使用以下方法："

#: _versions/main/guides/flyway.adoc
#, fuzzy
msgid "**Note**: In this context globally means `for all extensions that support init task externalization`."
msgstr "*注* ：此处的全球是指 `for all extensions that support init task externalization` 。"
