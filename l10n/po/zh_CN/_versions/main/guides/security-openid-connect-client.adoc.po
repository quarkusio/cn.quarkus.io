# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-29 02:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "OpenID Connect Client and Token Propagation Quickstart"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This quickstart demonstrates how to use `OpenID Connect Client Reactive Filter` to acquire and propagate access tokens as `HTTP Authorization Bearer` access tokens, alongside `OpenID Token Propagation Reactive Filter` which propagates the incoming `HTTP Authorization Bearer` access tokens."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Please check xref:security-openid-connect-client-reference.adoc[OpenID Connect Client and Token Propagation Reference Guide] for all the information related to `Oidc Client` and `Token Propagation` support in Quarkus."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Please also read xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] guide if you need to protect your applications using Bearer Token Authorization."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "In this example, we will build an application which consists of two Jakarta REST resources, `FrontendResource` and `ProtectedResource`. `FrontendResource` propagates access tokens to `ProtectedResource` and uses either `OpenID Connect Client Reactive Filter` to acquire a token first before propagating it or `OpenID Token Propagation Reactive Filter` to propagate the incoming, already existing access token."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`FrontendResource` has 4 endpoints:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/user-name-with-oidc-client-token`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/admin-name-with-oidc-client-token`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/user-name-with-propagated-token`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/frontend/admin-name-with-propagated-token`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`FrontendResource` will use REST Client with `OpenID Connect Client Reactive Filter` to acquire and propagate an access token to `ProtectedResource` when either `/frontend/user-name-with-oidc-client-token` or `/frontend/admin-name-with-oidc-client-token` is called. And it will use REST Client with `OpenID Connect Token Propagation Reactive Filter` to propagate the current incoming access token to `ProtectedResource` when either `/frontend/user-name-with-propagated-token` or `/frontend/admin-name-with-propagated-token` is called."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`ProtecedResource` has 2 endpoints:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/protected/user-name`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "`/protected/admin-name`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Both of these endpoints return the username extracted from the incoming access token which was propagated to `ProtectedResource` from `FrontendResource`. The only difference between these endpoints is that calling `/protected/user-name` is only allowed if the current access token has a `user` role and calling `/protected/admin-name` is only allowed if the current access token has an `admin` role."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "The solution is located in the `security-openid-connect-client-quickstart` link:{quickstarts-tree-url}/security-openid-connect-client-quickstart[directory]."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This command generates a Maven project, importing the `oidc`, `oidc-client-reactive-filter`, `oidc-token-propagation-reactive-filter` and `resteasy-reactive` extensions."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "If you already have your Quarkus project configured, you can add these extensions to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Writing the application"
msgstr "编写应用程序"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Let's start by implementing `ProtectedResource`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "As you can see `ProtectedResource` returns a name from both `userName()` and `adminName()` methods. The name is extracted from the current `JsonWebToken`."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Next let's add a REST Client with `OidcClientRequestReactiveFilter` and another REST Client with `AccessTokenRequestReactiveFilter`. `FrontendResource` will use these two clients to call `ProtectedResource`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "where `RestClientWithOidcClientFilter` will depend on `OidcClientRequestReactiveFilter` to acquire and propagate the tokens and"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "where `RestClientWithTokenPropagationFilter` will depend on `AccessTokenRequestReactiveFilter` to propagate the incoming, already existing tokens."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Note that both `RestClientWithOidcClientFilter` and `RestClientWithTokenPropagationFilter` interfaces are identical - the reason behind it is that combining `OidcClientRequestReactiveFilter` and `AccessTokenRequestReactiveFilter` on the same REST Client will cause side effects as both filters can interfere with other, for example, `OidcClientRequestReactiveFilter` may override the token propagated by `AccessTokenRequestReactiveFilter` or `AccessTokenRequestReactiveFilter` can fail if it is called when no token is available to propagate and `OidcClientRequestReactiveFilter` is expected to acquire a new token instead."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Now let's complete creating the application with adding `FrontendResource`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Finally, let's add a Jakarta REST `ExceptionMapper`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This exception mapper is only added to verify during the tests that `ProtectedResource` returns `403` when the token has no expected role. Without this mapper `RESTEasy Reactive` will correctly convert the exceptions which will escape from REST Client calls to `500` to avoid leaking the information from the downstream resources such as `ProtectedResource` but in the tests it will not be possible to assert that `500` is in fact caused by an authorization exception as opposed to some internal error."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "配置该应用程序"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "We have prepared the code, and now let's configure the application:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This configuration references Keycloak which will be used by `ProtectedResource` to verify the incoming access tokens and by `OidcClient` to get the tokens for a user `alice` using a `password` grant. Both RESTClients point to `ProtectedResource`'s HTTP address."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Adding a `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that `Dev Services for Keycloak` will launch a container for you when the application is run in dev or test modes. See xref:keycloak-dev-mode[Running the Application in Dev mode] section below for more information."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Starting and Configuring the Keycloak Server"
msgstr "启动和配置Keycloak服务器"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Do not start the Keycloak server when you run the application in dev mode or test modes - `Dev Services for Keycloak` will launch a container. See xref:keycloak-dev-mode[Running the Application in Dev mode] section below for more information. Make sure to put the link:{quickstarts-tree-url}/security-openid-connect-client-quickstart/config/quarkus-realm.json[realm configuration file] on the classpath (`target/classes` directory) so that it gets imported automatically when running in dev mode - unless you have already built a link:{quickstarts-tree-url}/security-openid-connect-quickstart[complete solution] in which case this realm file will be added to the classpath during the build."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "To start a Keycloak Server you can use Docker and just run the following command:"
msgstr "要启动Keycloak服务器，您可以使用Docker服务，且只需运行以下命令："

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "其中 `keycloak.version` 应该设置为 `17.0.0` 或更高。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "你应该能够通过 http://localhost:8180[localhost:8180] 访问你的Keycloak服务器。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
msgstr "以 `admin` 用户身份登录，访问Keycloak管理控制台。用户名应该是 `admin` ，密码是 `admin` 。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Import the link:{quickstarts-tree-url}/security-openid-connect-client-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm. For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This `quarkus` realm file will add a `frontend` client, and `alice` and `admin` users. `alice` has a `user` role, `admin` - both `user` and `admin` roles."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Running the Application in Dev mode"
msgstr "在开发模式下运行应用程序"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "To run the application in a dev mode, use:"
msgstr "要在开发模式下运行应用程序，请使用："

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] will launch a Keycloak container and import a `quarkus-realm.json`."
msgstr "link:security-openid-connect-dev-services.html[Keycloak开发服务] 将启动一个Keycloak容器并导入一个 `quarkus-realm.json` 。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click on a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "打开 link:http://localhost:8080/q/dev[/q/dev] 提供的 link:dev-ui.html[开发用户界面] ，点击 `OpenID Connect` `Dev UI` 卡片中的 `Provider: Keycloak` 链接。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You will be asked to log in into a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr "您将被要求登录到由 `OpenID Connect Dev UI` 提供的 `Single Page Application` ："

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Login as `alice` (password: `alice`) who has a `user` role"
msgstr "以 `alice` （密码： `alice` ）的身份登录，他的角色(role)是 `user`"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "accessing `/frontend/user-name-with-propagated-token` will return `200`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "accessing `/frontend/admin-name-with-propagated-token` will return `403`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Logout and login as `admin` (password: `admin`) who has both `admin` and `user` roles"
msgstr "退出并以 `admin` （密码： `admin` ）的身份登录，他同时拥有 `admin` 和 `user` 的角色(roles)"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "accessing `/frontend/admin-name-with-propagated-token` will return `200`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "In this case you are testing that `FrontendResource` can propagate the access tokens acquired by `OpenID Connect Dev UI`."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Running the Application in JVM mode"
msgstr "在JVM模式下运行应用程序"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "When you're done playing with the `dev` mode\" you can run it as a standard Java application."
msgstr "当您尝试完毕 `开发` 模式后，您可以把它作为一个标准的Java应用程序运行。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "First compile it:"
msgstr "首先编译它："

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Then run it:"
msgstr "然后运行："

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Running the Application in Native Mode"
msgstr "在本地模式下运行应用程序"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "这个同样的演示可以被编译成本地代码：不需要任何修改。"

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"This implies that you no longer need to install a JVM on your\n"
"production environment, as the runtime technology is included in\n"
"the produced binary, and optimized to run with minimal resource overhead."
msgstr ""

#: _versions/main/guides/security-openid-connect-client.adoc
msgid ""
"Compilation will take a bit longer, so this step is disabled by default;\n"
"let's build again by enabling the `native` profile:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "一杯咖啡的时间后，您就可以直接运行该二进制文件了："

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "Testing the Application"
msgstr "测试应用程序"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "See xref:keycloak-dev-mode[Running the Application in Dev mode] section above about testing your application in dev mode."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "您可以用 `curl` 测试在JVM或Native模式下启动的应用程序。"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Obtain an access token for `alice`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Now use this token to call `/frontend/user-name-with-propagated-token` and `/frontend/admin-name-with-propagated-token`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "will return `200` status code and the name `alice` while"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "will return `403` - recall that `alice` only has a `user` role."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Next obtain an access token for `admin`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "and use this token to call `/frontend/user-name-with-propagated-token` and `/frontend/admin-name-with-propagated-token`:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "will return `200` status code and the name `admin`, and"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "will also return `200` status code and the name `admin`, as `admin` has both `user` and `admin` roles."
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "Now let's check `FrontendResource` methods which do not propagate the existing tokens but use `OidcClient` to acquire and propagate the tokens. You have seen that `OidcClient` is configured to acquire the tokens for the `alice` user, so:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "will return `200` status code and the name `alice`, but"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "will return `403` status code."
msgstr ""

#. type: Title ==
#: _versions/main/guides/security-openid-connect-client.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect Client and Token Propagation Reference Guide]"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr ""

#. type: Plain text
#: _versions/main/guides/security-openid-connect-client.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
