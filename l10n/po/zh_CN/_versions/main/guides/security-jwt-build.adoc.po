# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-15 02:17+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Build, sign, and encrypt JSON Web Tokens"
msgstr "构建、签署和加密 JSON 网络令牌"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"JSON Web Token (JWT) is defined by the link:https://datatracker.ietf.org/doc/"
"html/rfc7519[RFC 7519] specification as a compact, URL-safe means of "
"representing claims. These claims are encoded as a JSON object and can be "
"used as the payload of a JSON Web Signature (JWS) structure or the plaintext "
"of a JSON Web Encryption (JWE) structure. This mechanism enables claims to "
"be digitally signed or protected for integrity with a Message Authentication "
"Code (MAC) and encrypted."
msgstr ""
"JSON 网络令牌（JWT）由 link:https://datatracker.ietf.org/doc/html/rfc7519[RFC 7519] "
"规范定义，是一种表示请求的紧凑、URL 安全的方法。这些权利要求被编码为 JSON 对象，可用作 JSON Web 签名（JWS）结构的有效载荷或 "
"JSON Web 加密（JWE）结构的明文。通过这种机制，可以使用消息验证码（MAC）对权利要求进行数字签名或完整性保护，并对其进行加密。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Signing the claims is the most common method for securing them. Typically, a "
"JWT token is produced by signing claims formatted as JSON, following the "
"steps outlined in the link:https://tools.ietf.org/html/rfc7515[JSON Web "
"Signature (JWS)] specification."
msgstr ""
"签署声明是确保声明安全的最常用方法。通常情况下，JWT 标记是按照 JSON link:https://tools.ietf.org/html/"
"rfc7515[网络签名（JWS）] 规范中概述的步骤，通过对格式为 link:https://tools.ietf.org/html/"
"rfc7515[JSON] 的请求进行签名而生成的。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"When the claims contain sensitive information, their confidentiality can be "
"ensured by using the link:https://tools.ietf.org/html/rfc7516[JSON Web "
"Encryption (JWE)] specification. This approach produces a JWT with encrypted "
"claims."
msgstr ""
"当索赔包含敏感信息时，可通过使用 link:https://tools.ietf.org/html/rfc7516[JSON Web 加密（JWE）] "
"规范来确保其保密性。这种方法生成的 JWT 包含加密的权利要求。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"For enhanced security, you can combine both methods: sign the claims first "
"and then encrypt the resulting nested JWT. This process ensures both the "
"confidentiality and integrity of the claims."
msgstr "为了增强安全性，您可以将两种方法结合起来：先签署申请，然后对由此产生的嵌套 JWT 进行加密。这一过程可确保申请的保密性和完整性。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The SmallRye JWT Build API simplifies securing JWT claims by supporting all "
"these options. It uses the link:https://bitbucket.org/b_c/jose4j/wiki/"
"Home[Jose4J] library internally to provide this functionality."
msgstr ""
"SmallRye JWT Build API 支持所有这些选项，从而简化了 JWT 索赔的安全保护。它在内部使用 link:https://"
"bitbucket.org/b_c/jose4j/wiki/Home[Jose4J] 库来提供此功能。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Dependency"
msgstr "依赖性"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"To use the SmallRye JWT Build API, add the following dependency to your "
"project:"
msgstr "要使用 SmallRye JWT Build API，请在项目中添加以下依赖项："

#. type: Block title
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can use the SmallRye JWT Build API independently, without creating "
"MicroProfile JWT endpoints supported by the `quarkus-smallrye-jwt` extension."
""
msgstr ""
"您可以独立使用 SmallRye JWT Build API，而无需创建 `quarkus-smallrye-jwt` 扩展支持的 "
"MicroProfile JWT 端点。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Create JwtClaimsBuilder and set the claims"
msgstr "创建JwtClaimsBuilder并设置索赔。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The first step is to initialize a `JwtClaimsBuilder` by using one of the "
"following options and add some claims to it:"
msgstr "第一步是使用以下选项之一初始化 `JwtClaimsBuilder` ，并在其中添加一些权利要求："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The API is fluent so you can initialize the builder as part of a fluent "
"sequence."
msgstr "该应用程序接口是流式的，因此您可以将初始化生成器作为流式序列的一部分。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The builder automatically sets the following claims if they are not "
"explicitly configured:"
msgstr "如果没有明确配置，生成器会自动设置以下要求："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`iat` (issued at): Current time"
msgstr "`iat` (发布于）：当前时间"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"`exp` (expires at): Five minutes from the current time (customizable with "
"the `smallrye.jwt.new-token.lifespan` property)"
msgstr ""
"`exp` (过期时间）：从当前时间算起的五分钟（可使用 属性自定义） `smallrye.jwt.new-token.lifespan` "

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`jti` (unique token identifier)"
msgstr "`jti` （唯一令牌标识符）"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can configure the following properties globally to avoid setting them "
"directly in the builder:"
msgstr "您可以全局配置以下属性，以避免直接在生成器中进行设置："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.issuer`: Specifies the default issuer."
msgstr "`smallrye.jwt.new-token.issuer` :指定默认签发人。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.audience`: Specifies the default audience."
msgstr "`smallrye.jwt.new-token.audience` :指定默认受众。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"After initializing and setting claims, the next step is to decide how to "
"secure the claims."
msgstr "在初始化和设置权利要求后，下一步就是决定如何确保权利要求的安全。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Sign the claims"
msgstr "签署索赔书"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can sign the claims immediately or after configuring the `JSON Web "
"Signature (JWS)` headers:"
msgstr "您可以立即或在配置 `JSON Web Signature (JWS)` 标头后签署报销单："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Default behaviors:"
msgstr "默认行为："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The `alg` (algorithm) header is set to `RS256` by default."
msgstr "`alg` （算法）标头默认设置为 `RS256` 。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You do not have to set a signing key identifier (`kid` header) if a single "
"JSON Web Key (JWK) containing a `kid` property is used."
msgstr "如果使用的是包含 `kid` 属性的单个 JSON 网络密钥 (JWK)，则无需设置签名密钥标识符（ `kid` 标头）。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Supported keys and algorithms:"
msgstr "支持的密钥和算法"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"To sign the claims, you can use RSA private keys, Elliptic Curve (EC) "
"private keys, and symmetric secret keys."
msgstr "您可以使用 RSA 私钥、椭圆曲线（EC）私钥和对称密钥来签署声明。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`RS256` is the default RSA private key signature algorithm."
msgstr "`RS256` 是默认的 RSA 私钥签名算法。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`ES256` is the default EC private key signature algorithm."
msgstr "`ES256` 是默认的 EC 私钥签名算法。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`HS256` is the default symmetric key signature algorithm."
msgstr "`HS256` 是默认的对称密钥签名算法。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"To customize the signature algorithm, use the `JwtSignatureBuilder` API. For "
"example:"
msgstr "要自定义签名算法，请使用 `JwtSignatureBuilder` API。例如"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Alternatively, you can configure the signature algorithm globally with the "
"following property:"
msgstr "或者，也可以使用以下属性全局配置签名算法："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "This approach gives you a simpler API sequence:"
msgstr "这种方法提供了更简单的 API 序列："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can combine the `sign` step with the <<encrypt-claims,encrypt>> step to "
"create `inner-signed and encrypted` tokens. For more information, see the "
"<<innersign-encrypt-claims,Sign the claims and encrypt the nested JWT "
"token>> section."
msgstr ""
"您可以将 `sign` 步骤与 xref:encrypt-claims[加密] 步骤结合起来，创建 `inner-signed and "
"encrypted` 令牌。更多信息，请参阅 \" xref:innersign-encrypt-claims[签署声明并加密嵌套 JWT 令牌] "
"\"部分。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Encrypt the claims"
msgstr "加密索赔"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can encrypt claims immediately or after setting the `JSON Web Encryption "
"(JWE)` headers, similar to how claims are signed.\n"
"However, encrypting claims always requires a `jwe()` transition to a "
"`JwtEncryptionBuilder` because the API is optimized to support signing and "
"inner-signing operations."
msgstr ""
"您可以立即或在设置 `JSON Web Encryption (JWE)` "
"标头后对权利要求进行加密，这与签署权利要求的方式类似。不过，对权利要求进行加密总是需要从 `jwe()` 过渡到 "
"`JwtEncryptionBuilder` ，因为 API 经过了优化，以支持签名和内部签名操作。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The `alg` (key management algorithm) header defaults to `RSA-OAEP`."
msgstr "`alg` （密钥管理算法）标头默认为 `RSA-OAEP` 。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "The `enc` (content encryption) header defaults to `A256GCM`."
msgstr "`enc` （内容加密）标头默认为 `A256GCM` 。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can use RSA public keys, Elliptic Curve (EC) public keys, and symmetric "
"secret keys, to encrypt the claims."
msgstr "您可以使用 RSA 公钥、椭圆曲线（EC）公钥和对称密钥来加密报销单。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`RSA-OAEP` is the default RSA public key encryption algorithm."
msgstr "`RSA-OAEP` 是默认的 RSA 公钥加密算法。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`ECDH-ES` is the default EC public key encryption algorithm."
msgstr "`ECDH-ES` 是默认的 EC 公钥加密算法。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`A256KW` is the default symmetric key encryption algorithm."
msgstr "`A256KW` 是默认的对称密钥加密算法。"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Note two encryption operations are done when creating an encrypted token:"
msgstr "注意在创建加密令牌时要进行两次加密操作。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The generated content encryption key is encrypted using the supplied key and "
"a key encryption algorithm such as `RSA-OAEP`."
msgstr "生成的内容加密密钥使用提供的密钥和密钥加密算法（如 `RSA-OAEP` ）进行加密。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The claims are encrypted using the content encryption key and a content "
"encryption algorithm such as `A256GCM`."
msgstr "使用内容加密密钥和内容加密算法（如 `A256GCM` ）对权利要求进行加密。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can customize the key and content encryption algorithms by using the "
"`JwtEncryptionBuilder` API. For example:"
msgstr "您可以使用 `JwtEncryptionBuilder` API 自定义密钥和内容加密算法。例如"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Alternatively, you can configure the algorithms globally by using the "
"following properties:"
msgstr "或者，也可以使用以下属性对算法进行全局配置："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "This configuration allows for a simpler API sequence:"
msgstr "这种配置可以简化 API 序列："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Recommendations for secure token encryption:"
msgstr "关于安全令牌加密的建议："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"When a token is directly encrypted with a public RSA or EC key, it cannot be "
"verified which party sent the token.\n"
"To address this, symmetric secret keys are preferred for direct encryption, "
"especially when using JWT as cookies managed solely by the Quarkus endpoint."
msgstr ""
"用公开 RSA 或 EC 密钥直接加密令牌时，无法验证是哪一方发送了令牌。为了解决这个问题，对称秘钥是直接加密的首选，尤其是在使用 JWT 作为仅由 "
"Quarkus 端点管理的 cookies 时。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"To encrypt a token with RSA or EC public keys, it is recommended to sign the "
"token first if a signing key is available. For more information, see the "
"<<innersign-encrypt-claims,Sign the claims and encrypt the nested JWT "
"token>> section."
msgstr ""
"使用 RSA 或 EC 公钥加密令牌时，如果有签名密钥，建议先对令牌签名。有关更多信息，请参阅 \" xref:innersign-encrypt-"
"claims[签署声明并加密嵌套的 JWT 令牌] \"部分。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Sign the claims and encrypt the nested JWT token"
msgstr "对索赔进行签名并对嵌套的JWT令牌进行加密"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can sign the claims and then encrypt the nested JWT token by combining "
"the sign and encrypt steps."
msgstr "您可以通过组合签名和加密步骤，对权利要求进行签名，然后对嵌套的 JWT 标记进行加密。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Fast JWT generation"
msgstr "快速生成 JWT"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"If the `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key."
"location` properties are set, you can secure existing claims, such as "
"resources, maps, JsonObjects, with a single call:"
msgstr ""
"如果设置了 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` "
"属性，则只需一次调用，就能确保资源、地图、JsonObjects 等现有声明的安全："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"As mentioned earlier, the following claims are added automatically if they "
"are not already set: `iat` (issued at), `exp` (expires at), `jti` (token "
"identifier), `iss` (issuer), and `aud` (audience)."
msgstr ""
"如前所述，如果尚未设置以下声明，则会自动添加： `iat` （发布时间）、 `exp` （过期时间）、 `jti` （令牌标识符）、 `iss` "
"（发布者）和 `aud` （受众）。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Dealing with the keys"
msgstr "处理钥匙的问题"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can use the `smallrye.jwt.sign.key.location` and `smallrye.jwt.encrypt."
"key.location` properties to specify the locations of signing and encryption "
"keys. These keys can be located on the local file system, on the classpath, "
"or fetched from remote endpoints. Keys can be in `PEM` or `JSON Web Key "
"(JWK)` formats. For example:"
msgstr ""
"可以使用 `smallrye.jwt.sign.key.location` 和 `smallrye.jwt.encrypt.key.location` "
"属性指定签名和加密密钥的位置。这些密钥可以位于本地文件系统、classpath 或从远程端点获取。密钥可以是 `PEM` 或 `JSON Web Key "
"(JWK)` 格式。例如"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Alternatively, you can fetch keys from external services, such as link:"
"{vault-guide}[HashiCorp Vault] or other secret managers, by using "
"MicroProfile `ConfigSource` and the `smallrye.jwt.sign.key` and `smallrye."
"jwt.encrypt.key` properties:"
msgstr ""
"另外，也可以使用 MicroProfile `ConfigSource` 以及 `smallrye.jwt.sign.key` 和 `smallrye."
"jwt.encrypt.key` 属性，从外部服务（如 link:{vault-guide}[HashiCorp Vault] "
"或其他秘密管理器）获取密钥："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"In this example, `private.key.from.vault` and `public.key.from.vault` are "
"`PEM` or `JWK` formatted key values provided by the custom `ConfigSource`."
msgstr ""
"在本例中， `private.key.from.vault` 和 `public.key.from.vault` 是自定义 `ConfigSource` "
"提供的 `PEM` 或 `JWK` 格式化键值。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The `smallrye.jwt.sign.key` and `smallrye.jwt.encrypt.key` properties can "
"also contain Base64-encoded private or public key values directly."
msgstr ""
"`smallrye.jwt.sign.key` 和 `smallrye.jwt.encrypt.key` 属性也可直接包含 Base64 "
"编码的私人或公共密钥值。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"However, be aware that directly inlining private keys in the configuration "
"is not recommended. Use the `smallrye.jwt.sign.key` property only when you "
"need to fetch a signing key value from a remote secret manager."
msgstr ""
"但请注意，不建议在配置中直接内联私钥。只有在需要从远程秘密管理器获取签名密钥值时，才使用 `smallrye.jwt.sign.key` 属性。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The keys can also be loaded by the code that builds the token, and then "
"supplied to JWT Build API for token creation."
msgstr "密钥也可以由构建令牌的代码加载，然后提供给 JWT Build API 以创建令牌。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"If you need to sign or encrypt the token by using the symmetric secret key, "
"consider using `io.smallrye.jwt.util.KeyUtils` to generate a `SecretKey` of "
"the required length."
msgstr ""
"如果需要使用对称秘钥签署或加密令牌，可考虑使用 `io.smallrye.jwt.util.KeyUtils` 生成所需长度的 `SecretKey` "
"。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"For example, a 64-byte key is required to sign a token by using the `HS512` "
"algorithm (`512/8`), and a 32-byte key is needed to encrypt the content "
"encryption key with the `A256KW` algorithm (`256/8`):"
msgstr ""
"例如，使用 `HS512` 算法 ( `512/8` ) 签署令牌需要 64 字节的密钥，使用 `A256KW` 算法 ( `256/8` ) "
"加密内容加密密钥需要 32 字节的密钥："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can also consider using a JSON Web Key (JWK) or JSON Web Key Set (JWK "
"Set) format to store a secret key on a secure file system. You can reference "
"the key by using the `smallrye.jwt.sign.key.location` or `smallrye.jwt."
"encrypt.key.location` properties."
msgstr ""
"您也可以考虑使用 JSON 网络密钥 (JWK) 或 JSON 网络密钥集 (JWK 集) 格式在安全文件系统中存储密钥。你可以使用 `smallrye."
"jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` 属性来引用密钥。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Example JWK"
msgstr "示例 JWK"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Example JWK Set"
msgstr "JWK 套装示例"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"You can also use `io.smallrye.jwt.util.KeyUtils` to generate a pair of "
"asymmetric RSA or EC keys. These keys can be stored in `JWK`, `JWK Set`, or "
"`PEM` format."
msgstr ""
"您还可以使用 `io.smallrye.jwt.util.KeyUtils` 生成一对非对称 RSA 或 EC 密钥。这些密钥可以以 `JWK` 、 "
"`JWK Set` 或 `PEM` 格式存储。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "SmallRye JWT Builder configuration"
msgstr "SmallRye JWT Builder配置"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"SmallRye JWT supports the following properties, which can be used to "
"customize how claims are signed or encrypted:"
msgstr "SmallRye JWT 支持以下属性，可用于自定义签名或加密声明的方式："

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Property Name"
msgstr "物业名称"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Default"
msgstr "默认"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "Description"
msgstr "描述"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key.location`"
msgstr "`smallrye.jwt.sign.key.location`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "none"
msgstr "无"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Location of a private key used to sign the claims when either a no-argument "
"`sign()` or `innerSign()` method is called."
msgstr "当调用无参数 `sign()` 或 `innerSign()` 方法时，用于签署权利要求的私人密钥的位置。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key`"
msgstr "`smallrye.jwt.sign.key`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Key value used to sign the claims when either a no-argument `sign()` or "
"`innerSign()` method is called."
msgstr "当调用无参数 `sign()` 或 `innerSign()` 方法时，用于签名的密钥值。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key.id`"
msgstr "`smallrye.jwt.sign.key.id`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Signing key identifier, checked only when JWK keys are used."
msgstr "签名密钥标识符，仅在使用 JWK 密钥时才选中。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.key.location`"
msgstr "`smallrye.jwt.encrypt.key.location`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Location of the public key used to encrypt claims or the inner JWT when the "
"no-argument `encrypt()` method is called."
msgstr "当调用无参数 `encrypt()` 方法时，用于加密请求或内部 JWT 的公钥的位置。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.relax-key-validation`"
msgstr "`smallrye.jwt.sign.relax-key-validation`"

#: _versions/main/guides/security-jwt-build.adoc
msgid "`false`"
msgstr "`false` "

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Relax the validation of the signing keys."
msgstr "放松对签名钥匙的验证。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.key`"
msgstr "`smallrye.jwt.encrypt.key`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Key value used to encrypt the claims or the inner JWT when a no-argument "
"`encrypt()` method is called."
msgstr "当调用无参数 `encrypt()` 方法时，用于加密声明或内部 JWT 的密钥值。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.key.id`"
msgstr "`smallrye.jwt.encrypt.key.id`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "Encryption key identifier, checked only when JWK keys are used."
msgstr "加密密钥标识符，仅在使用 JWK 密钥时检查。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.encrypt.relax-key-validation`"
msgstr "`smallrye.jwt.encrypt.relax-key-validation`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Relax the validation of the encryption keys."
msgstr "放松对加密密钥的验证。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.signature-algorithm`"
msgstr "`smallrye.jwt.new-token.signature-algorithm`"

#: _versions/main/guides/security-jwt-build.adoc
msgid "`RS256`"
msgstr "`RS256`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Signature algorithm. Checked if the JWT signature builder has not already "
"set the signature algorithm."
msgstr "签名算法。如果 JWT 签名生成器尚未设置签名算法，则进行检查。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.key-encryption-algorithm`"
msgstr "`smallrye.jwt.new-token.key-encryption-algorithm`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`RSA-OAEP`"
msgstr "`RSA-OAEP`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Key encryption algorithm. Checked if the JWT encryption builder has not "
"already set the key encryption algorithm."
msgstr "密钥加密算法。如果 JWT 加密创建器尚未设置密钥加密算法，则进行检查。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.content-encryption-algorithm`"
msgstr "`smallrye.jwt.new-token.content-encryption-algorithm`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`A256GCM`"
msgstr "`A256GCM`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Content encryption algorithm. Checked if the JWT encryption builder has not "
"already set the content encryption algorithm."
msgstr "内容加密算法。如果 JWT 加密创建器尚未设置内容加密算法，则进行检查。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.lifespan`"
msgstr "`smallrye.jwt.new-token.lifespan`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`300`"
msgstr "`300`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Token lifespan in seconds used to calculate an `exp` (expiry) claim value if "
"this claim has not already been set."
msgstr "代币寿命（秒），用于计算 `exp` （过期）申请值（如果该申请值尚未设置）。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.issuer`"
msgstr "`smallrye.jwt.new-token.issuer`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Token issuer used to set an `iss` (issuer) claim value if this claim has not "
"already been set."
msgstr "代币发行人，用于设置 `iss` （发行人）申请值（如果该申请值尚未设置）。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.audience`"
msgstr "`smallrye.jwt.new-token.audience`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Token audience used to set an `aud` (audience) claim value if this claim has "
"not already been set."
msgstr "如果尚未设置 `aud` （受众）权利要求值，则受众令牌用于设置该权利要求值。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.override-matching-claims`"
msgstr "`smallrye.jwt.new-token.override-matching-claims`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid ""
"Set this property to `true` for `smallrye.jwt.new-token.issuer` and "
"`smallrye.jwt.new-token.audience` values to override the already initialized "
"`iss` (issuer) and `aud` (audience) claims."
msgstr ""
"对于 `smallrye.jwt.new-token.issuer` 和 `smallrye.jwt.new-token.audience` "
"的值，将此属性设置为 `true` ，以覆盖已经初始化的 `iss` （发行者）和 `aud` （受众）的要求。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.new-token.add-default-claims`"
msgstr "`smallrye.jwt.new-token.add-default-claims`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "true"
msgstr "真"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Set this property to `false` to disable an automatic addition of the `iat` "
"(issued at), `exp` (expiration time) and `jti` (token identifier) claims "
"when such claims have not already been set."
msgstr ""
"将此属性设置为 `false` ，可在尚未设置 `iat` （发出时间）、 `exp` （过期时间）和 `jti` "
"（令牌标识符）等权利要求时，禁止自动添加这些权利要求。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.type`"
msgstr "`smallrye.jwt.keystore.type`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "`JKS`"
msgstr " `JKS` "

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid ""
"This property can be used to customize a keystore type if either `smallrye."
"jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` or both of "
"these properties point to a `KeyStore` file. If it is not set then the file "
"name will be checked to determine the keystore type before defaulting to "
"`JKS`."
msgstr ""
"如果 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` "
"或这两个属性都指向 `KeyStore` 文件，该属性可用于自定义密钥库类型。如果没有设置，那么文件名将被检查以确定密钥库类型，然后默认为 `JKS` "
"。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.provider`"
msgstr "`smallrye.jwt.keystore.provider`"

#. type: Table
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid ""
"This property can be used to customize a `KeyStore` provider if `smallrye."
"jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` point to a "
"`KeyStore` file."
msgstr ""
"如果 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` "
"指向一个 `KeyStore` 文件，该属性可用于定制一个 `KeyStore` 提供者。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.password`"
msgstr "`smallrye.jwt.keystore.password`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Keystore password. If `smallrye.jwt.sign.key.location` or `smallrye.jwt."
"encrypt.key.location` point to a `KeyStore` file, this property must be set."
msgstr ""
"密钥存储密码。如果 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key."
"location` 指向 `KeyStore` 文件，则必须设置此属性。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.encrypt.key.alias`"
msgstr "`smallrye.jwt.keystore.encrypt.key.alias`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"This property must be set to identify the public encryption key that is "
"extracted from `KeyStore` from a matching certificate if `smallrye.jwt."
"encrypt.key.location` points to a `KeyStore` file."
msgstr ""
"如果 `smallrye.jwt.encrypt.key.location` 指向 `KeyStore` 文件，则必须设置此属性，以标识从 "
"`KeyStore` 提取的匹配证书的公开加密密钥。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.sign.key.alias`"
msgstr "`smallrye.jwt.keystore.sign.key.alias`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"This property must be set to identify a private signing key if `smallrye.jwt."
"sign.key.location` points to a `KeyStore` file."
msgstr ""
"如果 `smallrye.jwt.sign.key.location` 指向 `KeyStore` 文件，则必须设置此属性以标识私人签名密钥。"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.keystore.sign.key.password`"
msgstr "`smallrye.jwt.keystore.sign.key.password`"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"This property can be set if a private signing key's password in `KeyStore` "
"is different from `smallrye.jwt.keystore.password` when `smallrye.jwt.sign."
"key.location` points to a `KeyStore` file."
msgstr ""
"当 `smallrye.jwt.sign.key.location` 指向 `KeyStore` 文件时，如果 `KeyStore` "
"中私人签名密钥的密码与 `smallrye.jwt.keystore.password` 中私人签名密钥的密码不同，则可设置此属性。"

#. type: Title ==
#: _versions/main/guides/security-jwt-build.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON网络令牌]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON网络签名]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON网络加密]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON网络算法]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J]"
msgstr "link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token "
"authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC 承载令牌验证]"

#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"xref:security-jwt.adoc[Using SmallRye JWT to Protect Service Applications]"
msgstr "xref:security-jwt.adoc[使用 SmallRye JWT 保护服务应用程序]"

#. type: Plain text
#: _versions/main/guides/security-jwt-build.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"
