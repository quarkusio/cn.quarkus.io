msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "WebSockets Next reference guide"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `quarkus-websockets-next` extension provides a modern declarative API to define WebSocket server and client endpoints."
msgstr "`quarkus-websockets-next` 扩展提供了一个现代声明式 API，用于定义 WebSocket 服务器和客户端端点。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket protocol"
msgstr "WebSocket 协议"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The _WebSocket_ protocol, documented in the https://datatracker.ietf.org/doc/html/rfc6455[RFC6455], establishes a standardized method for creating a bidirectional communication channel between a client and a server through a single TCP connection.\n"
"Unlike HTTP, WebSocket operates as a distinct TCP protocol but is designed to function seamlessly alongside HTTP.\n"
"For example, it reuses the same ports and is compatible with the same security mechanisms."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455[RFC6455] 中记录的 _WebSocket_ 协议建立了一种标准化方法，用于通过单个 TCP 连接在客户端和服务器之间创建双向通信通道。与 HTTP 不同的是，WebSocket 作为一个独立的 TCP 协议运行，但其设计目的是与 HTTP 无缝结合。例如，它重复使用相同的端口，并兼容相同的安全机制。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The interaction using WebSocket initiates with an HTTP request employing the 'Upgrade' header to transition to the WebSocket protocol.\n"
"Instead of a `200 OK` response, the server replies with a `101 Switching Protocols` response to upgrade the HTTP connection to a WebSocket connection.\n"
"Following this successful handshake, the TCP socket utilized in the initial HTTP upgrade request remains open, allowing both client and server to exchange messages in both direction continually."
msgstr "使用 WebSocket 进行交互时，HTTP 请求会使用 \"升级 \"标头过渡到 WebSocket 协议。服务器会回复一个 `101 Switching Protocols` 响应，将 HTTP 连接升级为 WebSocket 连接，而不是 `200 OK` 响应。握手成功后，初始 HTTP 升级请求中使用的 TCP 套接字将保持开放状态，客户端和服务器可持续双向交换信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP and WebSocket architecture styles"
msgstr "HTTP 和 WebSocket 架构风格"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Despite WebSocket's compatibility with HTTP and its initiation through an HTTP request, it's crucial to recognize that the two protocols lead to distinctly different architectures and programming models."
msgstr "尽管 WebSocket 与 HTTP 兼容并通过 HTTP 请求启动，但必须认识到，这两种协议会导致截然不同的架构和编程模型。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"With HTTP/REST, applications are structured around resources/endpoints that handle various HTTP methods and paths.\n"
"Client interaction occurs through emitting HTTP requests with appropriate methods and paths, following a request-response pattern.\n"
"The server routes incoming requests to corresponding handlers based on path, method, and headers and then replies with a well-defined response."
msgstr "通过 HTTP/REST，应用程序是围绕处理各种 HTTP 方法和路径的资源/端点构建的。客户端通过发出具有适当方法和路径的 HTTP 请求，按照请求-响应模式进行交互。服务器根据路径、方法和标头将传入的请求路由到相应的处理程序，然后以定义明确的响应进行回复。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Conversely, WebSocket typically involves a single endpoint for the initial HTTP connection, after which all messages utilize the same TCP connection.\n"
"It introduces an entirely different interaction model: asynchronous and message-driven."
msgstr "相反，WebSocket 通常只涉及一个用于初始 HTTP 连接的端点，之后所有信息都使用相同的 TCP 连接。它引入了一种完全不同的交互模式：异步和消息驱动。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket is a low-level transport protocol, in contrast to HTTP.\n"
"Message formats, routing, or processing require prior agreement between the client and server regarding message semantics."
msgstr "WebSocket 是一种低级传输协议，与 HTTP 截然不同。消息格式、路由选择或处理需要客户端和服务器事先就消息语义达成一致。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "For WebSocket clients and servers, the `Sec-WebSocket-Protocol` header in the HTTP handshake request allows negotiation of a higher-level messaging protocol. In its absence, the server and client must establish their own conventions."
msgstr "对于 WebSocket 客户端和服务器，HTTP 握手请求中的 `Sec-WebSocket-Protocol` 标头允许协商更高级别的消息传递协议。如果没有这种协议，服务器和客户端就必须建立自己的约定。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Quarkus WebSockets vs. Quarkus WebSockets Next"
msgstr "Quarkus WebSockets 与 Quarkus WebSockets 下一步"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"This guide utilizes the `quarkus-websockets-next` extension, an implementation of the WebSocket API boasting enhanced efficiency and usability compared to the legacy `quarkus-websockets` extension.\n"
"The original `quarkus-websockets` extension remains accessible, will receive ongoing support, but it's unlikely to receive to feature development."
msgstr "本指南使用 `quarkus-websockets-next` 扩展，它是 WebSocket API 的一种实现方式，与传统的 `quarkus-websockets` 扩展相比，具有更高的效率和可用性。原有的 `quarkus-websockets` 扩展仍可访问，并将获得持续支持，但不太可能进行功能开发。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Unlike `quarkus-websockets`, the `quarkus-websockets-next` extension does **not** implement the Jakarta WebSocket specification.\n"
"Instead, it introduces a modern API, prioritizing simplicity of use.\n"
"Additionally, it's tailored to integrate with Quarkus' reactive architecture and networking layer seamlessly."
msgstr "与 `quarkus-websockets` 不同， `quarkus-websockets-next` 扩展并 *不* 实现 Jakarta WebSocket 规范。取而代之的是，它引入了一个现代的 API，优先考虑使用的简便性。此外，它还专为与 Quarkus 的反应式架构和网络层无缝集成而量身定制。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The annotations utilized by the Quarkus WebSockets next extension differ from those in JSR 356 despite, sometimes, sharing the same name.\n"
"The JSR annotations carry a semantic that the Quarkus WebSockets Next extension does not follow."
msgstr "Quarkus WebSockets next 扩展使用的注解与 JSR 356 中的注解不同，尽管有时名称相同。JSR 注释带有一种语义，而 Quarkus WebSockets Next 扩展并不遵循这种语义。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Project setup"
msgstr "项目设置"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "To use the `websockets-next` extension, you need to add the `io.quarkus:quarkus-websockets-next` depencency to your project."
msgstr "要使用 `websockets-next` 扩展，需要在项目中添加 `io.quarkus:quarkus-websockets-next` depencency。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Endpoints"
msgstr "终点"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Both the <<server-api>> and <<client-api>> define _endpoints_ that are used to consume and send messages.\n"
"The endpoints are implemented as CDI beans and support injection.\n"
"Endpoints declare <<callback-methods,_callback methods_>> annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnPingMessage`, `@OnPongMessage`, `@OnOpen`, `@OnClose` and `@OnError`.\n"
"These methods are used to handle various WebSocket events.\n"
"Typically, a method annotated with `@OnTextMessage` is called when the connected client sends a message to the server and vice versa."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The client API also includes <<client-connectors,connectors>> that are used to configure and create new WebSocket connections."
msgstr "客户端 API 还包括用于配置和创建新 WebSocket 连接的 xref:client-connectors[连接器] 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Server endpoints"
msgstr "服务器端点"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Server endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocket`.\n"
"The value of `WebSocket#path()` is used to define the path of the endpoint."
msgstr "服务器端点是用 `@io.quarkus.websockets.next.WebSocket` 注释的类。 `WebSocket#path()` 的值用于定义端点的路径。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Thus, client can connect to this web socket endpoint using `ws://localhost:8080/chat/your-name`.\n"
"If TLS is used, the URL is `wss://localhost:8443/chat/your-name`."
msgstr "因此，客户端可以使用 `ws://localhost:8080/chat/your-name` 连接到该网络套接字端点。如果使用 TLS，则 URL 为 `wss://localhost:8443/chat/your-name` 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The endpoint path is relative to the xref:http-reference.adoc#context-path[root context] configured by the `quarkus.http.root-path` (which is `/` by default). For example, if you add `quarkus.http.root-path=/api` to your `application.properties` then a client can connect to this endpoint using `http://localhost:8080/api/chat/the-name`."
msgstr "端点路径相对于 `quarkus.http.root-path` （默认为 `/` ）配置的 xref:http-reference.adoc#context-path[根上下文] 。例如，如果在 `application.properties` 中添加 `quarkus.http.root-path=/api` ，那么客户端就可以通过以下方式连接到该端点 `http://localhost:8080/api/chat/the-name` ."

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoints"
msgstr "客户端端点"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Client endpoints are classes annotated with `@io.quarkus.websockets.next.WebSocketClient`.\n"
"The value of `WebSocketClient#path()` is used to define the path of the endpoint this client will be connected to."
msgstr "客户端端点是用 `@io.quarkus.websockets.next.WebSocketClient` 注释的类。 `WebSocketClient#path()` 的值用于定义该客户端将连接到的端点的路径。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoints are used to consume and send messages. You'll need the <<client-connectors,connectors API>> to configure and open new WebSocket connections."
msgstr "客户端端点用于消费和发送消息。您需要使用 xref:client-connectors[连接器 API] 来配置和打开新的 WebSocket 连接。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Path parameters"
msgstr "路径参数"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The path of a WebSocket endpoint can contain path parameters.\n"
"The syntax is the same as for JAX-RS resources: `{parameterName}`."
msgstr "WebSocket 端点的路径可以包含路径参数。其语法与 JAX-RS 资源相同： `{parameterName}` ."

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"You can access the path parameter values using the `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` method, or `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` respectively.\n"
"Alternatively, an endpoint callback method parameter annotated with `@io.quarkus.websockets.next.PathParam` is injected automatically."
msgstr "您可以分别使用 `io.quarkus.websockets.next.WebSocketConnection#pathParam(String)` 方法或 `io.quarkus.websockets.next.WebSocketClientConnection#pathParam(String)` 访问路径参数值。此外，还可自动注入注释为 `@io.quarkus.websockets.next.PathParam` 的端点回调方法参数。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`WebSocketConnection#pathParam(String)` example"
msgstr "`WebSocketConnection#pathParam(String)` 范例"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Path parameter values are always strings.\n"
"If the path parameter is not present in the path, the `WebSocketConnection#pathParam(String)`/`WebSocketClientConnection#pathParam(String)` method returns `null`.\n"
"If there is an endpoint callback method parameter annotated with `@PathParam` and the parameter name is not defined in the endpoint path, then the build fails."
msgstr "路径参数值总是字符串。如果路径参数不在路径中， `WebSocketConnection#pathParam(String)` / `WebSocketClientConnection#pathParam(String)` 方法将返回 `null` 。如果端点回调方法参数注释为 `@PathParam` ，而参数名称未在端点路径中定义，则构建失败。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Query parameters are not supported. However, you can access the query using `WebSocketConnection#handshakeRequest().query()`"
msgstr "不支持查询参数。不过，您可以使用 `WebSocketConnection#handshakeRequest().query()`"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "CDI scopes"
msgstr "CDI 范围"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Endpoints are managed as CDI beans.\n"
"By default, the `@Singleton` scope is used.\n"
"However, developers can specify alternative scopes to fit their specific requirements."
msgstr "端点作为 CDI Bean 进行管理。默认情况下，使用 `@Singleton` 作用域。不过，开发人员可以指定其他作用域，以满足其特定要求。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"`@Singleton` and `@ApplicationScoped` endpoints are shared across all WebSocket connections.\n"
"Therefore, implementations should be either stateless or thread-safe."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Session context"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"If an endpoint is annotated with `@SessionScoped`, or depends directly or indirectly on a `@SessionScoped` bean, then each WebSocket connection is associated with its own _session context_.\n"
"The session context is active during endpoint callback invocation.\n"
"Subsequent invocations of <<callback-methods>> within the same connection utilize the same session context.\n"
"The session context remains active until the connection is closed (usually when the `@OnClose` method completes execution), at which point it is terminated."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "It is also possible to set the `quarkus.websockets-next.server.activate-session-context` config property to `always`. In this case, the session context is always activated, no matter if a `@SessionScoped` bean participates in the dependency tree."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`@SessionScoped` Endpoint"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "This server endpoint is not shared and is scoped to the session/connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Request context"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Each WebSocket endpoint callback method execution is associated with a new CDI _request context_ if the endpoint is:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Annotated with the `@RequestScoped` annotation."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Has a method annotated with a security annotation such as `@RolesAllowed`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Depends directly or indirectly on a `@RequestScoped` bean."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Depends directly or indirectly on a CDI beans secured with a standard security annotation."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "It is also possible to set the `quarkus.websockets-next.server.activate-request-context` config property to `always`. In this case, the request context is always activated when an endpoint callback is invoked."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`@RequestScoped` Endpoint"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "This server endpoint is instantiated for each callback method execution."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Callback methods"
msgstr "回调方法"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "A WebSocket endpoint may declare:"
msgstr "WebSocket 端点可声明"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnTextMessage` method: Handles the text messages from the connected client/server."
msgstr "最多一个 `@OnTextMessage` 方法：处理来自已连接客户端/服务器的文本信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnBinaryMessage` method: Handles the binary messages from the connected client/server."
msgstr "最多一个 `@OnBinaryMessage` 方法：处理来自已连接客户端/服务器的二进制信息。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "At most one `@OnPingMessage` method: Handles the ping messages from the connected client/server."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnPongMessage` method: Handles the pong messages from the connected client/server."
msgstr "最多一个 `@OnPongMessage` 方法：处理来自已连接客户端/服务器的 pong 消息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnOpen` method: Invoked when a connection is opened."
msgstr "最多一个 `@OnOpen` 方法：连接打开时调用。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "At most one `@OnClose` method: Executed when the connection is closed."
msgstr "最多一个 `@OnClose` 方法：连接关闭时执行。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any number of `@OnError` methods: Invoked when an error occurs; that is when an endpoint callback throws a runtime error, or when a conversion errors occurs, or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "任何数量的 `@OnError` 方法：当发生错误时调用；即当端点回调抛出运行时错误时，或当发生转换错误时，或当返回的 `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` 接收失败时。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Only some endpoints need to include all methods.\n"
"However, it must contain at least `@On[Text|Binary]Message` or `@OnOpen`."
msgstr "只有某些端点需要包含所有方法。但是，它必须至少包含 `@On[Text|Binary]Message` 或 `@OnOpen` 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An error is thrown at build time if any endpoint violates these rules.\n"
"The static nested classes representing sub-websockets adhere to the same guidelines."
msgstr "如果任何端点违反了这些规则，在构建时就会出错。代表子网络接口的静态嵌套类也遵循同样的准则。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Any methods annotated with `@OnTextMessage`, `@OnBinaryMessage`, `@OnOpen`, and `@OnClose` outside a WebSocket endpoint are considered erroneous and will result in the build failing with an appropriate error message."
msgstr "任何在 WebSocket 端点之外使用 `@OnTextMessage` 、 `@OnBinaryMessage` 、 `@OnOpen` 和 `@OnClose` 进行注解的方法都会被视为错误方法，并会导致构建失败，同时给出相应的错误信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Processing messages"
msgstr "处理信息"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method receiving messages from the client are annotated with `@OnTextMessage` or `@OnBinaryMessage`."
msgstr "从客户端接收信息的方法用 `@OnTextMessage` 或 `@OnBinaryMessage` 进行注释。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`OnTextMessage` are invoked for every _text_ message received from the client.\n"
"`OnBinaryMessage` are invoked for every _binary_ message the client receives."
msgstr "`OnTextMessage` 从客户端接收到的 _每条_ _文本_ 信息都会调用 。 `OnBinaryMessage` "

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Invocation rules"
msgstr "调用规则"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When invoking the callback methods, the _session_ scope linked to the WebSocket connection remains active.\n"
"In addition, the request scope is active until the completion of the method (or until it produces its result for async and reactive methods)."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "WebSocket Next supports _blocking_ and _non-blocking_ logic, akin to Quarkus REST, determined from the return type of the method and additional annotations such as `@Blocking` and `@NonBlocking`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are the rules governing execution:"
msgstr "以下是执行规则："

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@RunOnVirtualThread`, `@Blocking` or `@Transactional` are considered blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods declared in a class annotated with `@RunOnVirtualThread` are considered blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods annotated with `@NonBlocking` are considered non-blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods declared in a class annotated with `@Transactional` are considered blocking unless annotated with `@NonBlocking`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "If the method does not declare any of the annotations listed above the execution model is derived from the return type:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods returning `Uni` and `Multi` are considered non-blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Methods returning `void` or any other type are considered blocking."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Kotlin `suspend` functions are always considered non-blocking and may not be annotated with `@Blocking`, `@NonBlocking`\n"
"or `@RunOnVirtualThread` and may not be in a class annotated with `@RunOnVirtualThread`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Non-blocking methods must execute on the connection's event loop thread."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Blocking methods must execute on a worker thread unless annotated with `@RunOnVirtualThread` or in a class annotated\n"
"with `@RunOnVirtualThread`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Methods annotated with `@RunOnVirtualThread` or declared in class annotated with `@RunOnVirtualThread` must execute on\n"
"a virtual thread, each invocation spawns a new virtual thread."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Method parameters"
msgstr "方法参数"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The method must accept exactly one message parameter:"
msgstr "该方法必须准确接受一个信息参数："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object (of any type)."
msgstr "信息对象（任何类型）。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "A `Multi<X>` with X as the message type."
msgstr "`Multi<X>` ，信息类型为 X。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "However, it may also accept the following parameters:"
msgstr "不过，它也可以接受以下参数："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`WebSocketConnection`/`WebSocketClientConnection`"
msgstr "`WebSocketConnection` / `WebSocketClientConnection`"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`HandshakeRequest`"
msgstr "`HandshakeRequest`"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`String` parameters annotated with `@PathParam`"
msgstr "`String` 注释的参数 `@PathParam`"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The message object represents the data sent and can be accessed as either raw content (`String`, `JsonObject`, `JsonArray`, `Buffer` or `byte[]`) or deserialized high-level objects, which is the recommended approach."
msgstr "消息对象代表发送的数据，可作为原始内容（ `String` , `JsonObject` , `JsonArray` , `Buffer` 或 `byte[]` ）或反序列化的高级对象访问，这是推荐的方法。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When receiving a `Multi`, the method is invoked once per connection, and the provided `Multi` receives the items transmitted by this connection.\n"
"If the method returns a `Multi` (constructed from the received one), Quarkus will automatically subscribe to it and write the emitted items until completion, failure, or cancellation.\n"
"However, if your method does not return a `Multi`, you must subscribe to the incoming `Multi` to consume the data."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Here are two examples:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "See <<subscribe-or-not-subscribe>> to learn more about subscribing to the incoming `Multi`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Supported return types"
msgstr "支持的返回类型"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnTextMessage` or `@OnBinaryMessage` can return various types to handle WebSocket communication efficiently:"
msgstr "使用 `@OnTextMessage` 或 `@OnBinaryMessage` 进行注解的方法可以返回各种类型，以便有效处理 WebSocket 通信："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit response is sent back to the client."
msgstr "`void` :表示阻塞方法，不会向客户端发送明确的响应。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No explicit response is sent back to the client."
msgstr "`Uni<Void>` :表示非阻塞方法，返回 `Uni` 表示处理结束。不会向客户端发送明确的响应。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X` represents a blocking method in which the returned object is serialized and sent back to the client as a response."
msgstr "`X` 类型的对象代表一个阻塞方法，在该方法中，返回的对象被序列化，并作为响应发送回客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client as a response."
msgstr "`Uni<X>` :指定一个非阻塞方法，在该方法中，非空 `Uni` 发送的项目将作为响应发送给客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Multi<X>`: Indicates a non-blocking method where the items emitted by the non-null `Multi` are sequentially sent to the client until completion or cancellation."
msgstr "`Multi<X>` :表示一个非阻塞方法，在该方法中，非空 `Multi` 发送的项目会按顺序发送到客户端，直至完成或取消。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit response is sent back to the client."
msgstr "Kotlin `suspend` 返回 `Unit` 的函数：表示非阻塞方法，该方法不会向客户端发送明确的响应。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client as a response."
msgstr "Kotlin `suspend` 返回 `X` 的函数：指定一个非阻塞方法，返回的项目作为响应发送给客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Here are some examples of these methods:"
msgstr "下面是这些方法的一些例子："

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Methods returning `Uni` and `Multi` are considered non-blocking.\n"
"In addition, Quarkus automatically subscribes to the returned `Multi` / `Uni` and writes the emitted items until completion, failure, or cancellation.\n"
"Failure or cancellation terminates the connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Streams"
msgstr "溪流"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In addition to individual messages, WebSocket endpoints can handle streams of messages.\n"
"In this case, the method receives a `Multi<X>` as a parameter.\n"
"Each instance of `X` is deserialized using the same rules listed above."
msgstr "除了单条信息外，WebSocket 端点还能处理信息流。在这种情况下，该方法接收 `Multi<X>` 作为参数。 `X` 的每个实例都将使用上述相同规则进行反序列化。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method receiving the `Multi` can either return another `Multi` or `void`.\n"
"If the method returns a `Multi`, it does not have to subscribe to the incoming `multi`:"
msgstr "接收 `Multi` 的方法可以返回另一个 `Multi` 或 `void` 。如果方法返回的是 `Multi` ，则不必订阅传入的 `multi` ："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This approach allows bi-directional streaming."
msgstr "这种方法允许双向流。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When the method returns `void`, and so does not return a `Multi`, the code must subscribe to the incoming `Multi`.\n"
"Otherwise, no data will be consumed, and the connection will not be closed:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Also note that the `stream` method will complete before the `Multi` completes."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Skipping reply"
msgstr "跳过回复"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When a method is intended to produce a message written to the client, it can emit `null`.\n"
"Emitting `null` signifies no response to be sent to the client, allowing for skipping a response when needed."
msgstr "当一个方法打算产生一条写给客户端的消息时，它可以发出 `null` 。发送 `null` 表示不向客户端发送响应，以便在需要时跳过响应。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "JsonObject and JsonArray"
msgstr "JsonObject 和 JsonArray"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Vert.x `JsonObject` and `JsonArray` instances bypass the serialization and deserialization mechanisms.\n"
"Messages are sent as text messages."
msgstr "Vert.x `JsonObject` 和 `JsonArray` 实例绕过了序列化和反序列化机制。信息以文本信息的形式发送。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "OnOpen and OnClose methods"
msgstr "打开和关闭方法"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket endpoint can also be notified when a client connects or disconnects."
msgstr "当客户端连接或断开时，WebSocket 端点也会收到通知。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This is done by annotating a method with `@OnOpen` or `@OnClose`:"
msgstr "具体做法是用 `@OnOpen` 或 `@OnClose` 对方法进行注释："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` is triggered upon client connection, while `@OnClose` is invoked upon disconnection."
msgstr "`@OnOpen` 在客户端连接时触发，而 则在断开连接时调用。 `@OnClose` "

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "These methods have access to the _session-scoped_ `WebSocketConnection` bean."
msgstr "这些方法可以访问 _会话作用域_ `WebSocketConnection` Bean。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Parameters"
msgstr "参数"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen` and `@OnClose` may accept the following parameters:"
msgstr "注释为 `@OnOpen` 和 `@OnClose` 的方法可接受以下参数："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An endpoint method annotated with `@OnClose` may also accept the `io.quarkus.websockets.next.CloseReason` parameter that may indicate a reason for closing a connection."
msgstr "注释为 `@OnClose` 的端点方法也可接受 `io.quarkus.websockets.next.CloseReason` 参数，该参数可指明关闭连接的原因。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`@OnOpen` and `@OnClose` methods support different returned types."
msgstr "`@OnOpen` 和 方法支持不同的返回类型。 `@OnClose` "

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"For `@OnOpen` methods, the same rules as `@On[Text|Binary]Message` apply.\n"
"Thus, a method annotated with `@OnOpen` can send messages to the client immediately after connecting.\n"
"The supported return types for `@OnOpen` methods are:"
msgstr "对于 `@OnOpen` 方法，适用与 `@On[Text|Binary]Message` 相同的规则。因此，注释为 `@OnOpen` 的方法可以在连接后立即向客户端发送消息。 `@OnOpen` 方法支持的返回类型有"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: Indicates a blocking method where no explicit message is sent back to the connected client."
msgstr "`void` :表示阻塞方法，不会向已连接的客户端发送明确信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: Denotes a non-blocking method where the completion of the returned `Uni` signifies the end of processing. No message is sent back to the client."
msgstr "`Uni<Void>` :表示非阻塞方法，返回 `Uni` 表示处理结束。不会向客户端发送任何信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An object of type `X`: Represents a blocking method where the returned object is serialized and sent back to the client."
msgstr "`X` 类型的对象：代表一个阻塞方法，返回的对象被序列化并发送回客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<X>`: Specifies a non-blocking method where the item emitted by the non-null `Uni` is sent to the client."
msgstr "`Uni<X>` :指定一个非阻塞方法，将非空 `Uni` 发送的项目发送到客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: Denotes a non-blocking method where no explicit message is sent back to the client."
msgstr "Kotlin `suspend` 返回 `Unit` 的函数：表示非阻塞方法，该方法不会向客户端发送显式消息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `X`: Specifies a non-blocking method where the returned item is sent to the client."
msgstr "Kotlin `suspend` 返回 `X` 的函数：指定一个非阻塞方法，将返回的项目发送到客户端。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Items sent to the client are <<serialization,serialized>> except for the `String`, `io.vertx.core.json.JsonObject`, `io.vertx.core.json.JsonArray`, `io.vertx.core.buffer.Buffer`, and `byte[]` types.\n"
"In the case of `Multi`, Quarkus subscribes to the returned `Multi` and writes the items to the `WebSocket` as they are emitted.\n"
"`String`, `JsonObject` and `JsonArray` are sent as text messages.\n"
"`Buffers` and byte arrays are sent as binary messages."
msgstr "除了 `String` , `io.vertx.core.json.JsonObject` , `io.vertx.core.json.JsonArray` , `io.vertx.core.buffer.Buffer` 和 `byte[]` 类型外，发送到客户端的项目都是 xref:serialization[序列化] 的。在 `Multi` 的情况下，Quarkus 会订阅返回的 `Multi` ，并在项目发出时将其写入 `WebSocket` 。 `String` `JsonObject` `JsonArray` `Buffers` 和字节数组以二进制信息的形式发送。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "For `@OnClose` methods, the supported return types include:"
msgstr "对于 `@OnClose` 方法，支持的返回类型包括"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`void`: The method is considered blocking."
msgstr "`void` :该方法被认为是阻塞性的。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`Uni<Void>`: The method is considered non-blocking."
msgstr "`Uni<Void>` :该方法被认为是非阻塞的。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Kotlin `suspend` function returning `Unit`: The method is considered non-blocking."
msgstr "Kotlin `suspend` 函数返回 `Unit` : 该方法被视为非阻塞方法。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"`@OnClose` methods declared on a server endpoint cannot send items to the connected client by returning objects.\n"
"They can only send messages to the other clients by using the `WebSocketConnection` object."
msgstr "`@OnClose` 在服务器端点声明的方法不能通过返回对象向已连接的客户端发送项目。它们只能通过 对象向其他客户端发送消息。 `WebSocketConnection` "

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Error handling"
msgstr "错误处理"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoints can also be notified when an error occurs.\n"
"A WebSocket endpoint method annotated with `@io.quarkus.websockets.next.OnError` is invoked when an endpoint callback throws a runtime error, or when a conversion errors occurs,\n"
"or when a returned `io.smallrye.mutiny.Uni`/`io.smallrye.mutiny.Multi` receives a failure."
msgstr "当发生错误时，WebSocket 端点也会收到通知。当端点回调抛出运行时错误，或发生转换错误，或返回的 `io.smallrye.mutiny.Uni` / `io.smallrye.mutiny.Multi` 接收失败时，会调用注释为 `@io.quarkus.websockets.next.OnError` 的 WebSocket 端点方法。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The method must accept exactly one _error_ parameter, i.e. a parameter that is assignable from `java.lang.Throwable`.\n"
"The method may also accept the following parameters:"
msgstr "该方法必须完全接受一个 _错误_ 参数，即一个可从 `java.lang.Throwable` 分配的参数。该方法还可接受以下参数："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"An endpoint may declare multiple methods annotated with `@io.quarkus.websockets.next.OnError`.\n"
"However, each method must declare a different error parameter.\n"
"The method that declares a most-specific supertype of the actual exception is selected."
msgstr "一个端点可以声明多个注释为 `@io.quarkus.websockets.next.OnError` 的方法，但每个方法必须声明不同的错误参数。我们会选择声明了实际异常的最特定超类型的方法。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `@io.quarkus.websockets.next.OnError` annotation can be also used to declare a global error handler, i.e. a method that is not declared on a WebSocket endpoint. Such a method may not accept `@PathParam` parameters. Error handlers declared on an endpoint take precedence over the global error handlers."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When an error occurs but no error handler can handle the failure, Quarkus uses the strategy specified by `quarkus.websockets-next.server.unhandled-failure-strategy`.\n"
"For server endpoints, the error message is logged and the connection is closed by default.\n"
"For client endpoints, the error message is logged by default."
msgstr "当发生错误但没有错误处理程序可以处理该故障时，Quarkus 会使用 `quarkus.websockets-next.server.unhandled-failure-strategy` 指定的策略。对于服务器端点，默认情况下会记录错误信息并关闭连接。对于客户端端点，默认情况下会记录错误信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Serialization and deserialization"
msgstr "序列化和反序列化"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The WebSocket Next extension supports automatic serialization and deserialization of messages."
msgstr "WebSocket Next 扩展支持消息的自动序列化和反序列化。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Objects of type `String`, `JsonObject`, `JsonArray`, `Buffer`, and `byte[]` are sent as-is and bypass the serialization and deserialization.\n"
"When no codec is provided, the serialization and deserialization convert the message from/to JSON automatically."
msgstr "`String` , `JsonObject` , `JsonArray` , `Buffer` 和 `byte[]` 类型的对象按原样发送，并绕过序列化和反序列化。如果没有提供编码解码器，序列化和反序列化会自动将信息从 JSON 转换为 JSON。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you need to customize the serialization and deserialization, you can provide a custom codec."
msgstr "如果需要自定义序列化和反序列化，可以提供自定义编解码器。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Custom codec"
msgstr "自定义编解码器"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "To implement a custom codec, you must provide a CDI bean implementing:"
msgstr "要实现自定义编解码器，您必须提供一个 CDI Bean 来实现："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.BinaryMessageCodec` for binary messages"
msgstr "`io.quarkus.websockets.next.BinaryMessageCodec` 用于二进制信息"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`io.quarkus.websockets.next.TextMessageCodec` for text messages"
msgstr "`io.quarkus.websockets.next.TextMessageCodec` 用于短信"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The following example shows how to implement a custom codec for a `Item` class:"
msgstr "下面的示例展示了如何为 `Item` 类实现自定义编解码器："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OnTextMessage` and `OnBinaryMessage` methods can also specify which codec should be used explicitly:"
msgstr "`OnTextMessage` 和 方法也可以明确指定使用哪种编解码器： `OnBinaryMessage` "

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for both the deserialization and serialization of the message"
msgstr "指定用于报文反序列化和序列化的编解码器"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When the serialization and deserialization must use a different codec, you can specify the codec to use for the serialization and deserialization separately:"
msgstr "如果序列化和反序列化必须使用不同的编解码器，可以分别指定序列化和反序列化使用的编解码器："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the deserialization of the incoming message"
msgstr "指定接收信息反序列化时使用的编解码器"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Specify the codec to use for the serialization of the outgoing message"
msgstr "指定用于外发信息序列化的编解码器"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Ping/Pong messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping message] may serve as a keepalive or to verify the remote endpoint.\n"
"A https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong message] is sent in response to a ping message and it must have an identical payload."
msgstr "link:https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.2[ping 报文] 可用作保持报文或验证远程端点。 link:https://datatracker.ietf.org/doc/html/rfc6455#section-5.5.3[pong] 报文是对 ping 报文的回应，其有效载荷必须完全相同。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sending ping messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Ping messages are optional and not sent by default. However, server and client endpoints can be configured to automatically send ping messages on an interval."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sends a ping message from the server to each connected client every 2 seconds."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sends a ping message from all connected client instances to their remote servers every 10 seconds."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Servers and clients can send ping messages programmatically at any time using `WebSocketConnection` or `WebSocketClientConnection`.\n"
"There is a non-blocking variant: `Sender#sendPing(Buffer)` and a blocking variant: `Sender#sendPingAndAwait(Buffer)`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Sending pong messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Server and client endpoints will always respond to a ping message sent from the remote party with a corresponding pong message, using the application data from the ping message.\n"
"This behavior is built-in and requires no additional code or configuration."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Servers and clients can send unsolicited pong messages that may serve as a unidirectional heartbeat using `WebSocketConnection` or `WebSocketClientConnection`. There is a non-blocking variant: `Sender#sendPong(Buffer)` and a blocking variant: `Sender#sendPongAndAwait(Buffer)`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Handling ping/pong messages"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Because ping messages are handled automatically and pong messages require no response, it is not necessary to write handlers for these messages to comply with the WebSocket protocol.\n"
"However, it is sometimes useful to know when ping or pong messages are received by an endpoint."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"The `@OnPingMessage` and `@OnPongMessage` annotations can be used to define callbacks that consume ping or pong messages sent from the remote party.\n"
"An endpoint may declare at most one `@OnPingMessage` callback and at most  one `@OnPongMessage` callback.\n"
"The callback method must return either `void` or `Uni<Void>` (or be a Kotlin `suspend` function returning `Unit`), and it must accept a single parameter of type `Buffer`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inbound processing mode"
msgstr "入站处理模式"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoints can define the mode used to process incoming events for a specific connection using the `@WebSocket#inboundProcessingMode()`, and `@WebSocketClient.inboundProcessingMode()` respectively.\n"
"An incoming event can represent a message (text, binary, pong), opening connection and closing connection.\n"
"By default, events are processed serially and ordering is guaranteed.\n"
"This means that if an endpoint receives events `A` and `B` (in this particular order) then callback for event `B` will be invoked after the callback for event `A` completed.\n"
"However, in some situations it is preferable to process events concurrently, i.e. with no ordering guarantees but also with no concurrency limits.\n"
"For this cases, the `InboundProcessingMode#CONCURRENT` should be used."
msgstr "WebSocket 端点可以使用 `@WebSocket#inboundProcessingMode()` 和 `@WebSocketClient.inboundProcessingMode()` 分别定义用于处理特定连接传入事件的模式。传入事件可以代表消息（文本、二进制、乒乓）、打开连接和关闭连接。默认情况下，事件是按序列处理的，并保证排序。这意味着，如果端点接收到事件 `A` 和 `B` （按此特定顺序），那么事件 `B` 的回调将在事件 `A` 的回调完成后被调用。不过，在某些情况下，最好是并发处理事件，即不保证顺序，但也没有并发限制。在这种情况下，应使用 `InboundProcessingMode#CONCURRENT` 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Server API"
msgstr "服务器应用程序接口"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "HTTP server configuration"
msgstr "HTTP 服务器配置"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "This extension reuses the _main_ HTTP server."
msgstr "该扩展重复使用 _主_ HTTP 服务器。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Thus, the configuration of the WebSocket server is done in the `quarkus.http.` configuration section."
msgstr "因此，WebSocket 服务器的配置在 `quarkus.http.` 配置部分完成。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket paths configured within the application are concatenated with the root path defined by `quarkus.http.root` (which defaults to `/`).\n"
"This concatenation ensures that WebSocket endpoints are appropriately positioned within the application's URL structure."
msgstr "应用程序中配置的 WebSocket 路径与 `quarkus.http.root` （默认为 `/` ）定义的根路径连接。这种连接可确保 WebSocket 端点在应用程序的 URL 结构中位置恰当。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Refer to the xref:http-reference.adoc[HTTP guide] for more details."
msgstr "详情请参考 xref:http-reference.adoc[HTTP 指南] 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Sub-websockets endpoints"
msgstr "子网络接口端点"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"A `@WebSocket` endpoint can encapsulate static nested classes, which are also annotated with `@WebSocket` and represent _sub-websockets_.\n"
"The resulting path of these sub-websockets concatenates the path from the enclosing class and the nested class.\n"
"The resulting path is normalized, following the HTTP URL rules."
msgstr "`@WebSocket` 端点可以封装静态嵌套类，这些嵌套类也用 `@WebSocket` 进行注解，并代表 _子_ 网络套接字。这些子网络接口的路径由外层类和嵌套类的路径连接而成。生成的路径将按照 HTTP URL 规则进行规范化处理。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Sub-websockets inherit access to the path parameters declared in the `@WebSocket` annotation of both the enclosing and nested classes.\n"
"The `consumePrimary` method within the enclosing class can access the `version` parameter in the following example.\n"
"Meanwhile, the `consumeNested` method within the nested class can access both `version` and `id` parameters:"
msgstr "子网络接口继承了对外层类和嵌套类的 `@WebSocket` 注解中声明的路径参数的访问权限。在下面的示例中，外层类中的 `consumePrimary` 方法可以访问 `version` 参数。同时，嵌套类中的 `consumeNested` 方法可以访问 `version` 和 `id` 参数："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket connection"
msgstr "WebSocket 连接"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocket` endpoint and used to interact with the connected client."
msgstr "`io.quarkus.websockets.next.WebSocketConnection` 对象代表 WebSocket 连接。Quarkus 提供了一个实现该接口的 `@SessionScoped` CDI Bean，它可以注入 `WebSocket` 端点并用于与连接的客户端交互。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketConnection` object:"
msgstr "注释为 `@OnOpen` , `@OnTextMessage` , `@OnBinaryMessage` 和 `@OnClose` 的方法可以访问注入的 `WebSocketConnection` 对象："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Note that outside of these methods, the `WebSocketConnection` object is not available. However, it is possible to <<list-open-connections,list all open connections>>."
msgstr "请注意，在这些方法之外， `WebSocketConnection` 对象不可用。不过，可以 xref:list-open-connections[列出所有打开的连接] 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connection can be used to send messages to the client, access the path parameters, broadcast messages to all connected clients, etc."
msgstr "该连接可用于向客户端发送消息、访问路径参数、向所有连接的客户端广播消息等。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketConnection` 提供了发送消息的阻塞和非阻塞方法变体："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`sendTextAndAwait(String message)`: Sends a text message to the client and waits for the message to be sent. It's blocking and should only be called from an executor thread."
msgstr "`sendTextAndAwait(String message)` :向客户端发送文本信息，并等待信息发送完毕。它是阻塞的，只能由执行线程调用。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"`sendText(String message)`: Sends a text message to the client. It returns a `Uni`. It's non-blocking. Make sure you or Quarkus subscribes to the returned `Uni` to send the message.\n"
"If you return the `Uni` from a method invoked by Quarkus (like with Quarkus REST, Quarkus WebSocket Next or Quarkus Messaging), it will subscribe to it and send the message.\n"
"For example:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "See <<subscribe-or-not-subscribe>> to learn more about subscribing to the `Uni`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "List open connections"
msgstr "列出打开的连接"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenConnections` that declares convenient methods to access the connections."
msgstr "还可以列出所有打开的连接。Quarkus 提供了一个 `io.quarkus.websockets.next.OpenConnections` 类型的 CDI Bean，它声明了访问连接的便捷方法。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OpenConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenConnections#listAll()` 返回给定时间内所有打开连接的不可变快照。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenConnections#findByEndpointId(String)` makes it easy to find connections for a specific endpoint."
msgstr "还有其他一些方便的方法。例如， `OpenConnections#findByEndpointId(String)` 可以轻松查找特定端点的连接。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "User data"
msgstr "用户数据"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to associate arbitrary user data with a specific connection.\n"
"The `io.quarkus.websockets.next.UserData` object obtained by the `WebSocketConnection#userData()` method represents mutable user data associated with a connection."
msgstr "还可以将任意用户数据与特定连接关联起来。通过 `WebSocketConnection#userData()` 方法获得的 `io.quarkus.websockets.next.UserData` 对象代表与连接相关联的可变用户数据。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`CoolService#isCool()` returns `Boolean` that is associated with the current connection."
msgstr "`CoolService#isCool()` 返回与当前连接相关的 。 `Boolean` "

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `TypedKey.forBoolean(\"isCool\")` is the key used to obtain the data stored when the connection was created."
msgstr "`TypedKey.forBoolean(\"isCool\")` 是用于获取创建连接时存储的数据的密钥。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "CDI events"
msgstr "CDI 活动"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr "打开新连接时，Quarkus 会异步触发 `io.quarkus.websockets.next.WebSocketConnection` 类型的 CDI 事件（带限定符 `@io.quarkus.websockets.next.Open` ）。此外，当连接关闭时，会异步触发类型为 `WebSocketConnection` 、修饰符为 `@io.quarkus.websockets.next.Closed` 的 CDI 事件。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "An asynchronous observer method is executed using the default blocking executor service."
msgstr "异步观察者方法使用默认的阻塞执行器服务执行。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Security"
msgstr "安全"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Security capabilities are provided by the Quarkus Security extension.\n"
"Any xref:security-identity-providers.adoc[Identity provider] can be used to convert authentication credentials on the initial HTTP request into a `SecurityIdentity` instance.\n"
"The `SecurityIdentity` is then associated with the websocket connection.\n"
"Authorization options are demonstrated in following sections."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When an OpenID Connect extension, `quarkus-oidc`, is used and token expires, Quarkus automatically closes connection."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Secure HTTP upgrade"
msgstr "安全 HTTP 升级"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"An HTTP upgrade is secured when a standard security annotation is placed on an endpoint class or an HTTP Security policy is defined.\n"
"The advantage of securing HTTP upgrade is less processing, the authorization is performed early and only once.\n"
"You should always prefer HTTP upgrade security unless you need to perform an action on error (see <<secure-callback-methods>>) or a security check based on the payload (see <<secure-endpoints-with-permission-checkers>>)."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use standard security annotation to secure an HTTP upgrade"
msgstr "使用标准安全注释确保 HTTP 升级安全"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Initial HTTP handshake ends with the 401 status for anonymous users.\n"
"You can also redirect the handshake request on authorization failure with the `quarkus.websockets-next.server.security.auth-failure-redirect-url` configuration property."
msgstr "对于匿名用户，初始 HTTP 握手会以 401 状态结束。您也可以使用 `quarkus.websockets-next.server.security.auth-failure-redirect-url` 配置属性在授权失败时重定向握手请求。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"HTTP upgrade is only secured when a security annotation is declared on an endpoint class next to the `@WebSocket` annotation.\n"
"Placing a security annotation on an endpoint bean will not secure bean methods, only the HTTP upgrade.\n"
"You must always verify that your endpoint is secured as intended."
msgstr "只有在端点类的 `@WebSocket` 注释旁边声明安全注解时，HTTP 升级才会安全。在端点 Bean 上添加安全注解不会确保 Bean 方法的安全，只会确保 HTTP 升级的安全。您必须始终验证您的端点是否按预期进行了安全保护。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use HTTP Security policy to secure an HTTP upgrade"
msgstr "使用 HTTP 安全策略确保 HTTP 升级安全"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Secure WebSocket endpoint callback methods"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"WebSocket endpoint callback methods can be secured with security annotations such as `io.quarkus.security.Authenticated`,\n"
"`jakarta.annotation.security.RolesAllowed` and other annotations listed in the xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Supported security annotations] documentation."
msgstr "WebSocket 端点回调方法可使用 `io.quarkus.security.Authenticated` 、 `jakarta.annotation.security.RolesAllowed` 等安全注解以及 xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[支持的安全注解] 文档中列出的其他注解来保护。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "For example:"
msgstr "例如："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The echo callback method can only be invoked if the current security identity has an `admin` role."
msgstr "只有当当前安全身份具有 `admin` 角色时，才能调用 echo 回调方法。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The error handler is invoked in case of the authorization failure."
msgstr "授权失败时将调用错误处理程序。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Secure server endpoints with permission checkers"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"WebSocket endpoints can be secured with the xref:security-authorize-web-endpoints-reference.adoc#permission-checker[permission checkers].\n"
"We recommend to <<secure-http-upgrade>> rather than individual endpoint methods. For example:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Example of a WebSocket endpoint with secured HTTP upgrade"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Example of a permission checker authorizing the HTTP upgrade"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "A permission checker authorizing an HTTP upgrade must declare exactly one method parameter, the `SecurityIdentity`."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "It is also possible to run security checks on every message. For example, a message payload can be accessed like this:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "The `getProduct` callback method can only be invoked if the current security identity has an `admin` role or the user is allowed to get the product detail."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inspect and/or reject HTTP upgrade"
msgstr "检查和/或拒绝 HTTP 升级"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"To inspect an HTTP upgrade, you must provide a CDI bean implementing the `io.quarkus.websockets.next.HttpUpgradeCheck` interface.\n"
"Quarkus calls the `HttpUpgradeCheck#perform` method on every HTTP request that should be upgraded to a WebSocket connection.\n"
"Inside this method, you can perform any business logic and/or reject the HTTP upgrade."
msgstr "要检查 HTTP 升级，您必须提供一个实现 `io.quarkus.websockets.next.HttpUpgradeCheck` 接口的 CDI Bean。Quarkus 会在每个应升级到 WebSocket 连接的 HTTP 请求上调用 `HttpUpgradeCheck#perform` 方法。在这个方法中，你可以执行任何业务逻辑和/或拒绝 HTTP 升级。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Example HttpUpgradeCheck"
msgstr "HttpUpgradeCheck 示例"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The CDI beans implementing `HttpUpgradeCheck` interface can be either `@ApplicationScoped`, `@Singleton` or `@Dependent` beans, but never the `@RequestScoped` beans."
msgstr "实现 `HttpUpgradeCheck` 接口的 CDI Bean 可以是 `@ApplicationScoped` 、 `@Singleton` 或 `@Dependent` Bean，但绝不能是 `@RequestScoped` Bean。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Reject the HTTP upgrade. Initial HTTP handshake ends with the 400 Bad Request response status code."
msgstr "拒绝 HTTP 升级。初始 HTTP 握手以 400 Bad Request 响应状态代码结束。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "You can choose WebSocket endpoints to which the `HttpUpgradeCheck` is applied with the `HttpUpgradeCheck#appliesTo` method."
msgstr "您可以通过 `HttpUpgradeCheck#appliesTo` 方法选择应用 `HttpUpgradeCheck` 的 WebSocket 端点。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "TLS"
msgstr "TLS"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "As a direct consequence of the fact this extension reuses the _main_ HTTP server, all the relevant server configurations apply. See Refer to the xref:http-reference.adoc#ssl[HTTP guide] for more details."
msgstr "由于该扩展重用了 _主_ HTTP 服务器，因此所有相关的服务器配置都适用。更多详情，请参阅 xref:http-reference.adoc#ssl[HTTP 指南] 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Hibernate multitenancy"
msgstr "Hibernate 多租户"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `RoutingContext` is not available after the HTTP upgrade. However, it is possible to inject the `WebSocketConnection` and access the headers of the initial HTTP request."
msgstr "HTTP 升级后， `RoutingContext` 不可用。不过，可以注入 `WebSocketConnection` 并访问 HTTP 初始请求的标头。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "If a custom `TenantResolver` is used and you would like to combine REST/HTTP and WebSockets, the code may look like this:"
msgstr "如果使用自定义 `TenantResolver` ，并希望将 REST/HTTP 和 WebSockets 结合起来，代码可能如下所示："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "For more information on Hibernate multitenancy, refer to the https://quarkus.io/guides/hibernate-orm#multitenancy[hibernate documentation]."
msgstr "有关 Hibernate 多租户的更多信息，请参阅 link:https://quarkus.io/guides/hibernate-orm#multitenancy[hibernate 文档] 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client API"
msgstr "客户端 API"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client connectors"
msgstr "客户端连接器"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"A connector can be used to configure and open a new client connection backed by a client endpoint that is used to consume and send messages.\n"
"Quarkus provides a CDI bean with bean type `io.quarkus.websockets.next.WebSocketConnector<CLIENT>` and default qualifer that can be injected in other beans.\n"
"The actual type argument of an injection point is used to determine the client endpoint.\n"
"The type is validated during build - if it does not represent a client endpoint the build fails."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Let’s consider the following client endpoint:"
msgstr "让我们来看看下面的客户端端点："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Client endpoint"
msgstr "客户端端点"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connector for this client endpoint is used as follows:"
msgstr "该客户终端的连接器使用方法如下："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Connector"
msgstr "连接器"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inject the connector for `ClientEndpoint`."
msgstr "为 `ClientEndpoint` 注入连接器。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "If the base `URI` is not supplied we attempt to obtain the value from the config. The key consists of the client id and the `.base-uri` suffix."
msgstr "如果未提供基本 `URI` ，我们将尝试从配置中获取该值。密钥由客户 ID 和 `.base-uri` 后缀组成。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the path param value. Throws `IllegalArgumentException` if the client endpoint path does not contain a parameter with the given name."
msgstr "设置路径参数值。如果客户端端点路径不包含给定名称的参数，则抛出 `IllegalArgumentException` 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Use the connection to send messages, if needed."
msgstr "如有需要，使用连接发送信息。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "If an application attempts to inject a connector for a missing endpoint, an error is thrown."
msgstr "如果应用程序试图为丢失的端点注入连接器，就会出现错误。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"Connectors are not thread-safe and should not be used concurrently.\n"
"Connectors should also not be reused.\n"
"If you need to create multiple connections in a row you'll need to obtain a new connetor instance programmatically using `Instance#get()`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Basic connector"
msgstr "基本连接器"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"In the case where the application developer does not need the combination of the client endpoint and the connector, a _basic connector_ can be used.\n"
"The basic connector is a simple way to create a connection and consume/send messages without defining a client endpoint."
msgstr "如果应用程序开发人员不需要客户端端点和连接器的组合，则可以使用 _基本连接器_ 。基本连接器是一种创建连接和消费/发送消息的简单方法，无需定义客户端端点。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Inject the connector."
msgstr "注入连接器。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The base URI must be always set."
msgstr "必须始终设置基本 URI。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The additional path that should be appended to the base URI."
msgstr "附加到基本 URI 的路径。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the execution model for callback handlers. By default, the callback may block the current thread. However in this case, the callback is executed on the event loop and may not block the current thread."
msgstr "设置回调处理程序的执行模式。默认情况下，回调可能会阻塞当前线程。但在这种情况下，回调在事件循环中执行，可能不会阻塞当前线程。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The lambda will be called for every text message sent from the server."
msgstr "从服务器发送的每一条文本信息都将调用 lambda。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The basic connector is closer to a low-level API and is reserved for advanced users.\n"
"However, unlike others low-level WebSocket clients, it is still a CDI bean and can be injected in other beans.\n"
"It also provides a way to configure the execution model of the callbacks, ensuring optimal integration with the rest of Quarkus."
msgstr "基本连接器更接近于低级 API，专供高级用户使用。不过，与其他低级 WebSocket 客户端不同的是，它仍然是一个 CDI Bean，可以注入到其他 Bean 中。它还提供了一种配置回调执行模型的方法，确保与 Quarkus 其他部分的最佳集成。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "WebSocket client connection"
msgstr "WebSocket 客户端连接"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.websockets.next.WebSocketClientConnection` object represents the WebSocket connection.\n"
"Quarkus provides a `@SessionScoped` CDI bean that implements this interface and can be injected in a `WebSocketClient` endpoint and used to interact with the connected server."
msgstr "`io.quarkus.websockets.next.WebSocketClientConnection` 对象代表 WebSocket 连接。Quarkus 提供了一个实现该接口的 `@SessionScoped` CDI Bean，可注入 `WebSocketClient` 端点，用于与连接的服务器交互。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Methods annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, and `@OnClose` can access the injected `WebSocketClientConnection` object:"
msgstr "注释为 `@OnOpen` , `@OnTextMessage` , `@OnBinaryMessage` 和 `@OnClose` 的方法可以访问注入的 `WebSocketClientConnection` 对象："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Note that outside of these methods, the `WebSocketClientConnection` object is not available. However, it is possible to <<list-open-client-connections,list all open client connections>>."
msgstr "请注意，在这些方法之外， `WebSocketClientConnection` 对象不可用。不过，可以 xref:list-open-client-connections[列出所有打开的客户端连接] 。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The connection can be used to send messages to the client, access the path parameters, etc."
msgstr "该连接可用于向客户端发送消息、访问路径参数等。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The `WebSocketClientConnection` provides both a blocking and a non-blocking method variants to send messages:"
msgstr "`WebSocketClientConnection` 提供了发送消息的阻塞和非阻塞方法变体："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "List open client connections"
msgstr "列出打开的客户端连接"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to list all open connections.\n"
"Quarkus provides a CDI bean of type `io.quarkus.websockets.next.OpenClientConnections` that declares convenient methods to access the connections."
msgstr "还可以列出所有打开的连接。Quarkus 提供了一个 `io.quarkus.websockets.next.OpenClientConnections` 类型的 CDI Bean，它声明了访问连接的便捷方法。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "`OpenClientConnections#listAll()` returns an immutable snapshot of all open connections at the given time."
msgstr "`OpenClientConnections#listAll()` 返回给定时间内所有打开连接的不可变快照。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"There are also other convenient methods.\n"
"For example, `OpenClientConnections#findByClientId(String)` makes it easy to find connections for a specific endpoint."
msgstr "还有其他一些方便的方法。例如， `OpenClientConnections#findByClientId(String)` 可以轻松查找特定端点的连接。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"It is also possible to associate arbitrary user data with a specific connection.\n"
"The `io.quarkus.websockets.next.UserData` object obtained by the `WebSocketClientConnection#userData()` method represents mutable user data associated with a connection."
msgstr "还可以将任意用户数据与特定连接关联起来。通过 `WebSocketClientConnection#userData()` 方法获得的 `io.quarkus.websockets.next.UserData` 对象代表与连接相关联的可变用户数据。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus fires a CDI event of type `io.quarkus.websockets.next.WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Open` asynchronously when a new connection is opened.\n"
"Moreover, a CDI event of type `WebSocketClientConnection` with qualifier `@io.quarkus.websockets.next.Closed` is fired asynchronously when a connection is closed."
msgstr "打开新连接时，Quarkus 会异步触发 `io.quarkus.websockets.next.WebSocketClientConnection` 类型的 CDI 事件（带限定符 `@io.quarkus.websockets.next.Open` ）。此外，当连接关闭时，会异步触发类型为 `WebSocketClientConnection` 、修饰符为 `@io.quarkus.websockets.next.Closed` 的 CDI 事件。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Configuring SSL/TLS"
msgstr "配置 SSL/TLS"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "To establish a TLS connection, you need to configure a _named_ configuration using the xref:./tls-registry-reference.adoc[TLS registry]:"
msgstr "要建立 TLS 连接，需要使用 xref:./tls-registry-reference.adoc[TLS 注册表] 配置 _命名_ 配置："

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"When using the WebSocket client, using a _named_ configuration is required to avoid conflicts with other TLS configurations.\n"
"The client will not use the default TLS configuration."
msgstr "使用 WebSocket 客户端时，必须使用已 _命名的_ 配置，以避免与其他 TLS 配置冲突。客户端不会使用默认 TLS 配置。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "When you configure a _named_ TLS configuration, TLS is enabled by default."
msgstr "配置已 _命名_ TLS 配置时，默认情况下会启用 TLS。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Traffic logging"
msgstr "流量记录"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid ""
"Quarkus can log the messages sent and received for debugging purposes.\n"
"To enable traffic logging for the server, set the `quarkus.websockets-next.server.traffic-logging.enabled` configuration property to `true`.\n"
"To enable traffic logging for the client, set the `quarkus.websockets-next.client.traffic-logging.enabled` configuration property to `true`.\n"
"The payload of text messages is logged as well.\n"
"However, the number of logged characters is limited.\n"
"The default limit is 100, but you can change this limit with the `quarkus.websockets-next.server.traffic-logging.text-payload-limit` and `quarkus.websockets-next.client.traffic-logging.text-payload-limit` configuration property, respectively."
msgstr "Quarkus 可以记录发送和接收的信息，以便调试。要启用服务器流量日志，请将 `quarkus.websockets-next.server.traffic-logging.enabled` 配置属性设为 `true` 。要启用客户端流量日志，请将 `quarkus.websockets-next.client.traffic-logging.enabled` 配置属性设为 `true` 。文本信息的有效载荷也会被记录。不过，记录的字符数有限制。默认限制为 100，但您可以分别使用 `quarkus.websockets-next.server.traffic-logging.text-payload-limit` 和 `quarkus.websockets-next.client.traffic-logging.text-payload-limit` 配置属性更改此限制。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "The messages are only logged if the `DEBUG` level is enabled for the logger `io.quarkus.websockets.next.traffic`."
msgstr "只有在记录仪 `io.quarkus.websockets.next.traffic` 启用 `DEBUG` 级别时，才会记录报文。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Example server configuration"
msgstr "服务器配置示例"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Enables traffic logging."
msgstr "启用流量记录。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Set the number of characters of a text message payload which will be logged."
msgstr "设置将被记录的文本信息有效载荷的字符数。"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Enable `DEBUG` level is for the logger `io.quarkus.websockets.next.traffic`."
msgstr "启用 `DEBUG` 级别为记录仪 `io.quarkus.websockets.next.traffic` 。"

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When to subscribe to a `Uni` or `Multi`"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "`Uni` and `Multi` are lazy types, which means that they do not start processing until they are subscribed to."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When you get (from a parameter or from a method you called) a `Uni` or a `Multi`, whether you should subscribe to it depends on the context:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "if you return the `Uni` or `Multi` in a method invoked by Quarkus (like with Quarkus REST, Quarkus WebSocket Next or Quarkus Messaging), Quarkus subscribes to it and processes the items emitted by the `Multi` or the item emitted by the `Uni`:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "When a `Uni` or `Multi` is returned from a method annotated with `@OnOpen`, `@OnTextMessage`, `@OnBinaryMessage`, or `@OnClose`, Quarkus subscribes to it automatically."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "if you do not return the `Uni` or `Multi` in a method invoked by Quarkus, you should subscribe to it:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Telemetry"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When the OpenTelemetry extension is present, traces for opened and closed WebSocket connections are collected by default.\n"
"If you do not require WebSocket traces, you can disable collecting of traces like in the example below:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid ""
"When the Micrometer extension is present, Quarkus can collect metrics for messages, errors and bytes transferred.\n"
"If you require a WebSocket metrics, you can enable the metrics like in the example below:"
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
msgid "Telemetry for the `BasicWebSocketConnector` is currently not supported."
msgstr ""

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#: _versions/main/guides/websockets-next-reference.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
