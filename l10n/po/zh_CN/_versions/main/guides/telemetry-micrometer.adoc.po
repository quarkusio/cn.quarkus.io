# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-29 02:24+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Micrometer Metrics"
msgstr "测微计指标"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Micrometer provides an abstraction layer for metrics collection.\n"
"It defines an API for basic meter types, like counters, gauges, timers, and distribution summaries, along with a `MeterRegistry` API that generalizes metrics collection and propagation for different backend monitoring systems."
msgstr "Micrometer 为指标收集提供了一个抽象层。它为基本计量器类型（如计数器、仪表、计时器和分布汇总）定义了一个应用程序接口，以及一个 `MeterRegistry` 应用程序接口，该应用程序接口可为不同的后端监控系统通用计量器收集和传播功能。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
msgid "Micrometer is the recommended approach to metrics for Quarkus."
msgstr "Micrometer是Quarkus推荐的metrics度量库。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"By default, the metrics are exposed on the main HTTP server.\n"
"If you would like to surface metrics from a separate management port, see the xref:management-interface[Managed interface] section."
msgstr "默认情况下，指标在主 HTTP 服务器上显示。如果您想从单独的管理端口显示指标，请参阅 \" xref:management-interface[管理界面] \"部分。"

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Micrometer and monitoring system extensions"
msgstr "测微计和监测系统的扩展"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Quarkus Micrometer extensions are structured in the same way as the Micrometer project.\n"
"The `quarkus-micrometer` extension provides core Micrometer support and runtime integration.\n"
"Other Quarkus and Quarkiverse extensions use the Quarkus Micrometer extension to provide support for other monitoring systems."
msgstr "Quarkus Micrometer 扩展的结构与 Micrometer 项目相同。 `quarkus-micrometer` 扩展提供核心 Micrometer 支持和运行时集成。其他 Quarkus 和 Quarkiverse 扩展使用 Quarkus Micrometer 扩展为其他监控系统提供支持。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Quarkus extensions:"
msgstr "夸库斯扩展："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer"
msgstr "微量表.adoc"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-prometheus"
msgstr "微米-注册-普罗米修斯"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse extensions] (may be incomplete):"
msgstr "link:https://github.com/quarkiverse/quarkus-micrometer-registry[夸克宇宙的扩展] （可能不完整）："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-azure-monitor"
msgstr "微量表-注册表-氮气-监测器"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-datadog"
msgstr "微米-注册表-数据狗"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-graphite"
msgstr "微米-注册-石墨"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-influx"
msgstr "微量表-注册-流量"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-jmx"
msgstr "微米-注册表-jmx"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-newrelic-telemetry"
msgstr "微量表-注册-新遗迹-遥测技术"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-otlp"
msgstr "微米-注册表-otlp"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-signalfx"
msgstr "微米-注册表-signalfx"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-stackdriver"
msgstr "千分尺-注册表-stackdriver"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "micrometer-registry-statsd"
msgstr "微量表-注册表-统计表"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"To add support for Prometheus metrics to your application, for example, use the `micrometer-registry-prometheus` extension.\n"
"It will bring in the Quarkus Micrometer extension and Micrometer core libraries as dependencies."
msgstr "例如，要在应用程序中添加对 Prometheus 指标的支持，请使用 `micrometer-registry-prometheus` 扩展。它将引入 Quarkus Micrometer 扩展和 Micrometer 核心库作为依赖项。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Add the extension to your project using following command (from your project directory):"
msgstr "使用以下命令将扩展名添加到你的项目中（从你的项目目录）："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
msgid "This will add the following to your build file:"
msgstr "这将在你的build文件中添加以下内容："

#. type: Block title
#: _versions/main/guides/telemetry-micrometer.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/telemetry-micrometer.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "And you're all set!"
msgstr "而你已经准备好了!"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"A similar process applies for other meter registry extensions.\n"
"To use the Micrometer StackDriver MeterRegistry, for example, you would use the\n"
"`quarkus-micrometer-registry-stackdriver` extension from the Quarkiverse:"
msgstr "类似的过程也适用于其他仪表注册表扩展。例如，要使用 Micrometer StackDriver 流量计注册表，就需要使用 Quarkiverse 中的 `quarkus-micrometer-registry-stackdriver` 扩展："

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Other registry implementations"
msgstr "其他登记册的实施"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"If the Micrometer registry you would like to use does not yet have an associated extension,\n"
"use the `quarkus-micrometer` extension and bring in the Micrometer meter registry dependency directly:"
msgstr "如果您想使用的千分表注册表还没有相关扩展，请使用 `quarkus-micrometer` 扩展并直接引入千分表注册表依赖关系："

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"You will then need to specify your own provider to configure and initialize the\n"
"MeterRegistry, as discussed in the next section."
msgstr "然后，您将需要指定自定义的provider来配置和初始化MeterRegistry，我们将在下一节讨论。"

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Create a customized MeterRegistry"
msgstr "创建一个自定义的MeterRegistry"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a custom `@Produces` method to create and configure a your own `MeterRegistry` if you need to."
msgstr "如果你需要的话，使用自定义的 `@Produces` 方法来创建和配置你自己的 `MeterRegistry` 。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
msgid "The following example customizes the line format used for StatsD:"
msgstr "下面的例子自定义了用于StatsD的行格式："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The method returns a `@Singleton`."
msgstr "该方法返回一个 `@Singleton` 。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The method returns the specific type of `MeterRegistry`"
msgstr "该方法返回的具体类型是 `MeterRegistry` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "This example corresponds to the following instructions in the Micrometer documentation: link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD: Customizing the Metrics Sink]"
msgstr "这个例子对应于Micrometer文档中的以下说明： link:https://micrometer.io/docs/registry/statsD#_customizing_the_metrics_sink[Micrometer StatsD：定制度量衡水槽]"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Use MicroProfile Config to inject any configuration attributes you need to configure the registry.\n"
"Most Micrometer registry extensions, like `quarkus-micrometer-registry-statsd`, provide registry-specific configuration objects that are integrated with the Quarkus configuration model.\n"
"The link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub Repository] can be a useful implementation reference."
msgstr "使用 MicroProfile Config 注入配置注册表所需的任何配置属性。大多数 Micrometer 注册表扩展（如 `quarkus-micrometer-registry-statsd` ）都提供与 Quarkus 配置模型集成的特定于注册表的配置对象。 link:https://github.com/quarkiverse/quarkus-micrometer-registry[Quarkiverse GitHub 存储库] 可以作为有用的实施参考。"

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Create your own metrics"
msgstr "创建你自己的衡量标准"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Metrics data is used in the aggregate to observe how data changes over time.\n"
"This data is used for trend analysis, anomaly detection, and alerting.\n"
"Data is stored by backend monitoring systems in time series databases, with new values appended to the end of the series."
msgstr "度量数据用于观察数据随时间的变化情况。这些数据用于趋势分析、异常检测和警报。后端监控系统将数据存储在时间序列数据库中，并在序列末尾添加新值。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Metrics are constructed lazily. You may not see any data for the metric you're looking for until you've performed an action that will create it, like visiting an endpoint."
msgstr "指标的构建是懒散的。你可能不会看到你要找的指标的任何数据，直到你执行了一个会创建它的动作，比如访问一个端点。"

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Naming conventions"
msgstr "命名惯例"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Meter names should use dots to separate segments, `a.name.like.this`.\n"
"Micrometer applies naming conventions to convert registered meter names to match the expectations of backend monitoring systems."
msgstr "仪表名称应使用圆点分段， `a.name.like.this` 。Micrometer 采用命名约定转换注册仪表名称，以符合后台监控系统的期望。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Given the following declaration of a timer: `registry.timer(\"http.server.requests\")`, applied naming conventions will emit the following metrics for different monitoring systems:"
msgstr "给出以下计时器的声明： `registry.timer(\"http.server.requests\")` ，应用命名惯例将为不同的监测系统发出以下指标："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Prometheus: `http_server_requests_duration_seconds`"
msgstr "普罗米修斯： `http_server_requests_duration_seconds` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Atlas: `httpServerRequests`"
msgstr "阿特拉斯： `httpServerRequests` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Graphite: `http.server.requests`"
msgstr "石墨： `http.server.requests` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "InfluxDB: `http_server_requests`"
msgstr "InfluxDB： `http_server_requests` "

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Define dimensions for aggregation"
msgstr "定义用于聚合的维度"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Metrics, single numerical measurements, often have additional data captured with them. This ancillary data is used to group or aggregate metrics for analysis.\n"
"The Micrometer API refers to this dimensional data as tags, but you may it referred to as \"labels\" or \"attributes\" in other documentation sources."
msgstr "指标，即单一的数字测量值，往往还附带有其他数据。这些辅助数据用于对度量指标进行分组或聚合分析。Micrometer API 将这些维度数据称为标签，但在其他文档来源中可能称为 \"标签 \"或 \"属性\"。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Micrometer is built primariliy for backend monitoring systems that support dimensional data (metric names that are enchriched with key/value pairs).\n"
"For heirarchical systems that only support a flat metric name, Micrometer will flatten the set of key/value pairs (sorted by key) and add them to the name."
msgstr "Micrometer 主要针对支持维度数据（用键/值对丰富度量名称）的后端监控系统而设计。对于只支持扁平度量名称的分级系统，Micrometer 将扁平化键/值对（按键排序）并将其添加到名称中。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Tags can be specified when a meter is registered with a `MeterRegistry` or using a xref:meter-filter[Meter Filter]."
msgstr "当电表在 `MeterRegistry` ，或使用 link:#meter-filter[电表过滤器] 注册时，可以指定标签。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "See the Micrometer documentation for additional advice on link:{concepts}#_tag_naming[tag naming]."
msgstr "关于 link:{concepts}#_tag_naming[标签命名] 的其他建议，请参见Micrometer文档。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Each unique combination of metric name and dimension produces a unique time series.\n"
"Using an unbounded set of dimensional data can lead to a \"cardinality explosion\", an exponential increase in the creation of new time series."
msgstr "每个度量名称和维度的独特组合都会产生一个独特的时间序列。使用无限制的维度数据集会导致 \"cardinality explosion\"，即创建新时间序列的指数级增长。"

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Obtain a reference to a MeterRegistry"
msgstr "获取一个对电表注册表的引用"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "To register meters, you need a reference to a `MeterRegistry`, which is configured and maintained by the Micrometer extension."
msgstr "要注册仪表，你需要一个对 `MeterRegistry` ，这个参考是由测微仪扩展配置和维护的。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use one of the following methods to obtain a reference to a `MeterRegistry`:"
msgstr "使用以下方法之一来获得对一个 `MeterRegistry` ："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use CDI Constructor injection:"
msgstr "使用CDI构造器注入："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a `MeterRegistry` member variable and use `@Inject`:"
msgstr "使用一个 `MeterRegistry` 成员变量，并使用 `@Inject` ："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use the global `MeterRegistry`:"
msgstr "使用全局 `MeterRegistry` ："

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Gauges"
msgstr "计量器"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Gauges measure a value that can increase or decrease over time, like the speedometer on a car.\n"
"Gauges can be useful when monitoring the statistics for a cache or collection."
msgstr "测量仪测量的是一个可随时间增减的数值，就像汽车上的速度表一样。在监控缓存或收藏的统计数据时，测量器非常有用。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Gauge values are sampled rather than set;\n"
"there is no record of how the value associated with a gauge may have changed between measurements."
msgstr "量表值是采样值而不是设定值；没有记录与量表相关的值在两次测量之间的变化情况。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Micrometer provides a few mechanisms for creating gauges:"
msgstr "千分表提供了一些创建量具的机制："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Wrap construction of a collection to monitor its size:"
msgstr "包裹构建一个集合，以监测其规模："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new gauge, `list.size`, using the dot-separated convention."
msgstr "创建一个新的仪表， `list.size` ，使用点分隔的惯例。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Associate xref:define-tags[tags] with the gauge.\n"
"Gauge tag values are constant, and must be assigned at construction time."
msgstr "将 xref:define-tags[标签] 与量规关联。量具标签值是恒定的，必须在施工时分配。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Construct the array list whose size should be observed."
msgstr "构建数组列表，其大小应被观察。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a builder to create a Gauge that will call a function:"
msgstr "使用一个构建器来创建一个Gauge，它将调用一个函数："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new gauge called `jvm.threads.peak` that will call `getPeakThreadCount` on `threadBean`, an instance of `ThreadMXBean`"
msgstr "创建一个名为 `jvm.threads.peak` 的新仪表，它将在 `threadBean` 上调用 `getPeakThreadCount` ，一个 `ThreadMXBean` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Define the base unit, see link:{base-units}[BaseUnits.java] for predefined values."
msgstr "定义基本单位，见 link:{base-units}[BaseUnits.java] 的预定义值。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Provide a description of the Gauge"
msgstr "提供测量仪的描述"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Associate xref:define-tags[tags] with the gauge"
msgstr "将 link:#define-tags[标签] 与仪表相关联"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Register the Gauge with the MeterRegistry"
msgstr "在仪表注册处注册仪表"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"See link:{concepts}#_gauges[Gauges] in the Micrometer documentation for more information and examples.\n"
"Of note are two special cases: `TimeGauge` for measuring time, and a `MultiGauge` for reporting several criteria together."
msgstr "有关更多信息和示例，请参阅千分尺文档中的 link:{concepts}#_gauges[量规] 。值得注意的是两种特殊情况：用于测量时间的 `TimeGauge` 和用于同时报告多个标准的 `MultiGauge` 。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Micrometer does not create strong references to the objects it observes by default.\n"
"Depending on the registry, Micrometer either omits gauges that observe\n"
"objects that have been garbage-collected entirely or uses `NaN` (not a number) as the observed value."
msgstr "默认情况下，Micrometer 不会为观察对象创建强引用。根据注册表的不同，Micrometer 要么完全忽略观察已被垃圾回收的对象的仪表，要么使用 `NaN` （非数字）作为观察值。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"When should you use a gauge?\n"
"Only use a gauge when you can't use something else.\n"
"Gauges can be less straight-forward to use than other meters.\n"
"If what you are measuring can be counted (because the value always increments), use a counter instead."
msgstr "何时应该使用量规？只有在无法使用其他仪表时才使用仪表。量规的使用可能不如其他仪表简单。如果您测量的东西可以计数（因为数值总是递增的），请使用计数器。"

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, no-wrap
msgid "Counters"
msgstr "计数器（Counters）"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Counters measure values that only increase.\n"
"Use one of the methods below to create a counter."
msgstr "计数器测量的数值只会增加。使用以下方法之一创建计数器。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a convenience method on the `MeterRegistry`:"
msgstr "在 `MeterRegistry` ，使用一个方便的方法："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`example.prime.number` is the counter name."
msgstr " `example.prime.number` 是计数器的名称。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`type` is a dimensional tag with value `prime`."
msgstr " `type` 是一个维度标签，值为 。 `prime` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `Counter.builder` to provide a description and units:"
msgstr "使用 `Counter.builder` ，提供描述和单位："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new counter called `count.me`"
msgstr "创建一个新的计数器，名为 `count.me` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Define a custom base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "定义一个自定义的基本单位。参见 link:{base-units}[BaseUnits.java] 中的预定义值。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Provide a description for the counter"
msgstr "提供计数器的描述"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Associate xref:define-tags[tags] with the counter"
msgstr "将 link:#define-tags[标签] 与计数器联系起来"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "xref:annotations[Annotate] a method"
msgstr "link:#annotations[注释] 一个方法"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "A CDI interceptor will create and register a counter called `counted.method`"
msgstr "一个CDI拦截器将创建并注册一个叫做 `counted.method` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The interceptor-created counter will have the \"extra\" dimension tag with value \"annotated\""
msgstr "拦截器创建的计数器将有 \"额外 \"维度标签，其值为 \"注释\"。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "See link:{concepts}#_counters[Counters] in the Micrometer documentation for more information and examples, including the less common `FunctionCounter` that can be used to measure the result returned by an always increasing function."
msgstr "更多信息和例子请参见千分尺文档中的 link:{concepts}#_counters[计数器] ，包括不太常见的 `FunctionCounter` ，它可以用来测量一个总是增加的函数所返回的结果。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"When should you use a counter?\n"
"Use a counter if you are doing something that can not be either timed or summarized.\n"
"If you want to understand more about how a value is changing,\n"
"a timer (when the base unit of measurement is time) or a distribution summary might be\n"
"more appropriate."
msgstr "何时应该使用计数器？如果您正在做的事情既不能计时，也不能汇总，那么就应该使用计数器。如果想更多地了解某个值是如何变化的，使用计时器（当基本测量单位是时间时）或分布汇总可能更合适。"

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Summaries and Timers"
msgstr "摘要和计时器"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Timers and distribution summaries in Micrometer are very similar. Both meters record data, and can capture additional histogram or percentile data. While distribution summaries can be use for arbitrary types of data, timers are optimized for measuring time and durations."
msgstr "Micrometer中的计时器和分布汇总表非常相似。两种仪表都能记录数据，并能捕获额外的直方图或百分位数数据。虽然分布汇总表可以用于任意类型的数据，但计时器是为测量时间和持续时间而优化的。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Timers and distribution summaries store at least three values internally:"
msgstr "计时器和分配汇总表在内部至少存储三个值："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "the aggregation of all recorded values as a sum"
msgstr "将所有记录的数值汇总为一个总和"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "the number of values that have been recorded (a counter)"
msgstr "已经记录的数值的数量（一个计数器）。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "the highest value seen within a decaying time window (a gauge)."
msgstr "在一个衰减的时间窗口内看到的最高值（一个仪表）。"

#. type: Title ====
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Create a distribution summary"
msgstr "创建一个分发摘要"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Use a distribution summary to record a value, not time.\n"
"Use one of the following methods to create a distribution summary."
msgstr "使用分布汇总记录数值，而不是时间。使用以下方法之一创建分布汇总。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`bytes.written` is the summary name"
msgstr " `bytes.written` 是摘要名称"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`protocol` is a dimensional tag with value `http`."
msgstr " `protocol` 是一个维度标签，值为 。 `http` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `DistributionSummary.builder` to provide a description and units:"
msgstr "使用 `DistributionSummary.builder` ，提供描述和单位："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new distribution summary called `response.size`"
msgstr "创建一个分发摘要"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `bytes` as a base unit. See link:{base-units}[BaseUnits.java] for predefined values."
msgstr "定义一个自定义的基本单位。参见 link:{base-units}[BaseUnits.java] 中的预定义值。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Provide a description for the distribution summary"
msgstr "提供计数器的描述"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Associate xref:define-tags[tags] with the distribution summary"
msgstr "将 link:#define-tags[标签] 与计数器联系起来"

#. type: Title ====
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Create a timer"
msgstr "创建一个定时器"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Timers measure short-duration latencies and how often they occur. Negative values are not supported, and longer durations could cause an overflow of the total time (Long.MAX_VALUE nanoseconds (292.3 years))."
msgstr "定时器测量短时延迟及其发生频率。不支持负值，更长的持续时间可能导致总时间溢出（Long.MAX_VALUE 纳秒（292.3 年））。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use one of the following methods to construct a timer."
msgstr "使用以下方法之一构建计时器。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`fabric.selection` is the summary name"
msgstr " `bytes.written` 是摘要名称"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "`primary` is a dimensional tag with value `blue`."
msgstr " `type` 是一个维度标签，值为 。 `prime` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use `Timer.builder` to provide a description and units:"
msgstr "使用 `Counter.builder` ，提供描述和单位："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a new timer called `my.timer`"
msgstr "创建一个新的计数器，名为 `count.me` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Timers measure time, and will convert it into the units required by the monitoring backend"
msgstr "计时器测量时间，并将其转换为监控后台所需的单位"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Associate xref:define-tags[tags] with the timer"
msgstr "将 link:#define-tags[标签] 与计数器联系起来"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "A CDI interceptor will create and register a timer called `call`"
msgstr "一个CDI拦截器将创建并注册一个叫做 `counted.method` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The interceptor-created timer will have the \"region\" dimension tag with value \"test\""
msgstr "拦截器创建的计数器将有 \"额外 \"维度标签，其值为 \"注释\"。"

#. type: Title ====
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Measure durations with Timers"
msgstr "用定时器测量持续时间"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Micrometer provides the following convenience mechanisms for recording durations."
msgstr "千分尺为记录持续时间提供了以下便利机制。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Wrap the invocation of a `Runnable`:"
msgstr "对 `Runnable` 的调用进行打包："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Wrap the invocation of a `Callable`:"
msgstr "对 `Callable` 的调用进行打包："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a wrapped `Runnable` for repeated invocation:"
msgstr "创建一个包装后的 `Runnable` ，以便重复调用："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Create a wrapped `Callable` for repeated invocation:"
msgstr "创建一个包装后的 `Callable` ，以便重复调用："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a `Sample` for more complex code paths:"
msgstr "对于更复杂的代码路径，请使用 `Sample` ："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "We create a sample, which records the start of the timer."
msgstr "我们创建一个样本，记录计时器的启动时间。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The sample can be passed along as context"
msgstr "样本可作为上下文传递"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "We can choose the timer when the sample is stopped. This example uses a response status as a tag identifying the timer, which won't be known until processing is complete."
msgstr "我们可以选择停止采样时的计时器。本示例使用响应状态作为标识计时器的标签，在处理完成前无法得知。"

#. type: Title ====
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Histograms and percentiles"
msgstr "柱状图和百分位数"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"Both timers and distribution summaries can be configured to emit additional statistics, like histogram data, precomputed percentiles, or service level objective (SLO) boundaries.\n"
"See link:{concepts}#_timers[Timers] and link:{concepts}#_distribution_summaries[Distribution Summaries] in the Micrometer documentation for more information and examples, including memory footprint estimation for both types."
msgstr "定时器和分布汇总都可以配置为发射额外的统计数据，如直方图数据、预计算的百分位数或服务级别目标 (SLO) 边界。更多信息和示例，包括两种类型的内存占用估算，请参阅 Micrometer 文档中的 link:{concepts}#_timers[定时器] 和 link:{concepts}#_distribution_summaries[分布] 汇总。"

#. type: delimited block =
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The count, sum, and histogram data associated with timers and distribution summaries can be re-aggregated across dimensions (or across a series of instances)."
msgstr "与计时器和分布汇总相关的计数、总和和直方图数据可跨维度（或跨一系列实例）重新分类。"

#. type: delimited block =
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Precomputed percentile values can not. Percentiles are unique to each dataset (the 90th percentile of this collection of measurements)."
msgstr "预计算的百分位值则不能。百分位数对每个数据集都是唯一的（该测量集合的第 90 个百分位数）。"

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Automatically generated metrics"
msgstr "自动生成的指标"

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"The Micrometer extension automatically times HTTP server requests. Following Prometheus naming conventions for\n"
"timers, look for `http_server_requests_seconds_count`, `http_server_requests_seconds_sum`, and\n"
"`http_server_requests_seconds_max`. Dimensional labels have been added for the requested uri, the HTTP method\n"
"(GET, POST, etc.), the status code (200, 302, 404, etc.), and a more general outcome field."
msgstr "Micrometer扩展会自动为HTTP服务器请求计时。按照Prometheus对timers的命名惯例，查找 `http_server_requests_seconds_count` , `http_server_requests_seconds_sum` , 和 `http_server_requests_seconds_max` 。维度标签已经被添加到请求的URI、HTTP方法（GET、POST等）、状态代码（200、302、404等）和一个更通用的结果字段。"

#. type: Block title
#: _versions/main/guides/telemetry-micrometer.adoc
#, no-wrap
msgid "Ignoring endpoints"
msgstr "忽略节点"

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"You can disable measurement of HTTP endpoints using the `quarkus.micrometer.binder.http-server.ignore-patterns`\n"
"property.\n"
"This property accepts a comma-separated list of simple regex match patterns identifying URI paths that should\n"
"be ignored.\n"
"For example, setting `quarkus.micrometer.binder.http-server.ignore-patterns=/example/prime/[0-9]+` will\n"
"ignore a request to `http://localhost:8080/example/prime/7919`.\n"
"A request to `http://localhost:8080/example/gauge/7919`\n"
"would still be measured."
msgstr "您可以使用 `quarkus.micrometer.binder.http-server.ignore-patterns` 属性禁用对HTTP节点的测量。这个属性接受一个用逗号分隔的简单正则表达式匹配的列表来识别应被忽略的URI路径。例如， `quarkus.micrometer.binder.http-server.ignore-patterns=/example/prime/[0-9]+` 会忽略对 `<a href=\"http://localhost:8080/example/prime/7919\" class=\"bare\">http://localhost:8080/example/prime/7919</a>` 请求的监测。而一个对 `<a href=\"http://localhost:8080/example/gauge/7919\" class=\"bare\">http://localhost:8080/example/gauge/7919</a>` 的请求仍会被监测。"

#. type: Block title
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "URI templates"
msgstr "URI 模板"

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"The micrometer extension will make a best effort at representing URIs containing path parameters in templated form.\n"
"Using examples from above, a request to `http://localhost:8080/example/prime/7919` should appear as an attribute of\n"
"`http_server_requests_seconds_*` metrics with a value of `uri=/example/prime/{number}`."
msgstr "Micrometer扩展将尽最大努力以模板的形式表示包含路径参数的URI。使用上面的例子，一个对 `<a href=\"http://localhost:8080/example/prime/7919\" class=\"bare\">http://localhost:8080/example/prime/7919</a>` 的请求应该作为 `http_server_requests_seconds_*` metrics 的一个属性出现，其值为 `uri=/example/prime/{number}` 。"

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"Use the `quarkus.micrometer.binder.http-server.match-patterns` property if the correct URL can not be determined.\n"
"This property accepts a comma-separated list defining an association between a simple regex match pattern and a replacement\n"
"string.\n"
"For example, setting\n"
"`quarkus.micrometer.binder.http-server.match-patterns=/example/prime/[0-9]+=/example/{jellybeans}` would use the value\n"
"`/example/{jellybeans}` for the uri attribute any time the requested uri matches `/example/prime/[0-9]+`."
msgstr "如果不能确定正确的URL，请使用 `quarkus.micrometer.binder.http-server.match-patterns` 属性。这个属性使用一个逗号分隔的列表来定义一个简单的正则匹配模式和对应的替换字符串之间的关联。例如，设置成 `quarkus.micrometer.binder.http-server.match-patterns=/example/prime/[0-9]+=/example/{jellybeans}` ，则可以请求的URI与 `/example/prime/[0-9]+` 匹配时为URI属性使用 `/example/{jellybeans}` 的值。"

#. type: Block title
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Exported metrics format"
msgstr "导出的度量衡格式"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"By default, the  metrics are exported using the Prometheus format `application/openmetrics-text`,\n"
"you can revert to the former format by specifying the `Accept` request header to `text/plain` (`curl -H \"Accept: text/plain\" localhost:8080/q/metrics/`)."
msgstr "默认情况下，度量值使用 Prometheus 格式 `application/openmetrics-text` 导出，您可以通过将 `Accept` 请求头指定为 `text/plain` ( `curl -H \"Accept: text/plain\" localhost:8080/q/metrics/` )，恢复到以前的格式。"

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Customizing Micrometer"
msgstr "千分尺"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Quarkus provides a variety of way to customize Micrometer."
msgstr "Quarkus 提供了多种定制 Micrometer 的方法。"

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Use `MeterFilter` to customize emitted tags and metrics"
msgstr "使用 `MeterFilter` 来定制发射的标签和指标"

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer uses `MeterFilter` instances to customize the metrics emitted by `MeterRegistry` instances.\n"
"The Micrometer extension will detect `MeterFilter` CDI beans and use them when initializing `MeterRegistry`\n"
"instances."
msgstr "Micrometer使用 `MeterFilter` 实例来定制 `MeterRegistry` 实例发出的metrics。Micrometer扩展将检测 `MeterFilter` CDI beans，并在初始化 `MeterRegistry` 实例时使用它们。"

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"In this example, a singleton CDI bean will produce two different `MeterFilter` beans.\n"
"One will be applied only to\n"
"Prometheus `MeterRegistry` instances (using the `@MeterFilterConstraint` qualifier), and another will be applied\n"
"to all `MeterRegistry` instances.\n"
"An application configuration property is also injected and used as a tag value.\n"
"Additional examples of MeterFilters can be found in the\n"
"link:https://micrometer.io/docs/concepts[official documentation]."
msgstr "在这个例子中，一个CDI bean单例将产生两个不同的 `MeterFilter` beans。一个将只用于Prometheus `MeterRegistry` 实例（使用 `@MeterFilterConstraint` 修饰符），另一个将用于所有 `MeterRegistry` 实例。一个应用配置属性也被注入并作为标签值使用。MeterFilters的其他例子可以在 link:https://micrometer.io/docs/concepts[官方文档] 中找到。"

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Use `HttpServerMetricsTagsContributor` for server HTTP requests"
msgstr "对服务器 HTTP 请求使用 `HttpServerMetricsTagsContributor` "

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "By providing CDI beans that implement `io.quarkus.micrometer.runtime.HttpServerMetricsTagsContributor`, user code can contribute arbitrary tags based on the details of HTTP request"
msgstr "通过提供实现 `io.quarkus.micrometer.runtime.HttpServerMetricsTagsContributor` 的 CDI Bean，用户代码可以根据 HTTP 请求的细节贡献任意标记"

#. type: Title ===
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Use `MeterRegistryCustomizer` for arbitrary customizations to meter registries"
msgstr "使用 `MeterRegistryCustomizer` 对仪表注册表进行任意定制"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"By providing CDI beans that implement `io.quarkus.micrometer.runtime.MeterRegistryCustomizer` user code has the change to change the configuration of any `MeterRegistry` that has been activated.\n"
"Unless an implementation is annotated with `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint`, the customization applies to all `MeterRegistry` instances."
msgstr "通过提供实现 `io.quarkus.micrometer.runtime.MeterRegistryCustomizer` 的 CDI Bean，用户代码可以更改已激活的任何 `MeterRegistry` 的配置。除非某个实现注释为 `@io.quarkus.micrometer.runtime.MeterRegistryCustomizerConstraint` ，否则定制将适用于所有 `MeterRegistry` 实例。"

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, no-wrap
msgid "Does Micrometer support annotations?"
msgstr "Micrometer支持注解吗？"

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"Micrometer does define two annotations, `@Counted` and `@Timed`, that can be added to methods.\n"
"The `@Timed` annotation will wrap the execution of a method and will emit the following tags\n"
"in addition to any tags defined on the annotation itself:\n"
"class, method, and exception (either \"none\" or the simple class name of a detected exception)."
msgstr "Micrometer确实也定义了两个注解， `@Counted` 和 `@Timed` ，它们可以被添加到方法中。 `@Timed` 注解将修饰一个方法的执行。除了注解本身定义的标签外，还将添加以下标签：类名、方法名和异常（\"none \"或检测到的异常的简单类名）。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
msgid "Parameters to `@Counted` and `@Timed` can be annotated with `@MeterTag` to dynamically assign meaningful tag values."
msgstr ""

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"`MeterTag.resolver` can be used to extract a tag from a method parameter, by creating a bean\n"
"implementing `io.micrometer.common.annotation.ValueResolver` and referring to this class: `@MeterTag(resolver=CustomResolver.class)"
msgstr ""

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"`MeterTag.expression` is also supported, but you have to implement the evaluation of the expression\n"
"by creating a bean implementing `io.micrometer.common.annotation.ValueExpressionResolver` that can evaluate expressions."
msgstr ""

#: _versions/main/guides/telemetry-micrometer.adoc
msgid ""
"Provided tag values MUST BE of LOW-CARDINALITY.\n"
"High-cardinality values can lead to performance and storage issues in your metrics backend (a \"cardinality explosion\").\n"
"Tag values should not use end-user data, since those could be high-cardinality."
msgstr ""

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
msgid "Many methods, like REST endpoint methods or Vert.x Routes, are counted and timed by the micrometer extension out of the box."
msgstr ""

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Support for the MicroProfile Metrics API"
msgstr "支持MicroProfile Metrics API"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"If you use the MicroProfile Metrics API in your application,\n"
"the Micrometer extension will create an adaptive layer to map those metrics into the Micrometer registry.\n"
"Note that naming conventions between the two systems is different, so the metrics that are emitted when using MP Metrics with Micrometer will change."
msgstr "如果您在应用程序中使用 MicroProfile Metrics API，Micrometer 扩展将创建一个自适应层，将这些度量映射到 Micrometer 注册表中。请注意，两个系统之间的命名约定不同，因此在使用 MP Metrics 和 Micrometer 时发出的度量值会发生变化。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Use a `MeterFilter` to remap names or tags according to your conventions."
msgstr "使用 `MeterFilter` ，根据您的习惯重新映射名称或标记。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Ensure the following dependency is present if you require the MicroProfile Metrics API:"
msgstr "如果需要 MicroProfile Metrics API，请确保存在以下依赖关系："

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "The MP Metrics API compatibility layer may be moved to a different extension in the future."
msgstr "未来，MP Metrics API 兼容性层可能会转移到其他扩展中。"

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Management interface"
msgstr "管理界面"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "By default, the metrics are exposed on the main HTTP server."
msgstr "默认情况下，度量指标在主 HTTP 服务器上显示。"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"You can expose them on a separate network interface and port by setting `quarkus.management.enabled=true` in your application configuration.\n"
"Note that this property is a build-time property.\n"
"The value cannot be overridden at runtime."
msgstr "您可以通过在应用程序配置中设置 `quarkus.management.enabled=true` ，在单独的网络接口和端口上公开它们。请注意，该属性是构建时属性。运行时无法覆盖该值。"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "If you enable the management interface without customizing the management network interface and port, the metrics are exposed under: `http://0.0.0.0:9000/q/metrics`."
msgstr "如果启用了管理界面，但没有自定义管理网络接口和端口，则会在............： `http://0.0.0.0:9000/q/metrics` ."

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "You can configure the path of each exposed format using:"
msgstr "您可以使用以下命令配置每种暴露格式的路径："

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid ""
"With such a configuration, the json metrics will be available from `http://0.0.0.0:9000/q/metrics/json`.\n"
"The prometheus metrics will be available from `http://0.0.0.0:9000/q/metrics/prometheus`."
msgstr "有了这样的配置，json 指标就可以从 `http://0.0.0.0:9000/q/metrics/json` .prometheus 指标可从 `http://0.0.0.0:9000/q/metrics/prometheus` ."

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Refer to the xref:./management-interface-reference.adoc[management interface reference] for more information."
msgstr "更多信息请参考 link:./management-interface-reference.html[管理界面参考] 。"

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy, no-wrap
msgid "Quarkus core extensions instrumented with Micrometer"
msgstr "使用千分尺测量的 Quarkus 核心扩展装置"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-agroal[`quarkus-agroal`]"
msgstr "link:https://quarkus.io/extensions/io.quarkus/quarkus-agroal[quarkus-agroal]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/cache[`quarkus-cache`]"
msgstr "link:https://quarkus.io/guides/cache[quarkus-cache]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-caffeine[`quarkus-caffeine`]"
msgstr "link:https://quarkus.io/extensions/io.quarkus/quarkus-caffeine[quarkus-caffeine]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/smallrye-fault-tolerance[`quarkus-smallrye-fault-tolerance`]"
msgstr "link:https://quarkus.io/guides/smallrye-fault-tolerance[quarkus-smallrye-fault-tolerance]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/grpc-getting-started[`quarkus-grpc`]"
msgstr "link:https://quarkus.io/guides/grpc-getting-started[quarkus-grpc]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/hibernate-orm[`quarkus-hibernate-orm`]"
msgstr "link:https://quarkus.io/guides/hibernate-orm[quarkus-hibernate-orm]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-jaxrs-client-reactive[`quarkus-jaxrs-client-reactive`]"
msgstr "link:https://quarkus.io/extensions/io.quarkus/quarkus-jaxrs-client-reactive[quarkus-jaxrs-client-reactive]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/deploying-to-kubernetes[`quarkus-kubernetes`]"
msgstr "link:https://quarkus.io/guides/deploying-to-kubernetes[quarkus-kubernetes]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/logging[`jboss-logging`] (logging API in Quarkus)"
msgstr "link:https://quarkus.io/guides/logging[jboss-logging] (Quarkus 中的日志 API）"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/mongodb[`quarkus-mongodb-client`]"
msgstr "link:https://quarkus.io/guides/mongodb[quarkus-mongodb-client]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-netty[`quarkus-netty`]"
msgstr "link:https://quarkus.io/extensions/io.quarkus/quarkus-netty[quarkus-netty]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/redis[`quarkus-redis-client`]"
msgstr "link:https://quarkus.io/guides/redis[quarkus-redis-client]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/rest-client[`quarkus-rest-client`]"
msgstr "link:https://quarkus.io/guides/rest-client[quarkus-rest-client]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/resteasy[`quarkus-resteasy-jackson`]"
msgstr "link:https://quarkus.io/guides/resteasy[quarkus-resteasy-jackson]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/resteasy-reactive[`quarkus-resteasy-reactive`]"
msgstr "link:https://quarkus.io/guides/resteasy-reactive[quarkus-resteasy-reactive]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/scheduler[`quarkus-scheduler`]"
msgstr "link:https://quarkus.io/guides/scheduler[quarkus-scheduler]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/smallrye-graphql[`quarkus-smallrye-graphql`]"
msgstr "link:https://quarkus.io/guides/smallrye-graphql[quarkus-smallrye-graphql]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/extensions/io.quarkus/quarkus-smallrye-reactive-messaging[`quarkus-smallrye-reactive-messaging`]"
msgstr "link:https://quarkus.io/extensions/io.quarkus/quarkus-smallrye-reactive-messaging[quarkus-smallrye-reactive-messaging]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "AMQP 1.0"
msgstr "AMQP 1.0"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "RabbitMQ"
msgstr "RabbitMQ"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Kafka"
msgstr "卡夫卡"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Pulsar"
msgstr "脉冲星"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "JMS"
msgstr "JMS"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "MQTT"
msgstr "MQTT"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "Camel Messaging"
msgstr "骆驼信息"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/stork-reference[`quarkus-smallrye-stork`]"
msgstr "link:https://quarkus.io/guides/stork-reference[quarkus-smallrye-stork]"

#. type: Plain text
#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "https://quarkus.io/guides/vertx[`quarkus-vertx`] (http requests)"
msgstr "link:https://quarkus.io/guides/vertx[quarkus-vertx] (http 请求）"

#. type: Title ==
#: _versions/main/guides/telemetry-micrometer.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/main/guides/telemetry-micrometer.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
