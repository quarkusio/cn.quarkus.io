# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-31 02:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Quarkus Virtual Thread support with Reactive Messaging"
msgstr "利用反应式消息传递支持 Quarkus 虚拟线程"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "This guide explains how to benefit from Java virtual threads when writing message processing applications in Quarkus."
msgstr "本指南解释了在Quarkus中编写REST服务时如何从Java 19虚拟线程中获益。"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"This guide focuses on using virtual threads with Reactive Messaging extensions.\n"
"Please refer to xref:virtual-threads.adoc[Writing simpler reactive REST services with Quarkus Virtual Thread support]\n"
"to read more about Java virtual threads in general and the Quarkus Virtual Thread support for REST services."
msgstr "本指南侧重于将虚拟线程用于反应式消息传递扩展。请参阅《 xref:virtual-threads.adoc[利用 Quarkus 虚拟线程支持编写更简单的反应式 REST 服务》（Writing simpler reactive REST services with] Quarkus Virtual Thread xref:virtual-threads.adoc[support] ），了解更多有关 Java 虚拟线程的一般信息以及 Quarkus 虚拟线程对 REST 服务的支持。"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"For reference guides of specific Reactive Messaging extensions see xref:kafka.adoc[Apache Kafka Reference Guide],\n"
"xref:amqp-reference.adoc[Reactive Messaging AMQP 1.0 Connector], xref:rabbitmq-reference.adoc[Reactive Messaging RabbitMQ Connector] or xref:pulsar.adoc[Apache Pulsar Reference Guide]."
msgstr "有关特定 Reactive Messaging 扩展的参考指南，请参阅《 xref:kafka.adoc[Apache Kafka 参考指南] 》、《Reactive Messaging xref:amqp-reference.adoc[AMQP 1.0 连接器] 》、《R xref:rabbitmq-reference.adoc[eactive Messaging RabbitMQ 连接器] 》或《 xref:pulsar.adoc[Apache Pulsar 参考指南》] 。"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"By default, Reactive Messaging invokes message processing methods on an event-loop thread.\n"
"See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic.\n"
"But, you sometimes need to combine Reactive Messaging with blocking processing such as calling external services or database operations.\n"
"For this, you can use the link:{rm_blocking_annotation}[@Blocking] annotation indicating that the processing is _blocking_ and should be run on a worker thread.\n"
"You can read more on the blocking processing in link:{rm_blocking_docs}[SmallRye Reactive Messaging documentation]."
msgstr "默认情况下，Reactive Messaging 会在事件循环线程上调用消息处理方法。有关此主题的更多详情，请参阅 xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture 文档] 。但是，有时你需要将 Reactive Messaging 与阻塞处理（如调用外部服务或数据库操作）结合起来。为此，你可以使用 link:{rm_blocking_annotation}[@Blocking] 注解来表示处理是 _阻塞_ 的，应该在工作线程上运行。有关阻塞处理的更多信息，请参阅 link:{rm_blocking_docs}[SmallRye Reactive Messaging 文档] 。"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"The idea behind Quarkus Virtual Thread support for Reactive Messaging is to offload the message processing on virtual threads,\n"
"instead of running it on an event-loop thread or a worker thread."
msgstr "Quarkus 虚拟线程支持反应式消息传递的理念是在虚拟线程上卸载消息处理，而不是在事件循环线程或工作线程上运行。"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"To enable virtual thread support on a message consumer method, simply add the link:{runonvthread}[@RunOnVirtualThread] annotation to the method.\n"
"If the JDK is compatible (Java 19 or later versions, we recommend 21+) then each incoming message will be offloaded to a new virtual thread.\n"
"It will then be possible to perform blocking operations without blocking the platform thread upon which the virtual thread is mounted."
msgstr "要在消息消费者方法中启用虚拟线程支持，只需在方法中添加 link:{runonvthread}[@RunOnVirtualThread] 注解即可。如果 JDK 兼容（Java 19 或更高版本，我们推荐 21+），那么每条传入的消息都将被卸载到一个新的虚拟线程。这样就可以执行阻塞操作，而不会阻塞虚拟线程所在的平台线程。"

#. type: Title ==
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Example using the Reactive Messaging Kafka extension"
msgstr "使用 Reactive Messaging Kafka 扩展的示例"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"Let's see an example of how to process Kafka records on virtual threads.\n"
"First, make sure to have a reactive messaging extension dependency to your build file:"
msgstr "让我们看看如何在虚拟线程上处理 Kafka 记录的示例。首先，确保在构建文件中加入反应式消息传递扩展依赖："

#. type: Block title
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "You also need to make sure that you are using Java 19 or later (we recommend 21+), this can be enforced in your `pom.xml` file with the following:"
msgstr "您还需要确保您使用的是 Java 19 或更高版本（我们建议使用 21+ 版本），这可以在 `pom.xml` 文件中通过以下方式实现："

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "Run the application with:"
msgstr "使用以下命令运行该应用程序:"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "or to use the Quarkus Dev mode, insert the following to the `quarkus-maven-plugin` configuration:"
msgstr "或要使用 Quarkus Dev 模式，请在 `quarkus-maven-plugin` 配置中插入以下内容："

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"Then you can start using the annotation `@RunOnVirtualThread` on your consumer methods also annotated with `@Incoming`.\n"
"In the following example we'll use the xref:rest-client-reactive.adoc[RESTEasy Reactive REST Client] to make a blocking call to a REST endpoint:"
msgstr "然后，你就可以开始在你的消费者方法上使用注解 `@RunOnVirtualThread` ，这些方法也注解为 `@Incoming` 。在下面的示例中，我们将使用 xref:rest-client-reactive.adoc[RESTEasy Reactive REST Client] 对 REST 端点进行阻塞调用："

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@RunOnVirtualThread` annotation on the `@Incoming` method ensures that the method will be called on a virtual thread."
msgstr "`@RunOnVirtualThread` `@Incoming` 注释确保该方法将在虚拟线程上调用。"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "the REST client stub is injected with the `@RestClient` annotation."
msgstr "`@RestClient` 注解注入 REST 客户端存根。"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`alert` method blocks the virtual thread until the REST call returns."
msgstr "`alert` 方法会阻塞虚拟线程，直到 REST 调用返回。"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "This `@Outgoing` method generates random prices and writes them a Kafka topic to be consumed back by the application."
msgstr "`@Outgoing` 方法会生成随机价格，并将其写入 Kafka 主题，供应用程序使用。"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"Note that by default Reactive Messaging message processing happens sequentially, preserving the order of messages.\n"
"In the same way, `@Blocking(ordered = false)` annotation changes this behaviour,\n"
"using `@RunOnVirtualThread` enforces concurrent message processing without preserving the order."
msgstr "请注意，默认情况下，Reactive Messaging 的消息处理是按顺序进行的，保留了消息的顺序。同样， `@Blocking(ordered = false)` 注释会改变这种行为，使用 `@RunOnVirtualThread` 会强制执行并发消息处理而不保留顺序。"

#. type: Title ==
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Use the @RunOnVirtualThread annotation"
msgstr "使用 @RunOnVirtualThread 注解"

#. type: Title ===
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Methods signatures eligible to @RunOnVirtualThread"
msgstr "符合 @RunOnVirtualThread 条件的方法签名"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"Only method can be annotated with `@Blocking` can use `@RunOnVirtualThreads`.\n"
"The eligible method signatures are:"
msgstr "只有注释为 `@Blocking` 的方法才能使用 `@RunOnVirtualThreads` 。符合条件的方法签名有"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Outgoing(\"channel-out\") O generator()`"
msgstr "`@Outgoing(\"channel-out\") O generator()`"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Outgoing(\"channel-out\")  Message<O> generator()`"
msgstr "`@Outgoing(\"channel-out\") Message<O> generator()`"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") O process(I in)`"
msgstr "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") O process(I in)`"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") Message<O> process(I in)`"
msgstr "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") Message<O> process(I in)`"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") void consume(I in)`"
msgstr "`@Incoming(\"channel-in\") void consume(I in)`"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") Uni<Void> consume(I in)`"
msgstr "`@Incoming(\"channel-in\") Uni<Void> consume(I in)`"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") Uni<Void> consume(Message<I> msg)`"
msgstr "`@Incoming(\"channel-in\") Uni<Void> consume(Message<I> msg)`"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") CompletionStage<Void> consume(I in)`"
msgstr "`@Incoming(\"channel-in\") CompletionStage<Void> consume(I in)`"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "`@Incoming(\"channel-in\") CompletionStage<Void> consume(Message<I> msg)`"
msgstr "`@Incoming(\"channel-in\") CompletionStage<Void> consume(Message<I> msg)`"

#. type: Title ===
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Use of @RunOnVirtualThread annotation on methods and classes"
msgstr "在方法和类上使用 @RunOnVirtualThread 注解"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "You can use the `@RunOnVirtualThread` annotation:"
msgstr "您可以使用 `@RunOnVirtualThread` 注释："

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "directly on a reactive messaging method - this method will be considered _blocking_ and executed on a virtual thread"
msgstr "直接在反应式消息传递方法上执行 - 该方法将被视为 _阻塞_ 方法，并在虚拟线程上执行"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "on the class containing reactive messaging methods - the methods from this class annotation with `@Blocking` will be executed on virtual thread, except if the annotation defines a pool name configured to use regular worker threads"
msgstr "`@Blocking` 的方法将在虚拟线程上执行，除非该注解定义了一个配置为使用普通工作线程的池名称"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "For example, you can use `@RunOnVirtualThread` directly on the method:"
msgstr "例如，您可以直接在方法上使用 `@RunOnVirtualThread` ："

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "Alternatively, you can use `@RunOnVirtualThread` on the class itself:"
msgstr "或者，您也可以在类本身上使用 `@RunOnVirtualThread` ："

#. type: Title ==
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Control the maximum concurrency"
msgstr "控制最大并发量"

#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid ""
"In order to leverage the lightweight nature of virtual threads, the default maximum concurrency for methods annotated with `@RunOnVirtualThread` is 1024.\n"
"As opposed to platform threads, virtual threads are not pooled and created per message. Therefore the maximum concurrency applies separately to all `@RunOnVirtualThread` methods."
msgstr "为了充分利用虚拟线程的轻量级特性，注释为 `@RunOnVirtualThread` 的方法的默认最大并发量为 1024。与平台线程不同，虚拟线程不会被池化，也不会按消息创建。因此，最大并发量分别适用于所有 `@RunOnVirtualThread` 方法。"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "There are two ways to customize the concurrency level:"
msgstr "自定义并发级别有两种方法："

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "The `@RunOnVirtualThread` annotation can be used together with the link:{rm_blocking_annotation}[@Blocking] annotation to specify a worker name."
msgstr "`@RunOnVirtualThread` 注解可与 link:{rm_blocking_annotation}[@Blocking] 注解一起使用，以指定 Worker 名称。"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "Then, for example, to set the maximum concurrency of this method down to 30, set using the config property `smallrye.messaging.worker.my-worker.max-concurrency=30`."
msgstr "例如，如果要将此方法的最大并发数设为 30，可使用配置属性 `smallrye.messaging.worker.my-worker.max-concurrency=30` 进行设置。"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
#, fuzzy
msgid "For every `@RunOnVirtualThread` method that is not configured with a worker name, you can use the config property `smallrye.messaging.worker.<virtual-thread>.max-concurrency`."
msgstr "对于每个未配置 Worker 名称的 `@RunOnVirtualThread` 方法，可以使用配置属性 `smallrye.messaging.worker.<virtual-thread>.max-concurrency` 。"
