# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-31 02:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "Quarkus Virtual Thread support with Reactive Messaging"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "This guide explains how to benefit from Java virtual threads when writing message processing applications in Quarkus."
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"This guide focuses on using virtual threads with Reactive Messaging extensions.\n"
"Please refer to xref:virtual-threads.adoc[Writing simpler reactive REST services with Quarkus Virtual Thread support]\n"
"to read more about Java virtual threads in general and the Quarkus Virtual Thread support for REST services."
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"For reference guides of specific Reactive Messaging extensions see xref:kafka.adoc[Apache Kafka Reference Guide],\n"
"xref:amqp-reference.adoc[Reactive Messaging AMQP 1.0 Connector], xref:rabbitmq-reference.adoc[Reactive Messaging RabbitMQ Connector] or xref:pulsar.adoc[Apache Pulsar Reference Guide]."
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"By default, Reactive Messaging invokes message processing methods on an event-loop thread.\n"
"See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic.\n"
"But, you sometimes need to combine Reactive Messaging with blocking processing such as calling external services or database operations.\n"
"For this, you can use the link:{rm_blocking_annotation}[@Blocking] annotation indicating that the processing is _blocking_ and should be run on a worker thread.\n"
"You can read more on the blocking processing in link:{rm_blocking_docs}[SmallRye Reactive Messaging documentation]."
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"The idea behind Quarkus Virtual Thread support for Reactive Messaging is to offload the message processing on virtual threads,\n"
"instead of running it on an event-loop thread or a worker thread."
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"To enable virtual thread support on a message consumer method, simply add the link:{runonvthread}[@RunOnVirtualThread] annotation to the method.\n"
"If the JDK is compatible (Java 19 or later versions, we recommend 21+) then each incoming message will be offloaded to a new virtual thread.\n"
"It will then be possible to perform blocking operations without blocking the platform thread upon which the virtual thread is mounted."
msgstr ""

#. type: Title ==
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "Example using the Reactive Messaging Kafka extension"
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"Let's see an example of how to process Kafka records on virtual threads.\n"
"First, make sure to have a reactive messaging extension dependency to your build file:"
msgstr ""

#. type: Block title
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "You also need to make sure that you are using Java 19 or later (we recommend 21+), this can be enforced in your `pom.xml` file with the following:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "Run the application with:"
msgstr "使用以下命令运行该应用程序:"

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "or to use the Quarkus Dev mode, insert the following to the `quarkus-maven-plugin` configuration:"
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"Then you can start using the annotation `@RunOnVirtualThread` on your consumer methods also annotated with `@Incoming`.\n"
"In the following example we'll use the xref:rest-client-reactive.adoc[RESTEasy Reactive REST Client] to make a blocking call to a REST endpoint:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@RunOnVirtualThread` annotation on the `@Incoming` method ensures that the method will be called on a virtual thread."
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "the REST client stub is injected with the `@RestClient` annotation."
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`alert` method blocks the virtual thread until the REST call returns."
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "This `@Outgoing` method generates random prices and writes them a Kafka topic to be consumed back by the application."
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"Note that by default Reactive Messaging message processing happens sequentially, preserving the order of messages.\n"
"In the same way, `@Blocking(ordered = false)` annotation changes this behaviour,\n"
"using `@RunOnVirtualThread` enforces concurrent message processing without preserving the order."
msgstr ""

#. type: Title ==
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "Use the @RunOnVirtualThread annotation"
msgstr ""

#. type: Title ===
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "Methods signatures eligible to @RunOnVirtualThread"
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"Only method can be annotated with `@Blocking` can use `@RunOnVirtualThreads`.\n"
"The eligible method signatures are:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Outgoing(\"channel-out\") O generator()`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Outgoing(\"channel-out\")  Message<O> generator()`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") O process(I in)`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") @Outgoing(\"channel-out\") Message<O> process(I in)`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") void consume(I in)`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") Uni<Void> consume(I in)`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") Uni<Void> consume(Message<I> msg)`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") CompletionStage<Void> consume(I in)`"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "`@Incoming(\"channel-in\") CompletionStage<Void> consume(Message<I> msg)`"
msgstr ""

#. type: Title ===
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "Use of @RunOnVirtualThread annotation on methods and classes"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "You can use the `@RunOnVirtualThread` annotation:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "directly on a reactive messaging method - this method will be considered _blocking_ and executed on a virtual thread"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "on the class containing reactive messaging methods - the methods from this class annotation with `@Blocking` will be executed on virtual thread, except if the annotation defines a pool name configured to use regular worker threads"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "For example, you can use `@RunOnVirtualThread` directly on the method:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "Alternatively, you can use `@RunOnVirtualThread` on the class itself:"
msgstr ""

#. type: Title ==
#: _versions/main/guides/messaging-virtual-threads.adoc
#, no-wrap
msgid "Control the maximum concurrency"
msgstr ""

#: _versions/main/guides/messaging-virtual-threads.adoc
msgid ""
"In order to leverage the lightweight nature of virtual threads, the default maximum concurrency for methods annotated with `@RunOnVirtualThread` is 1024.\n"
"As opposed to platform threads, virtual threads are not pooled and created per message. Therefore the maximum concurrency applies separately to all `@RunOnVirtualThread` methods."
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "There are two ways to customize the concurrency level:"
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "The `@RunOnVirtualThread` annotation can be used together with the link:{rm_blocking_annotation}[@Blocking] annotation to specify a worker name."
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "Then, for example, to set the maximum concurrency of this method down to 30, set using the config property `smallrye.messaging.worker.my-worker.max-concurrency=30`."
msgstr ""

#. type: Plain text
#: _versions/main/guides/messaging-virtual-threads.adoc
msgid "For every `@RunOnVirtualThread` method that is not configured with a worker name, you can use the config property `smallrye.messaging.worker.<virtual-thread>.max-concurrency`."
msgstr ""
