# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-10-12 02:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy, no-wrap
msgid "Dev Services for Kubernetes"
msgstr "Kubernetes的开发服务"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid ""
"Dev Services for Kubernetes automatically starts a Kubernetes API server (plus the required etcd) in dev mode and when running tests. So you don't have to start it manually.\n"
"The application is configured automatically."
msgstr "在开发模式下和运行测试时，Dev Services for Kubernetes 会自动启动 Kubernetes API 服务器（加上所需的 etcd）。因此，你不必手动启动它。应用程序会自动配置。"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "The following https://github.com/dajudge/kindcontainer?tab=readme-ov-file#container-flavors[testcontainers] are supported: https://kind.sigs.k8s.io/[kind], https://k3s.io/[k3s] or api only(default)"
msgstr "支持以下 link:https://github.com/dajudge/kindcontainer?tab=readme-ov-file#container-flavors[测试容器] ： link:https://k3s.io/[kind] 、 link:https://k3s.io/[k3s] 或仅 api（默认）。"

#. type: Title ==
#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy, no-wrap
msgid "Enabling / Disabling Dev Services for Kubernetes"
msgstr "启用/禁用Kubernetes的开发服务"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "To use the Kubernetes Dev Service, you simply need to add the `quarkus-kubernetes-client` extension to your project:"
msgstr "要使用 Kubernetes Dev Service，只需在项目中添加 `quarkus-kubernetes-client` 扩展："

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "A Kubernetes API server is automatically started in dev or test modes whenever the `quarkus-kubernetes-client` extension is configured for a project. However, the dev service is disabled in some cases to prevent potential confusing situations:"
msgstr "只要为项目配置了 `quarkus-kubernetes-client` 扩展，Kubernetes API 服务器就会自动以开发或测试模式启动。不过，在某些情况下会禁用开发服务，以防止出现潜在的混乱情况："

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "if the dev service is explicitly disabled by setting `quarkus.kubernetes-client.devservices.enabled` to `false`"
msgstr "如果通过将 `quarkus.kubernetes-client.devservices.enabled` 设置为 `false`"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "if the client is explicitly configured to access a given API server via `quarkus.kubernetes-client.api-server-url`"
msgstr "如果客户端被明确配置为通过 `quarkus.kubernetes-client.api-server-url`"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "if a valid Kube config file is found, in which case that configuration will be used by the client. It is, however, possible to force the dev service to start anyway by setting `quarkus.kubernetes-client.devservices.override-kubeconfig` to `true` to disregard the existing configuration"
msgstr "如果找到有效的 Kube 配置文件，客户端将使用该配置。不过，也可以通过将 `quarkus.kubernetes-client.devservices.override-kubeconfig` 设置为 `true` 来忽略现有配置，从而强制启动开发服务"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "if you include the `quarkus-test-kubernetes-client` dependency as, presumably, in that case, you have tests that rely on the Fabric8 mock server and don't need to start a cluster"
msgstr "`quarkus-test-kubernetes-client` 的依赖关系，因为在这种情况下，您的测试可能依赖于 Fabric8 模拟服务器，而不需要启动集群"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid ""
"Dev Services for Kubernetes relies on a container engine (Docker or Podman) to start the server.\n"
"If your environment does not support such a container engine, you will have to start a Kubernetes cluster running in a VM, in the cloud, etc.\n"
"In this case, you can configure the Kubernetes cluster access using either a Kube config file or the various properties available as specified in the xref:kubernetes-client.adoc[Kubernetes client configuration guide]."
msgstr "Kubernetes Dev Services 依赖容器引擎（Docker 或 Podman）来启动服务器。如果你的环境不支持这样的容器引擎，你将不得不启动在虚拟机、云等环境中运行的 Kubernetes 集群。在这种情况下，你可以使用 Kube 配置文件或 Kubernetes xref:kubernetes-client.adoc[客户端配置指南] 中指定的各种可用属性来配置 xref:kubernetes-client.adoc[Kubernetes] 集群访问。"

#. type: Title ==
#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy, no-wrap
msgid "Shared cluster"
msgstr "共享的集群"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Applications often need to share access to the same cluster. For that purpose, Dev Services for Kubernetes implements a _service discovery_ mechanism for multiple Quarkus applications running in dev mode to share a single cluster."
msgstr "应用程序经常需要共享对同一个集群的访问权限。为此，Kubernetes 的 Dev Services 为多个以 Dev 模式运行的 Quarkus 应用程序共享单个集群实施了 _服务发现_ 机制。"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Dev Services for Kubernetes starts the api server container with the `quarkus-dev-service-kubernetes` label which is used to identify it."
msgstr "用于 Kubernetes 的 Dev Services 使用 `quarkus-dev-service-kubernetes` 标签启动 api 服务器容器，该标签用于标识该容器。"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "If you need multiple (shared) clusters, you can provide a value for the `quarkus.kubernetes-client.devservices.service-name` configuration property to specify the name of the cluster that will be shared among the selected applications. The dev service support will look for an already existing container with that specified name or starts a new one if none can be found.The default service name is `kubernetes`."
msgstr "如果需要多个（共享）群集，可以为 `quarkus.kubernetes-client.devservices.service-name` 配置属性提供一个值，指定所选应用程序共享的群集名称。开发服务支持将查找具有指定名称的现有容器，如果找不到，则启动一个新容器。默认服务名称为 `kubernetes` 。"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid ""
"Sharing is enabled by default in dev mode, but disabled in test mode.\n"
"You can disable the sharing with `quarkus.kubernetes-client.devservices.shared=false`."
msgstr "共享功能在开发模式下默认启用，但在测试模式下禁用。您可以通过 `quarkus.kubernetes-client.devservices.shared=false` 关闭共享。"

#. type: Title ==
#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy, no-wrap
msgid "Configuring the cluster"
msgstr "配置集群"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid ""
"Dev Services for Kubernetes provides three different flavors of Kubernetes cluster. Each flavor supports different Kubernetes API versions.\n"
"You can configure the flavor and version using the `quarkus.kubernetes-client.devservices.flavor` and `quarkus.kubernetes-client.devservices.api-version` properties:"
msgstr "Kubernetes Dev Services 提供三种不同类型的 Kubernetes 集群。每种版本都支持不同的 Kubernetes API 版本。你可以使用 `quarkus.kubernetes-client.devservices.flavor` 和 `quarkus.kubernetes-client.devservices.api-version` 属性来配置版本："

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "You can also configure a custom image compatible with standard images (kind, k3s & api-server) using the `quarkus.kubernetes-client.devservices.image-name` property. However, it must be consistent with the flavor and api-version properties:"
msgstr "您还可以使用 `quarkus.kubernetes-client.devservices.image-name` 属性配置与标准图像（kind、k3s 和 api-server）兼容的自定义图像。不过，它必须与 flavor 和 api-version 属性保持一致："

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "`api-only` only starts a Kubernetes API Server (plus the required etcd). If you need a fully-featured Kubernetes cluster that can spin up Pods, you can use `k3s` or `kind`. `k3s` requires to start the container with `privileged mode`. The `kind` test container now also supports using podman's rootless mode."
msgstr "`api-only` 只启动 Kubernetes API 服务器（加上所需的 etcd）。如果需要一个能启动 Pod 的全功能 Kubernetes 集群，可以使用 或 。 ，需要用 启动容器。 测试容器现在也支持使用 podman 的无根模式。 `k3s` `kind` `k3s` `privileged mode` `kind` "

#. type: Plain text
#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "If `api-version` is not set, the latest version for the given flavor will be used. Otherwise, the version must match a https://github.com/dajudge/kindcontainer/blob/master/k8s-versions.json[version supported by the given flavor]."
msgstr "如果 `api-version` 未设置，则将使用给定版本的最新版本。否则，版本必须与 link:https://github.com/dajudge/kindcontainer/blob/master/k8s-versions.json[给定版本支持的版本] 一致。"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Once the cluster is configured, you can access it easily as you normally would, for example, by injecting a client instance in your test."
msgstr "集群配置完成后，您就可以像平常一样轻松访问它，例如，在测试中注入一个客户端实例。"

#: _versions/main/guides/kubernetes-dev-services.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"
