# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-17 12:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "Using Security with WebAuthn"
msgstr "使用WebAuthn的安全性"

#: _versions/2.13/guides/security-webauthn.adoc
msgid ""
"This guide demonstrates how your Quarkus application can use WebAuthn authentication instead of\n"
"passwords."
msgstr "本指南演示了你的Quarkus应用程序如何使用WebAuthn认证来代替密码。"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Introduction to WebAuthn"
msgstr "WebAuthn简介"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"https://webauthn.guide/[WebAuthn] is an authentication mechanism designed to replace passwords. In short, every\n"
"time you write a service for registering new users, or logging them in, instead of asking for a password, you\n"
"use WebAuthn, which will replace the password."
msgstr "link:https://webauthn.guide/[WebAuthn] 是一种旨在取代密码的身份验证机制。简而言之，每次编写用于注册新用户或登录用户的服务时，都可以使用 WebAuthn 来代替要求输入密码。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"WebAuthn replaces the password with a proof of identity. In practice, users, instead of having to invent a password,\n"
"store it or remember it, will use a hardware token that will generate a proof of identity specifically for your\n"
"service or website. This can be done by asking users to press their thumb on their phone, or pressing a button\n"
"on a https://www.yubico.com[YubiKey] on a computer."
msgstr "WebAuthn 以身份证明取代密码。在实践中，用户不必再编造密码、存储密码或记住密码，而是使用一个硬件令牌，该令牌会专门为您的服务或网站生成一个身份证明。这可以通过要求用户按下手机上的拇指或按下电脑上 link:https://www.yubico.com[YubiKey] 的按钮来实现。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"So, when you register your user, you use your browser to enter your user information (username, your name, etc…)\n"
"and instead of typing a password to identify yourself, you click a button which will invoke the WebAuthn browser\n"
"API which will ask you to do something (press a button, use your fingerprint). Then, your browser will generate\n"
"a proof of identity which you can send to your service instead of a password."
msgstr "因此，当您注册用户时，您可以使用浏览器输入您的用户信息（用户名、姓名等......），然后点击一个按钮来调用 WebAuthn 浏览器 API，该 API 会要求您做一些事情（按下按钮、使用指纹），而不是输入密码来表明您的身份。然后，浏览器会生成一个身份证明，您可以将其发送到您的服务，而不是密码。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"This proof of identity, when you register, consists mostly in a public key. Actually there's a lot of stuff in\n"
"there but the most interesting is the public key. This public key is not stored on your device, or your browser.\n"
"It is generated especially for the target service (tied to its URI), and derived from the hardware authenticator.\n"
"So the association of the hardware authenticator and the target service will always derive the same private and\n"
"public key pair, none of which are stored anywhere. You can for example, take your YubiKey to another computer\n"
"and it will keep generating the same private/public keys for the same target service."
msgstr "注册时的身份证明主要包括一个公钥。其实里面有很多东西，但最有趣的还是公钥。这个公钥不会存储在你的设备或浏览器中。它是专门为目标服务生成的（与其 URI 绑定），并从硬件验证器中导出。因此，硬件验证器和目标服务的关联将始终产生相同的私钥和公钥对，它们都不会存储在任何地方。例如，你可以把 YubiKey 带到另一台电脑上，它将继续为相同的目标服务生成相同的私钥/公钥。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"So, when you register, you send (mostly) a public key instead of a password, and the service stores that information\n"
"as WebAuthn credentials for your new user account, and this is what will identify you later."
msgstr "因此，当你注册时，你发送的（主要是）公钥而不是密码，服务会将该信息作为 WebAuthn 凭据存储到你的新用户账户中，这就是以后识别你身份的依据。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Then, when you need to log in to that service, instead of typing your password (which doesn't exist, remember?),\n"
"you press a button on the login form, and the browser will ask you to do something, and then it will send\n"
"a signature to your service instead of a password. That signature requires the private key that is derived from\n"
"your authenticator hardware and the target service, and so when your service receives it, it can verify that it\n"
"corresponds to the signature of the public key you stored as credentials."
msgstr "然后，当你需要登录该服务时，你不用输入密码（密码不存在，还记得吗？），而是按下登录表单上的一个按钮，浏览器会要求你做一些事情，然后它会向你的服务发送一个签名，而不是密码。该签名需要从你的验证器硬件和目标服务中提取的私钥，因此当你的服务收到该签名时，可以验证它是否与你作为凭证存储的公钥的签名一致。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"So, to recap: registration sends a generated public key instead of a password, and login sends a signature for\n"
"that public key, allowing you to verify that the user is who they were when they registered."
msgstr "因此，概括地说：注册时发送的是生成的公钥而不是密码，登录时发送的是该公钥的签名，这样就可以验证用户是否就是注册时的用户。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"In practice, it's a little more complex, because there needs to be a handshake with the server before you\n"
"can use the hardware authenticator (ask for a challenge and other things), so there are always two calls to your\n"
"service: one before login or registration, before calling the hardware authenticator, and then the normal\n"
"login or registration."
msgstr "在实际操作中，情况会稍微复杂一些，因为在使用硬件验证器之前，需要与服务器进行握手（请求挑战等），所以总是要对服务进行两次调用：一次是在登录或注册之前，一次是在调用硬件验证器之前，然后才是正常的登录或注册。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "And also there are a lot more fields to store than just a public key, but we will help you with that."
msgstr "还有，除了公钥，还有很多字段需要存储，但我们会帮助你解决这个问题。"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "In this example, we build a very simple microservice which offers four endpoints:"
msgstr "在这个例子中，我们建立了一个非常简单的微服务，提供四个端点。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/public`"
msgstr " `/api/public` "

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/public/me`"
msgstr " `/api/public/me` "

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/users/me`"
msgstr " `/api/users/me` "

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`/api/admin`"
msgstr " `/api/admin` "

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The `/api/public` endpoint can be accessed anonymously.\n"
"The `/api/public/me` endpoint can be accessed anonymously and returns the current username if there is one, or `<not logged in>` if not.\n"
"The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) where only users granted with the `admin` role can access. At this endpoint, we use the `@RolesAllowed` annotation to declaratively enforce the access constraint.\n"
"The `/api/users/me` endpoint is also protected with RBAC (Role-Based Access Control) where only users granted with the `user` role can access. As a response, it returns a JSON document with details about the user."
msgstr "`/api/public` 端点可以匿名访问。 `/api/public/me` 端点可以匿名访问，如果有用户名，则返回当前用户名；如果没有用户名，则返回 `<not logged in>` 。 `/api/admin` 端点受 RBAC（基于角色的访问控制）保护，只有被授予 `admin` 角色的用户才能访问。在该端点，我们使用 `@RolesAllowed` 注释来声明执行访问限制。 `/api/users/me` 端点也受 RBAC（基于角色的访问控制）保护，只有被授予 `user` 角色的用户才能访问。作为响应，它会返回一个包含用户详细信息的 JSON 文档。"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.13/guides/security-webauthn.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "The solution is located in the `security-webauthn-quickstart` {quickstarts-tree-url}/security-webauthn-quickstart[directory]."
msgstr "解决方案位于 `security-webauthn-quickstart` {quickstarts-tree-url}/security-webauthn-quickstart[目录]。"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: delimited block =
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "Don't forget to add the database connector library of choice. Here we are using PostgreSQL as identity store."
msgstr "不要忘记添加选择的数据库连接器库。这里我们使用PostgreSQL作为身份存储。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"This command generates a Maven project, importing the `security-webauthn` extension\n"
"which allows you to use WebAuthn to authenticate users."
msgstr "该命令将生成一个 Maven 项目，并导入 `security-webauthn` 扩展，以便使用 WebAuthn 对用户进行身份验证。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `security-webauthn` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果已经配置了 Quarkus 项目，可以在项目基本目录下运行以下命令，将 `security-webauthn` 扩展添加到项目中："

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "Writing the application"
msgstr "编写应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "Let's start by implementing the `/api/public` endpoint. As you can see from the source code below, it is just a regular JAX-RS resource:"
msgstr "让我们从实现 `/api/public` 端点开始。从下面的源代码中可以看到，这只是一个普通的 JAX-RS 资源："

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple. The main difference here is that we are using a `@RolesAllowed` annotation to make sure that only users granted with the `admin` role can access the endpoint:"
msgstr "端点 `/api/admin` 的源代码也非常简单。这里的主要区别是，我们使用 `@RolesAllowed` 注解来确保只有被授予 `admin` 角色的用户才能访问该端点："

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Finally, let's consider the `/api/users/me` endpoint. As you can see from the source code below, we are trusting only users with the `user` role.\n"
"We are using `SecurityContext` to get access to the current authenticated Principal and we return the user's name. This information is loaded from the database."
msgstr "最后，让我们来看看 `/api/users/me` 端点。从下面的源代码中可以看到，我们只信任 `user` 角色的用户。我们使用 `SecurityContext` 访问当前通过身份验证的 Principal，并返回用户名。这些信息是从数据库中加载的。"

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Storing our WebAuthn credentials"
msgstr "储存我们的WebAuthn凭证"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"We can now describe how our WebAuthn credentials are stored in our database with three entities. Note that we've\n"
"simplified the model in order to only store one credential per user (who could actually have more than one WebAuthn credential\n"
"and other data such as roles):"
msgstr "现在我们可以用三个实体来描述 WebAuthn 凭据是如何存储在数据库中的。请注意，我们简化了模型，以便每个用户只存储一个凭据（实际上，用户可能拥有不止一个 WebAuthn 凭据和其他数据，如角色）："

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "We also need a second entity for the credentials:"
msgstr "我们还需要第二个实体的凭证。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "And last but not least, our user entity:"
msgstr "最后但并非最不重要的是，我们的用户实体。"

#. type: Title ====
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "A note about usernames and credential IDs"
msgstr "关于用户名和凭证ID的说明"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "WebAuthn relies on a combination of usernames (unique per user) and credential IDs (unique per authenticator device)."
msgstr "WebAuthn依赖于用户名（每个用户唯一）和凭证ID（每个认证器设备唯一）的组合。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "The reasons why there are two such identifiers, and why they are not unique keys for the credentials themselves are:"
msgstr "为什么有两个这样的标识符，以及为什么它们不是凭证本身的唯一键，原因是。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"A single user can have more than one authenticator device, which means a single username can map to multiple credential IDs,\n"
"all of which identify the same user."
msgstr "一个用户可以拥有多个验证器设备，这意味着一个用户名可以映射到多个凭证 ID，而所有凭证 ID 都能识别同一个用户。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"An authenticator device may be shared by multiple users, because a single person may want multiple user accounts with different\n"
"usernames, all of which having the same authenticator device. So a single credential ID may be used by multiple different users."
msgstr "一个身份验证设备可由多个用户共享，因为一个人可能需要多个用户账户，用户名各不相同，而所有账户都使用同一个身份验证设备。因此，一个身份验证 ID 可能会被多个不同的用户使用。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "The combination of username and credential ID should be a unicity constraint for your credentials table, though."
msgstr "不过，用户名和凭证ID的组合应该是你的凭证表的单一性约束。"

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Exposing your entities to Quarkus WebAuthn"
msgstr "将你的实体暴露给Quarkus WebAuthn"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"You need to define a bean implementing the `WebAuthnUserProvider` in order to allow the Quarkus WebAuthn\n"
"extension to load and store credentials. This is where you tell Quarkus how to turn your data model into the\n"
"WebAuthn security model:"
msgstr "您需要定义一个实现 `WebAuthnUserProvider` 的 Bean，以便允许 Quarkus WebAuthn 扩展加载和存储凭证。在这里，你要告诉 Quarkus 如何将你的数据模型转化为 WebAuthn 安全模型："

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Writing the HTML application"
msgstr "编写HTML应用程序"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"We now need to write a web page with links to all our APIs, as well as a way to register a new user, login, and logout,\n"
"in `src/main/resources/META-INF/resources/index.html`:"
msgstr "现在，我们需要在 `src/main/resources/META-INF/resources/index.html` 中编写一个网页，其中包含指向所有 API 的链接，以及注册新用户、登录和注销的方法："

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Testing the application"
msgstr "测试应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "The application is now protected and the identities are provided by our database."
msgstr "现在，该应用程序受到保护，身份由我们的数据库提供。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "Run your application in dev mode with:"
msgstr "在开发模式下运行你的应用程序。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"which will start a PostgreSQL Dev Service container,\n"
"and open http://localhost:8080 in your browser."
msgstr "这将启动 PostgreSQL Dev Service 容器，并在浏览器中打开 http://localhost:8080 。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "Initially, you will have no credentials registered, and no current user:"
msgstr "最初，你将没有注册的凭证，也没有当前用户。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The current user is displayed on the left, and you can use the top menu to try accessing the public API, which\n"
"should work, while the user and admin APIs will fail and redirect you to the current page."
msgstr "当前用户显示在左侧，您可以使用顶部菜单尝试访问公共 API，这应该可以正常工作，而用户和管理员 API 则会失败并重定向到当前页面。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Start by registering your WebAuthn credentials by entering a username, first and last names on the `Register`\n"
"form on the right, then pressing the `Register` button:"
msgstr "首先在右侧的 `Register` 表单中输入用户名、姓和名，然后按 `Register` 按钮注册 WebAuthn 凭据："

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "Your browser will ask you to activate your WebAuthn authenticator:"
msgstr "你的浏览器会要求你激活你的WebAuthn认证器。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "You will then be logged in, and can check that the user API is now accessible:"
msgstr "然后你将被登录，并可以检查用户API现在是否可以访问。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "At this stage you can `Logout` and enter your username in the `Login` form:"
msgstr "在这个阶段，你可以 `Logout` ，并在 `Login` 表格中输入你的用户名。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "Then press the `Login` button, and you will be logged in:"
msgstr "然后按 `Login` 按钮，你就可以登录了。"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "The admin API is only accessible if you register with the `admin` user name."
msgstr "只有当你用 `admin` 用户名注册时，才能访问管理API。"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "WebAuthn endpoints"
msgstr "WebAuthn端点"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "The Quarkus WebAuthn extension comes out of the box with these REST endpoints pre-defined:"
msgstr "Quarkus WebAuthn扩展开箱即预设了这些REST端点。"

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Obtain a registration challenge"
msgstr "获得登记挑战"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`POST /q/webauthn/register`: Set up and obtain a registration challenge"
msgstr " `POST /q/webauthn/register` :设置并获得注册挑战"

#. type: Block title
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Request"
msgstr "要求"

#. type: Block title
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Response"
msgstr "响应"

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Obtain a login challenge"
msgstr "获得一个登录挑战"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`POST /q/webauthn/login`: Set up and obtain a login challenge"
msgstr " `POST /q/webauthn/login` :设置并获得一个登录挑战"

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Trigger a registration"
msgstr "触发注册"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`POST /q/webauthn/callback`: Trigger a registration"
msgstr " `POST /q/webauthn/callback` :触发注册"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "This returns a 204 with no body."
msgstr "这将返回一个没有主体的204。"

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Trigger a login"
msgstr "触发一次登录"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`POST /q/webauthn/callback`: Trigger a login"
msgstr " `POST /q/webauthn/callback` :触发一次登录"

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Logout"
msgstr "登出"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "`GET /q/webauthn/logout`: Logs you out"
msgstr " `GET /q/webauthn/logout` :将你的信息记录下来"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "This returns a 302 redirect to the root URI of your application."
msgstr "这将返回一个302重定向到你的应用程序的根URI。"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "WebAuthn JavaScript library"
msgstr "WebAuthn JavaScript库"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Because there's so much JavaScript needed to set WebAuthn up in the browser, the Quarkus WebAuthn extension ships with\n"
"a JavaScript library to help you talk to the WebAuthn endpoints, at `/q/webauthn/webauthn.js`. You can set it up like this:"
msgstr "由于在浏览器中设置 WebAuthn 需要大量 JavaScript，Quarkus WebAuthn 扩展随附了一个 JavaScript 库，以帮助你与 WebAuthn 端点对话，网址是 `/q/webauthn/webauthn.js` 。你可以这样设置"

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Invoke registration"
msgstr "调用注册"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The `webAuthn.register` method invokes the registration challenge endpoint, then calls the authenticator and invokes the callback endpoint\n"
"for that registration, and returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object]:"
msgstr "`webAuthn.register` 方法会调用注册挑战端点，然后调用验证器，调用该注册的回调端点，并返回一个 link:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise 对象] ："

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Invoke login"
msgstr "调用登录"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The `webAuthn.login` method invokes the login challenge endpoint, then calls the authenticator and invokes the callback endpoint\n"
"for that login, and returns a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object]:"
msgstr "`webAuthn.login` 方法调用登录挑战端点，然后调用身份验证器并调用该登录的回调端点，并返回一个 link:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise 对象] ："

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Only invoke the registration challenge and authenticator"
msgstr "只调用注册挑战和认证器"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The `webAuthn.registerOnly` method invokes the registration challenge endpoint, then calls the authenticator and returns\n"
"a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object] containing a\n"
"JSON object suitable for being sent to the callback endpoint. You can use that JSON object in order to store the credentials\n"
"in hidden form `input` elements, for example, and send it as part of a regular HTML form:"
msgstr "`webAuthn.registerOnly` 方法会调用注册挑战端点，然后调用验证器并返回一个 link:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise 对象] ，其中包含一个适合发送到回调端点的 JSON 对象。例如，您可以使用该 JSON 对象将凭证存储在隐藏表单 `input` 元素中，然后作为普通 HTML 表单的一部分发送："

#. type: Title ===
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Only invoke the login challenge and authenticator"
msgstr "只调用注册挑战和认证器"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The `webAuthn.loginOnly` method invokes the login challenge endpoint, then calls the authenticator and returns\n"
"a https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise object] containing a\n"
"JSON object suitable for being sent to the callback endpoint. You can use that JSON object in order to store the credentials\n"
"in hidden form `input` elements, for example, and send it as part of a regular HTML form:"
msgstr "`webAuthn.loginOnly` 方法会调用登录挑战端点，然后调用验证器并返回一个 link:https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise[Promise 对象] ，该对象包含一个适合发送到回调端点的 JSON 对象。例如，您可以使用该 JSON 对象在隐藏表单 `input` 元素中存储凭据，并将其作为普通 HTML 表单的一部分发送："

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Handling login and registration endpoints yourself"
msgstr "自己处理登录和注册端点"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Sometimes, you will want to ask for more data than just a username in order to register a user,\n"
"or you want to deal with login and registration with custom validation, and so the WebAuthn callback\n"
"endpoint is not enough."
msgstr "有时，为了注册用户，除了用户名之外，您还需要输入更多的数据，或者您想通过自定义验证来处理登录和注册，因此 WebAuthn 回调端点是不够的。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"In this case, you can use the `WebAuthn.loginOnly` and `WebAuthn.registerOnly` methods from the JavaScript\n"
"library, store the authenticator data in hidden form elements, and send them as part of your form payload\n"
"to the server to your custom login or registration endpoints."
msgstr "在这种情况下，您可以使用 JavaScript 库中的 `WebAuthn.loginOnly` 和 `WebAuthn.registerOnly` 方法，将验证器数据存储在隐藏的表单元素中，然后作为表单有效载荷的一部分发送到服务器上的自定义登录或注册端点。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"If you are storing them in form input elements, you can then use the `WebAuthnLoginResponse` and\n"
"`WebAuthnRegistrationResponse` classes, mark them as `@BeanParam` and then use the `WebAuthnSecurity.login`\n"
"and `WebAuthnSecurity.register` methods. For example, here's how you can handle a custom login and register:"
msgstr "如果将它们存储在表单输入元素中，则可以使用 `WebAuthnLoginResponse` 和 `WebAuthnRegistrationResponse` 类，将它们标记为 `@BeanParam` ，然后使用 `WebAuthnSecurity.login` 和 `WebAuthnSecurity.register` 方法。例如，以下是处理自定义登录和注册的方法："

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"The `WebAuthnSecurity` methods do not set or read the user cookie, so you will have to take care\n"
"of it yourself, but it allows you to use other means of storing the user, such as JWT. You can use the\n"
"`rememberUser(String userName, RoutingContext ctx)` and `logout(RoutingContext ctx)` methods on the same\n"
"`WebAuthnSecurity` class if you want to manually set up login cookies."
msgstr "`WebAuthnSecurity` 方法不会设置或读取用户 cookie，因此您必须自行处理，但它允许您使用其他方式存储用户，如 JWT。如果要手动设置登录 cookie，可以在同一个 `WebAuthnSecurity` 类上使用 `rememberUser(String userName, RoutingContext ctx)` 和 `logout(RoutingContext ctx)` 方法。"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Blocking version"
msgstr "封锁版本"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"If you're using a blocking data access to the database, you can safely block on the `WebAuthnSecurity` methods,\n"
"with `.await().indefinitely()`, because nothing is async in the `register` and `login` methods, besides the\n"
"data access with your `WebAuthnUserProvider`."
msgstr "如果使用阻塞数据访问数据库，则可以通过 `.await().indefinitely()` 安全地阻塞 `WebAuthnSecurity` 方法，因为 `register` 和 `login` 方法中除了使用 `WebAuthnUserProvider` 访问数据外，没有任何异步内容。"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"You will have to add the `@Blocking` annotation on your `WebAuthnUserProvider` class in order to tell the\n"
"Quarkus WebAuthn endpoints to defer those calls to the worker pool."
msgstr "您必须在 `WebAuthnUserProvider` 类上添加 `@Blocking` 注解，以便告诉 Quarkus WebAuthn 端点将这些调用推迟到 Worker 池。"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy, no-wrap
msgid "Testing WebAuthn"
msgstr "测试WebAuthn"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"Testing WebAuthn can be complicated because normally you need a hardware token, which is why we've made the\n"
"`quarkus-test-security-webauthn` extension:"
msgstr "测试 WebAuthn 可能比较复杂，因为通常需要硬件令牌，这也是我们开发 `quarkus-test-security-webauthn` 扩展的原因："

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"With this, you can use `WebAuthnHardware` to emulate an authenticator token, as well as the\n"
"`WebAuthnEndpointHelper` helper methods in order to invoke the WebAuthn endpoints, or even fill your form\n"
"data for custom endpoints:"
msgstr "这样，您就可以使用 `WebAuthnHardware` 来模拟验证器令牌，以及使用 `WebAuthnEndpointHelper` 辅助方法来调用 WebAuthn 端点，甚至为自定义端点填充表单数据："

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid ""
"For this test, since we're testing both the provided callback endpoint, which updates users\n"
"in its `WebAuthnUserProvider` and the manual `LoginResource` endpoint, which deals with users\n"
"manually, we need to override the `WebAuthnUserProvider` with one that doesn't update the\n"
"`scooby` user:"
msgstr "在本次测试中，我们既要测试提供的回调端点（更新 `WebAuthnUserProvider` 中的用户），又要测试手动端点（手动处理用户） `LoginResource` ，因此我们需要用一个不更新 `scooby` 用户的端点覆盖 `WebAuthnUserProvider` ："

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _versions/2.13/guides/security-webauthn.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/2.13/guides/security-webauthn.adoc
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "xref:security.adoc[夸克安全]"
