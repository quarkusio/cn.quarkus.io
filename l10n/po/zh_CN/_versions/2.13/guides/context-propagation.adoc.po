# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-17 12:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Context Propagation in Quarkus"
msgstr "Quarkus中的语境传播"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"Traditional blocking code uses link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html[`ThreadLocal`]\n"
" variables to store contextual objects in order to avoid\n"
"passing them as parameters everywhere. Many Quarkus extensions require those contextual objects to operate\n"
"properly: xref:rest-json.adoc[RESTEasy Reactive], xref:cdi-reference.adoc[ArC] and xref:transaction.adoc[Transaction]\n"
"for example."
msgstr "传统的阻塞代码使用 link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/ThreadLocal.html[ThreadLocal] 变量来存储上下文对象，以避免将它们作为参数到处传递。许多 Quarkus 扩展都需要这些上下文对象才能正常运行：例如， xref:rest-json.adoc[RESTEasy Reactive] 、 xref:cdi-reference.adoc[ArC] 和 xref:transaction.adoc[Transaction] 。"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"If you write reactive/async code, you have to cut your work into a pipeline of code blocks that get executed\n"
"\"later\", and in practice after the method you defined them in have returned. As such, `try/finally` blocks\n"
"as well as `ThreadLocal` variables stop working, because your reactive code gets executed in another thread,\n"
"after the caller ran its `finally` block."
msgstr "如果您编写的是反应式/同步代码，您就必须将您的工作切割成一个个代码块流水线，这些代码块会在 \"稍后 \"执行，实际上是在您定义的方法返回后执行。因此， `try/finally` 代码块和 `ThreadLocal` 变量都会停止工作，因为在调用者运行 `finally` 代码块后，你的反应式代码会在另一个线程中执行。"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"link:https://github.com/smallrye/smallrye-context-propagation[SmallRye Context Propagation] an implementation of\n"
"link:https://github.com/eclipse/microprofile-context-propagation[MicroProfile Context Propagation] was made to\n"
"make those Quarkus extensions work properly in reactive/async settings. It works by capturing those contextual\n"
"values that used to be in thread-locals, and restoring them when your code is called."
msgstr "link:https://github.com/smallrye/smallrye-context-propagation[SmallRye 上下文传播（SmallRye Context Propagation] ）是 link:https://github.com/eclipse/microprofile-context-propagation[微配置文件上下文传播] （ link:https://github.com/eclipse/microprofile-context-propagation[MicroProfile Context Propagation] ）的一种实现，用于使 Quarkus 扩展在反应式/同步设置中正常工作。它的工作原理是捕获线程位置中的上下文值，并在调用代码时恢复它们。"

#. type: Title ==
#: _versions/2.13/guides/context-propagation.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.13/guides/context-propagation.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/2.13/guides/context-propagation.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "The solution is located in the `context-propagation-quickstart` {quickstarts-tree-url}/context-propagation-quickstart[directory]."
msgstr "解决方案位于 `context-propagation-quickstart` {quickstarts-tree-url}/context-propagation-quickstart[directory] 中。"

#. type: Title ==
#: _versions/2.13/guides/context-propagation.adoc
#, no-wrap
msgid "Setting it up"
msgstr "设置它"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"If you are using link:https://smallrye.io/smallrye-mutiny[Mutiny] (the `quarkus-mutiny` extension), you just need to add\n"
"the `quarkus-smallrye-context-propagation` extension to enable context propagation."
msgstr "如果使用 link:https://smallrye.io/smallrye-mutiny[Mutiny] （ `quarkus-mutiny` 扩展），只需添加 `quarkus-smallrye-context-propagation` 扩展即可启用上下文传播。"

#. type: Plain text
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "In other words, add the following dependencies to your build file:"
msgstr "换句话说，在你的构建文件中添加以下依赖项。"

#. type: Block title
#: _versions/2.13/guides/context-propagation.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/context-propagation.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "With this, you will get context propagation for ArC, RESTEasy Reactive and transactions, if you are using them."
msgstr "有了它，你将获得ArC、RESTEasy Reactive和事务的上下文传播，如果你正在使用它们的话。"

#. type: Title ==
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Usage example with Mutiny"
msgstr "叛变的用例"

#. type: Block title
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Mutiny"
msgstr "叛变"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"This section uses Mutiny reactive types.\n"
"If you are not familiar with Mutiny, check xref:mutiny-primer.adoc[Mutiny - an intuitive reactive programming library]."
msgstr "本节使用 Mutiny 反应类型。如果你不熟悉 Mutiny，请查看 xref:mutiny-primer.adoc[Mutiny - 一个直观的反应式编程库] 。"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"Let's write a REST endpoint that reads the next 3 items from a xref:kafka.adoc[Kafka topic], stores them in a database using\n"
"xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] (all in the same transaction) before returning\n"
"them to the client, you can do it like this:"
msgstr "让我们编写一个 REST 端点，从 xref:kafka.adoc[Kafka 主题] 中读取下三个条目，然后使用 xref:hibernate-orm-panache.adoc[Hibernate ORM 和 Panache] 将其存储到数据库中（所有操作都在同一事务中完成），最后再将其返回给客户端："

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"Notice that thanks to Mutiny support for context propagation, this works out of the box.\n"
"The 3 items are persisted using the same transaction and this transaction is committed when the stream completes."
msgstr "请注意，得益于 Mutiny 对上下文传播的支持，这一切开箱即用。3 个项目使用同一个事务持久化，当数据流完成时，该事务就会提交。"

#. type: Title ==
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Usage example for `CompletionStage`"
msgstr "的使用实例 `CompletionStage` "

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"If you are using link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletionStage.html[`CompletionStage`]\n"
"you need manual context propagation. You can do that by injecting a `ThreadContext`\n"
"or `ManagedExecutor` that will propagate every context. For example, here we use the xref:vertx.adoc[Vert.x Web Client]\n"
"to get the list of Star Wars people, then store them in the database using\n"
"xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] (all in the same transaction) before returning\n"
"them to the client as JSON using xref:rest-json.adoc[Jackson or JSON-B]:"
msgstr "如果使用 link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/util/concurrent/CompletionStage.html[CompletionStage] 则需要手动传播上下文。您可以通过注入一个 `ThreadContext` 或 `ManagedExecutor` 来实现这一点，它将传播每个上下文。例如，在这里我们使用 xref:vertx.adoc[Vert.x Web Client] 获取《星球大战》人物列表，然后使用 xref:hibernate-orm-panache.adoc[Hibernate ORM 和 Panache] 将其存储到数据库中（所有操作都在同一事务中完成），最后使用 xref:rest-json.adoc[Jackson 或 JSON-B] 将其作为 JSON 格式返回给客户端："

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"Using `ThreadContext` or `ManagedExecutor` you can wrap most useful functional types and `CompletionStage`\n"
"in order to get context propagated."
msgstr "使用 `ThreadContext` 或 `ManagedExecutor` 可以封装大多数有用的函数类型和 `CompletionStage` ，以获得上下文传播。"

#. type: delimited block =
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "The injected `ManagedExecutor` uses the Quarkus thread pool."
msgstr "注入的 `ManagedExecutor` ，使用Quarkus线程池。"

#. type: Title ==
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Overriding which contexts are propagated"
msgstr "覆盖哪些上下文被传播的问题"

#. type: Plain text
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "By default, all available contexts are propagated. However, you can override this behaviour in several ways."
msgstr "默认情况下，所有可用的上下文都被传播了。然而，你可以通过几种方式覆盖这种行为。"

#. type: Title ===
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Using configuration"
msgstr "使用配置"

#. type: Plain text
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "The following configuration properties allow you to specify the default sets of propagated contexts:"
msgstr "下面的配置属性允许你指定传播的上下文的默认集。"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Configuration Key"
msgstr "配置键"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Default Value"
msgstr "默认值"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.propagated`"
msgstr " `mp.context.ThreadContext.propagated` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "The comma-separated set of propagated contexts"
msgstr "以逗号分隔的已传播语境的集合"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`Remaining` (all non-explicitly list contexts)"
msgstr " `Remaining` (所有非明确列出的语境)"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.cleared`"
msgstr " `mp.context.ThreadContext.cleared` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "The comma-separated set of cleared contexts"
msgstr "以逗号分隔的被清除的上下文的集合"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`None` (no context), unless neither the propagated nor cleared sets contain `Remaining`, in which case the default is `Remaining` (all non-explicitly listed contexts)"
msgstr " `None` (没有上下文），除非传播的和清除的集合都不包含 ，在这种情况下，默认为 （所有未明确列出的上下文）。 `Remaining` `Remaining` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`mp.context.ThreadContext.unchanged`"
msgstr " `mp.context.ThreadContext.unchanged` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "The comma-separated set of unchanged contexts"
msgstr "以逗号分隔的未改变的上下文的集合"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`None` (no context)"
msgstr " `None` (无背景)"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"The following contexts are available in Quarkus either out of the box, or depending on whether you include\n"
"their extensions:"
msgstr "Quarkus 提供以下上下文，可以是开箱即用的上下文，也可以是根据是否包含扩展名而提供的上下文："

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "Context Name"
msgstr "背景名称"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Name Constant"
msgstr "名称恒定"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`None`"
msgstr " `None` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#NONE[`ThreadContext.NONE`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#NONE[`ThreadContext.NONE`]"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Can be used to specify an empty set of contexts, but setting the value to empty works too"
msgstr "可以用来指定一个空的上下文集，但将值设置为空也可以。"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`Remaining`"
msgstr " `Remaining` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#ALL_REMAINING[`ThreadContext.ALL_REMAINING`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#ALL_REMAINING[`ThreadContext.ALL_REMAINING`]"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "All the contexts that are not explicitly listed in other sets"
msgstr "所有没有明确列在其他集合中的背景情况"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`Transaction`"
msgstr " `Transaction` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#TRANSACTION[`ThreadContext.TRANSACTION`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#TRANSACTION[`ThreadContext.TRANSACTION`]"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "The JTA transaction context"
msgstr "JTA的交易环境"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`CDI`"
msgstr " `CDI` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#CDI[`ThreadContext.CDI`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#CDI[`ThreadContext.CDI`]"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "The CDI (ArC) context"
msgstr "CDI（ArC）的背景"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`Servlet`"
msgstr " `Servlet` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "N/A"
msgstr "不适用"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "The servlet context"
msgstr "小程序上下文"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`JAX-RS`"
msgstr "`JAX-RS`"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "The RESTEasy Classic context"
msgstr "RESTEasy Classic 背景"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "`Application`"
msgstr " `Application` "

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#APPLICATION[`ThreadContext.APPLICATION`]"
msgstr "link:https://javadoc.io/static/org.eclipse.microprofile.context-propagation/microprofile-context-propagation-api/1.2/org/eclipse/microprofile/context/ThreadContext.html#APPLICATION[`ThreadContext.APPLICATION`]"

#. type: Table
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "The current `ThreadContextClassLoader`"
msgstr "目前 `ThreadContextClassLoader` "

#. type: Title ===
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Overriding the propagated contexts using annotations"
msgstr "使用注释重写传播的上下文"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"In order for automatic context propagation, such as Mutiny uses, to be overridden in specific methods,\n"
"you can use the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/CurrentThreadContext.html[`@CurrentThreadContext`]\n"
"annotation:"
msgstr "为了在特定方法中重载自动上下文传播（如 Mutiny 所用），可以使用 link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/CurrentThreadContext.html[@CurrentThreadContext] 注解："

#. type: Title ===
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Overriding the propagated contexts using CDI injection"
msgstr "使用CDI注入重写传播的上下文"

#. type: Plain text
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "You can also inject a custom-built `ThreadContext` using the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ThreadContextConfig.html[`@ThreadContextConfig`] annotation on your injection point:"
msgstr " `ThreadContext` 你也可以在注入点上使用 link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ThreadContextConfig.html[`@ThreadContextConfig`] 注释在你的注入点上。"

#. type: Plain text
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "Likewise, there is a similar way to inject a configured instance of `ManagedExecutor` using the https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ManagedExecutorConfig.html[`@ManagedExecutorConfig`] annotation:"
msgstr "同样，也有一种类似的方法来注入一个配置好的 `ManagedExecutor` 的实例，使用 link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/ManagedExecutorConfig.html[`@ManagedExecutorConfig`] 注解注入配置的实例。"

#. type: Title ===
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Sharing configured CDI instances of ManagedExecutor and ThreadContext"
msgstr "共享配置的CDI实例的ManagedExecutor和ThreadContext"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"If you need to inject the same `ManagedExecutor` or `ThreadContext` into several places and share its capacity, you can name the instance with https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/NamedInstance.html[`@NamedInstance`] annotation.\n"
"`@NamedInstance` is a CDI qualifier and all injections of the same type and name will therefore share the same underlying instance.\n"
"If you also need to customize your instance, you can do so using `@ManagedExecutorConfig`/`ThreadContextConfig` annotation on one of its injection points:"
msgstr "如果需要在多个地方注入同一个 `ManagedExecutor` 或 `ThreadContext` 并共享其容量，可以用 link:https://javadoc.io/doc/io.smallrye/smallrye-context-propagation-api/latest/io/smallrye/context/api/NamedInstance.html[@NamedInstance] 注释来命名实例。 `@NamedInstance` 是 CDI 限定符，因此相同类型和名称的所有注入都将共享相同的底层实例。如果还需要自定义实例，可在其中一个注入点上使用 `@ManagedExecutorConfig` / `ThreadContextConfig` 注释："

#. type: Title ==
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy, no-wrap
msgid "Context Propagation for CDI"
msgstr "CDI的语境传播"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"In terms of CDI, `@RequestScoped`, `@ApplicationScoped` and `@Singleton` beans get propagated and are available in other threads.\n"
"`@Dependent` beans as well as any custom scoped beans cannot be automatically propagated via CDI Context Propagation."
msgstr "就 CDI 而言， `@RequestScoped` 、 `@ApplicationScoped` 和 `@Singleton` Bean 会在其他线程中传播并可用。 `@Dependent` Bean 以及任何自定义作用域 Bean 都无法通过 CDI 上下文传播自动传播。"

#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid ""
"`@ApplicationScoped` and `@Singleton` beans are always active scopes and as such are easy to deal with - context propagation tasks can work with those beans so long as the CDI container is running.\n"
"However, `@RequestScoped` beans are a different story. They are only active for a short period of time which can be bound either to HTTP request or some other request/task when manually activated/deactivated.\n"
"In this case user must be aware that once the original thread gets to an end of a request, it will terminate the context, calling `@PreDestroy` on those beans and then clearing them from the context.\n"
"Subsequent attempts to access those beans from other threads can result in unexpected behaviour.\n"
"It is therefore recommended to make sure all tasks using request scoped beans via context propagation are performed in such a manner that they don't outlive the original request duration."
msgstr "`@ApplicationScoped` 和 Bean 始终是活动作用域，因此很容易处理--只要 CDI 容器在运行，上下文传播任务就可以与这些 Bean 一起工作。但是， Bean 就不同了。它们只在短时间内处于活动状态，在手动激活/停用时，可以与 HTTP 请求或其他请求/任务绑定。在这种情况下，用户必须注意，一旦原始线程结束请求，就会终止上下文，在这些 Bean 上调用 ，然后将它们从上下文中清除。随后从其他线程访问这些豆类的尝试可能会导致意想不到的行为。因此，建议确保所有通过上下文传播使用请求作用域 Bean 的任务在执行时不会超过原始请求的持续时间。 `@Singleton` `@RequestScoped` `@PreDestroy`"

#. type: delimited block =
#: _versions/2.13/guides/context-propagation.adoc
#, fuzzy
msgid "Due to the above described behavior, it is recommended to avoid using `@PreDestroy` on `@RequestScoped` beans when working with Context Propagation in CDI."
msgstr "由于上述行为，建议在使用 CDI 中的上下文传播时，避免在 `@RequestScoped` Bean 上使用 `@PreDestroy` 。"
