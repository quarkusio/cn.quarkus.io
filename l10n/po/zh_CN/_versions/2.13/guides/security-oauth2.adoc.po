# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-17 12:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "Using OAuth2 RBAC"
msgstr "使用OAuth2 RBAC"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "This guide explains how your Quarkus application can utilize OAuth2 tokens to provide secured access to the JAX-RS endpoints."
msgstr "本指南解释了你的Quarkus应用程序如何利用OAuth2令牌来提供对JAX-RS端点的安全访问。"

#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid ""
"OAuth2 is an authorization framework that enables applications to obtain access to an HTTP resource on behalf of a user.\n"
"It can be used to implement an application authentication mechanism based on tokens by delegating to an external server (the authentication server) the user authentication and providing a token for the authentication context."
msgstr "OAuth2 是一个授权框架，可让应用程序代表用户访问 HTTP 资源。通过将用户身份验证委托给外部服务器（身份验证服务器）并为身份验证上下文提供令牌，它可用于实施基于令牌的应用程序身份验证机制。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "This extension provides a light-weight support for using the opaque Bearer Tokens and validating them by calling an introspection endpoint."
msgstr "这个扩展为使用不透明的承载令牌提供了一个轻量级的支持，并通过调用自省端点来验证它们。"

#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid ""
"If the OAuth2 Authentication server provides JWT Bearer Tokens then you should consider using either xref:security-openid-connect.adoc[OpenID Connect] or xref:security-jwt.adoc[SmallRye JWT] extensions instead.\n"
"OpenID Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow, please read xref:security-openid-connect-web-authentication.adoc[Using OpenID Connect to Protect Web Applications] guide for more information."
msgstr "如果 OAuth2 身份验证服务器提供 JWT 承载令牌，则应考虑使用 xref:security-openid-connect.adoc[OpenID Connect] 或 xref:security-jwt.adoc[SmallRye JWT] 扩展。如果 Quarkus 应用程序需要使用 OIDC 授权代码流对用户进行身份验证，则必须使用 OpenID Connect 扩展，详情请阅读《 xref:security-openid-connect-web-authentication.adoc[使用 OpenID Connect 保护 Web 应用程序] 》指南。"

#. type: Title ==
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.13/guides/security-oauth2.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Clone the Git repository: git clone https://github.com/quarkusio/quarkus-quickstarts.git, or download an archive."
msgstr "克隆Git仓库：git clone https://github.com/quarkusio/quarkus-quickstarts.git 或者下载一个存档。"

#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid ""
"The solution is located in the `security-oauth2-quickstart` {quickstarts-tree-url}/security-oauth2-quickstart[directory].\n"
"It contains a very simple UI to use the JAX-RS resources created here, too."
msgstr "解决方案位于 `security-oauth2-quickstart` {quickstarts-tree-url}/security-oauth2-quickstart[目录]。它还包含一个非常简单的用户界面，用于使用在此创建的 JAX-RS 资源。"

#. type: Title ==
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "This command generates a project and imports the `elytron-security-oauth2` extension, which includes the OAuth2 opaque token support."
msgstr "该命令生成一个项目并导入 `elytron-security-oauth2` 扩展，其中包括对OAuth2不透明令牌的支持。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "If you don't want to use the Maven plugin, you can just include the dependency in your build file:"
msgstr "如果你不想使用Maven插件，你可以直接在构建文件中包含该依赖项。"

#. type: Block title
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "Examine the JAX-RS resource"
msgstr "检查JAX-RS资源"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Create the `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` file with the following content:"
msgstr "创建具有以下内容的 `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` 文件。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "This is a basic REST endpoint that does not have any of the {extension-name} specific features, so let's add some."
msgstr "这是一个基本的REST端点，没有任何{extension-name}的具体功能，所以让我们添加一些。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "We will use the JSR 250 common security annotations, they are described in the xref:security.adoc[Using Security] guide."
msgstr "我们将使用 JSR 250 通用安全注释，它们在《 xref:security.adoc[使用安全] 》指南中有所描述。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "`@PermitAll` indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr " `@PermitAll` 表示给定的端点可以被任何调用者访问，无论是否经过验证。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Here we inject the JAX-RS `SecurityContext` to inspect the security state of the call."
msgstr "在这里，我们注入 JAX-RS `SecurityContext` 来检查调用的安全状态。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Here we obtain the current request user/caller `Principal`. For an unsecured call this will be null, so we build the username by checking `caller` against null."
msgstr "在这里我们获得当前的请求用户/呼叫者 `Principal` 。对于一个不安全的呼叫，这将是空的，所以我们通过检查 `caller` 与null建立用户名。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`."
msgstr "我们建立的回复利用了呼叫者的名字， `isSecure()` 和 `getAuthenticationScheme()` ，请求 `SecurityContext` 的状态。"

#. type: Title ===
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy, no-wrap
msgid "Setting up application.properties"
msgstr "设置application.properties"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "You need to configure your application with the following minimal properties:"
msgstr "你需要用以下最小的属性来配置你的应用程序。"

#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid ""
"You need to specify the introspection URL of your authentication server and the `client-id` / `client-secret` that your application will use to authenticate itself to the authentication server. +\n"
"The extension will then use this information to validate the token and recover the information associate with it."
msgstr ""
"您需要指定身份验证服务器的反省 URL 以及应用程序用于向身份验证服务器进行身份验证的 `client-id` / `client-secret` 。\n"
"\n"
" 然后，扩展将使用这些信息验证令牌并恢复与之相关的信息。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "For all configuration properties, see the <<config-reference,Configuration reference>> section at the end of this guide."
msgstr "有关所有配置属性，请参阅本指南末尾的 xref:config-reference[配置参考] 部分。"

#. type: Title ==
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "Run the application"
msgstr "运行应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "Now we are ready to run our application. Use:"
msgstr "现在我们准备运行我们的应用程序。使用："

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "现在，REST端点正在运行，我们可以使用curl这样的命令行工具来访问它："

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "We have not provided any token in our request, so we would not expect that there is any security state seen by the endpoint, and the response is consistent with that:"
msgstr "我们在请求中没有提供任何令牌，所以我们不会期望有任何安全状态被终端看到，而且响应也与此一致。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "username is anonymous"
msgstr "用户名称是匿名的"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "`isSecure` is false as https is not used"
msgstr " `isSecure` 是假的，因为没有使用https"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "`authScheme` is null"
msgstr " `authScheme` 为空"

#. type: Title ===
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy, no-wrap
msgid "Securing the endpoint"
msgstr "确保端点的安全"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "所以，现在让我们真正让一些东西变得安全。看看下面的新端点方法 `helloRolesAllowed` ："

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "This new endpoint will be located at `/secured/roles-allowed`"
msgstr "这个新的端点将位于 `/secured/roles-allowed` "

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "`@RolesAllowed` indicates that the given endpoint is accessible by a caller if they have either an \"Echoer\" or a \"Subscriber\" role assigned."
msgstr " `@RolesAllowed` 表示如果呼叫者分配了 \"Echoer \"或 \"Subscriber \"角色，那么他们就可以访问给定的端点。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "After you make this addition to your `TokenSecuredResource`, try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint. Your output should be:"
msgstr "在你对你的 `TokenSecuredResource` 做了这个补充之后，请尝试 `curl -v <a href=\"http://127.0.0.1:8080/secured/roles-allowed\" class=\"bare\">http://127.0.0.1:8080/secured/roles-allowed</a>; echo` 试图访问这个新的端点。你的输出应该是。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Excellent, we have not provided any OAuth2 token in the request, so we should not be able to access the endpoint, and we were not. Instead, we received an HTTP 401 Unauthorized error. We need to obtain and pass in a valid OAuth2 token to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate the token, and 2) generating a matching token with the appropriate claims."
msgstr "很好，我们在请求中没有提供任何OAuth2令牌，所以我们不应该能够访问这个端点，而我们没有。相反，我们收到了一个HTTP 401 Unauthorized的错误。我们需要获得并传入一个有效的OAuth2令牌来访问该端点。这有两个步骤，1）配置我们的{extension-name}扩展，并提供如何验证令牌的信息，以及2）生成一个匹配的令牌与适当的索赔。"

#. type: Title ===
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy, no-wrap
msgid "Generating a token"
msgstr "生成一个令牌"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "You need to obtain the token from a standard OAuth2 authentication server (https://www.keycloak.org/[Keycloak] for example) using the token endpoint."
msgstr "你需要使用令牌端点从标准OAuth2认证服务器 link:https://www.keycloak.org/[（] 例如 link:https://www.keycloak.org/[Keycloak] ）获取令牌。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "You can find below a curl example of such call for a `client_credential` flow:"
msgstr "你可以在下面找到这样一个调用 `client_credential` 流的curl例子。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "It should respond something like that..."
msgstr "它应该有这样的反应..."

#. type: Title ===
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy, no-wrap
msgid "Finally, make a secured request to /secured/roles-allowed"
msgstr "最后，向/secured/roles-allowed提出安全请求。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Now let's use this to make a secured request to the `/secured/roles-allowed` endpoint"
msgstr "现在让我们用它来向 `/secured/roles-allowed` 端点发出安全请求"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "Success! We now have:"
msgstr "成功了!我们现在有："

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "a non-anonymous caller name of client_id"
msgstr "一个非匿名的客户端_id的调用者名称"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "an authentication scheme of OAuth2"
msgstr "一个OAuth2的认证方案"

#. type: Title ==
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy, no-wrap
msgid "Roles mapping"
msgstr "角色映射"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Roles are mapped from one of the claims of the introspection endpoint response. By default, it's the `scope` claim. Roles are obtained by splitting the claim with a space separator. If the claim is an array, no splitting is done, the roles are obtained from the array."
msgstr "角色是从自省端点响应的一个要求中映射出来的。默认情况下，它是 `scope` 。角色是通过用空格分隔符分割索赔来获得的。如果要求是一个数组，则不做分割，角色从数组中获得。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "You can customize the name of the claim to use for the roles with the `quarkus.oauth2.role-claim` property."
msgstr "你可以用 `quarkus.oauth2.role-claim` 属性定制用于角色的索赔名称。"

#. type: Title ==
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "As usual, the application can be packaged using:"
msgstr "像往常一样，该应用程序可以用以下方式打包："

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`:"
msgstr "执行程序使用 `java -jar target/quarkus-app/quarkus-run.jar` ："

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
msgid "You can also generate the native executable with:"
msgstr "你也可以通过以下命令生成本地可执行文件:"

#. type: Title ==
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy, no-wrap
msgid "Integration testing"
msgstr "集成测试"

#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid ""
"If you don't want to use a real OAuth2 authorization server for your integration tests, you can use the\n"
"xref:security-properties.adoc[Properties based security] extension for your test, or mock an authorization server using Wiremock."
msgstr "如果不想在集成测试中使用真正的 OAuth2 授权服务器，可以在测试中使用 xref:security-properties.adoc[基于属性的安全] 扩展，或使用 Wiremock 模拟授权服务器。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "First, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr "首先，Wiremock需要被添加为一个测试依赖项。对于一个Maven项目来说，应该这样做。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[here]."
msgstr "使用合适的 Wiremock 版本。所有可用版本均可在 link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[此处] 找到。"

#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid ""
"In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource`\n"
"annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration\n"
"values that Quarkus will use."
msgstr "在 Quarkus 测试中，当需要在 Quarkus 测试运行之前启动某些服务时，我们利用 `@io.quarkus.test.common.QuarkusTestResource` 注解来指定一个 `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` ，它可以启动服务并提供 Quarkus 将使用的配置值。"

#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "For more details about `@QuarkusTestResource` refer to  xref:getting-started-testing.adoc#quarkus-test-resource[this part of the documentation]."
msgstr "关于 `@QuarkusTestResource` 的更多细节，请参考 link:getting-started-testing.html#quarkus-test-resource[这部分文件] 。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `MockAuthorizationServerTestResource` like so:"
msgstr "让我们创建一个 `QuarkusTestResourceLifecycleManager` 的实现，叫做 `MockAuthorizationServerTestResource` ，像这样。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr " `start` 方法在任何测试运行之前被Quarkus调用，并返回在测试执行期间适用的配置属性 `Map` 。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Launch Wiremock."
msgstr "启动Wiremock。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Configure Wiremock to stub the calls to `/introspect` by returning an OAuth2 introspect response. You need to customize this line to return what's needed for your application (at least the scope property as roles are derived from the scope)."
msgstr "配置Wiremock，通过返回一个OAuth2 introspect响应来存留对 `/introspect` 的调用。你需要自定义这一行，以返回你的应用程序所需要的东西（至少是范围属性，因为角色是由范围派生的）。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "As the `start` method returns configuration that applies for tests, we set the `quarkus.oauth2.introspection-url` property that controls the URL of the introspect endpoint used by the OAuth2 extension."
msgstr "由于 `start` 方法返回适用于测试的配置，我们设置 `quarkus.oauth2.introspection-url` 属性，该属性控制OAuth2扩展使用的introspect端点的URL。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "When all tests have finished, shutdown Wiremock."
msgstr "当所有测试完成后，关闭Wiremock。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Your test class needs to be annotated like with `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` to use this `QuarkusTestResourceLifecycleManager`."
msgstr "你的测试类需要像 `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` ，以使用这个 `QuarkusTestResourceLifecycleManager` 。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Below is an example of a test that uses the `MockAuthorizationServerTestResource`."
msgstr "下面是一个使用 `MockAuthorizationServerTestResource` .NET的测试例子。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Use the previously created `MockAuthorizationServerTestResource` as a Quarkus test resource."
msgstr "使用先前创建的 `MockAuthorizationServerTestResource` 作为Quarkus测试资源。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Define whatever token you want, it will not be validated by the OAuth2 mock authorization server."
msgstr "无论您想定义什么令牌，OAuth2 模拟授权服务器都不会对其进行验证。"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "Use this token inside the `Authorization` header to trigger OAuth2 authentication."
msgstr "在 `Authorization` 标头中使用此令牌可触发 OAuth2 身份验证。"

#. type: delimited block =
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "`@QuarkusTestResource` applies to all tests, not just `TokenSecuredResourceTest`."
msgstr "`@QuarkusTestResource` 适用于所有测试，而不仅仅是 。 `TokenSecuredResourceTest`"

#. type: Title ==
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "https://tools.ietf.org/html/rfc6749[OAuth2]"
msgstr "link:https://tools.ietf.org/html/rfc6749[OAuth2]"

#. type: Plain text
#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "xref:security.adoc[夸克安全]"

#. type: Title ==
#: _versions/2.13/guides/security-oauth2.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/2.13/guides/security-oauth2.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
