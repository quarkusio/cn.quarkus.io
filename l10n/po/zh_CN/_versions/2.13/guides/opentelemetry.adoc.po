# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-19 17:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Using OpenTelemetry"
msgstr "使用OpenTelemetry"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] to provide\n"
"distributed tracing for interactive web applications."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "In this guide, we create a straightforward REST application to demonstrate distributed tracing."
msgstr "在本指南中，我们创建了一个简单的REST应用程序来演示分布式跟踪服务。"

#. type: Title ==
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "The solution is located in the `opentelemetry-quickstart` {quickstarts-tree-url}/opentelemetry-quickstart[directory]."
msgstr "该解决方案位于 `opentelemetry-quickstart` {quickstarts-tree-url}/opentelemetry-quickstart[目录]中。"

#. type: Title ==
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"This command generates the Maven project and imports the `quarkus-opentelemetry-exporter-otlp` extension,\n"
"which includes the OpenTelemetry support,\n"
"and a gRPC span exporter for https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `quarkus-opentelemetry-exporter-otlp` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Examine the JAX-RS resource"
msgstr "检查JAX-RS资源"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Create a `src/main/java/org/acme/opentelemetry/TracedResource.java` file with the following content:"
msgstr "创建一个 `src/main/java/org/acme/opentelemetry/TracedResource.java` 文件，内容如下："

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"Notice that there is no tracing specific code included in the application. By default, requests sent to this\n"
"endpoint will be traced without any required code changes."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Create the configuration"
msgstr "创建配置"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "There are two ways to configure the OTLP gRPC Exporter within the application."
msgstr "有两种方法可以在应用程序中配置OTLP gRPC exporter。"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "The first approach is by providing the properties within the `src/main/resources/application.properties` file:"
msgstr "第一种方法是通过在 `src/main/resources/application.properties` 文件内提供配置:"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "All spans created from the application will include an OpenTelemetry `Resource` indicating the span was created by the `myservice` application. If not set, it will default to the artifact id."
msgstr "所有从应用程序创建的spans将包含一个OpenTelemetry `Resource` ，表明该span是由 `myservice` 应用程序创建。如果没有设置，它将默认为artifact id。"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Whether OpenTelemetry is enabled or not. The default is `true`, but shown here to indicate how it can be disabled"
msgstr "OpenTelemetry是否已启用。默认是 `true` ，但放在这里是用来展示如何禁用它"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "gRPC endpoint for sending spans"
msgstr "用于发送spans的gRPC节点"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Optional gRPC headers commonly used for authentication"
msgstr "可选的gRPC消息头，通常用于认证"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Add tracing information into log message."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "You can also only put the trace info into the access log. In this case you must omit the info in the console log format."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Run the application"
msgstr "运行应用程序"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "The first step is to configure and start the https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] to receive, process and export telemetry data to https://www.jaegertracing.io/[Jaeger] that will display the captured traces."
msgstr "第一步是配置和启动 link:https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] ，以接收、处理和输出勘测数据到 link:https://www.jaegertracing.io/[Jaeger] 来显示捕获的traces。"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"Jaeger supports the OTel protocols out of the box since version 1.35.\n"
"In this case you do not need to install the collector but can directly send the trace data to Jaeger (after enabling OTLP receivers there, see e.g. this\n"
"https://medium.com/jaegertracing/introducing-native-support-for-opentelemetry-in-jaeger-eb661be8183c[blog entry])."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Configure the OpenTelemetry Collector by creating an `otel-collector-config.yaml` file:"
msgstr "通过创建一个 `otel-collector-config.yaml` 文件来配置OpenTelemetry Collector："

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Start the OpenTelemetry Collector and Jaeger system via the following `docker-compose.yml` file that you can launch via `docker-compose up -d`:"
msgstr "您可以通过 `docker-compose up -d` 命令和下面的 `docker-compose.yml` 文件来启动OpenTelemetry Collector和Jaeger系统："

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Now we are ready to run our application. If using `application.properties` to configure the tracer:"
msgstr "现在我们准备运行我们的应用程序。如果使用 `application.properties` 来配置tracer："

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "or if configuring the OTLP gRPC endpoint via JVM arguments:"
msgstr "或者如果通过JVM参数配置OTLP gRPC节点："

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "With the OpenTelemetry Collector, Jaeger system and application running, you can make a request to the provided endpoint:"
msgstr "在OpenTelemetry Collector、Jaeger系统和应用程序运行的情况下，您可以向指定的节点发出请求："

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "When the first request has been submitted, you will be able to see the tracing information in the logs:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Then visit the http://localhost:16686[Jaeger UI] to see the tracing information."
msgstr "然后访问 link:http://localhost:16686[Jaeger界面] 来查看追踪信息。"

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Hit `CTRL+C` to stop the application."
msgstr "使用 `CTRL+C` 来停止应用程序。"

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "JDBC"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "The https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBC instrumentation] will add a span for each JDBC queries done by your application, to enable it, add the following dependency to your build file:"
msgstr "通过link:https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBC instrumentation] 可以为您的应用程序的每个JDBC查询添加一个span。要启用它，请在您的构建文件中添加以下依赖："

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "As it uses a dedicated JDBC driver, you must configure your datasource and Hibernate ORM to use it."
msgstr "由于它使用专用的JDBC驱动，您必须配置您的数据源和Hibernate ORM来使用它。"

#. type: Title ==
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Additional configuration"
msgstr "其他配置"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"Some use cases will require custom configuration of OpenTelemetry.\n"
"These sections will outline what is necessary to properly configure it."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "ID Generator"
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"The OpenTelemetry extension will use by default a random https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID Generator]\n"
"when creating the trace and span identifier."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"Some vendor-specific protocols need a custom ID Generator, you can override the default one by creating a producer.\n"
"The OpenTelemetry extension will detect the `IdGenerator` CDI bean and will use it when configuring the tracer producer."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Propagators"
msgstr "Propagators"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"OpenTelemetry propagates cross-cutting concerns through https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[propagators] that will share an underlying `Context` for storing state and accessing\n"
"data across the lifespan of a distributed transaction."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"By default, the OpenTelemetry extension enables the https://www.w3.org/TR/trace-context/[W3C Trace Context] and the https://www.w3.org/TR/baggage/[W3C Baggage]\n"
"propagators, you can however choose any of the supported OpenTelemetry propagators by setting the `propagators` config that is described in the <<configuration-reference>>."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"The `b3`, `b3multi`, `jaeger` and `ottrace` propagators will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators]\n"
"extension to be added as a dependency to your project."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "The `xray` propagator will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/aws[aws] extension to be added as a dependency to your project."
msgstr "`xray` propagator需要将 link:https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/aws[aws] 扩展作为依赖添加到您的项目中。"

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Resource"
msgstr "资源"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[resource] is a representation\n"
"of the entity that is producing telemetry, it adds attributes to the exported trace to characterize who is producing the trace."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"You can add attributes by setting the `resource-attributes` tracer config that is described in the <<configuration-reference>>.\n"
"Since this property can be overridden at runtime, the OpenTelemetry extension will pick up its value following the order of precedence that\n"
"is described in the xref:config-reference.adoc#configuration-sources[Quarkus Configuration Reference]."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"If by any means you need to use a custom resource or one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions]\n"
"you can create multiple resource producers. The OpenTelemetry extension will detect the `Resource` CDI beans and will merge them when configuring the tracer producer."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Sampler"
msgstr "采样器(Sampler)"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[sampler] decides whether\n"
"a trace should be sampled and exported, controlling noise and overhead by reducing the number of sample of traces collected and sent\n"
"to the collector."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"You can set a https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[built-in sampler]\n"
"simply by setting the desired sampler config described in the <<configuration-reference>>."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"If you need to use a custom sampler or to use one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions]\n"
"you can create a sampler producer. The OpenTelemetry extension will detect the `Sampler` CDI bean and will use it when configuring the tracer producer."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "Additional instrumentation"
msgstr "其他的植入(instrumentation)"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"Some Quarkus extensions will require additional code to ensure traces are propagated to subsequent execution.\n"
"These sections will outline what is necessary to propagate traces across process boundaries."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "The instrumentation documented in this section has been tested with Quarkus and works in both standard and native mode."
msgstr "本节中用到的植入方式已经过Quarkus测试，并且在标准和本地模式下都能工作。"

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "CDI"
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"Annotating a method in any CDI aware bean with the `io.opentelemetry.extension.annotations.WithSpan`\n"
"annotation will create a new Span and establish any required relationships with the current Trace context."
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"Method parameters can be annotated with the `io.opentelemetry.extension.annotations.SpanAttribute` annotation to\n"
"indicate which method parameters should be part of the Trace."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/opentelemetry.adoc
msgid "Example:"
msgstr "例如："

#. type: Title ===
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "SmallRye Reactive Messaging - Kafka"
msgstr "SmallRye Reactive Messaging - Kafka"

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"When using the SmallRye Reactive Messaging extension for Kafka,\n"
"we are able to propagate the span into the Kafka Record with:"
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid ""
"The above creates a `TracingMetadata` object we can add to the `Message` being produced,\n"
"which retrieves the OpenTelemetry `Context` to extract the current span for propagation."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/opentelemetry.adoc
#, no-wrap
msgid "OpenTelemetry Configuration Reference"
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#: _versions/2.13/guides/opentelemetry.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-1\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
