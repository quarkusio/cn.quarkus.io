# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-12-20 12:11+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Writing simpler reactive REST services with Quarkus Virtual Thread support"
msgstr "利用 Quarkus 虚拟线程支持编写更简单的反应式 REST 服务"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "This guide explains how to benefit from Java 19 virtual threads when writing REST services in Quarkus."
msgstr "本指南介绍了在 Quarkus 中编写 REST 服务时如何利用 Java 19 虚拟线程。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"This is the reference guide for using virtual threads to write reactive REST services.\n"
"Please refer to the xref:rest-json.adoc[Writing JSON REST services guides] for a lightweight introduction to reactive REST\n"
"services and to the xref:resteasy-reactive.adoc[Writing REST Services with RESTEasy Reactive] guide for a detailed presentation."
msgstr "这是使用虚拟线程编写反应式 REST 服务的参考指南。有关反应式 REST 服务的轻量级介绍，请参阅《 xref:rest-json.adoc[编写 JSON REST 服务》指南] ；有关详细介绍，请参阅《 xref:resteasy-reactive.adoc[使用 RESTEasy Reactive 编写 REST 服务] 》指南。"

#. type: Title ==
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "What are virtual threads ?"
msgstr "什么是虚拟线程？"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Terminology"
msgstr "术语"

#. type: Labeled list
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "OS thread"
msgstr "操作系统线程"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "A \"thread-like\" data-structure managed by the Operating System."
msgstr "由操作系统管理的 \"线程式 \"数据结构。"

#. type: Labeled list
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Platform thread"
msgstr "平台螺纹"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Up until Java 19, every instance of the link:{thread}[Thread] class was a platform thread, that is, a wrapper around an OS thread.\n"
"Creating a platform threads creates an OS thread, blocking a platform thread blocks an OS thread."
msgstr "在 Java 19 之前， link:{thread}[Thread] 类的每个实例都是平台线程，即操作系统线程的包装器。创建一个平台线程就会创建一个操作系统线程，阻塞一个平台线程就会阻塞一个操作系统线程。"

#. type: Labeled list
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Virtual thread"
msgstr "虚拟线程"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Lightweight, JVM-managed threads. They extend the link:{thread}[Thread] class but are not tied to one specific OS thread.\n"
"Thus, scheduling virtual threads is the responsibility of the JVM."
msgstr "由 JVM 管理的轻量级线程。它们扩展了 link:{thread}[线程] 类，但不与特定的操作系统线程绑定。因此，调度虚拟线程是 JVM 的职责。"

#. type: Labeled list
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Carrier thread"
msgstr "承载线"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"A platform thread used to execute a virtual thread is called a carrier.\n"
"This isn't a class distinct from link:{Thread}[Thread] or VirtualThread but rather a functional denomination."
msgstr "用于执行虚拟线程的平台线程称为载体。这不是一个有别于 link:{Thread}[Thread] 或 VirtualThread 的类，而是一个功能名称。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Differences between virtual threads and platform threads"
msgstr "虚拟线程和平台线程之间的区别"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "We will give a brief overview of the topic here, please refer to the link:{vthreadjep}[JEP 425] for more information."
msgstr "我们将在此简要介绍该主题，更多信息请参阅 link:{vthreadjep}[JEP 425] 。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "Virtual threads are a feature available since Java 19 aiming at providing a cheap alternative to platform threads for I/O-bound workloads."
msgstr "虚拟线程是 Java 19 开始提供的一项功能，旨在为 I/O 绑定工作负载提供廉价的平台线程替代品。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Until now, platform threads were the concurrency unit of the JVM.\n"
"They are a wrapper over OS structures.\n"
"This means that creating a Java platform thread actually results in creating a \"thread-like\" structure in your operating system."
msgstr "迄今为止，平台线程一直是 JVM 的并发单元。它们是操作系统结构的封装。这意味着，创建 Java 平台线程实际上就是在操作系统中创建一个 \"类线程 \"结构。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Virtual threads on the other hand are managed by the JVM. In order to be executed, they need to be mounted on a platform thread\n"
"(which acts as a carrier to that virtual thread).\n"
"As such, they have been designed to offer the following characteristics:"
msgstr "虚拟线程则由 JVM 管理。要执行虚拟线程，必须将其安装在平台线程上（平台线程是虚拟线程的载体）。因此，虚拟线程在设计上具有以下特点："

#. type: Labeled list
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Lightweight "
msgstr "轻量级"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Virtual threads occupy less space than platform threads in memory.\n"
"Hence, it becomes possible to use more virtual threads than platform threads simultaneously without blowing up the heap.\n"
"By default, platform threads are created with a stack of about 1 MB where virtual threads stack is \"pay-as-you-go\".\n"
"You can find these numbers along with other motivations for virtual threads in this presentation given by the lead developer of project Loom: https://youtu.be/lIq-x_iI-kc?t=543."
msgstr "虚拟线程占用的内存空间比平台线程小。因此，可以同时使用比平台线程更多的虚拟线程，而不会占用堆。默认情况下，平台线程的堆栈约为 1 MB，而虚拟线程的堆栈是 \"即用即付 \"的。您可以在 Loom 项目首席开发者的演讲中找到这些数字以及使用虚拟线程的其他原因 link:https://youtu.be/lIq-x_iI-kc?t=543[：https://youtu.be/lIq-x_iI-kc?t=543。]"

#. type: Labeled list
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Cheap to create"
msgstr "创建成本低"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Creating a platform thread in Java takes time.\n"
"Currently, techniques such as pooling where threads are created once then reused are strongly encouraged to minimize the\n"
"time lost in starting them (as well as limiting the maximum number of threads to keep memory consumption low).\n"
"Virtual threads are supposed to be disposable entities that we create when we need them,\n"
"it is discouraged to pool them or to reuse them for different tasks."
msgstr "在 Java 中创建平台线程需要时间。目前，为了尽量减少启动线程所耗费的时间（以及限制线程的最大数量以降低内存消耗），我们大力提倡池化等技术，即创建一次线程然后重复使用。虚拟线程应该是我们在需要时创建的一次性实体，我们不鼓励将其汇集起来或在不同任务中重复使用。"

#. type: Labeled list
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Cheap to block"
msgstr "便于封锁"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"When performing blocking I/O, the underlying OS thread wrapped by the Java platform thread is put in a\n"
"wait queue and a context switch occurs to load a new thread context onto the CPU core. This operation takes time.\n"
"Since virtual threads are managed by the JVM, no underlying OS thread is blocked when they perform a blocking operation.\n"
"Their state is simply stored in the heap and another Virtual thread is executed on the same Java platform thread."
msgstr "执行阻塞 I/O 时，由 Java 平台线程封装的底层操作系统线程会被放入等待队列，并进行上下文切换，将新的线程上下文加载到 CPU 内核上。这一操作需要时间。由于虚拟线程由 JVM 管理，因此在执行阻塞操作时，底层操作系统线程不会被阻塞。它们的状态只需存储在堆中，然后在同一个 Java 平台线程上执行另一个虚拟线程。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Virtual threads are useful for I/O-bound workloads only"
msgstr "虚拟线程只对I/O绑定的工作负载有用"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"We now know that we can create way more virtual threads than platform threads. One could be tempted to use virtual threads\n"
"to perform long computations (CPU-bound workload).\n"
"This is useless if not counterproductive.\n"
"CPU-bound doesn't consist in quickly swapping threads while they need to wait for the completion of an I/O but in leaving\n"
"them attached to a CPU-core to actually compute something.\n"
"In this scenario, it is useless to have thousands of threads if we have tens of CPU-cores, virtual threads won't enhance\n"
"the performance of CPU-bound workloads."
msgstr "我们现在知道，我们可以创建比平台线程多得多的虚拟线程。我们可能会倾向于使用虚拟线程来执行长时间计算（CPU 绑定工作负载）。这即使不是适得其反，也是毫无用处的。CPU 绑定并不包括在线程需要等待 I/O 完成时快速交换线程，而是让线程连接到 CPU 内核以实际计算某些内容。在这种情况下，如果我们有几十个 CPU 核心，那么拥有上千个线程是没有用的，虚拟线程不会提高 CPU 绑定工作负载的性能。"

#. type: Title ==
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Bringing virtual threads to reactive REST services"
msgstr "为反应式 REST 服务引入虚拟线程"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Since virtual threads are disposable entities, the fundamental idea of quarkus-loom is to offload the execution of an\n"
"endpoint handler on a new virtual thread instead of running it on an event-loop (in the case of RESTeasy-reactive) or a\n"
"platform worker thread."
msgstr "由于虚拟线程是一次性实体，quarkus-loom 的基本思想是在新的虚拟线程上卸载端点处理程序的执行，而不是在事件循环（在 RESTeasy-reactive 的情况下）或平台工作线程上运行。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"To do so, it suffices to add the link:{runonvthread}[@RunOnVirtualThread] annotation to the endpoint.\n"
"If the JDK is compatible (Java 19 or later versions) then the endpoint will be offloaded to a virtual thread.\n"
"It will then be possible to perform blocking operations without blocking the platform thread upon which the virtual\n"
"thread is mounted."
msgstr "为此，只需在端点中添加 link:{runonvthread}[@RunOnVirtualThread] 注解即可。如果 JDK 兼容（Java 19 或更高版本），端点将被卸载到虚拟线程。这样就可以执行阻塞操作，而不会阻塞虚拟线程所在的平台线程。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"This annotation can only be used in conjunction with endpoints annotated with link:{blockingannotation}[@Blocking] or\n"
"considered blocking because of their signature.\n"
"You can visit xref:resteasy-reactive.adoc#execution-model-blocking-non-blocking[Execution model, blocking, non-blocking]\n"
"for more information."
msgstr "此注解只能与注解为 link:{blockingannotation}[@Blocking] 或因其签名而被视为阻塞的端点结合使用。更多信息，请访问 xref:resteasy-reactive.adoc#execution-model-blocking-non-blocking[执行模型、阻塞、非阻塞] 。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Getting started"
msgstr "开始工作"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "Add the following import to your build file:"
msgstr "在你的构建文件中添加以下导入。"

#. type: Block title
#: _versions/2.13/guides/virtual-threads.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/virtual-threads.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "You also need to make sure that you are using the version 19 of Java, this can be enforced in your pom.xml file with the following:"
msgstr "您还需要确保使用的是 19 版本的 Java，这可以在 pom.xml 文件中通过以下方式实现："

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "Virtual threads are still an experimental feature, you need to start your application with the `--enable-preview` flag:"
msgstr "虚拟线程仍是一项试验性功能，需要使用 `--enable-preview` 标志启动应用程序："

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"The example below shows the differences between three endpoints, all of them querying a fortune in the database then\n"
"returning it to the client."
msgstr "下面的示例显示了三个端点之间的差异，它们都是查询数据库中的一笔财富，然后返回给客户端。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "the first one uses the traditional blocking style, it is considered blocking due to its signature."
msgstr "第一个是使用传统的阻断方式，由于其特征，它被认为是阻断。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "the second one uses Mutiny reactive streams in a declarative style, it is considered non-blocking due to its signature."
msgstr "第二个版本以声明的方式使用 Mutiny 反应流，由于其签名，它被认为是非阻塞的。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"the third one uses Mutiny reactive streams in a synchronous way, since it doesn't return a \"reactive type\" it is\n"
"considered blocking and the link:{runonvthread}[@RunOnVirtualThread] annotation can be used."
msgstr "第三种方法以同步方式使用 Mutiny 反应流，因为它不返回 \"反应类型\"，所以被认为是阻塞的，可以使用 link:{runonvthread}[@RunOnVirtualThread] 注解。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"When using Mutiny, alternative \"xAndAwait\" methods are provided to be used with virtual threads.\n"
"They ensure that waiting for the completion of the I/O will not \"pin\" the carrier thread and deteriorate performance.\n"
"Pinning is a phenomenon that we describe in xref:Pinning cases[this section]."
msgstr "在使用 Mutiny 时，提供了与虚拟线程一起使用的替代 \"xAndAwait \"方法。它们能确保在等待 I/O 完成时不会 \"钉住 \"载体线程，从而降低性能。我们将在 xref:Pinning cases[本节] 中描述 \"钉住 \"现象。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"In other words, the mutiny environment is a safe environment for virtual threads.\n"
"The guarantees offered by Mutiny are detailed later."
msgstr "换句话说，Mutiny 环境是虚拟线程的安全环境。稍后将详细介绍 Mutiny 提供的保证。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Simplifying complex logic"
msgstr "简化复杂逻辑"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"The previous example is trivial and doesn't capture how imperative style can simplify complex reactive operations.\n"
"Below is a more complex example.\n"
"The endpoints must now fetch all the fortunes in the database, then append a quote to each fortune before finally returning\n"
"the result to the client."
msgstr "前面的例子很琐碎，没有体现命令式风格如何简化复杂的反应式操作。下面是一个更复杂的示例。端点现在必须获取数据库中的所有运势，然后在每个运势上附加一个引号，最后将结果返回给客户端。"

#. type: Title ==
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Pinning cases"
msgstr "钉子案"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"The notion of \"cheap blocking\" might not always be true: in certain occasions a virtual thread might \"pin\" its carrier\n"
"(the platform thread it is mounted upon).\n"
"In this situation, the platform thread is blocked exactly as it would have been in a typical blocking scenario."
msgstr "廉价阻塞 \"的概念可能并不总是正确的：在某些情况下，虚拟线程可能会 \"钉住 \"它的载体（它所挂载的平台线程）。在这种情况下，平台线程会被阻塞，就像在典型的阻塞情况下一样。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "According to link:{vthreadjep}[JEP 425] this can happen in two situations:"
msgstr "根据 link:{vthreadjep}[JEP425] ，这可能发生在两种情况下。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "when a virtual thread performs a blocking operation inside a `synchronized` block or method"
msgstr "当一个虚拟线程在一个 `synchronized` 块或方法内执行一个阻塞操作时"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "when it executes a blocking operation inside a native method or a foreign function"
msgstr "当它在一个本地方法或外国函数中执行一个阻塞操作时"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"It can be fairly easy to avoid these situations in our own code, but it is hard to verify every dependency we use.\n"
"Typically, while experimenting with virtual-threads, we realized that using the link:{pgsql-driver}[postgresql-JDBC driver]\n"
"results in frequent pinning."
msgstr "在我们自己的代码中避免这些情况是相当容易的，但很难验证我们使用的每一个依赖关系。典型的例子是，在尝试使用虚拟线程时，我们发现使用 link:{pgsql-driver}[postgresql-JDBC 驱动程序] 会导致频繁的钉扎。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "The JDBC problem"
msgstr "JDBC 问题"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Our experiments so far show that when a virtual thread queries a database using the JDBC driver, it will pin its carrier\n"
"thread during the entire operation."
msgstr "我们迄今为止的实验表明，当虚拟线程使用 JDBC 驱动程序查询数据库时，它会在整个操作过程中锁定其载体线程。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "Let's show the code of the `findAllBlocking()` method we used in the first example"
msgstr "让我们看看第一个例子中使用的 `findAllBlocking()` 方法的代码"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"The actual query happens at `ResultSet rs = preparedStatement.executeQuery();`, here is how it is implemented in the\n"
"postgresql-jdbc driver 42.5.0:"
msgstr "实际查询发生在 `ResultSet rs = preparedStatement.executeQuery();` ，下面是 postgresql-jdbc 驱动程序 42.5.0 的实现方式："

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"This `synchronized` block is the culprit.\n"
"Replacing it with a lock is a good solution, but it won't be enough: `synchronized` blocks are also used in `executeWithFlags(int flag)`.\n"
"A systematic review of the postgresql-jdbc driver is necessary to make sure that it is compliant with virtual threads."
msgstr "`synchronized` 块就是罪魁祸首。用锁代替它是一个很好的解决方案，但这还不够： `synchronized` 块也用于 `executeWithFlags(int flag)` 。有必要对 postgresql-jdbc 驱动程序进行系统审查，以确保它与虚拟线程兼容。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Reactive drivers at the rescue"
msgstr "被动驾驶员在救援"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"The vertx-sql-client is a reactive client, hence it is not supposed to block while waiting for the completion of a\n"
"transaction with the database.\n"
"However, when using the link:{mutiny-vertx-sql}[smallrye-mutiny-vertx-sqlclient] it is possible to use a variant method\n"
"that will await for the completion of the transaction, mimicking a blocking behaviour."
msgstr "vertx-sql-client 是一个反应式客户端，因此在等待数据库事务完成时不应该阻塞。不过，在使用 link:{mutiny-vertx-sql}[smallrye-mutiny-vertx-sqlclient] 时，可以使用一个变体方法来等待事务完成，模仿阻塞行为。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "Below is the `FortuneRepository` except the blocking we've seen earlier has been replaced by reactive methods."
msgstr "下面是 `FortuneRepository` ，除了我们之前看到的阻塞已被反应式方法取代。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Contrary to the link:{pgsql-driver}[postgresql-jdbc driver], no `synchronized` block is used where it shouldn't be, and\n"
"the `await` behaviour is implemented using locks and latches that won't cause pinning."
msgstr "与 link:{pgsql-driver}[postgresql-jdbc 驱动程序] 相反， `synchronized` 块不会用在不该用的地方，而且 `await` 行为是通过锁和锁存器实现的，不会导致钉销。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Using the synchronous methods of the link:{mutiny-vertx-sql}[smallrye-mutiny-vertx-sqlclient] along with virtual threads\n"
"will allow you to use the synchronous blocking style, avoid pinning the carrier thread, and get performance close to a pure\n"
"reactive implementation."
msgstr "使用 link:{mutiny-vertx-sql}[smallrye-mutiny-vertx-sqlclient] 的同步方法和虚拟线程，可以使用同步阻塞样式，避免固定载体线程，并获得接近纯反应式实现的性能。"

#. type: Title ==
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "A point about performance"
msgstr "关于性能的一点"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"Our experiments seem to indicate that Quarkus with virtual threads will scale better than Quarkus blocking (offloading\n"
"the computation on a pool of platform worker threads) but not as well as Quarkus reactive.\n"
"The memory consumption especially might be an issue: if your system needs to keep its memory footprint low we would\n"
"advise you stick to using reactive constructs."
msgstr "我们的实验似乎表明，使用虚拟线程的 Quarkus 比 Quarkus 阻塞式（在平台工作线程池上卸载计算）的扩展性更好，但不如 Quarkus 反应式。内存消耗尤其可能是一个问题：如果你的系统需要保持较低的内存占用，我们建议你坚持使用反应式结构。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"This degradation of performance doesn't seem to come from virtual threads themselves but from the interactions between\n"
"Vert.x/Netty (Quarkus underlying reactive engine) and the virtual threads.\n"
"This was illustrated in the issue that we will now describe."
msgstr "这种性能下降似乎不是来自虚拟线程本身，而是来自 Vert.x/Netty（Quarkus 的底层反应式引擎）与虚拟线程之间的交互。我们现在要描述的问题就说明了这一点。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "The Netty problem"
msgstr "Netty 问题"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"For JSON serialization, Netty uses their custom implementation of thread locals, `FastThreadLocal` to store buffers.\n"
"When using virtual threads in quarkus, the number of virtual threads simultaneously living in the service is directly\n"
"related to the incoming traffic.\n"
"It is possible to get hundreds of thousands, if not millions, of them."
msgstr "对于 JSON 序列化，Netty 使用其自定义实现的线程本地 `FastThreadLocal` 来存储缓冲区。在 quarkus 中使用虚拟线程时，服务中同时存在的虚拟线程数量与传入流量直接相关。虚拟线程的数量有可能达到数十万甚至数百万。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"If they need to serialize some data to JSON they will end up creating as many instances of `FastThreadLocal`, resulting\n"
"on a massive memory consumption as well as exacerbated pressure on the garbage collector.\n"
"This will eventually affect the performance of the application and inhibit its scalability."
msgstr "如果需要将某些数据序列化为 JSON，他们最终会创建多个 `FastThreadLocal` 实例，从而导致大量内存消耗，并加重垃圾收集器的压力。这最终会影响应用程序的性能，抑制其可扩展性。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"This is a perfect example of the mismatch between the reactive stack and the virtual threads.\n"
"The fundamental hypothesis are completely different and result in different optimizations.\n"
"Netty expects a system using few event-loops (as many event-loops as CPU cores by default in Quarkus), but it gets hundreds\n"
"of thousands of threads.\n"
"You can refer to link:https://mail.openjdk.org/pipermail/loom-dev/2022-July/004844.html[this mail] to get more information\n"
"on how we envision our future with virtual threads."
msgstr "这是反应堆栈和虚拟线程不匹配的一个完美例子。两者的基本假设完全不同，导致了不同的优化结果。Netty 期望系统只使用很少的事件循环（Quarkus 默认的事件循环数与 CPU 内核数相同），但它得到的却是成千上万的线程。你可以参阅 link:https://mail.openjdk.org/pipermail/loom-dev/2022-July/004844.html[这封邮件] ，了解更多关于我们如何设想未来虚拟线程的信息。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Our solution to the Netty problem"
msgstr "我们对 Netty 问题的解决方案"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"In order to avoid this wasting of resource without modifying Netty upstream, we wrote an extension that modifies the\n"
"bytecode of the class responsible for creating the thread locals at build time.\n"
"Using this extension, performance of virtual threads in Quarkus for the Json Serialization test of the Techempower suite\n"
"increased by nearly 80%, making it almost as good as reactive endpoints."
msgstr "为了避免这种资源浪费，我们编写了一个扩展，在构建时修改负责创建线程本地的类的字节码。使用该扩展后，Quarkus 中虚拟线程在 Techempower 套件的 Json 序列化测试中的性能提高了近 80%，几乎与反应式端点不相上下。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "To use it, it needs to be added as a dependency:"
msgstr "要使用它，需要将其添加为依赖项："

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "Furthermore, some operations undertaken by this extension need special access, it is necessary to"
msgstr "此外，该分机进行的某些操作需要特殊通道，因此有必要"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "compile the application with the flag `-Dnet.bytebuddy.experimental`"
msgstr "编译应用程序时使用 `-Dnet.bytebuddy.experimental`"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "open the `java.base.lang` module at runtime with the flag `--add-opens java.base/java.lang=ALL-UNNAMED`"
msgstr "运行时打开 `java.base.lang` 模块，标记为 `--add-opens java.base/java.lang=ALL-UNNAMED`"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "This extension is only intended to improve performance, it is perfectly fine not to use it."
msgstr "该扩展只是为了提高性能，不使用它也完全没有问题。"

#. type: Title ===
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy, no-wrap
msgid "Concerning dev mode"
msgstr "关于开发模式"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"If you want to use quarkus with the dev mode, it won't be possible to manually specify the flags we mentioned along this guide.\n"
"Instead, you want to specify them all in the configuration of the `quarkus-maven-plugin` as presented below."
msgstr "如果你想在开发模式下使用 quarkus，就无法手动指定本指南中提到的标志。相反，你需要在 `quarkus-maven-plugin` 的配置中指定它们，如下所示。"

#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid ""
"If you don't want to specify the opening of the `java.lang` module in your pom.xml file, you can also specify it as an argument\n"
"when you start the dev mode."
msgstr "如果不想在 pom.xml 文件中指定打开 `java.lang` 模块，也可以在启动开发模式时将其指定为参数。"

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "The configuration of the quarkus-maven-plugin will be simpler:"
msgstr "quarkus-maven-plugin 的配置将更加简单："

#. type: Plain text
#: _versions/2.13/guides/virtual-threads.adoc
#, fuzzy
msgid "And the command will become:"
msgstr "命令将变成"
