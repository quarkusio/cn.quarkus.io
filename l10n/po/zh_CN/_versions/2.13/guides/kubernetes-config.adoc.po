# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-17 12:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Kubernetes Config"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Quarkus includes the `kubernetes-config` extension which allows developers to use Kubernetes https://cloud.google.com/kubernetes-engine/docs/concepts/configmap[ConfigMaps] and https://cloud.google.com/kubernetes-engine/docs/concepts/secret[Secrets] as a configuration source, without having to mount them into the https://kubernetes.io/docs/concepts/workloads/pods/pod/[Pod] running the Quarkus application or make any other modifications to their Kubernetes `Deployment` (or OpenShift `DeploymentConfig`)."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Configuration"
msgstr ""

#: _versions/2.13/guides/kubernetes-config.adoc
msgid ""
"Once you have your Quarkus project configured you can add the `kubernetes-config` extension\n"
"by running the following command in your project base directory."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Usage"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "The extension works by reading ConfigMaps and Secrets directly from the Kubernetes API server using the xref:kubernetes-client.adoc[Kubernetes Client]."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "The extension understands the following types of ConfigMaps and Secrets as input sources:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "ConfigMaps and Secrets that contain literal data (see https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-literal-values[this] for an example on how to create one)"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "ConfigMaps and Secrets created from files named `application.properties`, `application.yaml` or `application.yml` (see https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-files[this] for an example on how to create one)."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "The extension is disabled by default in order to prevent the application for making API calls when it is not running in a Kubernetes environment. To enable it, set `quarkus.kubernetes-config.enabled=true` (for example using a specific xref:config-reference.adoc#profiles[profile])."
msgstr ""

#: _versions/2.13/guides/kubernetes-config.adoc
msgid ""
"The values of `quarkus.kubernetes-config.config-maps` and `quarkus.kubernetes-config.secrets` determine which ConfigMaps and/or Secrets will be used as configuration sources. Keep in mind that these ConfigMaps and Secrets must be in the same Kubernetes `Namespace`\n"
"as the running application. If they are to be found in a different namespace, then `quarkus.kubernetes-config.namespace` must be set to the proper value."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Priority of obtained properties"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "The properties obtained from the ConfigMaps and Secrets have a higher priority than (i.e. they override) any properties of the same name that are found in `application.properties` (or the YAML equivalents), but they have lower priority than properties set via Environment Variables or Java System Properties."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Furthermore, when multiple ConfigMaps (or Secrets) are used, ConfigMaps (or Secrets) defined later in the list have a higher priority that ConfigMaps defined earlier in the list."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Finally, when both ConfigMaps and Secrets are used, the latter always a higher priority than the former."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Kubernetes Permissions"
msgstr ""

#: _versions/2.13/guides/kubernetes-config.adoc
msgid ""
"Since reading ConfigMaps involves interacting with the Kubernetes API Server, when https://kubernetes.io/docs/reference/access-authn-authz/rbac/[RBAC] is enabled on the cluster, the https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[ServiceAccount]\n"
"that is used to run the application needs to have the proper permissions for such access."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Thankfully, when using the `kubernetes-config` extension along with the xref:deploying-to-kubernetes.adoc[Kubernetes] extension, all the necessary Kubernetes resources to make that happen are automatically generated."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Secrets"
msgstr ""

#: _versions/2.13/guides/kubernetes-config.adoc
msgid ""
"By default, the xref:deploying-to-kubernetes.adoc[Kubernetes] extension doesn't generate the necessary resources to allow accessing secrets.\n"
"Set `quarkus.kubernetes-config.secrets.enabled=true` to generate the necessary role and corresponding role binding."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Example configuration"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "A very common use case is to deploy a Quarkus application that needs to access a relational database which has itself already been deployed on Kubernetes. Using the `quarkus-kubernetes-config` extension makes this use case very simple to handle."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Let's assume that our Quarkus application needs to talk to PostgreSQL and that when PostgreSQL was deployed on our Kubernetes cluster, a `Secret` named `postgresql` was created as part of that deployment and contains the following entries:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "`database-name`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "`database-user`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "`database-password`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "One possible way to make Quarkus use these entries to connect the database is to use the following configuration:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Enable reading of secrets. Note the use of `%prod` profile as we only want this setting applied when the application is running in production."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Configure the name of the secret that will be used. This doesn't need to be prefixed with the `%prod` profile as it won't have any effect if secret reading is disabled."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Quarkus will substitute `${database-name}` with the value obtained from the entry with name `database-name` of the `postgres` Secret. `somehost` is the name of the Kubernetes `Service` that was created when PostgreSQL was deployed to Kubernetes."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Quarkus will substitute `${database-user}` with the value obtained from the entry with name `database-user` of the `postgres` Secret."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "Quarkus will substitute `${database-password}` with the value obtained from the entry with name `database-password` of the `postgres` Secret."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "The values above allow the application to be completely agnostic of the actual database configuration used in production while also not inhibiting the usability of the application at development time."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Alternatives"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "The use of the `quarkus-kubernetes-config` extensions is completely optional as there are other ways an application can be configured to use ConfigMaps or Secrets."
msgstr ""

#: _versions/2.13/guides/kubernetes-config.adoc
msgid ""
"One common alternative is to map each entry of the ConfigMap and / Secret to an environment variable on the Kubernetes `Deployment` - see link:https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables[this] for more details.\n"
"To achieve that in Quarkus, we could use the `quarkus-kubernetes` extension (which is responsible for creating Kubernetes manifests and include the following configuration) and configure it as so:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "The end result of the above configuration would be the following `env` part being applied the generated `Deployment`:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/kubernetes-config.adoc
msgid "See xref:deploying-to-kubernetes.adoc#secret-mapping[this] for more details."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/kubernetes-config.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/2.13/guides/kubernetes-config.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
