# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-17 12:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Redis Extension Reference Guide"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Redis is an in-memory data store used as a database, cache, streaming engine, and message broker.\n"
"The Quarkus Redis extension allows integrating Quarkus applications with Redis."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"To use this extension, the user must be familiar with Redis, especially understanding the mechanism of commands and how they are organized.\n"
"Typically, we recommend:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The https://try.redis.io/[interactive tutorial] introducing Redis."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The https://redis.io/commands/[command references] explains Redis commands and contains links to reference documentation."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "This extension provides imperative and reactive APIs and low-level and high-level (type-safe) clients."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Installation"
msgstr "安装"

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"If you want to use this extension, you need to add the `io.quarkus:quarkus-redis` extension first.\n"
"In your `pom.xml` file, add:"
msgstr ""

#. type: Block title
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "With this dependency, you can then inject Redis clients or _datasource_ (high-level, type-safe API), such as:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "More details about the various APIs offered by the quarkus-redis extension are available in the <<apis>> section."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "One extension, multiple APIs"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "This extension provides multiple ways to interact with Redis:"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"the _low-level_ Vert.x client: it's a fully reactive, non-blocking, and asynchronous client.\n"
"More details on https://vertx.io/docs/vertx-redis-client/java/[the Vert.x Redis Client documentation].\n"
"Two APIs are exposed: `io.vertx.redis.client.Redis`, and `io.vertx.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"the _low-level_ Mutiny variant of the Vert.x API: Unlike the previous one, it exposes a Mutiny API and provides both reactive and imperative methods (suffixed with `andAwait()`).\n"
"Two APIs are exposed: `io.vertx.mutiny.redis.client.Redis` and `io.vertx.mutiny.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"a _high-level_ reactive data source: A type-safe, high-level API to interact with Redis.\n"
"This API is fully reactive and asynchronous.\n"
"It exposes a Mutiny API.\n"
"It exposes the `io.quarkus.redis.datasource.ReactiveRedisDataSource` interface."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"a _high-level_ imperative data source: A type-safe, high-level API to interact with Redis.\n"
"It is the imperative variant of the reactive data source.\n"
"It exposes the `io.quarkus.redis.datasource.RedisDataSource` interface."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "To help you select the suitable API for you, here are some recommendations:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "If you are building an imperative (_classic_) Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.RedisDataSource`."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "If you are building a reactive Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.ReactiveRedisDataSource`."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "If you need fine-grain control, or execute commands in a generic way: use `io.vertx.mutiny.redis.client.RedisAPI`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "If you have existing Vert.x code, use `io.vertx.redis.client.RedisAPI`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "If you need to emit custom commands, you can either use the data sources (reactive or imperative) or the `io.vertx.mutiny.redis.client.Redis`."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Default and named clients"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"This extension lets you configure a _default_ Redis client/data sources or _named_ ones.\n"
"The latter is essential when you need to connect to multiple Redis instances."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The default connection is configured using the `quarkus.redis.*` properties.\n"
"For example, to configure the default Redis client, use:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "When using the default connection, you can inject the various APIS using a _plain_ `@Inject`:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "In general, you inject a single one; the previous snippet is just an example."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "_Named_ clients are configured using the `quarkus.redis.<name>.*` properties:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "To access the APIs, you need to use the `@RedisClientName` qualifier:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "When using `@RedisClientName`, you can omit the `@Inject` annotation."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Connecting to Redis"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The Redis extension can operate in 4 distinct modes:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "Simple client (probably what most users need)."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "Sentinel (when working with Redis in High Availability mode)."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "Cluster (when working with Redis in Clustered mode)."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "Replication (single shard, one node write, multiple read)."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The connection url is configured with the `quarkus.redis.hosts` (or `quarkus.redis.<name>.hosts`) as follows:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Using Unix Socket"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "When using unix-socket, you need:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Sentinel Mode"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "When using Sentinel, you need to pass multiple _host urls_ and configure the client type to `sentinel`:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Cluster Mode"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "When using Redis in cluster mode, you need to pass multiple _host urls_, configure the client type to `cluster` and configure the `replicas` mode:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Replication Mode"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "When using the replication mode, you need to pass a single host url and configure the type to be `replication`:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Connecting to Redis Cloud"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "To connect to redis cloud, you need the following properties:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Authentication"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The Redis password can be set in the `redis://` URL or with the `quarkus.redis.password` property.\n"
"We recommend the latter, and if possible, using secrets or an environment variable to configure the password."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The associated environment variable is `QUARKUS_REDIS_PASSWORD`, or `QUARKUS_REDIS_<NAME>_PASSWORD` for named clients."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Using the high-level clients (data sources)"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Quarkus exposes a high-level API on top of Redis.\n"
"This API is type-safe and structured around the notion of _group_, inherited from the https://redis.io/commands/command-docs/[Redis command organization].\n"
"This API lets you execute Redis commands more conveniently and safely."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Injecting data sources"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "For each configured Redis client, two Redis data sources are exposed:"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"`io.quarkus.redis.datasource.RedisDataSource` - an imperative (blocking) Redis data source.\n"
"Each operation blocks until a response is received or a timeout is reached"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "`io.quarkus.redis.datasource.ReactiveRedisDataSource` - a reactive Redis data source returning `Uni<X>` or `Multi<X>`."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "If you configured the _default_ Redis client, you could inject the data sources using:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "If you configured a _named_ Redis client, you need to use the `io.quarkus.redis.RedisClientName` qualifier to select the right client:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "When using the _blocking_ variant, you can configure the default timeout with:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The default timeout is configured to 10s."
msgstr ""

#. type: Block title
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "All about delegation"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The blocking data source (`io.quarkus.redis.datasource.RedisDataSource`) is implemented on top of the reactive one (`io.quarkus.redis.datasource.ReactiveRedisDataSource`).\n"
"The `ReactiveRedisDataSource` is implemented on top of the `io.vertx.mutiny.redis.Redis` API."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Data Source groups"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "As mentioned above, the API is divided into groups:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "bitmap - `.bitmap()`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "key (generic) - `.key()`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "geo - `.geo(memberType)`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "hash - `.hash(`valueType)`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "hyperloglog - `.hyperloglog(memberType)`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "list - `.list(memberType)`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "pubsub - `pubsub()`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "set - `.set(memberType)`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "sorted-set - `.sortedSet(memberType)`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "stream (not available yet)"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "string - `.value(valueType)`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "transactions - `withTransaction`"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Each of these methods returns an object that lets you execute the commands related to the group.\n"
"The following snippet demonstrates how to use the _hash_ group:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "Inject the `RedisDataSource` in the constructor"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Creates the `HashCommands` object.\n"
"This object has three type parameters: the type of the key, the type of the field, and the type of the member"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "Use the created `commands` to associate the field `field` with the value `value`"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "Use the created `commands` to retrieve the field `field` value."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Serialization and Deserialization"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The data source APIs handle the serialization and deserialization automatically.\n"
"When a non-standard type is used, the object is serialized into JSON and deserialized from JSON.\n"
"In this case, `quarkus-jackson` is used."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "To store binary data, use `byte[]`."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "The `value` group"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The `value` group is used to manipulate https://redis.io/docs/manual/data-types/#strings[Redis Strings].\n"
"Thus, this group is not limited to Java Strings but can be used for integers (like a counter) or binary content (like images)."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Caching values"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"You can use Redis as a cache using the `setex` command, which stores a given value to a given key for a given duration.\n"
"The following snippet shows how such a command can be used to store `BusinessObject` for 1 second."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "You can use the `setnx` method only to set the value if no value has been stored for the given key."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The `key` group provides more fine-grain control on expiration and ttl of each key."
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "The `set` method can also receive a `SetArgs` argument that modify the behavior:"
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "`ex(seconds)` - Set the specified expire time, in seconds."
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "`px(milliseconds)` - Set the specified expire time, in milliseconds."
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "`exat(timestamp-seconds)` - Set the specified Unix time at which the key will expire, in seconds."
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "`pxat(timestamp-milliseconds)` - Set the specified Unix time at which the key will expire, in milliseconds."
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "`nx()` - Only set the key if it does not already exist."
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "`xx()` - Only set the key if it already exists."
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "`keepttl()` - Retain the time to live associated with the key."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Storing binary data"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Redis _strings_ can be used to store binary data, such as images.\n"
"In this case, we will use `byte[]` as value type:"
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Storing a counter"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "You can store counters in Redis as demonstrated below:"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Retrieve the commands.\n"
"This time we will manipulate `Long` values"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Retrieve the counter associated with the given `key`.\n"
"Return `0L` when no counter is stored."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Increment the value.\n"
"If there are no counter stored for the key, the `incr` command considers 0 as value (so `incr` sets the value to 1)."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "There are other methods that can be useful to manipulate counters, such as:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "`incrby` - allows setting the increment value (positive or negative)"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "`incrbyfloat` - allows setting the increment value as a float/ double (the stored value will be a double)"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "`set` - to set an initial value if needed"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "`decr` and `decrby` - allows decrementing the stored value"
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Using pub/sub"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Redis allows sending _messages_ to channels and listening for these messages.\n"
"These features are available from the the `pubsub` group."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The following snippets shows how a _cache_ can emit a `Notification` after every `set`, and how a subscriber can receive the notification."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Using transactions"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Redis transactions are slightly different from relational database transactions.\n"
"Redis transactions are a batch of commands executed altogether."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "A Redis transaction can _watch_ a set of keys, which would _discard_ the transaction is one of these keys are updated during the transaction execution."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Commands enqueued in a transaction are not executed before the whole transaction is executed.\n"
"It means that you cannot retrieve a result during the transaction.\n"
"Results are accumulated in a `TransactionResult` object you will access after the completion of the transaction.\n"
"This object contains whether the transaction succeeded or was discarded, and in the former case the result of each command (indexed by the command order)."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"To start a transaction, you use the `withTransaction` method.\n"
"This method receives a `Consumer<TransactionalRedisDataSource>`, which follows the same API as the regular `RedisDataSource` except that the commands return `void` (`Uni<Void>` for the reactive variant).\n"
"When that consumer returns, the transaction is _executed_."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The following snippet shows how to create a transaction executing two related _writes_:"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The received `tx` object can also be used to _discard_ the transaction, using: `tx.discard();`.\n"
"The returned `TransactionResult` lets you retrieve the result of each command."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "When using the reactive variant of the data source, the passed callback is a `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>`:"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"Transaction execution can be conditioned by _keys_.\n"
"When a passed key gets modified during the execution of a transaction, the transaction is discarded.\n"
"The keys are passed as `String` as a second parameter to the `withTransaction` method:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "You cannot use the pub/sub feature from within a transaction."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Using optimistic locking"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"To use optimistic locking, you need to use a variant of the `withTransaction` method, allowing the execution of code before the transaction starts.\n"
"In other words, it will be executed as follows:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "For example, if you need to update a value in a hash only if the field exists, you will use the following API:"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"If one of the watched keys is touched before or during the execution of the pre-transaction or transactional blocks, the transaction is aborted.\n"
"The pre-transactional block produces a result that the transactional block can use.\n"
"This construct is necessary because, within a transaction, the commands do not produce a result.\n"
"Results can only be retrieved after the execution of the transaction."
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The pre-transaction and transactional blocks are invoked on the same Redis connection.\n"
"Consequently, the pre-transaction block must use the passed data source to execute commands.\n"
"Thus, the commands are emitted from that connection.\n"
"These commands must not modify the watched keys."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The transaction is aborted if the pre-transaction block throws an exception (or produces a failure when using the reactive API)."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Executing custom commands"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "To execute a custom command, or a command not supported by the API, use the following approach:"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The `execute` method sends the command to Redis and retrieves the `Response`.\n"
"The command name is passed as first parameters.\n"
"You can add an arbitrary number of **String** parameters to your command.\n"
"The result is wrapped into a `Response` object."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The reactive variant returns a `Uni<Response>`."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "You can also execute custom command in a transaction."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Vert.x Redis Client"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"In addition to the high-level API, you can use the Vertx Redis clients directly in your code.\n"
"The documentation of the Vert.x Redis Client is available on the https://vertx.io/docs/vertx-redis-client/java/[Vert.x Web Site]."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Redis Health Check"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-redis` will automatically add a readiness health check to validate the connection to the Redis server."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr "因此，当你访问你的应用程序的 `/q/health/ready` 端点时，您将获得有关连接验证状态的信息。"

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "This behavior can be disabled by setting the `quarkus.redis.health.enabled` property to `false` in your `application.properties`."
msgstr "可以通过在 `application.properties` 中设置 `quarkus.redis.health.enabled` 属性为 `false` 来禁用这个连接健康检查。"

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Providing Redis Hosts Programmatically"
msgstr "以编程方式设定Redis主机"

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"The `RedisHostsProvider` programmatically provides redis hosts.\n"
"This allows for configuration of properties like redis connection password coming from other sources."
msgstr "`RedisHostsProvider` 接口支持以编程方式设定Redis主机。这个机制支持了从其他来源获取Redis连接属性进行配置，如Redis连接密码等。"

#. type: delimited block =
#: _versions/2.13/guides/redis-reference.adoc
msgid "This is useful as it removes the need to store sensitive data in application.properties."
msgstr "这样可以避免在application.properties中存储敏感数据，很实用。"

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "The host provider can be used to configure the redis client like shown below"
msgstr "`RedisHostsProvider` 可用于配置Redis客户端，如下图所示："

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Customizing the Redis options programmatically"
msgstr ""

#: _versions/2.13/guides/redis-reference.adoc
msgid ""
"You can expose a bean implementing the `io.quarkus.redis.client.RedisOptionsCustomizer` interface to customize the Redis client options.\n"
"The bean is called for each configured Redis client:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Dev Services"
msgstr "开发服务"

#. type: Plain text
#: _versions/2.13/guides/redis-reference.adoc
msgid "See xref:redis-dev-services.adoc[Redis Dev Service]."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/redis-reference.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/2.13/guides/redis-reference.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""
