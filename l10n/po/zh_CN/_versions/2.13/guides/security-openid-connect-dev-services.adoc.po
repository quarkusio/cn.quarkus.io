# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-17 12:04+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Dev Services and UI for OpenID Connect (OIDC)"
msgstr "OpenID Connect (OIDC)的开发服务和用户界面"

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This guide covers the Dev Services and UI for OpenID Connect (OIDC) Keycloak provider and explains how to support Dev Services and UI for other OpenID Connect providers.\n"
"It also describes Dev UI for all OpenID Connect providers which have already been started before Quarkus is launched in a dev mode."
msgstr "本指南涵盖 OpenID Connect (OIDC) Keycloak 提供商的开发服务和用户界面，并解释如何支持其他 OpenID Connect 提供商的开发服务和用户界面。本指南还介绍了在 Quarkus 以开发模式启动之前已经启动的所有 OpenID Connect 提供程序的开发用户界面。"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, no-wrap
msgid "Introduction"
msgstr "简介"

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Quarkus introduces an experimental `Dev Services For Keycloak` feature which is enabled by default when the `quarkus-oidc` extension is started in dev mode and when the integration tests are running in test mode, but only when no `quarkus.oidc.auth-server-url` property is configured.\n"
"It starts a Keycloak container for both the dev and/or test modes and initializes them by registering the existing Keycloak realm or creating a new realm with the client and users for you to start developing your Quarkus application secured by Keycloak immediately. It will restart the container when the `application.properties` or the realm file changes have been detected."
msgstr "Quarkus 引入了一项实验性的 `Dev Services For Keycloak` 功能，当 `quarkus-oidc` 扩展在开发模式下启动，集成测试在测试模式下运行时，该功能默认启用，但只有在未配置 `quarkus.oidc.auth-server-url` 属性时才会启用。它会在开发和/或测试模式下启动 Keycloak 容器，并通过注册现有 Keycloak 领域或创建新领域与客户端和用户进行初始化，以便你立即开始开发由 Keycloak 保护的 Quarkus 应用程序。当检测到 `application.properties` 或 Realm 文件发生变化时，它会重新启动容器。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Additionally, xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev[/q/dev] complements this feature with a Dev UI page which helps to acquire the tokens from Keycloak and test your Quarkus application."
msgstr "此外，在 link:http://localhost:8080/q/dev[/q/dev] 提供的 link:dev-ui.html[Dev UI] 补充了这一功能，它有助于从Keycloak获取令牌并测试你的Quarkus应用程序。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If `quarkus.oidc.auth-server-url` is already set then a generic OpenID Connect Dev Console which can be used with all OpenID Connect providers will be activated, please see <<dev-ui-all-oidc-providers,Dev UI for all OpenID Connect Providers>> for more information."
msgstr "如果已设置 `quarkus.oidc.auth-server-url` ，则将激活可用于所有 OpenID Connect 提供商的通用 OpenID Connect 开发控制台，更多信息请参阅 xref:dev-ui-all-oidc-providers[所有 OpenID Connect 提供商的开发用户界面] 。"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, no-wrap
msgid "Dev Services for Keycloak"
msgstr "为Keycloak提供的开发服务"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Start your application without configuring `quarkus.oidc` properties in `application.properties` with:"
msgstr "在 `application.properties` ，无需配置 `quarkus.oidc` 属性，就可以启动你的应用程序。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You will see in the console something similar to:"
msgstr "你将在控制台看到类似的内容。"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "When logging in the Keycloak admin console, the username is `admin` and the password is `admin`."
msgstr "在登录Keycloak管理控制台时，用户名是 `admin` ，密码是 `admin` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note that by default, `Dev Services for Keycloak` will not start a new container if it finds a container with a `quarkus-dev-service-keycloak` label and connect to it if this label's value matches the value of the `quarkus.keycloak.devservices.service-name` property (default value is `quarkus`). In such cases you will see a slightly different output when running:"
msgstr "请注意，在默认情况下，如果 `Dev Services for Keycloak` 找到一个带有 `quarkus-dev-service-keycloak` 标签的容器，并且如果这个标签的值与 `quarkus.keycloak.devservices.service-name` 属性的值相匹配（默认值为 `quarkus` ），则不会启动一个新容器。在这种情况下，你在运行时将会看到一个略有不同的输出。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note that you can disable sharing the containers with `quarkus.keycloak.devservices.shared=false`."
msgstr "注意，你可以用 `quarkus.keycloak.devservices.shared=false` ，禁止共享容器。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Now open the main link:http://localhost:8080/q/dev[Dev UI page], and you will see the `OpenID Connect Card` linking to a Keycloak page:"
msgstr "现在打开主要的 link:http://localhost:8080/q/dev[Dev UI页面] ，你会看到 `OpenID Connect Card` ，链接到一个 `Keycloak` 页面。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Click on the `Provider: Keycloak` link, and you will see a Keycloak page which will be presented slightly differently depending on how `Dev Services for Keycloak` feature has been configured."
msgstr "点击 `Provider: Keycloak` ，你将看到一个Keycloak页面，该页面的呈现方式将略有不同，这取决于 `Dev Services for Keycloak` 功能的配置方式。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Developing Service Applications"
msgstr "开发服务应用"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid "By default, the Keycloak page can be used to support the development of a xref:security-openid-connect.adoc[Quarkus OIDC service application]."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Authorization Code Grant"
msgstr "授权代码授予"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=code` in `application.properties` (this is a default value) then an `authorization_code` grant will be used to acquire both access and ID tokens. Using this grant is recommended to emulate a typical flow where a `Single Page Application` acquires the tokens and uses them to access Quarkus services."
msgstr "如果你在 `application.properties` （这是一个默认值）中设置了 `quarkus.oidc.devui.grant.type=code` ，那么一个 `authorization_code` 授予将被用来获取访问和ID令牌。建议使用这个授予来模拟一个典型的流程，即 `Single Page Application` 获取令牌并使用它们来访问Quarkus服务。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "First you will see an option to `Log into Single Page Application`:"
msgstr "首先你会看到一个选项： `Log into Single Page Application` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Next, after you select this option, you will be redirected to Keycloak to authenticate, example, as `alice:alice` and then returned to the page representing the SPA:"
msgstr "选择该选项后，您将被重定向到 Keycloak 进行身份验证（例如，以 `alice:alice` 的身份），然后返回到代表 SPA 的页面："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can view the acquired access and ID tokens, for example:"
msgstr "例如，你可以查看获得的访问和ID令牌。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "This view shows the encoded JWT token on the left-hand side and highlights the headers (red colour), payload/claims (green colour) and signature (blue colour). It also shows the decoded JWT token on the right-hand side where you can see the header and claim names and their values."
msgstr "该视图在左侧显示了编码后的JWT令牌，并突出显示了报头（红色）、有效载荷/请求（绿色）和签名（蓝色）。它还在右侧显示了解码后的JWT令牌，你可以看到头和要求的名称及其值。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Next test the service with either the current access or ID token. SPA usually sends the access tokens to the application endpoints but there could be cases where the ID tokens are forwarded to the application frontends for them to be aware about the user who is currently logged into SPA."
msgstr "然后使用当前访问令牌或 ID 令牌测试服务。SPA 通常会将访问令牌发送到应用程序端点，但也可能会将 ID 令牌转发到应用程序前端，以便它们了解当前登录 SPA 的用户。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Finally, you can select a `Log Out` image::dev-ui-keycloak-logout.png option if you'd like to log out and authenticate to Keycloak as a different user."
msgstr "最后你可以选择 `Log Out` image::dev-ui-keycloak-logout.png选项，如果你想退出并以不同的用户身份认证Keycloak。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note Keycloak may return an error when you try to `Log into Single Page Application`. For example, `quarkus.oidc.client-id` may not match the client id in the realm imported to Keycloak or the client in this realm is not configured correctly to support the authorization code flow, etc. In such cases Keycloak will return an `error_description` query parameter and `Dev UI` will also show this error description, for example:"
msgstr "注意 当你尝试 `Log into Single Page Application` ，Keycloak可能会返回一个错误。例如， `quarkus.oidc.client-id` 可能与导入Keycloak的境界中的客户ID不匹配，或者该境界中的客户没有被正确配置为支持授权代码流，等等。在这种情况下，Keycloak将返回一个 `error_description` 查询参数， `Dev UI` 也将显示这个错误描述，例如。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the error occurs then log into Keycloak using the `Keycloak Admin` option and update the realm configuration as necessary and also check the `application.properties`."
msgstr "如果发生错误，那么使用 `Keycloak Admin` 选项登录Keycloak，并根据需要更新境界配置，同时检查 `application.properties` 。"

#. type: Title =====
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Test with Swagger UI or GraphQL UI"
msgstr "用Swagger UI或GrapghQL UI进行测试"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can avoid manually entering the service paths and test your service with `Swagger UI` or `GraphQL UI` if `quarkus-smallrye-openapi` and/or `quarkus-smallrye-graphql` are used in your project. For example, if you start Quarkus in dev mode with both `quarkus-smallrye-openapi` and `quarkus-smallrye-graphql` dependencies then you will see the following options after logging in into Keycloak:"
msgstr "如果你的项目中使用了 `quarkus-smallrye-openapi` 和/或 `quarkus-smallrye-graphql` ，你可以避免手动输入服务路径，用 `Swagger UI` 或 `GraphQL UI` 测试你的服务。例如，如果你在开发模式下启动Quarkus，同时依赖 `quarkus-smallrye-openapi` 和 `quarkus-smallrye-graphql` ，那么你在登录到Keycloak后会看到以下选项。"

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"For example, clicking on `Swagger UI` will open `Swagger UI` in a new browser tab where you can test the service using the token acquired by Dev UI for Keycloak.\n"
"and `Swagger UI` will not try to re-authenticate again."
msgstr "例如，点击 `Swagger UI` 将在新的浏览器标签页中打开 `Swagger UI` ，您可以在此使用 Dev UI for Keycloak 获取的令牌测试服务。 `Swagger UI` 将不会再次尝试重新验证。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Integration with `GraphQL UI` works in a similar way, the access token acquired by Dev UI for Keycloak will be used."
msgstr "与 `GraphQL UI` 集成的方式类似，将使用Dev UI为Keycloak获得的访问令牌。"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You may need to register a redirect URI for the authorization code flow initiated by Dev UI for Keycloak to work because Keycloak may enforce that the authenticated users are redirected only to the configured redirect URI. It is recommended to do in production to avoid the users being redirected to the wrong endpoints which might happen if the correct `redirect_uri` parameter in the authentication request URI has been manipulated."
msgstr "你可能需要为由Dev UI发起的授权代码流注册一个重定向URI，以便Keycloak工作，因为Keycloak可能强制要求认证用户只被重定向到配置的重定向URI。建议在生产中这样做，以避免用户被重定向到错误的端点，如果认证请求URI中正确的 `redirect_uri` 参数被篡改，可能会发生这种情况。"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If Keycloak does enforce it then you will see an authentication error informing you that the `redirect_uri` value is wrong."
msgstr "如果Keycloak确实执行了它，那么你会看到一个认证错误，通知你 `redirect_uri` 值是错误的。"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "In this case select the `Keycloak Admin` option in the right top corner, login as `admin:admin`, select the test realm and the client which Dev UI for Keycloak is configured with and add `http://localhost:8080/q/dev/io.quarkus.quarkus-oidc/provider` to `Valid Redirect URIs`. If you used `-Dquarkus.http.port` when starting Quarkus then change `8080` to the value of `quarkus.http.port`."
msgstr "在这种情况下，选择右上角的 `Keycloak Admin` 选项，以 `admin:admin` 的身份登录，选择测试域和为 Keycloak 配置的 Dev UI 的客户端，并将其添加到 。 `http://localhost:8080/q/dev/io.quarkus.quarkus-oidc/provider` `Valid Redirect URIs` 如果启动 Quarkus 时使用的是 `-Dquarkus.http.port` ，则将 `8080` 更改为 `quarkus.http.port` 的值。"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the container is shared between multiple applications running on different ports then you will need to register `redirect_uri` values for each of these applications."
msgstr "如果容器被运行在不同端口的多个应用程序共享，那么你将需要为这些应用程序中的每一个注册 `redirect_uri` 值。"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can set the `redirect_uri` value to `*` only for the test purposes, especially when the containers are shared between multiple applications."
msgstr "你可以将 `redirect_uri` 值设置为 `*` ，仅用于测试目的，特别是当容器在多个应用程序之间共享时。"

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`*` `redirect_uri` value is set by `Dev Services for Keycloak` when it creates a default realm, if no custom realm is imported."
msgstr " `*` `redirect_uri` 值由 `Dev Services for Keycloak` 在创建默认境界时设置，如果没有导入自定义境界。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Implicit Grant"
msgstr "隐性资助"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=implicit` in `application.properties` then an `implicit` grant will be used to acquire both access and ID tokens. Use this grant for emulating a `Single Page Application` only if the authorization code grant does not work (for example, a client is configured in Keycloak to support an implicit grant, etc)."
msgstr "如果你在 `application.properties` 中设置了 `quarkus.oidc.devui.grant.type=implicit` ，那么一个 `implicit` 授予将被用来获取访问和ID令牌。只有在授权码授予不起作用的情况下，才使用这种授予来模拟 `Single Page Application` （例如，客户端在Keycloak中被配置为支持隐式授予，等等）。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Password Grant"
msgstr "密码授予"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=password` in `application.properties` then you will see a screen like this one:"
msgstr " `application.properties` 如果你在 `quarkus.oidc.devui.grant.type=password` ，那么你会看到一个像这样的屏幕。"

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid ""
"Enter a registered username, user password, a relative service endpoint path, click on `Test Service` and you will see a status code such as `200`, `403`, `401` or `404` printed.\n"
"If the username is also set in `quarkus.keycloak.devservices.users` map property containing usernames and passwords then you do not have to set a password when testing the service.\n"
"But note, you do not have to initialize `quarkus.keycloak.devservices.users` to test the service using the password grant."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You will also see in the Dev UI console something similar to:"
msgstr "你也会在开发用户界面控制台看到类似的东西。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "A token is acquired from Keycloak using a `password` grant and is sent to the service endpoint."
msgstr "一个令牌是使用 `password` 授予从Keycloak获得的，并被发送到服务端点。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Client Credentials Grant"
msgstr "客户凭证授予"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=client` then a `client_credentials` grant will be used to acquire a token, with the page showing no `User` field in this case:"
msgstr "如果你设置了 `quarkus.oidc.devui.grant.type=client` ，那么将使用 `client_credentials` 授予来获取令牌，在这种情况下，页面没有显示 `User` 字段。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can test the service the same way as with the `Password` grant."
msgstr "您可以使用与 `Password` 拨款相同的方式测试服务。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Developing OpenID Connect Web App Applications"
msgstr "开发OpenID Connect网络应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you develop a xref:security-openid-connect-web-authentication.adoc[Quarkus OIDC web-app application] then you should set `quarkus.oidc.application-type=web-app` in `application.properties` before starting the application."
msgstr "如果您开发的是 xref:security-openid-connect-web-authentication.adoc[Quarkus OIDC 网络应用程序] ，则应在启动应用程序之前在 `application.properties` 中设置 `quarkus.oidc.application-type=web-app` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You will see a screen like this one:"
msgstr "你会看到一个像这样的屏幕。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Set a relative service endpoint path, click on `Sign In To Service` and you will be redirected to Keycloak to enter a username and password in a new browser tab and get a response from the Quarkus application."
msgstr "设置一个相对的服务端点路径，点击 `Sign In To Service` ，你将被重定向到Keycloak，在一个新的浏览器标签中输入一个用户名和密码，并从Quarkus应用程序中得到一个响应。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note that in this case Dev UI does not really enrich a dev experience since it is a Quarkus OIDC `web-app` application which controls the authorization code flow and acquires the tokens."
msgstr "请注意，在这种情况下，Dev UI并没有真正丰富开发体验，因为它是一个Quarkus OIDC `web-app` 应用程序，控制授权代码流并获取令牌。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "To make Dev UI more useful for supporting the development of OIDC `web-app` applications you may want to consider setting profile specific values for `quarkus.oidc.application-type`:"
msgstr "为了使Dev UI对支持OIDC `web-app` 应用程序的开发更加有用，你可能要考虑为 `quarkus.oidc.application-type` ，设置配置文件的特定值。"

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid ""
"It will ensure that all Dev UI options described in <<develop-service-applications, Developing OpenID Connect Service Applications>> will be available when your `web-app` application is run in dev mode. The limitation of this approach is that both access and ID tokens returned with the code flow and acquired with Dev UI will be sent to the endpoint as HTTP `Bearer` tokens - which will not work well if your endpoint requires the injection of `IdToken`.\n"
"However, it will work as expected if your `web-app` application only uses the access token, for example, as a source of roles or to get `UserInfo`, even if it is assumed to be a `service` application in dev mode."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Even a better option is to use a `hybrid` application type in devmode:"
msgstr "甚至更好的选择是在devmode中使用一个 `hybrid` 应用程序类型。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "It will ensure that if you access the application from the browser in dev mode, without using OIDC DevUI, then Quarkus OIDC will also perform the authorization code flow as in the production mode. But OIDC DevUI will also be more useful because `hybrid` applications can accept the bearer access tokens as well."
msgstr "它将确保如果你在开发模式下从浏览器访问应用程序，而不使用OIDC DevUI，那么Quarkus OIDC也会像在生产模式下一样执行授权代码流。但OIDC DevUI也会更有用，因为 `hybrid` 应用程序也可以接受不记名访问令牌。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Running the tests"
msgstr "运行测试"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can run the tests against a Keycloak container started in a test mode in a xref:continuous-testing.adoc[Continuous Testing] mode."
msgstr "你可以在 link:continuous-testing.html[持续测试] 模式下针对以测试模式启动的Keycloak容器运行测试。"

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"It is also recommended to run the integration tests against Keycloak using `Dev Services for Keycloak`.\n"
"Please see xref:security-openid-connect.adoc#integration-testing-keycloak-devservices[Testing OpenID Connect Service Applications with Dev Services] and xref:security-openid-connect-web-authentication.adoc#integration-testing-keycloak-devservices[Testing OpenID Connect WebApp Applications with Dev Services] for more information."
msgstr "还建议使用 `Dev Services for Keycloak` 针对 Keycloak 运行集成测试。有关详细信息，请参阅 xref:security-openid-connect.adoc#integration-testing-keycloak-devservices[使用开发服务测试 OpenID Connect 服务应用程序] 和 xref:security-openid-connect-web-authentication.adoc#integration-testing-keycloak-devservices[使用开发服务测试 OpenID Connect WebApp 应用程序] 。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Keycloak Initialization"
msgstr "Keycloak初始化"

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid ""
"The `quay.io/keycloak/keycloak:17.0.0` image which contains a Keycloak distribution powered by Quarkus is used to start a container by default.\n"
"`quarkus.keycloak.devservices.image-name` can be used to change the Keycloak image name. For example, set it to `quay.io/keycloak/keycloak:17.0.0-legacy` to use a Keycloak distribution powered by WildFly."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`Dev Services for Keycloak` will initialize a launched Keycloak server next."
msgstr " `Dev Services for Keycloak` 接下来将初始化一个启动的Keycloak服务器。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "By default, the `quarkus`, `quarkus-app` client with a `secret` password, `alice` and `bob` users (with the passwords matching the names), and `user` and `admin` roles are created, with `alice` given both `admin` and `user` roles and `bob` - the `user` role."
msgstr "默认情况下， `quarkus` ， `quarkus-app` 客户端有一个 `secret` 的密码， `alice` 和 `bob` 用户（密码与名字一致），以及 `user` 和 `admin` 角色被创建， `alice` 同时被赋予 `admin` 和 `user` 角色， `bob` - `user` 的角色。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Usernames, secrets and their roles can be customized with `quarkus.keycloak.devservices.users` (the map which contains usernames and secrets) and `quarkus.keycloak.devservices.roles` (the map which contains usernames and comma separated role values)."
msgstr "可以通过 `quarkus.keycloak.devservices.users` （包含用户名和秘密的地图）和 `quarkus.keycloak.devservices.roles` （包含用户名和逗号分隔的角色值的地图）来定制用户名、秘密和他们的角色。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid "For example:"
msgstr "例如："

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This configuration creates two users:\n"
" * `duke` with a `dukePassword` password and a `reader` role\n"
" * `john` with a `johnPassword` password and `reader` and `writer` roles"
msgstr "该配置创建了两个用户：* `duke` ，密码为 `dukePassword` ，角色为 `reader` * `john` ，密码为 `johnPassword` ，角色为 `reader` 和 `writer`"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` can be used to customize the client id and secret."
msgstr " `quarkus.oidc.client-id` 和 ，可以用来定制客户的ID和秘密。 `quarkus.oidc.credentials.secret` "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "However, it is likely your Keycloak configuration may be more complex and require setting more properties."
msgstr "然而，你的Keycloak配置可能更复杂，需要设置更多的属性。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "This is why `quarkus.keycloak.devservices.realm-path` is always checked first before trying to initialize Keycloak with the default or configured realm, client, user and roles properties. If the realm file exists on the file system or classpath then only this realm will be used to initialize Keycloak."
msgstr "这就是为什么在尝试使用默认或配置的 realm、客户端、用户和角色属性初始化 Keycloak 之前，总是先检查 `quarkus.keycloak.devservices.realm-path` 的原因。如果 realm 文件存在于文件系统或 classpath 中，那么只有该 realm 才会被用于初始化 Keycloak。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Also, the Keycloak page offers an option to `Sign In To Keycloak To Configure Realms` using a `Keycloak Admin` option in the right top corner:"
msgstr " `Sign In To Keycloak To Configure Realms` 另外，Keycloak页面提供了一个选项，即使用右上角的 `Keycloak Admin` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Sign in to Keycloak as `admin:admin` in order to further customize the realm properties, create or import a new realm, export the realm."
msgstr "以 `admin:admin` 登录Keycloak，以便进一步定制境界属性，创建或导入一个新的境界，导出境界。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note that even if you initialize Keycloak from a realm file, it is still needed to set `quarkus.keycloak.devservices.users` property if a `password` grant is used to acquire the tokens to test the OIDC `service` applications."
msgstr "请注意，即使从 Realm 文件初始化 Keycloak，如果使用 `password` grant 获取令牌来测试 OIDC `service` 应用程序，仍需要设置 `quarkus.keycloak.devservices.users` 属性。"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Disable Dev Services for Keycloak"
msgstr "禁用Keycloak的开发服务"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`Dev Services For Keycloak` will not be activated if either `quarkus.oidc.auth-server-url` is already initialized or the default OIDC tenant is disabled with `quarkus.oidc.tenant.enabled=false`, irrespectively of whether you work with Keycloak or not."
msgstr " `Dev Services For Keycloak` 如果 已经被初始化，或者默认的OIDC租户被 禁用，无论你是否使用Keycloak工作，都不会被激活。 `quarkus.oidc.auth-server-url` `quarkus.oidc.tenant.enabled=false` "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you prefer not to have a `Dev Services for Keycloak` container started or do not work with Keycloak then you can also disable this feature with `quarkus.keycloak.devservices.enabled=false` - it will only be necessary if you expect to start `quarkus:dev` without `quarkus.oidc.auth-server-url`."
msgstr "如果你不希望启动 `Dev Services for Keycloak` 容器，或者不与Keycloak合作，那么你也可以通过 `quarkus.keycloak.devservices.enabled=false` 禁用这个功能--只有当你期望在没有 `quarkus.oidc.auth-server-url` 的情况下启动 `quarkus:dev` ，才有必要。"

#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"The main Dev UI page will include an empty `OpenID Connect Card` when `Dev Services for Keycloak` is disabled and the `quarkus.oidc.auth-server-url` property\n"
"has not been initialized:"
msgstr "当 `Dev Services for Keycloak` 被禁用且 `quarkus.oidc.auth-server-url` 属性尚未初始化时，主 Dev UI 页面将包含一个空的 `OpenID Connect Card` ："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If `quarkus.oidc.auth-server-url` is already set then a generic OpenID Connect Dev Console which can be used with all OpenID Connect providers may be activated, please see <<dev-ui-all-oidc-providers,Dev UI for all OpenID Connect Providers>> for more information."
msgstr "如果已设置 `quarkus.oidc.auth-server-url` ，则可激活通用 OpenID Connect 开发控制台，该控制台可与所有 OpenID Connect 提供商一起使用，更多信息请参阅 xref:dev-ui-all-oidc-providers[所有 OpenID Connect 提供商的开发用户界面] 。"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Dev UI for all OpenID Connect Providers"
msgstr "所有OpenID连接供应商的开发用户界面"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If `quarkus.oidc.auth-server-url` points to an already started OpenID Connect provider (which can be Keycloak or other provider), `quarkus.oidc.auth-server-url` is set to `service` (which is a default value) and at least `quarkus.oidc.client-id` is set then `Dev UI for all OpenID Connect Providers` will be activated."
msgstr "如果 `quarkus.oidc.auth-server-url` 指向已启动的 OpenID Connect 提供商（可以是 Keycloak 或其他提供商）， `quarkus.oidc.auth-server-url` 设置为 `service` （这是默认值），并且至少设置了 `quarkus.oidc.client-id` ，那么 `Dev UI for all OpenID Connect Providers` 将被激活。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Setting `quarkus.oidc.credentials.secret` will mostly likely be required for Keycloak and other providers for the authorization code flow initiated from Dev UI to complete, unless the client identified with `quarkus.oidc.client-id` is configured as a public client in your OpenID Connect provider's administration console."
msgstr "对于Keycloak和其他供应商来说，设置 `quarkus.oidc.credentials.secret` ，以完成从Dev UI发起的授权代码流，除非在你的OpenID Connect供应商的管理控制台中，用 `quarkus.oidc.client-id` 识别的客户端被配置为公共客户端。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Run:"
msgstr "运行。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "And you will see the following message:"
msgstr "然后你会看到以下信息。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the provider metadata discovery has been successful then, after you open the main link:http://localhost:8080/q/dev[Dev UI page], you will see the `OpenID Connect Card` page linking to `Dev Console`:"
msgstr "如果成功发现了提供商元数据，那么在打开 link:http://localhost:8080/q/dev[Dev UI] 主 link:http://localhost:8080/q/dev[页面] 后，就会看到链接到 `Dev Console` 的 `OpenID Connect Card` 页面："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid "Follow the link, and you will be able to log in to your provider, get the tokens and test the application. The experience will be the same as described in the <<keycloak-authorization-code-grant,Authorization Code Grant for Keycloak>> section, where `Dev Services for Keycloak` container has been started, especially if you work with Keycloak."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid "You will most likely need to configure your OpenId Connect provider to support redirecting back to the `Dev Console`. Add `http://localhost:8080/q/dev/io.quarkus.quarkus-oidc/provider` as one of the supported redirect and logout URLs."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid "If you work with other providers then a Dev UI experience described in the <<keycloak-authorization-code-grant,Authorization Code Grant for Keycloak>> section might differ slightly. For example, an access token may not be in a JWT format, so it won't be possible to show its internal content, though all providers should return an ID Token as JWT."
msgstr ""

#. type: delimited block =
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The current access token is used by default to test the service with `Swagger UI` or `GrapghQL UI`. If the provider (other than Keycloak) returns a binary access token then it will be used with `Swagger UI` or `GrapghQL UI` only if this provider has a token introspection endpoint otherwise an `IdToken` which is always in a JWT format will be passed to `Swagger UI` or `GrapghQL UI`. In such cases you can verify with the manual Dev UI test that `401` will always be returned for the current binary access token. Also note that using `IdToken` as a fallback with either of these UIs is only possible with the authorization code flow."
msgstr "当前的访问令牌默认使用 `Swagger UI` 或 `GrapghQL UI` 来测试服务。如果提供者（除Keycloak外）返回一个二进制访问令牌，那么它将与 `Swagger UI` 或 `GrapghQL UI` 一起使用，只有当该提供者有一个令牌自省端点，否则一个总是JWT格式的 `IdToken` 将被传递给 `Swagger UI` 或 `GrapghQL UI` 。在这种情况下，你可以通过手动Dev UI测试验证 `401` 将总是返回当前二进制访问令牌。还要注意的是，使用 `IdToken` 作为这些UI的回退，只有在授权代码流中才有可能。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
msgid "Some providers such as `Auth0` do not support a standard RP initiated logout so the provider specific logout properties will have to be configured for a logout option be visible, please see xref:security-openid-connect-web-authentication.adoc#user-initiated-logout[OpenID Connect User-Initiated Logout] for more information."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Similarly, if you'd like to use a `password` or `client_credentials` grant for Dev UI to acquire the tokens then you may have to configure some extra provider specific properties, for example:"
msgstr "同样，如果你想使用Dev UI的 `password` 或 `client_credentials` 授予来获取令牌，那么你可能必须配置一些额外的提供者特定属性，例如。"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Dev Services and UI Support for other OpenID Connect Providers"
msgstr "对其他OpenID连接供应商的开发服务和UI支持"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Your custom extension would need to extend `quarkus-oidc` and add the dependencies required to support your provider to the extension's `deployment` module only."
msgstr "你的自定义扩展将需要扩展 `quarkus-oidc` ，并将支持你的提供者所需的依赖性仅添加到扩展的 `deployment` 模块中。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The build step dealing with the `Dev Services` should additionally register two runtime properties into the \"io.quarkus.quarkus-oidc\" namespace: `oidcProviderName` (for example, `Google`) and `oidcProviderUrlBase` (for example: `mycompany.devservices-google`) for the `OpenID Connect Card` to link to the Dev UI page representing your provider, for example:"
msgstr "处理 `Dev Services` 的构建步骤应该额外注册两个运行时属性到 \"io.quarkus.quarkus-oidc \"命名空间： `oidcProviderName` （例如： `Google` ）和 `oidcProviderUrlBase` （例如： `mycompany.devservices-google` ），以便将 `OpenID Connect Card` 链接到代表你的提供者的 Dev UI 页面，例如。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Additionally, the extension should produce a `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` to disable the default `Dev Services for Keycloak`, instead of the users having to type `quarkus.keycloak.devservices.enabled=false`."
msgstr "此外，扩展应该产生一个 `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` ，以禁用默认的 `Dev Services for Keycloak` ，而不是让用户输入 `quarkus.keycloak.devservices.enabled=false` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Please follow the xref:dev-ui.adoc[Dev UI] tutorial as well as check the `extensions/oidc/deployment` sources for more ideas."
msgstr "请按照 link:dev-ui.html[Dev UI] 教程，以及查看 `extensions/oidc/deployment` ，以获得更多的想法。"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy, no-wrap
msgid "Non Application Root Path Considerations"
msgstr "非应用根路径的考虑"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "This document refers to the `http://localhost:8080/q/dev` Dev UI URL in several places where `q` is a default non application root path. If you customize `quarkus.http.root-path` and/or `quarkus.http.non-application-root-path` properties then replace `q` accordingly, please see https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."
msgstr "本文档在多处提及 `http://localhost:8080/q/dev` Dev UI URL，其中 `q` 是默认的非应用程序根路径。如果您自定义了 `quarkus.http.root-path` 和/或 `quarkus.http.non-application-root-path` 属性，请相应替换 `q` ，更多信息请参阅 link:https://quarkus.io/blog/path-resolution-in-quarkus/[Quarkus 中的路径解析] 。"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:dev-ui.adoc[Dev UI]"
msgstr "link:dev-ui.html[开发用户界面]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak 文档]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security-openid-connect.adoc[Quarkus - Using OpenID Connect to Protect Service Applications using Bearer Token Authorization]"
msgstr "xref:security-openid-connect.adoc[Quarkus - 利用承载令牌授权使用 OpenID Connect 保护服务应用程序]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security-openid-connect-web-authentication.adoc[Quarkus - Using OpenID Connect to Protect Web Applications using Authorization Code Flow]"
msgstr "xref:security-openid-connect-web-authentication.adoc[Quarkus - 使用 OpenID Connect 通过授权代码流保护网络应用程序]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "xref:security.adoc[夸克安全]"
