# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-11-17 12:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Quarkus Extension for Spring DI API"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "While users are encouraged to use CDI annotations for injection, Quarkus provides a compatibility layer for Spring dependency injection in the form of the `spring-di` extension."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "This guide explains how a Quarkus application can leverage the well known Dependency Injection annotations included in the Spring Framework."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "The solution is located in the `spring-di-quickstart` {quickstarts-tree-url}/spring-di-quickstart[directory]."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "This command generates a project which imports the `spring-di` extension."
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `spring-di` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Add beans using Spring annotations"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "Let's proceed to create some beans using various Spring annotations."
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"First we will create a `StringFunction` interface that some of our beans will implement and which will be injected into another bean later on.\n"
"Create a `src/main/java/org/acme/spring/di/StringFunction.java` file and set the following content:"
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"With the interface in place, we will add an `AppConfiguration` class which will use the Spring's Java Config style for defining a bean.\n"
"It will be used to create a `StringFunction` bean that will capitalize the text passed as parameter.\n"
"Create a `src/main/java/org/acme/spring/di/AppConfiguration.java` file with the following content:"
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"As a Spring developer, you might be tempted to add the `@ComponentScan` annotation in order to define specific packages to scan for additional beans. Do note that `@ComponentScan` is entirely unnecessary since Quarkus performs xref:cdi-reference.adoc#bean_discovery[bean discovery] only in `annotated` mode with no visibility boundaries. Moreover, note that the bean discovery in Quarkus happens at build time.\n"
"In the same vein, Quarkus does not support the Spring `@Import` annotation."
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"Now we define another bean that will implement `StringFunction` using Spring's stereotype annotation style.\n"
"This bean will effectively be a no-op bean that simply returns the input as is.\n"
"Create a `src/main/java/org/acme/spring/di/NoOpSingleStringFunction.java` file and set the following content:"
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"Quarkus also provides support for injecting configuration values using Spring's `@Value` annotation.\n"
"To see that in action, first edit the `src/main/resources/application.properties` with the following content:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "Next create a new Spring bean in `src/main/java/org/acme/spring/di/MessageProducer.java` with the following content:"
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"The final bean we will create ties together all the previous beans.\n"
"Create a `src/main/java/org/acme/spring/di/GreeterBean.java` file and copy the following content:"
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"In the code above, we see that both field injection and constructor injection are being used (note that constructor injection does not need the `@Autowired` annotation since there is a single constructor).\n"
"Furthermore, the `@Value` annotation on `suffix` has also a default value defined, which in this case will be used since we have not defined `greeting.suffix` in `application.properties`."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Create the JAX-RS resource"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "Create the `src/main/java/org/acme/spring/di/GreeterResource.java` file with the following content:"
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Update the test"
msgstr ""

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"We also need to update the functional test to reflect the changes made to the endpoint.\n"
"Edit the `src/test/java/org/acme/spring/di/GreetingResourceTest.java` file and change the content of the `testHelloEndpoint` method to:"
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "Run the application with:"
msgstr "使用以下命令运行该应用程序:"

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "Open your browser to http://localhost:8080/greeting."
msgstr "在你的浏览器中打开 http://localhost:8080/greeting 网页。"

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "The result should be: `HELLO WORLD!`."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Run the application as a native"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "You can of course create a native image using instructions similar to xref:building-native-image.adoc[this] guide."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Important Technical Note"
msgstr "重要技术说明"

#: _versions/2.13/guides/spring-di.adoc
msgid ""
"Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.\n"
"Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.\n"
"What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover, Spring infrastructure\n"
"classes (like `org.springframework.beans.factory.config.BeanPostProcessor` , `org.springframework.context.ApplicationContext` for example) will not be executed.\n"
"Regarding the dependency injection in particular, Quarkus uses a Dependency Injection mechanism (called ArC) based on the https://jakarta.ee/specifications/cdi/2.0/cdi-spec-2.0.html[Contexts and Dependency Injection for Java 2.0] specification. If you want to learn more about it, we recommend you to read the xref:cdi.adoc[Quarkus introduction to CDI] and the xref:cdi-reference.adoc#arc-configuration-reference[CDI reference guide]\n"
"The various Spring Boot test features are not supported by Quarkus. For testing purposes, please, check the xref:getting-started-testing.adoc[Quarkus testing guide]."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Conversion Table"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "The following table shows how Spring DI annotations can be converted to CDI and / or MicroProfile annotations."
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Spring"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "CDI / MicroProfile"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Comments"
msgstr "备注"

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Autowired"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Inject"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Qualifier"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Named"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Value"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@ConfigProperty"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@ConfigProperty doesn't support an expression language the way @Value does, but makes the typical use cases much easier to handle"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Component"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Singleton"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "By default Spring stereotype annotations are singleton beans"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Service"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Repository"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Configuration"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@ApplicationScoped"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "In CDI a producer bean isn't limited to the application scope, it could just as well be @Singleton or @Dependent"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Bean"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Produces"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Scope"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Doesn't have a one-to-one mapping to a CDI annotation. Depending on the value of @Scope, one of the @Singleton, @ApplicationScoped, @SessionScoped, @RequestScoped, @Dependent could be used"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@ComponentScan"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Doesn't have a one-to-one mapping to a CDI annotation. It is not used in Quarkus because Quarkus does all classpath scanning at build time."
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "@Import"
msgstr ""

#. type: Table
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "Doesn't have a one-to-one mapping to a CDI annotation."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/spring-di.adoc
#, no-wrap
msgid "More Spring guides"
msgstr "更多 Spring 指南"

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkus拥有更多的Spring兼容特性。获取更多细节请参阅以下指南:"

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "xref:spring-web.adoc[Quarkus - Extension for Spring Web]"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "xref:spring-data-jpa.adoc[Quarkus - Extension for Spring Data JPA]"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "xref:spring-data-rest.adoc[Quarkus - Extension for Spring Data REST]"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "xref:spring-security.adoc[Quarkus - Extension for Spring Security]"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "xref:spring-cloud-config-client.adoc[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "xref:spring-boot-properties.adoc[Quarkus - Extension for Spring Boot properties]"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "xref:spring-cache.adoc[Quarkus - Extension for Spring Cache]"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/spring-di.adoc
msgid "xref:spring-scheduled.adoc[Quarkus - Extension for Spring Scheduled]"
msgstr ""
