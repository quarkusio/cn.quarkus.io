# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-22 13:13+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "OpenID Connect (OIDC) authorization code flow mechanism"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "The Quarkus OpenID Connect (OIDC) extension can protect application HTTP endpoints by using the OIDC Authorization Code Flow mechanism supported by OIDC-compliant authorization servers, such as https://www.keycloak.org[Keycloak]."
msgstr ""

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"The Authorization Code Flow mechanism authenticates users of your web application by redirecting them to an OIDC provider, such as Keycloak, to log in.\n"
"After authentication, the OIDC provider redirects the user back to the application with an authorization code that confirms that authentication was successful. Then, the application exchanges this code with the OIDC provider for an ID token (which represents the authenticated user), an access token, and a refresh token to authorize the user's access to the application."
msgstr "授权码流机制通过将网络应用程序的用户重定向到 OIDC 提供商（如 Keycloak）进行登录来验证用户身份。身份验证后，OIDC 提供商会将用户重定向回应用程序，并提供一个授权代码，确认身份验证成功。然后，应用程序将该代码与 OIDC 提供商交换 ID 令牌（代表已通过身份验证的用户）、访问令牌和刷新令牌，以授权用户访问应用程序。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The following diagram outlines the Authorization Code Flow mechanism in Quarkus."
msgstr "下图概述了Quarkus中的授权代码流机制。"

#. type: Block title
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Authorization code flow mechanism in Quarkus"
msgstr "Quarkus中的授权代码流机制"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The Quarkus user requests access to a Quarkus web-app application."
msgstr "Quarkus用户要求访问一个Quarkus网络应用程序。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The Quarkus web-app redirects the user to the authorization endpoint, that is, the OIDC provider for authentication."
msgstr "Quarkus网络应用程序将用户重定向到授权端点，也就是OIDC提供商进行认证。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The OIDC provider redirects the user to a login and authentication prompt."
msgstr "OIDC供应商将用户重定向到一个登录和认证提示。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "At the prompt, the user enters their user credentials."
msgstr "在提示下，用户输入他们的用户凭证。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The OIDC provider authenticates the user credentials entered and, if successful, issues an authorization code then redirects the user back to the Quarkus web-app with the code included as a query parameter."
msgstr "OIDC提供者对输入的用户凭证进行验证，如果成功的话，就会发出一个授权代码，然后将用户重定向到Quarkus网络应用程序，代码作为一个查询参数。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The Quarkus web-app exchanges this authorization code with the OIDC provider for ID, access, and refresh tokens."
msgstr "Quarkus网络应用程序与OIDC提供者交换这个授权代码，以获得ID、访问和刷新令牌。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"The authorization code flow is completed and the Quarkus web-app uses the tokens issued to access information about the user and grant the relevant role-based authorization to that user.\n"
"The following tokens are issued:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "ID token: The Quarkus web-app uses the user information in the ID token to enable the authenticated user to log in securely and to provide role-based access to the web-app."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Access token: The Quarkus web-app might use the access token to access the UserInfo API to get additional information about the authenticated user or propagate it to another endpoint."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Refresh token: (Optional) If the ID and access tokens expire, the Quarkus web-app can use the refresh token to get new ID and access tokens."
msgstr "刷新令牌：（可选）如果ID和访问令牌过期，Quarkus网络应用程序可以使用刷新令牌来获得新的ID和访问令牌。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "For information about protecting your applications using Bearer Token authorization, see xref:security-openid-connect.adoc[Using OpenID Connect to Protect Service Applications]."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "For information about multitenant support, see xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect Multi-Tenancy]."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Quickstart"
msgstr "快速入门"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "In this example, we build a very simple web application with a single page:"
msgstr "在这个例子中，我们建立了一个非常简单的网络应用，只有一个页面："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`/index.html`"
msgstr " `/index.html` "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "This page is protected and can only be accessed by authenticated users."
msgstr "这个页面是受保护的，只有通过认证的用户才能访问。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The solution is located in the `security-openid-connect-web-authentication-quickstart` {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[directory]."
msgstr "解决方案位于 `security-openid-connect-web-authentication-quickstart` {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart[directory] 中。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `oidc` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `oidc` 扩展加入到你的项目中去："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Writing the application"
msgstr "编写应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Let's write a simple JAX-RS resource which has all the tokens returned in the authorization code grant response injected:"
msgstr "让我们编写一个简单的 JAX-RS 资源，注入授权代码授予响应中返回的所有令牌："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "This endpoint has ID, access and refresh tokens injected. It returns a `preferred_username` claim from the ID token, a `scope` claim from the access token and also a refresh token availability status."
msgstr "该端点注入了 ID、访问和刷新令牌。它从 ID 令牌返回 `preferred_username` 索赔，从访问令牌返回 `scope` 索赔，还返回刷新令牌的可用性状态。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Note that you do not have to inject the tokens - it is only required if the endpoint needs to use the ID token to interact with the currently authenticated user or use the access token to access a downstream service on behalf of this user."
msgstr "请注意，你不必注入令牌--只有当端点需要使用ID令牌与当前认证的用户进行交互或使用访问令牌代表该用户访问下游服务时才需要。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Please see <<access_id_and_access_tokens,Access ID and Access Tokens>> section below for more information."
msgstr "请参阅下面的 xref:access_id_and_access_tokens[访问 ID 和访问令牌] 部分了解更多信息。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Configuring the application"
msgstr "配置该应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The OpenID Connect extension allows you to define the configuration using the `application.properties` file which should be located at the `src/main/resources` directory."
msgstr "OpenID Connect 扩展允许您使用 `application.properties` 文件定义配置，该文件应位于 `src/main/resources` 目录中。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "This is the simplest configuration you can have when enabling authentication to your application."
msgstr "这是你在启用你的应用程序的认证时可以拥有的最简单的配置。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The `quarkus.oidc.client-id` property references the `client_id` issued by the OpenID Connect Provider and the `quarkus.oidc.credentials.secret` property sets the client secret."
msgstr "`quarkus.oidc.client-id` 属性引用 OpenID Connect 提供者发布的 `client_id` ，而 `quarkus.oidc.credentials.secret` 属性则设置客户端秘密。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The `quarkus.oidc.application-type` property is set to `web-app` in order to tell Quarkus that you want to enable the OpenID Connect Authorization Code Flow, so that your users are redirected to the OpenID Connect Provider to authenticate."
msgstr "将 `quarkus.oidc.application-type` 属性设置为 `web-app` 是为了告诉 Quarkus 你想启用 OpenID Connect 授权代码流，以便将用户重定向到 OpenID Connect 提供程序进行身份验证。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"For last, the `quarkus.http.auth.permission.authenticated` permission is set to tell Quarkus about the paths you want to protect. In this case,\n"
"all paths are being protected by a policy that ensures that only `authenticated` users are allowed to access. For more details check xref:security-authorization.adoc[Security Authorization Guide]."
msgstr "最后，设置 `quarkus.http.auth.permission.authenticated` 权限是为了告诉 Quarkus 你想要保护的路径。在这种情况下，所有路径都将受到策略保护，确保只有 `authenticated` 用户才能访问。更多详情请查看 xref:security-authorization.adoc[《安全授权指南》] 。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Starting and Configuring the Keycloak Server"
msgstr "启动和配置Keycloak服务器"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "To start a Keycloak Server you can use Docker and just run the following command:"
msgstr "要启动Keycloak服务器，您可以使用Docker服务，且只需运行以下命令："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "其中 `keycloak.version` 应该设置为 `17.0.0` 或更高。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "You should be able to access your Keycloak Server at http://localhost:8180[localhost:8180]."
msgstr "你应该能够通过 http://localhost:8180[localhost:8180] 访问你的Keycloak服务器。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Log in as the `admin` user to access the Keycloak Administration Console. Username should be `admin` and password `admin`."
msgstr "以 `admin` 用户身份登录，访问Keycloak管理控制台。用户名应该是 `admin` ，密码是 `admin` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Import the {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm. For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "导入 {quickstarts-tree-url}/security-openid-connect-web-authentication-quickstart/config/quarkus-realm.json[领域配置文件]以创建新领域。更多详情，请参阅 Keycloak 文档，了解如何 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建新的领域] 。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Running the Application in Dev and JVM modes"
msgstr "在开发模式和 JVM 模式下运行应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "To run the application in a dev mode, use:"
msgstr "要在开发模式下运行应用程序，请使用："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "When you're done playing with dev mode you can run it as a standard Java application."
msgstr "当你玩完开发模式后，可以将其作为标准 Java 应用程序运行。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "First compile it:"
msgstr "首先编译它："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Then run it:"
msgstr "然后运行："

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Running the Application in Native Mode"
msgstr "在本地模式下运行应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "这个同样的演示可以被编译成本地代码：不需要任何修改。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"This implies that you no longer need to install a JVM on your\n"
"production environment, as the runtime technology is included in\n"
"the produced binary, and optimized to run with minimal resource overhead."
msgstr "这意味着您不再需要在您的生产环境中安装JVM，因为运行时技术包含在生产的二进制文件中，并以最小的资源开销优化运行。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"Compilation will take a bit longer, so this step is disabled by default;\n"
"let's build again by enabling the native build:"
msgstr "编译时间会稍长一些，因此默认情况下这一步是禁用的；让我们通过启用本地编译再次进行编译："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "一杯咖啡的时间后，您就可以直接运行该二进制文件了："

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Testing the Application"
msgstr "测试应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "To test the application, you should open your browser and access the following URL:"
msgstr "为了测试应用程序，你应该打开你的浏览器并访问以下网址。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "http://localhost:8080/tokens[http://localhost:8080/tokens]"
msgstr "link:http://localhost:8080/tokens[http://localhost:8080/tokens]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If everything is working as expected, you should be redirected to the Keycloak server to authenticate."
msgstr "如果一切正常，你应该会被重定向到 Keycloak 服务器进行身份验证。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "In order to authenticate to the application you should type the following credentials when at the Keycloak login page:"
msgstr "为了验证应用程序，你应该在Keycloak的登录页面上输入以下证书。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Username: *alice*"
msgstr "用户名: *alice* "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Password: *alice*"
msgstr "密码： *alice* "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "After clicking the `Login` button you should be redirected back to the application."
msgstr "点击 `Login` 按钮后，你应该被重新引导到应用程序。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Please also see the <<integration-testing-keycloak-devservices, Dev Services for Keycloak>> section below about writing the integration tests which depend on `Dev Services for Keycloak`."
msgstr "关于编写依赖 `Keycloak开发服务` 的集成测试，也请参见下面的 link:#integration-testing-keycloak-devservices[Keycloak开发服务] 部分。"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Reference Guide"
msgstr "参考指南"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Accessing ID and Access Tokens"
msgstr "访问 ID 和访问令牌"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "OIDC Code Authentication Mechanism acquires three tokens during the authorization code flow: https://openid.net/specs/openid-connect-core-1_0.html#IDToken[IDToken], Access Token and Refresh Token."
msgstr "OIDC 代码验证机制在授权代码流程中获取三个令牌： link:https://openid.net/specs/openid-connect-core-1_0.html#IDToken[IDToken] 、访问令牌和刷新令牌。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"ID Token is always a JWT token and is used to represent a user authentication with the JWT claims.\n"
"One can access ID Token claims by injecting `JsonWebToken` with an `IdToken` qualifier:"
msgstr "ID 令牌始终是一个 JWT 令牌，用于表示用户通过 JWT 索赔进行的身份验证。通过注入带有 `IdToken` 限定符的 `JsonWebToken` ，可以访问 ID 令牌请求："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Access Token is usually used by the OIDC `web-app` application to access other endpoints on behalf of the currently logged-in user. The raw access token can be accessed as follows:"
msgstr "访问令牌通常由OIDC `web-app` 应用程序使用，以代表当前登录的用户访问其他端点。原始访问令牌可以按以下方式访问："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Note that `AccessTokenCredential` will have to be used if the Access Token issued to the Quarkus `web-app` application is opaque (binary) and can not be parsed to `JsonWebToken`."
msgstr "请注意，如果发给 Quarkus `web-app` 应用程序的访问令牌是不透明的（二进制），无法解析为 `JsonWebToken` ，则必须使用 `AccessTokenCredential` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Injection of the `JsonWebToken` and `AccessTokenCredential` is supported in both `@RequestScoped` and `@ApplicationScoped` contexts."
msgstr "在 `@RequestScoped` 和 `@ApplicationScoped` 上下文中都支持注入 `JsonWebToken` 和 `AccessTokenCredential` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "RefreshToken is only used to refresh the current ID and access tokens as part of its <<session-management,session management>> process."
msgstr "RefreshToken 仅用于刷新当前 ID 和访问令牌，作为 xref:session-management[会话管理] 流程的一部分。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "User Info"
msgstr "用户信息"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If IdToken does not provide enough information about the currently authenticated user then you can set a `quarkus.oidc.authentication.user-info-required=true` property for a https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] JSON object from the OIDC userinfo endpoint to be requested."
msgstr "如果 IdToken 无法提供有关当前已验证用户的足够信息，则可以设置 `quarkus.oidc.authentication.user-info-required=true` 属性，以便从 OIDC link:https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[userinfo] 端点请求 link:https://openid.net/specs/openid-connect-core-1_0.html#UserInfo[UserInfo] JSON 对象。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "A request will be sent to the OpenID Provider UserInfo endpoint using the access token returned with the authorization code grant response and an `io.quarkus.oidc.UserInfo` (a simple `javax.json.JsonObject` wrapper) object will be created. `io.quarkus.oidc.UserInfo` can be either injected or accessed as a SecurityIdentity `userinfo` attribute."
msgstr "将使用随授权代码授予响应返回的访问令牌向 OpenID 提供商 UserInfo 端点发送请求，并创建一个 `io.quarkus.oidc.UserInfo` （简单的 `javax.json.JsonObject` 封装）对象。 `io.quarkus.oidc.UserInfo` 可作为 SecurityIdentity `userinfo` 属性注入或访问。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Configuration Metadata"
msgstr "配置元数据"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "The current tenant's discovered link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[OpenID Connect Configuration Metadata] is represented by `io.quarkus.oidc.OidcConfigurationMetadata` and can be either injected or accessed as a `SecurityIdentity` `configuration-metadata` attribute."
msgstr "当前租户发现的 link:https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata[OpenID Connect配置元数据] 由 `io.quarkus.oidc.OidcConfigurationMetadata` 表示，可以作为 `SecurityIdentity` `configuration-metadata` 属性注入或访问。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "The default tenant's `OidcConfigurationMetadata` is injected if the endpoint is public."
msgstr "如果端点是公开的，则默认租户的 `OidcConfigurationMetadata` 会被注入。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Token Claims And SecurityIdentity Roles"
msgstr "令牌声明(Token Claims)和安全身份角色(SecurityIdentity Roles)"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The way the roles are mapped to the SecurityIdentity roles from the verified tokens is identical to how it is done for the xref:security-openid-connect.adoc#token-claims-and-securityidentity-roles[bearer tokens] with the only difference being is that https://openid.net/specs/openid-connect-core-1_0.html#IDToken[ID Token] is used as a source of the roles by default."
msgstr "角色从已验证令牌映射到 SecurityIdentity 角色的方式与 xref:security-openid-connect.adoc#token-claims-and-securityidentity-roles[不记名] 令牌的方式相同，唯一的区别是 link:https://openid.net/specs/openid-connect-core-1_0.html#IDToken[ID 令牌] 默认用作角色的来源。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Note if you use Keycloak then you should set a Microprofile JWT client scope for ID token to contain a `groups` claim, please see the https://www.keycloak.org/docs/latest/server_admin/#protocol[Keycloak Server Administration Guide] for more information."
msgstr "请注意，如果使用 Keycloak，则应为 ID 标记设置 Microprofile JWT 客户端范围，以包含 `groups` claim，更多信息请参阅 link:https://www.keycloak.org/docs/latest/server_admin/#protocol[《Keycloak 服务器管理指南》] 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If only the access token contains the roles and this access token is not meant to be propagated to the downstream endpoints then set `quarkus.oidc.roles.source=accesstoken`."
msgstr "如果只有访问令牌包含角色，且该访问令牌不打算传播给下游端点，则设置 `quarkus.oidc.roles.source=accesstoken` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "If UserInfo is the source of the roles then set `quarkus.oidc.authentication.user-info-required=true` and `quarkus.oidc.roles.source=userinfo`, and if needed, `quarkus.oidc.roles.role-claim-path`."
msgstr "如果使用UserInfo为角色的来源，那么要设置 `quarkus.oidc.authentication.user-info-required=true` 和 `quarkus.oidc.roles.source=userinfo` ，如果需要的话，设置 `quarkus.oidc.roles.role-claim-path` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Additionally, a custom `SecurityIdentityAugmentor` can also be used to add the roles as documented xref:security.adoc#security-identity-customization[here]."
msgstr "此外，一个自定义的 `SecurityIdentityAugmentor` ，也可以用来添加角色，文档请查阅 link:security.html#security-identity-customization[这里] 。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Token Verification And Introspection"
msgstr "代币验证(Token Verification)和自省(Introspection)"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Please see xref:security-openid-connect.adoc#token-verification-introspection[Token Verification And Introspection] for details about how the tokens are verified and introspected."
msgstr "请参阅 \" xref:security-openid-connect.adoc#token-verification-introspection[代币验证和自省] \"，了解如何验证和自省代币。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Note that in case of `web-app` applications only `IdToken` is verified by default since the access token is not used by default to access the current Quarkus `web-app` endpoint and instead meant to be propagated to the services expecting this access token, for example, to the OpenID Connect Provider's UserInfo endpoint, etc. However, if you expect the access token to contain the roles required to access the current Quarkus endpoint (`quarkus.oidc.roles.source=accesstoken`) then it will also be verified."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Token Introspection and UserInfo Cache"
msgstr "Token自省和UserInfo缓存"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Code flow access tokens are not introspected unless they are expected to be the source of roles but will be used to get `UserInfo`. So there will be one or two remote calls with the code flow access token, if the token introspection and/or `UserInfo` are required."
msgstr "代码流访问令牌不会被反省，除非预计它们将成为角色的来源，但将用于获取 `UserInfo` 。因此，如果需要对代码流访问令牌进行反省和/或 `UserInfo` ，将有一到两次使用代码流访问令牌的远程调用。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Please see xref:security-openid-connect.adoc#token-introspection-userinfo-cache[Token Introspection and UserInfo cache] for more information about using a default token cache or registering a custom cache implementation."
msgstr "有关使用默认 xref:security-openid-connect.adoc#token-introspection-userinfo-cache[令牌] 缓存或注册自定义缓存实现的更多信息，请参阅令牌自省和 xref:security-openid-connect.adoc#token-introspection-userinfo-cache[UserInfo] 缓存。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "JSON Web Token Claim Verification"
msgstr "JSON网络令牌索赔验证"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"Please see xref:security-openid-connect.adoc#jwt-claim-verification[JSON Web Token Claim verification] section about the claim verification, including the `iss` (issuer) claim.\n"
"It applies to ID tokens but also to access tokens in a JWT format if the `web-app` application has requested the access token verification."
msgstr "请参阅 \" xref:security-openid-connect.adoc#jwt-claim-verification[JSON 网络令牌声明验证] \"部分有关声明验证的内容，包括 `iss` （发行方）声明。它不仅适用于 ID 令牌，还适用于 JWT 格式的访问令牌（如果 `web-app` 应用程序要求进行访问令牌验证）。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Redirection"
msgstr "重新定向"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "When the user is redirected to the OpenID Connect Provider to authenticate, the redirect URL includes a `redirect_uri` query parameter which indicates to the Provider where the user has to be redirected to once the authentication has been completed."
msgstr "当用户被重定向到 OpenID Connect 提供商处进行身份验证时，重定向 URL 会包含一个 `redirect_uri` 查询参数，用于向提供商指明身份验证完成后用户必须被重定向到的位置。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Quarkus will set this parameter to the current request URL by default. For example, if the user is trying to access a Quarkus service endpoint at `http://localhost:8080/service/1` then the `redirect_uri` parameter will be set to `http://localhost:8080/service/1`. Similarly, if the request URL is `http://localhost:8080/service/2` then the `redirect_uri` parameter will be set to `http://localhost:8080/service/2`, etc."
msgstr "Quarkus 默认将此参数设置为当前请求的 URL。例如，如果用户试图访问位于 `http://localhost:8080/service/1` 的 Quarkus 服务端点，那么 `redirect_uri` 参数将被设置为 `http://localhost:8080/service/1` .同样，如果请求 URL 是 `http://localhost:8080/service/2` 则 `redirect_uri` 参数将被设置为 `http://localhost:8080/service/2` 等。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"OpenID Connect Providers may be configured to require the `redirect_uri` parameter to have the same value (e.g. `http://localhost:8080/service/callback`) for all the redirect URLs.\n"
"In such cases a `quarkus.oidc.authentication.redirect-path` property has to be set, for example, `quarkus.oidc.authentication.redirect-path=/service/callback`, and Quarkus will set the `redirect_uri` parameter to an absolute URL such as `http://localhost:8080/service/callback` which will be the same regardless of the current request URL."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If `quarkus.oidc.authentication.redirect-path` is set but the original request URL has to be restored after the user has been redirected back to a callback URL such as `http://localhost:8080/service/callback` then a `quarkus.oidc.authentication.restore-path-after-redirect` property has to be set to `true` which will restore the request URL such as `http://localhost:8080/service/1`, etc."
msgstr "如果设置了 `quarkus.oidc.authentication.redirect-path` ，但在用户被重定向到回调 URL（如 `http://localhost:8080/service/callback` 则必须将 `quarkus.oidc.authentication.restore-path-after-redirect` 属性设置为 `true` ，这样才能恢复请求 URL，如 `http://localhost:8080/service/1` 等。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Dealing with Cookies"
msgstr "处理 Cookie"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The OIDC adapter uses cookies to keep the session, code flow and post logout state."
msgstr "OIDC 适配器使用 cookies 保存会话、代码流和注销后状态。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-path` property is used to ensure the cookies are visible especially when you access the protected resources with overlapping or different roots, for example:"
msgstr "`quarkus.oidc.authentication.cookie-path` 属性用于确保 cookie 的可见性，尤其是在访问受保护资源时，例如访问重叠或不同根的资源时："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`/index.html` and `/web-app/service`"
msgstr " `/index.html` 和 `/web-app/service` "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`/web-app/service1` and `/web-app/service2`"
msgstr " `/web-app/service1` 和 `/web-app/service2` "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`/web-app1/service` and `/web-app2/service`"
msgstr " `/web-app1/service` 和 `/web-app2/service` "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.cookie-path` is set to `/` by default but can be narrowed to the more specific root path such as `/web-app`."
msgstr "`quarkus.oidc.authentication.cookie-path` 默认设置为 ，但可以缩小到更具体的根路径，如 。 `/` `/web-app`"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"You can also set a `quarkus.oidc.authentication.cookie-path-header` property if the cookie path needs to be set dynamically.\n"
"For example, setting `quarkus.oidc.authentication.cookie-path-header=X-Forwarded-Prefix` means that the value of HTTP `X-Forwarded-Prefix` header will be used to set a cookie path."
msgstr "如果需要动态设置 cookie 路径，也可以设置 `quarkus.oidc.authentication.cookie-path-header` 属性。例如，设置 `quarkus.oidc.authentication.cookie-path-header=X-Forwarded-Prefix` 意味着将使用 HTTP `X-Forwarded-Prefix` 标头的值来设置 cookie 路径。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If `quarkus.oidc.authentication.cookie-path-header` is set but no configured HTTP header is available in the current request then the `quarkus.oidc.authentication.cookie-path` will be checked."
msgstr "如果 `quarkus.oidc.authentication.cookie-path-header` ，但当前请求中没有配置的HTTP头，那么 `quarkus.oidc.authentication.cookie-path` ，将被检查。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If your application is deployed across multiple domains, make sure to set a `quarkus.oidc.authentication.cookie-domain` property for the session cookie be visible to all protected Quarkus services, for example, if you have 2 services deployed at:"
msgstr "如果您的应用程序部署在多个域中，请确保为会话 cookie 设置 `quarkus.oidc.authentication.cookie-domain` 属性，使其对所有受保护的 Quarkus 服务可见："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "https://whatever.wherever.company.net/"
msgstr "https://whatever.wherever.company.net/"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "https://another.address.company.net/"
msgstr "https://another.address.company.net/"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "then the `quarkus.oidc.authentication.cookie-domain` property must be set to `company.net`."
msgstr "则 `quarkus.oidc.authentication.cookie-domain` 属性必须设置为 `company.net` 。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Logout"
msgstr "登出"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "By default, the logout is based on the expiration time of the ID Token issued by the OpenID Connect Provider. When the ID Token expires, the current user session at the Quarkus endpoint is invalidated and the user is redirected to the OpenID Connect Provider again to authenticate. If the session at the OpenID Connect Provider is still active, users are automatically re-authenticated without having to provide their credentials again."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The current user session may be automatically extended by enabling a `quarkus.oidc.token.refresh-expired` property. If it is set to `true` then when the current ID Token expires a Refresh Token Grant will be used to refresh ID Token as well as Access and Refresh Tokens."
msgstr "当前用户会话可通过启用 `quarkus.oidc.token.refresh-expired` 属性自动延长。如果设置为 `true` ，那么当当前 ID 令牌过期时，将使用刷新令牌授权来刷新 ID 令牌以及访问和刷新令牌。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "User-Initiated Logout"
msgstr "用户主动注销"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"Users can request a logout by sending a request to the Quarkus endpoint logout path set with a `quarkus.oidc.logout.path` property.\n"
"For example, if the endpoint address is `https://application.com/webapp` and the `quarkus.oidc.logout.path` is set to \"/logout\" then the logout request has to be sent to `https://application.com/webapp/logout`."
msgstr "用户可以通过向使用 `quarkus.oidc.logout.path` 属性设置的 Quarkus 端点注销路径发送请求来请求注销。例如，如果端点地址为 `https://application.com/webapp` 且 `quarkus.oidc.logout.path` 设置为\"/logout\"，那么注销请求必须发送到 `https://application.com/webapp/logout` ."

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "This logout request will start an https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP-Initiated Logout] and the user will be redirected to the OpenID Connect Provider to logout where a user may be asked to confirm the logout is indeed intended."
msgstr "这个注销请求将启动一个 link:https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP发起的注销] ，用户将被重定向到OpenID连接提供商进行注销，在那里可能会要求用户确认注销确实是为了。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The user will be returned to the endpoint post logout page once the logout has been completed if the `quarkus.oidc.logout.post-logout-path` property is set. For example, if the endpoint address is `https://application.com/webapp` and the `quarkus.oidc.logout.post-logout-path` is set to \"/signin\" then the user will be returned to `https://application.com/webapp/signin` (note this URI must be registered as a valid `post_logout_redirect_uri` in the OpenID Connect Provider)."
msgstr "如果设置了 `quarkus.oidc.logout.post-logout-path` 属性，一旦注销完成，用户将返回到端点后注销页面。例如，如果端点地址是 `<a href=\"https://application.com/webapp\" class=\"bare\">https://application.com/webapp</a>` 并且 `quarkus.oidc.logout.post-logout-path` 被设置为\"/signin\"，那么用户将被返回到 `<a href=\"https://application.com/webapp/signin\" class=\"bare\">https://application.com/webapp/signin</a>` (注意这个URI必须在OpenID Connect Provider中注册为有效的 `post_logout_redirect_uri` ）。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If the `quarkus.oidc.logout.post-logout-path` is set then a `q_post_logout` cookie will be created and a matching `state` query parameter will be added to the logout redirect URI and the OpenID Connect Provider will return this `state` once the logout has been completed. It is recommended for the Quarkus `web-app` applications to check that a `state` query parameter matches the value of the `q_post_logout` cookie which can be done for example in a JAX-RS filter."
msgstr "如果设置了 `quarkus.oidc.logout.post-logout-path` ，则将创建 `q_post_logout` cookie，并在注销重定向 URI 中添加匹配的 `state` 查询参数，注销完成后，OpenID Connect 提供程序将返回 `state` 。建议 Quarkus `web-app` 应用程序检查 `state` 查询参数是否与 `q_post_logout` cookie 的值相匹配，例如可以在 JAX-RS 过滤器中进行检查。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Note that a cookie name will vary when using xref:security-openid-connect-multitenancy.adoc[OpenID Connect Multi-Tenancy]. For example, it will be named `q_post_logout_tenant_1` for a tenant with a `tenant_1` id, etc."
msgstr "请注意，在使用 xref:security-openid-connect-multitenancy.adoc[OpenID Connect 多租户] 时，cookie 名称会有所不同。例如，对于 `tenant_1` id 的租户，它将被命名为 `q_post_logout_tenant_1` 等。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Here is an example of how to configure an RP initiated logout flow:"
msgstr "下面举例说明如何配置 RP 启动的注销流程："

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"You may also need to set `quarkus.oidc.authentication.cookie-path` to a path value common to all the application resources which is `/` in this example.\n"
"See <<oidc-cookies, Dealing with Cookies>> for more information."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Note that some OpenID Connect providers do not support https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP-Initiated Logout] specification (possibly because it is still technically a draft) and do not return an OpenID Connect well-known `end_session_endpoint` metadata property. However, it should not be a problem since these providers' specific logout mechanisms may only differ in how the logout URL query parameters are named."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "According to the https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP-Initiated Logout] specification, the `quarkus.oidc.logout.post-logout-path` property is represented as a `post_logout_redirect_uri` query parameter which will not be recognized by the providers which do not support this specification."
msgstr "根据 link:https://openid.net/specs/openid-connect-session-1_0.html#RPLogout[RP 启动的注销] 规范， `quarkus.oidc.logout.post-logout-path` 属性表示为 `post_logout_redirect_uri` 查询参数，不支持该规范的提供商将无法识别。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "You can use `quarkus.oidc.logout.post-logout-url-param` to work around this issue. You can also request more logout query parameters added with `quarkus.oidc.logout.extra-params`. For example, here is how you can support a logout with `Auth0`:"
msgstr "你可以使用 `quarkus.oidc.logout.post-logout-url-param` 来解决这个问题。你还可以要求用 `quarkus.oidc.logout.extra-params` 添加更多的注销查询参数。例如，以下是你如何用 `Auth0` 支持注销："

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Back-Channel Logout"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "link:https://openid.net/specs/openid-connect-backchannel-1_0.html[Back-Channel Logout] is used by OpenID Connect providers to log out the current user from all the applications this user is currently logged in, bypassing the user agent."
msgstr "link:https://openid.net/specs/openid-connect-backchannel-1_0.html[Back-Channel Logout] 被OpenID Connect提供商用来从该用户当前登录的所有应用中注销当前用户，绕过了用户代理。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "You can configure Quarkus to support `Back-Channel Logout` as follows:"
msgstr "你可以按以下方式配置Quarkus以支持 `Back-Channel Logout` ："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Absolute `Back-Channel Logout` URL is calculated by adding `quarkus.oidc.back-channel-logout.path` to the current endpoint URL, for example, `http://localhost:8080/back-channel-logout`. You will need to configure this URL in the Admin Console of your OpenID Connect Provider."
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Local Logout"
msgstr "本地注销"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If you work with a social provider such as Google and are concerned that the users can be logged out from all their Google applications with the <<user-initiated-logout,User-Initiated Logout>> which redirects the users to the provider's logout endpoint then you can support a local logout with the help of the <<oidc-session,OidcSession>> which only clears the local session cookie, for example:"
msgstr "如果您与谷歌等社交网络提供商合作，担心用户会通过 xref:user-initiated-logout[用户主动] 注销（将用户重定向到提供商的注销端点）从其所有谷歌应用程序中注销，那么您可以借助 xref:oidc-session[OidcSession] 支持本地注销，例如只清除本地会话 cookie："

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Session Management"
msgstr "会话管理"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "If you have a xref:security-openid-connect.adoc#single-page-applications[Single Page Application for Service Applications] where your OpenID Connect Provider script such as `keycloak.js` is managing an authorization code flow then that script will also control the SPA authentication session lifespan."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If you work with a Quarkus OIDC `web-app` application then it is Quarkus OIDC Code Authentication mechanism which is managing the user session lifespan."
msgstr "如果您使用的是 Quarkus OIDC `web-app` 应用程序，那么管理用户会话寿命的就是 Quarkus OIDC 代码验证机制。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The session age is calculated by adding the lifespan value of the current IDToken and the values of the `quarkus.oidc.authentication.session-age-extension` and `quarkus.oidc.token.lifespan-grace` properties. Of the last two properties only `quarkus.oidc.authentication.session-age-extension` should be used to significantly extend the session lifespan if required since `quarkus.oidc.token.lifespan-grace` is only meant for taking some small clock skews into consideration."
msgstr "会话年龄的计算方法是将当前 IDToken 的寿命值与 `quarkus.oidc.authentication.session-age-extension` 和 `quarkus.oidc.token.lifespan-grace` 属性的值相加。在后两个属性中，只有 `quarkus.oidc.authentication.session-age-extension` 可用于在需要时大幅延长会话寿命，因为 `quarkus.oidc.token.lifespan-grace` 只用于考虑一些小的时钟偏差。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "When the currently authenticated user returns to the protected Quarkus endpoint and the ID token associated with the session cookie has expired then, by default, the user will be auto-redirected to the OIDC Authorization endpoint to re-authenticate. Most likely the OIDC provider will challenge the user again though not necessarily if the session between the user and this OIDC provider is still active which may happen if it is configured to last longer than the ID token."
msgstr "当当前已通过身份验证的用户返回到受保护的 Quarkus 端点时，如果与会话 cookie 相关联的 ID 标记已过期，那么默认情况下，用户将被自动重定向到 OIDC 授权端点重新进行身份验证。大多数情况下，OIDC 提供商会再次向用户提出挑战，但如果用户与该 OIDC 提供商之间的会话仍处于活动状态，则不一定会这样。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If the `quarkus.oidc.token.refresh-expired` then the expired ID token (as well as the access token) will be refreshed using the refresh token returned with the authorization code grant response. This refresh token may also be recycled (refreshed) itself as part of this process. As a result the new session cookie will be created and the session will be extended."
msgstr "如果 `quarkus.oidc.token.refresh-expired` ，过期的 ID 令牌（以及访问令牌）将使用随授权码授予响应一起返回的刷新令牌刷新。在此过程中，刷新令牌本身也可能被回收（刷新）。因此，将创建新的会话 cookie 并扩展会话。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Note, `quarkus.oidc.authentication.session-age-extension` can be important when dealing with expired ID tokens, when the user is not very active. In such cases, if the ID token expires, then the session cookie may not be returned to the Quarkus endpoint during the next user request and Quarkus will assume it is the first authentication request. Therefore, using `quarkus.oidc.authentication.session-age-extension` is important if you need to have even the expired ID tokens refreshed."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "You can also complement refreshing the expired ID tokens by proactively refreshing the valid ID tokens which are about to be expired within the `quarkus.oidc.token.refresh-token-time-skew` value. If, during the current user request, it is calculated that the current ID token will expire within this `quarkus.oidc.token.refresh-token-time-skew` then it will be refreshed and the new session cookie will be created. This property should be set to a value which is less than the ID token lifespan; the closer it is to this lifespan value the more often the ID token will be refreshed."
msgstr "您还可以通过主动刷新即将在 `quarkus.oidc.token.refresh-token-time-skew` 值内过期的有效 ID 令牌来补充刷新过期的 ID 令牌。如果在当前用户请求期间，计算出当前 ID 令牌将在此 `quarkus.oidc.token.refresh-token-time-skew` 内过期，则将刷新该令牌并创建新的会话 cookie。该属性应设置为小于 ID 令牌有效期的值；越接近有效期值，ID 令牌刷新的频率就越高。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "You can have this process further optimized by having a simple JavaScript function periodically emulating the user activity by pinging your Quarkus endpoint thus minimizing the window during which the user may have to be re-authenticated."
msgstr "您可以使用一个简单的 JavaScript 函数，通过 ping Quarkus 端点来定期模拟用户活动，从而最大限度地减少用户可能需要重新进行身份验证的窗口，从而进一步优化这一过程。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Note this user session can not be extended forever - the returning user with the expired ID token will have to re-authenticate at the OIDC provider endpoint once the refresh token has expired."
msgstr "请注意，该用户会话不能永久延长--一旦刷新令牌过期，使用过期 ID 令牌的返回用户就必须在 OIDC 提供商端点重新进行身份验证。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "OidcSession"
msgstr "OidcSession"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`io.quarkus.oidc.OidcSession` is a wrapper around the current `IdToken`. It can help to perform a <<local-logout, Local Logout>>, retrieve the current session's tenant identifier and check when the session will expire. More useful methods will be added to it over time."
msgstr "`io.quarkus.oidc.OidcSession` 是对当前 的封装。它有助于执行 `IdToken` xref:local-logout[本地注销] 、检索当前会话的租户标识符以及检查会话何时过期。随着时间的推移，还将添加更多有用的方法。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "TokenStateManager"
msgstr "令牌状态管理器"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "OIDC `CodeAuthenticationMechanism` is using the default `io.quarkus.oidc.TokenStateManager` interface implementation to keep the ID, access and refresh tokens returned in the authorization code or refresh grant responses in a session cookie. It makes Quarkus OIDC endpoints completely stateless."
msgstr "OIDC `CodeAuthenticationMechanism` 使用默认的 `io.quarkus.oidc.TokenStateManager` 接口实现，将授权代码或刷新授权响应中返回的 ID、访问和刷新令牌保存在会话 cookie 中。这使得 Quarkus OIDC 端点完全无状态。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Note that some endpoints do not require the access token. An access token is only required if the endpoint needs to retrieve `UserInfo` or access the downstream service with this access token or use the roles associated with the access token (the roles in the ID token are checked by default). In such cases you can set either `quarkus.oidc.token-state-manager.strategy=id-refresh-token` (keep ID and refresh tokens only) or `quarkus.oidc.token-state-manager.strategy=id-token` (keep ID token only)."
msgstr "请注意，有些端点不需要访问令牌。只有当端点需要使用该访问令牌检索 `UserInfo` 或访问下游服务，或使用与访问令牌相关的角色（默认情况下会选中 ID 令牌中的角色）时，才需要访问令牌。在这种情况下，您可以设置 `quarkus.oidc.token-state-manager.strategy=id-refresh-token` （只保留 ID 和刷新令牌）或 `quarkus.oidc.token-state-manager.strategy=id-token` （只保留 ID 令牌）。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"If the ID, access and refresh tokens are JWT tokens then combining all of them (if the strategy is the default `keep-all-tokens`) or only ID and refresh tokens (if the strategy is `id-refresh-token`) may produce a session cookie value larger than 4KB and the browsers may not be able to keep this cookie.\n"
"In such cases, you can use `quarkus.oidc.token-state-manager.split-tokens=true` to have a unique session token per each of these tokens."
msgstr "如果 ID、访问和刷新令牌都是 JWT 令牌，那么将所有这些令牌（如果策略是默认的 `keep-all-tokens` ）或只将 ID 和刷新令牌（如果策略是 `id-refresh-token` ）组合在一起可能会产生一个大于 4KB 的会话 cookie 值，浏览器可能无法保留此 cookie。在这种情况下，可以使用 `quarkus.oidc.token-state-manager.split-tokens=true` 为每个令牌设置一个唯一的会话令牌。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"Note that `TokenStateManager` will encrypt the tokens before storing them in the session cookie.\n"
"For example, here is how you configure it to split the tokens and encrypt them:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The token encryption secret must be at least 32 characters long. If this key is not configured then either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.jwt.secret` will be hashed to create an encryption key."
msgstr "令牌加密密钥的长度必须至少为 32 个字符。如果未配置此密钥，则 `quarkus.oidc.credentials.secret` 或 `quarkus.oidc.credentials.jwt.secret` 将被散列以创建加密密钥。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "`quarkus.oidc.token-state-manager.encryption-secret` should be configured if Quarkus authenticates to OpenId Connect Provider using either mTLS or `private_key_jwt` (where a private RSA or EC key is used to sign a JWT token) authentication methods, otherwise a random key will be generated which will be problematic if the Quarkus application is running in the cloud with multiple pods managing the requests."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "If you need you can disable encrypting the tokens in the session cookie with `quarkus.oidc.token-state-manager.encryption-required=false`."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Register your own `io.quarkus.oidc.TokenStateManager' implementation as an `@ApplicationScoped` CDI bean if you need to customize the way the tokens are associated with the session cookie. For example, you may want to keep the tokens in a database and have only a database pointer stored in a session cookie. Note though that it may present some challenges in making the tokens available across multiple microservices nodes."
msgstr "如果需要自定义令牌与会话 cookie 的关联方式，请注册自己的 `io.quarkus.oidc.TokenStateManager' implementation as an `@ApplicationScoped` CDI Bean。例如，您可能希望将令牌保存在数据库中，并在会话 cookie 中仅存储数据库指针。但请注意，这可能会给在多个微服务节点上提供令牌带来一些挑战。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Here is a simple example:"
msgstr "下面是一个简单的例子："

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Proof Of Key for Code Exchange (PKCE)"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "link:https://datatracker.ietf.org/doc/html/rfc7636[Proof Of Key for Code Exchange] (PKCE) minimizes the risk of the authorization code interception."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "While `PKCE` is of primary importance to the public OpenID Connect clients (such as the SPA scripts running in a browser), it can also provide an extra level of protection to Quarkus OIDC `web-app` applications which are confidential OpenID Connect clients capable of securely storing the client secret and using it to exchange the code for the tokens."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "You can enable `PKCE` for your OIDC `web-app` endpoint with a `quarkus.oidc.authentication.pkce-required` property and a 32 characters long secret, for example:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "If you already have a 32 character long client secret then `quarkus.oidc.authentication.pkce-secret` does not have to be set unless you prefer to use a different secret key."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "The secret key is required for encrypting a randomly generated `PKCE` `code_verifier` while the user is being redirected with the `code_challenge` query parameter to OpenID Connect Provider to authenticate. The `code_verifier` will be decrypted when the user is redirected back to Quarkus and sent to the token endpoint alongside the `code`, client secret and other parameters to complete the code exchange. The provider will fail the code exchange if a `SHA256` digest of the `code_verifier` does not match the `code_challenge` provided during the authentication request."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Listening to important authentication events"
msgstr "听取重要的认证事件"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "One can register `@ApplicationScoped` bean which will observe important OIDC authentication events. The listener will be updated when a user has logged in for the first time or re-authenticated, as well as when the session has been refreshed. More events may be reported in the future. For example:"
msgstr "用户可以注册 `@ApplicationScoped` Bean，以观察重要的 OIDC 身份验证事件。当用户首次登录或重新认证以及刷新会话时，监听器将得到更新。将来可能会报告更多事件。例如"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Single Page Applications"
msgstr "单页应用程序"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Please check if implementing SPAs the way it is suggested in the xref:security-openid-connect.adoc#single-page-applications[Single Page Applications for Service Applications] section can meet your requirements."
msgstr "请检查按照 \" xref:security-openid-connect.adoc#single-page-applications[服务应用程序的单页应用程序] \"部分所建议的方式实施 SPA 是否能满足您的要求。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If you prefer to use SPA and JavaScript API such as `Fetch` or `XMLHttpRequest`(XHR) with Quarkus web applications, please be aware that OpenID Connect Providers may not support CORS for Authorization endpoints where the users are authenticated after a redirect from Quarkus. This will lead to authentication failures if the Quarkus application and the OpenID Connect Provider are hosted on the different HTTP domains/ports."
msgstr "如果您喜欢在 Quarkus Web 应用程序中使用 SPA 和 JavaScript API（如 `Fetch` 或 `XMLHttpRequest` (XHR)），请注意 OpenID Connect Providers 可能不支持授权端点的 CORS，在这些端点中，用户是在 Quarkus 重定向后进行身份验证的。如果 Quarkus 应用程序和 OpenID Connect 提供程序托管在不同的 HTTP 域/端口上，这将导致验证失败。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "In such cases, set the `quarkus.oidc.authentication.java-script-auto-redirect` property to `false` which will instruct Quarkus to return a `499` status code and `WWW-Authenticate` header with the `OIDC` value. The browser script also needs to be updated to set `X-Requested-With` header with the `JavaScript` value and reload the last requested page in case of `499`, for example:"
msgstr "在这种情况下，将 `quarkus.oidc.authentication.java-script-auto-redirect` 属性设置为 `false` ，这将指示 Quarkus 返回 `499` 状态代码和带有 `OIDC` 值的 `WWW-Authenticate` 头信息。浏览器脚本也需要更新，以便用 `JavaScript` 设置 `X-Requested-With` 头信息，并在 `499` 的情况下重新加载上次请求的页面："

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Cross Origin Resource Sharing"
msgstr "跨域资源共享(CORS)"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If you plan to consume this application from a Single Page Application running on a different domain, you will need to configure CORS (Cross-Origin Resource Sharing). Please read the xref:http-reference.adoc#cors-filter[HTTP CORS documentation] for more details."
msgstr "如果计划从运行在不同域上的单页应用程序中使用此应用程序，则需要配置 CORS（跨源资源共享）。详情请阅读 xref:http-reference.adoc#cors-filter[HTTP CORS 文档] 。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Integration with GitHub and other OAuth2 providers"
msgstr "与 GitHub 和其他 OAuth2 提供商集成"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Some well known providers such as GitHub or LinkedIn are not OpenID Connect but OAuth2 providers which support the `authorization code flow`, for example, link:https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps[GitHub OAuth2] and link:https://docs.microsoft.com/en-us/linkedin/shared/authentication/authorization-code-flow[LinkedIn OAuth2]."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "The main difference between OpenID Connect and OAuth2 providers is that OpenID Connect providers, by building on top of OAuth2, return an `ID Token` representing a user authentication, in addition to the standard authorization code flow `access` and `refresh` tokens returned by `OAuth2` providers."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "OAuth2 providers such as GitHub do not return `IdToken`, the fact of the user authentication is implicit and is indirectly represented by the `access` token which represents an authenticated user authorizing the current Quarkus `web-app` application to access some data on behalf of the authenticated user."
msgstr "OAuth2供应商如GitHub不返回 `IdToken` ，用户认证的事实是隐含的，并由 `access` 令牌间接表示，代表认证用户授权当前Quarkus `web-app` 应用程序代表认证用户访问一些数据。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"For example, when working with GitHub, the Quarkus endpoint can acquire an `access` token which will allow it to request a GitHub profile of the current user.\n"
"In fact this is exactly how a standard OpenID Connect `UserInfo` acquisition also works - by authenticating into your OpenID Connect provider you also give a permission to Quarkus application to acquire your <<user-info,UserInfo>> on your behalf - and it also shows what is meant by OpenID Connect being built on top of OAuth2."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "In order to support the integration with such OAuth2 servers, `quarkus-oidc` needs to be configured to allow the authorization code flow responses without `IdToken`: `quarkus.oidc.authentication.id-token-required=false`."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "It is required because `quarkus-oidc` expects that not only `access` and `refresh` tokens but also `IdToken` will be returned once the authorization code flow completes."
msgstr "之所以需要它，是因为 `quarkus-oidc` 希望在授权码流完成后，不仅能返回 `access` 和 `refresh` 标记，还能返回 `IdToken` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Note, even though you will configure the extension to support the authorization code flows without `IdToken`, an internal `IdToken` will be generated to support the way `quarkus-oidc` operates where an `IdToken` is used to support the authentication session and to avoid redirecting the user to the provider such as GitHub on every request. In this case the session lifespan is set to 5 minutes which can be extended further as described in the <<session-management,session management>> section."
msgstr ""

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"The next step is to ensure that the returned access token can be useful to the current Quarkus endpoint.\n"
"If the OAuth2 provider supports the introspection endpoint then you may be able to use this access token as a source of roles with `quarkus.oidc.roles.source=accesstoken`. If no introspection endpoint is available then at the very least it should be possible to request <<user-info,UserInfo>> from this provider with `quarkus.oidc.authentication.user-info-required` - this is the case with GitHub."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Configuring the endpoint to request <<user-info,UserInfo>> is the only way `quarkus-oidc` can be integrated with the providers such as GitHub."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Note that requiring <<user-info,UserInfo>> involves making a remote call on every request - therefore you may want to consider caching `UserInfo` data, see <<token-introspection-userinfo-cache,Token Introspection and UserInfo Cache> for more details."
msgstr "请注意，要求 xref:user-info[UserInfo] 会在每次请求时进行远程调用--因此，你可能需要考虑缓存 `UserInfo` 数据，详情请参见 <<令牌自省-userinfo-缓存,令牌自省和 UserInfo 缓存>>。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Alternatively, you may want to request that `UserInfo` is embedded into the internal generated `IdToken` with the `quarkus.oidc.cache-user-info-in-idtoken=true` property - the advantage of this approach is that by default no cached `UserInfo` state will be kept with the endpoint - instead it will be stored in a session cookie. You may also want to consider encrypting `IdToken` in this case if `UserInfo` contains sensitive data, please see <<token-state-manager,Encrypt Tokens With TokenStateManager>> for more information."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Also, OAuth2 servers may not support a well-known configuration endpoint in which case the discovery has to be disabled and the authorization, token, and introspection and/or userinfo endpoint paths have to be configured manually."
msgstr "此外，OAuth2 服务器可能不支持众所周知的配置端点，在这种情况下，必须禁用发现功能，并手动配置授权、令牌、自省和/或用户信息端点路径。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Here is how you can integrate `quarkus-oidc` with GitHub after you have link:https://docs.github.com/en/developers/apps/building-oauth-apps/creating-an-oauth-app[created a GitHub OAuth application]. Configure your Quarkus endpoint like this:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "See xref:security-openid-connect-providers.adoc[Well Known OpenID Connect providers] for more details about configuring other well-known providers."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "This is all what is needed for an endpoint like this one to return the currently authenticated user's profile with `GET http://localhost:8080/github/userinfo` and access it as the individual `UserInfo` properties:"
msgstr "这就是像这样的端点所需要的全部内容，它可以返回当前已通过身份验证的用户的配置文件，并以 `GET http://localhost:8080/github/userinfo` 返回当前身份验证的用户配置文件，并作为 `UserInfo` 的单个属性访问该配置文件："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "If you support more than one social provider with the help of xref:security-openid-connect-multitenancy.adoc[OpenID Connect Multi-Tenancy], for example, Google which is an OpenID Connect Provider returning `IdToken` and GitHub which is an OAuth2 provider returning no `IdToken` and only allowing to access `UserInfo` then you can have your endpoint working with only the injected `SecurityIdentity` for both Google and GitHub flows. A simple augmentation of `SecurityIdentity` will be required where a principal created with the internally generated `IdToken` will be replaced with the `UserInfo` based principal when the GiHub flow is active:"
msgstr "如果你在 link:security-openid-connect-multitenancy.html[OpenID Connect多租户] 的帮助下支持一个以上的社交提供商，例如，谷歌是一个OpenID Connect提供商，返回 `IdToken` ，而GitHub是一个OAuth2提供商，不返回 `IdToken` ，只允许访问 `UserInfo` ，那么你可以让你的端点在谷歌和GitHub流程中只使用注入的 `SecurityIdentity` 。需要对 `SecurityIdentity` 进行简单的增强，当GiHub流量激活时，用内部生成的 `IdToken` 创建的本金将被替换为基于 `UserInfo` 的本金："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Now, the following code will work when the user is signing in into your application with both Google or GitHub:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Possibly a simpler alternative is to inject both `@IdToken JsonWebToken` and `UserInfo` and use `JsonWebToken` when dealing with the providers returning `IdToken` and `UserInfo` - with the providers which do not return `IdToken`."
msgstr "更简单的方法可能是同时注入 `@IdToken JsonWebToken` 和 `UserInfo` ，在处理返回 `IdToken` 的提供程序时使用 `JsonWebToken` ，在处理不返回 `IdToken` 的提供程序时使用 `UserInfo` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "The last important point is to make sure the callback path you enter in the GitHub OAuth application configuration matches the endpoint path where you'd like the user be redirected to after a successful GitHub authentication and application authorization, in this case it has to be set to `http:localhost:8080/github/userinfo`."
msgstr "最后一点很重要，那就是确保在 GitHub OAuth 应用程序配置中输入的回调路径与 GitHub 身份验证和应用程序授权成功后用户重定向到的端点路径相匹配，本例中必须将其设置为 `http:localhost:8080/github/userinfo` 。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Cloud Services"
msgstr "云服务"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Google Cloud"
msgstr "谷歌云"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "You can have Quarkus OIDC `web-app` applications access **Google Cloud services** such as **BigQuery** on behalf of the currently authenticated users who have enabled OpenID Connect (Authorization Code Flow) permissions to such services in their Google Developer Consoles."
msgstr "您可以让 Quarkus OIDC `web-app` 应用程序代表当前已通过身份验证的用户访问 *BigQuery* 等 *Google 云* 服务，这些用户已在其 Google 开发人员控制台中启用了 OpenID Connect（授权代码流）权限。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"It is super easy to do with https://github.com/quarkiverse[Quarkiverse] https://github.com/quarkiverse/quarkiverse-google-cloud-services[Google Cloud Services], only add\n"
"the https://github.com/quarkiverse/quarkiverse-google-cloud-services/releases/latest[latest tag] service dependency, for example:"
msgstr "使用 link:https://github.com/quarkiverse[Quarkiverse] link:https://github.com/quarkiverse/quarkiverse-google-cloud-services[谷歌云服务] 非常简单，只需添加 link:https://github.com/quarkiverse/quarkiverse-google-cloud-services/releases/latest[最新的标签] 服务依赖即可："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "and configure Google OIDC properties:"
msgstr "并配置谷歌OIDC属性："

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Provider Endpoint configuration"
msgstr "提供者端点配置"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "OIDC `web-app` application needs to know OpenID Connect provider's authorization, token, `JsonWebKey` (JWK) set and possibly `UserInfo`, introspection and end session (RP-initiated logout) endpoint addresses."
msgstr "OIDC `web-app` 应用程序需要知道 OpenID Connect 提供商的授权、令牌、 `JsonWebKey` (JWK) 集，可能还需要知道 `UserInfo` 、反省和结束会话（RP 启动的注销）端点地址。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "By default, they are discovered by adding a `/.well-known/openid-configuration` path to the configured `quarkus.oidc.auth-server-url`."
msgstr "默认情况下，它们是通过在配置的 `quarkus.oidc.auth-server-url` 中，添加一个 `/.well-known/openid-configuration` 路径来发现的。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Alternatively, if the discovery endpoint is not available, or if you would like to save on the discovery endpoint round-trip, you can disable the discovery and configure them with relative path values, for example:"
msgstr "另外，如果发现端点不可用，或者你想节省发现端点的往返开销，你可以禁用发现，用相对路径值配置它们，比如说："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Sometimes your OpenId Connect provider supports a metadata discovery but does not return all the endpoint URLs required for the authorization code flow to complete or for the application to support the additional functions such as a user logout. In such cases you can simply configure a missing endpoint URL locally:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Exactly the same configuration can be used to override a discovered endpoint URL if that URL does not work for the local Quarkus endpoint and a more specific value is required. For example, one can imagine that in the above example, a provider which supports both global and application specific end-session endpoints returns a global end-session URL such as `http://localhost:8180/oidcprovider/account/global-logout` which will logout the user from all the applications this user is currently logged in, while the current application only wants to get this user logged out from this application, therefore, `quarkus.oidc.end-session-path=logout` is used to override the global end-session URL."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Token Propagation"
msgstr "令牌传播"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Please see xref:security-openid-connect-client-reference.adoc#token-propagation[Token Propagation] section about the Authorization Code Flow access token propagation to the downstream services."
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Oidc Provider Client Authentication"
msgstr "OIDC供应商客户认证"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`quarkus.oidc.runtime.OidcProviderClient` is used when a remote request to an OpenID Connect Provider has to be done. It has to authenticate to the OpenID Connect Provider when the authorization code has to be exchanged for the ID, access and refresh tokens, when the ID and access tokens have to be refreshed or introspected."
msgstr "`quarkus.oidc.runtime.OidcProviderClient` 用于向 OpenID Connect 提供商发出远程请求。当需要为 ID、访问和刷新令牌交换授权代码时，当需要刷新或检查 ID 和访问令牌时，它必须对 OpenID Connect 提供商进行身份验证。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "All the https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[OIDC Client Authentication] options are supported, for example:"
msgstr "支持所有 link:https://openid.net/specs/openid-connect-core-1_0.html#ClientAuthentication[OIDC 客户端身份验证] 选项，例如"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`client_secret_basic`:"
msgstr " `client_secret_basic` :"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "or"
msgstr "或"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "or with the secret retrieved from a xref:credentials-provider.adoc[CredentialsProvider]:"
msgstr "或者用从 link:credentials-provider.html[CredentialsProvider] 中获取的秘密。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`client_secret_post`:"
msgstr " `client_secret_post` :"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`client_secret_jwt`, signature algorithm is HS256:"
msgstr "`client_secret_jwt` 签名算法为 HS256："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`private_key_jwt` with the PEM key file, signature algorithm is RS256:"
msgstr "`private_key_jwt` 使用 PEM 密钥文件，签名算法为 RS256："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`private_key_jwt` with the key store file, signature algorithm is RS256:"
msgstr "`private_key_jwt` 密钥存储文件，签名算法为 RS256："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Using `client_secret_jwt` or `private_key_jwt` authentication methods ensures that no client secret goes over the wire."
msgstr "使用 `client_secret_jwt` 或 `private_key_jwt` 认证方法，可以确保没有客户的秘密在网上流传。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Additional JWT Authentication options"
msgstr "额外的JWT认证选项"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "If `client_secret_jwt`, `private_key_jwt` authentication methods are used or an Apple `post_jwt` method is used then the JWT signature algorithm, key identifier, audience, subject and issuer can be customized, for example:"
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Apple POST JWT"
msgstr "苹果POST JWT"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Apple OpenID Connect Provider uses a `client_secret_post` method where a secret is a JWT produced with a `private_key_jwt` authentication method but with Apple account specific issuer and subject claims."
msgstr "Apple OpenID Connect Provider 使用 `client_secret_post` 方法，其中的秘密是使用 `private_key_jwt` 身份验证方法生成的 JWT，但带有特定于 Apple 帐户的签发人和主体声明。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`quarkus-oidc` supports a non-standard `client_secret_post_jwt` authentication method which can be configured as follows:"
msgstr "`quarkus-oidc` 支持非标准的 身份验证方法，可按如下方式配置： `client_secret_post_jwt` "

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Mutual TLS"
msgstr "相互之间的TLS"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Some OpenID Connect Providers may require that a client is authenticated as part of the `Mutual TLS` (`mTLS`) authentication process."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "`quarkus-oidc` can be configured as follows to support `mTLS`:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Introspection Endpoint Authentication"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Some OpenID Connect Providers may require authenticating to its introspection endpoint using Basic Authentication with the credentials different to `client_id` and `client_secret` which may have already been configured to support `client_secret_basic` or `client_secret_post` client authentication methods described in the <<oidc-provider-client-authentication, Oidc Provider Client Authentication>> section."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "If the tokens have to be introspected and the introspection endpoint specific authentication mechanism is required then you can configure `quarkus-oidc` like this:"
msgstr ""

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Testing"
msgstr "测试"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Start by adding the following dependencies to your test project:"
msgstr "首先在你的测试项目中添加以下依赖项："

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Add the following dependency:"
msgstr "添加以下依赖关系："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Prepare the REST test endpoints, set `application.properties`, for example:"
msgstr "准备好REST测试端点，设置 `application.properties` ，例如："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "and finally write the test code, for example:"
msgstr "并最终写出测试代码，例如："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`OidcWiremockTestResource` recognizes `alice` and `admin` users. The user `alice` has the `user` role only by default - it can be customized with a `quarkus.test.oidc.token.user-roles` system property. The user `admin` has the `user` and `admin` roles by default - it can be customized with a `quarkus.test.oidc.token.admin-roles` system property."
msgstr " `OidcWiremockTestResource` 识别 和 用户。用户 ，默认情况下只有 角色--可以通过 系统属性来定制。用户 默认拥有 和 角色 - 它可以通过 系统属性进行定制。 `alice` `admin` `alice` `user` `quarkus.test.oidc.token.user-roles` `admin` `user` `admin` `quarkus.test.oidc.token.admin-roles` "

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Additionally, `OidcWiremockTestResource` set token issuer and audience to `https://service.example.com` which can be customized with `quarkus.test.oidc.token.issuer` and `quarkus.test.oidc.token.audience` system properties."
msgstr "此外， `OidcWiremockTestResource` ，将代币发行者和受众设置为 `<a href=\"https://service.example.com\" class=\"bare\">https://service.example.com</a>` 这可以通过 `quarkus.test.oidc.token.issuer` 和 `quarkus.test.oidc.token.audience` 系统属性来定制。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`OidcWiremockTestResource` can be used to emulate all OpenID Connect providers."
msgstr " `OidcWiremockTestResource` 可以用来模拟所有的OpenID Connect提供商。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Dev Services for Keycloak"
msgstr "为Keycloak提供的开发服务"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"Using xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] is recommended for the integration testing against Keycloak.\n"
"`Dev Services for Keycloak` will launch and initialize a test container: it will create a `quarkus` realm, a `quarkus-app` client (`secret` secret) and add `alice` (`admin` and `user` roles) and `bob` (`user` role) users, where all of these properties can be customized."
msgstr "建议使用 link:security-openid-connect-dev-services.html[Keycloak开发服务] 进行针对Keycloak的集成测试。 `Keycloak开发服务` 将启动和初始化一个测试容器：它将创建一个 `quarkus` 领域，一个 `quarkus-app` 客户端（ `secret` 秘密）并添加 `alice` （ `admin` 和 `user` 角色）和 `bob` （ `user` 角色）用户，其中所有这些属性都可以被定制。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "First prepare `application.properties`. You can start with a completely empty `application.properties` as `Dev Services for Keycloak` will register `quarkus.oidc.auth-server-url` pointing to the running test container as well as `quarkus.oidc.client-id=quarkus-app` and `quarkus.oidc.credentials.secret=secret`."
msgstr "首先准备 `application.properties` 。您可以从完全为空的 `application.properties` 开始，因为 `Dev Services for Keycloak` 将注册指向运行测试容器的 `quarkus.oidc.auth-server-url` 以及 `quarkus.oidc.client-id=quarkus-app` 和 `quarkus.oidc.credentials.secret=secret` 。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "But if you already have all the required `quarkus-oidc` properties configured then you only need to associate `quarkus.oidc.auth-server-url` with the `prod` profile for `Dev Services for Keycloak`to start a container, for example:"
msgstr "但是如果你已经配置了所需的 `quarkus-oidc` 属性，那么你只需要将 `quarkus.oidc.auth-server-url` 与 `Keycloak开发服务` 的 `prod` 配置文件联系起来，以启动一个容器，例如："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "If a custom realm file has to be imported into Keycloak before running the tests then you can configure `Dev Services for Keycloak` as follows:"
msgstr "如果在运行测试前必须将自定义领域文件导入Keycloak，那么你可以按以下方式配置 `Keycloak开发服务` ："

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"Finally, write a test code the same way as it is described in the <<integration-testing-wiremock, Wiremock>> section above.\n"
"The only difference is that `@QuarkusTestResource` is no longer needed:"
msgstr ""

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "KeycloakTestResourceLifecycleManager"
msgstr "KeycloakTestResourceLifecycleManager"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"If you need to do the integration testing against Keycloak then you are encouraged to do it with <<integration-testing-keycloak-devservices,Dev Services For Keycloak>>.\n"
"Use `KeycloakTestResourceLifecycleManager` for your tests only if there is a good reason not to use `Dev Services for Keycloak`."
msgstr "如果您需要对 Keycloak 进行集成测试，我们建议您使用 xref:integration-testing-keycloak-devservices[Keycloak 开发服务] 进行测试。只有在有充分理由不使用 `Dev Services for Keycloak` 的情况下，才使用 `KeycloakTestResourceLifecycleManager` 进行测试。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Start with adding the following dependency:"
msgstr "首先要添加以下依赖关系："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "which provides `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` - an implementation of `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which starts a Keycloak container."
msgstr "它提供了 `io.quarkus.test.keycloak.server.KeycloakTestResourceLifecycleManager` - 一个 `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` 的实现，用来启动一个Keycloak容器。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "And configure the Maven Surefire plugin as follows:"
msgstr "并按以下方式配置Maven Surefire插件："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "(and similarly the Maven Failsafe plugin when testing in native image)."
msgstr "(和类似的Maven Failsafe插件，在本地图像中测试时）。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"And now set the configuration and write the test code the same way as it is described in the <<integration-testing-wiremock, Wiremock>> section above.\n"
"The only difference is the name of `QuarkusTestResource`:"
msgstr "现在，设置配置和编写测试代码的方法与上文 xref:integration-testing-wiremock[Wiremock] 部分所述相同。唯一不同的是 `QuarkusTestResource` 的名称："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "`KeycloakTestResourceLifecycleManager` registers `alice` and `admin` users. The user `alice` has the `user` role only by default - it can be customized with a `keycloak.token.user-roles` system property. The user `admin` has the `user` and `admin` roles by default - it can be customized with a `keycloak.token.admin-roles` system property."
msgstr "`KeycloakTestResourceLifecycleManager` 注册 `alice` 和 `admin` 用户。默认情况下，用户 `alice` 仅具有 `user` 角色 - 可以使用 `keycloak.token.user-roles` 系统属性对其进行自定义。默认情况下，用户 `admin` 具有 `用户` 和 `admin` 角色 - 可以使用 `keycloak.token.admin-roles` 系统属性对其进行自定义。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"By default, `KeycloakTestResourceLifecycleManager` uses HTTPS to initialize a Keycloak instance which can be disabled with `keycloak.use.https=false`.\n"
"Default realm name is `quarkus` and client id - `quarkus-web-app` - set `keycloak.realm` and `keycloak.web-app.client` system properties to customize the values if needed."
msgstr "默认情况下， `KeycloakTestResourceLifecycleManager` 使用 HTTPS 初始化 Keycloak 实例，可通过 `keycloak.use.https=false` 禁用。默认境界名称为 `quarkus` ，客户端 ID 为 `quarkus-web-app` - 如有需要，可设置 `keycloak.realm` 和 `keycloak.web-app.client` 系统属性以自定义值。"

#. type: Title ====
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "TestSecurity annotation"
msgstr "TestSecurity注解"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "Please see xref:security-openid-connect.adoc#integration-testing-security-annotation[Use TestingSecurity with injected JsonWebToken] section for more information about using `@TestSecurity` and `@OidcSecurity` annotations for testing the `web-app` application endpoint code which depends on the injected ID and access `JsonWebToken` as well as `UserInfo` and `OidcConfigurationMetadata`."
msgstr "有关使用 `@TestSecurity` 和 `@OidcSecurity` 注释测试 `web-app` 应用程序端点代码的更多信息，请参阅 \"使用 xref:security-openid-connect.adoc#integration-testing-security-annotation[注入] 的 xref:security-openid-connect.adoc#integration-testing-security-annotation[JsonWebToken 测试安全性] \"一节，该代码依赖于注入的 ID 和访问 `JsonWebToken` 以及 `UserInfo` 和 `OidcConfigurationMetadata` 。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "How to check the errors in the logs"
msgstr "如何检查日志中的错误"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Please enable `io.quarkus.oidc.runtime.OidcProvider` `TRACE` level logging to see more details about the token verification errors:"
msgstr "请启用 `io.quarkus.oidc.runtime.OidcProvider` `TRACE` 级日志，以查看有关令牌验证错误的更多细节："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "Please enable `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` level logging to see more details about the OidcProvider client initialization errors:"
msgstr "请启用 `io.quarkus.oidc.runtime.OidcRecorder` `TRACE` 级日志，以查看关于OidcProvider客户端初始化错误的更多细节："

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Running behind a reverse proxy"
msgstr "在反向代理后面运行"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "OIDC authentication mechanism can be affected if your Quarkus application is running behind a reverse proxy/gateway/firewall when HTTP `Host` header may be reset to the internal IP address, HTTPS connection may be terminated, etc. For example, an authorization code flow `redirect_uri` parameter may be set to the internal host instead of the expected external one."
msgstr "如果你的Quarkus应用程序在反向代理/网关/防火墙后面运行，OIDC认证机制可能会受到影响，此时HTTP `Host` 头可能被重置为内部IP地址，HTTPS连接可能被终止，等等。例如，授权码流 `redirect_uri` 参数可能被设置为内部主机而不是预期的外部主机。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "In such cases configuring Quarkus to recognize the original headers forwarded by the proxy will be required, see xref:http-reference.adoc#reverse-proxy[Running behind a reverse proxy] Vert.x documentation section for more information."
msgstr "在这种情况下，需要配置 Quarkus 以识别由代理转发的原始标头，更多信息请参阅 xref:http-reference.adoc#reverse-proxy[反向代理] Vert.x 文档章节。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "For example, if your Quarkus endpoint runs in a cluster behind Kubernetes Ingress then a redirect from the OpenID Connect Provider back to this endpoint may not work since the calculated `redirect_uri` parameter may point to the internal endpoint address. This problem can be resolved with the following configuration:"
msgstr "例如，如果你的Quarkus端点在Kubernetes Ingress后面的集群中运行，那么从OpenID Connect Provider重定向到这个端点可能会不工作，因为计算的 `redirect_uri` 参数可能指向内部端点地址。这个问题可以通过以下配置来解决："

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "where `X-ORIGINAL-HOST` is set by Kubernetes Ingress to represent the external endpoint address."
msgstr "其中 `X-ORIGINAL-HOST` ，由Kubernetes Ingress设置，代表外部端点地址。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "`quarkus.oidc.authentication.force-redirect-https-scheme` property may also be used when the Quarkus application is running behind an SSL terminating reverse proxy."
msgstr " `quarkus.oidc.authentication.force-redirect-https-scheme` 属性也可以在Quarkus应用程序在SSL终端反向代理后面运行时使用。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "External and Internal Access to OpenID Connect Provider"
msgstr "外部和内部访问OpenID Connect的提供者"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid ""
"Note that the OpenID Connect Provider externally accessible authorization, logout and other endpoints may have different HTTP(S) URLs compared to the URLs auto-discovered or configured relative to `quarkus.oidc.auth-server-url` internal URL.\n"
"In such cases an issuer verification failure may be reported by the endpoint and redirects to the externally accessible Connect Provider endpoints may fail."
msgstr "请注意，外部可访问的 OpenID Connect Provider 授权、注销和其他端点的 HTTP(S) URL 可能与自动发现或相对于 `quarkus.oidc.auth-server-url` 内部 URL 配置的 URL 不同。在这种情况下，端点可能会报告发行者验证失败，重定向到外部可访问的连接提供商端点也可能失败。"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid ""
"In such cases, if you work with Keycloak then please start it with a `KEYCLOAK_FRONTEND_URL` system property set to the externally accessible base URL.\n"
"If you work with other Openid Connect providers then please check your provider's documentation."
msgstr "在这种情况下，如果你使用Keycloak，那么请用 `KEYCLOAK_FRONTEND_URL` 系统属性设置为外部可访问的基本URL来启动它。如果你使用其他Openid Connect提供商，那么请查看你的提供商的文档。"

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy, no-wrap
msgid "Customize authentication requests"
msgstr "自定义身份验证请求"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "By default, only the `response_type` (set to `code`), `scope` (set to 'openid'), `client_id`, `redirect_uri` and `state` properties are passed as HTTP query parameters to the OpenID Connect provider's authorization endpoint when the user is redirected to it to authenticate."
msgstr "默认情况下，只有 `response_type` （设置为 `code` ）、 `scope` （设置为'openid'）、 `client_id` 、 `redirect_uri` 和 `state` 属性在用户被重定向到OpenID Connect提供商的授权端点进行认证时，作为HTTP查询参数传递给它。"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "You can add more properties to it with `quarkus.oidc.authentication.extra-params`. For example, some OpenID Connect providers may choose to return the authorization code as part of the redirect URI's fragment which would break the authentication process - it can be fixed as follows:"
msgstr "您可以通过 `quarkus.oidc.authentication.extra-params` 为其添加更多属性。例如，某些 OpenID Connect 提供商可能会选择将授权代码作为重定向 URI 片段的一部分返回，这将破坏身份验证过程--可按以下方法解决："

#. type: Title ===
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Customize authentication error response"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "If the user authentication has failed at the OpenID Connect Authorization endpoint, for example, due to an invalid scope or other invalid parameters included in the redirect to the provider, then the provider will redirect the user back to Quarkus not with the `code` but `error` and `error_description` parameters."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "In such cases HTTP `401` will be returned by default. However, you can instead request that a custom public error endpoint is called in order to return a user-friendly HTML error page. Use `quarkus.oidc.authentication.error-path`, for example:"
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "It has to start from a forward slash and be relative to the current endpoint's base URI. For example, if it is set as '/error' and the current request URI is `https://localhost:8080/callback?error=invalid_scope` then a final redirect will be made to `https://localhost:8080/error?error=invalid_scope`."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "It is important that this error endpoint is a public resource to avoid the user redirected to this page be authenticated again."
msgstr ""

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak 文档]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON 网络令牌]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "xref:security-openid-connect-providers.adoc[Well Known OpenID Connect providers]."
msgstr ""

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
msgid "xref:security-openid-connect-client-reference.adoc[OpenID Connect and OAuth2 Client and Filters Reference Guide]"
msgstr "link:security-openid-connect-client.html[Quarkus - 使用OpenID Connect，OAuth2客户端和过滤器的参考指南]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak]"
msgstr "xref:security-openid-connect-dev-services.adoc[Keycloak 的开发服务]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "xref:security.adoc#oidc-jwt-oauth2-comparison[Summary of Quarkus OIDC, JWT and OAuth2 features]"
msgstr "xref:security.adoc#oidc-jwt-oauth2-comparison[Quarkus OIDC、JWT 和 OAuth2 功能概述]"

#. type: Plain text
#: _versions/2.13/guides/security-openid-connect-web-authentication.adoc
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "xref:security.adoc[夸克安全]"
