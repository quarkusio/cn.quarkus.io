# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/config.adoc:6
#, no-wrap
msgid "Quarkus - Configuring Your Application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:14
msgid "Hardcoded values in your code are a _no go_ (even if we all did it at some point ;-)).  In this guide, we learn how to configure your application."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:15
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:18
msgid "To complete this guide, you need:"
msgstr "要完成这个指南，你需要："

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:20
msgid "between 5 and 10 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:21
msgid "an IDE"
msgstr "一个编辑器"

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:22
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:23
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:24
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:28
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:30
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:32
msgid "The solution is located in the `config-quickstart` {quickstarts-tree-url}/config-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:33
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:36
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:45
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=config-quickstart \\\n"
"    -DclassName=\"org.acme.config.GreetingResource\" \\\n"
"    -Dpath=\"/greeting\"\n"
"cd config-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:48
msgid "It generates:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:50
msgid "the Maven structure"
msgstr "Maven的结构"

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:51
msgid "a landing page accessible on `http://localhost:8080`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:52
msgid "example `Dockerfile` files for both `native` and `jvm` modes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:53
msgid "the application configuration file"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:54
msgid "an `org.acme.config.GreetingResource` resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:55
msgid "an associated test"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:56
#, no-wrap
msgid "Create the configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:61
msgid "By default, Quarkus reads configuration properties from <<config-reference.adoc#configuration_sources,several sources>>.  For the purpose of this guide, we will use an application configuration file located in `src/main/resources/application.properties`.  Edit the file with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:67
#, no-wrap
msgid ""
"# Your configuration properties\n"
"greeting.message = hello\n"
"greeting.name = quarkus\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:69
#, no-wrap
msgid "Injecting configuration properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:72
msgid "Quarkus uses https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] annotations to inject the configuration properties in the application."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:77
#: upstream/_versions/1.11/guides/config.adoc:91
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.message\") <1>\n"
"String message;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:81
msgid "You can use `@Inject @ConfigProperty` or just `@ConfigProperty`.  The `@Inject` annotation is not necessary for members annotated with `@ConfigProperty`.  This behavior differs from https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:84
msgid "If the application attempts to inject a configuration property that is not set, an error is thrown.  So you can quickly know when your configuration is complete."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:86
msgid "Edit the `org.acme.config.GreetingResource`, and introduce the following configuration properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:94
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.suffix\", defaultValue=\"!\") <2>\n"
"String suffix;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:97
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.name\")\n"
"Optional<String> name; <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:99
msgid "If you do not provide a value for this property, the application startup fails with `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:100
msgid "The default value is injected if the configuration does not provide a value for `greeting.suffix`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:101
msgid "This property is optional - an empty `Optional` is injected if the configuration does not provide a value for `greeting.name`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:103
msgid "Now, modify the `hello` method to use the injected properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:111
#, no-wrap
msgid ""
"@GET\n"
"@Produces(MediaType.TEXT_PLAIN)\n"
"public String hello() {\n"
"    return message + \" \" + name.orElse(\"world\") + suffix;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:114
msgid "Once set, check the application with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:119
#, no-wrap
msgid ""
"$ curl http://localhost:8080/greeting\n"
"hello quarkus!\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:123
msgid "As an alternative to injecting multiple related configuration values, you can also use the `@io.quarkus.arc.config.ConfigProperties` annotation to group these properties together.  See the <<config-reference.adoc#using_configproperties,Configuration Reference Guide>> for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:124
#, no-wrap
msgid "Update the test"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:128
msgid "We also need to update the functional test to reflect the changes made to the endpoint.  Edit the `src/test/java/org/acme/config/GreetingResourceTest.java` file and change the content of the `testHelloEndpoint` method to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:132
#, no-wrap
msgid "package org.acme.config;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:135
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:138
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:141
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:150
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello quarkus!\")); // Modified line\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:152
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:154
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:158
msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/greeting."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:161
msgid "Changing the configuration file is immediately reflected.  You can add the `greeting.suffix`, remove the other properties, change the values, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:164
msgid "As usual, the application can be packaged using `./mvnw clean package` and executed using the `-runner.jar` file.  You can also generate the native executable with `./mvnw clean package -Pnative`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:165
#, no-wrap
msgid "Programmatically access the configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:169
msgid "You can also access the configuration programmatically.  It can be handy to achieve dynamic lookup, or retrieve configured values from classes that are neither CDI beans or JAX-RS resources."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:171
msgid "You can access the configuration programmatically using `org.eclipse.microprofile.config.ConfigProvider.getConfig()` such as in:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:176
#, no-wrap
msgid ""
"String databaseName = ConfigProvider.getConfig().getValue(\"database.name\", String.class);\n"
"Optional<String> maybeDatabaseName = ConfigProvider.getConfig().getOptionalValue(\"database.name\", String.class);\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:178
#, no-wrap
msgid "Configuration Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:182
msgid "Quarkus supports the notion of configuration profiles.  These allow you to have multiple configuration values in the same file and select between them via a profile name."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:184
msgid "The syntax for this is `%{profile}.config.key=value`. For example if I have the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/config.adoc:189
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%dev.quarkus.http.port=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:192
msgid "Then the Quarkus HTTP port will be 9090, unless the `dev` profile is active, in which case it will be 8181."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:194
msgid "See the <<config-reference.adoc#configuration_profiles,Configuration Reference Guide>> for more information about configuration profiles."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/config.adoc:195
#, no-wrap
msgid "Configuring Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:200
msgid "Quarkus itself is configured via the same mechanism as your application. Quarkus reserves the `quarkus.` namespace for its own configuration. For example to configure the HTTP server port you can set `quarkus.http.port` in `application.properties`. All the Quarkus configuration properties are link:all-config[documented and searchable]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/config.adoc:205
msgid "As mentioned above, properties prefixed with `quarkus.` are effectively reserved for configuring Quarkus itself and therefore `quarkus.` should **never** be used as prefix for application specific properties."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/config.adoc:207
msgid "In the previous examples using `quarkus.message` instead of `greeting.message` would result in unexpected behavior."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:212
msgid "Quarkus does much of its configuration and bootstrap at build time and some configuration properties are read and used during the build.  These properties are _fixed at build time_ and it's not possible to change them at runtime.  You always need to repackage your application in order to reflect changes of such properties."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:214
msgid "The properties fixed at build time are marked with a lock icon (icon:lock[]) in the link:all-config[list of all configuration options]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:217
msgid "However, some extensions do define properties _overridable at runtime_.  A canonical example is the database URL, username and password which is only known specifically in your target environment."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:219
msgid "System properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:220
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:221
msgid "An environment file named `.env` placed in the current working directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:222
msgid "A configuration file placed in `$PWD/config/application.properties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/config.adoc:223
msgid "See the <<config-reference.adoc#configuring_quarkus,Configuration Reference Guide>> for more information."
msgstr ""
