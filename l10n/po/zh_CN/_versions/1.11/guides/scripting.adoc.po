# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/scripting.adoc:6
#, no-wrap
msgid "Quarkus - Scripting with Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:11
msgid "Quarkus provides integration with https://jbang.dev[jbang] which allows you to write Java scripts/applications requiring no Maven nor Gradle to get running."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:13
msgid "In this guide, we will see how you can write a REST application using just a single Java file."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:16
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:19
msgid "To complete this guide, you need:"
msgstr "要完成这个指南，你需要："

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:21
msgid "less than 5 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:22
msgid "https://jbang.dev/download[jbang v0.40.3+]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:23
msgid "an IDE"
msgstr "一个编辑器"

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:24
msgid "GraalVM installed if you want to run in native mode"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:25
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:28
msgid "Normally we would link to a Git repository to clone but in this case there is no additional files than the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:35
#, no-wrap
msgid ""
"//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n"
"//DEPS io.quarkus:quarkus-resteasy:{quarkus-version}\n"
"//JAVAC_OPTIONS -parameters\n"
"//JAVA_OPTIONS -Djava.util.logging.manager=org.jboss.logmanager.LogManager\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:45
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
"import org.jboss.logging.Logger;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:49
#: upstream/_versions/1.11/guides/scripting.adoc:173
#: upstream/_versions/1.11/guides/scripting.adoc:296
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"@ApplicationScoped\n"
"public class quarkusapp {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:54
#: upstream/_versions/1.11/guides/scripting.adoc:178
#, no-wrap
msgid ""
"    @GET\n"
"    public String sayHello() {\n"
"        return \"hello\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:58
#: upstream/_versions/1.11/guides/scripting.adoc:305
#, no-wrap
msgid ""
"    public static void main(String[] args) {\n"
"        Quarkus.run(args);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:61
#: upstream/_versions/1.11/guides/scripting.adoc:308
#, no-wrap
msgid ""
"    @Inject\n"
"    GreetingService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:68
#: upstream/_versions/1.11/guides/scripting.adoc:315
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    @Path(\"/greeting/{name}\")\n"
"    public String greeting(@PathParam String name) {\n"
"        return service.greeting(name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:71
#: upstream/_versions/1.11/guides/scripting.adoc:318
#, no-wrap
msgid ""
"    @ApplicationScoped\n"
"    static public class GreetingService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:77
#: upstream/_versions/1.11/guides/scripting.adoc:324
#, no-wrap
msgid ""
"        public String greeting(String name) {\n"
"            return \"hello \" + name;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Named 'alt' AttributeList argument for macro 'image'
#: upstream/_versions/1.11/guides/scripting.adoc:79
#: upstream/_versions/1.11/guides/scripting.adoc:83
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:82
msgid "In this guide, we create a straightforward application serving a `hello` endpoint with a single source file, no additional build files like `pom.xml` or `build.gradle` needed. To demonstrate dependency injection, this endpoint uses a `greeting` bean."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/1.11/guides/scripting.adoc:83
#, no-wrap
msgid "getting-started-architecture.png"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:85
#, no-wrap
msgid "Creating the initial file"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:88
msgid "First, we need a Java file. jbang lets you create an initial version using:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:93
#, no-wrap
msgid ""
"jbang init scripting/quarkusapp.java\n"
"cd scripting\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:96
msgid "This command generates a .java file that you can directly run on Linux and macOS, i.e. `./quarkusapp.java` - on Windows you need to use `jbang quarkusapp.java`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:98
msgid "This initial version will print `Hello World` when run."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:100
msgid "Once generated, look at the `quarkusapp.java`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:102
msgid "You will find at the top a line looking like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:106
#, no-wrap
msgid "//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:109
msgid "This line is what on Linux and macOS allows you to run it as a script. On Windows this line is ignored."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:111
msgid "The next line"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:115
#, no-wrap
msgid "// //DEPS <dependency1> <dependency2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:118
msgid "Is illustrating how you add dependencies to this script. This is a feature of `jbang`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:120
msgid "Go ahead and update this line to include the `quarkus-resteasy` dependency like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:124
#, no-wrap
msgid "//DEPS io.quarkus:quarkus-resteasy:{quarkus-version}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:127
msgid "Now, run `jbang quarkusapp.java` and you will see `jbang` resolving this dependency and building the jar with help from Quarkus' jbang integration."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:131
#: upstream/_versions/1.11/guides/scripting.adoc:202
#, no-wrap
msgid "$ jbang quarkusapp.java\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:142
#, no-wrap
msgid ""
"[jbang] Resolving dependencies...\n"
"[jbang]     Resolving io.quarkus:quarkus-resteasy:{quarkus-version}...Done\n"
"[jbang] Dependencies resolved\n"
"[jbang] Building jar...\n"
"[jbang] Post build with io.quarkus.launcher.JBangIntegration\n"
"Aug 30, 2020 5:40:55 AM org.jboss.threads.Version <clinit>\n"
"INFO: JBoss Threads version 3.1.1.Final\n"
"Aug 30, 2020 5:40:56 AM io.quarkus.deployment.QuarkusAugmentor run\n"
"INFO: Quarkus augmentation completed in 722ms\n"
"Hello World\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:145
msgid "For now the application does nothing new."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/scripting.adoc:147
#, no-wrap
msgid "How do I edit this file and get content assist?"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:151
msgid "As there is nothing but a `.java` file, most IDE's don't handle content assist well.  To work around that you can run `jbang edit quarkusapp.java`, this will print out a directory that will have a temporary project setup you can use in your IDE."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:153
msgid "On Linux/macOS you can run `<idecommand> `jbang edit quarkusapp.java``."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:156
msgid "If you add dependencies while editing you can get jbang to automatically refresh the IDE project using `jbang edit --live=<idecommand> quarkusapp.java`."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/scripting.adoc:159
#, no-wrap
msgid "The JAX-RS resources"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:162
msgid "Now let us replace the class with one that uses Quarkus features:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:169
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:183
#, no-wrap
msgid ""
"    public static void main(String[] args) {\n"
"        Quarkus.run(args);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:186
msgid "It's a very simple class with a main method that starts Quarkus with a REST endpoint, returning \"hello\" to requests on \"/hello\"."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/scripting.adoc:188
#, no-wrap
msgid "Why is the `main` method there?"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:191
msgid "A `main` method is currently needed for the `jbang` integration to work - we might remove this requirement in the future."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:193
#, no-wrap
msgid "Running the application"
msgstr "运行应用程序"

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:196
msgid "Now when you run the application you will see Quarkus start up."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:198
msgid "Use: `jbang quarkusapp.java`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:216
#, no-wrap
msgid ""
"[jbang] Building jar...\n"
"[jbang] Post build with io.quarkus.launcher.JBangIntegration\n"
"Aug 30, 2020 5:49:01 AM org.jboss.threads.Version <clinit>\n"
"INFO: JBoss Threads version 3.1.1.Final\n"
"Aug 30, 2020 5:49:02 AM io.quarkus.deployment.QuarkusAugmentor run\n"
"INFO: Quarkus augmentation completed in 681ms\n"
"__  ____  __  _____   ___  __ ____  ______\n"
" --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
" -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"2020-08-30 05:49:03,255 INFO  [io.quarkus] (main) Quarkus {quarkus-version} on JVM started in 0.638s. Listening on: http://0.0.0.0:8080\n"
"2020-08-30 05:49:03,272 INFO  [io.quarkus] (main) Profile prod activated.\n"
"2020-08-30 05:49:03,272 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:219
msgid "Once started, you can request the provided endpoint:"
msgstr "一旦启动，你可以发送请求到提供服务的端点。"

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:224
#, no-wrap
msgid ""
"$ curl -w \"\\n\" http://localhost:8080/hello\n"
"hello\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:227
msgid "After that, hit `CTRL+C` to stop the application."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/scripting.adoc:229
#, no-wrap
msgid "Automatically add newline with `curl -w \"\\n\"`"
msgstr "自动添加换行符 `curl -w \"\\n\"` "

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:232
msgid "We are using `curl -w \"\\n\"` in this example to avoid your terminal printing a '%' or put both result and next command prompt on the same line."
msgstr "我们在这个例子中使用 `curl -w \"\\n\"` ，以避免你的终端打印出'%'或把结果和下一个命令提示符放在同一行。"

#. type: Block title
#: upstream/_versions/1.11/guides/scripting.adoc:235
#, no-wrap
msgid "Why is `quarkus-resteasy` not resolved?"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:239
msgid "In this second run you should not see a line saying it is resolving `quarkus-resteasy` as jbang caches the dependency resolution between runs.  If you want to clear the caches to force resolution use `jbang cache clear`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:241
#, no-wrap
msgid "Using injection"
msgstr "使用注入法"

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:245
msgid "Dependency injection in Quarkus is based on ArC which is a CDI-based dependency injection solution tailored for Quarkus' architecture.  You can learn more about it in the link:cdi-reference[Contexts and Dependency Injection guide]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:247
msgid "ArC comes as a dependency of `quarkus-resteasy` so you already have it handy."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:249
msgid "Let's modify the application and add a companion bean."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:252
msgid "Normally you would add a separate class, but as we are aiming to have it all in one file you will add a nested class."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:254
msgid "Add the following *inside* the `quarkusapp` class body."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:259
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"static public class GreetingService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:263
#, no-wrap
msgid ""
"    public String greeting(String name) {\n"
"        return \"hello \" + name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:265
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/scripting.adoc:268
#, no-wrap
msgid "Use of nested static public classes"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:271
msgid "We are using a nested static public class instead of a top level class for two reasons:"
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:273
msgid "jbang currently does not support multiple source files."
msgstr ""

#. type: delimited block =
#: upstream/_versions/1.11/guides/scripting.adoc:274
msgid "All Java frameworks relying on introspection have challenges using top level classes as they are not as visible as public classes; and in Java there can only be one top level public class in a file."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:278
msgid "Edit the `quarksapp` class to inject the `GreetingService` and create a new endpoint using it, you should end up with something like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:283
#, no-wrap
msgid ""
"//usr/bin/env jbang \"$0\" \"$@\" ; exit $?\n"
"//DEPS io.quarkus:quarkus-resteasy:{quarkus-version}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:292
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
"import org.jboss.resteasy.annotations.jaxrs.PathParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:301
#, no-wrap
msgid ""
"    @GET\n"
"    public String sayHello() {\n"
"        return \"hello from Quarkus with jbang.dev\";\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:327
msgid "Now when you run `jbang quarkusapp.java` you can check what the new end point returns:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:332
#, no-wrap
msgid ""
"$ curl -w \"\\n\" http://localhost:8080/hello/greeting/quarkus\n"
"hello null\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:335
msgid "Now that is unexpected, why is it returning `hello null` and not `hello quarkus`?"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:337
msgid "The reason is that JAX-RS `@PathParam` relies on the `-parameters` compiler flag to be set to be able to map `{name}` to the `name` parameter."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:339
msgid "We fix that by adding the following comment instruction to the file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:343
#, no-wrap
msgid "//JAVAC_OPTIONS -parameters\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:346
msgid "Now when you run with `jbang quarkusapp.java` the end point should return what you expect:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:351
#, no-wrap
msgid ""
"$ curl -w \"\\n\" http://localhost:8080/hello/greeting/quarkus\n"
"hello quarkus\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:353
#, no-wrap
msgid "Debugging"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:357
msgid "To debug the application you use `jbang --debug quarkusapp.java` and you can use your IDE to connect on port 4004; if you want to use the more traditional Quarkus debug port you can use `jbang --debug=5005 quarkusapp.java`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:359
msgid "Note: `jbang` debugging always suspends thus you need to connect the debugger to have the application run."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:360
#, no-wrap
msgid "Logging"
msgstr "日志"

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:363
msgid "To use logging in Quarkus scripting with jbang you do as usual, with configuring a logger, i.e."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:367
#, no-wrap
msgid "public static final Logger LOG = Logger.getLogger(quarkusapp.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:370
msgid "To get it to work you need to add a Java option to ensure the logging is initialized properly, i.e."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:374
#, no-wrap
msgid "//JAVA_OPTIONS -Djava.util.logging.manager=org.jboss.logmanager.LogManager\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:377
msgid "With that in place running `jbang quarkusapp.java` will log and render as expected."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:378
#, no-wrap
msgid "Configuring Application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:381
msgid "You can use `//Q:CONFIG <property>=<value>` to set up static configuration for your application."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:383
msgid "I.e. if you wanted to add the `smallrye-openapi` and `swagger-ui` extensions and have the Swagger UI always show up you would add the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:389
#, no-wrap
msgid ""
"//DEPS io.quarkus:quarkus-smallrye-openapi:{quarkus-version}\n"
"//DEPS io.quarkus:quarkus-swagger-ui:{quarkus-version}\n"
"//Q:CONFIG quarkus.swagger-ui.always-include=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:392
msgid "Now during build the `quarkus.swagger-ui.always-include` will be generated into the resulting jar and `http://0.0.0.0:8080/q/swagger-ui` will be available when run."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/scripting.adoc:393
#, no-wrap
msgid "Running as a native application"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:396
msgid "If you have the `native-image` binary installed and `GRAALVM_HOME` set, you can get the native executable built and run using `jbang --native quarkusapp.java`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:400
#, no-wrap
msgid "$ jbang --native quarkusapp\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:413
#, no-wrap
msgid ""
"[jbang] Building jar...\n"
"[jbang] Post build with io.quarkus.launcher.JBangIntegration\n"
"Aug 30, 2020 6:21:15 AM org.jboss.threads.Version <clinit>\n"
"INFO: JBoss Threads version 3.1.1.Final\n"
"Aug 30, 2020 6:21:16 AM io.quarkus.deployment.pkg.steps.JarResultBuildStep buildNativeImageThinJar\n"
"INFO: Building native image source jar: /var/folders/yb/sytszfld4sg8vwr1h0w20jlw0000gn/T/quarkus-jbang3291688251685023074/quarkus-application-native-image-source-jar/quarkus-application-runner.jar\n"
"Aug 30, 2020 6:21:16 AM io.quarkus.deployment.pkg.steps.NativeImageBuildStep build\n"
"INFO: Building native image from /var/folders/yb/sytszfld4sg8vwr1h0w20jlw0000gn/T/quarkus-jbang3291688251685023074/quarkus-application-native-image-source-jar/quarkus-application-runner.jar\n"
"Aug 30, 2020 6:21:16 AM io.quarkus.deployment.pkg.steps.NativeImageBuildStep checkGraalVMVersion\n"
"INFO: Running Quarkus native-image plugin on GraalVM Version 20.1.0 (Java Version 11.0.7)\n"
"Aug 30, 2020 6:21:16 AM io.quarkus.deployment.pkg.steps.NativeImageBuildStep build\n"
"INFO: /Users/max/.sdkman/candidates/java/20.1.0.r11-grl/bin/native-image -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=1 -J-Duser.language=en -J-Dfile.encoding=UTF-8 --initialize-at-build-time= -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy\\$BySpaceAndTime -H:+JNI -jar quarkus-application-runner.jar -H:FallbackThreshold=0 -H:+ReportExceptionStackTraces -H:-AddAllCharsets -H:EnableURLProtocols=http --no-server -H:-UseServiceLoaderFeature -H:+StackTrace quarkus-application-runner\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:423
#, no-wrap
msgid ""
"Aug 30, 2020 6:22:31 AM io.quarkus.deployment.QuarkusAugmentor run\n"
"INFO: Quarkus augmentation completed in 76010ms\n"
"__  ____  __  _____   ___  __ ____  ______\n"
" --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
" -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"2020-08-30 06:22:32,012 INFO  [io.quarkus] (main) Quarkus {quarkus-version} native started in 0.017s. Listening on: http://0.0.0.0:8080\n"
"2020-08-30 06:22:32,013 INFO  [io.quarkus] (main) Profile prod activated.\n"
"2020-08-30 06:22:32,013 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:426
msgid "This native build will take some time on first run but any subsequent runs (without changing `quarkusapp.java`) will be close to instant thanks to jbang cache:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/scripting.adoc:437
#, no-wrap
msgid ""
"$ jbang --native quarkusapp.java\n"
"__  ____  __  _____   ___  __ ____  ______\n"
" --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
" -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"2020-08-30 06:23:36,846 INFO  [io.quarkus] (main) Quarkus {quarkus-version} native started in 0.015s. Listening on: http://0.0.0.0:8080\n"
"2020-08-30 06:23:36,846 INFO  [io.quarkus] (main) Profile prod activated.\n"
"2020-08-30 06:23:36,846 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/scripting.adoc:439
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/scripting.adoc:441
msgid "If you want to get started with Quarkus or write something quickly, Quarkus Scripting with jbang lets you do that. No Maven, no Gradle - just a Java file. In this guide we outlined the very basics on using Quarkus with jbang; if you want to learn more about what jbang can do, go see https://jbang.dev."
msgstr ""
