# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:6
#, no-wrap
msgid "Quarkus - Building my first extension"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:14
msgid "Quarkus extensions enhance your application just as projects dependencies do.  The role of the extensions is to leverage Quarkus paradigms to integrate seamlessly a library into Quarkus architecture - e.g. do more things at build time.  This is how you can use your battle-tested ecosystem and take advantage of Quarkus performance and native compilation.  Go to https://code.quarkus.io/[code.quarkus.io] to get the list of the supported extensions."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:17
msgid "In this guide we are going to develop the *Sample Greeting Extension*.  The extension will expose a customizable HTTP endpoint which simply greets the visitor."
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:19
#, no-wrap
msgid "Disclaimer"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:23
msgid "To be sure it's extra clear you don't need an extension to add a Servlet to your application.  This guide is a simplified example to explain the concepts of extensions development, see the link:writing-extensions[full documentation] if you need more information.  Keep in mind it's not representative of the power of moving things to build time or simplifying the build of native images."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:24
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:27
msgid "To complete this guide, you need:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:29
msgid "less than 30 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:30
msgid "an IDE"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:31
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:32
msgid "Apache Maven {maven-version}"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:33
#, no-wrap
msgid "Basic Concepts"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:36
msgid "First things first, we will need to start with some basic concepts."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:38
msgid "JVM mode vs Native mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:39
msgid "Quarkus is first and foremost a Java framework, that means you can develop, package and run classic JAR applications, that's what we call *JVM mode*."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:40
msgid "Thanks to https://graalvm.org/[GraalVM] you can compile your Java application into machine specific code (like you do in Go or C++) and that's what we call *Native mode*."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:42
msgid "The operation of compiling Java bytecode into a native system-specific machine code is named *Ahead of Time Compilation* (aka AoT)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:44
msgid "build time vs runtime in classic Java frameworks"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:45
msgid "The build time corresponds to all the actions you apply to your Java source files to convert them into something runnable (class files, jar/war, native images)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:46
msgid "Usually this stage is composed by the compilation, annotation processing, bytecode generation, etc. At this point, everything is under the developer's scope and control."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:47
msgid "The runtime is all the actions that happen when you execute your application."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:48
msgid "It's obviously focused on starting your business-oriented actions but it relies on a lot of technical actions like loading libraries and configuration files, scanning the application's classpath, configuring the dependency injection, setting up your Object-Relational Mapping, instantiating your REST controllers, etc."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:50
msgid "Usually, Java frameworks do their bootstrapping during the runtime before actually starting the application \"Business oriented layer\". During bootstrap, frameworks dynamically collect metadata by scanning the classpath to find configurations, entity definitions, dependency injection binding, etc. in order to instantiate proper objects through reflection. The main consequences are:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:52
msgid "Delaying the readiness of your application: you need to wait a couple of seconds before actually serving a business request."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:53
msgid "Having a peak of resource consumption at bootstrap: in a constrained environment, you will need to size the needed resources based on your technical bootstrap needs rather than your actual business needs."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:56
msgid "Quarkus' philosophy is to prevent as much as possible slow and memory intensive dynamic code execution by shifting left these actions and eventually do them during the build time.  A Quarkus extension is a Java piece of code acting as an adapter layer for your favorite library or technology."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:57
#, no-wrap
msgid "Description of a Quarkus extension"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:60
msgid "A Quarkus extension consists of two parts:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:63
msgid "The *runtime module* which represents the capabilities the extension developer exposes to the application's developer (an authentication filter, an enhanced data layer API, etc).  Runtime dependencies are the ones the users will add as their application dependencies (in Maven POMs or Gradle build scripts)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:67
msgid "The *deployment module* which is used during the augmentation phase of the build, it describes how to \"deploy\" a library following the Quarkus philosophy.  In other words, it applies all the Quarkus optimizations to your application during the build.  The deployment module is also where we prepare things for GraalVM's native compilation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:70
msgid "Users should not be adding the deployment modules of extension as application dependencies. The deployment dependencies are resolved by Quarkus during the augmentation phase from the runtime dependencies of the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:72
msgid "At this point, you should have understood that most of the magic will happen at the Augmentation build time thanks to the deployment module."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:73
#, no-wrap
msgid "Quarkus Application Bootstrap"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:76
msgid "There are three distinct bootstrap phases of a Quarkus application."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:81
#, no-wrap
msgid ""
"*Augmentation*. During the build time, the Quarkus extensions will load and scan your application's bytecode (including the dependencies) and configuration.\n"
"At this stage, the extension can read configuration files, scan classes for specific annotations, etc.\n"
"Once all the metadata has been collected, the extensions can pre-process the libraries bootstrap actions like your ORM, DI or REST controllers configurations.\n"
"The result of the bootstrap is directly recorded into bytecode and will be part of your final application package.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:84
#, no-wrap
msgid ""
"*Static Init*. During the run time, Quarkus will execute first a static init method which contains some extensions actions/configurations.\n"
"When you will do your native packaging, this static method will be pre-processed during the build time and the objects it has generated will be serialized into the final native executable, so the initialization code will not be executed in the native mode (imagine you execute a Fibonacci function during this phase, the result of the computation will be directly recorded in the native executable).\n"
"When running the application in JVM mode, this static init phase is executed at the start of the application.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:87
#, no-wrap
msgid ""
"*Runtime Init*. Well nothing fancy here, we do classic run time code execution.\n"
"So, the more code you run during the two phases above, the faster your application will start.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:89
msgid "Now that everything is explained, we can start coding!"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:90
#, no-wrap
msgid "Maven setup"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:93
msgid "Quarkus provides `create-extension` Maven Mojo to initialize your extension project."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:114
#, no-wrap
msgid ""
"$ mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create-extension -N \\\n"
"    -DgroupId=org.acme \\ #<1>\n"
"    -DartifactId=quarkus-greeting \\  #<2>\n"
"    -Dversion=1.0.0-SNAPSHOT \\ #<3>\n"
"    -Dquarkus.nameBase=\"Greeting Extension\" #<4>\n"
"[INFO] Scanning for projects...\n"
"[INFO]\n"
"[INFO] ------------------< org.apache.maven:standalone-pom >-------------------\n"
"[INFO] Building Maven Stub Project (No POM) 1\n"
"[INFO] --------------------------------[ pom ]---------------------------------\n"
"[INFO]\n"
"[INFO] --- quarkus-maven-plugin:{quarkus-version}:create-extension (default-cli) @ standalone-pom ---\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Total time:  1.233 s\n"
"[INFO] Finished at: 2020-04-22T23:28:15+02:00\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:117
msgid "Project's groupId"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:118
msgid "artifactId for the runtime artifact of the extension (the deployment artifactId will be derived from the runtime artifactId by appending `-deployment`)"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:119
msgid "Project's version"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:120
msgid "Prefix for the `<name>` element values in the generated POMs"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:122
msgid "Maven has generated a `quarkus-greeting` directory containing the extension project which consists of the parent `pom.xml`, the `runtime` and the `deployment` modules."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:123
#, no-wrap
msgid "The parent pom.xml"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:126
msgid "Your extension is a multi-module project. So let's start by checking out the parent POM at `./quarkus-greeting/pom.xml`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:134
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n"
"    <modelVersion>4.0.0</modelVersion>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:139
#, no-wrap
msgid ""
"    <groupId>org.acme</groupId>\n"
"    <artifactId>quarkus-greeting-parent</artifactId>\n"
"    <version>1.0.0-SNAPSHOT</version>\n"
"    <name>Greeting Extension - Parent</name>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:177
#, no-wrap
msgid ""
"    <packaging>pom</packaging>\n"
"    <properties>\n"
"        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n"
"        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n"
"        <maven.compiler.source>1.8</maven.compiler.source>\n"
"        <maven.compiler.target>1.8</maven.compiler.target>\n"
"        <maven.compiler.parameters>true</maven.compiler.parameters>\n"
"        <quarkus.version>{quarkus-version}</quarkus.version>\n"
"        <compiler-plugin.version>3.8.1</compiler-plugin.version>\n"
"    </properties>\n"
"    <modules> #<1>\n"
"        <module>deployment</module>\n"
"        <module>runtime</module>\n"
"    </modules>\n"
"    <dependencyManagement>\n"
"        <dependencies>\n"
"            <dependency>\n"
"                <groupId>io.quarkus</groupId>\n"
"                <artifactId>quarkus-bom</artifactId> #<2>\n"
"                <version>${quarkus.version}</version>\n"
"                <type>pom</type>\n"
"                <scope>import</scope>\n"
"            </dependency>\n"
"        </dependencies>\n"
"    </dependencyManagement>\n"
"    <build>\n"
"        <pluginManagement>\n"
"            <plugins>\n"
"                <plugin>\n"
"                    <groupId>org.apache.maven.plugins</groupId>\n"
"                    <artifactId>maven-compiler-plugin</artifactId>\n"
"                    <version>${compiler-plugin.version}</version> #<3>\n"
"                </plugin>\n"
"            </plugins>\n"
"        </pluginManagement>\n"
"    </build>\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:180
msgid "Your extension declares 2 sub-modules `deployment` and `runtime`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:181
msgid "The `quarkus-bom` aligns your dependencies with those used by Quarkus during the augmentation phase."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:182
msgid "Quarkus requires a recent version of the Maven compiler plugin supporting the annotationProcessorPaths configuration."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:183
#, no-wrap
msgid "The Deployment module"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:186
msgid "Let's have a look at the deployment's `./quarkus-greeting/deployment/pom.xml`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:199
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:291
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n"
"    <modelVersion>4.0.0</modelVersion>\n"
"    <parent>\n"
"        <groupId>org.acme</groupId>\n"
"        <artifactId>quarkus-greeting-parent</artifactId>\n"
"        <version>1.0.0-SNAPSHOT</version>\n"
"        <relativePath>../pom.xml</relativePath>\n"
"    </parent>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:202
#, no-wrap
msgid ""
"    <artifactId>quarkus-greeting-deployment</artifactId> <!--1-->\n"
"    <name>Greeting Extension - Deployment</name>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:215
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-core-deployment</artifactId> <!--2-->\n"
"            <version>${quarkus.version}</version>\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>org.acme</groupId>\n"
"            <artifactId>quarkus-greeting</artifactId> <!--3-->\n"
"            <version>${project.version}</version>\n"
"        </dependency>\n"
"    </dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:233
#, no-wrap
msgid ""
"    <build>\n"
"        <plugins>\n"
"            <plugin>\n"
"                <groupId>org.apache.maven.plugins</groupId>\n"
"                <artifactId>maven-compiler-plugin</artifactId>\n"
"                <configuration>\n"
"                    <annotationProcessorPaths>\n"
"                        <path>\n"
"                            <groupId>io.quarkus</groupId>\n"
"                            <artifactId>quarkus-extension-processor</artifactId>  <!--4-->\n"
"                            <version>${quarkus.version}</version>\n"
"                        </path>\n"
"                    </annotationProcessorPaths>\n"
"                </configuration>\n"
"            </plugin>\n"
"        </plugins>\n"
"    </build>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:235
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:575
#, no-wrap
msgid "</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:238
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:336
msgid "The key points are:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:240
msgid "By convention, the deployment module has the `-deployment` suffix (`greeting-deployment`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:242
msgid "The deployment module depends on the `quarkus-core-deployment` artifact.  We will see later which dependencies are convenient to add."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:243
msgid "The deployment module also *must* depend on the runtime module."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:244
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:340
msgid "We add the `quarkus-extension-processor` to the compiler annotation processors."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:246
msgid "In addition to the `pom.xml` `create-extension` also generated the `org.acme.quarkus.greeting.deployment.GreetingProcessor` class."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:250
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:403
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:465
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:594
#, no-wrap
msgid "package org.acme.quarkus.greeting.deployment;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:253
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:406
#, no-wrap
msgid ""
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.deployment.builditem.FeatureBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:255
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:408
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:472
#, no-wrap
msgid "class GreetingProcessor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:257
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:410
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:474
#, no-wrap
msgid "    private static final String FEATURE = \"greeting\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:262
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:479
#, no-wrap
msgid ""
"    @BuildStep\n"
"    FeatureBuildItem feature() {\n"
"        return new FeatureBuildItem(FEATURE);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:264
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:417
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:489
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:616
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:269
msgid "`FeatureBuildItem` represents a functionality provided by an extension.  The name of the feature gets displayed in the log during application bootstrap.  An extension should provide at most one feature."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:273
msgid "Be patient, we will explain the `Build Step Processor` concept and all the extension deployment API later on.  At this point, you just need to understand that this class explains to Quarkus how to deploy a feature named `greeting` which is your extension.  In other words, you are augmenting your application to use the `greeting` extension with all the Quarkus benefits (build time optimization, native support, etc.)."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:274
#, no-wrap
msgid "The Runtime module"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:277
msgid "Finally `./quarkus-greeting/runtime/pom.xml`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:294
#, no-wrap
msgid ""
"    <artifactId>quarkus-greeting</artifactId>  <!--1-->\n"
"    <name>Greeting Extension - Runtime</name>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:297
#, no-wrap
msgid ""
"    <dependencies>\n"
"    </dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:333
#, no-wrap
msgid ""
"    <build>\n"
"        <plugins>\n"
"            <plugin>\n"
"                <groupId>io.quarkus</groupId>\n"
"                <artifactId>quarkus-bootstrap-maven-plugin</artifactId>  <!--2-->\n"
"                <version>${quarkus.version}</version>\n"
"                <executions>\n"
"                    <execution>\n"
"                        <goals>\n"
"                            <goal>extension-descriptor</goal>\n"
"                        </goals>\n"
"                        <phase>compile</phase>\n"
"                        <configuration>\n"
"                            <deployment>${project.groupId}:${project.artifactId}-deployment:${project.version}\n"
"                            </deployment>\n"
"                        </configuration>\n"
"                    </execution>\n"
"                </executions>\n"
"            </plugin>\n"
"            <plugin>\n"
"                <groupId>org.apache.maven.plugins</groupId>\n"
"                <artifactId>maven-compiler-plugin</artifactId>\n"
"                <configuration>\n"
"                    <annotationProcessorPaths>\n"
"                        <path>\n"
"                            <groupId>io.quarkus</groupId>\n"
"                            <artifactId>quarkus-extension-processor</artifactId> <!--3-->\n"
"                            <version>${quarkus.version}</version>\n"
"                        </path>\n"
"                    </annotationProcessorPaths>\n"
"                </configuration>\n"
"            </plugin>\n"
"        </plugins>\n"
"    </build>\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:338
msgid "By convention, the runtime module has no suffix (`greeting`) as it is the artifact exposed to the end user."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:339
msgid "We add the `quarkus-bootstrap-maven-plugin` to generate the Quarkus extension descriptor included into the runtime artifact which links it with the corresponding deployment artifact."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:341
#, no-wrap
msgid "Basic version of the Sample Greeting extension"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:343
#, no-wrap
msgid "Implementing the Greeting feature"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:346
msgid "The (killer) feature proposed by our extension is to greet the user.  To do so, our extension will deploy, in the user application, a Servlet exposing the HTTP endpoint `/greeting` which responds to the GET verb with a plain text `Hello`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:348
msgid "The `runtime` module is where you develop the feature you want to propose to your users, so it's time to create our Web Servlet."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:352
msgid "To use Servlets in your applications you need to have a Servlet Container such as http://undertow.io[Undertow].  Luckily, `quarkus-bom` imported by our parent `pom.xml` already includes the Undertow Quarkus extension.  All we need to do is add"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:360
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-undertow</artifactId>\n"
"        </dependency>\n"
"    </dependencies>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:362
msgid "to our `./quarkus-greeting/runtime/pom.xml`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:364
msgid "Now we can create our Servlet `org.acme.quarkus.greeting.GreetingServlet` in the `runtime` module."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:367
#, no-wrap
msgid "package org.acme.quarkus.greeting;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:373
#, no-wrap
msgid ""
"import javax.servlet.annotation.WebServlet;\n"
"import javax.servlet.http.HttpServlet;\n"
"import javax.servlet.http.HttpServletRequest;\n"
"import javax.servlet.http.HttpServletResponse;\n"
"import java.io.IOException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:376
#, no-wrap
msgid ""
"@WebServlet\n"
"public class GreetingServlet extends HttpServlet { // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:382
#, no-wrap
msgid ""
"    @Override\n"
"    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException { // <2>\n"
"        resp.getWriter().write(\"Hello\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:385
msgid "As usual, defining a servlet requires to extend `javax.servlet.http.HttpServlet`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:386
msgid "Since we want to respond to the HTTP GET verb, we override the `doGet` method and write `Hello` in the Servlet response's output stream."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:387
#, no-wrap
msgid "Deploying the Greeting feature"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:392
msgid "Quarkus magic relies on bytecode generation at build time rather than waiting for the runtime code evaluation, that's the role of your extension's `deployment` module.  Calm down, we know, bytecode is hard and you don't want to do it manually, Quarkus proposes a high level API to make your life easier.  Thanks to basic concepts, you will describe the items to produce/consume and the corresponding steps in order to generate the bytecode to produce during the deployment time."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:394
msgid "The `io.quarkus.builder.item.BuildItem` concept represents object instances you will produce or consume (and at some point convert into bytecode) thanks to methods annotated with `@io.quarkus.deployment.annotations.BuildStep` which describe your extension's deployment tasks."
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:395
#, no-wrap
msgid "NOTE"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:396
msgid "See link:all-builditems[the complete list of BuildItem implementations in core] for more information"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:399
msgid "Go back to the generated `org.acme.quarkus.greeting.deployment.GreetingProcessor` class."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:415
#, no-wrap
msgid ""
"    @BuildStep // <1>\n"
"    FeatureBuildItem feature() {\n"
"        return new FeatureBuildItem(FEATURE); // <2>\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:422
msgid "`feature()` method is annotated with `@BuildStep` which means it is identified as a deployment task Quarkus will have to execute during the deployment.  `BuildStep` methods are run concurrently at augmentation time to augment the application.  They use a producer/consumer model, where a step is guaranteed not to be run until all the items that it is consuming have been produced."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:425
msgid "`io.quarkus.deployment.builditem.FeatureBuildItem` is an implementation of `BuildItem` which represents the description of an extension.  This `BuildItem` will be used by Quarkus to display information to the users when the application is starting."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:428
msgid "There are many `BuildItem` implementations, each one represents an aspect of the deployment process.  Here are some examples:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:430
msgid "`ServletBuildItem`: describes a Servlet (name, path, etc.) we want to generate during the deployment."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:431
msgid "`BeanContainerBuildItem`: describes a container used to store and retrieve object instances during the deployment."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:434
msgid "If you don't find a `BuildItem` for what you want to achieve, you can create your own implementation. Keep in mind that a `BuildItem` should be as fine-grained as possible, representing a specific part of the deployment.  To create your `BuildItem` you can extend:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:436
msgid "`io.quarkus.builder.item.SimpleBuildItem` if you need only a single instance of the item during the deployment (e.g. `BeanContainerBuildItem`, you only want one container)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:437
msgid "`io.quarkus.builder.item.MultiBuildItem` if you want to have multiple instances (e.g. `ServletBuildItem`, you can produce many Servlets during the deployment)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:440
msgid "It's now time to declare our HTTP endpoint. To do so, we need to produce a `ServletBuildItem`.  At this point, we are sure you understood that if the `quarkus-undertow` dependency proposes Servlet support for our `runtime` module, we will need the `quarkus-undertow-deployment` dependency in our `deployment` module to have access to the `io.quarkus.undertow.deployment.ServletBuildItem`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:442
msgid "Update the `./quarkus-greeting/deployment/pom.xml` as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:456
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>org.acme</groupId>\n"
"            <artifactId>quarkus-greeting</artifactId>\n"
"            <version>${project.version}</version>\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-undertow-deployment</artifactId>\n"
"        </dependency>\n"
"    </dependencies>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:459
msgid "The dependency on `quarkus-core-deployment` generated by the `create-extension` mojo can now be removed since `quarkus-undertow-deployment` already depends on it."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:461
msgid "We can now update `org.acme.quarkus.greeting.deployment.GreetingProcessor`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:470
#, no-wrap
msgid ""
"import io.quarkus.deployment.annotations.BuildStep;\n"
"import io.quarkus.deployment.builditem.FeatureBuildItem;\n"
"import org.acme.quarkus.greeting.GreetingServlet;\n"
"import io.quarkus.undertow.deployment.ServletBuildItem;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:487
#, no-wrap
msgid ""
"    @BuildStep\n"
"    ServletBuildItem createServlet() { // <1>\n"
"      ServletBuildItem servletBuildItem = ServletBuildItem.builder(\"greeting\", GreetingServlet.class.getName())\n"
"        .addMapping(\"/greeting\")\n"
"        .build(); // <2>\n"
"      return servletBuildItem;\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:493
msgid "We add a `createServlet` method which returns a `ServletBuildItem` and annotate it with `@BuildStep`.  Now, Quarkus will process this new task which will result in the bytecode generation of the Servlet registration at build time."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:495
msgid "`ServletBuildItem` proposes a fluent API to instantiate a Servlet named `greeting` of type `GreetingServlet` (it's our class provided by our extension `runtime` module), and map it the `/greeting` path."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:496
#, no-wrap
msgid "Testing the Greeting feature"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:500
msgid "When developing a Quarkus extension, you mainly want to test your feature is properly deployed in an application and works as expected.  That's why the tests will be hosted in the `deployment` module."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:502
msgid "Let's add the testing dependencies into the `./quarkus-greeting/deployment/pom.xml` and `maven-surefire` configuration"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:516
#, no-wrap
msgid ""
"    <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n"
"    <modelVersion>4.0.0</modelVersion>\n"
"    <parent>\n"
"        <groupId>org.acme</groupId>\n"
"        <artifactId>quarkus-greeting-parent</artifactId>\n"
"        <version>1.0.0-SNAPSHOT</version>\n"
"        <relativePath>../pom.xml</relativePath>\n"
"    </parent>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:519
#, no-wrap
msgid ""
"    <artifactId>quarkus-greeting-deployment</artifactId>\n"
"    <name>Greeting Extension - Deployment</name>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:523
#, no-wrap
msgid ""
"    <properties>\n"
"        <maven.surefire.version>3.0.0-M4</maven.surefire.version>\n"
"    </properties>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:545
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>org.acme</groupId>\n"
"            <artifactId>quarkus-greeting</artifactId>\n"
"            <version>${project.version}</version>\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-undertow-deployment</artifactId>\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-junit5-internal</artifactId> <!--1-->\n"
"            <scope>test</scope>\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>io.rest-assured</groupId>\n"
"            <artifactId>rest-assured</artifactId> <!--2-->\n"
"            <scope>test</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:573
#, no-wrap
msgid ""
"    <build>\n"
"        <plugins>\n"
"            <plugin>\n"
"                <groupId>org.apache.maven.plugins</groupId>\n"
"                <artifactId>maven-compiler-plugin</artifactId>\n"
"                <configuration>\n"
"                    <annotationProcessorPaths>\n"
"                        <path>\n"
"                            <groupId>io.quarkus</groupId>\n"
"                            <artifactId>quarkus-extension-processor</artifactId>\n"
"                            <version>${quarkus.version}</version>\n"
"                        </path>\n"
"                    </annotationProcessorPaths>\n"
"                </configuration>\n"
"            </plugin>\n"
"            <plugin>\n"
"                <artifactId>maven-surefire-plugin</artifactId> <!--3-->\n"
"                <version>${maven.surefire.version}</version>\n"
"                <configuration>\n"
"                    <systemPropertyVariables>\n"
"                        <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"                        <maven.home>${maven.home}</maven.home>\n"
"                    </systemPropertyVariables>\n"
"                </configuration>\n"
"            </plugin>\n"
"        </plugins>\n"
"    </build>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:579
msgid "Quarkus proposes facilities to test extensions via the `quarkus-junit5-internal` artifact, in particular the `io.quarkus.test.QuarkusUnitTest` runner which starts an application with your extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:580
msgid "We will use http://rest-assured.io[RestAssured] (massively used in Quarkus) to test our HTTP endpoint."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:581
msgid "In order to not fallback to JUnit 4 legacy mode you need to define a recent version of `maven-surefire` plugin."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:583
msgid "Currently, the `create-extension` Maven Mojo does not create the test structure. We'll create it ourselves:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:587
#, no-wrap
msgid "mkdir -p ./quarkus-greeting/deployment/src/test/java/org/acme/quarkus/greeting/deployment\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:590
msgid "To start testing your extension, create the following `org.acme.quarkus.greeting.deployment.GreetingTest` test class:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:601
#, no-wrap
msgid ""
"import io.quarkus.test.QuarkusUnitTest;\n"
"import io.restassured.RestAssured;\n"
"import org.jboss.shrinkwrap.api.ShrinkWrap;\n"
"import org.jboss.shrinkwrap.api.spec.JavaArchive;\n"
"import org.junit.jupiter.api.Test;\n"
"import org.junit.jupiter.api.extension.RegisterExtension;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:603
#, no-wrap
msgid "import static org.hamcrest.Matchers.containsString;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:605
#, no-wrap
msgid "public class GreetingTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:609
#, no-wrap
msgid ""
"  @RegisterExtension\n"
"  static final QuarkusUnitTest config = new QuarkusUnitTest()\n"
"    .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)); // <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:614
#, no-wrap
msgid ""
"  @Test\n"
"  public void testGreeting() {\n"
"    RestAssured.when().get(\"/greeting\").then().statusCode(200).body(containsString(\"Hello\")); // <2>\n"
"  }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:619
msgid "We register a Junit Extension which will start a Quarkus application with the Greeting extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:620
msgid "We verify the application has a `greeting` endpoint responding to a HTTP GET request with a OK status (200) and a plain text body containing `Hello`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:622
msgid "Time to test!"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:664
#, no-wrap
msgid ""
"$ mvn clean test\n"
"[INFO] Scanning for projects...\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Reactor Build Order:\n"
"[INFO]\n"
"[INFO] Greeting Extension - Parent                                        [pom]\n"
"[INFO] Greeting Extension - Runtime                                       [jar]\n"
"[INFO] Greeting Extension - Deployment                                    [jar]\n"
"[INFO]\n"
"...\n"
"[INFO] --- maven-surefire-plugin:3.0.0-M4:test (default-test) @ quarkus-greeting-deployment ---\n"
"[INFO]\n"
"[INFO] -------------------------------------------------------\n"
"[INFO]  T E S T S\n"
"[INFO] -------------------------------------------------------\n"
"[INFO] Running org.acme.quarkus.greeting.deployment.GreetingTest\n"
"2020-04-23 13:55:44,612 INFO  [io.quarkus] (main) Quarkus {quarkus-version} started in 0.395s. Listening on: http://0.0.0.0:8081\n"
"2020-04-23 13:55:44,614 INFO  [io.quarkus] (main) Profile test activated.\n"
"2020-04-23 13:55:44,614 INFO  [io.quarkus] (main) Installed features: [cdi, quarkus-greeting, servlet]\n"
"2020-04-23 13:55:45,876 INFO  [io.quarkus] (main) Quarkus stopped in 0.025s\n"
"[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.609 s - in org.acme.quarkus.greeting.deployment.GreetingTest\n"
"[INFO]\n"
"[INFO] Results:\n"
"[INFO]\n"
"[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0\n"
"[INFO]\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Reactor Summary for getting-started-extension 1.0.0-SNAPSHOT:\n"
"[INFO]\n"
"[INFO] getting-started-extension .......................... SUCCESS [  0.076 s]\n"
"[INFO] Greeting Extension - Parent ........................ SUCCESS [  0.002 s]\n"
"[INFO] Greeting Extension - Runtime ....................... SUCCESS [  1.467 s]\n"
"[INFO] Greeting Extension - Deployment .................... SUCCESS [  4.099 s]\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] Total time:  5.745 s\n"
"[INFO] Finished at: 2020-01-28T22:40:56+01:00\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:667
msgid "Looks good! Congratulations you just finished your first extension."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:668
#, no-wrap
msgid "Debugging your extension"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:672
msgid "_If debugging is the process of removing bugs, then programming must be the process of putting them in._ Edsger W. Dijkstra"
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:674
#, no-wrap
msgid "Debugging your application build"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:678
msgid "Since your extension deployment is made during the application build, this process is triggered by your build tool.  That means if you want to debug this phase you need to launch your build tool with the remote debug mode switched one."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:679
#, no-wrap
msgid "Maven"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:683
msgid "You can activate Maven remote debugging by using `mvnDebug`.  You can launch your application with the following command line:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:687
#, no-wrap
msgid "mvnDebug clean compile quarkus:dev\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:691
msgid "By default, Maven will wait for a connection on `localhost:8000`.  Now, you can run your IDE `Remote` configuration to attach it to `localhost:8000`."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:692
#, no-wrap
msgid "Gradle"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:696
msgid "You can activate Gradle remote debugging by using the flags `org.gradle.debug=true` or `org.gradle.daemon.debug=true` in daemon mode.  You can launch your application with the following command line:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:700
#, no-wrap
msgid "./gradlew quarkusDev -Dorg.gradle.daemon.debug=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:704
msgid "By default, Gradle will wait for a connection on `localhost:5005`.  Now, you can run your IDE `Remote` configuration to attach it to `localhost:5005`."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:706
#, no-wrap
msgid "Debugging your extension tests"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:710
msgid "We have seen together how to test your extension and sometimes things don't go so well and you want to debug your tests.  Same principle here, the trick is to enable the Maven Surefire remote debugging in order to attach an IDE `Remote` configuration."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:715
#, no-wrap
msgid ""
"$ cd ./greeting\n"
"$ mvn clean test -Dmaven.surefire.debug\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:718
msgid "By default, Maven will wait for a connection on `localhost:5005`."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:719
#, no-wrap
msgid "Extension publication"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:722
msgid "Now that you just finished building your first extension you should be eager to use it in a Quarkus application!"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:724
#, no-wrap
msgid "*Classic Maven publication*\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:727
msgid "Because your extension produces traditional JARs, the easiest way to share your extension is to publish it to a Maven repository.  Once published you can simply declare it with your project dependencies. Let's demonstrate that by creating a simple Quarkus application"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:735
#, no-wrap
msgid ""
"$mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"     -DprojectGroupId=org.acme \\\n"
"     -DprojectArtifactId=greeting-app \\\n"
"     -DprojectVersion=1.0.0-SNAPSHOT \\\n"
"     -DnoExamples\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:738
msgid "`cd` into `greeting-app` and add the dependency on `quarkus-greeting` extension we created above."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:740
msgid "`quarkus-greeting` extension has to be installed in the local Maven repository to be usable in the application."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:754
#, no-wrap
msgid ""
"    <dependencies>\n"
"        <dependency>\n"
"            <groupId>org.acme</groupId>\n"
"            <artifactId>quarkus-greeting</artifactId>\n"
"            <version>1.0.0-SNAPSHOT</version>\n"
"        </dependency>\n"
"        <dependency>\n"
"            <groupId>io.quarkus</groupId>\n"
"            <artifactId>quarkus-resteasy</artifactId>\n"
"        </dependency>\n"
"        <!-- the rest of the application dependencies -->\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:757
msgid "Run the application and notice the `Installed Features` list contains the `quarkus-greeting` extension."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:787
#, no-wrap
msgid ""
"$ mvn clean compile quarkus:dev\n"
"[INFO] Scanning for projects...\n"
"[INFO]\n"
"[INFO] ---------------------< org.acme:code-with-quarkus >---------------------\n"
"[INFO] Building code-with-quarkus 1.0.0-SNAPSHOT\n"
"[INFO] --------------------------------[ jar ]---------------------------------\n"
"[INFO]\n"
"[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ code-with-quarkus ---\n"
"[INFO] Deleting /tmp/code-with-quarkus/target\n"
"[INFO]\n"
"[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ code-with-quarkus ---\n"
"[INFO] Using 'UTF-8' encoding to copy filtered resources.\n"
"[INFO] Copying 2 resources\n"
"[INFO]\n"
"[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ code-with-quarkus ---\n"
"[INFO] Changes detected - recompiling the module!\n"
"[INFO] Compiling 1 source file to /tmp/code-with-quarkus/target/classes\n"
"[INFO]\n"
"[INFO] --- quarkus-maven-plugin:{quarkus-version}:dev (default-cli) @ code-with-quarkus ---\n"
"Listening for transport dt_socket at address: 5005\n"
"__  ____  __  _____   ___  __ ____  ______\n"
" --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n"
" -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n"
"--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n"
"2020-04-23 14:17:36,137 INFO  [io.quarkus] (Quarkus Main Thread) greeting-app 1.0.0-SNAPSHOT (powered by Quarkus {quarkus-version}) started in 0.985s. Listening on: http://0.0.0.0:8080\n"
"2020-04-23 14:17:36,140 INFO  [io.quarkus] (Quarkus Main Thread) Profile dev activated. Live Coding activated.\n"
"2020-04-23 14:17:36,140 INFO  [io.quarkus] (Quarkus Main Thread) Installed features: [cdi, quarkus-greeting, resteasy, servlet]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:792
msgid "From an extension developer standpoint the Maven publication strategy is very handy and fast but Quarkus wants to go one step further by also ensuring a reliability of the ecosystem for the people who will use the extensions.  Think about it, we all had a poor Developer Experience with an unmaintained library, an incompatibility between dependencies (and we don't even talk about legal issues).  That's why there is the Quarkus Platform."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:794
#, no-wrap
msgid "*Quarkus Platform*\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:796
msgid "Quarkus proposes a `quarkus-universe-bom` which is a certified list of extensions placed under the Quarkus Platform label. From an application developer, the objectives of the platform are:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:798
msgid "To guarantee a supportability of the extension (bugfix, security issues, dependency upgrades)"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:799
msgid "To ease the extension discovery through the Quarkus CLI or https://code.quarkus.io/"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:800
msgid "To ensure a global consistency of the extension ecosystem"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:802
#, no-wrap
msgid "Should I publish my extension to the platform?"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:807
msgid "If you feel your extensions is for you or a limited group, simply publishing to Maven is fine.  If the extension solves a general problem, it is very handy for Quarkus users to see it on https://code.quarkus.io.  But this comes with some responsibility for you, keeping it up to date with Quarkus minor releases (every month or so at the moment).  When in doubt, have a conversation with the community in the https://groups.google.com/forum/#!forum/quarkus-dev[Quarkus Google Group]. We can make a collective decision."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:809
msgid "If you want to contribute a new extension, we strongly suggest you to host it in the Quarkiverse Hub."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:811
#, no-wrap
msgid "*Quarkiverse Hub*\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:813
msgid "link:https://github.com/quarkiverse[Quarkiverse Hub] is the GitHub organization that provides repository hosting (including build, CI and release publishing setup) for Quarkus extension projects contributed by the community."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:815
msgid "You can get started by creating an link:https://github.com/quarkusio/quarkus/issues/new/choose[Extension Request] issue (check first if one wasn't already submitted link:https://github.com/quarkusio/quarkus/labels/kind%2Fextension-proposal[here]) and asking to lead it."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:817
msgid "We'll take care of provisioning a new repository and set it up to:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:819
msgid "Be supported by our tooling;"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:820
msgid "Publish the documentation you produce for your extension to the Quarkiverse website;"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:821
msgid "Configure your extension to use the link:https://github.com/quarkusio/quarkus-ecosystem-ci#quarkus-ecosystem-ci[Quarkus Ecosystem CI] to build against the latest Quarkus Core changes;"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:822
msgid "Give you the freedom to manage the project and release to Maven Central as you like."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:824
msgid "For more information, check link:https://github.com/quarkiverse/quarkiverse/wiki[the Quarkiverse Wiki] and link:https://quarkus.io/blog/quarkiverse/[this blog post]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:825
#, no-wrap
msgid "Conclusion"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:828
msgid "Creating new extensions may appear to be an intricate task at first but once you understood the Quarkus game-changer paradigm (build time vs runtime) the structure of an extension makes perfectly sense."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:830
msgid "As usual, along the path Quarkus simplifies things under the hood (Maven Mojo, bytecode generation or testing) to make it pleasant to develop new features."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:831
#, no-wrap
msgid "Further reading"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:834
msgid "link:writing-extensions[Writing your own extension] for the full documentation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/building-my-first-extension.adoc:834
msgid "link:dev-console[Quarkus DEV Console] to learn how to support the DEV Console in your extension"
msgstr ""
