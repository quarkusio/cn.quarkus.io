# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/spring-web.adoc:6
#, no-wrap
msgid "Quarkus - Quarkus Extension for Spring Web API"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:12
msgid "While users are encouraged to use JAX-RS annotation for defining REST endpoints, Quarkus provides a compatibility layer for Spring Web in the form of the `spring-web` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:14
msgid "This guide explains how a Quarkus application can leverage the well known Spring Web annotations to define RESTful services."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:17
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:20
msgid "To complete this guide, you need:"
msgstr "要完成这个指南，你需要："

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:22
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:23
msgid "an IDE"
msgstr "一个编辑器"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:24
msgid "JDK 1.8+ installed with `JAVA_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:25
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:27
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:31
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:33
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:35
msgid "The solution is located in the `spring-web-quickstart` {quickstarts-tree-url}/spring-web-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:36
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:39
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:49
#, no-wrap
msgid ""
"mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=spring-web-quickstart \\\n"
"    -DclassName=\"org.acme.spring.web.GreetingController\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"spring-web\"\n"
"cd spring-web-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:52
msgid "This command generates a Maven project with a REST endpoint and imports the `spring-web` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:55
msgid "If you already have your Quarkus project configured, you can add the `spring-web` extension to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:59
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"spring-web\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:62
#: upstream/_versions/1.11/guides/spring-web.adoc:211
msgid "This will add the following to your `pom.xml`:"
msgstr "这将在你的 `pom.xml` 中添加以下内容："

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:69
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:71
#, no-wrap
msgid "GreetingController"
msgstr "GreetingController"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:75
msgid "The Quarkus maven plugin automatically generated a controller with the Spring Web annotations to define our REST endpoint (instead of the JAX-RS ones used by default)  The `src/main/java/org/acme/spring/web/GreetingController.java` file looks as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:79
#: upstream/_versions/1.11/guides/spring-web.adoc:102
#: upstream/_versions/1.11/guides/spring-web.adoc:175
#, no-wrap
msgid "package org.acme.spring.web;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:83
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:87
#: upstream/_versions/1.11/guides/spring-web.adoc:150
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(\"/greeting\")\n"
"public class GreetingController {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:93
#, no-wrap
msgid ""
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:95
#, no-wrap
msgid "GreetingControllerTest"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:98
msgid "Note that a test for the controller has been created as well:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:105
#: upstream/_versions/1.11/guides/spring-web.adoc:178
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:108
#: upstream/_versions/1.11/guides/spring-web.adoc:181
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:111
#: upstream/_versions/1.11/guides/spring-web.adoc:184
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingControllerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:120
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:122
#: upstream/_versions/1.11/guides/spring-web.adoc:195
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:124
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:128
msgid "Run the application with: `./mvnw compile quarkus:dev`.  Open your browser to http://localhost:8080/greeting."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:130
msgid "The result should be: `{\"message\": \"hello\"}`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:131
#, no-wrap
msgid "Run the application as a native executable"
msgstr "以本地可执行文件的方式运行该应用程序"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:134
msgid "You can of course create a native image using the instructions of the link:building-native-image[Building a native executable guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:135
#, no-wrap
msgid "Going further with an endpoint returning JSON"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:139
msgid "The `GreetingController` above was an example of a very simple endpoint. In many cases however it is required to return JSON content.  The following example illustrates how that could be achieved using a Spring RestController:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:146
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.PathVariable;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:155
#, no-wrap
msgid ""
"    @GetMapping(\"/{name}\")\n"
"    public Greeting hello(@PathVariable(name = \"name\") String name) {\n"
"        return new Greeting(\"hello \" + name);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:158
#, no-wrap
msgid ""
"    public static class Greeting {\n"
"        private final String message;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:162
#, no-wrap
msgid ""
"        public Greeting(String message) {\n"
"            this.message = message;\n"
"        }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:168
#, no-wrap
msgid ""
"        public String getMessage(){\n"
"            return message;\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:171
msgid "The corresponding test could look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:193
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting/quarkus\")\n"
"          .then()\n"
"            .statusCode(200)\n"
"            .body(\"message\", is(\"hello quarkus\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:198
msgid "It should be noted that when using the Spring Web support in Quarkus, link:https://github.com/FasterXML/jackson[Jackson] is automatically added to the classpath and properly setup."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:199
#, no-wrap
msgid "Adding OpenAPI and Swagger-UI"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:202
msgid "You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger-UI] by using the `quarkus-smallrye-openapi` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:204
msgid "Add the extension by running this command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:208
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"io.quarkus:quarkus-smallrye-openapi\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:218
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-smallrye-openapi</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:221
msgid "This is enough to generate a basic OpenAPI schema document from your REST Endpoints:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:225
#, no-wrap
msgid "curl http://localhost:8080/q/openapi\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:228
msgid "You will see the generated OpenAPI schema document:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:231
#: upstream/_versions/1.11/guides/spring-web.adoc:314
#, no-wrap
msgid "---\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:268
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Generated API\n"
"  version: \"1.0\"\n"
"paths:\n"
"  /greeting:\n"
"    get:\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
"  /greeting/{name}:\n"
"    get:\n"
"      parameters:\n"
"      - name: name\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:271
msgid "Also see link:openapi-swaggerui[the OpenAPI Guide]"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:272
#, no-wrap
msgid "Adding MicroProfile OpenAPI Annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:276
msgid "You can use link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] to better document your schema, example, adding the following to the class level of the `GreetingController`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:291
#, no-wrap
msgid ""
"@OpenAPIDefinition(\n"
"    info = @Info(\n"
"        title=\"Greeting API\",\n"
"        version = \"1.0.1\",\n"
"        contact = @Contact(\n"
"            name = \"Greeting API Support\",\n"
"            url = \"http://exampleurl.com/contact\",\n"
"            email = \"techsupport@example.com\"),\n"
"        license = @License(\n"
"            name = \"Apache 2.0\",\n"
"            url = \"https://www.apache.org/licenses/LICENSE-2.0.html\"))\n"
")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:294
msgid "And describe your endpoints like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:302
#, no-wrap
msgid ""
"@Tag(name = \"Hello\", description = \"Just say hello\")\n"
"@GetMapping(produces=MediaType.TEXT_PLAIN_VALUE)\n"
"public String hello() {\n"
"    return \"hello\";\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:308
#, no-wrap
msgid ""
"@GetMapping(value = \"/{name}\", produces=MediaType.APPLICATION_JSON_VALUE)\n"
"@Tag(name = \"Hello to someone\", description = \"Just say hello to someone\")\n"
"public Greeting hello(@PathVariable(name = \"name\") String name) {\n"
"    return new Greeting(\"hello \" + name);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:311
msgid "will generate this OpenAPI schema:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/spring-web.adoc:367
#, no-wrap
msgid ""
"openapi: 3.0.1\n"
"info:\n"
"  title: Greeting API\n"
"  contact:\n"
"    name: Greeting API Support\n"
"    url: http://exampleurl.com/contact\n"
"    email: techsupport@example.com\n"
"  license:\n"
"    name: Apache 2.0\n"
"    url: https://www.apache.org/licenses/LICENSE-2.0.html\n"
"  version: 1.0.1\n"
"tags:\n"
"- name: Hello\n"
"  description: Just say hello\n"
"- name: Hello to someone\n"
"  description: Just say hello to someone\n"
"paths:\n"
"  /greeting:\n"
"    get:\n"
"      tags:\n"
"      - Hello\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                type: string\n"
"  /greeting/{name}:\n"
"    get:\n"
"      tags:\n"
"      - Hello to someone\n"
"      parameters:\n"
"      - name: name\n"
"        in: path\n"
"        required: true\n"
"        schema:\n"
"          type: string\n"
"      responses:\n"
"        \"200\":\n"
"          description: OK\n"
"          content:\n"
"            '*/*':\n"
"              schema:\n"
"                $ref: '#/components/schemas/Greeting'\n"
"components:\n"
"  schemas:\n"
"    Greeting:\n"
"      type: object\n"
"      properties:\n"
"        message:\n"
"          type: string\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:369
#, no-wrap
msgid "Using Swagger UI"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:373
msgid "Swagger UI is included by default when running in `Dev` or `Test` mode, and can optionally added to `Prod` mode.  See link:openapi-swaggerui#use-swagger-ui-for-development[the Swagger UI] Guide for more details."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:375
msgid "Navigate to link:http://localhost:8080/q/swagger-ui/[localhost:8080/q/swagger-ui/] and you will see the Swagger UI screen:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:377
msgid "image:spring-web-guide-screenshot01.png[alt=Swagger UI]"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:378
#, no-wrap
msgid "Supported Spring Web functionalities"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:382
msgid "Quarkus currently supports a subset of the functionalities that Spring Web provides. More specifically Quarkus supports the REST related features of Spring Web (think of `@RestController` instead of `@Controller`)."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:383
#, no-wrap
msgid "Annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:386
msgid "The table below summarizes the supported annotations:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/spring-web.adoc:387
#, no-wrap
msgid "Supported Spring Web annotation"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:389
#, no-wrap
msgid "Nam"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:391
#: upstream/_versions/1.11/guides/spring-web.adoc:473
#, no-wrap
msgid "Comments"
msgstr "备注"

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:392
#, no-wrap
msgid "@RestController"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:395
#, no-wrap
msgid "@RequestMapping"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:397
#, no-wrap
msgid "@GetMapping"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:399
#, no-wrap
msgid "@PostMapping"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:401
#, no-wrap
msgid "@PutMapping"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:403
#, no-wrap
msgid "@DeleteMapping"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:405
#, no-wrap
msgid "@PatchMapping"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:407
#: upstream/_versions/1.11/guides/spring-web.adoc:490
#, no-wrap
msgid "@RequestParam"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:409
#, no-wrap
msgid "@RequestHeader"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:411
#, no-wrap
msgid "@MatrixVariable"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:413
#: upstream/_versions/1.11/guides/spring-web.adoc:494
#, no-wrap
msgid "@PathVariable"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:415
#, no-wrap
msgid "@CookieValue"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:417
#: upstream/_versions/1.11/guides/spring-web.adoc:498
#, no-wrap
msgid "@RequestBody"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:419
#: upstream/_versions/1.11/guides/spring-web.adoc:506
#, no-wrap
msgid "@ResponseStatus"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:421
#: upstream/_versions/1.11/guides/spring-web.adoc:510
#, no-wrap
msgid "@ExceptionHandler"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:422
#, no-wrap
msgid "Can only be used in a @RestControllerAdvice class, not on a per-controller basis"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:423
#: upstream/_versions/1.11/guides/spring-web.adoc:502
#, no-wrap
msgid "@RestControllerAdvice"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:424
#, no-wrap
msgid "Only the @ExceptionHandler capability is supported"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:426
#, no-wrap
msgid "Controller method return types"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:429
#: upstream/_versions/1.11/guides/spring-web.adoc:444
msgid "The following method return types are supported:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:431
msgid "Primitive types"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:432
msgid "String (which will be used as a literal, no Spring MVC view support is provided)"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:433
msgid "POJO classes which will be serialized via JSON"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:434
#: upstream/_versions/1.11/guides/spring-web.adoc:446
msgid "`org.springframework.http.ResponseEntity`"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:435
#, no-wrap
msgid "Controller method parameter types"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:440
msgid "In addition to the method parameters that can be annotated with the appropriate Spring Web annotations from the previous table, `javax.servlet.http.HttpServletRequest` and `javax.servlet.http.HttpServletResponse` are also supported.  For this to function however, users need to add the `quarkus-undertow` dependency."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:441
#, no-wrap
msgid "Exception handler method return types"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:447
msgid "`java.util.Map`"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:449
msgid "Other return types mentioned in the Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` are not supported."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/spring-web.adoc:450
#, no-wrap
msgid "Exception handler method parameter types"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:453
msgid "The following parameter types are supported, in arbitrary order:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:455
msgid "An exception argument: declared as a general `Exception` or as a more specific exception. This also serves as a mapping hint if the annotation itself does not narrow the exception types through its `value()`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:456
msgid "Request and/or response objects (typically from the Servlet API). You may choose any specific request/response type, e.g. `ServletRequest` / `HttpServletRequest`. To use Servlet API, the `quarkus-undertow` dependency needs to be added."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:458
msgid "Other parameter types mentioned in the Spring `https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/ExceptionHandler.html[ExceptionHandler javadoc]` are not supported."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:459
#, no-wrap
msgid "Important Technical Note"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:465
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.  What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover Spring infrastructure classes (like `org.springframework.beans.factory.config.BeanPostProcessor` for example) will not be executed."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:466
#, no-wrap
msgid "Conversion Table"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:469
msgid "The following table shows how Spring Web annotations can be converted to JAX-RS annotations."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:471
#, no-wrap
msgid "Spring"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:471
#, no-wrap
msgid "JAX-RS"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:474
#, no-wrap
msgid "@RequestController"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:477
#, no-wrap
msgid "There is no equivalent in JAX-RS. Annotating a class with @Path suffices"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:478
#, no-wrap
msgid "@RequestMapping(path=\"/api\")"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:479
#, no-wrap
msgid "@Path(\"/api\")"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:482
#, no-wrap
msgid "@RequestMapping(consumes=\"application/json\")"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:483
#, no-wrap
msgid "@Consumes(\"application/json\")"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:486
#, no-wrap
msgid "@RequestMapping(produces=\"application/json\")"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:487
#, no-wrap
msgid "@Produces(\"application/json\")"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:491
#, no-wrap
msgid "@QueryParam"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:495
#, no-wrap
msgid "@PathParam"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:501
#, no-wrap
msgid "No equivalent in JAX-RS. Method parameters corresponding to the body of the request are handled in JAX-RS without requiring any annotation"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:505
#: upstream/_versions/1.11/guides/spring-web.adoc:509
#, no-wrap
msgid "No equivalent in JAX-RS"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/spring-web.adoc:512
#, no-wrap
msgid "No equivalent annotation in JAX-RS. Exceptions are handled by implementing `javax.ws.rs.ext.ExceptionMapper`"
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/spring-web.adoc:514
#, no-wrap
msgid "More Spring guides"
msgstr "更多 Spring 指南"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:517
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkus拥有更多的Spring兼容特性。获取更多细节请参阅以下指南:"

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:519
msgid "link:spring-di[Quarkus - Extension for Spring DI]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:520
msgid "link:spring-data-jpa[Quarkus - Extension for Spring Data JPA]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:521
msgid "link:spring-data-rest[Quarkus - Extension for Spring Data REST]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:522
msgid "link:spring-security[Quarkus - Extension for Spring Security]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:523
msgid "link:spring-cloud-config-client[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:524
msgid "link:spring-boot-properties[Quarkus - Extension for Spring Boot properties]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:525
msgid "link:spring-cache[Quarkus - Extension for Spring Cache]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/spring-web.adoc:525
msgid "link:spring-scheduled[Quarkus - Extension for Spring Scheduled]"
msgstr ""
