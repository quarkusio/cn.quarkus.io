# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:6
#, no-wrap
msgid "Quarkus - Writing REST Services with RESTEasy Reactive"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:18
msgid "This guide explains how to write REST Services with RESTEasy Reactive in Quarkus."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:19
#, no-wrap
msgid "What is RESTEasy Reactive?"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:25
msgid "RESTEasy Reactive is a new link:{jaxrsspec}[JAX-RS] implementation written from the ground up to work on our common https://vertx.io/[Vert.x] layer and is thus fully reactive, while also being very tightly integrated with Quarkus and consequently moving a lot of work to build time."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:29
msgid "You should be able to use it in place of any JAX-RS implementation, but on top of that it has great performance for both blocking and non-blocking endpoints, and a lot of new features on top of what JAX-RS provides."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:30
#, no-wrap
msgid "Writing endpoints"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:32
#, no-wrap
msgid "Getting started"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:35
msgid "Add the following import to your `pom.xml` file:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:42
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:45
msgid "You can now write your first endpoint in the `org.acme.rest.Endpoint` class:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:49
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:89
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:111
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:163
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:271
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:322
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:418
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:462
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:498
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:533
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:620
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:645
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:673
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:847
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:873
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:902
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:934
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:998
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1158
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1192
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1255
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1309
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1334
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1386
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1484
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1609
#, no-wrap
msgid "package org.acme.rest;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:52
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:92
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:325
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:465
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:850
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:878
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:55
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:177
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:431
#, no-wrap
msgid ""
"@Path(\"\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:61
#, no-wrap
msgid ""
"    @GET\n"
"    public String hello(){\n"
"        return \"Hello, World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:63
#, no-wrap
msgid "Terminology"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:65
#, no-wrap
msgid "REST"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:66
msgid "https://en.wikipedia.org/wiki/Representational_state_transfer[REpresentational State Transfer]"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:66
#, no-wrap
msgid "Endpoint"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:67
msgid "Java method which is called to serve a REST call"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:67
#, no-wrap
msgid "URL / URI (Uniform Resource Locator / Identifier)"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:68
msgid "Used to identify the location of REST resources (https://tools.ietf.org/html/rfc7230#section-2.7[specification])"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:68
#, no-wrap
msgid "Resource"
msgstr "资源"

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:69
msgid "Represents your domain object. This is what your API serves and modifies. Also called an `entity` in JAX-RS."
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:69
#, no-wrap
msgid "Representation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:70
msgid "How your resource is represented on the wire, can vary depending on content types"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:70
#, no-wrap
msgid "Content type"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:71
msgid "Designates a particular representation (also called a media type), for example `text/plain` or `application/json`"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:71
#, no-wrap
msgid "HTTP"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:72
msgid "Underlying wire protocol for routing REST calls (see https://tools.ietf.org/html/rfc7230[HTTP specifications])"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:72
#, no-wrap
msgid "HTTP request"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:73
msgid "the request part of the HTTP call, consisting of an HTTP method, a target URI, headers and an optional message body"
msgstr ""

#. type: Labeled list
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:73
#, no-wrap
msgid "HTTP response"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:74
msgid "the response part of the HTTP call, consisting of an HTTP response status, headers and an optional message body"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:75
#, no-wrap
msgid "Declaring endpoints: URI mapping"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:79
msgid "Any class annotated with a link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation can have its methods exposed as REST endpoints, provided they have an HTTP method annotation (see below)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:82
msgid "That link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation defines the URI prefix under which those methods will be exposed. It can be empty, or contain a prefix such as `rest` or `rest/V1`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:85
msgid "Each exposed endpoint method can in turn have another link:{jaxrsapi}/javax/ws/rs/Path.html[`@Path`] annotation which adds to its containing class annotation. For example, this defines a `rest/hello` endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:95
#, no-wrap
msgid ""
"@Path(\"rest\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:102
#, no-wrap
msgid ""
"    @Path(\"hello\")\n"
"    @GET\n"
"    public String hello(){\n"
"        return \"Hello, World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:105
msgid "See <<uri-parameters,URI parameters>> for more information about URI mapping."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:107
msgid "You can set the root path for all rest endpoints using the `@ApplicationPath` annotation, as shown below."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:114
#, no-wrap
msgid ""
"import javax.ws.rs.ApplicationPath;\n"
"import javax.ws.rs.core.Application;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:117
#, no-wrap
msgid ""
"@ApplicationPath(\"/api\")\n"
"public static class MyApplication extends Application {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:119
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1246
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1413
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1428
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:124
msgid "This will cause all rest endpoints to be resolve relative to `/api`, so the endpoint above with `@Path(\"rest\")` would be accessible at `/api/rest/. You can also set the `quarkus.rest.path` build time property to set the root path if you don't want to use an annotation."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:125
#, no-wrap
msgid "Declaring endpoints: HTTP methods"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:129
msgid "Each endpoint method must be annotated with one of the following annotations, which defines which HTTP method will be mapped to the method:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:130
#, no-wrap
msgid "Table HTTP method annotations"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:132
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:222
#, no-wrap
msgid "Annotation"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:134
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:224
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:357
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:577
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:708
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1021
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1038
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1106
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1126
#, no-wrap
msgid "Usage"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:135
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/GET.html[`@GET`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:137
#, no-wrap
msgid "Obtain a resource representation, should not modify state, link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.1[HTTP docs])"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:138
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/HEAD.html[`@HEAD`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:140
#, no-wrap
msgid "Obtain metadata about a resource, similar to `GET` with no body (link:{httpspec}#section-4.3.2[HTTP docs])"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:141
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/POST.html[`@POST`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:143
#, no-wrap
msgid "Create a resource and obtain a link to it (link:{httpspec}#section-4.3.3[HTTP docs])"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:144
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/PUT.html[`@PUT`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:146
#, no-wrap
msgid "Replace a resource or create one, should be link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.4[HTTP docs])"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:147
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/DELETE.html[`@DELETE`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:149
#, no-wrap
msgid "Delete an existing resource, link:{httpspec}#section-4.2.2[idempotent]  (link:{httpspec}#section-4.3.5[HTTP docs])"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:150
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/OPTIONS.html[`@OPTIONS`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:152
#, no-wrap
msgid "Obtain information about a resource, link:{httpspec}#section-4.2.2[idempotent] (link:{httpspec}#section-4.3.7[HTTP docs])"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:153
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/PATCH.html[`@PATCH`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:155
#, no-wrap
msgid "Update a resource, or create one, not link:{httpspec}#section-4.2.2[idempotent] (https://tools.ietf.org/html/rfc5789#section-2[HTTP docs])"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:159
msgid "You can also declare other HTTP methods by declaring them as an annotation with the link:{jaxrsapi}/javax/ws/rs/HttpMethod.html[`@HttpMethod`] annotation:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:166
#, no-wrap
msgid ""
"import java.lang.annotation.Retention;\n"
"import java.lang.annotation.RetentionPolicy;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:169
#, no-wrap
msgid ""
"import javax.ws.rs.HttpMethod;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:174
#, no-wrap
msgid ""
"@Retention(RetentionPolicy.RUNTIME)\n"
"@HttpMethod(\"FROMAGE\")\n"
"@interface FROMAGE {\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:183
#, no-wrap
msgid ""
"    @FROMAGE\n"
"    public String hello(){\n"
"        return \"Hello, Cheese World!\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:185
#, no-wrap
msgid "Declaring endpoints: representation / content types"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:190
msgid "Each endpoint method may consume or produce specific resource representations, which are indicated by the HTTP link:{httpspec}#section-3.1.1.5[`Content-Type`] header, which in turn contains link:{httpspec}#section-3.1.1.1[MIME (Media Type)] values, such as the following:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:192
msgid "`text/plain` which is the default for any endpoint returning a `String`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:193
msgid "`text/html` for HTML (such as with link:qute[Qute templating])"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:194
msgid "`application/json` for a <<json,JSON REST endpoint>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:195
msgid "`text/*` which is a sub-type wildcard for any text media type"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:196
msgid "`\\*/*` which is a wildcard for any media type"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:201
msgid "You may annotate your endpoint class with the link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`] or link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`] annotations, which allow you to specify one or more media types that your endpoint may accept as HTTP request body or produce as HTTP response body. Those class annotations apply to each method."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:205
msgid "Any method may also be annotated with the link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces`] or link:{jaxrsapi}/javax/ws/rs/Consumes.html[`@Consumes`] annotations, in which case they override any eventual class annotation."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:208
msgid "The link:{jaxrsapi}/javax/ws/rs/core/MediaType.html[`MediaType`] class has many constants you can use to point to specific pre-defined media types."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:210
msgid "See <<negotiation>> for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:211
#, no-wrap
msgid "Accessing request parameters"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:217
msgid "don't forget to configure your compiler to generate parameter name information with `-parameters` (javac)  or `<parameters>` or `<maven.compiler.parameters>` (https://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html#parameters[Maven])."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:219
msgid "The following HTTP request elements may be obtained by your endpoint method:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:220
#, no-wrap
msgid "Table HTTP request parameter annotations"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:222
#, no-wrap
msgid "HTTP element"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:225
#, no-wrap
msgid "[[path-parameter]]Path parameter"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:226
#, no-wrap
msgid "`@RestPath` (or nothing)"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:229
#, no-wrap
msgid ""
"URI template parameter (simplified version of the https://tools.ietf.org/html/rfc6570[URI Template specification]), \n"
"see <<uri-parameters,URI parameters>> for more information."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:230
#, no-wrap
msgid "Query parameter"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:231
#, no-wrap
msgid "`@RestQuery`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:233
#, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc3986#section-3.4[URI query parameter]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:234
#, no-wrap
msgid "Header"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:235
#, no-wrap
msgid "`@RestHeader`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:237
#, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc7230#section-3.2[HTTP header]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:238
#, no-wrap
msgid "Cookie"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:239
#, no-wrap
msgid "`@RestCookie`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:241
#, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc6265#section-4.2[HTTP cookie]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:242
#, no-wrap
msgid "Form parameter"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:243
#, no-wrap
msgid "`@RestForm`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:245
#, no-wrap
msgid "The value of an https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST[HTTP URL-encoded FORM]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:246
#, no-wrap
msgid "Matrix parameter"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:247
#, no-wrap
msgid "`@RestMatrix`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:249
#, no-wrap
msgid "The value of an https://tools.ietf.org/html/rfc3986#section-3.3[URI path segment parameter]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:253
msgid "For each of those annotations, you may specify the name of the element they refer to, otherwise they will use the name of the annotated method parameter."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:255
msgid "If a client made the following HTTP call:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:262
#, no-wrap
msgid ""
"POST /cheeses;variant=goat/tomme?age=matured HTTP/1.1\n"
"Content-Type: application/x-www-form-urlencoded\n"
"Cookie: level=hardcore\n"
"X-Cheese-Secret-Handshake: fist-bump\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:264
#, no-wrap
msgid "smell=strong\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:267
msgid "Then you could obtain all the various parameters with this endpoint method:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:274
#, no-wrap
msgid ""
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:281
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.RestCookie;\n"
"import org.jboss.resteasy.reactive.RestForm;\n"
"import org.jboss.resteasy.reactive.RestHeader;\n"
"import org.jboss.resteasy.reactive.RestMatrix;\n"
"import org.jboss.resteasy.reactive.RestPath;\n"
"import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:284
#, no-wrap
msgid ""
"@Path(\"/cheeses/{type}\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:296
#, no-wrap
msgid ""
"    @POST\n"
"    public String allParams(@RestPath String type,\n"
"                            @RestMatrix String variant,\n"
"                            @RestQuery String age,\n"
"                            @RestCookie String level,\n"
"                            @RestHeader(\"X-Cheese-Secret-Handshake\")\n"
"                            String secretHandshake,\n"
"                            @RestForm String smell){\n"
"        return type + \"/\" + variant + \"/\" + age + \"/\" + level + \"/\" + secretHandshake + \"/\" + smell;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:300
msgid "the `@RestPath` annotation is optional: any parameter whose name matches an existing URI template variable will be automatically assumed to have `@RestPath`."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:308
msgid "You can also use any of the JAX-RS annotations link:{jaxrsapi}/javax/ws/rs/PathParam.html[`@PathParam`], link:{jaxrsapi}/javax/ws/rs/QueryParam.html[`@QueryParam`], link:{jaxrsapi}/javax/ws/rs/HeaderParam.html[`@HeaderParam`], link:{jaxrsapi}/javax/ws/rs/CookieParam.html[`@CookieParam`], link:{jaxrsapi}/javax/ws/rs/FormParam.html[`@FormParam`] or link:{jaxrsapi}/javax/ws/rs/MatrixParam.html[`@MatrixParam`] for this, but they require you to specify the parameter name."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:310
msgid "See <<parameter-mapping>> for more advanced use-cases."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:311
#, no-wrap
msgid "Declaring URI parameters"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:318
msgid "You can declare URI parameters and use regular expressions in your path, so for instance the following endpoint will serve requests for `/hello/stef/23` and `/hello` but not `/hello/stef/0x23`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:328
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1458
#, no-wrap
msgid ""
"@Path(\"hello\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:334
#, no-wrap
msgid ""
"    @Path(\"{name}/{age:\\\\d+}\")\n"
"    @GET\n"
"    public String personalisedHello(String name, int age){\n"
"        return \"Hello \" + name + \" is your age really \" + age + \"?\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:340
#, no-wrap
msgid ""
"    @GET\n"
"    public String genericHello(){\n"
"        return \"Hello stranger\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:343
#, no-wrap
msgid "Accessing the request body"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:348
msgid "Any method parameter with no annotation will receive the method body.footnote:[Unless it is a <<path-parameter,URI template parameter>> or a <<context-objects,context object>>.], after it has been mapped from its HTTP representation to the Java type of the parameter."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:350
msgid "The following parameter types will be supported out of the box:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:353
#, no-wrap
msgid "Table Request body parameter type"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:355
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:575
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1019
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1036
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1104
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1124
#, no-wrap
msgid "Typ"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:358
#, no-wrap
msgid "link:{jdkapi}/java/io/File.html[`File`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:360
#, no-wrap
msgid "The entire request body in a temporary file"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:361
#, no-wrap
msgid "`byte[]`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:363
#, no-wrap
msgid "The entire request body, not decoded"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:364
#, no-wrap
msgid "`char[]`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:366
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:369
#, no-wrap
msgid "The entire request body, decoded"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:367
#, no-wrap
msgid "link:{jdkapi}/java/lang/String.html[`String`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:370
#, no-wrap
msgid "link:{jdkapi}/java/io/InputStream.html[`InputStream`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:372
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:375
#, no-wrap
msgid "The request body in a blocking stream"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:373
#, no-wrap
msgid "link:{jdkapi}/java/io/Reader.html[`Reader`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:376
#, no-wrap
msgid "All Java primitives and their wrapper classes"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:378
#, no-wrap
msgid "Java primitive types"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:379
#, no-wrap
msgid "link:{jdkapi}/java/math/BigDecimal.html[`BigDecimal`], link:{jdkapi}/java/math/BigInteger.html[`BigInteger`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:381
#, no-wrap
msgid "Large integers and decimals."
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:383
#, no-wrap
msgid ""
"link:{jsonpapi}/javax/json/JsonArray.html[`JsonArray`], link:{jsonpapi}/javax/json/JsonArray.html[`JsonObject`],\n"
"link:{jsonpapi}/javax/json/JsonArray.html[`JsonStructure`], link:{jsonpapi}/javax/json/JsonArray.html[`JsonValue`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:385
#, no-wrap
msgid "JSON value types"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:386
#, no-wrap
msgid "link:{vertxapi}io/vertx/core/buffer/Buffer.html[`Buffer`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:388
#, no-wrap
msgid "Vert.x Buffer"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:389
#, no-wrap
msgid "any other type"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:391
#, no-wrap
msgid "Will be <<json,mapped from JSON to that type>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:394
msgid "You can add support for more <<readers-writers,body parameter types>>."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:395
#, no-wrap
msgid "Returning a response body"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:400
msgid "In order to return an HTTP response, simply return the resource you want from your method. The method return type and its optional content type will be used to decide how to serialise it to the HTTP response (see <<negotiation>> for more advanced information)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:403
msgid "You can return any of the pre-defined types that you can read from the <<resource-types,HTTP response>>, and any other type will be mapped <<json,from that type to JSON>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:408
msgid "Alternately, you can also return a <<reactive,reactive type>> such as link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`], link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] or link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] that resolve to one of the mentioned return types."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:409
#, no-wrap
msgid "Setting other response properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:414
msgid "If you need to set more properties on the HTTP response than just the body, such as the status code or headers, you can make your method return the link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] type:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:422
#, no-wrap
msgid ""
"import java.time.Duration;\n"
"import java.time.Instant;\n"
"import java.util.Date;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:428
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.NewCookie;\n"
"import javax.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:446
#, no-wrap
msgid ""
"    @GET\n"
"    public Response hello() {\n"
"        // HTTP OK status with text/plain content type\n"
"        return Response.ok(\"Hello, World!\", MediaType.TEXT_PLAIN_TYPE)\n"
"         // set a response header\n"
"         .header(\"X-FroMage\", \"Camembert\")\n"
"         // set the Expires response header to two days from now\n"
"         .expires(Date.from(Instant.now().plus(Duration.ofDays(2))))\n"
"         // send a new cookie\n"
"         .cookie(new NewCookie(\"Flavour\", \"praliné\"))\n"
"         // end of builder API\n"
"         .build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:448
#, no-wrap
msgid "Async/reactive support"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:458
msgid "If your endpoint method needs to accomplish an asynchronous or reactive task before being able to answer, you can declare your method to return the link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] type (from https://smallrye.io/smallrye-mutiny/[Mutiny]), in which case the current HTTP request will be automatically suspended after your method, until the returned link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni`] instance resolves to a value, which will be mapped to a response exactly according to the previously described rules:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:467
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:880
#, no-wrap
msgid "import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:470
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:549
#, no-wrap
msgid ""
"@Path(\"escoffier\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:476
#, no-wrap
msgid ""
"    @GET\n"
"    public Uni<Book> culinaryGuide(){\n"
"        return Book.findByIsbn(\"978-2081229297\");\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:482
msgid "This allows you to not block the event-loop thread while the book is being fetched from the database, and allows Quarkus to serve more requests until your book is ready to be sent to the client and terminate this request. Check out our <<execution-model,Execution Model documentation>> for more information."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:485
msgid "The link:{jdkapi}/java/util/concurrent/CompletionStage.html[`CompletionStage`] return type is also supported."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:486
#, no-wrap
msgid "Streaming support"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:491
msgid "If you want to stream your response element by element, you can make your endpoint method return a link:{mutinyapi}/io/smallrye/mutiny/Multi.html[`Multi`] type (from https://smallrye.io/smallrye-mutiny/[Mutiny]).  This is especially useful for streaming text or binary data."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:494
msgid "This example, using link:reactive-messaging-http[Reactive Messaging] shows how to stream text data:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:502
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:504
#, no-wrap
msgid "import org.eclipse.microprofile.reactive.messaging.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:506
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:509
#, no-wrap
msgid ""
"@Path(\"logs\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:513
#, no-wrap
msgid ""
"    @Inject\n"
"    @Channel(\"log-out\")\n"
"    Multi<String> logs;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:519
#, no-wrap
msgid ""
"    @GET\n"
"    public Multi<String> streamLogs() {\n"
"        return logs;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:521
#, no-wrap
msgid "Server-Sent Event (SSE) support"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:529
msgid "If you want to stream JSON objects in your response, you can use https://html.spec.whatwg.org/multipage/server-sent-events.html[Server-Sent Events] by just annotating your endpoint method with link:{jaxrsapi}/javax/ws/rs/Produces.html[`@Produces(MediaType.SERVER_SENT_EVENTS)`] and specifying that each element should be <<json,serialised to JSON>> with `@RestSseElementType(MediaType.APPLICATION_JSON)`."
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:539
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:541
#, no-wrap
msgid "import org.jboss.resteasy.reactive.RestSseElementType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:544
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Multi;\n"
"import io.smallrye.mutiny.Uni;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:546
#, no-wrap
msgid "import io.smallrye.reactive.messaging.annotations.Channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:554
#, no-wrap
msgid ""
"    // Inject our Book channel\n"
"    @Inject\n"
"    @Channel(\"book-out\")\n"
"    Multi<Book> books;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:564
#, no-wrap
msgid ""
"    @GET\n"
"    // Send the stream over SSE\n"
"    @Produces(MediaType.SERVER_SENT_EVENTS)\n"
"    // Each element will be sent as JSON\n"
"    @RestSseElementType(MediaType.APPLICATION_JSON)\n"
"    public Multi<Book> stream() {\n"
"        return books;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:566
#, no-wrap
msgid "Accessing context objects"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:572
msgid "There are a number of contextual objects that the framework will give you, if your endpoint method takes parameters of the following type:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:573
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:704
#, no-wrap
msgid "Table Context object"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:578
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/HttpHeaders.html[`HttpHeaders`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:580
#, no-wrap
msgid "All the request headers"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:581
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ResourceInfo.html[`ResourceInfo`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:583
#, no-wrap
msgid "Information about the current endpoint method and class (requires reflection)"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:584
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/SecurityContext.html[`SecurityContext`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:586
#, no-wrap
msgid "Access to the current user and roles"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:587
#, no-wrap
msgid "`SimpleResourceInfo`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:589
#, no-wrap
msgid "Information about the current endpoint method and class (no reflection required)"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:590
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/UriInfo.html[`UriInfo`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:592
#, no-wrap
msgid "Provides information about the current endpoint and application URI"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:593
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Application.html[`Application`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:595
#, no-wrap
msgid "Advanced: Current JAX-RS application class"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:596
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Configuration.html[`Configuration`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:598
#, no-wrap
msgid "Advanced: Configuration about the deployed JAX-RS application"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:599
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/ext/Providers.html[`Providers`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:601
#, no-wrap
msgid "Advanced: Runtime access to JAX-RS providers"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:602
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:604
#, no-wrap
msgid "Advanced: Access to the current HTTP method and <<preconditions>>"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:605
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/ResourceContext.html[`ResourceContext`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:607
#, no-wrap
msgid "Advanced: access to instances of endpoints"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:608
#, no-wrap
msgid "`ServerRequestContext`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:610
#, no-wrap
msgid "Advanced: RESTEasy Reactive access to the current request/response"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:611
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/sse/Sse.html[`Sse`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:613
#, no-wrap
msgid "Advanced: Complex SSE use-cases"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:616
msgid "For example, here is how you can return the name of the currently logged-in user:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:622
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:647
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:675
#, no-wrap
msgid "import java.security.Principal;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:626
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:653
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:679
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.SecurityContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:629
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:656
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:682
#, no-wrap
msgid ""
"@Path(\"user\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:636
#, no-wrap
msgid ""
"    @GET\n"
"    public String userName(SecurityContext security) {\n"
"        Principal user = security.getUserPrincipal();\n"
"        return user != null ? user.getName() : \"<NOT LOGGED IN>\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:641
msgid "You can also inject those context objects using https://javadoc.io/static/javax.inject/javax.inject/1/javax/inject/Inject.html[`@Inject`] on fields of the same type:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:649
#, no-wrap
msgid "import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:659
#, no-wrap
msgid ""
"    @Inject\n"
"    SecurityContext security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:666
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:695
#, no-wrap
msgid ""
"    @GET\n"
"    public String userName() {\n"
"        Principal user = security.getUserPrincipal();\n"
"        return user != null ? user.getName() : \"<NOT LOGGED IN>\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:669
msgid "Or even on your endpoint constructor:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:684
#, no-wrap
msgid "    SecurityContext security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:688
#, no-wrap
msgid ""
"    Endpoint(SecurityContext security){\n"
"        this.security = security;\n"
"    }\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:698
#, no-wrap
msgid "JSON serialisation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:703
msgid "Instead of importing `io.quarkus:quarkus-resteasy-reactive`, you can import either of the following modules to get support for JSON:"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:706
#, no-wrap
msgid "GAV"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:709
#, no-wrap
msgid "`io.quarkus:quarkus-resteasy-reactive-jackson`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:711
#, no-wrap
msgid "https://github.com/FasterXML/jackson[Jackson support]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:712
#, no-wrap
msgid "`io.quarkus:quarkus-resteasy-reactive-jsonb`"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:714
#, no-wrap
msgid "http://json-b.net/[JSONB support]"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:719
msgid "In both cases, importing those modules will allow HTTP message bodies to be read from JSON and serialised to JSON, for <<resource-types,all the types not already registered with a more specific serialisation>>."
msgstr ""

#. type: Title ====
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:720
#, no-wrap
msgid "Advanced Jackson-specific features"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:723
msgid "When using the `quarkus-resteasy-reactive-jackson` extension there are some advanced features that RESTEasy Reactive supports."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:724
#, no-wrap
msgid "@JsonView support"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:728
msgid "JAX-RS methods can be annotated with https://fasterxml.github.io/jackson-annotations/javadoc/2.10/com/fasterxml/jackson/annotation/JsonView.html[@JsonView] in order to customize the serialization of the returned POJO, on a per method-basis. This is best explained with an example."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:730
msgid "A typical use of `@JsonView` is to hide certain fields on certain methods. In that vein, let's define two views:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:734
#, no-wrap
msgid "public class Views {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:737
#, no-wrap
msgid ""
"    public static class Public {\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:741
#, no-wrap
msgid ""
"    public static class Private extends Public {\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:744
msgid "Let's assume we have the `User` POJO on which we want to hide some field during serialization. A simple example of this is:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:748
#, no-wrap
msgid "public class User {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:751
#, no-wrap
msgid ""
"    @JsonView(Views.Private.class)\n"
"    public int id;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:755
#, no-wrap
msgid ""
"    @JsonView(Views.Public.class)\n"
"    public String name;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:759
msgid "Depending on the JAX-RS method that returns this user, we might want to exclude the `id` field from serialization - for example you might want an insecure method to not expose this field. The way we can achieve that in RESTEasy Reactive is shown in the following example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:768
#, no-wrap
msgid ""
"@JsonView(Views.Public.class)\n"
"@GET\n"
"@Path(\"/public\")\n"
"public User userPublic() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:775
#, no-wrap
msgid ""
"@JsonView(Views.Private.class)\n"
"@GET\n"
"@Path(\"/private\")\n"
"public User userPrivate() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:779
msgid "When the result the `userPublic` method is serialized, the `id` field will not be contained in the response as the `Public` view does not include it.  The result of `userPrivate` however will include the `id` as expected when serialized."
msgstr ""

#. type: Title =====
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:780
#, no-wrap
msgid "Completely customized per method serialization"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:784
msgid "There are times when you need to completely customize the serialization of a POJO on a per JAX-RS method basis. For such use cases, the `@io.quarkus.resteasy.reactive.jackson.CustomSerialization` annotation is a great tool, as it allows you to configure a per-method `com.fasterxml.jackson.databind.ObjectWriter` which can be configured at will."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:786
msgid "Here is an example use case:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:795
#, no-wrap
msgid ""
"@CustomSerialization(UnquotedFields.class)\n"
"@GET\n"
"@Path(\"/invalid-use-of-custom-serializer\")\n"
"public User invalidUseOfCustomSerializer() {\n"
"    return testUser();\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:798
msgid "where `UnquotedFields` is a `BiFunction` defined as so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:802
#, no-wrap
msgid "public static class UnquotedFields implements BiFunction<ObjectMapper, Type, ObjectWriter> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:808
#, no-wrap
msgid ""
"    @Override\n"
"    public ObjectWriter apply(ObjectMapper objectMapper, Type type) {\n"
"        return objectMapper.writer().without(JsonWriteFeature.QUOTE_FIELD_NAMES);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:811
msgid "Essentially what this class does is force Jackson to not include quotes in the field names."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:813
msgid "It is important to note that this customization is only performed for the serialization of the JAX-RS methods that use `@CustomSerialization(UnquotedFields.class)`."
msgstr ""

#. type: Title ==
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:814
#, no-wrap
msgid "More advanced usage"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:818
msgid "Here are some more advanced topics that you may not need to know about initially, but could prove useful for more complex use cases."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:819
#, no-wrap
msgid "Execution model, blocking, non-blocking"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:824
msgid "RESTEasy Reactive is implemented using two main thread types:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:826
msgid "Event-loop threads: which are responsible, among other things, for reading bytes from the HTTP request and"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:827
msgid "writing bytes back to the HTTP response"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:828
msgid "Worker threads: they are pooled and can be used to offload long-running operations"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:832
msgid "The event-loop threads (also called IO threads) are responsible for actually performing all the IO operations in an asynchronous way, and to trigger any listener interested in the completion of those IO operations."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:835
msgid "By default, RESTEasy Reactive will run endpoint methods on the event-loop threads, on the assumption that they are going to be fast and only invoke non-blocking operations."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:838
msgid "This is the model of execution that leads to best performance if your endpoints do not do any blocking operation (such as blocking IO, blocking on an asynchronous operation, or sleeping)."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:843
msgid "If your endpoint method needs to do any of those blocking operations, you should add the https://javadoc.io/doc/io.smallrye.common/smallrye-common-annotation/1.5.0/io/smallrye/common/annotation/Blocking.html[`@Blocking`] annotation on your endpoint and it will instead be invoked on a worker thread. Your endpoint method code can remain exactly the same, and it will be allowed to block:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:852
#, no-wrap
msgid "import io.smallrye.common.annotation.Blocking;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:855
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:883
#, no-wrap
msgid ""
"@Path(\"yawn\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:864
#, no-wrap
msgid ""
"    @Blocking\n"
"    @GET\n"
"    public String blockingHello() throws InterruptedException {\n"
"        // do a blocking operation\n"
"        Thread.sleep(1000);\n"
"        return \"Yaaaawwwwnnnnnn…\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:869
msgid "Most of the time, there are ways to achieve the same blocking operations in an asynchronous/reactive way, using https://smallrye.io/smallrye-mutiny/[Mutiny], http://hibernate.org/reactive/[Hibernate Reactive] or any of the link:getting-started-reactive[Quarkus Reactive extensions] for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:875
#, no-wrap
msgid "import java.time.Duration;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:891
#, no-wrap
msgid ""
"    @GET\n"
"    public Uni<String> blockingHello() throws InterruptedException {\n"
"        return Uni.createFrom().item(\"Yaaaawwwwnnnnnn…\")\n"
"                // do a non-blocking sleep\n"
"                .onItem().delayIt().by(Duration.ofSeconds(2));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:893
#, no-wrap
msgid "Exception mapping"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:898
msgid "If your application needs to return non-nominal HTTP codes in error cases, the best is to throw exceptions that will result in the proper HTTP response being sent by the framework using link:{jaxrsapi}/javax/ws/rs/WebApplicationException.html[`WebApplicationException`] or any of its subtypes:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:907
#, no-wrap
msgid ""
"import javax.ws.rs.BadRequestException;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.NotFoundException;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:910
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:970
#, no-wrap
msgid ""
"@Path(\"fromages/{fromage}\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:922
#, no-wrap
msgid ""
"    @GET\n"
"    public String findFromage(String fromage) {\n"
"        if(fromage == null)\n"
"            // send a 400\n"
"            throw new BadRequestException();\n"
"        if(!fromage.equals(\"camembert\"))\n"
"            // send a 404\n"
"            throw new NotFoundException(\"Unknown cheese: \" + fromage);\n"
"        return \"Camembert is a very nice cheese\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:930
msgid "If your endpoint method is delegating calls to another service layer which does not know of JAX-RS, you need a way to turn service exceptions to an HTTP response, and you can do that using the `@ServerExceptionMapper` annotation on a method, with one parameter of the exception type you want to handle, and turning that exception into a link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] (or a link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]):"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:936
#, no-wrap
msgid "import java.util.Map;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:943
#, no-wrap
msgid ""
"import javax.enterprise.context.ApplicationScoped;\n"
"import javax.inject.Inject;\n"
"import javax.ws.rs.BadRequestException;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:945
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1002
#, no-wrap
msgid "import org.jboss.resteasy.reactive.server.ServerExceptionMapper;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:948
#, no-wrap
msgid ""
"class UnknownCheeseException extends RuntimeException {\n"
"    public final String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:953
#, no-wrap
msgid ""
"    public UnknownCheeseException(String name) {\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:959
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"class CheeseService {\n"
"    private static final Map<String, String> cheeses = \n"
"            Map.of(\"camembert\", \"Camembert is a very nice cheese\",\n"
"                   \"gouda\", \"Gouda is acceptable too, especially with cumin\");\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:967
#, no-wrap
msgid ""
"    public String findCheese(String name) {\n"
"        String ret = cheeses.get(name);\n"
"        if(ret != null)\n"
"            return ret;\n"
"        throw new UnknownCheeseException(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:973
#, no-wrap
msgid ""
"    @Inject\n"
"    CheeseService cheeses;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:980
#, no-wrap
msgid ""
"    @ServerExceptionMapper\n"
"    public Response mapException(UnknownCheeseException x) {\n"
"        return Response.status(Response.Status.NOT_FOUND)\n"
"                       .entity(\"Unknown cheese: \" + x.name)\n"
"                       .build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:989
#, no-wrap
msgid ""
"    @GET\n"
"    public String findFromage(String fromage) {\n"
"        if(fromage == null)\n"
"            // send a 400\n"
"            throw new BadRequestException();\n"
"        return cheeses.findCheese(fromage);\n"
"    }\n"
"} \n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:994
msgid "exception mappers defined in REST endpoint classes will only be called if the exception is thrown in the same class. If you want to define global exception mappers, simply define them outside a REST endpoint class:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1000
#, no-wrap
msgid "import javax.ws.rs.core.Response;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1011
#, no-wrap
msgid ""
"class ExceptionMappers {\n"
"    @ServerExceptionMapper\n"
"    public Response mapException(UnknownCheeseException x) {\n"
"        return Response.status(Response.Status.NOT_FOUND)\n"
"                       .entity(\"Unknown cheese: \" + x.name)\n"
"                       .build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1014
msgid "You can also declare link:{jaxrsspec}#exceptionmapper[exception mappers in the JAX-RS way]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1016
msgid "Your exception mapper may declare any of the following parameter types:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1017
#, no-wrap
msgid "Table Exception mapper parameters"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1022
#, no-wrap
msgid "An exception type"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1024
#, no-wrap
msgid "Defines the exception type you want to handle"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1025
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1107
#, no-wrap
msgid "Any of the <<context-objects,Context objects>>"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1028
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1110
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ContainerRequestContext.html[`ContainerRequestContext`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1030
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1112
#, no-wrap
msgid "A context object to access the current request"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1033
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1121
msgid "It may declare any of the following return types:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1034
#, no-wrap
msgid "Table Exception mapper return types"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1039
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1127
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1041
#, no-wrap
msgid "The response to send to the client when the exception occurs"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1042
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1133
#, no-wrap
msgid "link:{mutinyapi}/io/smallrye/mutiny/Uni.html[`Uni<Response>`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1044
#, no-wrap
msgid "An asynchronous response to send to the client when the exception occurs"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1046
#, no-wrap
msgid "Request or response filters"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1049
msgid "You can declare functions which are invoked in the following phases of the request processing:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1051
msgid "Before the endpoint method is identified: pre-routing request filter"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1052
msgid "After routing, but before the endpoint method is called: normal request filter"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1053
msgid "After the endpoint method is called: response filter"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1057
msgid "These filters allow you to do various things such as examine the request URI, HTTP method, influence routing, look or change request headers, abort the request, or modify the response."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1059
msgid "Request filters can be declared with the `@ServerRequestFilter` annotation:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1063
#, no-wrap
msgid "class Filters {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1071
#, no-wrap
msgid ""
"    @ServerRequestFilter(preMatching = true)\n"
"    public void preMatchingFilter(ContainerRequestContext requestContext) {\n"
"        // make sure we don't lose cheese lovers\n"
"        if(\"yes\".equals(requestContext.getHeaderString(\"Cheese\"))) {\n"
"            requestContext.setRequestUri(URI.create(\"/cheese\"));\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1080
#, no-wrap
msgid ""
"    @ServerRequestFilter\n"
"    public void getFilter(ContainerRequestContext ctx) {\n"
"        // only allow GET methods for now\n"
"        if(ctx.getMethod().equals(HttpMethod.GET)) {\n"
"            ctx.abortWith(Response.status(Response.Status.METHOD_NOT_ALLOWED).build());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1083
msgid "Similarly, response filters can be declared with the `@ServerResponseFilter` annotation:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1096
#, no-wrap
msgid ""
"class Filters {\n"
"    @ServerResponseFilter\n"
"    public void getFilter(ContainerResponseContext responseContext) {\n"
"        Object entity = responseContext.getEntity();\n"
"        if(entity instanceof String) {\n"
"            // make it shout\n"
"            responseContext.setEntity(((String)entity).toUpperCase());\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1099
msgid "You can also link:{jaxrsspec}#filters[declare request and response filters in the JAX-RS way]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1101
msgid "Your filters may declare any of the following parameter types:"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1102
#, no-wrap
msgid "Table Filter parameters"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1113
#, no-wrap
msgid "link:{jaxrsapi}/javax/ws/rs/container/ContainerResponseContext.html[`ContainerResponseContext`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1115
#, no-wrap
msgid "A context object to access the current response"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1116
#, no-wrap
msgid "link:{jdkapi}/java/lang/Throwable.html[`Throwable`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1118
#, no-wrap
msgid "Any thrown exception, or `null` (only for response filters)"
msgstr ""

#. type: Block title
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1122
#, no-wrap
msgid "Table Filter return types"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1129
#, no-wrap
msgid "The response to send to the client instead of continuing the filter chain, or `null` if the filter chain should proceed"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1130
#, no-wrap
msgid "link:{jdkapi}/java/util/Optional.html[`Optional<Response>`]"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1132
#, no-wrap
msgid "An optional response to send to the client instead of continuing the filter chain, or an empty value if the filter chain should proceed"
msgstr ""

#. type: Table
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1135
#, no-wrap
msgid "An asynchronous response to send to the client instead of continuing the filter chain, or `null` if the filter chain should proceed"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1137
#, no-wrap
msgid "Readers and Writers: mapping entities and HTTP bodies"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1144
msgid "Whenever your endpoint methods return a object (of when they return a link:{jaxrsapi}/javax/ws/rs/core/Response.html[`Response`] with an entity), RESTEasy Reactive will look for a way to map that into an HTTP response body."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1147
msgid "Similarly, whenever your endpoint method takes an object as parameter, we will look for a way to map the HTTP request body into that object."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1152
msgid "This is done via a pluggable system of link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyReader.html[`MessageBodyReader`] and link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] interfaces, which are responsible for defining which Java type they map from/to, for which media types, and how they turn HTTP bodies to/from Java instances of that type."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1154
msgid "For example, if we have our own `FroMage` type on our endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1162
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1313
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1165
#, no-wrap
msgid ""
"class FroMage {\n"
"    public String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1170
#, no-wrap
msgid ""
"    public FroMage(String name) {\n"
"        this.name = name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1173
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1316
#, no-wrap
msgid ""
"@Path(\"cheese\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1178
#, no-wrap
msgid ""
"    @GET\n"
"    public FroMage sayCheese() {\n"
"        return new FroMage(\"Cheeeeeese\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1184
#, no-wrap
msgid ""
"    @PUT\n"
"    public void addCheese(FroMage fromage) {\n"
"        System.err.println(\"Received a new cheese: \" + fromage.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1188
msgid "Then we can define how to read and write it with our body reader/writers, annotated with link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`]:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1199
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1262
#, no-wrap
msgid ""
"import java.io.IOException;\n"
"import java.io.InputStream;\n"
"import java.io.OutputStream;\n"
"import java.lang.annotation.Annotation;\n"
"import java.lang.reflect.Type;\n"
"import java.nio.charset.StandardCharsets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1206
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.MultivaluedMap;\n"
"import javax.ws.rs.ext.MessageBodyReader;\n"
"import javax.ws.rs.ext.MessageBodyWriter;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1210
#, no-wrap
msgid ""
"@Provider\n"
"public class FroMageBodyHandler implements MessageBodyReader<FroMage>, \n"
"                                           MessageBodyWriter<FroMage> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1216
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isWriteable(Class<?> type, Type genericType, \n"
"                               Annotation[] annotations, MediaType mediaType) {\n"
"        return type == FroMage.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1226
#, no-wrap
msgid ""
"    @Override\n"
"    public void writeTo(FroMage t, Class<?> type, Type genericType, \n"
"                        Annotation[] annotations, MediaType mediaType,\n"
"                        MultivaluedMap<String, Object> httpHeaders, \n"
"                        OutputStream entityStream)\n"
"            throws IOException, WebApplicationException {\n"
"        entityStream.write((\"[FroMageV1]\" + t.name)\n"
"                           .getBytes(StandardCharsets.UTF_8));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1232
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isReadable(Class<?> type, Type genericType, \n"
"                              Annotation[] annotations, MediaType mediaType) {\n"
"        return type == FroMage.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1244
#, no-wrap
msgid ""
"    @Override\n"
"    public FroMage readFrom(Class<FroMage> type, Type genericType, \n"
"                            Annotation[] annotations, MediaType mediaType,\n"
"                            MultivaluedMap<String, String> httpHeaders,\n"
"                            InputStream entityStream)\n"
"            throws IOException, WebApplicationException {\n"
"        String body = new String(entityStream.readAllBytes(), StandardCharsets.UTF_8);\n"
"        if(body.startsWith(\"[FroMageV1]\"))\n"
"            return new FroMage(body.substring(11));\n"
"        throw new IOException(\"Invalid fromage: \" + body);\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1251
msgid "If you want to get the most performance our of your writer, you can extend `ServerMessageBodyWriter` instead of link:{jaxrsapi}/javax/ws/rs/ext/MessageBodyWriter.html[`MessageBodyWriter`] where you will be able to use less reflection and bypass the blocking IO layer:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1268
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.core.MediaType;\n"
"import javax.ws.rs.core.MultivaluedMap;\n"
"import javax.ws.rs.ext.MessageBodyReader;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1272
#, no-wrap
msgid ""
"import org.jboss.resteasy.reactive.server.spi.ResteasyReactiveResourceInfo;\n"
"import org.jboss.resteasy.reactive.server.spi.ServerMessageBodyWriter;\n"
"import org.jboss.resteasy.reactive.server.spi.ServerRequestContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1276
#, no-wrap
msgid ""
"@Provider\n"
"public class FroMageBodyHandler implements MessageBodyReader<FroMage>, \n"
"                                           ServerMessageBodyWriter<FroMage> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1278
#, no-wrap
msgid "    // …\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1284
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean isWriteable(Class<?> type, ResteasyReactiveResourceInfo target, \n"
"                               MediaType mediaType) {\n"
"        return type == FroMage.class;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1291
#, no-wrap
msgid ""
"    @Override\n"
"    public void writeResponse(FroMage t, ServerRequestContext context) \n"
"      throws WebApplicationException, IOException {\n"
"        context.serverResponse().end(\"[FroMageV1]\" + t.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1296
msgid "You can restrict which content-types your reader/writer apply to by adding link:{jaxrsapi}/javax/ws/rs/Consumes.html[`Consumes`]/link:{jaxrsapi}/javax/ws/rs/Produces.html[`Produces`] annotations on your provider class."
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1297
#, no-wrap
msgid "Reader and Writer interceptors"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1303
msgid "Just as you can intercept requests and responses, you can also intercept readers and writers, by extending the link:{jaxrsapi}/javax/ws/rs/ext/ReaderInterceptor.html[`ReaderInterceptor`] or link:{jaxrsapi}/javax/ws/rs/ext/WriterInterceptor.html[`WriterInterceptor`] on a class annotated with link:{jaxrsapi}/javax/ws/rs/ext/Provider.html[`@Provider`]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1305
msgid "If we look at this endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1321
#, no-wrap
msgid ""
"    @GET\n"
"    public String sayCheese() {\n"
"        return \"Cheeeeeese\";\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1327
#, no-wrap
msgid ""
"    @PUT\n"
"    public void addCheese(String fromage) {\n"
"        System.err.println(\"Received a new cheese: \" + fromage);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1330
msgid "We can add reader and writer interceptors like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1336
#, no-wrap
msgid "import java.io.IOException;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1343
#, no-wrap
msgid ""
"import javax.ws.rs.WebApplicationException;\n"
"import javax.ws.rs.ext.Provider;\n"
"import javax.ws.rs.ext.ReaderInterceptor;\n"
"import javax.ws.rs.ext.ReaderInterceptorContext;\n"
"import javax.ws.rs.ext.WriterInterceptor;\n"
"import javax.ws.rs.ext.WriterInterceptorContext;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1346
#, no-wrap
msgid ""
"@Provider\n"
"public class FroMageIOInterceptor implements ReaderInterceptor, WriterInterceptor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1354
#, no-wrap
msgid ""
"    @Override\n"
"    public void aroundWriteTo(WriterInterceptorContext context)\n"
"      throws IOException, WebApplicationException {\n"
"        System.err.println(\"Before writing \" + context.getEntity());\n"
"        context.proceed();\n"
"        System.err.println(\"After writing \" + context.getEntity());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1364
#, no-wrap
msgid ""
"    @Override\n"
"    public Object aroundReadFrom(ReaderInterceptorContext context)\n"
"      throws IOException, WebApplicationException {\n"
"        System.err.println(\"Before reading \" + context.getGenericType());\n"
"        Object entity = context.proceed();\n"
"        System.err.println(\"After reading \" + entity);\n"
"        return entity;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1366
#, no-wrap
msgid "Parameter mapping"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1370
msgid "All <<request-parameters,Request Parameters>> can be declared as link:{jdkapi}/java/lang/String.html[`String`], but also any of the following types:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1373
msgid "Types for which a link:{jaxrsapi}/javax/ws/rs/ext/ParamConverter.html[`ParamConverter`] is available via a registered link:{jaxrsapi}/javax/ws/rs/ext/ParamConverterProvider.html[`ParamConverterProvider`]."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1374
msgid "Primitive types."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1375
msgid "Types that have a constructor that accepts a single link:{jdkapi}/java/lang/String.html[`String`] argument."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1378
msgid "Types that have a static method named `valueOf` or `fromString` with a single link:{jdkapi}/java/lang/String.html[`String`] argument that return an instance of the type. If both methods are present then `valueOf` will be used unless the type is an `enum` in which case `fromString` will be used."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1380
msgid "link:{jdkapi}/java/util/List.html[`List<T>`], link:{jdkapi}/java/util/Set.html[`Set<T>`], or link:{jdkapi}/java/util/SortedSet.html[`SortedSet<T>`], where `T` satisfies any above criterion."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1382
msgid "The following example illustrates all those possibilities:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1390
#, no-wrap
msgid ""
"import java.lang.annotation.Annotation;\n"
"import java.lang.reflect.Type;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1396
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.ext.ParamConverter;\n"
"import javax.ws.rs.ext.ParamConverterProvider;\n"
"import javax.ws.rs.ext.Provider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1398
#, no-wrap
msgid "import org.jboss.resteasy.reactive.RestQuery;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1401
#, no-wrap
msgid ""
"@Provider\n"
"class MyConverterProvider implements ParamConverterProvider {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1411
#, no-wrap
msgid ""
"    @Override\n"
"    public <T> ParamConverter<T> getConverter(Class<T> rawType, Type genericType,\n"
"                                              Annotation[] annotations) {\n"
"        // declare a converter for this type\n"
"        if(rawType == Converter.class) {\n"
"            return (ParamConverter<T>) new MyConverter();\n"
"        }\n"
"        return null;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1416
#, no-wrap
msgid ""
"// this is my custom converter\n"
"class MyConverter implements ParamConverter<Converter> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1421
#, no-wrap
msgid ""
"    @Override\n"
"    public Converter fromString(String value) {\n"
"        return new Converter(value);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1426
#, no-wrap
msgid ""
"    @Override\n"
"    public String toString(Converter value) {\n"
"        return value.value;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1436
#, no-wrap
msgid ""
"// this uses a converter\n"
"class Converter {\n"
"    String value;\n"
"    Converter(String value) {\n"
"        this.value = value;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1444
#, no-wrap
msgid ""
"class Constructor {\n"
"    String value;\n"
"    // this will use the constructor\n"
"    public Constructor(String value) {\n"
"        this.value = value;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1455
#, no-wrap
msgid ""
"class ValueOf {\n"
"    String value;\n"
"    private ValueOf(String value) {\n"
"        this.value = value;\n"
"    }\n"
"    // this will use the valueOf method\n"
"    public static ValueOf valueOf(String value) {\n"
"        return new ValueOf(value);\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1468
#, no-wrap
msgid ""
"    @Path(\"{converter}/{constructor}/{primitive}/{valueOf}\")\n"
"    @GET\n"
"    public String convertions(Converter converter, Constructor constructor,\n"
"                              int primitive, ValueOf valueOf, \n"
"                              @RestQuery List<Constructor> list){\n"
"        return converter + \"/\" + constructor + \"/\" + primitive \n"
"               + \"/\" + valueOf + \"/\" + list;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1470
#, no-wrap
msgid "Preconditions"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1474
msgid "https://tools.ietf.org/html/rfc7232[HTTP allows requests to be conditional], based on a number of conditions, such as:"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1476
msgid "Date of last resource modification"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1477
msgid "A resource tag, similar to a hash code of the resource to designate its state or version"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1480
msgid "Let's see how you can do conditional request validation using the link:{jaxrsapi}/javax/ws/rs/core/Request.html[`Request`] context object:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1489
#, no-wrap
msgid ""
"import java.time.Instant;\n"
"import java.time.temporal.ChronoUnit;\n"
"import java.time.temporal.TemporalUnit;\n"
"import java.util.Date;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1497
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.core.EntityTag;\n"
"import javax.ws.rs.core.Request;\n"
"import javax.ws.rs.core.Response;\n"
"import javax.ws.rs.core.Response.ResponseBuilder;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1500
#, no-wrap
msgid ""
"@Path(\"conditional\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1507
#, no-wrap
msgid ""
"    // It's important to keep our date on seconds because that's how it's sent to the\n"
"    // user in the Last-Modified header\n"
"    private Date date = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n"
"    private int version = 1;\n"
"    private EntityTag tag = new EntityTag(\"v1\");\n"
"    private String resource = \"Some resource\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1520
#, no-wrap
msgid ""
"    @GET\n"
"    public Response get(Request request){\n"
"        // first evaluate preconditions\n"
"        ResponseBuilder conditionalResponse = request.evaluatePreconditions(date, tag);\n"
"        if(conditionalResponse != null)\n"
"            return conditionalResponse.build();\n"
"        // preconditions are OK\n"
"        return Response.ok(resource)\n"
"                .lastModified(date)\n"
"                .tag(tag)\n"
"                .build();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1538
#, no-wrap
msgid ""
"    @PUT\n"
"    public Response put(Request request, String body){\n"
"        // first evaluate preconditions\n"
"        ResponseBuilder conditionalResponse = request.evaluatePreconditions(date, tag);\n"
"        if(conditionalResponse != null)\n"
"            return conditionalResponse.build();\n"
"        // preconditions are OK, we can update our resource\n"
"        resource = body;\n"
"        date = Date.from(Instant.now().truncatedTo(ChronoUnit.SECONDS));\n"
"        version++;\n"
"        tag = new EntityTag(\"v\" + version);\n"
"        return Response.ok(resource)\n"
"                .lastModified(date)\n"
"                .tag(tag)\n"
"                .build();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1541
msgid "When we call `GET /conditional` the first time, we will get this response:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1549
#, no-wrap
msgid ""
"HTTP/1.1 200 OK\n"
"Content-Type: text/plain;charset=UTF-8\n"
"ETag: \"v1\"\n"
"Last-Modified: Wed, 09 Dec 2020 16:10:19 GMT\n"
"Content-Length: 13\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1551
#, no-wrap
msgid "Some resource\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1554
msgid "So now if we want to check if we need to fetch a new version, we can make the following request:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1560
#, no-wrap
msgid ""
"GET /conditional HTTP/1.1\n"
"Host: localhost:8080\n"
"If-Modified-Since: Wed, 09 Dec 2020 16:10:19 GMT\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1563
msgid "And we would get the following response:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1567
#, no-wrap
msgid "HTTP/1.1 304 Not Modified\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1573
msgid "Because the resource has not been modified since that date. This saves on sending the resource, but can also help your users detect concurrent modification, for example, let's suppose that one client wants to update the resource, but another user has modified it since. You can follow the previous `GET` request with this update:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1582
#, no-wrap
msgid ""
"PUT /conditional HTTP/1.1\n"
"Host: localhost:8080\n"
"If-Unmodified-Since: Wed, 09 Dec 2020 16:25:43 GMT\n"
"If-Match: v1\n"
"Content-Length: 8\n"
"Content-Type: text/plain\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1584
#, no-wrap
msgid "newstuff\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1588
msgid "And if some other user has modified the resource between your `GET` and your `PUT` you would get this answer back:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1594
#, no-wrap
msgid ""
"HTTP/1.1 412 Precondition Failed\n"
"ETag: \"v2\"\n"
"Content-Length: 0\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1596
#, no-wrap
msgid "Negotiation"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1603
msgid "One of the main ideas of REST (https://tools.ietf.org/html/rfc7231#section-3.4[and HTTP]) is that your resource is independent from its representation, and that both the client and server are free to represent their resources in as many media types as they want. This allows the server to declare support for multiple representations and let the client declare which ones it supports and get served something appropriate."
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1605
msgid "The following endpoint supports serving cheese in plain text or JSON:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1616
#, no-wrap
msgid ""
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.PUT;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1618
#, no-wrap
msgid "import com.fasterxml.jackson.annotation.JsonCreator;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1630
#, no-wrap
msgid ""
"class FroMage {\n"
"    public String name;\n"
"    @JsonCreator\n"
"    public FroMage(String name) {\n"
"        this.name = name;\n"
"    }\n"
"    @Override\n"
"    public String toString() {\n"
"        return \"Cheese: \" + name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1633
#, no-wrap
msgid ""
"@Path(\"negotiated\")\n"
"public class Endpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1639
#, no-wrap
msgid ""
"    @Produces({MediaType.APPLICATION_JSON, MediaType.TEXT_PLAIN})\n"
"    @GET\n"
"    public FroMage get(){\n"
"        return new FroMage(\"Morbier\");\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1645
#, no-wrap
msgid ""
"    @Consumes(MediaType.TEXT_PLAIN)\n"
"    @PUT\n"
"    public FroMage putString(String cheese){\n"
"        return new FroMage(cheese);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1652
#, no-wrap
msgid ""
"    @Consumes(MediaType.APPLICATION_JSON)\n"
"    @PUT\n"
"    public FroMage putJson(FroMage fromage){\n"
"        return fromage;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1656
msgid "The user will be able to select which representation it gets with the link:{httpspec}#section-5.3.2[`Accept`] header, in the case of JSON:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1662
#, no-wrap
msgid ""
"> GET /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Accept: application/json\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1668
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json\n"
"< Content-Length: 18\n"
"< \n"
"< {\"name\":\"Morbier\"} \n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1671
msgid "And for text:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1683
#, no-wrap
msgid ""
"> GET /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Accept: text/plain\n"
"> \n"
"< HTTP/1.1 200 OK\n"
"< Content-Type: text/plain\n"
"< Content-Length: 15\n"
"< \n"
"< Cheese: Morbier \n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1686
msgid "Similarly, you can `PUT` two different representations. JSON:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1695
#, no-wrap
msgid ""
"> PUT /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Content-Type: application/json\n"
"> Content-Length: 16\n"
"> \n"
"> {\"name\": \"brie\"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1701
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json;charset=UTF-8\n"
"< Content-Length: 15\n"
"< \n"
"< {\"name\":\"brie\"} \n"
msgstr ""

#. type: Plain text
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1704
msgid "Or plain text:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1713
#, no-wrap
msgid ""
"> PUT /negotiated HTTP/1.1\n"
"> Host: localhost:8080\n"
"> Content-Type: text/plain\n"
"> Content-Length: 9\n"
">\n"
"> roquefort\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/1.11/guides/resteasy-reactive.adoc:1719
#, no-wrap
msgid ""
"< HTTP/1.1 200 OK\n"
"< Content-Type: application/json;charset=UTF-8\n"
"< Content-Length: 20\n"
"< \n"
"< {\"name\":\"roquefort\"} \n"
msgstr ""
