msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Redis Extension Reference Guide"
msgstr "Redis 扩展参考指南"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Redis is an in-memory data store used as a database, cache, streaming engine, and message broker.\n"
"The Quarkus Redis extension allows integrating Quarkus applications with Redis."
msgstr "Redis 是一种内存数据存储，可用作数据库、缓存、流引擎和消息代理。Quarkus Redis 扩展允许将 Quarkus 应用程序与 Redis 集成。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"To use this extension, the user must be familiar with Redis, especially understanding the mechanism of commands and how they are organized.\n"
"Typically, we recommend:"
msgstr "要使用该扩展，用户必须熟悉 Redis，尤其是了解命令机制及其组织方式。通常情况下，我们建议"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The https://try.redis.io/[interactive tutorial] introducing Redis."
msgstr "介绍 Redis 的 link:https://try.redis.io/[互动教程] 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The https://redis.io/commands/[command references] explains Redis commands and contains links to reference documentation."
msgstr "link:https://redis.io/commands/[命令参考] 解释了 Redis link:https://redis.io/commands/[命令] ，并包含指向参考文档的链接。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "This extension provides imperative and reactive APIs and low-level and high-level (type-safe) clients."
msgstr "该扩展提供了命令式和反应式应用程序接口，以及低级和高级（类型安全）客户端。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use the Redis Client"
msgstr "使用 Redis 客户端"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"If you want to use this extension, you need to add the `io.quarkus:quarkus-redis` extension first.\n"
"In your `pom.xml` file, add:"
msgstr "如果要使用该扩展名，需要先添加 `io.quarkus:quarkus-redis` 扩展名。在 `pom.xml` 文件中，添加"

#: _versions/3.8/guides/redis-reference.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.8/guides/redis-reference.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "With this dependency, you can then inject Redis clients or _datasource_ (high-level, type-safe API), such as:"
msgstr "有了这种依赖关系，您就可以注入 Redis 客户端或 _数据源_ （高级、类型安全的 API），例如"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "More details about the various APIs offered by the quarkus-redis extension are available in the <<apis>> section."
msgstr "有关 quarkus-redis 扩展提供的各种应用程序接口的更多详情，请参阅 <<apis>> 部分。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "To use Redis as a cache backend, refer to the xref:cache-redis-reference.adoc[Redis Cache Backend reference]."
msgstr "要将 Redis 用作缓存后端，请参阅 xref:cache-redis-reference.adoc[Redis 缓存后端参考资料] 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "One extension, multiple APIs"
msgstr "一个扩展，多个应用程序接口"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "This extension provides multiple ways to interact with Redis:"
msgstr "该扩展提供了与 Redis 交互的多种方式："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"the _low-level_ Vert.x client: it's a fully reactive, non-blocking, and asynchronous client.\n"
"More details on https://vertx.io/docs/vertx-redis-client/java/[the Vert.x Redis Client documentation].\n"
"Two APIs are exposed: `io.vertx.redis.client.Redis`, and `io.vertx.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr "的 _底层_ Vert.x 客户端：它是一个完全反应式、非阻塞和异步的客户端。更多详情请查看 link:https://vertx.io/docs/vertx-redis-client/java/[Vert.x Redis 客户端文档] 。有两个应用程序接口： `io.vertx.redis.client.Redis` `io.vertx.redis.client.RedisAPI` 您一般会使用后者，除非您需要自己管理连接。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"the _low-level_ Mutiny variant of the Vert.x API: Unlike the previous one, it exposes a Mutiny API and provides both reactive and imperative methods (suffixed with `andAwait()`).\n"
"Two APIs are exposed: `io.vertx.mutiny.redis.client.Redis` and `io.vertx.mutiny.redis.client.RedisAPI`.\n"
"You will generally use the latter, except if you need to manage connections yourself."
msgstr "是 Vert.x API 的 _底层_ Mutiny 变体：与前一个不同，它公开了一个 Mutiny API，同时提供反应式和命令式方法（后缀为 `andAwait()` ）。它公开了两个 API： `io.vertx.mutiny.redis.client.Redis` 和 `io.vertx.mutiny.redis.client.RedisAPI` 。除了需要自己管理连接外，一般都会使用后者。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"a _high-level_ reactive data source: A type-safe, high-level API to interact with Redis.\n"
"This API is fully reactive and asynchronous.\n"
"It exposes a Mutiny API.\n"
"It exposes the `io.quarkus.redis.datasource.ReactiveRedisDataSource` interface."
msgstr "Redis 是一种 _高级_ 反应式数据源：与 Redis 交互的类型安全、高级 API。该 API 是完全反应式和异步的。它公开了 Mutiny API。它提供 `io.quarkus.redis.datasource.ReactiveRedisDataSource` 接口。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"a _high-level_ imperative data source: A type-safe, high-level API to interact with Redis.\n"
"It is the imperative variant of the reactive data source.\n"
"It exposes the `io.quarkus.redis.datasource.RedisDataSource` interface."
msgstr "_高级_ 命令式数据源：与 Redis 交互的类型安全的高级应用程序接口。它是反应式数据源的命令式变体。它公开了 `io.quarkus.redis.datasource.RedisDataSource` 接口。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "To help you select the suitable API for you, here are some recommendations:"
msgstr "为了帮助您选择适合自己的 API，以下是一些建议："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "If you are building an imperative (_classic_) Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.RedisDataSource`."
msgstr "如果你正在构建一个与 Redis 集成的命令式 _（经典_ ）Quarkus 应用程序：使用 `io.quarkus.redis.datasource.RedisDataSource` 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "If you are building a reactive Quarkus application integrating with Redis: use `io.quarkus.redis.datasource.ReactiveRedisDataSource`."
msgstr "如果你正在构建一个与 Redis 集成的反应式 Quarkus 应用程序：使用 `io.quarkus.redis.datasource.ReactiveRedisDataSource` 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "If you need fine-grain control, or execute commands in a generic way: use `io.vertx.mutiny.redis.client.RedisAPI`"
msgstr "如果需要细粒度控制，或以通用方式执行命令：使用 `io.vertx.mutiny.redis.client.RedisAPI`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "If you have existing Vert.x code, use `io.vertx.redis.client.RedisAPI`"
msgstr "如果您已有 Vert.x 代码，请使用 `io.vertx.redis.client.RedisAPI`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "If you need to emit custom commands, you can either use the data sources (reactive or imperative) or the `io.vertx.mutiny.redis.client.Redis`."
msgstr "如果需要执行自定义命令，可以使用数据源（反应式或命令式）或 `io.vertx.mutiny.redis.client.Redis` .NET Framework。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "[[inject-the-default-and-named-clients]] Inject the default and named clients"
msgstr " 注入默认客户端和已命名客户端"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"This extension lets you configure a _default_ Redis client/data sources or _named_ ones.\n"
"The latter is essential when you need to connect to multiple Redis instances."
msgstr "该扩展可让你配置 _默认_ Redis 客户端/数据源或 _已命名的_ 客户端/数据源。当你需要连接多个 Redis 实例时，后者至关重要。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The default connection is configured using the `quarkus.redis.*` properties.\n"
"For example, to configure the default Redis client, use:"
msgstr "默认连接通过 `quarkus.redis.*` 属性进行配置。例如，要配置默认 Redis 客户端，请使用"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "When using the default connection, you can inject the various APIS using a _plain_ `@Inject`:"
msgstr "使用默认连接时，您可以使用 _普通_ `@Inject` 注入各种 APIS："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "In general, you inject a single one; the previous snippet is just an example."
msgstr "一般来说，您只需注入一个；前面的片段只是一个例子。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "_Named_ clients are configured using the `quarkus.redis.<name>.*` properties:"
msgstr "_命名_ 客户端使用 `quarkus.redis.<name>.*` 属性进行配置："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "To access the APIs, you need to use the `@RedisClientName` qualifier:"
msgstr "要访问 API，需要使用 `@RedisClientName` 限定符："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "You can omit the `@Inject` annotation when using `@RedisClientName`."
msgstr "使用 `@RedisClientName` 时，可以省略 `@Inject` 注释。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Connect to the Redis server"
msgstr "连接 Redis 服务器"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The Redis extension can operate in 4 distinct modes:"
msgstr "Redis 扩展可在 4 种不同模式下运行："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Simple client (probably what most users need)."
msgstr "简单的客户端（可能是大多数用户需要的）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Sentinel (when working with Redis in High Availability mode)."
msgstr "哨兵（在高可用性模式下使用 Redis 时）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Cluster (when working with Redis in Clustered mode)."
msgstr "集群（在集群模式下使用 Redis 时）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Replication (single shard, one node write, multiple read)."
msgstr "复制（单分片、单节点写入、多节点读取）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The connection url is configured with the `quarkus.redis.hosts` (or `quarkus.redis.<name>.hosts`) as follows:"
msgstr "连接 url 通过 `quarkus.redis.hosts` （或 `quarkus.redis.<name>.hosts` ）配置如下："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use Unix Socket"
msgstr "使用 Unix Socket"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "When using unix-socket, you need:"
msgstr "使用 unix-socket 时，您需要"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use the Sentinel Mode"
msgstr "使用哨兵模式"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "When using Sentinel, you need to pass multiple _host urls_ and configure the client type to `sentinel`:"
msgstr "使用哨兵时，需要传递多个 _主机 URL_ 并将客户端类型配置为 `sentinel` ："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The host URLs here must be the sentinel servers.\n"
"The client will obtain the URLs of actual Redis servers (master or replicas, depending on `role`) from one of the sentinels, using the `master-name` as an identifier of the \"master set\"."
msgstr "此处的主机 URL 必须是哨兵服务器。客户端将从其中一个哨兵服务器获取实际 Redis 服务器（主服务器或副本服务器，取决于 `role` ）的 URL，并使用 `master-name` 作为 \"主服务器集 \"的标识符。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Note that you practically never want to configure `quarkus.redis.role=sentinel`.\n"
"This setting means that the Redis client will execute commands directly on one of the sentinel servers, instead of an actual Redis server guarded by the sentinels."
msgstr "请注意，你实际上永远不会希望配置 `quarkus.redis.role=sentinel` 。这一设置意味着 Redis 客户端将直接在其中一个哨兵服务器上执行命令，而不是在由哨兵守护的实际 Redis 服务器上执行命令。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use the Cluster Mode"
msgstr "使用群集模式"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "When using Redis in cluster mode, you need to pass multiple _host urls_, configure the client type to `cluster` and configure the `replicas` mode:"
msgstr "在集群模式下使用 Redis 时，需要传递多个 _主机网址_ ，将客户端类型配置为 `cluster` ，并配置 `replicas` 模式："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The host URLs here must be some of the cluster members.\n"
"Not all cluster members need to be configured, as the client will obtain a full cluster topology from one of the known servers.\n"
"However, it is advisable to configure at least 2 or 3 nodes, not just 1."
msgstr "此处的主机 URL 必须是某些群集成员。并不需要配置所有群集成员，因为客户端将从其中一个已知服务器获取完整的群集拓扑。不过，建议至少配置 2 或 3 个节点，而不仅仅是 1 个。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use the replication Mode"
msgstr "使用复制模式"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "When using the replication mode, you need to pass a single host url and configure the type to be `replication`:"
msgstr "使用复制模式时，需要传递单个主机网址，并将类型配置为 `replication` ："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Connect to Redis Cloud"
msgstr "连接到 Redis 云"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "To connect to redis cloud, you need the following properties:"
msgstr "要连接到 redis 云，需要以下属性："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use TLS"
msgstr "使用 TLS"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "To use TLS, you need to:"
msgstr "要使用 TLS，您需要"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Set the `quarkus.redis.tls.enabled=true` property"
msgstr "设置 `quarkus.redis.tls.enabled=true` 属性"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Make sure that your URL starts with `rediss://` (with two `s`)"
msgstr "确保您的 URL 以 `rediss://` 开头（有两个 `s` )"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The default hostname verifier is set to `NONE`, meaning it does not verify the host name. You can change this behavior by setting the `quarkus.redis.tls.hostname-verification-algorithm` property, to `HTTPS` for example."
msgstr "默认主机名校验器设置为 `NONE` ，这意味着它不会校验主机名。您可以通过将 `quarkus.redis.tls.hostname-verification-algorithm` 属性设置为 `HTTPS` 来改变这种行为。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Configure the authentication"
msgstr "配置身份验证"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The Redis password can be set in the `redis://` URL or with the `quarkus.redis.password` property.\n"
"We recommend the latter, and if possible, using secrets or an environment variable to configure the password."
msgstr "Redis 密码可在 `redis://` URL 或 `quarkus.redis.password` 属性中设置。我们建议使用后者，并尽可能使用秘密或环境变量来配置密码。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The associated environment variable is `QUARKUS_REDIS_PASSWORD`, or `QUARKUS_REDIS_<NAME>_PASSWORD` for named clients."
msgstr "相关的环境变量为 `QUARKUS_REDIS_PASSWORD` ，命名客户端为 `QUARKUS_REDIS_<NAME>_PASSWORD` 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Connection pooling"
msgstr "连接池"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Connections to Redis are always pooled.\n"
"By default, maximum number of connections in the pool is 6.\n"
"This can be configured using `quarkus.redis.max-pool-size`."
msgstr "与 Redis 的连接始终是池连接。默认情况下，池中的最大连接数为 6。可以使用 `quarkus.redis.max-pool-size` 进行配置。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"When the connection pool is depleted, attempts to obtain a connection are put into a queue.\n"
"By default, maximum number of attempts waiting in the queue to obtain a Redis connection is 24.\n"
"This can be configured using `quarkus.redis.max-pool-waiting`."
msgstr "当连接池耗尽时，获取连接的尝试会被放入队列。默认情况下，在队列中等待获取 Redis 连接的尝试次数最多为 24 次。可以使用 `quarkus.redis.max-pool-waiting` 进行配置。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Executing certain commands modifies the server-side state and the behavior of the connection.\n"
"Such connections cannot be reused and when closed, they are not put back into the pool; instead, they are truly closed.\n"
"The commands that cause this behavior are:"
msgstr "执行某些命令会修改服务器端状态和连接行为。此类连接不能重复使用，关闭时也不会放回连接池，而是真正关闭。导致这种行为的命令有"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "subscription commands (`SUBSCRIBE`, `UNSUBSCRIBE` etc.)"
msgstr "订阅命令 ( `SUBSCRIBE` , `UNSUBSCRIBE` 等 )"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`SELECT`"
msgstr "`SELECT`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`AUTH`"
msgstr "`AUTH`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use Redis data sources"
msgstr "使用 Redis 数据源"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Quarkus exposes a high-level API on top of Redis.\n"
"This API is type-safe and structured around the notion of _group_, inherited from the https://redis.io/commands/command-docs/[Redis command organization].\n"
"This API lets you execute Redis commands more conveniently and safely."
msgstr "Quarkus 在 Redis 的基础上提供了一个高级应用程序接口。该应用程序接口是类型安全的，围绕着 _组的_ 概念构建，继承自 link:https://redis.io/commands/command-docs/[Redis 命令组织] 。通过该 API，你可以更方便、更安全地执行 Redis 命令。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Inject data sources"
msgstr "注入数据源"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "For each configured Redis client, two Redis data sources are exposed:"
msgstr "对于每个已配置的 Redis 客户端，都会暴露两个 Redis 数据源："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"`io.quarkus.redis.datasource.RedisDataSource` - an imperative (blocking) Redis data source.\n"
"Each operation blocks until a response is received or a timeout is reached"
msgstr "`io.quarkus.redis.datasource.RedisDataSource` - 一个命令式（阻塞）Redis 数据源。每个操作都会阻塞，直到收到响应或超时为止"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`io.quarkus.redis.datasource.ReactiveRedisDataSource` - a reactive Redis data source returning `Uni<X>` or `Multi<X>`."
msgstr "`io.quarkus.redis.datasource.ReactiveRedisDataSource` - 返回 或 的反应式 Redis 数据源。 `Uni<X>` `Multi<X>`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "If you configured the _default_ Redis client, you could inject the data sources using:"
msgstr "如果配置了 _默认_ Redis 客户端，则可以使用"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "If you configured a _named_ Redis client, you need to use the `io.quarkus.redis.RedisClientName` qualifier to select the right client:"
msgstr "如果配置了已 _命名的_ Redis 客户端，则需要使用 `io.quarkus.redis.RedisClientName` 限定符来选择正确的客户端："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "When using the _blocking_ variant, you can configure the default timeout with:"
msgstr "使用 _阻塞_ 变体时，可以使用以下命令配置默认超时："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The default timeout is configured to 10s."
msgstr "默认超时配置为 10 秒。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "All about delegation"
msgstr "关于授权"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The blocking data source (`io.quarkus.redis.datasource.RedisDataSource`) is implemented on top of the reactive one (`io.quarkus.redis.datasource.ReactiveRedisDataSource`).\n"
"The `ReactiveRedisDataSource` is implemented on top of the `io.vertx.mutiny.redis.Redis` API."
msgstr "阻塞式数据源 ( `io.quarkus.redis.datasource.RedisDataSource` ) 是在反应式数据源 ( `io.quarkus.redis.datasource.ReactiveRedisDataSource` ) 的基础上实现的。 `ReactiveRedisDataSource` 是在 `io.vertx.mutiny.redis.Redis` API 的基础上实现的。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Data Source groups"
msgstr "数据源组"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "As mentioned above, the API is divided into groups:"
msgstr "如上所述，应用程序接口分为若干组："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "bitmap - `.bitmap()`"
msgstr "位图 - `.bitmap()`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "key (generic) - `.key()`"
msgstr "键（通用） - `.key()`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "geo - `.geo(memberType)`"
msgstr "地理 - `.geo(memberType)`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "hash - `.hash(`valueType)`"
msgstr "散列 `.hash(`valueType)`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "hyperloglog - `.hyperloglog(memberType)`"
msgstr "超级日志 `.hyperloglog(memberType)`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "list - `.list(memberType)`"
msgstr "列表 `.list(memberType)`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "pubsub - `pubsub()`"
msgstr "pubsub - `pubsub()`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "set - `.set(memberType)`"
msgstr "设置-- `.set(memberType)`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "sorted-set - `.sortedSet(memberType)`"
msgstr "排序集 - `.sortedSet(memberType)`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "string - `.value(valueType)`"
msgstr "字符串 `.value(valueType)`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "stream - `.stream(`valueType`)"
msgstr "stream - `.stream(`valueType` )"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "transactions - `withTransaction`"
msgstr "交易 `withTransaction`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "json - `.json()` (requires the https://redis.com/modules/redis-json/[RedisJSON] module on the server side)"
msgstr "json - `.json()` （需要服务器端的 link:https://redis.com/modules/redis-json/[RedisJSON] 模块）"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "bloom - `.bloom()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side)"
msgstr "bloom - `.bloom()` （需要服务器端的 link:https://redis.com/modules/redis-bloom/[RedisBloom] 模块）"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "cuckoo - `.cuckoo()` (requires the https://redis.com/modules/redis-bloom/[rRedisBloom] module on the server side, which also provides the cuckoo filter commands)"
msgstr "cuckoo - `.cuckoo()` （需要服务器端的 link:https://redis.com/modules/redis-bloom/[rRedisBloom] 模块，该模块还提供 cuckoo 过滤命令）"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "count-min - `.countmin()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side, which also provides the count-min filter commands)"
msgstr "count-min - `.countmin()` （需要服务器端的 link:https://redis.com/modules/redis-bloom/[RedisBloom] 模块，该模块还提供 count-min 过滤命令）"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "top-k - `.topk()` (requires the https://redis.com/modules/redis-bloom/[RedisBloom] module on the server side, which also provides the top-k filter commands)"
msgstr "top-k - `.topk()` （需要服务器端的 link:https://redis.com/modules/redis-bloom/[RedisBloom] 模块，该模块也提供 top-k 过滤命令）"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"graph - `.graph()` (requires the https://redis.com/modules/redis-graph/[RedisGraph] module on the server side).\n"
"These commands are marked as experimental.\n"
"Also the module has been declared _end of life_ by https://redis.com/blog/redisgraph-eol/[Redis]."
msgstr "graph - `.graph()` （需要服务器端的 link:https://redis.com/modules/redis-graph/[RedisGraph] 模块）。这些命令被标记为实验性命令。此外， link:https://redis.com/blog/redisgraph-eol/[Redis] 已宣布该模块 _报废_ 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "search - `.search()` (requires the https://redis.com/modules/redis-search/[RedisSearch] module on the server side)."
msgstr "search - `.search()` （需要服务器端的 link:https://redis.com/modules/redis-search/[RedisSearch] 模块）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "auto-suggest - `.autosuggest()` (requires the https://redis.com/modules/redis-search/[RedisSearch] module on the server side)."
msgstr "auto-suggest - `.autosuggest()` （需要服务器端的 link:https://redis.com/modules/redis-search/[RedisSearch] 模块）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "time-series - `.timeseries()` (requires the https://redis.com/modules/redis-timeseries/[Redis Time Series] module on the server side)."
msgstr "time-series - `.timeseries()` （需要服务器端的 link:https://redis.com/modules/redis-timeseries/[Redis 时间序列] 模块）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "These commands are marked as experimental, as we would need feedback before making them stable."
msgstr "这些命令被标记为实验性的，因为我们需要反馈意见才能使其稳定。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Each of these methods returns an object that lets you execute the commands related to the group.\n"
"The following snippet demonstrates how to use the _hash_ group:"
msgstr "每个方法都会返回一个对象，让你执行与组相关的命令。下面的代码段演示了如何使用 _哈希_ 分组："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Inject the `RedisDataSource` in the constructor"
msgstr "在构造函数中注入 `RedisDataSource` "

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Creates the `HashCommands` object.\n"
"This object has three type parameters: the type of the key, the type of the field, and the type of the member"
msgstr "创建 `HashCommands` 对象。该对象有三个类型参数：键的类型、字段的类型和成员的类型"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use the created `commands` to associate the field `field` with the value `value`"
msgstr "使用创建的 `commands` 将字段 `field` 与值相关联 `value`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use the created `commands` to retrieve the field `field` value."
msgstr "使用创建的 `commands` 来检索字段 `field` 的值。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Serializing and Deserializing data"
msgstr "数据序列化和反序列化"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The data source APIs handle the serialization and deserialization automatically.\n"
"By default, non-standard types are serialized into JSON and deserialized from JSON.\n"
"In this case, `quarkus-jackson` is used."
msgstr "数据源 API 会自动处理序列化和反序列化。默认情况下，非标准类型被序列化为 JSON 并从 JSON 反序列化。在这种情况下， `quarkus-jackson` 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Binary"
msgstr "二进制"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "To store or retrieve binary data, use `byte[]`."
msgstr "要存储或检索二进制数据，请使用 `byte[]` 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Custom codec"
msgstr "自定义编解码器"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "You can register custom codec by providing a CDI _bean_ implementing the `io.quarkus.redis.datasource.codecs.Codec` interface:"
msgstr "您可以通过提供一个实现 `io.quarkus.redis.datasource.codecs.Codec` 接口的 CDI _Bean_ 来注册自定义编解码器："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The `canHandle` method is called to check if the codec can handle a specific type.\n"
"The parameter received in the `encode` method matches that type.\n"
"The object returned by the `decode` method must also match that type."
msgstr "调用 `canHandle` 方法是为了检查编解码器是否能处理特定类型。 `encode` 方法接收的参数与该类型匹配。 `decode` 方法返回的对象也必须符合该类型。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use type reference"
msgstr "使用类型参考"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Each group can be configured with `Class`, or with `TypeReference` objects.\n"
"`TypeReference` are useful when dealing with Java generics:"
msgstr "`Class` `TypeReference` `TypeReference` 在处理 Java 泛型时非常有用："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "You cannot use type references when using transaction. This is a known limitation."
msgstr "使用事务时不能使用类型引用。这是一个已知的限制。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Manipulate cached and binary data with the `value` group"
msgstr "使用 `value` 组操作缓存数据和二进制数据"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The `value` group is used to manipulate https://redis.io/docs/manual/data-types/#strings[Redis Strings].\n"
"Thus, this group is not limited to Java Strings but can be used for integers (like a counter) or binary content (like images)."
msgstr "`value` 组用于操作 link:https://redis.io/docs/manual/data-types/#strings[Redis 字符串] 。因此，该组不仅限于 Java 字符串，还可用于整数（如计数器）或二进制内容（如图像）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Work with cached values"
msgstr "处理缓存值"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"You can use Redis as a cache using the `setex` command, which stores a given value to a given key for a given duration.\n"
"The following snippet shows how such a command can be used to store `BusinessObject` for 1 second."
msgstr "您可以使用 `setex` 命令将 Redis 用作缓存，该命令会在给定时间内将给定值存储到给定键中。下面的代码段展示了如何使用该命令将 `BusinessObject` 存储 1 秒钟。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "You can use the `setnx` method only to set the value if no value has been stored for the given key."
msgstr "只有在给定键没有存储值的情况下，才能使用 `setnx` 方法设置值。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The `key` group provides more fine-grain control on expiration and ttl of each key."
msgstr "`key` 组可对每个密钥的过期时间和 ttl 进行更精细的控制。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The `set` method can also receive a `SetArgs` argument that modify the behavior:"
msgstr "`set` 方法还可以接收一个 `SetArgs` 参数来修改行为："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`ex(seconds)` - Set the specified expire time, in seconds."
msgstr "`ex(seconds)` - 设置指定的过期时间（秒）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`px(milliseconds)` - Set the specified expire time, in milliseconds."
msgstr "`px(milliseconds)` - 设置指定的过期时间（毫秒）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`exat(timestamp-seconds)` - Set the specified Unix time at which the key will expire, in seconds."
msgstr "`exat(timestamp-seconds)` - 设置密钥过期的指定 Unix 时间（秒）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`pxat(timestamp-milliseconds)` - Set the specified Unix time at which the key will expire, in milliseconds."
msgstr "`pxat(timestamp-milliseconds)` - 设置密钥过期的指定 Unix 时间（毫秒）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`nx()` - Only set the key if it does not already exist."
msgstr "`nx()` - 只有当密钥不存在时才设置它。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`xx()` - Only set the key if it already exists."
msgstr "`xx()` - 只有在密钥已经存在的情况下才会设置它。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`keepttl()` - Retain the time to live associated with the key."
msgstr "`keepttl()` - 保留与密钥相关的存活时间。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Store binary data"
msgstr "存储二进制数据"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Redis _strings_ can be used to store binary data, such as images.\n"
"In this case, we will use `byte[]` as value type:"
msgstr "Redis _字符串_ 可用于存储二进制数据，如图像。在这种情况下，我们将使用 `byte[]` 作为值类型："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Store a counter"
msgstr "存储计数器"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "You can store counters in Redis as demonstrated below:"
msgstr "您可以将计数器存储在 Redis 中，如下图所示："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Retrieve the commands.\n"
"This time we will manipulate `Long` values"
msgstr "检索命令。这次我们将操作 `Long` 值"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Retrieve the counter associated with the given `key`.\n"
"Return `0L` when no counter is stored."
msgstr "读取与给定 `key` 相关的计数器。如果没有存储计数器，则返回 `0L` 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Increment the value.\n"
"If there are no counter stored for the key, the `incr` command considers 0 as value (so `incr` sets the value to 1)."
msgstr "递增值。如果键没有存储计数器， `incr` 命令会将 0 视为值（因此 `incr` 将值设为 1）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "There are other methods that can be useful to manipulate counters, such as:"
msgstr "还有其他一些方法可以用来操作计数器，例如"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`incrby` - allows setting the increment value (positive or negative)"
msgstr "`incrby` - 允许设置增量值（正值或负值）"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`incrbyfloat` - allows setting the increment value as a float/ double (the stored value will be a double)"
msgstr "`incrbyfloat` - 允许将增量值设置为浮点/双（存储的值将是双）"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`set` - to set an initial value if needed"
msgstr "`set` - 根据需要设置初始值"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`decr` and `decrby` - allows decrementing the stored value"
msgstr "`decr` 和 - 允许递减存储值 `decrby` "

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Communicate with pub/sub"
msgstr "与出版商/分包商沟通"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Redis allows sending _messages_ to channels and listening for these messages.\n"
"These features are available from the `pubsub` group."
msgstr "Redis 允许向通道发送 _消息_ 并监听这些消息。这些功能可从 `pubsub` 组获得。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The following snippets shows how a _cache_ can emit a `Notification` after every `set`, and how a subscriber can receive the notification."
msgstr "以下片段展示了 _缓存_ 如何在每次 `set` 后发出 `Notification` ，以及订阅者如何接收通知。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use Redis transactions"
msgstr "使用 Redis 事务"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Redis transactions are slightly different from relational database transactions.\n"
"Redis transactions are a batch of commands executed altogether."
msgstr "Redis 事务与关系数据库事务略有不同。Redis 事务是一起执行的一批命令。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "A Redis transaction can _watch_ a set of keys, which would _discard_ the transaction is one of these keys are updated during the transaction execution."
msgstr "Redis 事务可以 _监视_ 一组键，如果其中一个键在事务执行过程中被更新，该事务就会 _丢弃_ 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Commands enqueued in a transaction are not executed before the whole transaction is executed.\n"
"It means that you cannot retrieve a result during the transaction.\n"
"Results are accumulated in a `TransactionResult` object you will access after the completion of the transaction.\n"
"This object contains whether the transaction succeeded or was discarded, and in the former case the result of each command (indexed by the command order)."
msgstr "在整个事务执行之前，事务中排队的命令不会被执行。这意味着在事务执行期间无法获取结果。结果会累积到一个 `TransactionResult` 对象中，您可以在事务完成后访问该对象。该对象包含事务是否成功或被丢弃，以及在前一种情况下每条命令的结果（按命令顺序索引）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"To start a transaction, you use the `withTransaction` method.\n"
"This method receives a `Consumer<TransactionalRedisDataSource>`, which follows the same API as the regular `RedisDataSource` except that the commands return `void` (`Uni<Void>` for the reactive variant).\n"
"When that consumer returns, the transaction is _executed_."
msgstr "要启动事务，需要使用 `withTransaction` 方法。该方法接收一个 `Consumer<TransactionalRedisDataSource>` ，其 API 与常规的 `RedisDataSource` 相同，只是命令返回 `void` （反应式变体为 `Uni<Void>` ）。消费者返回后，事务即被 _执行_ 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The following snippet shows how to create a transaction executing two related _writes_:"
msgstr "下面的代码段展示了如何创建一个事务来执行两个相关的 _写_ 操作："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The received `tx` object can also be used to _discard_ the transaction, using: `tx.discard();`.\n"
"The returned `TransactionResult` lets you retrieve the result of each command."
msgstr "收到的 `tx` 对象也可用于 _放弃_ 事务，使用： `tx.discard();` 。通过返回的 `TransactionResult` ，可以检索每条命令的结果。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "When using the reactive variant of the data source, the passed callback is a `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>`:"
msgstr "使用数据源的反应式变体时，传递的回调是 `Function<ReactiveTransactionalRedisDataSource, Uni<Void>>` ："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Transaction execution can be conditioned by _keys_.\n"
"When a passed key gets modified during the execution of a transaction, the transaction is discarded.\n"
"The keys are passed as `String` as a second parameter to the `withTransaction` method:"
msgstr "事务的执行可以 _由键_ 来决定。在事务执行过程中，当传递的键被修改时，事务将被丢弃。键作为 `String` 的第二个参数传递给 `withTransaction` 方法："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "You cannot use the pub/sub feature from within a transaction."
msgstr "不能在事务中使用发布/子功能。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Implement the optimistic locking pattern"
msgstr "实施乐观锁定模式"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"To use optimistic locking, you need to use a variant of the `withTransaction` method, allowing the execution of code before the transaction starts.\n"
"In other words, it will be executed as follows:"
msgstr "要使用乐观锁定，需要使用 `withTransaction` 方法的变体，允许在事务开始前执行代码。换句话说，它的执行过程如下："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "For example, if you need to update a value in a hash only if the field exists, you will use the following API:"
msgstr "例如，如果只需要在字段存在的情况下更新哈希值，则需要使用以下 API："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"If one of the watched keys is touched before or during the execution of the pre-transaction or transactional blocks, the transaction is aborted.\n"
"The pre-transactional block produces a result that the transactional block can use.\n"
"This construct is necessary because, within a transaction, the commands do not produce a result.\n"
"Results can only be retrieved after the execution of the transaction."
msgstr "如果在执行前事务块或事务块之前或期间触碰了其中一个被监视的按键，事务就会中止。预事务块产生的结果可以被事务块使用。这种结构是必要的，因为在事务中，命令不会产生结果。只有在执行事务后才能检索结果。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The pre-transaction and transactional blocks are invoked on the same Redis connection.\n"
"Consequently, the pre-transaction block must use the passed data source to execute commands.\n"
"Thus, the commands are emitted from that connection.\n"
"These commands must not modify the watched keys."
msgstr "预事务块和事务块在同一个 Redis 连接上调用。因此，预事务块必须使用传递的数据源来执行命令。因此，命令是从该连接发出的。这些命令不得修改监视键。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The transaction is aborted if the pre-transaction block throws an exception (or produces a failure when using the reactive API)."
msgstr "如果预事务块抛出异常（或在使用反应式 API 时产生故障），事务就会中止。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Execute custom commands"
msgstr "执行自定义命令"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "To execute a custom command, or a command not supported by the API, use the following approach:"
msgstr "要执行自定义命令或 API 不支持的命令，请使用以下方法："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The `execute` method sends the command to Redis and retrieves the `Response`.\n"
"The command name is passed as first parameters.\n"
"You can add an arbitrary number of **String** parameters to your command.\n"
"The result is wrapped into a `Response` object."
msgstr "`execute` 方法将命令发送到 Redis 并检索 `Response` 。命令名称作为第一个参数传递。您可以为命令添加任意数量的 *字符串* 参数。结果会封装成一个 `Response` 对象。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The reactive variant returns a `Uni<Response>`."
msgstr "被动变体返回 `Uni<Response>` 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "You can also execute custom command in a transaction."
msgstr "您还可以在事务中执行自定义命令。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Preload data into Redis"
msgstr "将数据预加载到 Redis"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "On startup, you can configure the Redis client to preload data into the Redis database."
msgstr "启动时，可以配置 Redis 客户端将数据预加载到 Redis 数据库中。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Configure the load scripts"
msgstr "配置加载脚本"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Specify the _load script_ you want to load using:"
msgstr "指定要加载的加 _载脚本_ ："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "`load-script` is a build time property than cannot be overridden at runtime."
msgstr "`load-script` 是一个构建时属性，不能在运行时重载。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Note that each client can have a different script, even a list of scripts.\n"
"In the case of a list, the data is imported in the list order (for example, first `actors.redis`, then `movies.redis` for the `my-redis` client)."
msgstr "请注意，每个客户端可以有不同的脚本，甚至是脚本列表。如果是列表，则按列表顺序导入数据（例如，先导入 `actors.redis` ，然后导入 `my-redis` 客户端的 `movies.redis` ）。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Write load scripts"
msgstr "编写加载脚本"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The `.redis` file follows a _one command per line_ format:"
msgstr "`.redis` 文件采用 _每行一条命令_ 的格式："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Quarkus batches all the commands from a single file and sends all the commands.\n"
"The loading process fails if there is any error, but the previous instructions may have been executed.\n"
"To avoid that, you can wrap your command into a Redis _transaction_:"
msgstr "Quarkus 会从一个文件中批量发送所有指令。如果出现任何错误，加载过程就会失败，但之前的指令可能已经执行。为避免出现这种情况，你可以将命令封装到 Redis _事务_ 中："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Configure the pre-loading"
msgstr "配置预加载"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"The data is loaded when the application starts.\n"
"By default, it drops the whole database before importing.\n"
"You can prevent this using `quarkus.redis.flush-before-load=false`."
msgstr "数据在应用程序启动时加载。默认情况下，它会在导入前丢弃整个数据库。您可以使用 `quarkus.redis.flush-before-load=false` 阻止这种情况。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Also, the import process only runs if the database is empty (no key).\n"
"You can force to import even if there is data using the `quarkus.redis.load-only-if-empty=false`"
msgstr "此外，导入过程只在数据库为空（无键）时运行。即使有数据，也可以使用 `quarkus.redis.load-only-if-empty=false`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Distinguish dev/test vs. prod when pre-loading"
msgstr "在预加载时区分开发/测试与生产"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"As mentioned above, in dev and test modes, Quarkus tries to import data by looking for the `src/main/resources/import.redis`.\n"
"This behavior is disabled in _prod_ mode, and if you want to import even in production, add:"
msgstr "如上所述，在开发和测试模式下，Quarkus 会尝试通过查找 `src/main/resources/import.redis` 来导入数据。这种行为在 _prod_ 模式下被禁用，如果你想在生产模式下也能导入数据，请添加："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Before importing in _prod_ mode, make sure you configured `quarkus.redis.flush-before-load` accordingly."
msgstr "在以 _prod_ 模式导入之前，请确保相应配置了 `quarkus.redis.flush-before-load` 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "In dev mode, to reload the content of the `.redis` load scripts, you need to add: `%dev.quarkus.vertx.caching=false`"
msgstr "在开发模式下，要重新加载 `.redis` 加载脚本的内容，需要添加 `%dev.quarkus.vertx.caching=false`"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use the Vert.x redis client"
msgstr "使用 Vert.x redis 客户端"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"In addition to the high-level API, you can use the Vertx Redis clients directly in your code.\n"
"The documentation of the Vert.x Redis Client is available on the https://vertx.io/docs/vertx-redis-client/java/[Vert.x Web Site]."
msgstr "除了高级应用程序接口，您还可以在代码中直接使用 Vertx Redis 客户端。Vert.x Redis 客户端的文档可在 link:https://vertx.io/docs/vertx-redis-client/java/[Vert.x] 网站上获取。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Configure Redis hosts programmatically"
msgstr "以编程方式配置 Redis 主机"

#: _versions/3.8/guides/redis-reference.adoc
msgid ""
"The `RedisHostsProvider` programmatically provides redis hosts.\n"
"This allows for configuration of properties like redis connection password coming from other sources."
msgstr "`RedisHostsProvider` 接口支持以编程方式设定Redis主机。这个机制支持了从其他来源获取Redis连接属性进行配置，如Redis连接密码等。"

#: _versions/3.8/guides/redis-reference.adoc
msgid "This is useful as it removes the need to store sensitive data in application.properties."
msgstr "这样可以避免在application.properties中存储敏感数据，很实用。"

#: _versions/3.8/guides/redis-reference.adoc
msgid "The host provider can be used to configure the redis client like shown below"
msgstr "`RedisHostsProvider` 可用于配置Redis客户端，如下图所示："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Customize the Redis options programmatically"
msgstr "以编程方式自定义 Redis 选项"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"You can expose a bean implementing the `io.quarkus.redis.client.RedisOptionsCustomizer` interface to customize the Redis client options.\n"
"The bean is called for each configured Redis client:"
msgstr "您可以公开一个实现 `io.quarkus.redis.client.RedisOptionsCustomizer` 接口的 Bean，以自定义 Redis 客户端选项。每个已配置的 Redis 客户端都会调用该 bean："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Use the Redis Dev Services"
msgstr "使用 Redis 开发服务"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "See xref:redis-dev-services.adoc[Redis Dev Service]."
msgstr "请参见 xref:redis-dev-services.adoc[Redis Dev Service] 。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Configure Redis observability"
msgstr "配置 Redis 的可观察性"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Enable the health checks"
msgstr "启用健康检查"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "If you are using the `quarkus-smallrye-health` extension, `quarkus-redis` will automatically add a readiness health check to validate the connection to the Redis server."
msgstr "如果使用 `quarkus-smallrye-health` 扩展， `quarkus-redis` 将自动添加准备就绪健康检查，以验证与 Redis 服务器的连接。"

#: _versions/3.8/guides/redis-reference.adoc
msgid "So when you access the `/q/health/ready` endpoint of your application you will have information about the connection validation status."
msgstr "因此，当你访问你的应用程序的 `/q/health/ready` 端点时，您将获得有关连接验证状态的信息。"

#: _versions/3.8/guides/redis-reference.adoc
msgid "This behavior can be disabled by setting the `quarkus.redis.health.enabled` property to `false` in your `application.properties`."
msgstr "可以通过在 `application.properties` 中设置 `quarkus.redis.health.enabled` 属性为 `false` 来禁用这个连接健康检查。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Enable metrics"
msgstr "启用度量"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid ""
"Redis client metrics are automatically enabled when the application also uses the xref:telemetry-micrometer.adoc[`quarkus-micrometer`] extension.\n"
"Micrometer collects the metrics of all the Redis clients implemented by the application."
msgstr "扩展时，Redis 客户端指标会自动启用。 xref:telemetry-micrometer.adoc[quarkus-micrometer] 扩展时，Redis 客户端指标会自动启用。Micrometer 会收集应用程序实施的所有 Redis 客户端的指标。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "As an example, if you export the metrics to Prometheus, you will get:"
msgstr "例如，如果将指标导出到 Prometheus，就会得到以下结果："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The Redis client name can be found in the _tags_."
msgstr "Redis 客户端名称可在 _标签_ 中找到。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "The metrics contain both the Redis connection pool metrics (`redis_pool_*`) and the metrics about the command execution (`redis_commands_*`) such as the number of command, successes, failures, and durations."
msgstr "指标包含 Redis 连接池指标 ( `redis_pool_*` ) 和命令执行指标 ( `redis_commands_*` )，如命令数量、成功率、失败率和持续时间。"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Disable metrics"
msgstr "禁用度量"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "To disable the Redis client metrics when `quarkus-micrometer` is used, add the following property to the application configuration:"
msgstr "要在使用 `quarkus-micrometer` 时禁用 Redis 客户端指标，请在应用程序配置中添加以下属性："

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "Configuration reference"
msgstr "配置参考"

#: _versions/3.8/guides/redis-reference.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
