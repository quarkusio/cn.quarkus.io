msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Build, Sign and Encrypt JSON Web Tokens"
msgstr "构建、签署和加密 JSON 网络令牌"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "According to link:https://datatracker.ietf.org/doc/html/rfc7519[RFC7519], JSON Web Token (JWT) is a compact, URL-safe means of representing claims which are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code(MAC) and/or encrypted."
msgstr "根据 link:https://datatracker.ietf.org/doc/html/rfc7519[RFC7519] ，JSON 网络令牌（JWT）是一种结构紧凑、URL 安全的方法，用于表示被编码为 JSON 对象的权利要求，该对象可用作 JSON 网络签名（JWS）结构的有效载荷或 JSON 网络加密（JWE）结构的明文，使权利要求能够通过消息验证码（MAC）进行数字签名或完整性保护和/或加密。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Signing the claims is used most often to secure the claims. What is known today as a JWT token is typically produced by signing the claims in a JSON format using the steps described in the link:https://tools.ietf.org/html/rfc7515[JSON Web Signature] specification."
msgstr "最常用的方法是对权利要求进行签名，以确保权利要求的安全。今天所说的 JWT 标记通常是通过使用 JSON link:https://tools.ietf.org/html/rfc7515[网络签名] 规范中描述的步骤对 link:https://tools.ietf.org/html/rfc7515[JSON] 格式的权利要求进行签名而生成的。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "However, when the claims are sensitive, their confidentiality can be guaranteed by following the steps described in the link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption] specification to produce a JWT token with the encrypted claims."
msgstr "不过，当索赔要求比较敏感时，可以按照 link:https://tools.ietf.org/html/rfc7516[JSON Web 加密] 规范中描述的步骤，生成一个带有加密索赔要求的 JWT 标记，从而保证其机密性。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Finally, both the confidentiality and integrity of the claims can be further enforced by signing them first and then encrypting the nested JWT token."
msgstr "最后，还可以通过先签署再加密嵌套的 JWT 标记来进一步确保声明的保密性和完整性。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "SmallRye JWT Build provides an API for securing JWT claims using all of these options. link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J] is used internally to support this API."
msgstr "SmallRye JWT Build 提供了一个应用程序接口，用于使用所有这些选项确保 JWT 索赔的安全。内部使用 link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J] 来支持该 API。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Dependency"
msgstr "依赖性"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Note you can use Smallrye JWT Build API without having to create MicroProfile JWT endpoints supported by `quarkus-smallrye-jwt`.\n"
"It can also be excluded from `quarkus-smallrye-jwt` if MP JWT endpoints do not need to generate JWT tokens."
msgstr "请注意，您可以使用 Smallrye JWT Build API，而无需创建 `quarkus-smallrye-jwt` 支持的 MicroProfile JWT 端点。如果 MP JWT 端点不需要生成 JWT 标记，也可以将其从 `quarkus-smallrye-jwt` 中排除。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Create JwtClaimsBuilder and set the claims"
msgstr "创建 JwtClaimsBuilder 并设置权利要求"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "The first step is to initialize a `JwtClaimsBuilder` using one of the options below and add some claims to it:"
msgstr "第一步是使用以下选项之一初始化 `JwtClaimsBuilder` ，并在其中添加一些权利要求："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "The API is fluent so the builder initialization can be done as part of the fluent API sequence."
msgstr "API 是流畅的，因此构建器初始化可以作为流畅 API 序列的一部分来完成。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "The builder will also set `iat` (issued at) to the current time, `exp` (expires at) to 5 minutes away from the current time (it can be customized with the `smallrye.jwt.new-token.lifespan` property) and `jti` (unique token identifier) claims if they have not already been set."
msgstr "生成器还会将 `iat` （发出时间）设置为当前时间，将 `exp` （过期时间）设置为距离当前时间 5 分钟的时间（可使用 `smallrye.jwt.new-token.lifespan` 属性进行自定义），并将 `jti` （唯一令牌标识符）设置为声称的时间（如果尚未设置）。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "One can also configure `smallrye.jwt.new-token.issuer` and `smallrye.jwt.new-token.audience` properties and skip setting the issuer and audience directly with the builder API."
msgstr "还可以配置 `smallrye.jwt.new-token.issuer` 和 `smallrye.jwt.new-token.audience` 属性，直接使用生成器应用程序接口跳过发行人和受众的设置。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "The next step is to decide how to secure the claims."
msgstr "下一步是决定如何确保索赔。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Sign the claims"
msgstr "在报销单上签字"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "The claims can be signed immediately or after the `JSON Web Signature` headers have been set:"
msgstr "索赔可以立即签署，也可以在 `JSON Web Signature` 标头设置后签署："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Note the `alg` (algorithm) header is set to `RS256` by default. Signing key identifier (`kid` header) does not have to be set if a single JSON Web Key (JWK) containing a `kid` property is used."
msgstr "注意 `alg` （算法）标头默认设置为 `RS256` 。如果使用的是包含 `kid` 属性的单个 JSON 网络密钥（JWK），则无需设置签名密钥标识符（ `kid` 标头）。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"RSA and Elliptic Curve (EC) private keys as well as symmetric secret keys can be used to sign the claims.\n"
"`ES256` and `HS256` are the default algorithms for EC private and symmetric key algorithms respectively."
msgstr "RSA 和椭圆曲线（EC）私钥以及对称秘钥可用于签署报销单。 `ES256` 和 `HS256` 分别是 EC 私钥和对称密钥算法的默认算法。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can customize the signature algorithm, for example:"
msgstr "例如，您可以自定义签名算法："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Alternatively you can use a `smallrye.jwt.new-token.signature-algorithm` property:"
msgstr "您也可以使用 `smallrye.jwt.new-token.signature-algorithm` 财产："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "and write a simpler API sequence:"
msgstr "并编写更简单的 API 序列："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Note the `sign` step can be combined with the <<encrypt-claims,encrypt>> step to produce `inner-signed and encrypted` tokens, see <<innersign-encrypt-claims,Sign the claims and encrypt the nested JWT token>> section."
msgstr "注意 `sign` 步骤可与 xref:encrypt-claims[加密] 步骤结合使用，以生成 `inner-signed and encrypted` 令牌，请参阅 \" xref:innersign-encrypt-claims[签署声明并加密嵌套 JWT 令牌] \"部分。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Encrypt the claims"
msgstr "加密索赔"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The claims can be encrypted immediately or after the `JSON Web Encryption` headers have been set the same way as they can be signed.\n"
"The only minor difference is that encrypting the claims always requires a `jwe()` `JwtEncryptionBuilder` transition given that the API has been optimized to support signing and inner-signing of the claims."
msgstr "可以立即加密权利要求，也可以在 `JSON Web Encryption` 标头设置后加密权利要求，加密方式与签名方式相同。唯一的细微差别是，由于 API 已优化为支持对权利要求进行签名和内部签名，对权利要求进行加密始终需要 `jwe()` `JwtEncryptionBuilder` 转换。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Note the `alg` (key management algorithm) header is set to `RSA-OAEP` and the `enc` (content encryption header) is set to `A256GCM` by default."
msgstr "注意 `alg` （密钥管理算法）标头默认设置为 `RSA-OAEP` ， `enc` （内容加密标头）默认设置为 `A256GCM` 。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"RSA and Elliptic Curve (EC) public keys as well as symmetric secret keys can be used to encrypt the claims.\n"
"`ECDH-ES` and `A256KW` are the default algorithms for EC public and symmetric key encryption algorithms respectively."
msgstr "RSA 和椭圆曲线（EC）公开密钥以及对称密钥可用于加密报销单。 `ECDH-ES` 和 `A256KW` 分别是 EC 公开密钥和对称密钥加密算法的默认算法。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Note two encryption operations are done when creating an encrypted token:"
msgstr "请注意，创建加密令牌时要进行两次加密操作："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"1) the generated content encryption key is encrypted by the key supplied with the API using the key encryption algorithm such as `RSA-OAEP`\n"
"2) the claims are encrypted by the generated content encryption key using the content encryption algorithm such as `A256GCM`."
msgstr "1) 生成的内容加密密钥由随 API 提供的密钥加密，使用密钥加密算法，如 `RSA-OAEP` 2) 索赔内容由生成的内容加密密钥加密，使用内容加密算法，如 `A256GCM` 。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can customize the key and content encryption algorithms, for example:"
msgstr "例如，您可以自定义密钥和内容加密算法："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Alternatively you can use `smallrye.jwt.new-token.key-encryption-algorithm` and `smallrye.jwt.new-token.content-encryption-algorithm` properties to customize the key and content encryption algorithms:"
msgstr "您也可以使用 `smallrye.jwt.new-token.key-encryption-algorithm` 和 `smallrye.jwt.new-token.content-encryption-algorithm` 属性来定制密钥和内容加密算法："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Note that when the token is directly encrypted by the public RSA or EC key it is not possible to verify which party sent the token.\n"
"Therefore, the secret keys should be preferred for directly encrypting the tokens, for example, when using JWT as cookies where a secret key is managed by the Quarkus endpoint with only this endpoint being both a producer and a consumer of the encrypted token."
msgstr "请注意，当令牌直接使用公开 RSA 或 EC 密钥加密时，就无法验证是哪一方发送了令牌。因此，秘密密钥应优先用于直接加密令牌，例如，在使用 JWT 作为 cookie 时，秘密密钥由 Quarkus 端点管理，只有该端点既是加密令牌的生产者，也是消费者。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "If you would like to use RSA or EC public keys to encrypt the token then it is recommended to sign the token first if the signing key is available, see the next <<innersign-encrypt-claims,Sign the claims and encrypt the nested JWT token>> section."
msgstr "如果您想使用 RSA 或 EC 公钥加密令牌，建议先签署令牌（如果有签署密钥），请参阅下一节 xref:innersign-encrypt-claims[签署声明并加密嵌套的 JWT 令牌] 。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Sign the claims and encrypt the nested JWT token"
msgstr "签署声明并加密嵌套的 JWT 标记"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "The claims can be signed and then the nested JWT token encrypted by combining the sign and encrypt steps."
msgstr "可以先对权利要求进行签名，然后结合签名和加密步骤对嵌套的 JWT 标记进行加密。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Fast JWT Generation"
msgstr "快速生成 JWT"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "If `smallrye.jwt.sign.key.location` or/and `smallrye.jwt.encrypt.key.location` properties are set then one can secure the existing claims (resources, maps, JsonObjects) with a single call:"
msgstr "如果设置了 `smallrye.jwt.sign.key.location` 或/和 `smallrye.jwt.encrypt.key.location` 属性，那么只需一次调用，就能确保现有主张（资源、地图、JsonObjects）的安全："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "As mentioned above, `iat` (issued at), `exp` (expires at), `jti` (token identifier), `iss` (issuer) and `aud` (audience) claims will be added if needed."
msgstr "如上所述，如有需要，还将添加 `iat` （发布时间）、 `exp` （过期时间）、 `jti` （令牌标识符）、 `iss` （发布者）和 `aud` （受众）声明。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Dealing with the keys"
msgstr "处理钥匙"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key.location` and `smallrye.jwt.encrypt.key.location` properties can be used to point to signing and encryption key locations. The keys can be located on the local file system, classpath, or fetched from the remote endpoints and can be in `PEM` or `JSON Web Key` (`JWK`) formats. For example:"
msgstr "`smallrye.jwt.sign.key.location` 和 属性可用于指向签名和加密密钥位置。密钥可以位于本地文件系统、classpath 或从远程端点获取，格式可以是 或 ( )。例如 `smallrye.jwt.encrypt.key.location` `PEM` `JSON Web Key` `JWK`"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can also use MicroProfile `ConfigSource` to fetch the keys from the external services such as link:{vault-guide}[HashiCorp Vault] or other secret managers and use `smallrye.jwt.sign.key` and `smallrye.jwt.encrypt.key` properties instead:"
msgstr "您也可以使用 MicroProfile `ConfigSource` 从外部服务（如 link:{vault-guide}[HashiCorp Vault] 或其他秘密管理器）获取密钥，并使用 `smallrye.jwt.sign.key` 和 `smallrye.jwt.encrypt.key` 属性代替："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"where both `private.key.from.vault` and `public.key.from.vault` are the `PEM` or `JWK` formatted key values provided by the custom `ConfigSource`.\n"
"`smallrye.jwt.sign.key` and `smallrye.jwt.encrypt.key` can also contain only the Base64-encoded private or public keys values."
msgstr "其中 `private.key.from.vault` 和 `public.key.from.vault` 都是自定义 `ConfigSource` 提供的 `PEM` 或 `JWK` 格式化密钥值。 `smallrye.jwt.sign.key` 和 `smallrye.jwt.encrypt.key` 也可以只包含 Base64 编码的私钥或公钥值。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "However, please note, directly inlining the private keys in the configuration is not recommended. Use the `smallrye.jwt.sign.key` property only if you need to fetch a signing key value from the remote secret manager."
msgstr "但请注意，不建议在配置中直接内联私钥。只有在需要从远程秘密管理器获取签名密钥值时，才使用 `smallrye.jwt.sign.key` 属性。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "The keys can also be loaded by the code which builds the token and supplied to JWT Build API."
msgstr "密钥也可以由构建令牌的代码加载，并提供给 JWT Build API。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "If you need to sign and/or encrypt the token using the symmetric secret key then consider using `io.smallrye.jwt.util.KeyUtils` to generate a SecretKey of the required length."
msgstr "如果需要使用对称秘钥对令牌签名和/或加密，可以考虑使用 `io.smallrye.jwt.util.KeyUtils` 生成所需长度的秘钥。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "For example, one needs to have a 64 byte key to sign using the `HS512` algorithm (`512/8`) and a 32 byte key to encrypt the content encryption key with the `A256KW` algorithm (`256/8`):"
msgstr "例如，使用 `HS512` 算法 ( `512/8` ) 签名需要一个 64 字节的密钥，使用 `A256KW` 算法 ( `256/8` ) 加密内容加密密钥需要一个 32 字节的密钥："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can also consider using a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format to store a secret key on a secure file system and refer to it using either `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` properties, for example:"
msgstr "你也可以考虑使用 `JSON Web Key` (JWK) 或 `JSON Web Key Set` (JWK Set) 格式在安全文件系统中存储秘钥，并使用 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` 属性对其进行引用："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "or"
msgstr "或"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "`io.smallrye.jwt.util.KeyUtils` can also be used to generate a pair of asymmetric RSA or EC keys. These keys can be stored using a `JWK`, `JWK Set` or `PEM` format."
msgstr "`io.smallrye.jwt.util.KeyUtils` 也可用于生成一对非对称 RSA 或 EC 密钥。这些密钥可以使用 、 或 格式存储。 `JWK` `JWK Set` `PEM` "

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "SmallRye JWT Builder configuration"
msgstr "SmallRye JWT 生成器配置"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "SmallRye JWT supports the following properties which can be used to customize the way claims are signed and/or encrypted:"
msgstr "SmallRye JWT 支持以下属性，可用于自定义签名和/或加密声明的方式："

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Property Name"
msgstr "物业名称"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "Default"
msgstr "默认"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "Description"
msgstr "描述"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.sign.key.location"
msgstr "smallrye.jwt.sign.key.location"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "`none`"
msgstr "`none`"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Location of a private key which will be used to sign the claims when either a no-argument `sign()` or `innerSign()` method is called."
msgstr "私人密钥的位置，在调用无参数 `sign()` 或 `innerSign()` 方法时，该密钥将被用于签署声明。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.sign.key"
msgstr "smallrye.jwt.sign.key"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "none"
msgstr "无"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Key value which will be used to sign the claims when either a no-argument `sign()` or `innerSign()` method is called."
msgstr "在调用无参数 `sign()` 或 `innerSign()` 方法时，用于签署索赔的密钥值。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.sign.key.id"
msgstr "smallrye.jwt.sign.key.id"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Signing key identifier which is checked only when JWK keys are used."
msgstr "签名密钥标识符，仅在使用 JWK 密钥时检查。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.encrypt.key.location"
msgstr "smallrye.jwt.encrypt.key.location"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Location of a public key which will be used to encrypt the claims or inner JWT when a no-argument `encrypt()` method is called."
msgstr "公开密钥的位置，在调用无参数 `encrypt()` 方法时，该密钥将用于加密声明或内部 JWT。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.sign.relax-key-validation"
msgstr "smallrye.jwt.sign.relax-key-validation"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "false"
msgstr "false"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Relax the validation of the signing keys."
msgstr "放宽对签名密钥的验证。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.encrypt.key"
msgstr "smallrye.jwt.encrypt.key"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Key value which will be used to encrypt the claims or inner JWT when a no-argument encrypt() method is called."
msgstr "密钥值，在调用无参数 encrypt() 方法时将用于加密声明或内部 JWT。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.encrypt.key.id"
msgstr "smallrye.jwt.encrypt.key.id"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Encryption key identifier which is checked only when JWK keys are used."
msgstr "加密密钥标识符，仅在使用 JWK 密钥时检查。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.encrypt.relax-key-validation"
msgstr "smallrye.jwt.encrypt.relax-key-validation"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Relax the validation of the encryption keys."
msgstr "放宽加密密钥的验证。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.signature-algorithm"
msgstr "smallrye.jwt.new-token.signature-algorithm"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "RS256"
msgstr "RS256"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Signature algorithm. This property will be checked if the JWT signature builder has not already set the signature algorithm."
msgstr "签名算法。如果 JWT 签名生成器尚未设置签名算法，则将检查此属性。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.key-encryption-algorithm"
msgstr "smallrye.jwt.new-token.key-encryption-algorithm"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "RSA-OAEP"
msgstr "RSA-OAEP"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Key encryption algorithm. This property will be checked if the JWT encryption builder has not already set the key encryption algorithm."
msgstr "密钥加密算法。如果 JWT 加密创建器尚未设置密钥加密算法，则将检查此属性。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.content-encryption-algorithm"
msgstr "smallrye.jwt.new-token.content-encryption-algorithm"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "A256GCM"
msgstr "A256GCM"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Content encryption algorithm. This property will be checked if the JWT encryption builder has not already set the content encryption algorithm."
msgstr "内容加密算法。如果 JWT 加密创建器尚未设置内容加密算法，则将检查此属性。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.lifespan"
msgstr "smallrye.jwt.new-token.lifespan"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "300"
msgstr "300"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Token lifespan in seconds which will be used to calculate an `exp` (expiry) claim value if this claim has not already been set."
msgstr "令牌寿命（以秒为单位），用于计算 `exp` （过期）申请值（如果该申请值尚未设置）。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.issuer"
msgstr "smallrye.jwt.new-token.issuer"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Token issuer which can be used to set an `iss` (issuer) claim value if this claim has not already been set."
msgstr "代币发行者，如果尚未设置，可用于设置 `iss` （发行者）申请值。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.audience"
msgstr "smallrye.jwt.new-token.audience"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Token audience which can be used to set an `aud` (audience) claim value if this claim has not already been set."
msgstr "如果尚未设置 `aud` （受众）权利要求值，则可使用受众令牌设置该权利要求值。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.override-matching-claims"
msgstr "smallrye.jwt.new-token.override-matching-claims"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Set this property to `true` for `smallrye.jwt.new-token.issuer` and `smallrye.jwt.new-token.audience` values to override the already initialized `iss` (issuer) and `aud` (audience) claims."
msgstr "为 `smallrye.jwt.new-token.issuer` 和 `smallrye.jwt.new-token.audience` 设置此属性为 `true` ，以覆盖已初始化的 `iss` （发行方）和 `aud` （受众）声明。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.type"
msgstr "smallrye.jwt.keystore.type"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "`JKS`"
msgstr "`JKS`"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "This property can be used to customize a keystore type if either `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` or both of these properties point to a `KeyStore` file. If it is not set then the file name will be checked to determine the keystore type before defaulting to `JKS`."
msgstr "如果 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` 或这两个属性都指向 `KeyStore` 文件，则该属性可用于自定义密钥存储类型。如果未设置该属性，则将检查文件名以确定密钥存储类型，然后默认为 `JKS` 。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.provider"
msgstr "smallrye.jwt.keystore.provider"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "This property can be used to customize a `KeyStore` provider if `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` point to a `KeyStore` file."
msgstr "如果 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` 指向 `KeyStore` 文件，该属性可用于定制 `KeyStore` 提供程序。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.password"
msgstr "smallrye.jwt.keystore.password"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "Keystore password. If `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` point to a `KeyStore` file then this property has be set."
msgstr "密钥存储密码。如果 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` 指向 `KeyStore` 文件，则必须设置此属性。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.encrypt.key.alias"
msgstr "smallrye.jwt.keystore.encrypt.key.alias"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "This property has to be set to identify a public encryption key which will be extracted from `KeyStore` from a matching certificate if `smallrye.jwt.encrypt.key.location` points to a `KeyStore` file."
msgstr "如果 `smallrye.jwt.encrypt.key.location` 指向 `KeyStore` 文件，则必须设置该属性，以确定从 `KeyStore` 提取的公共加密密钥。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.sign.key.alias"
msgstr "smallrye.jwt.keystore.sign.key.alias"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "This property has to be set to identify a private signing key if `smallrye.jwt.sign.key.location` points to a `KeyStore` file."
msgstr "如果 `smallrye.jwt.sign.key.location` 指向 `KeyStore` 文件，则必须设置此属性以标识私人签名密钥。"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.sign.key.password"
msgstr "smallrye.jwt.keystore.sign.key.password"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "This property may be set if a private signing key's password in `KeyStore` is different to `smallrye.jwt.keystore.password` when `smallrye.jwt.sign.key.location` points to a `KeyStore` file."
msgstr "当 `smallrye.jwt.sign.key.location` 指向 `KeyStore` 文件时，如果 `KeyStore` 中的私人签名密钥密码与 `smallrye.jwt.keystore.password` 中的私人签名密钥密码不同，则可设置此属性。"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "References"
msgstr "参考文献"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON网络令牌]"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON网络签名]"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON网络加密]"

#: _versions/3.8/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON网络算法]"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J]"
msgstr "link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J]"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC 承载令牌验证]"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "xref:security-jwt.adoc[Using Smallrye JWT to Protect Service Applications]"
msgstr "xref:security-jwt.adoc[使用 Smallrye JWT 保护服务应用程序]"

#: _versions/3.8/guides/security-jwt-build.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"
