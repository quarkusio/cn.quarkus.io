msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Deploying on OpenShift"
msgstr "在 OpenShift 上部署"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "This guide covers generating and deploying OpenShift resources based on sane default and user supplied configuration."
msgstr "本指南涵盖根据合理的默认配置和用户提供的配置生成和部署 OpenShift 资源。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Access to an OpenShift cluster (Minishift is a viable option)"
msgstr "访问 OpenShift 集群（Minishift 也是一个可行的选择）"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "OpenShift CLI (Optional, only required for manual deployment)"
msgstr "OpenShift CLI（可选，仅手动部署时需要）"

#: _versions/3.8/guides/deploying-to-openshift.adoc
msgid "Bootstrapping the project"
msgstr "创建项目"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "First, we need a new project that contains the OpenShift extension. This can be done using the following command:"
msgstr "首先，我们需要一个包含 OpenShift 扩展的新项目。使用以下命令即可完成："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"Quarkus offers the ability to automatically generate OpenShift resources based on sane defaults and user supplied configuration.\n"
"The OpenShift extension is actually a wrapper extension that brings configures the xref:deploying-to-kubernetes.adoc[Kubernetes]\n"
"extension with sensible defaults so that it's easier for the user to get started with Quarkus on OpenShift."
msgstr "Quarkus 能够根据合理的默认值和用户提供的配置自动生成 OpenShift 资源。OpenShift 扩展实际上是一个封装扩展，它通过合理的默认值来配置 xref:deploying-to-kubernetes.adoc[Kubernetes] 扩展，这样用户就能更容易地在 OpenShift 上开始使用 Quarkus。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "When we added the OpenShift extension to the command line invocation above, the following dependency was added to the `pom.xml`"
msgstr "当我们在上述命令行调用中添加 OpenShift 扩展时，以下依赖关系被添加到了 `pom.xml`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.8/guides/deploying-to-openshift.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Log Into the OpenShift Cluster"
msgstr "登录 OpenShift 集群"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"Before we build and deploy our application we need to log into an OpenShift cluster.\n"
"You can log in via the https://docs.openshift.com/container-platform/4.9/cli_reference/openshift_cli/getting-started-cli.html[OpenShift CLI]:"
msgstr "在构建和部署应用程序之前，我们需要登录 OpenShift 集群。您可以通过 link:https://docs.openshift.com/container-platform/4.9/cli_reference/openshift_cli/getting-started-cli.html[OpenShift CLI] 登录："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Log In - OpenShift CLI Example"
msgstr "登录 - OpenShift CLI 示例"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "You'll be prompted for the required information such as server URL, password, etc."
msgstr "系统会提示您输入服务器 URL、密码等所需信息。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Alternatively, you may log in using the API token:"
msgstr "或者，您也可以使用 API 令牌登录："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Log In - OpenShift CLI With API Token Example"
msgstr "登录 - 带有 API 令牌的 OpenShift CLI 示例"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "You can request the token via the _Copy Login Command_ link in the OpenShift web console."
msgstr "您可以通过 OpenShift 网络控制台中的 \" _复制登录命令_ \"链接申请令牌。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"Finally, you don't need to use the OpenShift CLI at all.\n"
"Instead, set the `quarkus.kubernetes-client.api-server-url` config property and authenticate with the `quarkus.kubernetes-client.token`, or `quarkus.kubernetes-client.username` and `quarkus.kubernetes-client.password` respectively:"
msgstr "最后，你根本不需要使用 OpenShift CLI。取而代之的是，设置 `quarkus.kubernetes-client.api-server-url` 配置属性，并分别使用 `quarkus.kubernetes-client.token` 或 `quarkus.kubernetes-client.username` 和 `quarkus.kubernetes-client.password` 进行身份验证："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Build and Deployment"
msgstr "构建和部署"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "You can trigger a build and deployment in a single step or build the container image first and then configure the OpenShift application manually if you need <<control_application_config,more control over the deployment configuration>>."
msgstr "如果需要 xref:control_application_config[对部署配置进行更多控制] ，可以在一个步骤中触发构建和部署，或者先构建容器映像，然后手动配置 OpenShift 应用程序。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "To trigger a build and deployment in a single step:"
msgstr "在一个步骤中触发构建和部署："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "If you want to test your application immediately then set the `quarkus.openshift.route.expose` config property to `true` to <<exposing_routes,expose the service automatically>>, e.g. add `-Dquarkus.openshift.route.expose=true` to the command above."
msgstr "如果要立即测试应用程序，可将 `quarkus.openshift.route.expose` 配置属性设为 `true` ，以便 xref:exposing_routes[自动公开服务] ，例如在上述命令中添加 `-Dquarkus.openshift.route.expose=true` 。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "When using `DeploymentConfig` and xref:deploying-to-kubernetes.adoc#service_binding[Service Binding], re-deploying might remove the configuration added by OpenShift to allow service discovery. A new container image build will trigger a refresh of the Quarkus app in OpenShift: `-Dquarkus.container-image.build=true` which might be enough in most situations. If you need to update the OpenShift resources, you need to delete the binding first to create it again after new deployment."
msgstr "在使用 `DeploymentConfig` 和 xref:deploying-to-kubernetes.adoc#service_binding[服务绑定] 时，重新部署可能会移除 OpenShift 为允许服务发现而添加的配置。新的容器镜像构建会触发刷新 OpenShift 中的 Quarkus 应用程序： `-Dquarkus.container-image.build=true` ，这在大多数情况下可能就足够了。如果需要更新 OpenShift 资源，则需要先删除绑定，以便在新部署后重新创建。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"This command will build your application locally, then trigger a container image build and finally apply the generated OpenShift resources automatically.\n"
"The generated resources use a Kubernetes `Deployment`, but still make use of OpenShift specific resources like `Route`, `BuildConfig` etc."
msgstr "该命令将在本地构建应用程序，然后触发容器镜像构建，最后自动应用生成的 OpenShift 资源。生成的资源使用 Kubernetes `Deployment` ，但仍会使用 OpenShift 特有的资源，如 `Route` 、 `BuildConfig` 等。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "As of OpenShift 4.14, the https://access.redhat.com/articles/7041372[`DeploymentConfig` object has been deprecated]."
msgstr "自 OpenShift 4.14 起， link:https://access.redhat.com/articles/7041372[DeploymentConfig 对象已被弃用] 。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"Since `Deployment` is a Kubernetes resource and not OpenShift specific, it can't possibly leverage `ImageStream` resources, as is the case with `DeploymentConfig`. This means that the image references need to include the container image registry that hosts the image.\n"
"When the image is built, using OpenShift builds (s2i binary and docker strategy) the OpenShift internal image registry `image-registry.openshift-image-registry.svc:5000` will be used, unless another registry has been explicitly specified by the user. Please note, that in the internal registry the project/namespace name is added as part of the image repository: `image-registry.openshift-image-registry.svc:5000/<project name>/<name>:<tag>`, so users will need to make sure that the target project/namespace name is aligned with the `quarkus.container-image.group`."
msgstr "由于 `Deployment` 是 Kubernetes 资源而非 OpenShift 特定资源，它不可能像 `DeploymentConfig` 那样利用 `ImageStream` 资源。这意味着镜像引用需要包括托管镜像的容器镜像注册表。在使用 OpenShift 构建（s2i 二进制和 docker 策略）镜像时，除非用户明确指定了其他注册表，否则将使用 OpenShift 内部镜像注册表 `image-registry.openshift-image-registry.svc:5000` 。请注意，在内部注册表中，项目/命名空间名称会被添加为镜像仓库的一部分： `image-registry.openshift-image-registry.svc:5000/<project name>/<name>:<tag>` 因此用户需要确保目标项目/名称空间名称与 `quarkus.container-image.group` 一致。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "The https://access.redhat.com/articles/7041372[deprecation document] contains additional information about how to set up/use automatic rollbacks, triggers, lifecycle hooks, and custom strategies."
msgstr "link:https://access.redhat.com/articles/7041372[弃用文档] 包含有关如何设置/使用自动回滚、触发器、生命周期钩子和自定义策略的更多信息。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"You can use the OpenShift web console to verify that the above command has created an image stream, a service resource and has deployed the application.\n"
"Alternatively, you can run the following OpenShift CLI commands:"
msgstr "您可以使用 OpenShift Web 控制台验证上述命令是否创建了映像流、服务资源并部署了应用程序。或者，您也可以运行以下 OpenShift CLI 命令："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Lists the image streams created."
msgstr "列出创建的图像流。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Get the list of pods."
msgstr "获取 pod 列表。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Get the list of Kubernetes services."
msgstr "获取 Kubernetes 服务列表。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"Note that the service is not exposed to the outside world by default.\n"
"So unless you've used the `quarkus.openshift.route.expose` config property to expose the created service automatically you'll need to expose the service manually."
msgstr "请注意，该服务默认情况下不会对外公开。因此，除非使用 `quarkus.openshift.route.expose` 配置属性自动公开已创建的服务，否则需要手动公开服务。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Expose The Service - OpenShift CLI Example"
msgstr "公开服务 - OpenShift CLI 示例"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Expose the service."
msgstr "公开服务。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Get the list of exposed routes."
msgstr "获取暴露路由列表。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Access your application."
msgstr "访问您的应用程序。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Configure the OpenShift Application Manually"
msgstr "手动配置 OpenShift 应用程序"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "If you need more control over the deployment configuration you can build the container image first and then configure the OpenShift application manually."
msgstr "如果需要对部署配置进行更多控制，可以先构建容器映像，然后手动配置 OpenShift 应用程序。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "To trigger a container image build:"
msgstr "要触发容器映像构建："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"The build that will be performed is a _s2i binary_ build.\n"
"The input of the build is the jar that has been built locally and the output of the build is an `ImageStream` that is configured to automatically trigger a deployment.\n"
"The base/builder image is specified using `base-jvm-image` and `base-native-image` for jvm and native mode respectively. An ImageStream for the image is automatically generated, unless these properties are used to reference an existing ImageStreamTag in the internal openshift registry. For example:"
msgstr "将执行的构建是 _s2i 二进制_ 构建。构建的输入是本地已构建的 jar，而构建的输出是 `ImageStream` ，它被配置为自动触发部署。使用 `base-jvm-image` 和 `base-native-image` 分别为 jvm 和本地模式指定基础/生成器镜像。除非使用这些属性引用内部 openshift 注册表中现有的 ImageStreamTag，否则会自动生成映像的 ImageStream。例如"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "During the build you may find the `Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed` exception due to self-signed certificate. To solve this, just add the following line to your `application.properties`:"
msgstr "在构建过程中，您可能会发现 `Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed` 由于自签名证书而出现异常。要解决这个问题，只需在 `application.properties` 中添加以下一行即可："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "For more information, see xref:deploying-to-kubernetes.adoc#client-connection-configuration[deploying to Kubernetes]."
msgstr "更多信息，请参阅 xref:deploying-to-kubernetes.adoc#client-connection-configuration[部署到 Kubernetes] 。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Once the build is done we can create a new application from the relevant `ImageStream`."
msgstr "构建完成后，我们就可以从相关的 `ImageStream` 中创建一个新的应用程序。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Lists the image streams created. The image stream of our application should be tagged as <project>/openshift-quickstart:1.0.0-SNAPSHOT."
msgstr "列出创建的图像流。我们应用程序的映像流应标记为 <project>/openshift-quickstart:1.0.0-SNAPSHOT。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Create a new application from the image source."
msgstr "从图像源创建新的应用程序。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Expose the service to the outside world."
msgstr "向外界提供服务。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"After this setup the next time the container image is built a deployment to OpenShift is triggered automatically.\n"
"In other words, you don't need to repeat the above steps."
msgstr "完成上述设置后，下次构建容器映像时，就会自动触发向 OpenShift 的部署。换句话说，你不需要重复上述步骤。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Non-S2I Builds"
msgstr "非 S2I 构建"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Out of the box the OpenShift extension is configured to use xref:container-image.adoc#s2i[container-image-s2i]. However, it's still possible to use other container image extensions like:"
msgstr "开箱即用的 OpenShift 扩展配置为使用 xref:container-image.adoc#s2i[container-image-s2i] 。不过，也可以使用其他容器镜像扩展，例如"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "xref:container-image.adoc#docker[container-image-docker]"
msgstr "xref:container-image.adoc#docker[容器图像对接程序]"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "xref:container-image.adoc#jib[container-image-jib]"
msgstr "xref:container-image.adoc#jib[容器图像-jib]"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "When a non-s2i container image extension is used, an `ImageStream` is created that is pointing to an external `dockerImageRepository`. The image is built and pushed to the registry and the `ImageStream` populates the tags that are available in the `dockerImageRepository`."
msgstr "使用非 2i 容器映像扩展时，会创建一个指向外部 `dockerImageRepository` 的 `ImageStream` 。该映像被构建并推送到注册表中，而 `ImageStream` 会填充 `dockerImageRepository` 中可用的标记。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "To select which extension will be used for building the image:"
msgstr "选择用于构建图像的扩展名："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "or"
msgstr "或"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Customizing"
msgstr "定制"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "All available customization options are available in the xref:deploying-to-kubernetes.adoc#openshift[OpenShift configuration options]."
msgstr "xref:deploying-to-kubernetes.adoc#openshift[OpenShift 配置选项] 中提供了所有可用的自定义选项。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Some examples are provided in the sections below:"
msgstr "下文将举例说明："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Exposing Routes"
msgstr "暴露路由"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "To expose a `Route` for the Quarkus application:"
msgstr "为 Quarkus 应用程序提供 `Route` ："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "You don't necessarily need to add this property in the `application.properties`. You can pass it as a command line argument:"
msgstr "您不一定需要在 `application.properties` 中添加该属性。您可以将其作为命令行参数传递："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "The same applies to all properties listed below."
msgstr "这同样适用于下面列出的所有属性。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Securing the Route resource"
msgstr "保护路由资源"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "To secure the incoming connections, OpenShift provides several types of TLS termination to serve certifications. You can read more information about how to secure routes in https://docs.openshift.com/container-platform/4.12/networking/routes/secured-routes.html[the official OpenShift guide]."
msgstr "为了确保传入连接的安全，OpenShift 提供了多种类型的 TLS 终止服务认证。有关如何确保路由安全的更多信息，请参阅 link:https://docs.openshift.com/container-platform/4.12/networking/routes/secured-routes.html[OpenShift 官方指南] 。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Let's see an example about how to configure a secured Route using passthrough termination by simply adding the \"quarkus.openshift.route.tls\" properties:"
msgstr "让我们来看一个示例，了解如何通过添加 \"quarkus.openshift.route.tls \"属性，使用直通终止配置安全路由："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Labels"
msgstr "标签"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "To add a label in the generated resources:"
msgstr "在生成的资源中添加标签："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Annotations"
msgstr "注释"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "To add an annotation in the generated resources:"
msgstr "在生成的资源中添加注释："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Environment variables"
msgstr "环境变量"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "OpenShift provides multiple ways of defining environment variables:"
msgstr "OpenShift 提供了多种定义环境变量的方法："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "key/value pairs"
msgstr "键/值对"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "import all values from a Secret or ConfigMap"
msgstr "从 Secret 或 ConfigMap 中导入所有值"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "interpolate a single value identified by a given field in a Secret or ConfigMap"
msgstr "插值一个由 Secret 或 ConfigMap 中给定字段标识的单一值"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "interpolate a value from a field within the same resource"
msgstr "从同一资源内的字段插值"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Environment variables from key/value pairs"
msgstr "从键/值对中获取环境变量"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "To add a key/value pair as an environment variable in the generated resources:"
msgstr "在生成的资源中添加键/值对作为环境变量："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n"
"Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`."
msgstr "上述命令将把 `MY_ENV_VAR=foobar` 添加为环境变量。请注意，关键字 `my-env-var` 将被转换为大写字母，破折号将被下划线替换，结果是 `MY_ENV_VAR` 。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Environment variables from Secret"
msgstr "来自 Secret 的环境变量"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"To add all key/value pairs of `Secret` as environment variables just apply the following configuration, separating each `Secret`\n"
"to be used as source by a comma (`,`):"
msgstr "要将 `Secret` 的所有键/值对添加为环境变量，只需应用以下配置，用逗号（ `,` ）分隔每个用作源的 `Secret` ："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "which would generate the following in the container definition:"
msgstr "会在容器定义中生成以下内容："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "The following extracts a value identified by the `keyName` field from the `my-secret` Secret into a `foo` environment variable:"
msgstr "下文将 `keyName` 字段标识的值从 `my-secret` Secret 提取到 `foo` 环境变量中："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "This would generate the following in the `env` section of your container:"
msgstr "这将在容器的 `env` 部分生成以下内容："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Environment variables from ConfigMap"
msgstr "来自 ConfigMap 的环境变量"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"To add all key/value pairs from `ConfigMap` as environment variables just apply the following configuration, separating each\n"
"`ConfigMap` to be used as source by a comma (`,`):"
msgstr "要将 `ConfigMap` 中的所有键/值对添加为环境变量，只需应用以下配置，在每个 `ConfigMap` 之间用逗号隔开 ( `,` )："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"The following extracts a value identified by the `keyName` field from the `my-config-map` ConfigMap into a `foo`\n"
"environment variable:"
msgstr "下文将 `keyName` 字段标识的值从 `my-config-map` ConfigMap 提取到 `foo` 环境变量中："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Environment variables from fields"
msgstr "来自字段的环境变量"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "It's also possible to use the value from another field to add a new environment variable by specifying the path of the field to be used as a source, as follows:"
msgstr "也可以使用另一个字段的值来添加新的环境变量，方法是指定要用作源的字段的路径，如下所示："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Changing the generated deployment resource"
msgstr "更改生成的部署资源"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Beside generating a `Deployment` resource, you can also choose to get either a `DeploymentConfig`, `StatefulSet`, `Job`, or a `CronJob` resource instead via `application.properties`:"
msgstr "除了生成 `Deployment` 资源外，您还可以选择通过 `application.properties` 获取 `DeploymentConfig` , `StatefulSet` , `Job` 或 `CronJob` 资源："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Generating Job resources"
msgstr "生成工作资源"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "If you want to generate a Job resource, you need to add the following property via the `application.properties`:"
msgstr "如果要生成作业资源，需要通过 `application.properties` 添加以下属性："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "If you are using the Picocli extension, by default the Job resource will be generated."
msgstr "如果使用的是 Picocli 扩展，默认情况下会生成工作资源。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "You can provide the arguments that will be used by the Kubernetes Job via the property `quarkus.openshift.arguments`. For example, adding the property `quarkus.openshift.arguments=A,B`."
msgstr "您可以通过属性 `quarkus.openshift.arguments` 提供 Kubernetes Job 将使用的参数。例如，添加属性 `quarkus.openshift.arguments=A,B` 。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Finally, the Kubernetes job will be launched every time that is installed in OpenShift. You can know more about how to run Kubernetes jobs in this https://kubernetes.io/docs/concepts/workloads/controllers/job/#running-an-example-job[link]."
msgstr "最后，Kubernetes 作业将在每次安装到 OpenShift 时启动。有关如何运行 Kubernetes 作业的更多信息，请参阅此 link:https://kubernetes.io/docs/concepts/workloads/controllers/job/#running-an-example-job[链接] 。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "You can configure the rest of the Kubernetes Job configuration using the properties under `quarkus.openshift.job.xxx` (see xref:deploying-to-openshift#quarkus-openshift-openshift-config_quarkus-openshift-job-parallelism[link])."
msgstr "您可以使用 `quarkus.openshift.job.xxx` 下的属性配置 Kubernetes Job 配置的其余部分（请参阅 xref:deploying-to-openshift.adoc#quarkus-openshift-openshift-config_quarkus-openshift-job-parallelism[链接] ）。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Generating CronJob resources"
msgstr "生成 CronJob 资源"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "If you want to generate a CronJob resource, you need to add the following property via the `application.properties`:"
msgstr "如果要生成 CronJob 资源，需要通过 `application.properties` 添加以下属性："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "CronJob resources require the https://en.wikipedia.org/wiki/Cron[Cron] expression to specify when to launch the job via the property `quarkus.openshift.cron-job.schedule`. If not provide, the build will fail."
msgstr "CronJob 资源要求 link:https://en.wikipedia.org/wiki/Cron[Cron] 表达式通过属性 `quarkus.openshift.cron-job.schedule` 指定何时启动作业。如果不提供，构建将失败。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "You can configure the rest of the Kubernetes CronJob configuration using the properties under `quarkus.openshift.cron-job.xxx` (see xref:deploying-to-openshift.adoc#quarkus-openshift-openshift-config_quarkus-openshift-cron-job-parallelism[link])."
msgstr "您可以使用 `quarkus.openshift.cron-job.xxx` 下的属性配置 Kubernetes CronJob 配置的其余部分（请参阅 xref:deploying-to-openshift.adoc#quarkus-openshift-openshift-config_quarkus-openshift-cron-job-parallelism[链接] ）。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Validation"
msgstr "验证"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "A conflict between two definitions, e.g. mistakenly assigning both a value and specifying that a variable is derived from a field, will result in an error being thrown at build time so that you get the opportunity to fix the issue before you deploy your application to your cluster where it might be more difficult to diagnose the source of the issue."
msgstr "两个定义之间的冲突（例如，错误地同时赋值和指定变量从字段派生）将导致在构建时抛出错误，这样您就有机会在将应用程序部署到集群之前修复问题，因为在集群中可能更难诊断出问题的根源。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Similarly, two redundant definitions, e.g. defining an injection from the same secret twice, will not cause an issue but will indeed report a warning to let you know that you might not have intended to duplicate that definition."
msgstr "同样，两个多余的定义，例如两次从同一个秘密定义注入，不会导致问题，但会报告一个警告，让你知道你可能无意重复该定义。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Backwards compatibility"
msgstr "向后兼容性"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Previous versions of the OpenShift extension supported a different syntax to add environment variables. The older syntax is still supported but is deprecated, and it's advised that you migrate to the new syntax."
msgstr "以前版本的 OpenShift 扩展支持不同的语法来添加环境变量。旧版本的语法仍受支持，但已过时，建议迁移到新语法。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Old vs. new syntax"
msgstr "新旧语法对比"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Old"
msgstr "旧"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "New"
msgstr "新"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Plain variable"
msgstr "普通变量"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env-vars.my-env-var.value=foobar`"
msgstr "`quarkus.openshift.env-vars.my-env-var.value=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env.vars.my-env-var=foobar`"
msgstr "`quarkus.openshift.env.vars.my-env-var=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "From field"
msgstr "来自实地"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env-vars.my-env-var.field=foobar`"
msgstr "`quarkus.openshift.env-vars.my-env-var.field=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env.fields.my-env-var=foobar`"
msgstr "`quarkus.openshift.env.fields.my-env-var=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "All from `ConfigMap`"
msgstr "全部来自 `ConfigMap`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env-vars.xxx.configmap=foobar`"
msgstr "`quarkus.openshift.env-vars.xxx.configmap=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env.configmaps=foobar`"
msgstr "`quarkus.openshift.env.configmaps=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "All from `Secret`"
msgstr "全部来自 `Secret`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env-vars.xxx.secret=foobar`"
msgstr "`quarkus.openshift.env-vars.xxx.secret=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env.secrets=foobar`"
msgstr "`quarkus.openshift.env.secrets=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "From one `Secret` field"
msgstr "从一个 `Secret` 字段"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env-vars.foo.secret=foobar`"
msgstr "`quarkus.openshift.env-vars.foo.secret=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env.mapping.foo.from-secret=foobar`"
msgstr "`quarkus.openshift.env.mapping.foo.from-secret=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env-vars.foo.value=field`"
msgstr "`quarkus.openshift.env-vars.foo.value=field`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env.mapping.foo.with-key=field`"
msgstr "`quarkus.openshift.env.mapping.foo.with-key=field`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "From one `ConfigMap` field"
msgstr "从一个 `ConfigMap` 字段"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env-vars.foo.configmap=foobar`"
msgstr "`quarkus.openshift.env-vars.foo.configmap=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "`quarkus.openshift.env.mapping.foo.from-configmap=foobar`"
msgstr "`quarkus.openshift.env.mapping.foo.from-configmap=foobar`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"If you redefine the same variable using the new syntax while keeping the old syntax, **ONLY** the new version will be kept, and a warning will be issued to alert you of the problem. For example, if you define both\n"
"`quarkus.openshift.env-vars.my-env-var.value=foobar` and `quarkus.openshift.env.vars.my-env-var=newValue`, the extension will only generate an environment variable `MY_ENV_VAR=newValue` and issue a warning."
msgstr "如果使用新语法重新定义同一变量，同时保留旧语法，则 *只* 保留新版本，并发出警告提醒您注意问题。例如，如果同时定义了 `quarkus.openshift.env-vars.my-env-var.value=foobar` 和 `quarkus.openshift.env.vars.my-env-var=newValue` ，扩展程序只会生成一个环境变量 `MY_ENV_VAR=newValue` 并发出警告。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Mounting volumes"
msgstr "安装体积"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "The OpenShift extension allows the user to configure both volumes and mounts for the application."
msgstr "OpenShift 扩展允许用户为应用程序配置卷和挂载。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Any volume can be mounted with a simple configuration:"
msgstr "只需简单配置，就能挂载任何卷："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "This will add a mount to my pod for volume `my-volume` to path `/where/to/mount`"
msgstr "这将为我的 pod 添加一个挂载，以便将 `my-volume` 卷挂载到路径 `/where/to/mount`"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "The volumes themselves can be configured as shown in the sections below:"
msgstr "卷本身可以按以下各节所示进行配置："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Secret volumes"
msgstr "秘密卷"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "ConfigMap volumes"
msgstr "ConfigMap 卷"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Persistent Volume Claims"
msgstr "持久卷索赔"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "Knative - OpenShift Serverless"
msgstr "Knative - OpenShift 无服务器"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "OpenShift also provides the ability to use Knative via the link:https://www.openshift.com/learn/topics/serverless[OpenShift Serverless] functionality."
msgstr "OpenShift 还提供了通过 link:https://www.openshift.com/learn/topics/serverless[OpenShift Serverless] 功能使用 Knative 的能力。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "The first order of business is to instruct Quarkus to generate Knative resources by setting:"
msgstr "首要任务是通过设置来指示 Quarkus 生成 Knative 资源："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid ""
"In order to leverage OpenShift S2I to build the container image on the cluster and use the resulting container image for the Knative application,\n"
"we need to set a couple of configuration properties:"
msgstr "为了利用 OpenShift S2I 在集群上构建容器映像，并将生成的容器映像用于 Knative 应用程序，我们需要设置几个配置属性："

#: _versions/3.8/guides/deploying-to-openshift.adoc
#, fuzzy
msgid "The application can then be deployed to OpenShift Serverless by enabling the standard `quarkus.kubernetes.deploy=true` property."
msgstr "然后，就可以通过启用标准 `quarkus.kubernetes.deploy=true` 属性将应用程序部署到 OpenShift Serverless。"

#: _versions/3.8/guides/deploying-to-openshift.adoc
msgid "Configuration Reference"
msgstr "配置参考"
