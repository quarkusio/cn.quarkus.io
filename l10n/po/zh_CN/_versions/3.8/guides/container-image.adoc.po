msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Container Images"
msgstr "集装箱图像"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Quarkus provides extensions for building (and pushing) container images. Currently, it supports:"
msgstr "Quarkus 为构建（和推送）容器镜像提供扩展。目前，它支持"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "<<#jib,Jib>>"
msgstr "xref:jib[摇臂]"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "<<#docker,Docker>>"
msgstr "xref:docker[Docker]"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "<<#openshift,OpenShift>>"
msgstr "xref:openshift[OpenShift]"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "<<#buildpack,Buildpack>>"
msgstr "xref:buildpack[建包]"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Container Image extensions"
msgstr "容器图像扩展"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Jib"
msgstr "摇臂"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"The extension `quarkus-container-image-jib` is powered by https://github.com/GoogleContainerTools/jib[Jib] for performing container image builds.\n"
"The major benefit of using Jib with Quarkus is that all the dependencies (everything found under `target/lib`) are cached in a different layer than the actual application making rebuilds really fast and small (when it comes to pushing).\n"
"Another important benefit of using this extension is that it provides the ability to create a container image without having to have any dedicated client side tooling (like Docker) or running daemon processes (like the Docker daemon)\n"
"when all that is needed is the ability to push to a container image registry."
msgstr "`quarkus-container-image-jib` 扩展由 link:https://github.com/GoogleContainerTools/jib[Jib] 提供支持，用于执行容器镜像构建。将 Jib 与 Quarkus 结合使用的主要好处是，所有依赖项（ `target/lib` 下的所有内容）都缓存在与实际应用程序不同的层中，从而使重建速度更快、规模更小（推送时）。使用该扩展的另一个重要好处是，它提供了创建容器镜像的能力，而无需任何专用的客户端工具（如 Docker）或运行守护进程（如 Docker 守护进程），只需向容器镜像注册中心推送即可。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "To use this feature, add the following extension to your project:"
msgstr "要使用此功能，请在项目中添加以下扩展："

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"In situations where all that is needed to build a container image and no push to a registry is necessary (essentially by having set `quarkus.container-image.build=true` and left `quarkus.container-image.push` unset - it defaults to `false`), then this extension creates a container image and registers\n"
"it with the Docker daemon. This means that although Docker isn't used to build the image, it is nevertheless necessary. Also note that using this mode, the built container image *will*\n"
"show up when executing `docker images`."
msgstr "在只需构建容器镜像而无需向注册表推送的情况下（基本上是通过设置 `quarkus.container-image.build=true` 而未设置 `quarkus.container-image.push` - 默认为 `false` ），该扩展会创建容器镜像并向 Docker 守护进程注册。这意味着，尽管 Docker 并非用于构建镜像，但它仍然是必要的。还要注意的是，使用该模式时，已构建的容器映像 *将* 在执行 `docker images` 时显示出来。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Including extra files"
msgstr "包括额外文件"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"There are cases when additional files (other than ones produced by the Quarkus build) need to be added to a container image.\n"
"To support these cases, Quarkus copies any file under `src/main/jib` into the built container image (which is essentially the same\n"
"idea that the Jib Maven and Gradle plugins support).\n"
"For example, the presence of `src/main/jib/foo/bar` would result in  `/foo/bar` being added into the container filesystem."
msgstr "在某些情况下，需要向容器映像中添加额外的文件（Quarkus 编译生成的文件除外）。为了支持这些情况，Quarkus 会将 `src/main/jib` 下的任何文件复制到构建的容器映像中（这与 Jib Maven 和 Gradle 插件支持的理念基本相同）。例如， `src/main/jib/foo/bar` 会导致 `/foo/bar` 被添加到容器文件系统中。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "JVM Debugging"
msgstr "JVM 调试"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "There are cases where the built container image may need to have Java debugging conditionally enabled at runtime."
msgstr "在某些情况下，构建的容器映像可能需要在运行时有条件地启用 Java 调试。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"When the base image has not been changed (and therefore `ubi8/openjdk-11-runtime`,  `ubi8/openjdk-17-runtime`, or `ubi8/openjdk-21-runtime` is used), then the `quarkus.jib.jvm-additional-arguments` configuration property can be used in order to\n"
"make the JVM listen on the debug port at startup."
msgstr "如果基本映像没有更改（因此使用了 `ubi8/openjdk-11-runtime` 、 `ubi8/openjdk-17-runtime` 或 `ubi8/openjdk-21-runtime` ），则可以使用 `quarkus.jib.jvm-additional-arguments` 配置属性，以使 JVM 在启动时监听调试端口。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "The exact configuration is:"
msgstr "具体配置如下"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Other base images might provide launch scripts that enable debugging when an environment variable is set, in which case you would set than environment variable when launching the container."
msgstr "其他基本映像可能会提供启动脚本，在设置环境变量时启用调试功能，在这种情况下，你需要在启动容器时设置环境变量。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Custom Entrypoint"
msgstr "自定义入口点"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "The `quarkus.jib.jvm-entrypoint` configuration property can be used to completely override the container entry point and can thus be used to either hard code the JVM debug configuration or point to a script that handles the details."
msgstr "`quarkus.jib.jvm-entrypoint` 配置属性可用于完全覆盖容器入口点，因此可用于硬编码 JVM 调试配置或指向处理细节的脚本。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "For example, if the base images `ubi8/openjdk-11-runtime`, `ubi8/openjdk-17-runtime` or  `ubi8/openjdk-21-runtime` are used to build the container, the entry point can be hard-coded on the application properties file."
msgstr "例如，如果使用基础映像 `ubi8/openjdk-11-runtime` 、 `ubi8/openjdk-17-runtime` 或 `ubi8/openjdk-21-runtime` 来构建容器，则可以在应用程序属性文件中硬编码入口点。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Example application.properties"
msgstr "应用程序.properties 示例"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Or a custom start-up script can be created and referenced on the properties file. This approach works better if there's a need to set application params using environment variables:"
msgstr "或者创建自定义启动脚本，并在属性文件中引用。如果需要使用环境变量设置应用程序参数，这种方法效果更好："

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Example src/main/jib/home/jboss/run-java.sh"
msgstr "示例 src/main/jib/home/jboss/run-java.sh"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "`/home/jboss` is the WORKDIR for all quarkus binaries in the base images `ubi8/openjdk-11-runtime`, `ubi8/openjdk-17-runtime` and `ubi8/openjdk-21-runtime` (https://catalog.redhat.com/software/containers/ubi8/openjdk-17/618bdbf34ae3739687568813?container-tabs=dockerfile[Dockerfile for ubi8/openjdk-17-runtime, window=\"_blank\"])"
msgstr "`/home/jboss` 是基础镜像 、 和 中所有 quarkus 二进制文件的工作目录（ `ubi8/openjdk-11-runtime` `ubi8/openjdk-17-runtime` `ubi8/openjdk-21-runtime` link:https://catalog.redhat.com/software/containers/ubi8/openjdk-17/618bdbf34ae3739687568813?container-tabs=dockerfile[ubi8/openjdk-17-runtime 的 Dockerfile] ）。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Multi-module projects and layering"
msgstr "多模块项目和分层"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"When building a multi-module project containing a Quarkus application as one module and various supporting project dependencies as other modules,\n"
"Quarkus supports placing these supporting modules in a separate container image layer from the rest of the application dependencies, with the expectation\n"
"that these supporting modules will change more frequently than the regular application dependencies - thus making a rebuild faster if the\n"
"application dependencies have not changed."
msgstr "在构建一个多模块项目（其中一个模块包含 Quarkus 应用程序，其他模块包含各种支持项目的依赖项）时，Quarkus 支持将这些支持模块放置在一个独立的容器映像层中，与应用程序的其他依赖项分开，预计这些支持模块的变化频率将高于常规应用程序依赖项--因此，如果应用程序依赖项没有变化，重建速度会更快。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"To enable this feature, the property `quarkus.bootstrap.workspace-discovery` needs to be set to `true` either as a system property\n"
"when invoking the build tool, either as a build tool property. Setting this property in `application.properties` will **not** work because\n"
"this property needs to be known very early on in the build process."
msgstr "要启用此功能，需要在调用构建工具时将 `quarkus.bootstrap.workspace-discovery` 作为系统属性或构建工具属性设置为 `true` 。在 `application.properties` 中设置该属性将 *不起作用* ，因为需要在构建过程的早期就知道该属性。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "AppCDS"
msgstr "AppCDS"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"Quarkus supports generating and including an link:https://docs.oracle.com/en/java/javase/17/docs/specs/man/java.html#application-class-data-sharing[Application Class Data Sharing] archive when generating a container image using Jib.\n"
"See the xref:appcds.adoc[AppCDS documentation] for more details."
msgstr "在使用 Jib 生成容器映像时，Quarkus 支持生成并包含 link:https://docs.oracle.com/en/java/javase/17/docs/specs/man/java.html#application-class-data-sharing[应用类数据共享] 归档。有关详细信息，请参阅 xref:appcds.adoc[AppCDS 文档] 。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Docker"
msgstr "Docker"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "The extension `quarkus-container-image-docker` is using the Docker binary and the generated Dockerfiles under `src/main/docker` in order to perform Docker builds."
msgstr "`quarkus-container-image-docker` 扩展使用 Docker 二进制文件和 `src/main/docker` 下生成的 Dockerfiles 来执行 Docker 构建。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "To use this feature, add the following extension to your project."
msgstr "要使用此功能，请在项目中添加以下扩展。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "The `quarkus-container-image-docker` extension is capable of https://docs.docker.com/buildx/working-with-buildx/#build-multi-platform-images/[creating multi-platform (or multi-arch)] images using https://docs.docker.com/engine/reference/commandline/buildx_build/[`docker buildx build`]. See the `quarkus.docker.buildx.*` configuration items in the <<#DockerOptions,Docker Options>> section below."
msgstr "`quarkus-container-image-docker` 扩展程序能够使用 link:https://docs.docker.com/engine/reference/commandline/buildx_build/[docker buildx build] .请参阅下文 xref:DockerOptions[Docker 选项] 部分的 `quarkus.docker.buildx.*` 配置项。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "`docker buildx build` ONLY supports https://docs.docker.com/engine/reference/commandline/buildx_build/#load[loading the result of a build] to `docker images` when building for a single platform. Therefore, if you specify more than one argument in the `quarkus.docker.buildx.platform` property, the resulting images will not be loaded into `docker images`. If `quarkus.docker.buildx.platform` is omitted or if only a single platform is specified, it will then be loaded into `docker images`."
msgstr "`docker buildx build` 只支持在为单一平台构建时 link:https://docs.docker.com/engine/reference/commandline/buildx_build/#load[将构建结果加载] 到 。因此，如果在 属性中指定多个参数，生成的图像将不会加载到 。如果省略 或只指定了一个平台，则会加载到 中。 `docker images` `quarkus.docker.buildx.platform` `docker images` `quarkus.docker.buildx.platform` `docker images`"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "OpenShift"
msgstr "OpenShift"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"The extension `quarkus-container-image-openshift` is using OpenShift binary builds in order to perform container builds inside the OpenShift cluster.\n"
"The idea behind the binary build is that you just upload the artifact and its dependencies to the cluster and during the build they will be merged to a builder image (defaults to `fabric8/s2i-java`)."
msgstr "`quarkus-container-image-openshift` 扩展使用 OpenShift 二进制构建，以便在 OpenShift 集群内执行容器构建。二进制构建背后的理念是，你只需将工件及其依赖关系上传到集群，然后在构建过程中将它们合并到构建器镜像中（默认为 `fabric8/s2i-java` ）。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "The benefit of this approach, is that it can be combined with OpenShift's `DeploymentConfig` that makes it easy to roll out changes to the cluster."
msgstr "这种方法的好处是，它可以与 OpenShift 的 `DeploymentConfig` 相结合，从而轻松地在集群中推出变更。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"OpenShift builds require creating a `BuildConfig` and two `ImageStream` resources, one for the builder image and one for the output image.\n"
"The creation of such objects is being taken care of by the Quarkus Kubernetes extension."
msgstr "OpenShift 构建需要创建一个 `BuildConfig` 和两个 `ImageStream` 资源，一个用于构建镜像，一个用于输出镜像。Quarkus Kubernetes 扩展负责创建此类对象。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Buildpack"
msgstr "建包"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"The extension `quarkus-container-image-buildpack` is using buildpacks in order to perform container image builds.\n"
"Under the hood buildpacks will use a Docker daemon for the actual build.\n"
"While buildpacks support alternatives to Docker, this extension will only work with Docker."
msgstr "`quarkus-container-image-buildpack` 扩展使用构建包来执行容器镜像构建。在引擎盖下，buildpacks 将使用 Docker 守护进程进行实际构建。虽然 buildpacks 支持 Docker 之外的其他方法，但该扩展只能使用 Docker。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Additionally, the user will have to configure which build image to use (no default image is provided). For example:"
msgstr "此外，用户还必须配置要使用的构建镜像（不提供默认镜像）。例如"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "or for native:"
msgstr "或为本地人："

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "When using the buildpack container image extension it is strongly advised to avoid adding `quarkus.container-image.build=true` in your properties configuration as it might trigger nesting builds within builds. It's preferable to pass it as an option to the build command instead."
msgstr "在使用 buildpack 容器映像扩展时，强烈建议不要在属性配置中添加 `quarkus.container-image.build=true` ，因为这可能会触发构建中的嵌套构建。最好将其作为选项传递给构建命令。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Building"
msgstr "建筑"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "To build a container image for your project, `quarkus.container-image.build=true` needs to be set using any of the ways that Quarkus supports."
msgstr "要为项目构建容器映像，需要使用 Quarkus 支持的任何一种方式设置 `quarkus.container-image.build=true` 。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "If you ever want to build a native container image and already have an existing native image you can set `-Dquarkus.native.reuse-existing=true` and the native image build will not be re-run."
msgstr "如果你想构建原生容器镜像，而现有的原生镜像已经存在，你可以设置 `-Dquarkus.native.reuse-existing=true` ，这样原生镜像的构建就不会重新运行了。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Using @QuarkusIntegrationTest"
msgstr "使用 @QuarkusIntegrationTest"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "To run tests on the resulting image, `quarkus.container-image.build=true` needs to be set using any of the ways that Quarkus supports."
msgstr "要在生成的图像上运行测试，需要使用 Quarkus 支持的任何方式设置 `quarkus.container-image.build=true` 。"

#: _versions/3.8/guides/container-image.adoc
msgid "Maven"
msgstr "Maven"

#: _versions/3.8/guides/container-image.adoc
msgid "Gradle"
msgstr "Gradle"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Pushing"
msgstr "推动"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "To push a container image for your project, `quarkus.container-image.push=true` needs to be set using any of the ways that Quarkus supports."
msgstr "要为项目推送容器映像，需要使用 Quarkus 支持的任何方式设置 `quarkus.container-image.push=true` 。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "If no registry is set (using `quarkus.container-image.registry`) then `docker.io` will be used as the default."
msgstr "如果没有设置注册表（使用 `quarkus.container-image.registry` ），则 `docker.io` 将作为默认设置。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Selecting among multiple extensions"
msgstr "从多个扩展名中选择"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "It does not make sense to use multiple extension as part of the same build. When multiple container image extensions are present, an error will be raised to inform the user. The user can either remove the unneeded extensions or select one using `application.properties`."
msgstr "在同一构建过程中使用多个扩展是不合理的。当出现多个容器映像扩展时，系统将提示错误并通知用户。用户可以删除不需要的扩展，或使用 `application.properties` 选择其中一个。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "For example, if both `container-image-docker` and `container-image-openshift` are present and the user needs to use `container-image-docker`:"
msgstr "例如，如果 `container-image-docker` 和 `container-image-openshift` 都存在，而用户需要使用 `container-image-docker` ："

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Integrating with `systemd-notify`"
msgstr "与 `systemd-notify`"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "If you are building a container image in order to deploy your Quarkus application as a Linux service with Podman and Systemd, you might want to consider including the https://quarkiverse.github.io/quarkiverse-docs/quarkus-systemd-notify/dev/index.html[Quarkus Systemd Notify Extension] as part of your application, with:"
msgstr "如果您正在构建容器映像，以便使用 Podman 和 Systemd 将您的 Quarkus 应用程序部署为 Linux 服务，您可能需要考虑将 link:https://quarkiverse.github.io/quarkiverse-docs/quarkus-systemd-notify/dev/index.html[Quarkus Systemd 通知扩展] 作为应用程序的一部分，并使用"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Customizing"
msgstr "定制"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "The following properties can be used to customize the container image build process."
msgstr "以下属性可用于自定义容器映像构建过程。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Container Image Options"
msgstr "容器图像选项"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Using CI Environments"
msgstr "使用 CI 环境"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"Various CI environments provide a ready to use container-image registry which can be combined with the container-image Quarkus extensions in order to\n"
"effortlessly create and push a Quarkus application to said registry."
msgstr "各种 CI 环境都提供了现成可用的容器镜像注册表，可以将其与容器镜像 Quarkus 扩展结合起来，从而毫不费力地创建 Quarkus 应用程序并将其推送到上述注册表中。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid ""
"For example, https://gitlab.com/[GitLab] provides such a registry and in the provided CI environment,\n"
"makes available the `CI_REGISTRY_IMAGE` environment variable\n"
"(see GitLab's https://docs.gitlab.com/ee/ci/variables/[documentation]) for more information), which can be used in Quarkus like so:"
msgstr "例如， link:https://gitlab.com/[GitLab] 提供了这样一个注册表，并在所提供的 CI 环境中提供了 `CI_REGISTRY_IMAGE` 环境变量（更多信息请参阅 GitLab link:https://docs.gitlab.com/ee/ci/variables/[文档] ），Quarkus 可以这样使用它："

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "See xref:config-reference.adoc#with-environment-variables[this] for more information on how to combine properties with environment variables."
msgstr "有关如何将属性与环境变量相结合的更多信息，请参阅 xref:config-reference.adoc#with-environment-variables[此处] 。"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Jib Options"
msgstr "摇臂选项"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "In addition to the generic container image options, the `container-image-jib` also provides the following options:"
msgstr "除了通用容器映像选项外， `container-image-jib` 还提供以下选项："

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-1\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-1\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "Docker Options"
msgstr "Docker 选项"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "In addition to the generic container image options, the `container-image-docker` also provides the following options:"
msgstr "除了通用容器映像选项外， `container-image-docker` 还提供以下选项："

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-2\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-2\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "OpenShift  Options"
msgstr "OpenShift 选项"

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "In addition to the generic container image options, the `container-image-openshift` also provides the following options:"
msgstr "除了通用容器映像选项外， `container-image-openshift` 还提供以下选项："

#: _versions/3.8/guides/container-image.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-3\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时覆盖 <input type=\"search\" id=\"config-search-3\" placeholder=\"FILTER CONFIGURATION\" disabled>"
