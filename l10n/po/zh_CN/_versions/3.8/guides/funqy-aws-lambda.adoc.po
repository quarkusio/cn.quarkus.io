msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Funqy AWS Lambda Binding"
msgstr "Funqy AWS Lambda 绑定"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "The guide walks through quickstart code to show you how you can deploy Funqy functions to AWS Lambda."
msgstr "本指南通过快速入门代码向您展示如何将 Funqy 函数部署到 AWS Lambda。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"Funqy functions can be deployed using the AWS Lambda Java Runtime, or you can build a native executable and use\n"
"Lambda Custom Runtime if you want a smaller memory footprint and faster cold boot startup time."
msgstr "可以使用 AWS Lambda Java 运行时部署 Funqy 函数，如果希望内存占用更小、冷启动启动时间更快，也可以构建本地可执行文件并使用 Lambda 自定义运行时。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Read about xref:funqy.adoc[Funqy Basics].  This is a short read!"
msgstr "了解 xref:funqy.adoc[Funqy 基础知识] 。这是一篇短文！"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "https://aws.amazon.com[An Amazon AWS account]"
msgstr "link:https://aws.amazon.com[亚马逊 AWS 账户]"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"
msgstr "link:https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-install.html[AWS CLI]"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI], for local testing"
msgstr "link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI] ，用于本地测试"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Funqy AWS Lambdas build off of our xref:aws-lambda.adoc[Quarkus AWS Lambda support]."
msgstr "Funqy AWS Lambdas 基于我们的 xref:aws-lambda.adoc[Quarkus AWS Lambda 支持] 。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Installing AWS bits"
msgstr "安装AWS位"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid ""
"Installing all the AWS bits is probably the most difficult thing about this guide.  Make sure that you follow all the steps\n"
"for installing AWS CLI."
msgstr "安装所有AWS位可能是本指南中最困难的事情。请确保你遵循安装AWS CLI的所有步骤。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "The Quickstart"
msgstr "快速入门"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库可使用命令： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[压缩包] 。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "The solution is located in the `funqy-amazon-lambda-quickstart` link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart[directory]."
msgstr "解决方案位于 `funqy-amazon-lambda-quickstart` link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart[目录] 中。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "The Code"
msgstr "守则"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"There is nothing special about the code and more importantly nothing AWS specific.  Funqy functions can be deployed to many\n"
"environments and AWS Lambda is one of them.  The Java code is actually the same exact code as the link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[funqy-http-quickstart]."
msgstr "代码并没有什么特别之处，更重要的是，它并不针对 AWS。Funqy 函数可以部署到许多环境中，AWS Lambda 就是其中之一。Java 代码实际上与 link:{quickstarts-tree-url}/funqy-quickstarts/funqy-http-quickstart[funqy-http-quickstart] 的代码完全相同。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Choose Your Function"
msgstr "选择功能"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"Only one Funqy function can be exported per AWS Lambda deployment.  If you have multiple functions defined\n"
"within your project, then you will need to choose the function within your Quarkus `application.properties`:"
msgstr "每个 AWS Lambda 部署只能导出一个 Funqy 函数。如果在项目中定义了多个函数，则需要在 Quarkus `application.properties` 中选择函数："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "You can see how the quickstart has done it within its own link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/main/resources/application.properties[application.properties]."
msgstr "您可以看到 quickstart 是如何在自己的 link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/main/resources/application.properties[application.properties] 中实现这一点的。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Alternatively, you can set the `QUARKUS_FUNQY_EXPORT` environment variable when you create the AWS Lambda using the `aws` cli."
msgstr "或者，也可以在使用 `aws` cli 创建 AWS Lambda 时设置 `QUARKUS_FUNQY_EXPORT` 环境变量。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Deploy to AWS Lambda Java Runtime"
msgstr "部署到AWS Lambda Java Runtime"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"There are a few steps to get your Funqy function running on AWS Lambda.  The quickstart maven project generates a helpful script to\n"
"create, update, delete, and invoke your functions for pure Java and native deployments.  This script is generated\n"
"at build time."
msgstr "在 AWS Lambda 上运行 Funqy 函数需要几个步骤。quickstart maven 项目会生成一个有用的脚本，用于创建、更新、删除和调用纯 Java 和本地部署的函数。该脚本在构建时生成。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Build and Deploy"
msgstr "构建和部署"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Build the project using Maven:"
msgstr "使用 Maven 构建项目："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "This will compile and package your code."
msgstr "这将对你的代码进行编译和打包。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Create an Execution Role"
msgstr "创建一个执行角色"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid ""
"View the https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html[Getting Started Guide] for deploying\n"
"a lambda with AWS CLI.  Specifically, make sure you have created an `Execution Role`.  You will need to define\n"
"a `LAMBDA_ROLE_ARN` environment variable in your profile or console window,  Alternatively, you can edit\n"
"the `manage.sh` script that is generated by the build and put the role value directly there:"
msgstr "查看使用AWS CLI部署lambda的 link:https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-awscli.html[入门指南] 。具体来说，确保你已经创建了一个 `Execution Role` 。你需要在你的配置文件或控制台窗口中定义一个 `LAMBDA_ROLE_ARN` 环境变量，或者，你可以编辑由构建生成的 `manage.sh` 脚本，并把角色值直接放在那里："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Extra Build Generated Files"
msgstr "构建额外生成的文件"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"After you run the build, there are a few extra files generated by the `quarkus-funqy-amazon-lambda` extension.  These files\n"
"are in the build directory:  `target/` for maven, `build/` for gradle."
msgstr "运行构建后， `quarkus-funqy-amazon-lambda` 扩展会生成一些额外的文件。这些文件位于构建目录中： `target/` 用于 maven， `build/` 用于 gradle。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "`function.zip` - lambda deployment file"
msgstr "`function.zip` - lambda 部署文件"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "`manage.sh` - wrapper around aws lambda cli calls"
msgstr "`manage.sh` - 对 aws lambda cli 调用的包装"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "`bootstrap-example.sh` - example bootstrap script for native deployments"
msgstr " `bootstrap-example.sh` - 用于原生部署的bootstrap脚本示例"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "`sam.jvm.yaml` - (optional) for use with sam cli and local testing"
msgstr " `sam.jvm.yaml` - (可选)用于sam cli和本地测试"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "`sam.native.yaml` - (optional) for use with sam cli and native local testing"
msgstr " `sam.native.yaml` - (可选)，用于Sam cli和原生本地测试"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Create the function"
msgstr "创建函数"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"The `target/manage.sh` script is for managing your Funqy function using the AWS Lambda Java runtime.  This script is provided only for\n"
"your convenience. Examine the output of the `manage.sh` script if you want to learn what aws commands are executed\n"
"to create, delete, and update your functions."
msgstr "`target/manage.sh` 脚本用于使用 AWS Lambda Java 运行时管理您的 Funqy 函数。提供此脚本只是为了方便您使用。如果您想了解创建、删除和更新函数时执行了哪些 aws 命令，请查看 `manage.sh` 脚本的输出。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "`manage.sh` supports four operation:  `create`, `delete`, `update`, and `invoke`."
msgstr "`manage.sh` 支持四种操作： `create`， `delete`， `update` 和 `invoke` 。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"To verify your setup, that you have the AWS CLI installed, executed aws configure for the AWS access keys,\n"
"and set up the `LAMBDA_ROLE_ARN` environment variable (as described above), please execute `manage.sh` without any parameters.\n"
"A usage statement will be printed to guide you accordingly."
msgstr "要验证您的设置，即已安装 AWS CLI、执行 aws configure 获取 AWS 访问密钥并设置了 `LAMBDA_ROLE_ARN` 环境变量（如上所述），请执行 `manage.sh` （不带任何参数）。系统将打印一份使用说明，为您提供相应指导。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "To see the `usage` statement, and validate AWS configuration:"
msgstr "要查看  `用法`  声明，并验证AWS配置："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "You can `create` your function using the following command:"
msgstr "你可以使用以下命令 `创建` 你的函数："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "or if you do not have `LAMBDA_ROLE_ARN` already defined in this shell:"
msgstr "或者如果在这个shell中没有定义 `LAMBDA_ROLE_ARN` ："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"Do not change the handler switch.  This must be hardcoded to `io.quarkus.funqy.lambda.FunqyStreamHandler::handleRequest`.\n"
"This special handler is Funqy's integration point with AWS Lambda."
msgstr "不要更改处理程序开关。必须硬编码为 `io.quarkus.funqy.lambda.FunqyStreamHandler::handleRequest` 。这个特殊处理程序是 Funqy 与 AWS Lambda 的集成点。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid ""
"If there are any problems creating the function, you must delete it with the `delete` function before re-running\n"
"the `create` command."
msgstr "如果在创建函数时有任何问题，你必须在重新运行 `create` 命令之前使用 `delete` 函数来删除它。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Commands may also be stacked:"
msgstr "命令也可以是叠加的："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Invoke the function"
msgstr "调用函数"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Use the `invoke` command to invoke your function."
msgstr "使用 `invoke` 命令来调用你的函数。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"The example function takes input passed in via the `--payload` switch which points to a json file\n"
"in the root directory of the project."
msgstr "示例函数通过 `--payload` 开关接收输入，该开关指向项目根目录下的 json 文件。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "The function can also be invoked locally with the SAM CLI like this:"
msgstr "也可以使用 SAM CLI 在本地调用该函数，如下所示："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "If you are working with your native image build, simply replace the template name with the native version:"
msgstr "如果你正在使用原生镜像构建，只需将模板名称替换为原生版本："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Update the function"
msgstr "更新功能"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"You can update the Java code as you see fit.  Once you've rebuilt, you can redeploy your function by executing the\n"
"`update` command."
msgstr "您可以根据需要更新 Java 代码。重建完成后，您可以执行 `update` 命令重新部署您的函数。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Deploy to AWS Lambda Custom (native) Runtime"
msgstr "部署到AWS Lambda Custom (native) Runtime"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"If you want a lower memory footprint and faster initialization times for your Funqy function, you can compile your Java\n"
"code to a native executable.  Just make sure to rebuild your project with the `-Dnative` switch."
msgstr "如果您希望 Funqy 函数占用更少内存，初始化时间更快，可以将 Java 代码编译为本地可执行文件。只需确保使用 `-Dnative` 开关重建项目即可。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "For Linux hosts execute:"
msgstr "对于 Linux 主机执行"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"If you are building on a non-Linux system, you will need to also pass in a property instructing Quarkus to use a Docker build as Amazon\n"
"Lambda requires Linux binaries.  You can do this by passing this property to your build:\n"
"`-Dnative-image.docker-build=true`.  This requires you to have Docker installed locally, however."
msgstr "如果在非 Linux 系统上构建，还需要传递一个属性，指示 Quarkus 使用 Docker 构建，因为 Amazon Lambda 需要 Linux 二进制文件。为此，你可以在构建时传递以下属性： `-Dnative-image.docker-build=true` 。不过，这需要你在本地安装 Docker。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"Either of these commands will compile and create a native executable.  It also generates a zip file `target/function.zip`.\n"
"This zip file contains your native executable image renamed to `bootstrap`.  This is a requirement of the AWS Lambda\n"
"Custom (Provided) Runtime."
msgstr "其中任一命令都将编译并生成本地可执行文件。它还会生成一个 zip 文件 `target/function.zip` 。该 zip 文件包含重命名为 `bootstrap` 的本地可执行文件映像。这是 AWS Lambda 自定义（提供）运行时的要求。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid ""
"The instructions here are exactly as above with one change:  you'll need to add `native` as the first parameter to the\n"
"`manage.sh` script:"
msgstr "这里的说明与上面的完全一样，但有一个变化：你需要将 `native` 作为第一个参数添加到 `manage.sh` 脚本中："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid ""
"As above, commands can be stacked.  The only requirement is that `native` be the first parameter should you wish\n"
"to work with native image builds.  The script will take care of the rest of the details necessary to manage your native\n"
"image function deployments."
msgstr "如上所述，命令可以叠加。如果你想使用原生镜像构建，唯一的要求是 `native` 是第一个参数。该脚本将处理管理你原生镜像功能部署所需的其余细节。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"Examine the output of the `manage.sh` script if you want to learn what aws commands are executed\n"
"to create, delete, and update your functions."
msgstr "如果想了解创建、删除和更新函数时执行了哪些 aws 命令，请查看 `manage.sh` 脚本的输出。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid ""
"One thing to note about the create command for native is that the `aws lambda create-function`\n"
"call must set a specific environment variable:"
msgstr "对于原生的创建命令，需要注意的一点是， `aws lambda create-function` 调用必须设置一个特定的环境变量："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Examine the POM"
msgstr "检查POM"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"There is nothing special about the POM other than the inclusion of the `quarkus-funqy-amazon-lambda` extension\n"
"as a dependency.  The extension automatically generates everything you might need for your lambda deployment."
msgstr "除了将 `quarkus-funqy-amazon-lambda` 扩展作为依赖项之外，该 POM 并无特别之处。该扩展会自动生成 lambda 部署所需的一切。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid "Integration Testing"
msgstr "集成测试"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"Funqy AWS Lambda support leverages the Quarkus AWS Lambda test framework so that you can unit tests your Funqy functions.\n"
"This is true for both JVM and native modes.\n"
"This test framework provides similar functionality to the SAM CLI, without the overhead of Docker."
msgstr "Funqy AWS Lambda 支持利用 Quarkus AWS Lambda 测试框架，因此您可以对 Funqy 函数进行单元测试。这适用于 JVM 和本地模式。该测试框架提供与 SAM CLI 类似的功能，但没有 Docker 的开销。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"If you open up link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java]\n"
"you'll see that the test replicates the AWS execution environment."
msgstr "如果打开 link:{quickstarts-tree-url}/funqy-quickstarts/funqy-amazon-lambda-quickstart/src/test/java/org/acme/funqy/FunqyTest.java[FunqyTest.java] ，你会发现该测试复制了 AWS 的执行环境。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Testing with the SAM CLI"
msgstr "使用SAM CLI进行测试"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"The https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI]\n"
"allows you to run your functions locally on your laptop in a simulated Lambda environment.  This requires\n"
"https://www.docker.com/products/docker-desktop[docker] to be installed.  This is an optional approach should you choose\n"
"to take advantage of it.  Otherwise, the Quarkus JUnit integration should be sufficient for most of your needs."
msgstr "link:https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-cli-install.html[AWS SAM CLI] 允许您在模拟的 Lambda 环境中，在笔记本电脑上本地运行您的功能。这需要安装 link:https://www.docker.com/products/docker-desktop[docker] 。这是一种可选方法，你可以选择利用它。否则，Quarkus JUnit 集成应能满足您的大部分需求。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "A starter template has been generated for both JVM and native execution modes."
msgstr "已经为JVM和原生执行模式生成了一个启动模板。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"Run the following SAM CLI command to locally test your function, passing the appropriate SAM `template`.\n"
"The `event` parameter takes any JSON file, in this case the sample `payload.json`."
msgstr "运行以下 SAM CLI 命令，传入适当的 SAM `template` ，对函数进行本地测试。 `event` 参数接收任意 JSON 文件，本例中为示例 `payload.json` 。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "The native image can also be locally tested using the `sam.native.yaml` template:"
msgstr "本地镜像也可以使用  `sam.native.yaml`  模板进行本地测试："

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Modifying `function.zip`"
msgstr "修改 `function.zip` "

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"There are times when you may have to add additional entries to the `function.zip` lambda deployment that is generated\n"
"by the build.  To do this, create a `zip.jvm` or `zip.native` directory within `src/main`.\n"
"Create `zip.jvm/` if you are doing a pure Java.  `zip.native/` if you are doing a native deployment."
msgstr "有时，您可能需要在构建生成的 `function.zip` lambda 部署中添加其他条目。为此，请在 `src/main` 中创建 `zip.jvm` 或 `zip.native` 目录。如果是纯 Java 部署，请创建 `zip.jvm/` 。如果是本地部署，请创建 `zip.native/` 。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Any you files and directories you create under your zip directory will be included within `function.zip`"
msgstr "你在zip目录下创建的任何文件和目录都将包括在 `function.zip` 内"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "Custom `bootstrap` script"
msgstr "自定义 `bootstrap` 脚本"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
#, fuzzy
msgid ""
"There are times you may want to set specific system properties or other arguments when lambda invokes\n"
"your native Funqy deployment.  If you include a `bootstrap` script file within\n"
"`zip.native`, the Funqy extension will automatically rename the executable to `runner` within\n"
"`function.zip` and set the unix mode of the `bootstrap` script to executable."
msgstr "有时，您可能希望在 lambda 调用本地 Funqy 部署时设置特定的系统属性或其他参数。如果在 `zip.native` 中包含 `bootstrap` 脚本文件，Funqy 扩展会自动将 `function.zip` 中的可执行文件重命名为 `runner` ，并将 `bootstrap` 脚本的 unix 模式设置为可执行。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "The native executable must be referenced as `runner` if you include a custom `bootstrap` script."
msgstr "如果你包含一个自定义的 `bootstrap` 脚本，那么本地可执行文件必须被引用为 `runner` 。"

#: _versions/3.8/guides/funqy-aws-lambda.adoc
msgid "The extension generates an example script within `target/bootstrap-example.sh`."
msgstr "扩展会在 `target/bootstrap-example.sh` 中生成了一个示例脚本。"
