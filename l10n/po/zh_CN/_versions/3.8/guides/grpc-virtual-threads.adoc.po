msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "Quarkus Virtual Thread support for gRPC services"
msgstr "Quarkus 虚拟线程支持 gRPC 服务"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "This guide explains how to benefit from Java virtual threads when implementing a gRPC service."
msgstr "本指南介绍了在实施 gRPC 服务时如何利用 Java 虚拟线程。"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid ""
"This guide focuses on using virtual threads with the gRPC extensions.\n"
"Please refer to xref:virtual-threads.adoc[Writing simpler reactive REST services with Quarkus Virtual Thread support]\n"
"to read more about Java virtual threads in general and the Quarkus Virtual Thread support."
msgstr "本指南的重点是在 gRPC 扩展中使用虚拟线程。请参阅《 xref:virtual-threads.adoc[使用 Quarkus 虚拟线程支持编写更简单的反应式 REST 服务》（Writing simpler reactive REST services with] Quarkus Virtual Thread xref:virtual-threads.adoc[support] ），了解有关 Java 虚拟线程和 Quarkus 虚拟线程支持的更多信息。"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid ""
"By default, the Quarkus gRPC extension invokes service methods on an event-loop thread.\n"
"See the xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture documentation] for further details on this topic.\n"
"But, you can also use the link:{blocking_annotation}[@Blocking] annotation to indicate that the service is _blocking_ and should be run on a worker thread."
msgstr "默认情况下，Quarkus gRPC 扩展会在事件循环线程上调用服务方法。有关此主题的更多详情，请参阅 xref:quarkus-reactive-architecture.adoc[Quarkus Reactive Architecture 文档] 。不过，你也可以使用 link:{blocking_annotation}[@Blocking] 注解来表示服务是 _阻塞_ 的，应该在工作线程上运行。"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "The idea behind Quarkus Virtual Thread support for gRPC services is to offload the service method invocation on virtual threads, instead of running it on an event-loop thread or a worker thread."
msgstr "Quarkus 虚拟线程支持 gRPC 服务的理念是在虚拟线程上卸载服务方法调用，而不是在事件循环线程或工作线程上运行。"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid ""
"To enable virtual thread support on a service method, simply add the link:{runonvthread}[@RunOnVirtualThread] annotation to the method.\n"
"If the JDK is compatible (Java 19 or later versions - we recommend 21+) then the invocation will be offloaded to a new virtual thread.\n"
"It will then be possible to perform blocking operations without blocking the platform thread upon which the virtual thread is mounted."
msgstr "要在服务方法中启用虚拟线程支持，只需在方法中添加 link:{runonvthread}[@RunOnVirtualThread] 注解即可。如果 JDK 兼容（Java 19 或更高版本--我们推荐 21+），那么调用将被卸载到一个新的虚拟线程。这样就可以执行阻塞操作，而不会阻塞虚拟线程所在的平台线程。"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "Configuring gRPC services to use virtual threads"
msgstr "配置 gRPC 服务以使用虚拟线程"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid ""
"Let's see an example of how to implement a gRPC service using virtual threads.\n"
"First, make sure to have the gRPC extension dependency in your build file:"
msgstr "让我们来看一个如何使用虚拟线程实现 gRPC 服务的示例。首先，确保在构建文件中包含 gRPC 扩展依赖："

#: _versions/3.8/guides/grpc-virtual-threads.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "You also need to make sure that you are using Java 19 or later (we recommend 21+), this can be enforced in your `pom.xml` file with the following:"
msgstr "您还需要确保您使用的是 Java 19 或更高版本（我们建议使用 21+ 版本），这可以在 `pom.xml` 文件中通过以下方式实现："

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "Run your application with:"
msgstr "运行应用程序："

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "or to use the Quarkus Dev mode, insert the following to the `quarkus-maven-plugin` configuration:"
msgstr "或要使用 Quarkus Dev 模式，请在 `quarkus-maven-plugin` 配置中插入以下内容："

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "Then you can start using the annotation `@RunOnVirtualThread` in your service implementation:"
msgstr "然后，您就可以开始在服务实现中使用注解 `@RunOnVirtualThread` ："

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "Limitations"
msgstr "局限性"

#: _versions/3.8/guides/grpc-virtual-threads.adoc
#, fuzzy
msgid "The gRPC methods receiving _streams_, such as a `Multi` cannot use `@RunOnVirtualThread`, as the method must not be blocking and produce its result (`Multi` or `Uni`) immediately."
msgstr "接收 _数据流_ （如 `Multi` ）的 gRPC 方法不能使用 `@RunOnVirtualThread` ，因为该方法必须不阻塞并立即产生结果（ `Multi` 或 `Uni` ）。"
