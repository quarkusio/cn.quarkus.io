msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Automate Quarkus deployment with Ansible"
msgstr "使用 Ansible 自动部署 Quarkus"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Let’s see how to build and deploy a Quarkus app using https://docs.ansible.com/ansible/latest/index.html[Ansible]. We’ll see how we can automate the entire process, from the code checkout to the application compilation using Maven and then its deployment and start of the service, as a https://systemd.io/[systemd service], on the target system using Ansible and its collection for Quarkus."
msgstr "让我们看看如何使用 link:https://docs.ansible.com/ansible/latest/index.html[Ansible] 构建和部署 Quarkus 应用程序。我们将看到如何自动化整个流程，从代码检查到使用 Maven 编译应用程序，然后使用 Ansible 及其 Quarkus 集合在目标系统上部署并启动服务（作为 link:https://systemd.io/[systemd 服务] ）。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "The first part, the application code checkout, compilation and packaging on the Ansible (where Ansible runs). We’ll use the getting-started sample application provided in its link:{quickstarts-tree-url}/getting-started[Quarkus QuickStarts directory] as a base for this tutorial. We’ll also leverage the https://galaxy.ansible.com/middleware_automation/quarkus[Quarkus collection] for Ansible, an extension for Ansible that alleviates the boilerplate required and to quickly build and deploy a Quarkus using Ansible."
msgstr "第一部分，在 Ansible（运行 Ansible 的地方）上检查、编译和打包应用程序代码。我们将使用 link:{quickstarts-tree-url}/getting-started[Quarkus QuickStarts 目录] 中提供的启动示例应用程序作为本教程的基础。我们还将利用 Ansible 的 link:https://galaxy.ansible.com/middleware_automation/quarkus[Quarkus 集合] ，它是 Ansible 的一个扩展，可以减少所需的模板，并使用 Ansible 快速构建和部署 Quarkus。"

#: _versions/3.8/guides/ansible.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "You'll need to https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html[install Ansible] on your workstation. Once this is done, you can install this extension for Ansible dedicated to Quarkus with the following command:"
msgstr "你需要在工作站上 link:https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html[安装 Ansible] 。安装完成后，可以使用以下命令为 Quarkus 安装 Ansible 扩展："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "The Ansible collection we just installed only supports RHEL, Fedora, and other Linux distribution using RPMs. Ansible defines these as \"RedHat family\". Using the content on other platforms (Windows, Debian, Ubuntu, ...), while not impossible, will require a few adjustments."
msgstr "我们刚刚安装的 Ansible 套件只支持 RHEL、Fedora 和其他使用 RPM 的 Linux 发行版。Ansible 将其定义为 \"RedHat 系列\"。在其他平台（Windows、Debian、Ubuntu......）上使用这些内容并非不可能，但需要做一些调整。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Inventory file"
msgstr "库存文件"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "If you are not familiar with Ansible, please note that the inventory must be provided for the command above to run properly. This is a simple text file providing the information Ansible requires on the target system it manages. Please refer to the Ansible documentation for more information about https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html[Ansible inventory]."
msgstr "如果您对 Ansible 不熟悉，请注意必须提供清单才能正常运行上述命令。这是一个简单的文本文件，提供 Ansible 所需的目标系统信息。有关 Ansible 清单的更多信息，请参阅 link:https://docs.ansible.com/ansible/latest/inventory_guide/intro_inventory.html[Ansible] 文档。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "To follow the tutorial, you may want to use only one machine (localhost) and skip the ssh authentication setup. This can be easily achieved by using the following inventory file:"
msgstr "要学习本教程，您可能只想使用一台机器（localhost），并跳过 ssh 身份验证设置。使用以下清单文件即可轻松实现这一目的："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Root access on target system"
msgstr "目标系统的 root 访问权限"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "A few tasks performed by the Ansible collection for Quarkus will require administrative privileges on the target (create a group and user account, install packages). If Ansible does run as root, you'll need to add the following options to the `ansible-playbook` command line:"
msgstr "Quarkus 的 Ansible 套件执行的一些任务需要目标的管理权限（创建组和用户账户、安装软件包）。如果 Ansible 以根用户身份运行，则需要在 `ansible-playbook` 命令行中添加以下选项："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Tutorial"
msgstr "教程"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "With the Ansible collection installed on the controller, you can already directly use a playbook provided with it to build and deploy your Quarkus application:"
msgstr "在控制器上安装了 Ansible 套件后，你就可以直接使用它提供的 playbook 来构建和部署你的 Quarkus 应用程序了："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "The four parameters provided to the playbook are pretty self-explanatory. The first one, `app_name`, is the name of the application, in our case, it's just `getting-started`. The second one, `quarkus_app_repo_url`, is the URL to the Git repository to checkout. The third one is optional, `quarkus_app_source_folder` specifies, if needed, which subfolder from the repo the source code is located. Finally, the fourth one indicates where to install the application on the target."
msgstr "为 playbook 提供的四个参数不言自明。第一个参数 `app_name` 是应用程序的名称，在我们的例子中就是 `getting-started` 。第二个参数 `quarkus_app_repo_url` 是要检出的 Git 仓库的 URL。第三个是可选项， `quarkus_app_source_folder` ，根据需要指定源代码位于仓库的哪个子文件夹。最后，第四项指明了在目标机上安装应用程序的位置。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Playbook run"
msgstr "运行游戏手册"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Once the command above has successfully run, you should have an output similar to the one below:"
msgstr "上述命令成功运行后，输出结果应与下图类似："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "The Ansible collection for Quarkus does all the `heavy lifting` here. First, it checks out the code from Github and builds the application from its sources. It also ensures the system used for this step does have the required OpenJDK installed. By default, the application is built on the localhost (the Ansible controller), but it can be performed on a remote system if needed. Once the application is built, the collection will take care of the deployment."
msgstr "在这里，Quarkus 的 Ansible 集合完成了所有 `heavy lifting` 的工作。首先，它从 Github 上检查代码，并从源代码中构建应用程序。它还会确保用于此步骤的系统安装了所需的 OpenJDK。默认情况下，应用程序在本地主机（Ansible 控制器）上构建，但也可根据需要在远程系统上构建。应用程序构建完成后，集合将负责部署。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Here again, it checks that the appropriate OpenJDK is available on the target system. Then we ensure that the required user and group exist on the target. This is recommended mostly to be able to run the Quarkus app with a regular user, rather than with the root account."
msgstr "在这里，它会再次检查目标系统上是否有相应的 OpenJDK。然后，我们要确保目标系统上存在所需的用户和组。建议这样做，主要是为了能用普通用户而不是 root 账户运行 Quarkus 应用程序。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "With those requirements in place, the jar can be deployed on the target, along with the required configuration for the app integration into systemd as a service. Any change to the systemd configuration requires reloading its daemon, which the collection ensures will happen whenever it is needed. With all of that in place, the only thing that remains is to start the service itself, which Ansible will also take care of."
msgstr "在满足这些要求后，就可以在目标机上部署 jar，以及将应用程序集成到 systemd 作为服务的所需配置。对 systemd 配置的任何更改都需要重新加载其守护进程，而程序集可确保在需要时随时进行加载。所有这些都准备就绪后，剩下的就是启动服务本身了，Ansible 也会处理这个问题。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "By default, the Ansible collection for Quarkus will install and use the OpenJDK 17 available in the Yum repositories of the target host (or the controller). If you want to use a different version of OpenJDK, define the following variable:"
msgstr "默认情况下，Quarkus 的 Ansible 套件将安装并使用目标主机（或控制器）的 Yum 仓库中可用的 OpenJDK 17。如果想使用不同版本的 OpenJDK，请定义以下变量："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Validate that deployment was successful"
msgstr "验证部署是否成功"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "For the purpose of this tutorial, you may want to check manually, that the playbook did indeed deployed the app properly. Here is the few ways to do so."
msgstr "在本教程中，您可能需要手动检查播放本是否正确部署了应用程序。下面是几种方法。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "First, because the collection integrated, we can check the status of the service on one of the targets:"
msgstr "首先，由于集合已集成，我们可以检查其中一个目标上的服务状态："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Manually, you can also test if the app is reachable:"
msgstr "您还可以手动测试应用程序是否可以访问："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "We'll see how to automate those validation in the next and last part of this tutorial."
msgstr "我们将在本教程的下一部分，也就是最后一部分，了解如何自动进行这些验证。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Writing a playbook"
msgstr "编写游戏手册"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "Of course, you’ll most likely need to build on this, so you may want to write up your own playbook, rather than just using the one provided by the collection. Below is an example of such playbook:"
msgstr "当然，你很可能需要在此基础上进行扩展，因此你可能需要编写自己的操作手册，而不仅仅是使用程序集提供的操作手册。下面就是这样一个示例："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "To run this playbook, you use again the ansible-playbook command, but providing now the path to the playbook:"
msgstr "要运行这个游戏本，需要再次使用 ansible-playbook 命令，但现在要提供游戏本的路径："

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "You also can automate the validation part we mentioned in the previous section. You can use the https://docs.ansible.com/ansible/latest/collections/ansible/builtin/assert_module.html[ansible.builtin.assert] module and populate the https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_facts_module.html#examples[service facts] to ensure the systemd service of the Quarkus app is running, along with https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html[ansible.builtin.uri] to check that the Quarkus app is accessible."
msgstr "你还可以自动执行上一节提到的验证部分。你可以使用 link:https://docs.ansible.com/ansible/latest/collections/ansible/builtin/assert_module.html[ansible.builtin.assert] 模块并填充 link:https://docs.ansible.com/ansible/latest/collections/ansible/builtin/service_facts_module.html#examples[服务事实] ，确保 Quarkus 应用程序的 systemd 服务正在运行，同时使用 link:https://docs.ansible.com/ansible/latest/collections/ansible/builtin/uri_module.html[ansible.builtin.uri] 检查 Quarkus 应用程序是否可访问。"

#: _versions/3.8/guides/ansible.adoc
#, fuzzy
msgid "And that’s all, folks!"
msgstr "就这样，各位！"
