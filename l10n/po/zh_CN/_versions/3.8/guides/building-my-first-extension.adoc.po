msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Building my first extension"
msgstr "建造我的第一个扩建工程"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"Quarkus extensions enhance your application just as projects dependencies do.\n"
"The role of the extensions is to leverage Quarkus paradigms to integrate seamlessly a library into Quarkus architecture - e.g. do more things at build time.\n"
"This is how you can use your battle-tested ecosystem and take advantage of Quarkus performance and native compilation.\n"
"Go to https://code.quarkus.io/[code.quarkus.io] to get the list of the supported extensions."
msgstr "Quarkus 扩展库就像项目依赖库一样，可以增强你的应用程序。扩展的作用是利用 Quarkus 范式将库无缝集成到 Quarkus 架构中，例如在构建时做更多事情。这就是你如何使用经过实战检验的生态系统，并利用 Quarkus 的性能和本地编译的优势。请访问 link:https://code.quarkus.io/[code.quarkus.io] 获取支持的扩展列表。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"In this guide we are going to develop the *Sample Greeting Extension*.\n"
"The extension will expose a customizable HTTP endpoint which simply greets the visitor."
msgstr "在本指南中，我们将开发 *样本问候扩展* 。该扩展将公开一个可定制的 HTTP 端点，只需问候访客即可。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Disclaimer"
msgstr "免责声明"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"To be sure it's extra clear you don't need an extension to add a Servlet to your application.\n"
"This guide is a simplified example to explain the concepts of extensions development, see the xref:writing-extensions.adoc[full documentation] if you need more information.\n"
"Keep in mind it's not representative of the power of moving things to build time or simplifying the build of native images."
msgstr "请注意，在应用程序中添加 Servlet 不需要扩展。本指南是一个简化示例，用于解释扩展开发的概念，如需更多信息，请参阅 xref:writing-extensions.adoc[完整文档] 。请记住，这并不代表将事情转移到构建时间或简化本地图像构建的能力。"

#: _versions/3.8/guides/building-my-first-extension.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Basic Concepts"
msgstr "基本概念"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "First things first, we will need to start with some basic concepts."
msgstr "首先，我们需要从一些基本概念入手。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "JVM mode vs Native mode"
msgstr "JVM 模式与本地模式"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Quarkus is first and foremost a Java framework, that means you can develop, package and run classic JAR applications, that's what we call *JVM mode*."
msgstr "Quarkus 首先是一个 Java 框架，这意味着你可以开发、打包和运行经典的 JAR 应用程序，这就是我们所说的 *JVM 模式* 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Thanks to https://graalvm.org/[GraalVM] you can compile your Java application into machine specific code (like you do in Go or C++) and that's what we call *Native mode*."
msgstr "借助 link:https://graalvm.org/[GraalVM] ，您可以将 Java 应用程序编译成特定于机器的代码（就像在 Go 或 C++ 中一样），这就是我们所说的 *本地模式* 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The operation of compiling Java bytecode into a native system-specific machine code is named *Ahead of Time Compilation* (aka AoT)."
msgstr "将 Java 字节码编译成本地系统专用机器码的操作被命名为 *超前编译* （又称 AoT）。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "build time vs runtime in classic Java frameworks"
msgstr "经典 Java 框架中的构建时间与运行时间"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The build time corresponds to all the actions you apply to your Java source files to convert them into something runnable (class files, jar/war, native images).\n"
"Usually this stage is composed by the compilation, annotation processing, bytecode generation, etc. At this point, everything is under the developer's scope and control."
msgstr "构建时间对应于您为将 Java 源文件转换为可运行文件（类文件、jar/war、本地映像）而对其进行的所有操作。通常这个阶段由编译、注释处理、字节码生成等组成。此时，一切都在开发人员的控制范围内。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The runtime is all the actions that happen when you execute your application.\n"
"It's obviously focused on starting your business-oriented actions, but it relies on a lot of technical actions like loading libraries and configuration files, scanning the application's classpath, configuring the dependency injection, setting up your Object-Relational Mapping, instantiating your REST controllers, etc."
msgstr "运行时是指执行应用程序时发生的所有操作。显然，运行时侧重于启动面向业务的操作，但也依赖于大量技术操作，如加载库和配置文件、扫描应用程序的类路径、配置依赖注入、设置对象关系映射、实例化 REST 控制器等。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Usually, Java frameworks do their bootstrapping during the runtime before actually starting the application \"Business oriented layer\". During bootstrap, frameworks dynamically collect metadata by scanning the classpath to find configurations, entity definitions, dependency injection binding, etc. in order to instantiate proper objects through reflection. The main consequences are:"
msgstr "通常，Java 框架在实际启动应用程序 \"面向业务层 \"之前，会在运行时进行引导。在引导过程中，框架通过扫描类路径动态收集元数据，查找配置、实体定义、依赖注入绑定等，以便通过反射实例化适当的对象。主要后果有"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Delaying the readiness of your application: you need to wait a couple of seconds before actually serving a business request."
msgstr "延迟应用程序的就绪时间：在实际提供业务请求之前，您需要等待几秒钟。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Having a peak of resource consumption at bootstrap: in a constrained environment, you will need to size the needed resources based on your technical bootstrap needs rather than your actual business needs."
msgstr "启动时资源消耗达到峰值：在受限环境中，您需要根据技术启动需求而非实际业务需求来确定所需资源的大小。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"Quarkus' philosophy is to prevent as much as possible slow and memory intensive dynamic code execution by shifting left these actions and eventually do them during the build time.\n"
"A Quarkus extension is a Java piece of code acting as an adapter layer for your favorite library or technology."
msgstr "Quarkus 的理念是尽可能避免执行缓慢且占用大量内存的动态代码，将这些操作转移到左侧，并最终在构建过程中完成。Quarkus 扩展是一段 Java 代码，作为您最喜欢的库或技术的适配器层。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Description of a Quarkus extension"
msgstr "夸克扩展描述"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "A Quarkus extension consists of two parts:"
msgstr "夸克扩展由两部分组成："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The *runtime module* which represents the capabilities the extension developer exposes to the application's developer (an authentication filter, an enhanced data layer API, etc).\n"
"Runtime dependencies are the ones the users will add as their application dependencies (in Maven POMs or Gradle build scripts)."
msgstr "*运行时模块* ，代表扩展开发者向应用程序开发者提供的功能（身份验证过滤器、增强型数据层 API 等）。运行时依赖项是用户将添加到应用程序中的依赖项（在 Maven POM 或 Gradle 构建脚本中）。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The *deployment module* which is used during the augmentation phase of the build, it describes how to \"deploy\" a library\n"
"following the Quarkus philosophy.\n"
"In other words, it applies all the Quarkus optimizations to your application during the build.\n"
"The deployment module is also where we prepare things for GraalVM's native compilation."
msgstr "*部署模块* 在构建的增强阶段使用，它描述了如何按照 Quarkus 理念 \"部署 \"一个库。换句话说，它会在构建过程中将所有 Quarkus 优化应用到应用程序中。部署模块也是我们为 GraalVM 的本地编译做准备的地方。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"Users should not be adding the deployment modules of extension as application dependencies. The deployment dependencies are resolved by\n"
"Quarkus during the augmentation phase from the runtime dependencies of the application."
msgstr "用户不应将扩展的部署模块添加为应用程序依赖项。在增强阶段，Quarkus 会从应用程序的运行时依赖关系中解决部署依赖关系。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "At this point, you should have understood that most of the magic will happen at the Augmentation build time thanks to the deployment module."
msgstr "说到这里，你应该已经明白，由于部署模块的存在，大部分神奇的事情都将在 Augmentation 构建时发生。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Quarkus Application Bootstrap"
msgstr "Quarkus 应用程序引导"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "There are three distinct bootstrap phases of a Quarkus application."
msgstr "Quarkus 应用程序有三个不同的引导阶段。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"*Augmentation*. During the build time, the Quarkus extensions will load and scan your application's bytecode (including the dependencies) and configuration.\n"
"At this stage, the extension can read configuration files, scan classes for specific annotations, etc.\n"
"Once all the metadata has been collected, the extensions can pre-process the libraries bootstrap actions like your ORM, DI or REST controllers configurations.\n"
"The result of the bootstrap is directly recorded into bytecode and will be part of your final application package."
msgstr "*增强* 。在构建过程中，Quarkus 扩展会加载并扫描应用程序的字节码（包括依赖关系）和配置。在这一阶段，扩展可以读取配置文件，扫描类以获取特定注释等。收集到所有元数据后，扩展就可以预处理库的引导操作，如 ORM、DI 或 REST 控制器配置。引导的结果会直接记录到字节码中，并成为最终应用程序包的一部分。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"*Static Init*. During the run time, Quarkus will execute first a static init method which contains some extensions actions/configurations.\n"
"When you will do your native packaging, this static method will be pre-processed during the build time and the objects it has generated will be serialized into the final native executable, so the initialization code will not be executed in the native mode (imagine you execute a Fibonacci function during this phase, the result of the computation will be directly recorded in the native executable).\n"
"When running the application in JVM mode, this static init phase is executed at the start of the application."
msgstr "*静态初始化* 。在运行过程中，Quarkus 会首先执行一个静态初始化方法，其中包含一些扩展操作/配置。在进行本地打包时，该静态方法将在构建时进行预处理，其生成的对象将序列化到最终的本地可执行文件中，因此初始化代码不会在本地模式下执行（想象一下在此阶段执行斐波那契函数，计算结果将直接记录在本地可执行文件中）。在 JVM 模式下运行应用程序时，静态初始化阶段会在应用程序启动时执行。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"*Runtime Init*. Well nothing fancy here, we do classic run time code execution.\n"
"So, the more code you run during the two phases above, the faster your application will start."
msgstr "*运行时启动* 。这里没有什么花哨的，我们执行的是经典的运行时代码执行。因此，在上述两个阶段运行的代码越多，应用程序启动的速度就越快。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Now that everything is explained, we can start coding!"
msgstr "现在一切都解释清楚了，我们可以开始编码了！"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Project setup"
msgstr "项目设置"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Extensions can be built with either Maven or Gradle. Depending on your build tool, setup can be done as following:"
msgstr "扩展可以使用 Maven 或 Gradle 构建。根据构建工具的不同，设置步骤如下："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The Gradle extension plugin is still experimental and may be missing features available in the Maven plugin."
msgstr "Gradle 扩展插件仍处于试验阶段，可能会缺少 Maven 插件中可用的功能。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Maven setup"
msgstr "Maven 设置"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Quarkus provides `create-extension` Maven Mojo to initialize your extension project."
msgstr "Quarkus 提供 `create-extension` Maven Mojo 来初始化扩展项目。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "It will try to auto-detect its options:"
msgstr "它会尝试自动检测其选项："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "from `quarkus` (Quarkus Core) or `quarkus/extensions` directory, it will use the 'Quarkus Core' extension layout and defaults."
msgstr "`quarkus` (Quarkus Core) 或 `quarkus/extensions` 目录中，它将使用 \"Quarkus Core \"扩展布局和默认设置。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "with `-DgroupId=io.quarkiverse.[extensionId]`, it will use the 'Quarkiverse' extension layout and defaults."
msgstr "`-DgroupId=io.quarkiverse.[extensionId]` ，它将使用 \"Quarkiverse \"扩展布局和默认设置。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "in other cases it will use the 'Standalone' extension layout and defaults."
msgstr "在其他情况下，它将使用 \"独立 \"扩展布局和默认设置。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "we may introduce other layout types in the future."
msgstr "我们将来可能会引入其他布局类型。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "You may call it without any parameter to use the interactive mode: `mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create-extension -N`"
msgstr "要使用交互模式，可以不带任何参数调用它： `mvn {quarkus-platform-groupid}:quarkus-maven-plugin:{quarkus-version}:create-extension -N`"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The extension groupId"
msgstr "扩展组 ID"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The extension id (not namespaced)."
msgstr "扩展名 id（未命名）。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Indicate that we don't want to generate any test"
msgstr "表示我们不想生成任何测试"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "From a directory with no pom.xml and without any further options, the generator will automatically pick the 'standalone' extension layout"
msgstr "如果目录中没有 pom.xml，也没有其他选项，生成器会自动选择 \"独立 \"扩展布局"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "With the 'standalone' layout, the `namespaceId` is empty by default, so the computed runtime module artifactId is the `extensionId`"
msgstr "在 \"独立 \"布局中， `namespaceId` 默认为空，因此计算出的运行时模块 artifactId 是 `extensionId`"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Maven has generated a `greeting-extension` directory containing the extension project which consists of the parent `pom.xml`, the `runtime` and the `deployment` modules."
msgstr "Maven 已生成一个 `greeting-extension` 目录，其中包含扩展项目，该项目由父 `pom.xml` 、 `runtime` 和 `deployment` 模块组成。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The parent pom.xml"
msgstr "父 pom.xml"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Your extension is a multi-module project. So let's start by checking out the parent POM at `./greeting-extension/pom.xml`."
msgstr "您的扩展是一个多模块项目。因此，让我们先从父级 POM 开始，网址是 `./greeting-extension/pom.xml` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Your extension declares 2 sub-modules `deployment` and `runtime`."
msgstr "您的扩展声明了 2 个子模块 `deployment` 和 `runtime` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Quarkus requires a recent version of the Maven compiler plugin supporting the annotationProcessorPaths configuration."
msgstr "Quarkus 要求最新版本的 Maven 编译器插件支持 annotationProcessorPaths 配置。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The `quarkus-bom` aligns your dependencies with those used by Quarkus during the augmentation phase."
msgstr "`quarkus-bom` 可将您的依赖关系与 Quarkus 在增强阶段使用的依赖关系相一致。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Quarkus requires these configs to run tests properly."
msgstr "Quarkus 需要这些配置才能正常运行测试。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Setting the `parameters` flag this way works around https://issues.apache.org/jira/browse/MCOMPILER-413[MCOMPILER-413]."
msgstr "这样设置 `parameters` 标志就可以绕过 link:https://issues.apache.org/jira/browse/MCOMPILER-413[MCOMPILER-413] 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The Deployment module"
msgstr "部署模块"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Let's have a look at the deployment's `./greeting-extension/deployment/pom.xml`."
msgstr "让我们来看看部署情况 `./greeting-extension/deployment/pom.xml` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The key points are:"
msgstr "要点如下"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "By convention, the deployment module has the `-deployment` suffix (`greeting-extension-deployment`)."
msgstr "按照惯例，部署模块的后缀是 `-deployment` ( `greeting-extension-deployment` )。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The deployment module depends on the `quarkus-arc-deployment` artifact.\n"
"We will see later which dependencies are convenient to add."
msgstr "部署模块依赖于 `quarkus-arc-deployment` 工具。我们稍后会看到哪些依赖项便于添加。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The deployment module also *must* depend on the runtime module."
msgstr "部署模块也 *必须* 依赖运行模块。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "We add  the `quarkus-extension-processor` to the compiler annotation processors."
msgstr "我们将 `quarkus-extension-processor` 添加到编译器注释处理器中。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "In addition to the `pom.xml` `create-extension` also generated the `org.acme.greeting.extension.deployment.GreetingExtensionProcessor` class."
msgstr "除了 `pom.xml` `create-extension` 之外，还生成了 `org.acme.greeting.extension.deployment.GreetingExtensionProcessor` 类。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"`FeatureBuildItem` represents a functionality provided by an extension.\n"
"The name of the feature gets displayed in the log during application bootstrap.\n"
"An extension should provide at most one feature."
msgstr "`FeatureBuildItem` 代表扩展提供的功能。功能名称会在应用程序启动时显示在日志中。一个扩展最多只能提供一种功能。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"Be patient, we will explain the `Build Step Processor` concept and all the extension deployment API later on.\n"
"At this point, you just need to understand that this class explains to Quarkus how to deploy a feature named `greeting` which is your extension.\n"
"In other words, you are augmenting your application to use the `greeting` extension with all the Quarkus benefits (build time optimization, native support, etc.)."
msgstr "请耐心等待，我们稍后会解释 `Build Step Processor` 概念和所有扩展部署 API。在这一点上，你只需要理解这个类向 Quarkus 解释如何部署一个名为 `greeting` 的功能，这个功能就是你的扩展。换句话说，您正在增强您的应用程序，以使用 `greeting` 扩展，并享受 Quarkus 的所有好处（构建时间优化、本地支持等）。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The Runtime module"
msgstr "运行模块"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Finally `./greeting-extension/runtime/pom.xml`."
msgstr "最后 `./greeting-extension/runtime/pom.xml` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "By convention, the runtime module has no suffix (`greeting-extension`) as it is the artifact exposed to the end user."
msgstr "按照惯例，运行时模块没有后缀 ( `greeting-extension` )，因为它是向最终用户公开的工件。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The runtime module depends on the `quarkus-arc` artifact."
msgstr "运行模块依赖于 `quarkus-arc` 工具。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "We add  the `quarkus-extension-maven-plugin` to generate the Quarkus extension descriptor included into the runtime artifact which links it with the corresponding deployment artifact."
msgstr "我们添加了 `quarkus-extension-maven-plugin` ，以生成包含在运行时构件中的 Quarkus 扩展描述符，并将其与相应的部署构件相链接。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Gradle setup"
msgstr "Gradle 设置"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Quarkus does not provide any way to initialize a Gradle project for extensions yet."
msgstr "Quarkus 目前还没有为扩展提供任何初始化 Gradle 项目的方法。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "As mentioned before, an extension is composed of two modules:"
msgstr "如前所述，扩展由两个模块组成："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "`runtime`"
msgstr "`runtime`"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "`deployment`"
msgstr "`deployment`"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "We are going to create a Gradle multi-module project with those two modules. Here is a simple `settings.gradle` example file:"
msgstr "我们将用这两个模块创建一个 Gradle 多模块项目。下面是一个简单的 `settings.gradle` 示例文件："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Configure the quarkus extension plugin version"
msgstr "配置 quarkus 扩展插件版本"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Include both `runtime` and `deployment` modules"
msgstr "包括 `runtime` 和 `deployment` 模块"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Here is a sample of a root `build.gradle` file:"
msgstr "下面是 `build.gradle` 根文件的示例："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Apply the `java-library` plugin for all sub-modules"
msgstr "为所有子模块应用 `java-library` 插件"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Apply the `maven-publish` plugin used to publish our artifacts"
msgstr "应用 `maven-publish` 插件，用于发布我们的人工制品"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Globally set the group id used for publication"
msgstr "全局设置用于发布的组 ID"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The `io.quarkus.extension` plugin will be used in order to help us building the extension.\n"
"The plugin will *only* be applied to the `runtime` module."
msgstr "`io.quarkus.extension` 插件将用于帮助我们构建扩展。该插件 *仅* 适用于 `runtime` 模块。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The deployment module"
msgstr "部署模块"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The deployment module does not require any specific plugin.\n"
"Here is an example of a minimal `build.gradle` file for the `deployment` module:"
msgstr "部署模块不需要任何特定插件。下面是 `deployment` 模块的最小 `build.gradle` 文件示例："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The deployment module *must* depend on the `runtime` module."
msgstr "部署模块 *必须* 依赖于 `runtime` 模块。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The runtime module"
msgstr "运行模块"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The runtime module applies the `io.quarkus.extension` plugin. This will:"
msgstr "运行模块应用 `io.quarkus.extension` 插件。这将"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Add `quarkus-extension-process` as annotation processor to both modules."
msgstr "将 `quarkus-extension-process` 作为注释处理器添加到两个模块中。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Generate extension description files."
msgstr "生成扩展说明文件。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Here is an example of `build.gradle` file for the `runtime` module:"
msgstr "下面是 `runtime` 模块的 `build.gradle` 文件示例："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Apply the `io.quarkus.extension` plugin."
msgstr "应用 `io.quarkus.extension` 插件。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "By convention, the runtime module doesn't have a suffix (and thus is named `greeting-extension`) as it is the artifact exposed to the end user."
msgstr "按照惯例，运行时模块没有后缀（因此被命名为 `greeting-extension` ），因为它是面向最终用户的工件。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Basic version of the Sample Greeting extension"
msgstr "问候语样本扩展的基本版本"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Implementing the Greeting feature"
msgstr "执行问候语功能"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The (killer) feature proposed by our extension is to greet the user.\n"
"To do so, our extension will deploy, in the user application, a Servlet exposing the HTTP endpoint `/greeting` which responds to the GET verb with a plain text `Hello`."
msgstr "我们的扩展提出的（杀手级）功能是问候用户。为此，我们的扩展将在用户应用程序中部署一个 Servlet，公开 HTTP 端点 `/greeting` ，该端点将以纯文本 `Hello` 响应 GET verb。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The `runtime` module is where you develop the feature you want to propose to your users, so it's time to create our Web Servlet."
msgstr "`runtime` 模块是您开发要向用户提供的功能的地方，因此现在是创建 Web Servlet 的时候了。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"To use Servlets in your applications you need to have a Servlet Container such as https://undertow.io[Undertow].\n"
"Luckily, `quarkus-bom` imported by our parent `pom.xml` already includes the Undertow Quarkus extension."
msgstr "要在应用程序中使用 Servlet，您需要一个 Servlet 容器，如 link:https://undertow.io[Undertow] 。幸运的是，我们的父 `pom.xml` 导入的 `quarkus-bom` 已经包含了 Undertow Quarkus 扩展。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "All we need to do is add `quarkus-undertow` as dependency to our `./greeting-extension/runtime/pom.xml`:"
msgstr "我们只需将 `quarkus-undertow` 作为依赖项添加到 `./greeting-extension/runtime/pom.xml` 中即可："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "For Gradle, add the dependency in `./greeting-extension/runtime/build.gradle` file:"
msgstr "对于 Gradle，请在 `./greeting-extension/runtime/build.gradle` 文件中添加依赖关系："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The dependency on `quarkus-arc` generated by the `create-extension` mojo can now be removed since\n"
"`quarkus-undertow` already depends on it."
msgstr "现在可以移除 `create-extension` mojo 生成的对 `quarkus-arc` 的依赖，因为 `quarkus-undertow` 已经依赖于它。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Now we can create our Servlet `org.acme.greeting.extension.GreetingExtensionServlet` in the `runtime` module."
msgstr "现在，我们可以在 `runtime` 模块中创建 Servlet `org.acme.greeting.extension.GreetingExtensionServlet` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "As usual, defining a servlet requires to extend `jakarta.servlet.http.HttpServlet`."
msgstr "像往常一样，定义 servlet 需要扩展 `jakarta.servlet.http.HttpServlet` .NET。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Since we want to respond to the HTTP GET verb, we override the `doGet` method and write `Hello` in the Servlet response's output stream."
msgstr "由于我们要响应 HTTP GET verb，因此我们覆盖了 `doGet` 方法，并在 Servlet 响应的输出流中写入 `Hello` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Deploying the Greeting feature"
msgstr "部署问候语功能"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"Quarkus magic relies on bytecode generation at build time rather than waiting for the runtime code evaluation, that's the role of your extension's `deployment` module.\n"
"Calm down, we know, bytecode is hard and you don't want to do it manually. Quarkus proposes a high level API to make your life easier.\n"
"Thanks to basic concepts, you will describe the items to produce/consume and the corresponding steps in order to generate the bytecode to produce during the deployment time."
msgstr "Quarkus magic 依赖于在构建时生成字节码，而不是等待运行时的代码评估，这就是你的扩展 `deployment` 模块的作用。冷静下来，我们知道字节码很难，你也不想手动操作。Quarkus 提供了一个高级应用程序接口（API），让你的生活更轻松。通过基本概念，您可以描述要生成/消耗的项目以及相应的步骤，以便在部署时生成字节码。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The `io.quarkus.builder.item.BuildItem` concept represents object instances you will produce or consume (and at some point convert into bytecode) thanks to methods annotated with `@io.quarkus.deployment.annotations.BuildStep` which describe your extension's deployment tasks."
msgstr "`io.quarkus.builder.item.BuildItem` 概念表示您将生成或消耗（并在某一时刻转换为字节码）的对象实例，这要归功于使用 `@io.quarkus.deployment.annotations.BuildStep` 注释的方法，这些方法描述了扩展的部署任务。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "NOTE"
msgstr "注意"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "See xref:all-builditems.adoc[the complete list of BuildItem implementations in core] for more information"
msgstr "有关更多信息，请参阅 xref:all-builditems.adoc[core 中 BuildItem 实现的完整列表]"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Go back to the generated `org.acme.greeting.extension.deployment.GreetingExtensionProcessor` class."
msgstr "返回生成的 `org.acme.greeting.extension.deployment.GreetingExtensionProcessor` 类。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"`feature()` method is annotated with `@BuildStep` which means it is identified as a deployment task Quarkus will have to execute during the deployment.\n"
"`BuildStep` methods are run concurrently at augmentation time to augment the application.\n"
"They use a producer/consumer model, where a step is guaranteed not to be run until all the items that it is consuming have been produced."
msgstr "`feature()` 方法注释为 ，这意味着它被确定为 Quarkus 在部署过程中必须执行的部署任务。 方法在增强时间并发运行，以增强应用程序。它们使用生产者/消费者模型，其中一个步骤保证在其消耗的所有项目生产完毕之前不会运行。 `@BuildStep` `BuildStep` "

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"`io.quarkus.deployment.builditem.FeatureBuildItem` is an implementation of `BuildItem` which represents the description of an extension.\n"
"This `BuildItem` will be used by Quarkus to display information to the users when the application is starting."
msgstr "`io.quarkus.deployment.builditem.FeatureBuildItem` 是 的一个实现，它表示扩展的描述。Quarkus 将使用 在应用程序启动时向用户显示信息。 `BuildItem` `BuildItem` "

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"There are many `BuildItem` implementations, each one represents an aspect of the deployment process.\n"
"Here are some examples:"
msgstr "`BuildItem` 有很多实现方式，每种方式都代表了部署流程的一个方面。下面是一些例子："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "`ServletBuildItem`: describes a Servlet (name, path, etc.) we want to generate during the deployment."
msgstr "`ServletBuildItem` ：描述我们希望在部署过程中生成的 Servlet（名称、路径等）。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "`BeanContainerBuildItem`: describes a container used to store and retrieve object instances during the deployment."
msgstr "`BeanContainerBuildItem` 容器：描述在部署过程中用于存储和检索对象实例的容器。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"If you don't find a `BuildItem` for what you want to achieve, you can create your own implementation. Keep in mind that a `BuildItem` should be as fine-grained as possible, representing a specific part of the deployment.\n"
"To create your `BuildItem` you can extend:"
msgstr "如果找不到适合您想要实现的 `BuildItem` ，您可以创建自己的实现。请记住， `BuildItem` 应尽可能细粒度，代表部署的特定部分。要创建自己的 `BuildItem` ，可以扩展"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "`io.quarkus.builder.item.SimpleBuildItem` if you need only a single instance of the item during the deployment (e.g. `BeanContainerBuildItem`, you only want one container)."
msgstr "`io.quarkus.builder.item.SimpleBuildItem` 如果在部署过程中只需要项目的单个实例（例如 ，您只需要一个容器）。 `BeanContainerBuildItem`"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "`io.quarkus.builder.item.MultiBuildItem` if you want to have multiple instances (e.g. `ServletBuildItem`, you can produce many Servlets during the deployment)."
msgstr "`io.quarkus.builder.item.MultiBuildItem` 如果您想拥有多个实例（如 ，您可以在部署过程中生成多个 Servlet）。 `ServletBuildItem`"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"It's now time to declare our HTTP endpoint. To do so, we need to produce a `ServletBuildItem`.\n"
"At this point, we are sure you understood that if the `quarkus-undertow` dependency proposes Servlet support for our `runtime` module, we will need the `quarkus-undertow-deployment` dependency in our `deployment` module to have access to the `io.quarkus.undertow.deployment.ServletBuildItem`."
msgstr "现在是声明 HTTP 端点的时候了。为此，我们需要创建一个 `ServletBuildItem` 。此时，我们相信您已经明白，如果 `quarkus-undertow` 依赖项为我们的 `runtime` 模块提供 Servlet 支持，那么我们就需要在 `deployment` 模块中创建 `quarkus-undertow-deployment` 依赖项，以便访问 `io.quarkus.undertow.deployment.ServletBuildItem` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Let's add `quarkus-undertow-deployment` as dependency to our `./greeting-extension/deployment/pom.xml`:"
msgstr "让我们将 `quarkus-undertow-deployment` 作为依赖项添加到 `./greeting-extension/deployment/pom.xml` 中："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"The dependency on `quarkus-arc-deployment` generated by the `create-extension` mojo can now be removed since\n"
"`quarkus-undertow-deployment` already depends on it."
msgstr "现在可以移除 `create-extension` mojo 生成的对 `quarkus-arc-deployment` 的依赖，因为 `quarkus-undertow-deployment` 已经依赖于它。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "For Gradle, add the dependency in `./greeting-extension/deployment/build.gradle` file:"
msgstr "对于 Gradle，请在 `./greeting-extension/deployment/build.gradle` 文件中添加依赖关系："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "We can now update `org.acme.greeting.extension.deployment.GreetingExtensionProcessor`:"
msgstr "现在我们可以更新 `org.acme.greeting.extension.deployment.GreetingExtensionProcessor` ："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"We add a `createServlet` method which returns a `ServletBuildItem` and annotate it with `@BuildStep`.\n"
"Now, Quarkus will process this new task which will result in the bytecode generation of the Servlet registration at build time."
msgstr "我们添加了一个 `createServlet` 方法，该方法返回一个 `ServletBuildItem` ，并用 `@BuildStep` 进行注解。现在，Quarkus 将处理这个新任务，从而在构建时生成 Servlet 注册的字节码。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "`ServletBuildItem` proposes a fluent API to instantiate a Servlet named `greeting-extension` of type `GreetingExtensionServlet` (it's our class provided by our extension `runtime` module), and map it the `/greeting` path."
msgstr "`ServletBuildItem` 提出了一个流畅的 API 来实例化一个名为 类型为 的 Servlet（这是我们的扩展 模块提供的类），并将其映射到 路径。 `greeting-extension` `GreetingExtensionServlet` `runtime` `/greeting` "

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Testing the Greeting Extension feature"
msgstr "测试问候分机功能"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"When developing a Quarkus extension, you mainly want to test your feature is properly deployed in an application and works as expected.\n"
"That's why the tests will be hosted in the `deployment` module."
msgstr "在开发 Quarkus 扩展时，您主要是想测试您的功能是否已正确部署到应用程序中，并按预期运行。这就是为什么测试将托管在 `deployment` 模块中。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Quarkus proposes facilities to test extensions via the `quarkus-junit5-internal` artifact (which should already be in the deployment pom.xml), in particular the `io.quarkus.test.QuarkusUnitTest` runner which starts an application with your extension."
msgstr "Quarkus 提供了通过 `quarkus-junit5-internal` 工具（应已包含在部署 pom.xml 中）测试扩展的设施，尤其是 `io.quarkus.test.QuarkusUnitTest` runner，它可以启动带有扩展的应用程序。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"We will use https://rest-assured.io[RestAssured] (massively used in Quarkus) to test our HTTP endpoint.\n"
"Let's add the `rest-assured` dependency into the  `./greeting-extension/deployment/pom.xml`."
msgstr "我们将使用 link:https://rest-assured.io[RestAssured] （大量用于 Quarkus）来测试 HTTP 端点。让我们在 `./greeting-extension/deployment/pom.xml` 中添加 `rest-assured` 依赖关系。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The `create-extension` Maven Mojo can create the test and integration-test structure (drop the `-DwithoutTests`). Here, we'll create it ourselves:"
msgstr "`create-extension` Maven Mojo 可以创建测试和集成测试结构（去掉 `-DwithoutTests` ）。在此，我们将自行创建："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "To start testing your extension, create the following `org.acme.greeting.extension.deployment.GreetingExtensionTest` test class:"
msgstr "要开始测试扩展，请创建以下 `org.acme.greeting.extension.deployment.GreetingExtensionTest` 测试类："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "We register a Junit Extension which will start a Quarkus application with the Greeting extension."
msgstr "我们注册一个 Junit 扩展，它将启动一个带有问候扩展的 Quarkus 应用程序。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "We verify the application has a `greeting` endpoint responding to an HTTP GET request with an OK status (200) and a plain text body containing `Hello`"
msgstr "我们会验证应用程序是否有一个 `greeting` 端点，该端点会响应 HTTP GET 请求，并显示 OK 状态（200）和包含以下内容的纯文本体 `Hello`"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Time to test and install to our local maven repository!"
msgstr "是时候测试并安装到本地 maven 仓库了！"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Looks good! Congratulations you just finished your first extension."
msgstr "看起来不错！恭喜你刚刚完成了第一次扩建。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Debugging your extension"
msgstr "调试扩展"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"_If debugging is the process of removing bugs, then programming must be the process of putting them in._\n"
"Edsger W. Dijkstra"
msgstr "_如果说调试是清除错误的过程，那么编程一定是添加错误的过程。_ 埃兹格-W-戴克斯特拉（Edsger W. Dijkstra"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Debugging your application build"
msgstr "调试应用程序的构建"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"Since your extension deployment is made during the application build, this process is triggered by your build tool.\n"
"That means if you want to debug this phase you need to launch your build tool with the remote debug mode switched on."
msgstr "由于扩展部署是在应用程序构建过程中进行的，因此这一过程是由构建工具触发的。这意味着如果要调试这一阶段，需要在远程调试模式下启动构建工具。"

#: _versions/3.8/guides/building-my-first-extension.adoc
msgid "Maven"
msgstr "Maven"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"You can activate Maven remote debugging by using `mvnDebug`.\n"
"You can launch your application with the following command line:"
msgstr "您可以使用 `mvnDebug` 激活 Maven 远程调试。您可以使用以下命令行启动应用程序："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"By default, Maven will wait for a connection on `localhost:8000`.\n"
"Now, you can run your IDE `Remote` configuration to attach it to `localhost:8000`."
msgstr "默认情况下，Maven 将在 `localhost:8000` 上等待连接。现在，您可以运行 IDE `Remote` 配置，将其附加到 `localhost:8000` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
msgid "Gradle"
msgstr "Gradle"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"You can activate Gradle remote debugging by using the flags `org.gradle.debug=true` or `org.gradle.daemon.debug=true` in daemon mode.\n"
"You can launch your application with the following command line:"
msgstr "在守护进程模式下，可以使用 `org.gradle.debug=true` 或 `org.gradle.daemon.debug=true` 激活 Gradle 远程调试。您可以使用以下命令行启动应用程序："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"By default, Gradle will wait for a connection on `localhost:5005`.\n"
"Now, you can run your IDE `Remote` configuration to attach it to `localhost:5005`."
msgstr "默认情况下，Gradle 会在 `localhost:5005` 上等待连接。现在，您可以运行 IDE `Remote` 配置，将其附加到 `localhost:5005` 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Debugging your extension tests"
msgstr "调试扩展测试"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"We have seen together how to test your extension and sometimes things don't go so well and you want to debug your tests.\n"
"Same principle here, the trick is to enable the Maven Surefire remote debugging in order to attach an IDE `Remote` configuration."
msgstr "我们已经一起了解了如何测试扩展，有时事情进展并不顺利，您希望调试测试。这里也是同样的原理，诀窍是启用 Maven Surefire 远程调试，以便附加 IDE `Remote` 配置。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "By default, Maven will wait for a connection on `localhost:5005`."
msgstr "默认情况下，Maven 将在 `localhost:5005` 上等待连接。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Time to use your new extension"
msgstr "使用新分机的时间到了"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Now that you just finished building your first extension you should be eager to use it in a Quarkus application!"
msgstr "现在，你刚刚完成了第一个扩展，应该迫不及待地想在 Quarkus 应用程序中使用它了！"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "*Classic Maven publication*"
msgstr "*经典 Maven 出版物*"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "If not already done in the previous step, you should install the `greeting-extension` in your local repository:"
msgstr "如果上一步尚未完成，则应在本地软件源中安装 `greeting-extension` ："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Then from another directory, use our tooling to create a new `greeting-app` Quarkus application with your new extension:"
msgstr "然后在另一个目录中，使用我们的工具创建一个带有新扩展的 `greeting-app` Quarkus 应用程序："

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "`cd` into `greeting-app`."
msgstr "`cd` 进入 。 `greeting-app`"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "The `greeting-extension` extension has to be installed in the local Maven repository to be usable in the application."
msgstr "`greeting-extension` 扩展必须安装在本地 Maven 资源库中，才能在应用程序中使用。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Run the application and notice the `Installed Features` list contains the `greeting-extension` extension."
msgstr "运行应用程序，注意 `Installed Features` 列表中包含 `greeting-extension` 扩展名。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"From an extension developer standpoint the Maven publication strategy is very handy and fast but Quarkus wants to go one step further by also ensuring a reliability of the ecosystem for the people who will use the extensions.\n"
"Think about it, we all had a poor Developer Experience with an unmaintained library, an incompatibility between dependencies (and we don't even talk about legal issues).\n"
"That's why there is the Quarkus Platform."
msgstr "从扩展开发者的角度来看，Maven 发布策略非常方便快捷，但 Quarkus 希望更进一步，为使用扩展的用户确保生态系统的可靠性。想一想，我们都曾有过开发者体验不佳的经历，比如库无人维护、依赖关系不兼容（我们甚至还没讨论法律问题）。这就是 Quarkus 平台出现的原因。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "*Quarkus Platform*"
msgstr "*夸克平台*"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid ""
"Quarkus platform is a set of extensions that target the primary use-cases of Quarkus as a development framework and can safely be used in any combination in the same application without creating a dependency conflict.\n"
"From an application developer perspective, a Quarkus platform is represented as one or more Maven BOMs, for example `{quarkus-platform-groupid}:quarkus-bom:{quarkus-version}`, `{quarkus-platform-groupid}:quarkus-camel-bom:{quarkus-version}`, etc, whose dependency version constraints were globally aligned so that these BOMs can be imported in the same application in any order without introducing a dependency conflict."
msgstr "Quarkus 平台是一组扩展，针对 Quarkus 作为开发框架的主要用例，可以安全地在同一应用程序中任意组合使用，而不会产生依赖冲突。从应用程序开发人员的角度来看，Quarkus 平台表示为一个或多个 Maven BOM，例如 `{quarkus-platform-groupid}:quarkus-bom:{quarkus-version}` 、 `{quarkus-platform-groupid}:quarkus-camel-bom:{quarkus-version}` 等，其依赖关系版本约束是全局统一的，因此这些 BOM 可以以任何顺序导入到同一应用程序中，而不会引入依赖关系冲突。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "*Quarkiverse Hub*"
msgstr "*夸克宇宙中枢*"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "link:https://github.com/quarkiverse[Quarkiverse Hub] is the GitHub organization that provides repository hosting (including build, CI and release publishing setup) for Quarkus extension projects contributed by the community."
msgstr "link:https://github.com/quarkiverse[Quarkiverse Hub] 是 GitHub 组织，为社区贡献的 Quarkus 扩展项目提供资源库托管（包括构建、CI 和发布设置）。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "In case you are wondering about creating a new Quarkus extension and adding it to the Quarkus ecosystem so that the Quarkus community can discover it using the Quarkus dev tools (including the xref:cli-tooling.adoc[Quarkus CLI] and https://code.quarkus.io[code.quarkus.io]), the https://github.com/quarkiverse[Quarkiverse Hub] GitHub organization will be a good home for it."
msgstr "如果你想创建一个新的 Quarkus 扩展，并将其添加到 Quarkus 生态系统中，以便 Quarkus 社区可以使用 Quarkus 开发工具（包括 Quark xref:cli-tooling.adoc[us CLI] 和 link:https://code.quarkus.io[code.quarkus.io] ）发现它， link:https://github.com/quarkiverse[Quarkiverse Hub] GitHub 组织将是一个很好的归宿。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "You can get started by creating an link:https://github.com/quarkusio/quarkus/issues/new/choose[Extension Request] issue (check first if one wasn't already submitted link:https://github.com/quarkusio/quarkus/labels/kind%2Fextension-proposal[here]) and asking to lead it."
msgstr "您可以通过创建一个 link:https://github.com/quarkusio/quarkus/issues/new/choose[扩展申请] 问题（首先检查是否有一个问题尚未在 link:https://github.com/quarkusio/quarkus/labels/kind%2Fextension-proposal[此] 提交）并要求领导该问题。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "We'll take care of provisioning a new repository and set it up to:"
msgstr "我们将负责配置一个新的存储库，并将其设置为"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Be supported by our tooling;"
msgstr "由我们的工具提供支持；"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Publish the documentation you produce for your extension to the Quarkiverse website;"
msgstr "在 Quarkiverse 网站上发布您为扩展制作的文档；"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Configure your extension to use the link:https://github.com/quarkusio/quarkus-ecosystem-ci#quarkus-ecosystem-ci[Quarkus Ecosystem CI] to build against the latest Quarkus Core changes;"
msgstr "配置您的扩展，以便使用 link:https://github.com/quarkusio/quarkus-ecosystem-ci#quarkus-ecosystem-ci[Quarkus Ecosystem CI] 根据最新的 Quarkus Core 变更进行构建；"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Give you the freedom to manage the project and release to Maven Central as you like."
msgstr "让您自由管理项目，并随心所欲地发布到 Maven Central。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Extensions hosted in the Quarkiverse Hub may or may not end up in the Quarkus platform."
msgstr "托管在 Quarkiverse Hub 中的扩展可能会也可能不会最终出现在 Quarkus 平台中。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "For more information, check link:https://github.com/quarkiverse/quarkiverse/wiki[the Quarkiverse Wiki] and link:https://quarkus.io/blog/quarkiverse/[this blog post]."
msgstr "更多信息，请查看 link:https://github.com/quarkiverse/quarkiverse/wiki[Quarkiverse Wiki] 和 link:https://quarkus.io/blog/quarkiverse/[本博文] 。"

#: _versions/3.8/guides/building-my-first-extension.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Creating new extensions may appear to be an intricate task at first but once you understood the Quarkus game-changer paradigm (build time vs runtime) the structure of an extension makes perfectly sense."
msgstr "一开始，创建新扩展可能是一项复杂的任务，但一旦你理解了 Quarkus 改变游戏规则的范式（构建时间与运行时间），扩展的结构就变得非常合理了。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "As usual, along the path Quarkus simplifies things under the hood (Maven Mojo, bytecode generation or testing) to make it pleasant to develop new features."
msgstr "与往常一样，Quarkus 在开发过程中简化了引擎盖下的工作（Maven Mojo、字节码生成或测试），使开发新功能变得轻松愉快。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "Further reading"
msgstr "更多阅读"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "xref:writing-extensions.adoc[Writing your own extension] for the full documentation."
msgstr "xref:writing-extensions.adoc[编写自己的扩展] 程序，获取完整文档。"

#: _versions/3.8/guides/building-my-first-extension.adoc
#, fuzzy
msgid "xref:dev-ui.adoc[Quarkus Dev UI] to learn how to support the Dev UI in your extension"
msgstr "xref:dev-ui.adoc[Quarkus Dev UI] ，了解如何在扩展中支持 Dev UI"
