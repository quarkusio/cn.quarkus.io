msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Scripting with Quarkus"
msgstr "使用 Quarkus 编写脚本"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Quarkus provides integration with https://jbang.dev[jbang] which allows you to write Java scripts/applications requiring no Maven nor Gradle to get running."
msgstr "Quarkus 提供了与 link:https://jbang.dev[jbang] 的集成，使您可以编写 Java 脚本/应用程序，无需 Maven 或 Gradle 即可运行。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "In this guide, we will see how you can write a REST application using just a single Java file."
msgstr "在本指南中，我们将了解如何仅使用一个 Java 文件编写 REST 应用程序。"

#: _versions/3.8/guides/scripting.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "https://jbang.dev/download[JBang]"
msgstr "link:https://jbang.dev/download[JBang]"

#: _versions/3.8/guides/scripting.adoc
msgid "Solution"
msgstr "解决方案"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Normally we would link to a Git repository to clone but in this case there is no additional files than the following:"
msgstr "通常情况下，我们会链接到一个 Git 仓库进行克隆，但在本例中，除了以下文件外，没有其他文件："

#: _versions/3.8/guides/scripting.adoc
msgid "Architecture"
msgstr "应用结构"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "In this guide, we create a straightforward application serving a `hello` endpoint with a single source file, no additional build files like `pom.xml` or `build.gradle` needed. To demonstrate dependency injection, this endpoint uses a `greeting` bean."
msgstr "在本指南中，我们将创建一个直接为 `hello` 端点提供服务的应用程序，只需一个源文件，无需额外的构建文件（如 `pom.xml` 或 `build.gradle` ）。为了演示依赖注入，该端点使用了 `greeting` Bean。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Creating the initial file"
msgstr "创建初始文件"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "First, we need a Java file. JBang lets you create an initial version using:"
msgstr "首先，我们需要一个 Java 文件。JBang 可以让你用以下方法创建一个初始版本："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "This command generates a .java file that you can directly run on Linux and macOS, i.e. `./quarkusapp.java` - on Windows you need to use `jbang quarkusapp.java`."
msgstr "该命令会生成一个 .java 文件，可直接在 Linux 和 macOS 上运行，即 `./quarkusapp.java` - 在 Windows 上需要使用 `jbang quarkusapp.java` 。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "This initial version will print `Hello World` when run."
msgstr "该初始版本运行时将打印 `Hello World` 。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Once generated, look at the `quarkusapp.java` file."
msgstr "生成后，请查看 `quarkusapp.java` 文件。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "You will find at the top a line looking like this:"
msgstr "你会在顶部发现这样一行字："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "This line is what on Linux and macOS allows you to run it as a script. On Windows this line is ignored."
msgstr "在 Linux 和 macOS 上，这一行允许您将其作为脚本运行。在 Windows 中，这一行将被忽略。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "The next lines"
msgstr "下几行"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "illustrate how you add dependencies to this script. This is a feature of JBang."
msgstr "说明了如何为该脚本添加依赖项。这是 JBang 的一项功能。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Go ahead and update this line to include the `quarkus-bom` and the `quarkus-resteasy-reactive` dependency like so:"
msgstr "继续更新此行，以包含 `quarkus-bom` 和 `quarkus-resteasy-reactive` 依赖关系，就像这样："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Now, run `jbang quarkusapp.java` and you will see JBang resolving this dependency and building the jar with help from Quarkus' JBang integration."
msgstr "现在，运行 `jbang quarkusapp.java` ，你会看到 JBang 在 Quarkus 的 JBang 集成的帮助下解析了该依赖关系并构建了 jar。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "For now the application does nothing new."
msgstr "目前，该应用程序没有任何新功能。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "How do I edit this file and get content assist?"
msgstr "如何编辑该文件并获得内容帮助？"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "To edit the JBang script in an IDE/editor with content assist you can run `jbang edit quarkusapp.java` or `jbang edit quarkusapp.java`."
msgstr "要在带内容辅助功能的集成开发环境/编辑器中编辑 JBang 脚本，可以运行 `jbang edit quarkusapp.java` 或 `jbang edit quarkusapp.java` 。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "For more information please refer to the https://www.jbang.dev/documentation/guide/latest/editing.html[the JBang documentation]."
msgstr "更多信息请参阅 link:https://www.jbang.dev/documentation/guide/latest/editing.html[JBang 文档] 。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "The Jakarta REST resources"
msgstr "雅加达 REST 资源"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Now let us replace the class with one that uses Quarkus features:"
msgstr "现在，让我们用一个使用 Quarkus 功能的类来替换这个类："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "It's a very simple class with a main method that starts Quarkus with a REST endpoint, returning \"hello\" to requests on \"/hello\"."
msgstr "这是一个非常简单的类，它有一个主方法，通过 REST 端点启动 Quarkus，向\"/hello \"上的请求返回 \"hello\"。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Why is the `main` method there?"
msgstr "为什么会有 `main` 方法？"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "A `main` method is currently needed for the JBang integration to work - we might remove this requirement in the future."
msgstr "目前，JBang 整合需要一个 `main` 方法--我们将来可能会取消这一要求。"

#: _versions/3.8/guides/scripting.adoc
msgid "Running the application"
msgstr "运行应用程序"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Now when you run the application you will see Quarkus start up."
msgstr "现在，当你运行应用程序时，就会看到 Quarkus 启动。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Use: `jbang quarkusapp.java`:"
msgstr "使用： `jbang quarkusapp.java` ："

#: _versions/3.8/guides/scripting.adoc
msgid "Once started, you can request the provided endpoint:"
msgstr "一旦启动，你可以发送请求到提供服务的端点。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "After that, hit `CTRL+C` to stop the application."
msgstr "然后，点击 `CTRL+C` 停止应用程序。"

#: _versions/3.8/guides/scripting.adoc
msgid "Automatically add newline with `curl -w \"\\n\"`"
msgstr "自动添加换行符 `curl -w \"\\n\"` "

#: _versions/3.8/guides/scripting.adoc
msgid "We are using `curl -w \"\\n\"` in this example to avoid your terminal printing a '%' or put both result and next command prompt on the same line."
msgstr "我们在这个例子中使用 `curl -w \"\\n\"` ，以避免你的终端打印出'%'或把结果和下一个命令提示符放在同一行。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Why is `quarkus-resteasy-reactive` not resolved?"
msgstr "为什么 `quarkus-resteasy-reactive` 没有解决？"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid ""
"In this second run you should not see a line saying it is resolving `quarkus-resteasy-reactive` as JBang caches the dependency resolution between runs.\n"
"If you want to clear the caches to force resolution use `jbang cache clear`."
msgstr "在第二次运行中，你应该不会看到 \"正在解析 `quarkus-resteasy-reactive` \"一行，因为 JBang 会在两次运行之间缓存依赖关系解析。如果要清除缓存以强制解析，请使用 `jbang cache clear` 。"

#: _versions/3.8/guides/scripting.adoc
msgid "Using injection"
msgstr "使用注入法"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid ""
"Dependency injection in Quarkus is based on ArC which is a CDI-based dependency injection solution tailored for Quarkus' architecture.\n"
"You can learn more about it in the xref:cdi-reference.adoc[Contexts and Dependency Injection guide]."
msgstr "Quarkus 中的依赖注入基于 ArC，ArC 是为 Quarkus 架构定制的基于 CDI 的依赖注入解决方案。你可以在 xref:cdi-reference.adoc[上下文和依赖注入指南] 中了解更多相关信息。"

#: _versions/3.8/guides/scripting.adoc
msgid "ArC comes as a dependency of `quarkus-resteasy-reactive` so you already have it handy."
msgstr "ArC作为 `quarkus-resteasy-reactive` 的一个依赖项，所以你已经有了。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Let's modify the application and add a companion bean."
msgstr "让我们修改应用程序并添加一个辅助 Bean。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid ""
"Normally you would add a separate class, but as we are aiming to have it all in one file you will add a\n"
"nested class."
msgstr "通常情况下，您会添加一个单独的类，但由于我们的目标是在一个文件中实现所有功能，因此您将添加一个嵌套类。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Add the following *inside* the `quarkusapp` class body."
msgstr "*在* `quarkusapp` 类主体 *中* 添加以下内容。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Use of nested static public classes"
msgstr "使用嵌套静态公共类"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "We are using a nested static public class instead of a top level class for two reasons:"
msgstr "我们使用嵌套静态公有类而不是顶层类有两个原因："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "JBang currently does not support multiple source files."
msgstr "JBang 目前不支持多个源文件。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "All Java frameworks relying on introspection have challenges using top level classes as they are not as visible as public classes; and in Java there can only be one top level public class in a file."
msgstr "所有依赖于内省的 Java 框架在使用顶级类时都会遇到困难，因为它们不像公有类那样可见；而且在 Java 中，一个文件中只能有一个顶级公有类。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Edit the `quarksapp` class to inject the `GreetingService` and create a new endpoint using it, you should end up with something like:"
msgstr "编辑 `quarksapp` 类以注入 `GreetingService` ，并使用它创建一个新的端点，最后应该会得到类似的结果："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Now when you run `jbang quarkusapp.java` you can check what the new end point returns:"
msgstr "现在，当你运行 `jbang quarkusapp.java` 时，就可以查看新终点的返回值了："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Now that is unexpected, why is it returning `hello null` and not `hello quarkus`?"
msgstr "这太出乎意料了，为什么返回的是 `hello null` 而不是 `hello quarkus` ？"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "The reason is that RESTEasy Reactive relies on the `-parameters` compiler flag to be set to be able to map `{name}` to the `name` parameter."
msgstr "原因是 RESTEasy Reactive 依赖于 `-parameters` 编译器标志的设置，以便将 `{name}` 映射到 `name` 参数。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "We fix that by adding the following comment instruction to the file:"
msgstr "我们可以通过在文件中添加以下注释指令来解决这个问题："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Now when you run with `jbang quarkusapp.java` the end point should return what you expect:"
msgstr "现在，当您使用 `jbang quarkusapp.java` 运行时，终点应该会返回您所期望的结果："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Debugging"
msgstr "调试"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid ""
"To debug the application you use `jbang --debug quarkusapp.java` and you can use your IDE to connect on port 4004; if you want to use the\n"
"more traditional Quarkus debug port you can use `jbang --debug=5005 quarkusapp.java`."
msgstr "要调试程序，可以使用 `jbang --debug quarkusapp.java` ，也可以使用集成开发环境连接到 4004 端口；如果要使用更传统的 Quarkus 调试端口，可以使用 `jbang --debug=5005 quarkusapp.java` 。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Note: JBang debugging always suspends thus you need to connect the debugger to have the application run."
msgstr "注意：JBang 调试总是暂停的，因此需要连接调试器才能运行应用程序。"

#: _versions/3.8/guides/scripting.adoc
msgid "Logging"
msgstr "日志"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "To use logging in Quarkus scripting with JBang you do as usual, with configuring a logger, i.e."
msgstr "要在使用 JBang 的 Quarkus 脚本中使用日志记录功能，需要像往常一样配置日志记录器，即"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "To get it to work you need to add a Java option to ensure the logging is initialized properly, i.e."
msgstr "要使其正常工作，您需要添加一个 Java 选项，以确保日志记录被正确初始化，即"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "With that in place running `jbang quarkusapp.java` will log and render as expected."
msgstr "有了这些，运行 `jbang quarkusapp.java` 时就会按照预期进行记录和渲染。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Configuring Application"
msgstr "配置应用程序"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "You can use `//Q:CONFIG <property>=<value>` to set up static configuration for your application."
msgstr "您可以使用 `//Q:CONFIG <property>=<value>` 为应用程序设置静态配置。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "I.e. if you wanted to add the `smallrye-openapi` and `swagger-ui` extensions and have the Swagger UI always show up you would add the following:"
msgstr "例如，如果您想添加 `smallrye-openapi` 和 `swagger-ui` 扩展，并让 Swagger UI 始终显示，您可以添加以下内容："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Now during build the `quarkus.swagger-ui.always-include` will be generated into the resulting jar and `http://0.0.0.0:8080/q/swagger-ui` will be available when run."
msgstr "现在，在构建过程中， `quarkus.swagger-ui.always-include` 将被生成到生成的 jar 中，并在运行时可用。 `http://0.0.0.0:8080/q/swagger-ui` 将在运行时可用。"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "Running as a native application"
msgstr "作为本地应用程序运行"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "If you have the `native-image` binary installed and `GRAALVM_HOME` set, or a container runtime (e.g., podman or docker) installed on Linux, you can get the native executable built and run using `jbang --native quarkusapp.java`:"
msgstr "如果安装了 `native-image` 二进制文件并设置了 `GRAALVM_HOME` ，或在 Linux 上安装了容器运行时（如 podman 或 docker），就可以使用 `jbang --native quarkusapp.java` 来构建和运行本地可执行文件："

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "This native build will take some time on first run but any subsequent runs (without changing `quarkusapp.java`) will be close to instant thanks to JBang cache:"
msgstr "首次运行时，本机构建会花费一些时间，但由于 JBang 缓存的存在，随后的运行（在不更改 `quarkusapp.java` 的情况下）将几乎即时完成："

#: _versions/3.8/guides/scripting.adoc
msgid "Conclusion"
msgstr "解决方案"

#: _versions/3.8/guides/scripting.adoc
#, fuzzy
msgid "If you want to get started with Quarkus or write something quickly, Quarkus Scripting with jbang lets you do that. No Maven, no Gradle - just a Java file. In this guide we outlined the very basics on using Quarkus with JBang; if you want to learn more about what JBang can do, go see https://jbang.dev."
msgstr "如果你想快速入门 Quarkus 或写点东西，使用 jbang 的 Quarkus 脚本可以让你做到这一点。无需 Maven，无需 Gradle，只需一个 Java 文件。在本指南中，我们简要介绍了使用 JBang 编写 Quarkus 脚本的基础知识；如果你想进一步了解 JBang 的功能，请访问 link:https://jbang.dev[https://jbang.dev。]"
