msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Deploying your gRPC Service in Kubernetes"
msgstr "在 Kubernetes 中部署 gRPC 服务"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid ""
"This page explains how to deploy your gRPC service in Quarkus in Kubernetes.\n"
"We'll continue with the example from xref:grpc-getting-started.adoc[the Getting Started gRPC guide]."
msgstr "本页介绍如何在 Kubernetes 中的 Quarkus 中部署 gRPC 服务。我们将继续使用 xref:grpc-getting-started.adoc[gRPC 入门指南] 中的示例。"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Configuring your project to use the Quarkus Kubernetes extension"
msgstr "配置项目以使用 Quarkus Kubernetes 扩展"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Add the Quarkus Kubernetes extension to your build file:"
msgstr "在构建文件中添加 Quarkus Kubernetes 扩展："

#: _versions/3.8/guides/grpc-kubernetes.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.8/guides/grpc-kubernetes.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Next, we want to expose our application using the Kubernetes Ingress resource:"
msgstr "接下来，我们要使用 Kubernetes Ingress 资源公开我们的应用程序："

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "The Quarkus Kubernetes will bind the HTTP server using the port name `http` and the gRPC server using the port name `grpc`. By default, the Quarkus application will only expose the port name `http`, so only the HTTP server will be publicly accessible. To expose the gRPC server instead, set the `quarkus.kubernetes.ingress.target-port=grpc` property in your application.properties:"
msgstr "Quarkus Kubernetes 将使用端口名 `http` 绑定 HTTP 服务器，使用端口名 `grpc` 绑定 gRPC 服务器。默认情况下，Quarkus 应用程序只会公开端口名称 `http` ，因此只有 HTTP 服务器可以公开访问。要公开 gRPC 服务器，请在应用程序属性中设置 `quarkus.kubernetes.ingress.target-port=grpc` 属性："

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "If you configure Quarkus to use the same port for both HTTP and gRPC servers with the property `quarkus.grpc.server.use-separate-server=false`, then you don't need to change the default `target-port`."
msgstr "如果使用属性 `quarkus.grpc.server.use-separate-server=false` 将 Quarkus 配置为 HTTP 和 gRPC 服务器使用相同的端口，则无需更改默认的 `target-port` 。"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Finally, we need to generate the Kubernetes manifests by running the command in a terminal:"
msgstr "最后，我们需要在终端运行命令，生成 Kubernetes 清单："

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Once generated, you can look at the `target/kubernetes` directory:"
msgstr "生成后，您可以查看 `target/kubernetes` 目录："

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "You can find more information about how to deploy the application in Kubernetes in the xref:deploying-to-kubernetes.adoc#deployment[the Kubernetes guide]."
msgstr "有关如何在 Kubernetes 中部署应用程序的更多信息，请参阅 xref:deploying-to-kubernetes.adoc#deployment[Kubernetes 指南] 。"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "Using gRPC Health probes"
msgstr "使用 gRPC 健康探针"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "By default, the Kubernetes resources do not contain readiness and liveness probes. To add them, import the Smallrye Health extension to your build file:"
msgstr "默认情况下，Kubernetes 资源不包含就绪性和有效性探针。要添加它们，请将 Smallrye Health 扩展导入构建文件："

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "More information about the health extension can be found in xref:smallrye-health.adoc[the SmallRye Health guide]."
msgstr "有关健康扩展的更多信息，请参阅《 xref:smallrye-health.adoc[SmallRye 健康指南》] 。"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "By the default, this extension will configure the probes to use the HTTP server (which is provided by some extensions like the Quarkus RESTEasy reactive extension). Internally, this probe will also use xref:grpc-service-implementation.adoc#health[the generated gRPC Health services]."
msgstr "默认情况下，该扩展会将探针配置为使用 HTTP 服务器（由 Quarkus RESTEasy 反应式扩展等某些扩展提供）。在内部，该探针还将使用 xref:grpc-service-implementation.adoc#health[生成的 gRPC 健康服务] 。"

#: _versions/3.8/guides/grpc-kubernetes.adoc
#, fuzzy
msgid "If your application does not use any Quarkus extension that exposes an HTTP server, you can still configure the probes to directly use the gRPC Health service by adding the property `quarkus.kubernetes.readiness-probe.grpc-action-enabled=true` into your configuration:"
msgstr "如果您的应用程序不使用任何暴露 HTTP 服务器的 Quarkus 扩展，您仍然可以在配置中添加 `quarkus.kubernetes.readiness-probe.grpc-action-enabled=true` 属性，将探针配置为直接使用 gRPC Health 服务："
