msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Kubernetes Config"
msgstr "Kubernetes 配置"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Quarkus includes the `kubernetes-config` extension which allows developers to use Kubernetes https://cloud.google.com/kubernetes-engine/docs/concepts/configmap[ConfigMaps] and https://cloud.google.com/kubernetes-engine/docs/concepts/secret[Secrets] as a configuration source, without having to mount them into the https://kubernetes.io/docs/concepts/workloads/pods/pod/[Pod] running the Quarkus application or make any other modifications to their Kubernetes `Deployment` (or OpenShift `DeploymentConfig`)."
msgstr "Quarkus 包含 `kubernetes-config` 扩展，允许开发人员将 Kubernetes link:https://cloud.google.com/kubernetes-engine/docs/concepts/configmap[ConfigMaps] 和 link:https://cloud.google.com/kubernetes-engine/docs/concepts/secret[Secrets] 用作配置源，而无需将其挂载到运行 Quarkus 应用程序的 link:https://kubernetes.io/docs/concepts/workloads/pods/pod/[Pod] 中，也无需对其 Kubernetes `Deployment` （或 OpenShift `DeploymentConfig` ）进行任何其他修改。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Configuration"
msgstr "配置"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid ""
"Once you have your Quarkus project configured you can add the `kubernetes-config` extension\n"
"by running the following command in your project base directory."
msgstr "配置好 Quarkus 项目后，就可以在项目基本目录下运行以下命令来添加 `kubernetes-config` 扩展。"

#: _versions/3.8/guides/kubernetes-config.adoc
msgid "This will add the following to your build file:"
msgstr "这会在你的构建文件中添加以下内容:"

#: _versions/3.8/guides/kubernetes-config.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.8/guides/kubernetes-config.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Usage"
msgstr "使用方法"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "The extension works by reading ConfigMaps and Secrets directly from the Kubernetes API server using the xref:kubernetes-client.adoc[Kubernetes Client]."
msgstr "该扩展通过使用 Kubernetes xref:kubernetes-client.adoc[Client] 直接从 xref:kubernetes-client.adoc[Kubernetes] API 服务器读取 ConfigMaps 和 Secrets 来工作。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "The extension understands the following types of ConfigMaps and Secrets as input sources:"
msgstr "该扩展可将以下类型的 ConfigMaps 和 Secrets 作为输入源："

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "ConfigMaps and Secrets that contain literal data (see https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-literal-values[this] for an example on how to create one)"
msgstr "包含字面数据的配置映射和秘钥（请参阅 link:https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-literal-values[此例] 了解如何创建配置映射和秘钥）"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "ConfigMaps and Secrets created from files named `application.properties`, `application.yaml` or `application.yml` (see https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-files[this] for an example on how to create one)."
msgstr "从名为 `application.properties` 、 `application.yaml` 或 `application.yml` 的文件创建的 ConfigMaps 和 Secrets（有关如何创建的示例，请参阅 link:https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-files[此处] ）。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "The extension is disabled by default in order to prevent the application for making API calls when it is not running in a Kubernetes environment. To enable it, set `quarkus.kubernetes-config.enabled=true` (for example using a specific xref:config-reference.adoc#profiles[profile])."
msgstr "该扩展默认为禁用，以防止应用程序不在 Kubernetes 环境中运行时进行 API 调用。要启用它，请设置 `quarkus.kubernetes-config.enabled=true` （例如使用特定 xref:config-reference.adoc#profiles[配置文件] ）。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid ""
"The values of `quarkus.kubernetes-config.config-maps` and `quarkus.kubernetes-config.secrets` determine which ConfigMaps and/or Secrets will be used as configuration sources. Keep in mind that these ConfigMaps and Secrets must be in the same Kubernetes `Namespace`\n"
"as the running application. If they are to be found in a different namespace, then `quarkus.kubernetes-config.namespace` must be set to the proper value."
msgstr "`quarkus.kubernetes-config.config-maps` 和 `quarkus.kubernetes-config.secrets` 的值决定了哪些 ConfigMaps 和/或 Secrets 将被用作配置源。请记住，这些 ConfigMaps 和 Secrets 必须与运行中的应用程序位于同一个 Kubernetes `Namespace` 中。如果要在不同的命名空间中找到它们，则必须将 `quarkus.kubernetes-config.namespace` 设置为适当的值。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Priority of obtained properties"
msgstr "获得财产的优先权"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "The properties obtained from the ConfigMaps and Secrets have a higher priority than (i.e. they override) any properties of the same name that are found in `application.properties` (or the YAML equivalents), but they have lower priority than properties set via Environment Variables or Java System Properties."
msgstr "从 ConfigMaps 和 Secrets 中获取的属性的优先级高于（即覆盖） `application.properties` （或 YAML 等价物）中的任何同名属性，但优先级低于通过环境变量或 Java 系统属性设置的属性。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Furthermore, when multiple ConfigMaps (or Secrets) are used, ConfigMaps (or Secrets) defined later in the list have a higher priority that ConfigMaps defined earlier in the list."
msgstr "此外，当使用多个配置映射（或机密）时，列表中后面定义的配置映射（或机密）比列表中前面定义的配置映射具有更高的优先级。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Finally, when both ConfigMaps and Secrets are used, the latter always a higher priority than the former."
msgstr "最后，在同时使用配置映射和机密信息时，后者的优先级总是高于前者。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Kubernetes Permissions"
msgstr "Kubernetes 权限"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid ""
"Since reading ConfigMaps involves interacting with the Kubernetes API Server, when https://kubernetes.io/docs/reference/access-authn-authz/rbac/[RBAC] is enabled on the cluster, the https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[ServiceAccount]\n"
"that is used to run the application needs to have the proper permissions for such access."
msgstr "由于读取 ConfigMaps 涉及与 Kubernetes API 服务器交互，因此在集群上启用 link:https://kubernetes.io/docs/reference/access-authn-authz/rbac/[RBAC] 时，用于运行应用程序的 link:https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[服务账户] 需要有适当的权限才能进行此类访问。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Thankfully, when using the `kubernetes-config` extension along with the xref:deploying-to-kubernetes.adoc[Kubernetes] extension, all the necessary Kubernetes resources to make that happen are automatically generated."
msgstr "值得庆幸的是，在使用 `kubernetes-config` 扩展和 xref:deploying-to-kubernetes.adoc[Kubernetes] 扩展时，所有必要的 Kubernetes 资源都会自动生成。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Secrets"
msgstr "秘密"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid ""
"By default, the xref:deploying-to-kubernetes.adoc[Kubernetes] extension doesn't generate the necessary resources to allow accessing secrets.\n"
"Set `quarkus.kubernetes-config.secrets.enabled=true` to generate the necessary role and corresponding role binding."
msgstr "默认情况下， xref:deploying-to-kubernetes.adoc[Kubernetes] 扩展不会生成允许访问机密的必要资源。设置 `quarkus.kubernetes-config.secrets.enabled=true` 可生成必要的角色和相应的角色绑定。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Example configuration"
msgstr "配置示例"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "A very common use case is to deploy a Quarkus application that needs to access a relational database which has itself already been deployed on Kubernetes. Using the `quarkus-kubernetes-config` extension makes this use case very simple to handle."
msgstr "一个非常常见的用例是部署一个需要访问关系数据库的 Quarkus 应用程序，而该数据库本身已经部署在 Kubernetes 上。使用 `quarkus-kubernetes-config` 扩展可以非常简单地处理这种用例。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Let's assume that our Quarkus application needs to talk to PostgreSQL and that when PostgreSQL was deployed on our Kubernetes cluster, a `Secret` named `postgresql` was created as part of that deployment and contains the following entries:"
msgstr "假设我们的 Quarkus 应用程序需要与 PostgreSQL 通信，在 Kubernetes 集群上部署 PostgreSQL 时，作为部署的一部分，创建了名为 `postgresql` 的 `Secret` ，其中包含以下条目："

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "`database-name`"
msgstr "`database-name`"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "`database-user`"
msgstr "`database-user`"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "`database-password`"
msgstr "`database-password`"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "One possible way to make Quarkus use these entries to connect the database is to use the following configuration:"
msgstr "让 Quarkus 使用这些条目连接数据库的一个可行方法是使用以下配置："

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Enable reading of secrets. Note the use of `%prod` profile as we only want this setting applied when the application is running in production."
msgstr "启用秘密读取。请注意使用 `%prod` 配置文件，因为我们只希望在应用程序在生产环境中运行时应用此设置。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Configure the name of the secret that will be used. This doesn't need to be prefixed with the `%prod` profile as it won't have any effect if secret reading is disabled."
msgstr "配置将使用的秘密名称。该名称不需要以 `%prod` 配置文件为前缀，因为如果禁用了密文读取功能，该名称不会有任何影响。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Quarkus will substitute `${database-name}` with the value obtained from the entry with name `database-name` of the `postgres` Secret. `somehost` is the name of the Kubernetes `Service` that was created when PostgreSQL was deployed to Kubernetes."
msgstr "`${database-name}` `database-name` `postgres` `somehost` 是 PostgreSQL 部署到 Kubernetes 时创建的 Kubernetes 的名称。 `Service` "

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Quarkus will substitute `${database-user}` with the value obtained from the entry with name `database-user` of the `postgres` Secret."
msgstr "Quarkus 将用 `postgres` Secret 中名称为 `database-user` 的条目中的值代替 `${database-user}` 。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Quarkus will substitute `${database-password}` with the value obtained from the entry with name `database-password` of the `postgres` Secret."
msgstr "Quarkus 将用 `postgres` Secret 中名称为 `database-password` 的条目中的值代替 `${database-password}` 。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "The values above allow the application to be completely agnostic of the actual database configuration used in production while also not inhibiting the usability of the application at development time."
msgstr "上述数值可使应用程序与生产中使用的实际数据库配置完全无关，同时也不会影响开发时应用程序的可用性。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "Alternatives"
msgstr "替代品"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "The use of the `quarkus-kubernetes-config` extensions is completely optional as there are other ways an application can be configured to use ConfigMaps or Secrets."
msgstr "`quarkus-kubernetes-config` 扩展的使用完全是可选的，因为还有其他方法可以将应用程序配置为使用 ConfigMaps 或 Secrets。"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid ""
"One common alternative is to map each entry of the ConfigMap and / Secret to an environment variable on the Kubernetes `Deployment` - see link:https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables[this] for more details.\n"
"To achieve that in Quarkus, we could use the `quarkus-kubernetes` extension (which is responsible for creating Kubernetes manifests and include the following configuration) and configure it as so:"
msgstr "一种常见的替代方法是将 ConfigMap 和/Secret 的每个条目映射到 Kubernetes `Deployment` 上的环境变量--详情请参见 link:https://kubernetes.io/docs/concepts/configuration/secret/#use-case-as-container-environment-variables[本文] 。要在 Quarkus 中实现这一点，我们可以使用 `quarkus-kubernetes` 扩展（该扩展负责创建 Kubernetes 清单并包含以下配置），并对其进行如下配置："

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "The end result of the above configuration would be the following `env` part being applied the generated `Deployment`:"
msgstr "上述配置的最终结果是在生成的 `Deployment` 中应用以下 `env` 部分："

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "See xref:deploying-to-kubernetes.adoc#secret-mapping[this] for more details."
msgstr "更多详情，请参阅 xref:deploying-to-kubernetes.adoc#secret-mapping[此处] 。"

#: _versions/3.8/guides/kubernetes-config.adoc
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/3.8/guides/kubernetes-config.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
