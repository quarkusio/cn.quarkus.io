# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/qute.adoc:6
#, no-wrap
msgid "Qute Templating Engine"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:16
msgid "Qute is a templating engine designed specifically to meet the Quarkus needs.  The usage of reflection is minimized to reduce the size of native images.  The API combines both the imperative and the non-blocking reactive style of coding.  In the development mode, all files located in `src/main/resources/templates` are watched for changes and modifications are immediately visible.  Furthermore, we try to detect most of the template problems at build time.  In this guide, you will learn how to easily render templates in your application."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:17
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:21
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:23
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:25
msgid "The solution is located in the `qute-quickstart` {quickstarts-tree-url}/qute-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:26
#, no-wrap
msgid "Hello World with JAX-RS"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:30
msgid "If you want to use Qute in your JAX-RS application, you need to add the `quarkus-resteasy-qute` extension first.  In your `pom.xml` file, add:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:37
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-qute</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:40
#: upstream/_versions/2.2/guides/qute.adoc:104
msgid "We'll start with a very simple template:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:41
#, no-wrap
msgid "hello.txt"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:45
#: upstream/_versions/2.2/guides/qute.adoc:109
#, no-wrap
msgid "Hello {name}! <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:47
#: upstream/_versions/2.2/guides/qute.adoc:111
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:49
msgid "By default, all files located in the `src/main/resources/templates` directory and its subdirectories are registered as templates. Templates are validated during startup and watched for changes in the development mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:51
msgid "Now let's inject the \"compiled\" template in the resource class."
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:52
#: upstream/_versions/2.2/guides/qute.adoc:114
#: upstream/_versions/2.2/guides/qute.adoc:149
#: upstream/_versions/2.2/guides/qute.adoc:177
#, no-wrap
msgid "HelloResource.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:56
#: upstream/_versions/2.2/guides/qute.adoc:118
#: upstream/_versions/2.2/guides/qute.adoc:153
#: upstream/_versions/2.2/guides/qute.adoc:181
#: upstream/_versions/2.2/guides/qute.adoc:237
#: upstream/_versions/2.2/guides/qute.adoc:299
#: upstream/_versions/2.2/guides/qute.adoc:370
#: upstream/_versions/2.2/guides/qute.adoc:449
#, no-wrap
msgid "package org.acme.quarkus.sample;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:61
#: upstream/_versions/2.2/guides/qute.adoc:123
#: upstream/_versions/2.2/guides/qute.adoc:158
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.QueryParam;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:64
#: upstream/_versions/2.2/guides/qute.adoc:309
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:67
#: upstream/_versions/2.2/guides/qute.adoc:129
#, no-wrap
msgid ""
"@Path(\"hello\")\n"
"public class HelloResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:70
#, no-wrap
msgid ""
"    @Inject\n"
"    Template hello; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:77
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return hello.data(\"name\", name); <2> <3>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:79
msgid "If there is no `@Location` qualifier provided, the field name is used to locate the template. In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:80
msgid "`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered. In this case, we put the name value under the key `name`. The data map is accessible during rendering."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:81
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:83
msgid "If your application is running, you can request the endpoint:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:88
#, no-wrap
msgid ""
"$ curl -w \"\\n\" http://localhost:8080/hello?name=Martin\n"
"Hello Martin!\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:90
#, no-wrap
msgid "Type-safe templates"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:93
msgid "There's an alternate way to declare your templates in your Java code, which relies on the following convention:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:97
msgid "Organise your template files in the `/src/main/resources/templates` directory, by grouping them into one directory per resource class. So, if your `ItemResource` class references two templates `hello` and `goodbye`, place them at `/src/main/resources/templates/ItemResource/hello.txt` and `/src/main/resources/templates/ItemResource/goodbye.txt`. Grouping templates per resource class makes it easier to navigate to them."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:98
msgid "In each of your resource class, declare a `@CheckedTemplate static class Template {}` class within your resource class."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:99
msgid "Declare one `public static native TemplateInstance method();` per template file for your resource."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:100
msgid "Use those static methods to build your template instances."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:102
msgid "Here's the previous example, rewritten using this style:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:105
#, no-wrap
msgid "HelloResource/hello.txt"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:113
msgid "Now let's declare and use those templates in the resource class."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:126
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.CheckedTemplate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:134
#, no-wrap
msgid ""
"    @CheckedTemplate\n"
"    public static class Templates {\n"
"        public static native TemplateInstance hello(String name); <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:141
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return Templates.hello(name); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:143
msgid "This declares a template with path `templates/HelloResource/hello`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:144
msgid "`Templates.hello()` returns a new template instance that is returned from the resource method. Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:146
msgid "Once you have declared a `@CheckedTemplate` class, we will check that all its methods point to existing templates, so if you try to use a template from your Java code and you forgot to add it, we will let you know at build time :)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:148
msgid "Keep in mind this style of declaration allows you to reference templates declared in other resources too:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:160
#, no-wrap
msgid "import io.quarkus.qute.TemplateInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:163
#, no-wrap
msgid ""
"@Path(\"goodbye\")\n"
"public class GoodbyeResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:170
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public TemplateInstance get(@QueryParam(\"name\") String name) {\n"
"        return HelloResource.Templates.hello(name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/qute.adoc:172
#, no-wrap
msgid "Top-level type-safe templates"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:176
msgid "Naturally, if you want to declare templates at the top-level, directly in `/src/main/resources/templates/hello.txt`, for example, you can declare them in a toplevel (non-nested) `Templates` class:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:185
#: upstream/_versions/2.2/guides/qute.adoc:248
#, no-wrap
msgid ""
"import io.quarkus.qute.TemplateInstance;\n"
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.CheckedTemplate;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:190
#, no-wrap
msgid ""
"@CheckedTemplate\n"
"public class Templates {\n"
"    public static native TemplateInstance hello(String name); <1>\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:192
msgid "This declares a template with path `templates/hello`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:194
#, no-wrap
msgid "Template Parameter Declarations "
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:197
msgid "If you declare a *parameter declaration* in a template then Qute attempts to validate all expressions that reference this parameter and if an incorrect expression is found the build fails."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:199
msgid "Let's suppose we have a simple class like this:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:200
#, no-wrap
msgid "Item.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:207
#, no-wrap
msgid ""
"public class Item {\n"
"    public String name;\n"
"    public BigDecimal price;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:210
msgid "And we'd like to render a simple HTML page that contains the item name and price."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:212
#: upstream/_versions/2.2/guides/qute.adoc:273
msgid "Let's start again with the template:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:213
#, no-wrap
msgid "ItemResource/item.html"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:227
#, no-wrap
msgid ""
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>{item.name}</title> <1>\n"
"</head>\n"
"<body>\n"
"    <h1>{item.name}</h1>\n"
"    <div>Price: {item.price}</div> <2> \n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:229
#: upstream/_versions/2.2/guides/qute.adoc:292
msgid "This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:230
msgid "This is also validated."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:232
msgid "Finally, let's create a resource class with type-safe templates:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:233
#: upstream/_versions/2.2/guides/qute.adoc:295
#, no-wrap
msgid "ItemResource.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:244
#: upstream/_versions/2.2/guides/qute.adoc:306
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:251
#: upstream/_versions/2.2/guides/qute.adoc:312
#, no-wrap
msgid ""
"@Path(\"item\")\n"
"public class ItemResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:256
#, no-wrap
msgid ""
"    @CheckedTemplate\n"
"    public static class Templates {\n"
"        public static native TemplateInstance item(Item item); <1>\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:264
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"{id}\")\n"
"    @Produces(MediaType.TEXT_HTML)\n"
"    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n"
"        return Templates.item(service.findItem(id)); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:266
msgid "Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:267
#: upstream/_versions/2.2/guides/qute.adoc:329
msgid "Make the `Item` object accessible in the template."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/qute.adoc:268
#, no-wrap
msgid "Template parameter declaration inside the template itself"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:271
msgid "Alternatively, you can declare your template parameters in the template file itself."
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:274
#, no-wrap
msgid "item.html"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:289
#, no-wrap
msgid ""
"{@org.acme.Item item} <1>\n"
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>{item.name}</title> <2>\n"
"</head>\n"
"<body>\n"
"    <h1>{item.name}</h1>\n"
"    <div>Price: {item.price}</div> \n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:291
msgid "Optional parameter declaration. Qute attempts to validate all expressions that reference the parameter `item`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:294
msgid "Finally, let's create a resource class."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:315
#, no-wrap
msgid ""
"    @Inject\n"
"    ItemService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:318
#, no-wrap
msgid ""
"    @Inject\n"
"    Template item; <1>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:326
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"{id}\")\n"
"    @Produces(MediaType.TEXT_HTML)\n"
"    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n"
"        return item.data(\"item\", service.findItem(id)); <2>\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:328
msgid "Inject the template with path `templates/item.html`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:330
#, no-wrap
msgid "Template Extension Methods"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:333
#, no-wrap
msgid "*Template extension methods* are used to extend the set of accessible properties of data objects.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:337
msgid "Sometimes, you're not in control of the classes that you want to use in your template, and you cannot add methods to them. Template extension methods allows you to declare new method for those classes that will be available from your templates just as if they belonged to the target class."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:342
msgid "Let's keep extending on our simple HTML page that contains the item name, price and add a discounted price.  The discounted price is sometimes called a \"computed property\".  We will implement a template extension method to render this property easily.  Let's update our template:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:343
#, no-wrap
msgid "HelloResource/item.html"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:360
#, no-wrap
msgid ""
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>{item.name}</title>\n"
"</head>\n"
"<body>\n"
"    <h1>{item.name}</h1>\n"
"    <div>Price: {item.price}</div> \n"
"    {#if item.price > 100} <1>\n"
"    <div>Discounted Price: {item.discountedPrice}</div> <2>\n"
"    {/if}\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:362
msgid "`if` is a basic control flow section."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:363
msgid "This expression is also validated against the `Item` class and obviously there is no such property declared. However, there is a template extension method declared on the `TemplateExtensions` class - see below."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:365
msgid "Finally, let's create a class where we put all our extension methods:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:366
#, no-wrap
msgid "TemplateExtensions.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:372
#, no-wrap
msgid "import io.quarkus.qute.TemplateExtension;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:375
#, no-wrap
msgid ""
"@TemplateExtension\n"
"public class TemplateExtensions {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:380
#, no-wrap
msgid ""
"    public static BigDecimal discountedPrice(Item item) { <1>\n"
"        return item.price.multiply(new BigDecimal(\"0.9\"));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:382
msgid "A static template extension method can be used to add \"computed properties\" to a data class. The class of the first parameter is used to match the base object and the method name is used to match the property name."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:385
msgid "you can place template extension methods in every class if you annotate them with `@TemplateExtension` but we advise to keep them either grouped by target type, or in a single `TemplateExtensions` class by convention."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:386
#, no-wrap
msgid "Rendering Periodic Reports"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:391
msgid "Templating engine could be also very useful when rendering periodic reports.  You'll need to add the `quarkus-scheduler` and `quarkus-qute` extensions first.  In your `pom.xml` file, add:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:402
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-qute</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-scheduler</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:405
msgid "Let's suppose the have a `SampleService` bean whose `get()` method returns a list of samples."
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:406
#, no-wrap
msgid "Sample.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:414
#, no-wrap
msgid ""
"public class Sample {\n"
"    public boolean valid;\n"
"    public String name;\n"
"    public String data;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:417
msgid "The template is simple:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:418
#, no-wrap
msgid "report.html"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:441
#, no-wrap
msgid ""
"<!DOCTYPE html>\n"
"<html>\n"
"<head>\n"
"<meta charset=\"UTF-8\">\n"
"<title>Report {now}</title>\n"
"</head>\n"
"<body>\n"
"    <h1>Report {now}</h1>\n"
"    {#for sample in samples} <1>\n"
"      <h2>{sample.name ?: 'Unknown'}</h2> <2>\n"
"      <p>\n"
"      {#if sample.valid}\n"
"        {sample.data}\n"
"      {#else}\n"
"        <strong>Invalid sample found</strong>.\n"
"      {/if}\n"
"      </p>\n"
"    {/for}\n"
"</body>\n"
"</html>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:443
msgid "The loop section makes it possible to iterate over iterables, maps and streams."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:444
msgid "This value expression is using the https://en.wikipedia.org/wiki/Elvis_operator[elvis operator] - if the name is null the default value is used."
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/qute.adoc:446
#, no-wrap
msgid "ReportGenerator.java"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:451
#, no-wrap
msgid "import javax.inject.Inject;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:455
#, no-wrap
msgid ""
"import io.quarkus.qute.Template;\n"
"import io.quarkus.qute.Location;\n"
"import io.quarkus.scheduler.Scheduled;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:457
#, no-wrap
msgid "public class ReportGenerator {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:460
#, no-wrap
msgid ""
"    @Inject\n"
"    SampleService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:463
#, no-wrap
msgid ""
"    @Location(\"reports/v1/report_01\") <1>\n"
"    Template report;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:473
#, no-wrap
msgid ""
"    @Scheduled(cron=\"0 30 * * * ?\") <2>\n"
"    void generate() {\n"
"        String result = report\n"
"            .data(\"samples\", service.get())\n"
"            .data(\"now\", java.time.LocalDateTime.now())\n"
"            .render(); <3>\n"
"        // Write the result somewhere...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:475
msgid "In this case, we use the `@Location` qualifier to specify the template path: `templates/reports/v1/report_01.html`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:476
msgid "Use the `@Scheduled` annotation to instruct Quarkus to execute this method on the half hour. For more information see the link:scheduler[Scheduler] guide."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:477
msgid "The `TemplateInstance.render()` method triggers rendering. Note that this method blocks the current thread."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:478
#, no-wrap
msgid "Reactive and Asynchronous APIs"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:481
msgid "Templates can be rendered as a `CompletionStage<String>` (completed with the rendered output asynchronously) or as `Publisher<String>` containing the rendered chunks:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:486
#, no-wrap
msgid ""
"CompletionStage<String> async = template.data(\"name\", \"neo\").renderAsync();\n"
"Publisher<String> publisher = template.data(\"name\", \"neo\").publisher();\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:491
msgid "In the case of a `Publisher`, the template is rendered chunk by chunk following the requests from the subscriber.  The rendering is not started until a subscriber requests it.  The returned `Publisher` is an instance of `io.smallrye.mutiny.Multi`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:493
msgid "It is possible to create an instance of `io.smallrye.mutiny.Uni` as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/qute.adoc:497
#, no-wrap
msgid "Uni<String> uni = Uni.createFrom().completionStage(() -> template.data(\"name\", \"neo\").renderAsync());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:500
msgid "In this case, the rendering only starts once the subscriber requests it."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:501
#, no-wrap
msgid "Qute Reference Guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/qute.adoc:504
msgid "To learn more about Qute, please refer to the link:qute-reference[Qute reference guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/qute.adoc:506
#, no-wrap
msgid "Qute Configuration Reference"
msgstr ""
