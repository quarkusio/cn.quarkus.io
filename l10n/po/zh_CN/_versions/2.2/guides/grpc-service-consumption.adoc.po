# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:6
#, no-wrap
msgid "Consuming a gRPC Service"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:11
msgid "gRPC clients can be injected in your application code."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:14
msgid "Consuming gRPC services requires the gRPC classes to be generated.  Place your `proto` files in `src/main/proto` and run `mvn compile`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:15
#, no-wrap
msgid "Stubs and Injection"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:19
msgid "gRPC generation provides several stubs, providing different ways to consume a gRPC service.  You can inject:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:21
msgid "a service interface using the Mutiny API,"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:22
msgid "a blocking stub using the gRPC API,"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:23
msgid "a reactive stub based on Mutiny,"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:24
msgid "the gRPC `io.grpc.Channel`, that lets you create other types of stubs."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:28
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:76
#, no-wrap
msgid "import io.quarkus.grpc.GrpcClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:32
#, no-wrap
msgid ""
"import hello.Greeter;\n"
"import hello.GreeterGrpc.GreeterBlockingStub;\n"
"import hello.MutinyGreeterGrpc.MutinyGreeterStub;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:34
#, no-wrap
msgid "class MyBean {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:38
#, no-wrap
msgid ""
"   // A service interface using the Mutiny API\n"
"   @GrpcClient(\"helloService\")                   // <1>\n"
"   Greeter greeter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:42
#, no-wrap
msgid ""
"   // A reactive stub based on Mutiny\n"
"   @GrpcClient(\"helloService\")\n"
"   MutinyGreeterGrpc.MutinyGreeterStub mutiny;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:46
#, no-wrap
msgid ""
"   // A blocking stub using the gRPC API\n"
"   @GrpcClient\n"
"   GreeterGrpc.GreeterBlockingStub helloService; // <2>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:49
#, no-wrap
msgid ""
"   @GrpcClient(\"hello-service\")\n"
"   Channel channel;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:51
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:199
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:53
msgid "A gRPC client injection point must be annotated with the `@GrpcClient` qualifier. This qualifier can be used to specify the name that is used to configure the underlying gRPC client. For example, if you set it to `hello-service`, configuring the host of the service is done using the `quarkus.grpc.clients.**hello-service**.host`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:54
msgid "If the name is not specified via the `GrpcClient#value()` then the field name is used instead, e.g. `helloService` in this particular case."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:57
msgid "The stub class names are derived from the service name used in your `proto` file.  For example, if you use `Greeter` as a service name as in:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:61
#, no-wrap
msgid "option java_package = \"hello\";\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:65
#, no-wrap
msgid ""
"service Greeter {\n"
"    rpc SayHello (HelloRequest) returns (HelloReply) {}\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:68
msgid "Then the service interface name is: `hello.Greeter`, the Mutiny stub name is: `hello.MutinyGreeterGrpc.MutinyGreeterStub` and the blocking stub name is: `hello.GreeterGrpc.GreeterBlockingStub`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:69
#, no-wrap
msgid "Examples"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:71
#, no-wrap
msgid "Service Interface"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:78
#, no-wrap
msgid "import hello.Greeter;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:84
#, no-wrap
msgid ""
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:87
#, no-wrap
msgid ""
"@Path(\"/hello\")\n"
"public class ExampleResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:90
#, no-wrap
msgid ""
"   @GrpcClient <1>\n"
"   Greeter hello;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:98
#, no-wrap
msgid ""
"   @GET\n"
"   @Path(\"/mutiny/{name}\")\n"
"   public Uni<String> helloMutiny(@PathParam(\"name\") String name) {\n"
"      return hello.sayHello(HelloRequest.newBuilder().setName(name).build())\n"
"            .onItem().transform(HelloReply::getMessage);\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:100
msgid "The service name is derived from the injection point - the field name is used. The `quarkus.grpc.clients.hello.host` property must be set."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:101
#, no-wrap
msgid "Blocking Stub"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:105
#, no-wrap
msgid "---\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:107
msgid "import io.quarkus.grpc.GrpcClient;"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:109
msgid "import hello.GreeterGrpc.GreeterBlockingStub;"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:115
msgid "import javax.ws.rs.GET; import javax.ws.rs.Path; import javax.ws.rs.PathParam; import javax.ws.rs.Produces; import javax.ws.rs.core.MediaType;"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:118
msgid "@Path(\"/hello\")  public class ExampleResource {"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:121
#, no-wrap
msgid ""
"   @GrpcClient(\"hello\") <1>\n"
"   GreeterGrpc.GreeterBlockingStub blockingHelloService;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:128
#, no-wrap
msgid ""
"   @GET\n"
"   @Path(\"/blocking/{name}\")\n"
"   public String helloBlocking(@PathParam(\"name\") String name) {\n"
"      return blockingHelloService.sayHello(HelloRequest.newBuilder().setName(name).build()).getMessage();\n"
"   }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:130
msgid "The `quarkus.grpc.clients.hello.host` property must be set."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:131
#, no-wrap
msgid "Handling streams"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:134
msgid "gRPC allows sending and receiving streams:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:142
#, no-wrap
msgid ""
"service Streaming {\n"
"    rpc Source(Empty) returns (stream Item) {} // Returns a stream\n"
"    rpc Sink(stream Item) returns (Empty) {}   // Reads a stream\n"
"    rpc Pipe(stream Item) returns (stream Item) {}  // Reads a streams and return a streams\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:145
msgid "Using the Mutiny stub, you can interact with these as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:149
#, no-wrap
msgid "package io.quarkus.grpc.example.streaming;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:154
#, no-wrap
msgid ""
"import io.grpc.examples.streaming.Empty;\n"
"import io.grpc.examples.streaming.Item;\n"
"import io.grpc.examples.streaming.MutinyStreamingGrpc;\n"
"import io.quarkus.grpc.GrpcClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:156
#, no-wrap
msgid "import io.smallrye.mutiny.Multi;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:163
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.GET;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.PathParam;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:167
#, no-wrap
msgid ""
"@Path(\"/streaming\")\n"
"@Produces(MediaType.APPLICATION_JSON)\n"
"public class StreamingEndpoint {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:170
#, no-wrap
msgid ""
"    @GrpcClient\n"
"    MutinyStreamingGrpc.MutinyStreamingStub streaming;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:177
#, no-wrap
msgid ""
"    @GET\n"
"    public Multi<String> invokeSource() {\n"
"        // Retrieve a stream\n"
"        return client.source(Empty.newBuilder().build())\n"
"                .onItem().transform(Item::getValue);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:187
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"sink/{max}\")\n"
"    public Uni<Void> invokeSink(@PathParam(\"max\") int max) {\n"
"        // Send a stream and wait for completion\n"
"        Multi<Item> inputs = Multi.createFrom().range(0, max)\n"
"                .map(i -> Integer.toString(i))\n"
"                .map(i -> Item.newBuilder().setValue(i).build());\n"
"        return client.sink(inputs).onItem().ignore().andContinueWithNull();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:197
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{max}\")\n"
"    public Multi<String> invokePipe(@PathParam(\"max\") int max) {\n"
"        // Send a stream and retrieve a stream\n"
"        Multi<Item> inputs = Multi.createFrom().range(0, max)\n"
"                .map(i -> Integer.toString(i))\n"
"                .map(i -> Item.newBuilder().setValue(i).build());\n"
"        return client.pipe(inputs).onItem().transform(Item::getValue);\n"
"    }\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:202
#, no-wrap
msgid "Client configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:205
msgid "For each gRPC service you inject in your application, you can configure the following attributes:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:209
msgid "The `client-name` is the name set in the `@GrpcClient` or derived from the injection point if not explicitly defined."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:212
msgid "The following examples uses _hello_ as the client name.  Don't forget to replace it with the name you used in in the `@GrpcClient` annotation."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:213
#, no-wrap
msgid "Enabling TLS"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:218
msgid "To enable TLS, use the following configuration.  Note that all paths in the configuration may either specify a resource on the classpath (typically from `src/main/resources` or its subfolder) or an external file."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:222
#, no-wrap
msgid "quarkus.grpc.clients.hello.host=localhost\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:225
#, no-wrap
msgid ""
"# either a path to a classpath resource or to a file:\n"
"quarkus.grpc.clients.hello.ssl.trust-store=tls/ca.pem\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:228
msgid "When SSL/TLS is configured, `plain-text` is automatically disabled."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:229
#, no-wrap
msgid "TLS with Mutual Auth"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:232
msgid "To use TLS with mutual authentication, use the following configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:237
#, no-wrap
msgid ""
"quarkus.grpc.clients.hello.host=localhost\n"
"quarkus.grpc.clients.hello.plain-text=false\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:242
#, no-wrap
msgid ""
"# all the following may use either a path to a classpath resource or to a file:\n"
"quarkus.grpc.clients.hello.ssl.certificate=tls/client.pem\n"
"quarkus.grpc.clients.hello.ssl.key=tls/client.key\n"
"quarkus.grpc.clients.hello.ssl.trust-store=tls/ca.pem\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:244
#, no-wrap
msgid "Client Deadlines"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:248
msgid "It's always reasonable to set a deadline (timeout) for a gRPC client, i.e. to specify a duration of time after which the RPC times out and the client receives the status error `DEADLINE_EXCEEDED`.  You can specify the deadline via the `quarkus.grpc.clients.\"service-name\".deadline` configuration property, e.g.:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:253
#, no-wrap
msgid ""
"quarkus.grpc.clients.hello.host=localhost\n"
"quarkus.grpc.clients.hello.deadline=2s <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:255
msgid "Set the deadline for all injected clients."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:257
#, no-wrap
msgid "Client Interceptors"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:260
msgid "You can implement a gRPC client interceptor by implementing an `@ApplicationScoped` bean implementing `io.grpc.ClientInterceptor`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:265
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyInterceptor implements ClientInterceptor {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:272
#, no-wrap
msgid ""
"    @Override\n"
"    public <ReqT, RespT> ClientCall<ReqT, RespT> interceptCall(MethodDescriptor<ReqT, RespT> method,\n"
"            CallOptions callOptions, Channel next) {\n"
"       // ...\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:275
msgid "Check the https://grpc.github.io/grpc-java/javadoc/io/grpc/ClientInterceptor.html[ClientInterceptor JavaDoc] to properly implement your interceptor."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:277
msgid "When you have multiple client interceptors, you can order them by implementing the `javax.enterprise.inject.spi.Prioritized` interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:282
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class MyInterceptor implements ClientInterceptor, Prioritized {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:288
#, no-wrap
msgid ""
"    @Override\n"
"    public <ReqT, RespT> ClientCall<ReqT, RespT> interceptCall(MethodDescriptor<ReqT, RespT> method,\n"
"            CallOptions callOptions, Channel next) {\n"
"       // ...\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:294
#, no-wrap
msgid ""
"    @Override\n"
"    public int getPriority() {\n"
"        return 10;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/grpc-service-consumption.adoc:297
msgid "Interceptors with the highest priority are called first.  The default priority, used if the interceptor does not implement the `Prioritized` interface, is `0`."
msgstr ""
