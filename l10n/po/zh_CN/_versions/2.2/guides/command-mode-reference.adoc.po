# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:6
#, no-wrap
msgid "Command Mode Applications"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:11
msgid "This reference covers how to write applications that run and then exit."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:12
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:16
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:18
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:20
msgid "The solution is located in the `getting-started-command-mode` {quickstarts-tree-url}/getting-started-command-mode[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:21
#, no-wrap
msgid "Writing Command Mode Applications"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:25
msgid "There are two different approaches that can be used to implement applications that exit."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:27
msgid "Implement `QuarkusApplication` and have Quarkus run this method automatically"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:28
msgid "Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:31
msgid "In this document the `QuarkusApplication` instance is referred to as the application main, and a class with a Java main method is the Java main."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:33
msgid "The simplest possible command mode application with access to Quarkus API's might appear as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:38
#, no-wrap
msgid ""
"import io.quarkus.runtime.QuarkusApplication;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:47
#, no-wrap
msgid ""
"@QuarkusMain    // <.>\n"
"public class HelloWorldMain implements QuarkusApplication {\n"
"  @Override\n"
"  public int run(String... args) throws Exception {   // <.>\n"
"    System.out.println(\"Hello World\");\n"
"    return 10;\n"
" }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:50
msgid "<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.  <.> The `run` method is invoked once Quarkus starts, and the application stops when it finishes."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:51
#, no-wrap
msgid "Contexts"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:55
msgid "To get access to your application beans and services, be aware that a `@QuarkusMain` instance is an application scoped bean by default. It has access to singletons, application and dependent scoped beans. If you want to interact with beans that requires a request scope put a `@ActivateRequestContext` on your `run()` method."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:57
msgid "This let `run()` have access to methods like `listAll()` and `query*` methods on a Panache Entity. Without it you will eventually get a `ContextNotActiveException` when accessing such classes/beans."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:58
#, no-wrap
msgid "Main method"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:60
msgid "If we want to use a Java main to run the application main it would look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:65
#, no-wrap
msgid ""
"import io.quarkus.runtime.Quarkus;\n"
"import io.quarkus.runtime.annotations.QuarkusMain;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:68
#, no-wrap
msgid ""
"@QuarkusMain\n"
"public class JavaMain {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:73
#, no-wrap
msgid ""
"    public static void main(String... args) {\n"
"        Quarkus.run(HelloWorldMain.class, args);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:77
msgid "This is effectively the same as running the `HelloWorldMain` application main directly, but has the advantage it can be run from the IDE."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:79
msgid "If a class that implements `QuarkusApplication` and has a Java main then the Java main will be run."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:84
msgid "It is recommended that a Java main perform very little logic, and just launch the application main. In development mode the Java main will run in a different ClassLoader to the main application, so may not behave as you would expect."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:85
#, no-wrap
msgid "Multiple Main Methods"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:91
msgid "It is possible to have multiple main methods in an application, and select between them at build time.  The `@QuarkusMain` annotation takes an optional 'name' parameter, and this can be used to select the main to run using the `quarkus.package.main-class` build time configuration option. If you don't want to use annotations this can also be used to specify the fully qualified name of a main class."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:95
msgid "By default the `@QuarkusMain` with no name (i.e. the empty string) will be used, and if it is not present and `quarkus.package.main-class` is not specified then Quarkus will automatically generate a main class that just runs the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:99
msgid "The `name` of `@QuarkusMain` must be unique (including the default of the empty string). If you have multiple `@QuarkusMain` annotations in your application the build will fail if the names are not unique."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:100
#, no-wrap
msgid "The command mode lifecycle"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:103
msgid "When running a command mode application the basic lifecycle is as follows:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:105
msgid "Start Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:106
msgid "Run the `QuarkusApplication` main method"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:107
msgid "Shut down Quarkus and exit the JVM after the main method returns"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:111
msgid "Shutdown is always initiated by the application main thread returning. If you want to run some logic on startup, and then run like a normal application (i.e. not exit) then you should call `Quarkus.waitForExit` from the main thread (A non-command mode application is essentially just running an application that just calls `waitForExit`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:114
msgid "If you want to shut down a running application and you are not in the main thread then you should call `Quarkus.asyncExit` in order to unblock the main thread and initiate the shutdown process."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:115
#, no-wrap
msgid "Development Mode"
msgstr "开发模式"

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:118
msgid "Also for command mode applications the dev mode is supported. When you run `mvn quarkus:dev`, the command mode application is executed."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:120
msgid "As command mode applications will often require arguments to be passed on the commandline, this is also possible in dev mode via the `quarkus.args` system property. For example `mvn quarkus:dev -Dquarkus.args='--help'` and the same can be achieved with Gradle: `./gradlew quarkusDev --quarkus-args='--help'`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:122
msgid "You should see the following down the bottom of the screen after the application is stopped:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:125
#, no-wrap
msgid "--\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:127
msgid "Press [space] to restart, [e] to edit command line args (currently '-w --tags 1.0.1.Final'), [r] to resume testing, [o] Toggle test output, [h] for more options>"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/command-mode-reference.adoc:131
msgid "You can press the `Space bar` key and the application will be started again.  You can also use the `e` hotkey to edit the command line arguments and restart your application."
msgstr ""
