# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/spring-security.adoc:6
#, no-wrap
msgid "Quarkus Extension for Spring Security API"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:11
msgid "While users are encouraged to use link:security#standard-security-annotations[Java standard annotations for security authorizations], Quarkus provides a compatibility layer for Spring Security in the form of the `spring-security` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:13
msgid "This guide explains how a Quarkus application can leverage the well known Spring Security annotations to define authorizations on RESTful services using roles."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:14
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:17
msgid "To complete this guide, you need:"
msgstr "要完成这个指南，你需要："

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:19
msgid "less than 15 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:20
msgid "an IDE"
msgstr "一个编辑器"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:21
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "安装JDK 11以上版本并正确配置了 `JAVA_HOME`"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:22
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:23
msgid "Some familiarity with the Spring Web extension"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:25
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:29
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:31
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:33
msgid "The solution is located in the `spring-security-quickstart` {quickstarts-tree-url}/spring-security-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:34
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:37
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:47
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=spring-security-quickstart \\\n"
"    -DclassName=\"org.acme.spring.security.GreetingController\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"spring-web,spring-security,quarkus-elytron-security-properties-file\"\n"
"cd spring-security-quickstart\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:50
msgid "This command generates a Maven project with a REST endpoint and imports the `spring-web`, `spring-security` and `security-properties-file` extensions."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:53
msgid "If you already have your Quarkus project configured, you can add the `spring-web`, `spring-security` and `security-properties-file` extensions to your project by running the following command in your project base directory:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:57
#, no-wrap
msgid "./mvnw quarkus:add-extension -Dextensions=\"spring-web,spring-security,quarkus-elytron-security-properties-file\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:60
msgid "This will add the following to your `pom.xml`:"
msgstr "这将在你的 `pom.xml` 中添加以下内容："

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:75
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-web</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-spring-security</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-elytron-security-properties-file</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:78
msgid "For more information about `security-properties-file`, you can check out the guide of the link:security-properties[quarkus-elytron-security-properties-file] extension."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:79
#, no-wrap
msgid "GreetingController"
msgstr "GreetingController"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:83
msgid "The Quarkus Maven plugin automatically generated a controller with the Spring Web annotations to define our REST endpoint (instead of the JAX-RS ones used by default).  The `src/main/java/org/acme/spring/web/GreetingController.java` file looks as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:87
#: upstream/_versions/2.2/guides/spring-security.adoc:110
#: upstream/_versions/2.2/guides/spring-security.adoc:147
#: upstream/_versions/2.2/guides/spring-security.adoc:186
#, no-wrap
msgid "package org.acme.spring.security;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:91
#, no-wrap
msgid ""
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:95
#: upstream/_versions/2.2/guides/spring-security.adoc:156
#, no-wrap
msgid ""
"@RestController\n"
"@RequestMapping(\"/greeting\")\n"
"public class GreetingController {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:101
#, no-wrap
msgid ""
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:103
#: upstream/_versions/2.2/guides/spring-security.adoc:181
#, no-wrap
msgid "GreetingControllerTest"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:106
msgid "Note that a test for the controller has been created as well:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:113
#: upstream/_versions/2.2/guides/spring-security.adoc:189
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:116
#: upstream/_versions/2.2/guides/spring-security.adoc:192
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.is;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:119
#: upstream/_versions/2.2/guides/spring-security.adoc:195
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class GreetingControllerTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:128
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given()\n"
"          .when().get(\"/greeting\")\n"
"          .then()\n"
"             .statusCode(200)\n"
"             .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:130
#: upstream/_versions/2.2/guides/spring-security.adoc:214
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:132
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:136
msgid "Run the application with: `./mvnw quarkus:dev`.  Open your browser to http://localhost:8080/greeting."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:138
msgid "The result should be: `{\"message\": \"hello\"}`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:139
#, no-wrap
msgid "Modify the controller to secure the `hello` method"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:143
msgid "In order to restrict access to the `hello` method to users with certain roles, the `@Secured` annotation will be utilized.  The updated controller will be:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:152
#, no-wrap
msgid ""
"import org.springframework.security.access.annotation.Secured;\n"
"import org.springframework.web.bind.annotation.GetMapping;\n"
"import org.springframework.web.bind.annotation.RequestMapping;\n"
"import org.springframework.web.bind.annotation.RestController;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:163
#, no-wrap
msgid ""
"    @Secured(\"admin\")\n"
"    @GetMapping\n"
"    public String hello() {\n"
"        return \"hello\";\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:168
msgid "The easiest way to setup users and roles for our example is to use the `security-properties-file` extension. This extension essentially allows users and roles to be defined in the main Quarkus configuration file - `application.properties`.  For more information about this extension check link:security-properties[the associated guide].  An example configuration would be the following:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:177
#, no-wrap
msgid ""
"quarkus.security.users.embedded.enabled=true\n"
"quarkus.security.users.embedded.plain-text=true\n"
"quarkus.security.users.embedded.users.scott=jb0ss\n"
"quarkus.security.users.embedded.roles.scott=admin,user\n"
"quarkus.security.users.embedded.users.stuart=test\n"
"quarkus.security.users.embedded.roles.stuart=user\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:180
msgid "Note that the test also needs to be updated. It could look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:203
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpointForbidden() {\n"
"        given().auth().preemptive().basic(\"stuart\", \"test\")\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(403);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:212
#, no-wrap
msgid ""
"    @Test\n"
"    public void testHelloEndpoint() {\n"
"        given().auth().preemptive().basic(\"scott\", \"jb0ss\")\n"
"                .when().get(\"/greeting\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body(is(\"hello\"));\n"
"    }\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:216
#, no-wrap
msgid "Test the changes"
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:218
#, no-wrap
msgid "Access allowed"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:221
msgid "Open your browser again to http://localhost:8080/greeting and introduce `scott` and `jb0ss` in the dialog displayed."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:223
msgid "The word `hello` should be displayed."
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:224
#, no-wrap
msgid "Access forbidden"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:227
msgid "Open your browser again to http://localhost:8080/greeting and let empty the dialog displayed."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:229
msgid "The result should be:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:235
#, no-wrap
msgid ""
"Access to localhost was denied\n"
"You don't have authorization to view this page.\n"
"HTTP ERROR 403\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:237
#, no-wrap
msgid "Run the application as a native executable"
msgstr "以本地可执行文件的方式运行该应用程序"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:240
msgid "You can of course create a native image using the instructions of the link:building-native-image[Building a native executable guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:242
#, no-wrap
msgid "Supported Spring Security functionalities"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:246
msgid "Quarkus currently only supports a subset of the functionalities that Spring Security provides with more features being planned. More specifically, Quarkus supports the security related features of role-based authorization semantics (think of `@Secured` instead of `@RolesAllowed`)."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/spring-security.adoc:247
#, no-wrap
msgid "Annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:250
msgid "The table below summarizes the supported annotations:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/spring-security.adoc:251
#, no-wrap
msgid "Supported Spring Security annotations"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/spring-security.adoc:253
#, no-wrap
msgid "Nam"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/spring-security.adoc:255
#: upstream/_versions/2.2/guides/spring-security.adoc:421
#, no-wrap
msgid "Comments"
msgstr "备注"

#. type: Table
#: upstream/_versions/2.2/guides/spring-security.adoc:256
#, no-wrap
msgid "@Secured"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/spring-security.adoc:259
#: upstream/_versions/2.2/guides/spring-security.adoc:263
#, no-wrap
msgid "@PreAuthorize"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/spring-security.adoc:261
#, no-wrap
msgid "See next section for more details"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:267
msgid "Quarkus provides support for some of the most used features of Spring Security's `@PreAuthorize` annotation.  The expressions that are supported are the following:"
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:268
#, no-wrap
msgid "hasRole"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:271
msgid "To test if the current user has a specific role, the `hasRole` expression can be used inside `@PreAuthorize`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:273
msgid "Some examples are: `@PreAuthorize(\"hasRole('admin')\")`, `@PreAuthorize(\"hasRole(@roles.USER)\")` where the `roles` is a bean that could be defined like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:277
#, no-wrap
msgid "import org.springframework.stereotype.Component;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:280
#, no-wrap
msgid ""
"@Component\n"
"public class Roles {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:284
#, no-wrap
msgid ""
"    public final String ADMIN = \"admin\";\n"
"    public final String USER = \"user\";\n"
"}\n"
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:286
#, no-wrap
msgid "hasAnyRole"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:289
msgid "In the same fashion as `hasRole`, users can use `hasAnyRole` to check if the logged in user has any of the specified roles."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:291
msgid "Some examples are: `@PreAuthorize(\"hasAnyRole('admin')\")`, `@PreAuthorize(\"hasAnyRole(@roles.USER, 'view')\")`"
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:292
#, no-wrap
msgid "permitAll"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:294
msgid "Adding `@PreAuthorize(\"permitAll()\")` to a method will ensure that that method is accessible by any user (including anonymous users). Adding it to a class will ensure that all public methods of the class that are not annotated with any other Spring Security annotation will be accessible."
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:295
#, no-wrap
msgid "denyAll"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:297
msgid "Adding `@PreAuthorize(\"denyAll()\")` to a method will ensure that that method is not accessible by any user. Adding it to a class will ensure that all public methods of the class that are not annotated with any other Spring Security annotation will not be accessible to any user."
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:298
#, no-wrap
msgid "isAnonymous"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:299
msgid "When annotating a bean method with `@PreAuthorize(\"isAnonymous()\")` the method will only be accessible if the current user is anonymous - i.e. a non logged in user."
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:300
#, no-wrap
msgid "isAuthenticated"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:302
msgid "When annotating a bean method with `@PreAuthorize(\"isAuthenticated()\")` the method will only be accessible if the current user is a logged in user. Essentially the method is only unavailable for anonymous users."
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:303
#, no-wrap
msgid "#paramName == authentication.principal.username"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:304
msgid "This syntax allows users to check if a parameter (or a field of the parameter) of the secured method is equal to the logged in username."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:306
msgid "Examples of this use case are:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:310
#, no-wrap
msgid "public class Person {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:312
#, no-wrap
msgid "    private final String name;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:316
#, no-wrap
msgid ""
"    public Person(String name) {\n"
"        this.name = name;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:321
#, no-wrap
msgid ""
"    public String getName() {\n"
"        return name;\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:324
#: upstream/_versions/2.2/guides/spring-security.adoc:352
#, no-wrap
msgid ""
"@Component\n"
"public class MyComponent {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:327
#, no-wrap
msgid ""
"    @PreAuthorize(\"#username == authentication.principal.username\") <1>\n"
"    public void doSomething(String username, String other){\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:329
#: upstream/_versions/2.2/guides/spring-security.adoc:393
#: upstream/_versions/2.2/guides/spring-security.adoc:398
#: upstream/_versions/2.2/guides/spring-security.adoc:403
#, no-wrap
msgid "    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:332
#, no-wrap
msgid ""
"    @PreAuthorize(\"#person.name == authentication.principal.username\") <2>\n"
"    public void doSomethingElse(Person person){\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:335
#: upstream/_versions/2.2/guides/spring-security.adoc:358
#, no-wrap
msgid ""
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:337
msgid "`doSomething` can be executed if the current logged in user is the same as the `username` method parameter"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:338
msgid "`doSomethingElse` can be executed if the current logged in user is the same as the `name` field of `person` method parameter"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:340
msgid "the use of `authentication.` is optional, so using `principal.username` has the same result."
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:341
#, no-wrap
msgid "#paramName != authentication.principal.username"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:342
msgid "This is similar to the previous expression with the difference being that the method parameter must be different than the logged in username."
msgstr ""

#. type: Labeled list
#: upstream/_versions/2.2/guides/spring-security.adoc:343
#, no-wrap
msgid "@beanName.method()"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:344
msgid "This syntax allows developers to specify that the execution of method of a specific bean will determine if the current user can access the secured method."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:347
msgid "The syntax is best explained with an example.  Let's assume that a `MyComponent` bean has been created like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:355
#, no-wrap
msgid ""
"    @PreAuthorize(\"@personChecker.check(#person, authentication.principal.username)\")\n"
"    public void doSomething(Person person){\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:362
msgid "The `doSomething` method has been annotated with `@PreAuthorize` using an expression that indicates that method `check` of a bean named `personChecker` needs to be invoked to determine whether the current user is authorized to invoke the `doSomething` method."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:364
msgid "An example of the `PersonChecker` could be:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:369
#, no-wrap
msgid ""
"@Component\n"
"public class PersonChecker {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:375
#, no-wrap
msgid ""
"    @Override\n"
"    public boolean check(Person person, String username) {\n"
"        return person.getName().equals(username);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:378
msgid "Note that for the `check` method the parameter types must match what is specified in `@PreAuthorize` and that the return type must be a `boolean`."
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/spring-security.adoc:379
#, no-wrap
msgid "Combining expressions"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:383
msgid "The `@PreAuthorize` annotations allows for the combination of expressions using logical `AND` / `OR`. Currently there is a limitation where only a single logical operation can be used (meaning mixing `AND` and `OR` isn't allowed)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:385
msgid "Some examples of allowed expressions are:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:391
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasAnyRole('user', 'admin') AND #user == principal.username\")\n"
"    public void allowedForUser(String user) {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:396
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasRole('user') OR hasRole('admin')\")\n"
"    public void allowedForUserOrAdmin() {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/spring-security.adoc:401
#, no-wrap
msgid ""
"    @PreAuthorize(\"hasAnyRole('view1', 'view2') OR isAnonymous() OR hasRole('test')\")\n"
"    public void allowedForAdminOrAnonymous() {\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:406
msgid "Also to be noted that currently parentheses are not supported and expressions are evaluated from left to right when needed."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:407
#, no-wrap
msgid "Important Technical Note"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:413
msgid "Please note that the Spring support in Quarkus does not start a Spring Application Context nor are any Spring infrastructure classes run.  Spring classes and annotations are only used for reading metadata and / or are used as user code method return types or parameter types.  What that means for end users, is that adding arbitrary Spring libraries will not have any effect. Moreover Spring infrastructure classes (like `org.springframework.beans.factory.config.BeanPostProcessor` for example) will not be executed."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:414
#, no-wrap
msgid "Conversion Table"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:417
msgid "The following table shows how Spring Security annotations can be converted to JAX-RS annotations."
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/spring-security.adoc:419
#, no-wrap
msgid "Spring"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/spring-security.adoc:419
#, no-wrap
msgid "JAX-RS"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/spring-security.adoc:422
#, no-wrap
msgid "@Secured(\"admin\")"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/spring-security.adoc:423
#, no-wrap
msgid "@RolesAllowed(\"admin\")"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/spring-security.adoc:427
#, no-wrap
msgid "More Spring guides"
msgstr "更多 Spring 指南"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:430
msgid "Quarkus has more Spring compatibility features. See the following guides for more details:"
msgstr "Quarkus拥有更多的Spring兼容特性。获取更多细节请参阅以下指南:"

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:432
msgid "link:spring-di[Quarkus - Extension for Spring DI]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:433
msgid "link:spring-web[Quarkus - Extension for Spring Web]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:434
msgid "link:spring-data-jpa[Quarkus - Extension for Spring Data JPA]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:435
msgid "link:spring-data-rest[Quarkus - Extension for Spring Data REST]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:436
msgid "link:spring-cloud-config-client[Quarkus - Reading properties from Spring Cloud Config Server]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:437
msgid "link:spring-boot-properties[Quarkus - Extension for Spring Boot properties]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:438
msgid "link:spring-cache[Quarkus - Extension for Spring Cache]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/spring-security.adoc:438
msgid "link:spring-scheduled[Quarkus - Extension for Spring Scheduled]"
msgstr ""
