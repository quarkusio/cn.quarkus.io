# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:6
#, no-wrap
msgid "Deploying on OpenShift"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:11
msgid "This guide covers generating and deploying OpenShift resources based on sane default and user supplied configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:13
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:16
msgid "To complete this guide, you need:"
msgstr "要完成这个指南，你需要："

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:18
msgid "roughly 5 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:19
msgid "an IDE"
msgstr "一个编辑器"

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:20
msgid "JDK 11+ installed with `JAVA_HOME` configured appropriately"
msgstr "安装JDK 11以上版本并正确配置了 `JAVA_HOME`"

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:21
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:22
msgid "access to an OpenShift cluster (Minishift is a viable option)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:23
msgid "OpenShift CLI (Optional. Only required for manually deploying)"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:24
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:27
msgid "First, we need a new project that contains the OpenShift extension. This can be done using the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:36
#, no-wrap
msgid ""
"mvn io.quarkus.platform:quarkus-maven-plugin:{quarkus-version}:create \\\n"
"    -DprojectGroupId=org.acme \\\n"
"    -DprojectArtifactId=openshift-quickstart \\\n"
"    -DclassName=\"org.acme.rest.GreetingResource\" \\\n"
"    -Dpath=\"/greeting\" \\\n"
"    -Dextensions=\"resteasy,openshift\"\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:38
#, no-wrap
msgid "cd openshift-quickstart\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:40
#, no-wrap
msgid "OpenShift"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:45
msgid "Quarkus offers the ability to automatically generate OpenShift resources based on sane default and user supplied configuration.  The OpenShift extension is actually a wrapper extension that brings together the link:deploying-to-kubernetes[kubernetes] and link:container-image#s2i[container-image-s2i] extensions with sensible defaults so that it's easier for the user to get started with Quarkus on OpenShift."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:47
msgid "When we added the OpenShift extension to the command line invocation above, the following dependency was added to the `pom.xml`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:54
#, no-wrap
msgid ""
"    <dependency>\n"
"      <groupId>io.quarkus</groupId>\n"
"      <artifactId>quarkus-openshift</artifactId>\n"
"    </dependency>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:59
msgid "By adding this dependency, we now have the ability to configure the OpenShift resource generation and application using the usual `application.properties` approach that Quarkus provides.  The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenShiftConfig` class.  Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the OpenShift resources."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:60
#, no-wrap
msgid "Build and Deploy (in separate steps)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:63
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:128
msgid "If the OpenShift extension was not included during the bootstraping of the project nor was it added subsequently (check pom.xml file for it), then it can be added like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:67
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:132
#, no-wrap
msgid " ./mvnw quarkus:add-extension -Dextensions=\"openshift\"\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:70
msgid "Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:74
#, no-wrap
msgid "./mvnw clean package -Dquarkus.container-image.build=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:77
msgid "The build that will be performed is an s2i binary build. The input of the build is the jar that has been built locally and the output of the build is an ImageStream that is configured to automatically trigger a deployment."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:85
msgid "During the build you may find the `Caused by: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path building failed` exception due to self-signed certificate. To solve this, just add the following line to your `application.properties`: ```properties quarkus.kubernetes-client.trust-certs=true ``` For more information, see link:https://quarkus.io/guides/deploying-to-kubernetes#client-connection-configuration[deploying to kubernetes]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:88
msgid "To deploy the container image created in the above step to OpenShift, follow these commands:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:96
#, no-wrap
msgid ""
"oc get is\n"
"oc new-app --name=greeting <project>/openshift-quickstart:1.0.0-SNAPSHOT\n"
"oc get svc\n"
"oc expose svc/greeting\n"
"oc get routes\n"
"curl http://<route>/greeting\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:99
msgid "In the above, `oc get is` will list the image stream created.  It should be tagged as <project>/openshift-quickstart:1.0.0-SNAPSHOT."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:101
msgid "Similarly, `oc get route` will list the route URL for the exposed service \"greeting\" so that you can use it to test the application."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:102
#, no-wrap
msgid "Non S2i Builds"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:105
msgid "Out of the box the openshift extension is configured to use link:container-image#s2i[container-image-s2i]. However, it's still possible to use other container image extensions like:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:107
msgid "link:container-image#docker[container-image-docker]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:108
msgid "link:container-image#jib[container-image-jib]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:110
msgid "When a non-s2i container image extension is used, an ImageStream is created that is pointing to an external `dockerImageRepository`. The image is built and pushed to the registry and the ImageStream populates the tags that are available in the `dockerImageRepository`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:112
msgid "To select which extension will be used for building the image:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:116
#, no-wrap
msgid "quarkus.container-image.builder=docker\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:119
msgid "or"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:123
#, no-wrap
msgid "quarkus.container-image.builder=jib\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:125
#, no-wrap
msgid "Build and Deploy (in a single step)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:135
msgid "To trigger a build and deployment in a single step:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:139
#, no-wrap
msgid "./mvnw clean package -Dquarkus.kubernetes.deploy=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:144
msgid "The aforementioned command will build a jar file locally, trigger a container image build and then apply the generated OpenShift resources.  The generated resources are using OpenShift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.  In other words, any container image build after the initial deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:146
msgid "To confirm the above command has created an image stream, a service resource and has deployed the application (has a pod running), apply these commands:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:152
#, no-wrap
msgid ""
"oc get is\n"
"oc get pods\n"
"oc get svc\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:155
msgid "To expose the created service to a route and test it:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:161
#, no-wrap
msgid ""
"oc expose svc/greeting\n"
"oc get routes\n"
"curl http://<route>/greeting\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:163
#, no-wrap
msgid "Customizing"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:166
msgid "All available customization options are available in the link:deploying-to-kubernetes#openshift[OpenShift configuration options]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:168
msgid "Some examples are provided in the sections below:"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:169
#, no-wrap
msgid "Exposing Routes"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:172
msgid "To expose a `Route` for the Quarkus application:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:176
#, no-wrap
msgid "quarkus.openshift.route.expose=true\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:181
msgid "You don't necessarily need to add this property in the `application.properties`. You can pass it as a command line argument:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:185
#, no-wrap
msgid "./mvnw clean package -Dquarkus.openshift.route.expose=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:188
msgid "The same applies to all properties listed below."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:190
#, no-wrap
msgid "Labels"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:193
msgid "To add a label in the generated resources:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:197
#, no-wrap
msgid "quarkus.openshift.labels.foo=bar\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:199
#, no-wrap
msgid "Annotations"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:202
msgid "To add an annotation in the generated resources:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:206
#, no-wrap
msgid "quarkus.openshift.annotations.foo=bar\n"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:209
#, no-wrap
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:212
msgid "OpenShift provides multiple ways of defining environment variables:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:214
msgid "key/value pairs"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:215
msgid "import all values from a Secret or ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:216
msgid "interpolate a single value identified by a given field in a Secret or ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:217
msgid "interpolate a value from a field within the same resource"
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:218
#, no-wrap
msgid "Environment variables from key/value pairs"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:221
msgid "To add a key/value pair as an environment variable in the generated resources:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:225
#, no-wrap
msgid "quarkus.openshift.env.vars.my-env-var=foobar\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:229
msgid "The command above will add `MY_ENV_VAR=foobar` as an environment variable.  Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`."
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:230
#, no-wrap
msgid "Environment variables from Secret"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:234
msgid "To add all key/value pairs of `Secret` as environment variables just apply the following configuration, separating each `Secret` to be used as source by a comma (`,`):"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:238
#, no-wrap
msgid "quarkus.openshift.env.secrets=my-secret,my-other-secret\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:241
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:285
msgid "which would generate the following in the container definition:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:251
#, no-wrap
msgid ""
"envFrom:\n"
"  - secretRef:\n"
"      name: my-secret\n"
"      optional: false\n"
"  - secretRef:\n"
"      name: my-other-secret\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:254
msgid "The following extracts a value identified by the `keyName` field from the `my-secret` Secret into a `foo` environment variable:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:259
#, no-wrap
msgid ""
"quarkus.openshift.env.mapping.foo.from-secret=my-secret\n"
"quarkus.openshift.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:262
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:307
msgid "This would generate the following in the `env` section of your container:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:272
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      secretKeyRef:\n"
"        key: keyName\n"
"        name: my-secret\n"
"        optional: false\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:274
#, no-wrap
msgid "Environment variables from ConfigMap"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:278
msgid "To add all key/value pairs from `ConfigMap` as environment variables just apply the following configuration, separating each `ConfigMap` to be used as source by a comma (`,`):"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:282
#, no-wrap
msgid "quarkus.openshift.env.configmaps=my-config-map,another-config-map\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:295
#, no-wrap
msgid ""
"envFrom:\n"
"  - configMapRef:\n"
"      name: my-config-map\n"
"      optional: false\n"
"  - configMapRef:\n"
"      name: another-config-map\n"
"      optional: false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:299
msgid "The following extracts a value identified by the `keyName` field from the `my-config-map` ConfigMap into a `foo` environment variable:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:304
#, no-wrap
msgid ""
"quarkus.openshift.env.mapping.foo.from-configmap=my-configmap\n"
"quarkus.openshift.env.mapping.foo.with-key=keyName\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:317
#, no-wrap
msgid ""
"- env:\n"
"  - name: FOO\n"
"    valueFrom:\n"
"      configMapRefKey:\n"
"        key: keyName\n"
"        name: my-configmap\n"
"        optional: false\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:319
#, no-wrap
msgid "Environment variables from fields"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:322
msgid "It's also possible to use the value from another field to add a new environment variable by specifying the path of the field to be used as a source, as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:326
#, no-wrap
msgid "quarkus.openshift.env.fields.foo=metadata.name\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:328
#, no-wrap
msgid "Validation"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:331
msgid "A conflict between two definitions, e.g. mistakenly assigning both a value and specifying that a variable is derived from a field, will result in an error being thrown at build time so that you get the opportunity to fix the issue before you deploy your application to your cluster where it might be more difficult to diagnose the source of the issue."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:333
msgid "Similarly, two redundant definitions, e.g. defining an injection from the same secret twice, will not cause an issue but will indeed report a warning to let you know that you might not have intended to duplicate that definition."
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:335
#, no-wrap
msgid "Backwards compatibility"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:338
msgid "Previous versions of the OpenShift extension supported a different syntax to add environment variables. The older syntax is still supported but is deprecated, and it's advised that you migrate to the new syntax."
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:339
#, no-wrap
msgid "Old vs. new syntax"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:341
#, no-wrap
msgid "Old"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:341
#, no-wrap
msgid "New"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:342
#, no-wrap
msgid "Plain variable"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:342
#, no-wrap
msgid "`quarkus.openshift.env-vars.my-env-var.value=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:342
#, no-wrap
msgid "`quarkus.openshift.env.vars.my-env-var=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:343
#, no-wrap
msgid "From field"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:343
#, no-wrap
msgid "`quarkus.openshift.env-vars.my-env-var.field=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:343
#, no-wrap
msgid "`quarkus.openshift.env.fields.my-env-var=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:344
#, no-wrap
msgid "All from `ConfigMap`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:344
#, no-wrap
msgid "`quarkus.openshift.env-vars.xxx.configmap=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:344
#, no-wrap
msgid "`quarkus.openshift.env.configmaps=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:345
#, no-wrap
msgid "All from `Secret`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:345
#, no-wrap
msgid "`quarkus.openshift.env-vars.xxx.secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:345
#, no-wrap
msgid "`quarkus.openshift.env.secrets=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:346
#, no-wrap
msgid "From one `Secret` field"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:346
#, no-wrap
msgid "`quarkus.openshift.env-vars.foo.secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:346
#, no-wrap
msgid "`quarkus.openshift.env.mapping.foo.from-secret=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:347
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:349
#, no-wrap
msgid "`quarkus.openshift.env-vars.foo.value=field`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:347
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:349
#, no-wrap
msgid "`quarkus.openshift.env.mapping.foo.with-key=field`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:348
#, no-wrap
msgid "From one `ConfigMap` field"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:348
#, no-wrap
msgid "`quarkus.openshift.env-vars.foo.configmap=foobar`"
msgstr ""

#. type: Table
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:348
#, no-wrap
msgid "`quarkus.openshift.env.mapping.foo.from-configmap=foobar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:354
msgid "If you redefine the same variable using the new syntax while keeping the old syntax, **ONLY** the new version will be kept, and a warning will be issued to alert you of the problem. For example, if you define both `quarkus.openshift.env-vars.my-env-var.value=foobar` and `quarkus.openshift.env.vars.my-env-var=newValue`, the extension will only generate an environment variable `MY_ENV_VAR=newValue` and issue a warning."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:355
#, no-wrap
msgid "Mounting volumes"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:358
msgid "The OpenShift extension allows the user to configure both volumes and mounts for the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:360
msgid "Any volume can be mounted with a simple configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:364
#, no-wrap
msgid "quarkus.openshift.mounts.my-volume.path=/where/to/mount\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:367
msgid "This will add a mount to my pod for volume `my-volume` to path `/where/to/mount`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:369
msgid "The volumes themselves can be configured as shown in the sections below:"
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:370
#, no-wrap
msgid "Secret volumes"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:375
#, no-wrap
msgid "quarkus.openshift.secret-volumes.my-volume.secret-name=my-secret\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:377
#, no-wrap
msgid "ConfigMap volumes"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:382
#, no-wrap
msgid "quarkus.openshift.config-map-volumes.my-volume.config-map-name=my-secret\n"
msgstr ""

#. type: Title =====
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:384
#, no-wrap
msgid "Persistent Volume Claims"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:389
#, no-wrap
msgid "quarkus.openshift.pvc-volumes.my-pvc.claim-name=my-pvc\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:391
#, no-wrap
msgid "Knative - OpenShift Serverless"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:394
msgid "OpenShift also provides the ability to use Knative via the link:https://www.openshift.com/learn/topics/serverless[OpenShift Serverless] functionality."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:396
msgid "The first order of business is to instruct Quarkus to generate Knative resources by setting:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:400
#, no-wrap
msgid "quarkus.kubernetes.deployment-target=knative\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:404
msgid "In order to leverage OpenShift S2I to build the container image on the cluster and use the resulting container image for the Knative application, we need to set a couple of configuration properties:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:411
#, no-wrap
msgid ""
"# set the Kubernetes namespace which will be used to run the application\n"
"quarkus.container-image.group=geoand\n"
"# set the container image registry - this is the standard URL used to refer to the internal OpenShift registry\n"
"quarkus.container-image.registry=image-registry.openshift-image-registry.svc:5000\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:414
msgid "The application can then be deployed to OpenShift Serverless by enabling the standard `quarkus.kubernetes.deploy=true` property."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/deploying-to-openshift.adoc:415
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"
