# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:59+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.2/guides/config-reference.adoc:6
#, no-wrap
msgid "Configuration Reference Guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:16
msgid "The content of this guide has been revised and split into additional topics. Please check the <<additional-information,Additional Information>> section."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:21
msgid "In this reference guide we're going to describe various aspects of Quarkus configuration. A Quarkus application and Quarkus itself (core and extensions) are both configured via the same mechanism that leverages the https://github.com/smallrye/smallrye-config[SmallRye Config] API an implementation of the https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] specification."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:24
msgid "If you're looking for information how to make a Quarkus extension configurable then see the <<writing-extensions.adoc#configuration,Writing Your Own Extension>> guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:26
#, no-wrap
msgid "Config Sources"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:29
msgid "By default, Quarkus reads configuration properties from multiple sources (by descending ordinal):"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:31
msgid "(400) <<system-properties,System properties>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:32
msgid "(300) <<environment-variables,Environment variables>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:33
msgid "(295) <<env-file,.env>> file in the current working directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:34
msgid "(260) <<application-properties-file,Quarkus Application configuration file>> in `$PWD/config/application.properties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:35
msgid "(250) <<application-properties-file,Quarkus Application configuration file>> `application.properties` in classpath"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:37
msgid "(100) <<microprofile-config-properties-file,MicroProfile Config configuration file>> `META-INF/microprofile-config.properties` in classpath"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:43
msgid "The final configuration is the aggregation of the properties defined by all these sources. A configuration property lookup starts by the highest ordinal configuration source available and works it way down to other sources until a match is found. This means that any configuration property may override a value just by setting a different value in a higher ordinal config source. For example, a property configured using an environment property overrides the value provided using the `application.properties` file."
msgstr ""

#. type: Target for macro image
#: upstream/_versions/2.2/guides/config-reference.adoc:44
#, no-wrap
msgid "config-sources.png"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:47
#, no-wrap
msgid "System properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:51
msgid "System properties can be handed to the application through the `-D` flag during startup. The following examples assign the value `youshallnotpass` to the attribute `quarkus.datasource.password`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:53
msgid "For Quarkus dev mode: `./mvnw quarkus:dev -Dquarkus.datasource.password=youshallnotpass`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:54
msgid "For a runner jar: `java -Dquarkus.datasource.password=youshallnotpass -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:55
msgid "For a native executable: `./target/myapp-runner -Dquarkus.datasource.password=youshallnotpass`"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:57
#, no-wrap
msgid "Environment variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:60
msgid "For a runner jar: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; java -jar target/quarkus-app/quarkus-run.jar`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:61
msgid "For a native executable: `export QUARKUS_DATASOURCE_PASSWORD=youshallnotpass ; ./target/myapp-runner`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:64
msgid "Environment variables names follow the conversion rules specified by link:https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configsources.asciidoc#default-configsources[MicroProfile Config]."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:66
#, no-wrap
msgid "`.env` file in the current working directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:69
#: upstream/_versions/2.2/guides/config-reference.adoc:201
msgid "..env"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:72
#, no-wrap
msgid "QUARKUS_DATASOURCE_PASSWORD=youshallnotpass <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:74
msgid "The name `QUARKUS_DATASOURCE_PASSWORD` the same conversion rules used for <<environment-variables>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:77
msgid "For `dev` mode, this file can be placed in the root of the project, but it is advised to **not** check it in to version control."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:79
msgid "Environment variables in the `.env` file are not available via the `System.getenv(String)` API."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:81
#, no-wrap
msgid "Quarkus Application configuration file"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:88
msgid "The Quarkus Application configuration file is loaded from the classpath resources, for instance `src/main/resources/application.properties`, `src/test/resources/application.properties` or from a `jar` dependency that contains an `application.properties` entry. Additionally, the configuration file may also reside in `$PWD/config/application.properties`. The loading starts from the config folder and then classpath order (`application.properties` files in the application sources will have priority on the classloader loading order)."
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/config-reference.adoc:89
#, no-wrap
msgid "`application.properties`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:94
#: upstream/_versions/2.2/guides/config-reference.adoc:112
#, no-wrap
msgid ""
"greeting.message=hello <1>\n"
"quarkus.http.port=9090 <2>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:96
#: upstream/_versions/2.2/guides/config-reference.adoc:114
msgid "This is a user-defined configuration property."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:97
#: upstream/_versions/2.2/guides/config-reference.adoc:115
msgid "This is a configuration property consumed by the `quarkus-vertx-http` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:101
msgid "The `config/application.properties` is also available in `dev` mode. The file needs to be placed inside the build tool output directory (`target` for Maven and `build/classes/java/main` for Gradle). Keep in mind however that any cleaning operation from the build tool like `mvn clean` or `gradle clean` will remove the `config` directory as well."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:103
#, no-wrap
msgid "MicroProfile Config configuration file"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:106
msgid "The MicroProfile Config configuration file in `src/main/resources/META-INF/microprofile-config.properties`."
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/config-reference.adoc:107
#, no-wrap
msgid "`microprofile-config.properties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:118
msgid "It works in the exact same way as Quarkus Application configuration file `application.properties`. Recommendation is to use Quarkus `application.properties`."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:119
#, no-wrap
msgid "Additional Config Sources"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:122
msgid "Quarkus provides additional extensions which cover other configuration formats and stores:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:124
msgid "xref:config-yaml.adoc[YAML]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:125
msgid "xref:vault.adoc[HashiCorp Vault]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:126
msgid "xref:consul-config.adoc[Consul]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:127
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:129
msgid "It is also possible to create a xref:config-extending-support.adoc#custom-config-source[Custom Config Source]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:130
#, no-wrap
msgid "Inject"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:134
msgid "Quarkus uses https://microprofile.io/project/eclipse/microprofile-config[MicroProfile Config] annotations to inject the configuration properties in the application."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:139
#: upstream/_versions/2.2/guides/config-reference.adoc:149
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.message\") <1>\n"
"String message;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:142
msgid "You can use `@Inject @ConfigProperty` or just `@ConfigProperty`. The `@Inject` annotation is not necessary for members annotated with `@ConfigProperty`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:144
msgid "If the application attempts to inject a configuration property that is not set, an error is thrown."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:152
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.suffix\", defaultValue=\"!\") <2>\n"
"String suffix;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:155
#, no-wrap
msgid ""
"@ConfigProperty(name = \"greeting.name\")\n"
"Optional<String> name; <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:157
msgid "If you do not provide a value for this property, the application startup fails with `javax.enterprise.inject.spi.DeploymentException: No config value of type [class java.lang.String] exists for: greeting.message`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:158
msgid "The default value is injected if the configuration does not provide a value for `greeting.suffix`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:159
msgid "This property is optional - an empty `Optional` is injected if the configuration does not provide a value for `greeting.name`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:161
msgid "Use xref:config-mappings.adoc#config-mappings[Config Mappings] to group similar configuration properties."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:162
#, no-wrap
msgid "Programmatically access"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:166
msgid "The `org.eclipse.microprofile.config.ConfigProvider.getConfig()` API allows to access the Config API programmatically.  This API is mostly useful in situations where CDI injection is not available."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:171
#, no-wrap
msgid ""
"String databaseName = ConfigProvider.getConfig().getValue(\"database.name\", String.class);\n"
"Optional<String> maybeDatabaseName = ConfigProvider.getConfig().getOptionalValue(\"database.name\", String.class);\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:175
msgid "Do not use `System.getProperty(String)` or `System.getEnv(String)` to retrieve configuration values. These APIs are not configuration aware and do not support the features described in this guide."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:177
#, no-wrap
msgid "Profiles"
msgstr "配置文件"

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:181
msgid "We often need to configure differently our application depending on the target _environment_. For example, the local development environment may be different from the production environment."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:184
msgid "Configuration Profiles allow for multiple configurations in the same file or separate files and select between them via a profile name."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:185
#, no-wrap
msgid "Profile in the property name"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:188
msgid "To be able to set properties with the same name, each property needs to be prefixed with a percentage sign `%` followed by the profile name and a dot `.` in the syntax `%{profile-name}.config.name`:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/config-reference.adoc:189
#: upstream/_versions/2.2/guides/config-reference.adoc:209
#: upstream/_versions/2.2/guides/config-reference.adoc:234
#: upstream/_versions/2.2/guides/config-reference.adoc:258
#: upstream/_versions/2.2/guides/config-reference.adoc:329
#: upstream/_versions/2.2/guides/config-reference.adoc:340
#: upstream/_versions/2.2/guides/config-reference.adoc:349
#: upstream/_versions/2.2/guides/config-reference.adoc:373
#: upstream/_versions/2.2/guides/config-reference.adoc:404
#: upstream/_versions/2.2/guides/config-reference.adoc:422
#: upstream/_versions/2.2/guides/config-reference.adoc:458
#, no-wrap
msgid "application.properties"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:194
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%dev.quarkus.http.port=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:197
msgid "The Quarkus HTTP port will be 9090. If the `dev` profile is active it will be 8181."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:199
msgid "Profiles in the `.env` file follow the syntax `_{PROFILE}_CONFIG_KEY=value`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:205
#, no-wrap
msgid ""
"QUARKUS_HTTP_PORT=9090\n"
"_DEV_QUARKUS_HTTP_PORT=8181\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:208
msgid "If a profile does not define a value for a specific attribute, the _default_ (no profile) value is used:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:215
#, no-wrap
msgid ""
"bar=”hello”\n"
"baz=”bonjour”\n"
"%dev.bar=”hallo”\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:220
msgid "With the `dev` profile enabled, the property `bar` has the value `hallo`, but the property `baz` has the value `bonjour`. If the `prod` profile is enabled, `bar` has the value `hello` (as there is no specific value for the `prod` profile), and `baz` the value `bonjour`."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:221
#, no-wrap
msgid "Default Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:224
msgid "By default, Quarkus provides three profiles, that activate automatically in certain conditions:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:226
#, no-wrap
msgid "*dev* - Activated when in development mode (i.e. `quarkus:dev`)\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:227
#, no-wrap
msgid "*test* - Activated when running tests\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:228
#, no-wrap
msgid "*prod* - The default profile when not running in development or test mode\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:229
#, no-wrap
msgid "Custom Profiles"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:233
msgid "It is also possible to create additional profiles and activate them with the `quarkus.profile` configuration property. A single config property with the new profile name is the only requirement:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:239
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.port=9999\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:242
msgid "Setting `quarkus.profile` to `staging` will activate the `staging` profile."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:244
msgid "Only a single profile may be active at a time."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/config-reference.adoc:249
msgid "The `io.quarkus.runtime.configuration.ProfileManager#getActiveProfile` API provides a way to retrieve the active profile programmatically."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/config-reference.adoc:251
msgid "Using `@ConfigProperty(\"quarkus.profile\")` will *not* work properly."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:253
#, no-wrap
msgid "Profile aware files"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:257
msgid "In this case, properties for a specific profile may reside in an `application-{profile}.properties` named file. The previous example may be expressed as:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:263
#, no-wrap
msgid ""
"quarkus.http.port=9090\n"
"%staging.quarkus.http.test-port=9091\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/config-reference.adoc:265
#, no-wrap
msgid "application-staging.properties"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:270
#, no-wrap
msgid ""
"quarkus.http.port=9190\n"
"quarkus.http.test-port=9191\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/config-reference.adoc:275
msgid "In this style, the configuration names in the profile aware file do not need to be prefixed with the profile name."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/config-reference.adoc:277
msgid "Properties in the profile aware file have priority over profile aware properties defined in the main file."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:279
#, no-wrap
msgid "Parent Profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:283
msgid "A Parent Profile adds one level of hierarchy to the current profile. The configuration `quarkus.config.profile.parent` accepts a single profile name."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:286
msgid "When the Parent Profile is active, if a property cannot be found in the current active Profile, the config lookup fallbacks to the Parent Profile. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:291
#, no-wrap
msgid ""
"quarkus.profile=dev\n"
"quarkus.config.profile.parent=common\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:294
#, no-wrap
msgid ""
"%common.quarkus.http.port=9090\n"
"%dev.quarkus.http.ssl-port=9443\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:297
#, no-wrap
msgid ""
"quarkus.http.port=8080\n"
"quarkus.http.ssl-port=8443\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:300
msgid "Then"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:302
msgid "The active profile is `dev`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:303
msgid "The parent profile is `common`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:304
msgid "`quarkus.http.port` is 9090"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:305
msgid "`quarkus.http.ssl-port` is 9443"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:306
#, no-wrap
msgid "Default Runtime Profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:309
msgid "The default Quarkus runtime profile is set to the profile used to build the application:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:314
#, no-wrap
msgid ""
"./mvnw package -Pnative -Dquarkus.profile=prod-aws\n"
"./target/my-app-1.0-runner // <1>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:316
msgid "The command will run with the `prod-aws` profile. This can be overridden using the `quarkus.profile` configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:318
#, no-wrap
msgid "Property Expressions"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:322
msgid "Quarkus provides property expressions expansion on configuration values. An expression string is a mix of plain strings and expression segments, which are wrapped by the sequence `${ ... }`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:326
msgid "These expressions are resolved when the property is read. So if the configuration property is build time the property expression will be resolved at build time. If the configuration property is overridable at runtime it will be resolved at runtime."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:328
msgid "Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:334
#, no-wrap
msgid ""
"remote.host=quarkus.io\n"
"callable.url=https://${remote.host}/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:337
msgid "The resolved value of the `callable.url` property is `https://quarkus.io/`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:339
msgid "Another example would be defining different database servers by profile:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:345
#, no-wrap
msgid ""
"%dev.quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/mydatabase?useSSL=false\n"
"quarkus.datasource.jdbc.url=jdbc:mysql://remotehost:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:348
msgid "can be simplified to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:354
#, no-wrap
msgid ""
"%dev.application.server=localhost\n"
"application.server=remotehost\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:356
#, no-wrap
msgid "quarkus.datasource.jdbc.url=jdbc:mysql://${application.server}:3306/mydatabase?useSSL=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:359
msgid "Additionally, the Expression Expansion engine supports the following segments:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:361
msgid "`${expression:value}` - Provides a default value after the `:` if the expansion doesn't find a value."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:362
msgid "`${my.prop${compose}}` - Composed expressions. Inner expressions are resolved first."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:363
msgid "`${my.prop}${my.prop}` - Multiple expressions."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:365
msgid "If an expression cannot be expanded and no default is supplied a `NoSuchElementException` is thrown."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:368
msgid "Expresions lookups are performed in all config sources. The expression values and expansion values may reside in different config sources."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:369
#, no-wrap
msgid "With Environment Variables"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:372
msgid "Property Expressions also work with Environment Variables."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:378
#, no-wrap
msgid ""
"remote.host=quarkus.io\n"
"application.host=${HOST:${remote.host}}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:382
msgid "This will expand the `HOST` environment variable and use the value of the property `remote.host` as the default value if `HOST` is not set."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:383
#, no-wrap
msgid "Accessing a generating UUID"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:388
msgid "The default config source from Quarkus provides a random UUID value.  It generates the UUID at startup time.  So, the value changes between startups, including reloads in dev mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:392
msgid "You can access the generated value using the `quarkus.uuid` property.  Use <<property-expressions, expressions>> to access it: `${quarkus.uuid}`.  For example, it can be useful to configure a Kafka client with a unique consumer group:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:396
#, no-wrap
msgid "mp.messaging.incoming.prices.group.id=${quarkus.uuid}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:398
#, no-wrap
msgid "Clearing properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:403
msgid "Run time properties which are optional, and which have had values set at build time or which have a default value, may be explicitly cleared by assigning an empty string to the property. Note that this will _only_ affect runtime properties, and will _only_ work with properties whose values are not required."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:408
#, no-wrap
msgid "remote.host=quarkus.io\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:411
msgid "A lookup to `remote.host` with `-Dremote.host=` will throw an Exception, because the system property cleared the value."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:413
#, no-wrap
msgid "Indexed Properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:417
msgid "A config value which contains unescaped commas may be converted to `Collection`. This works for simple cases, but it becomes cumbersome and limited for more advanced cases."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:421
msgid "Indexed Properties provide a way to use indexes in config property names to map specific elements in a `Collection` type. Since the indexed element is part of the property name and not contained in the value, this can also be used to map complex object types as `Collectionª elements. Consider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:426
#, no-wrap
msgid "my.collection=dog,cat,turtle\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.2/guides/config-reference.adoc:430
#, no-wrap
msgid ""
"my.indexed.collection[0]=dog\n"
"my.indexed.collection[1]=cat\n"
"my.indexed.collection[2]=turtle\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:433
msgid "The indexed property syntax uses the property name and square brackets `[ ] with an index in between."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:438
msgid "A call to `Config#getValues(\"my.collection\", String.class)`, will automatically create and convert a `List<String>` that contains the values `dog`, `cat` and `turtle`. A call to `Config#getValues(\"my.indexed.collection\", String.class)` returns the exact same result. If the same property name exists in both froms (regular and indexed), the regular value has priority."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:442
msgid "The indexed property is sorted by their index before being added to the target `Collection`. Any gaps contained in the indexes do not resolve to the target `Collection`, which means that the `Collection` result will store all values without any gaps."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:444
msgid "Indexed Properties are not supported in Environment Variables."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:445
#, no-wrap
msgid "Generate Configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:448
msgid "It is also possible to generate an example `application.properties` with all known configuration properties:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/config-reference.adoc:451
#, no-wrap
msgid "/mvnw quarkus:generate-config"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:457
msgid "This creates a `src/main/resources/application.properties.example` file that contains all the config options exposed via the extensions currently present in the application. These options are commented out, and have their value set to defaults when applicable. For example this HTTP port config entry will appear as:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:465
msgid "# # The HTTP port # #quarkus.http.port=8080"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:469
msgid "Rather than generating an example config file, you can also add these to you actual config file by setting the `-Dfile` parameter:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.2/guides/config-reference.adoc:472
#, no-wrap
msgid "/mvnw quarkus:generate-config -Dfile=application.properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:477
msgid "If a config option is already present it will not be added, so it is safe to run this after adding an extension to see which configurations are available."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:479
#, no-wrap
msgid "Configuring Quarkus"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:484
msgid "Quarkus itself is configured via the same mechanism as your application. Quarkus reserves the `quarkus.` namespace for its own configuration. For example to configure the HTTP server port you can set `quarkus.http.port` in `application.properties`. All the Quarkus configuration properties are link:all-config[documented and searchable]."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.2/guides/config-reference.adoc:489
msgid "As mentioned above, properties prefixed with `quarkus.` are effectively reserved for configuring Quarkus itself and its extensions. Therefore, the `quarkus.` prefix should **never** be used for application specific properties."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.2/guides/config-reference.adoc:491
#, no-wrap
msgid "Build Time configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:496
msgid "Some Quarkus configurations only take effect during build time, meaning is not possible to change them at runtime. These configurations are still available at runtime but as read-only and have no effect in Quarkus behaviour. A change to any of these configurations requires a rebuild of the application itself to reflect changes of such properties."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:498
msgid "The properties fixed at build time are marked with a lock icon (icon:lock[]) in the link:all-config[list of all configuration options]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:502
msgid "However, some extensions do define properties _overridable at runtime_. A simple example is the database URL, username and password which is only known specifically in your target environment, so they can be set and influence the application behaviour at runtime."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:503
#, no-wrap
msgid "Change build time properties after your application has been published"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:506
msgid "If you are in the rare situation that you need to change the build time configuration after your application is built, then check out how link:reaugmentation[re-augmentation] can be used to rebuild the augmentation output for a different build time configuration."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:508
#, no-wrap
msgid "Additional Information"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:511
msgid "xref:config-yaml.adoc[YAML ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:512
msgid "xref:vault.adoc[HashiCorp Vault ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:513
msgid "xref:consul-config.adoc[Consul ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:514
msgid "xref:spring-cloud-config-client.adoc[Spring Cloud ConfigSource Extension]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:515
msgid "xref:config-mappings.adoc[Mapping configuration to objects]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:516
msgid "xref:config-extending-support.adoc[Extending configuration support]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:518
msgid "Quarkus relies on link:https://github.com/smallrye/smallrye-config/[SmallRye Config] and inherits its features:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:520
msgid "Additional ``ConfigSource``s"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:521
msgid "Additional ``Converter``s"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:522
msgid "Indexed properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:523
msgid "Parent profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:524
msgid "Interceptors for configuration value resolution"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:525
msgid "Relocate configuration properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:526
msgid "Fallback configuration properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:527
msgid "Logging"
msgstr "日志"

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:528
msgid "Hide secrets"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.2/guides/config-reference.adoc:531
msgid "For more information, please check the link:https://smallrye.io/docs/smallrye-config/index.html[SmallRye Config documentation]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.2/guides/config-reference.adoc:532
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"
