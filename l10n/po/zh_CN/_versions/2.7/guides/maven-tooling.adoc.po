# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-30 17:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/maven-tooling.adoc:6
#, no-wrap
msgid "Building applications with Maven"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:12
#, no-wrap
msgid "Creating a new project"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:15
msgid "You can scaffold a new Maven project with:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:23
msgid "If you are using the CLI, you can get the list of available options with:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:27
#, no-wrap
msgid "quarkus create app --help\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:30
msgid "If you are using the Maven command, the following table lists the attributes you can pass to the `create` command:"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:34
#, no-wrap
msgid "Attribute"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:35
#: upstream/_versions/2.7/guides/maven-tooling.adoc:885
#, no-wrap
msgid "Default Value"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:37
#: upstream/_versions/2.7/guides/maven-tooling.adoc:887
#, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:38
#, no-wrap
msgid "`projectGroupId`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:39
#, no-wrap
msgid "`org.acme.sample`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:41
#, no-wrap
msgid "The group id of the created project"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:42
#, no-wrap
msgid "`projectArtifactId`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:43
#, no-wrap
msgid "_mandatory_"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:45
#, no-wrap
msgid "The artifact id of the created project. Not passing it triggers the interactive mode."
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:46
#, no-wrap
msgid "`projectVersion`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:47
#, no-wrap
msgid "`1.0.0-SNAPSHOT`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:49
#, no-wrap
msgid "The version of the created project"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:50
#, no-wrap
msgid "`platformGroupId`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:51
#, no-wrap
msgid "`io.quarkus.platform`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:53
#, no-wrap
msgid "The group id of the target platform."
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:54
#, no-wrap
msgid "`platformArtifactId`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:55
#, no-wrap
msgid "`quarkus-bom`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:57
#, no-wrap
msgid "The artifact id of the target platform BOM."
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:58
#, no-wrap
msgid "`platformVersion`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:59
#, no-wrap
msgid "The version currently recommended by the https://quarkus.io/guides/extension-registry-user[Quarkus Extension Registry]"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:61
#, no-wrap
msgid "The version of the platform you want the project to use. It can also accept a version range, in which case the latest from the specified range will be used."
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:62
#, no-wrap
msgid "`className`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:63
#, no-wrap
msgid "_Not created if omitted_"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:65
#, no-wrap
msgid "The fully qualified name of the generated resource"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:66
#, no-wrap
msgid "`path`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:67
#, no-wrap
msgid "`/hello`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:69
#, no-wrap
msgid "The resource path, only relevant if `className` is set."
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:70
#, no-wrap
msgid "`extensions`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:71
#, no-wrap
msgid "_[]_"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:73
#, no-wrap
msgid "The list of extensions to add to the project (comma-separated)"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:74
#, no-wrap
msgid "`quarkusRegistryClient`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:75
#, no-wrap
msgid "`true`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:77
#, no-wrap
msgid "Whether or not Quarkus should use the online registry to resolve extension catalogs. If this is set to false, the extension catalog will be narrowed to the defined (or default) platform BOM."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:80
msgid "By default, the command will target the `io.quarkus.platform:quarkus-bom:{quarkus-version}` platform release (unless the coordinates of the desired platform release have been specified)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:83
msgid "The project is generated in a directory named after the passed artifactId.  If the directory already exists, the generation fails."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:86
msgid "A pair of Dockerfiles for native and jvm mode are also generated in `src/main/docker`.  Instructions to build the image and run the container are written in those Dockerfiles."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:87
#, no-wrap
msgid "Dealing with extensions"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:90
msgid "From inside a Quarkus project, you can obtain a list of the available extensions with:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:94
msgid "You can add an extension using:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:99
msgid "Extensions are passed using a comma-separated list."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:104
msgid "The extension name is the GAV name of the extension: e.g. `io.quarkus:quarkus-agroal`.  But you can pass a partial name and Quarkus will do its best to find the right extension.  For example, `agroal`, `Agroal` or `agro` will expand to `io.quarkus:quarkus-agroal`.  If no extension is found or if more than one extensions match, you will see a red check mark ❌ in the command result."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:117
#, no-wrap
msgid ""
"$ ./mvnw quarkus:add-extensions -Dextensions=jdbc,agroal,non-exist-ent\n"
"[...]\n"
"❌ Multiple extensions matching 'jdbc'\n"
"     * io.quarkus:quarkus-jdbc-h2\n"
"     * io.quarkus:quarkus-jdbc-mariadb\n"
"     * io.quarkus:quarkus-jdbc-postgresql\n"
"     Be more specific e.g using the exact name or the full gav.\n"
"✅ Adding extension io.quarkus:quarkus-agroal\n"
"❌ Cannot find a dependency matching 'non-exist-ent', maybe a typo?\n"
"[...]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:120
msgid "You can install all extensions which match a globbing pattern :"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:125
#, no-wrap
msgid "Development mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:129
msgid "Quarkus comes with a built-in development mode.  Run your application with:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:135
msgid "You can then update the application sources, resources and configurations.  The changes are automatically reflected in your running application.  This is great to do development spanning UI and database as you see changes reflected immediately."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:143
msgid "Dev mode enables hot deployment with background compilation, which means that when you modify your Java files or your resource files and refresh your browser these changes will automatically take effect.  This works too for resource files like the configuration property file.  The act of refreshing the browser triggers a scan of the workspace, and if any changes are detected the Java files are compiled, and the application is redeployed, then your request is serviced by the redeployed application. If there are any issues with compilation or deployment an error page will let you know."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:145
msgid "Hit `CTRL+C` to stop the application."
msgstr "使用 `CTRL+C` 来停止应用程序。"

#. type: delimited block =
#: upstream/_versions/2.7/guides/maven-tooling.adoc:149
msgid "By default, `quarkus:dev` sets the debug host to `localhost` (for security reasons). If you need to change this, for example to enable debugging on all hosts, you can use the `-DdebugHost` option like so:"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:155
#, no-wrap
msgid "Remote Development Mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:159
msgid "It is possible to use development mode remotely, so that you can run Quarkus in a container environment (such as OpenShift)  and have changes made to your local files become immediately visible."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:161
msgid "This allows you to develop in the same environment you will actually run your app in, and with access to the same services."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:163
msgid "Do not use this in production. This should only be used in a development environment. You should not run production application in dev mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:165
msgid "To do this you must build a mutable application, using the `mutable-jar` format. Set the following properties in `application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:171
#, no-wrap
msgid ""
"quarkus.package.type=mutable-jar <1>\n"
"quarkus.live-reload.password=changeit <2>\n"
"quarkus.live-reload.url=http://my.cluster.host.com:8080 <3>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:175
msgid "This tells Quarkus to use the mutable-jar format. Mutable applications also include the deployment time parts of Quarkus, so they take up a bit more disk space. If run normally they start just as fast and use the same memory as an immutable application, however they can also be started in dev mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:176
msgid "The password that is used to secure communication between the remote side and the local side."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:178
msgid "The URL that your app is going to be running in dev mode at. This is only needed on the local side, so you may want to leave it out of the properties file and specify it as a system property on the command line."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:180
msgid "The `mutable-jar` is then built in the same way that a regular Quarkus jar is built, i.e. by issuing:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:185
msgid "Before you start Quarkus on the remote host set the environment variable `QUARKUS_LAUNCH_DEVMODE=true`. If you are on bare metal you can set it via the `export QUARKUS_LAUNCH_DEVMODE=true` command and then run the application with the proper `java -jar ...` command to run the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:188
msgid "If you plan on running the application via Docker, then you'll need to add `-e QUARKUS_LAUNCH_DEVMODE=true` to the `docker run` command.  When the application starts you should now see the following line in the logs: `Profile dev activated. Live Coding activated`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:192
msgid "The remote side does not need to include Maven or any other development tools. The normal `fast-jar` Dockerfile that is generated with a new Quarkus application is all you need. If you are using bare metal launch the Quarkus runner jar, do not attempt to run normal devmode."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:194
msgid "Now you need to connect your local agent to the remote host, using the `remote-dev` command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:198
#, no-wrap
msgid "./mvnw quarkus:remote-dev -Dquarkus.live-reload.url=http://my-remote-host:8080\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:203
msgid "Now every time you refresh the browser you should see any changes you have made locally immediately visible in the remote app. This is done via a HTTP based long polling transport, that will synchronize your local workspace and the remote application via HTTP calls."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:207
msgid "If you do not want to use the HTTP feature then you can simply run the `remote-dev` command without specifying the URL.  In this mode the command will continuously rebuild the local application, so you can use an external tool such as odo or rsync to sync to the remote application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:209
msgid "All the config options are shown below:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:216
msgid "It is recommended you use SSL when using remote dev mode, however even if you are using an unencrypted connection your password is never sent directly over the wire. For the initial connection request the password is hashed with the initial state data, and subsequent requests hash it with a random session id generated by the server and any body contents for POST requests, and the path for DELETE requests, as well as an incrementing counter to prevent replay attacks."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:217
#, no-wrap
msgid "Configuring Development Mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:221
msgid "By default, the Maven plugin picks up compiler flags to pass to `javac` from `maven-compiler-plugin`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:228
msgid "If you need to customize the compiler flags used in development mode, add a `configuration` section to the `plugin` block and set the `compilerArgs` property just as you would when configuring `maven-compiler-plugin`.  You can also set `source`, `target`, and `jvmArgs`.  For example, to pass `--enable-preview` to both the JVM and `javac`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:235
#, no-wrap
msgid ""
"<plugin>\n"
"  <groupId>${quarkus.platform.group-id}</groupId>\n"
"  <artifactId>quarkus-maven-plugin</artifactId>\n"
"  <version>${quarkus.platform.version}</version>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:244
#, no-wrap
msgid ""
"  <configuration>\n"
"    <source>${maven.compiler.source}</source>\n"
"    <target>${maven.compiler.target}</target>\n"
"    <compilerArgs>\n"
"      <arg>--enable-preview</arg>\n"
"    </compilerArgs>\n"
"    <jvmArgs>--enable-preview</jvmArgs>\n"
"  </configuration>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:247
#, no-wrap
msgid ""
"  ...\n"
"</plugin>\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:250
#, no-wrap
msgid "Debugging"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:253
msgid "In development mode, Quarkus starts by default with debug mode enabled, listening to port `5005` without suspending the JVM."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:255
msgid "This behavior can be changed by giving the `debug` system property one of the following values:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:257
msgid "`false` - the JVM will start with debug mode disabled"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:258
msgid "`true` - The JVM is started in debug mode and will be listening on port `5005`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:259
msgid "`client` - the JVM will start in client mode and attempt to connect to `localhost:5005`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:260
msgid "`{port}` - The JVM is started in debug mode and will be listening on `{port}`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:262
msgid "An additional system property `suspend` can be used to suspend the JVM, when launched in debug mode. `suspend` supports the following values:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:264
msgid "`y` or `true` - The debug mode JVM launch is suspended"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:265
msgid "`n` or `false` - The debug mode JVM is started without suspending"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/maven-tooling.adoc:270
msgid "You can also run a Quarkus application in debug mode with a suspended JVM using:"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/maven-tooling.adoc:276
msgid "Then, attach your debugger to `localhost:5005`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:278
#, no-wrap
msgid "Import in your IDE"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:282
msgid "Once you have a <<project-creation, project generated>>, you can import it in your favorite IDE.  The only requirement is the ability to import a Maven project."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:284
#, no-wrap
msgid "**Eclipse**\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:289
msgid "In Eclipse, click on: `File -> Import`.  In the wizard, select: `Maven -> Existing Maven Project`.  On the next screen, select the root location of the project.  The next screen list the found modules; select the generated project and click on `Finish`. Done!"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:291
msgid "In a separated terminal, run:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:295
msgid "and enjoy a highly productive environment."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:297
#, no-wrap
msgid "**IntelliJ**\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:299
msgid "In IntelliJ:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:301
msgid "From inside IntelliJ select `File -> New -> Project From Existing Sources...` or, if you are on the welcome dialog, select `Import project`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:302
#: upstream/_versions/2.7/guides/maven-tooling.adoc:318
msgid "Select the project root"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:303
msgid "Select `Import project from external model` and `Maven`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:304
msgid "Next a few times (review the different options if needed)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:305
msgid "On the last screen click on Finish"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:307
msgid "In a separated terminal or in the embedded terminal, run:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:311
#: upstream/_versions/2.7/guides/maven-tooling.adoc:325
msgid "Enjoy!"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:313
#, no-wrap
msgid "**Apache NetBeans**\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:315
msgid "In NetBeans:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:317
msgid "Select `File -> Open Project`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:319
msgid "Click on `Open Project`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:321
msgid "In a separated terminal or the embedded terminal, go to the project root and run:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:327
#, no-wrap
msgid "**Visual Studio Code**\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:329
msgid "Open the project directory in VS Code. If you have installed the Java Extension Pack (grouping a set of Java extensions), the project is loaded as a Maven project."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:330
#, no-wrap
msgid "Logging Quarkus application build classpath tree"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:335
msgid "Usually, dependencies of an application (which is a Maven project) could be displayed using `mvn dependency:tree` command. In case of a Quarkus application, however, this command will list only the runtime dependencies of the application.  Given that the Quarkus build process adds deployment dependencies of the extensions used in the application to the original application classpath, it could be useful to know which dependencies and which versions end up on the build classpath.  Luckily, the `quarkus` Maven plugin includes the `dependency-tree` goal which displays the build dependency tree for the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:337
msgid "Executing `./mvnw quarkus:dependency-tree` on your project should result in an output similar to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:349
#, no-wrap
msgid ""
"[INFO] --- quarkus-maven-plugin:{quarkus-version}:dependency-tree (default-cli) @ getting-started ---\n"
"[INFO] org.acme:getting-started:jar:1.0.0-SNAPSHOT\n"
"[INFO] └─ io.quarkus:quarkus-resteasy-deployment:jar:{quarkus-version} (compile)\n"
"[INFO]    ├─ io.quarkus:quarkus-resteasy-server-common-deployment:jar:{quarkus-version} (compile)\n"
"[INFO]    │  ├─ io.quarkus:quarkus-core-deployment:jar:{quarkus-version} (compile)\n"
"[INFO]    │  │  ├─ commons-beanutils:commons-beanutils:jar:1.9.3 (compile)\n"
"[INFO]    │  │  │  ├─ commons-logging:commons-logging:jar:1.2 (compile)\n"
"[INFO]    │  │  │  └─ commons-collections:commons-collections:jar:3.2.2 (compile)\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:352
msgid "The goal accepts the following optional parameters:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:354
msgid "`mode` - the default value is `prod`, i.e. the production build dependency tree. Alternatively, it accepts values `test` to display the test dependency tree and `dev` to display the dev mode dependency tree;"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:355
msgid "`outputFile` - specifies the file to persist the dependency tree to;"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:356
msgid "`appendOutput` - the default value is `false`, indicates whether the output to the command should be appended to the file specified with the `outputFile` parameter or it should be overriden."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:357
#, no-wrap
msgid "Downloading Maven artifact dependencies for offline development and testing"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:362
msgid "Quarkus extension dependencies are divided into the runtime extension dependencies that end up on the application runtime classpath and the deployment (or build time) extension dependencies that are resolved by Quarkus only at application build time to create the build classpath. Application developers are expected to express dependencies only on the runtime artifacts of Quarkus extensions. As a consequence, the deployment extension dependencies aren't visible to Maven plugins that aren't aware of the Quarkus extension dependency model, such as the `maven-dependency-plugin`, `go-offline-maven-plugin`, etc. That means those plugins can not be used to pre-download all the application dependencies to be able to build and test the application later in offline mode."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:364
msgid "To enable the use-case of building and testing a Quarkus application offline, the `quarkus-maven-plugin` includes the `go-offline` goal that could be called from the command line like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:368
#, no-wrap
msgid "./mvnw quarkus:go-offline\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:371
msgid "This goal will resolve all the runtime, build time, test and dev mode dependencies of the application downloading them to the configured local Maven repository."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:372
#, no-wrap
msgid "Building a native executable"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:375
msgid "Native executables make Quarkus applications ideal for containers and serverless workloads."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:378
msgid "Make sure to have `GRAALVM_HOME` configured and pointing to GraalVM version {graalvm-version} (Make sure to use a Java 11 version of GraalVM).  Verify that your `pom.xml` has the proper `native` profile (see <<build-tool-maven>>)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:380
msgid "Create a native executable using:"
msgstr "使用以下方法创建一个原生可执行文件："

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:384
msgid "A native executable will be present in `target/`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:386
msgid "To run Integration Tests on the native executable, make sure to have the proper Maven plugin configured (see <<build-tool-maven>>) and launch the `verify` goal."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:414
#, no-wrap
msgid ""
"$ ./mvnw verify -Pnative\n"
"...\n"
"[quarkus-quickstart-runner:50955]     universe:     391.96 ms\n"
"[quarkus-quickstart-runner:50955]      (parse):     904.37 ms\n"
"[quarkus-quickstart-runner:50955]     (inline):   1,143.32 ms\n"
"[quarkus-quickstart-runner:50955]    (compile):   6,228.44 ms\n"
"[quarkus-quickstart-runner:50955]      compile:   9,130.58 ms\n"
"[quarkus-quickstart-runner:50955]        image:   2,101.42 ms\n"
"[quarkus-quickstart-runner:50955]        write:     803.18 ms\n"
"[quarkus-quickstart-runner:50955]      [total]:  33,520.15 ms\n"
"[INFO]\n"
"[INFO] --- maven-failsafe-plugin:2.22.0:integration-test (default) @ quarkus-quickstart-native ---\n"
"[INFO]\n"
"[INFO] -------------------------------------------------------\n"
"[INFO]  T E S T S\n"
"[INFO] -------------------------------------------------------\n"
"[INFO] Running org.acme.quickstart.GreetingResourceIT\n"
"Executing [/Users/starksm/Dev/JBoss/Quarkus/starksm64-quarkus-quickstarts/getting-started-native/target/quarkus-quickstart-runner, -Dquarkus.http.port=8081, -Dtest.url=http://localhost:8081, -Dquarkus.log.file.path=target/quarkus.log]\n"
"2019-02-28 16:52:42,020 INFO  [io.quarkus] (main) Quarkus started in 0.007s. Listening on: http://localhost:8080\n"
"2019-02-28 16:52:42,021 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy]\n"
"[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.081 s - in org.acme.quickstart.GreetingResourceIT\n"
"[INFO]\n"
"[INFO] Results:\n"
"[INFO]\n"
"[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:416
#, no-wrap
msgid "...\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:418
#, no-wrap
msgid "Build a container friendly executable"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:422
msgid "The native executable will be specific to your operating system.  To create an executable that will run in a container, use the following:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:430
msgid "The produced executable will be a 64 bit Linux executable, so depending on your operating system it may no longer be runnable.  However, it's not an issue as we are going to copy it to a Docker container.  Note that in this case the build itself runs in a Docker container too, so you don't need to have GraalVM installed locally."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/maven-tooling.adoc:434
msgid "By default, the native executable will be generated using the `quay.io/quarkus/ubi-quarkus-native-image:{graalvm-flavor}` Docker image."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/maven-tooling.adoc:437
msgid "If you want to build a native executable with a different Docker image (for instance to use a different GraalVM version), use the `-Dquarkus.native.builder-image=<image name>` build argument."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/maven-tooling.adoc:440
msgid "The list of the available Docker images can be found on https://quay.io/repository/quarkus/ubi-quarkus-native-image?tab=tags[quay.io].  Be aware that a given Quarkus version might not be compatible with all the images available."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:443
msgid "You can follow the xref:building-native-image.adoc[Build a native executable guide] as well as xref:deploying-to-kubernetes.adoc[Deploying Application to Kubernetes and OpenShift] for more information."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:445
#, no-wrap
msgid "Maven configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:448
msgid "If you have not used <<project-creation,project scaffolding>>, add the following elements in your `pom.xml`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:462
#, no-wrap
msgid ""
"<dependencyManagement>\n"
"    <dependencies>\n"
"        <dependency> <1>\n"
"            <groupId>${quarkus.platform.group-id}</groupId>\n"
"            <artifactId>quarkus-bom</artifactId>\n"
"            <version>${quarkus.platform.version}</version>\n"
"            <type>pom</type>\n"
"            <scope>import</scope>\n"
"        </dependency>\n"
"    </dependencies>\n"
"</dependencyManagement>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:493
#, no-wrap
msgid ""
"<build>\n"
"    <plugins>\n"
"        <plugin> <2>\n"
"            <groupId>${quarkus.platform.group-id}</groupId>\n"
"            <artifactId>quarkus-maven-plugin</artifactId>\n"
"            <version>${quarkus.platform.version}</version>\n"
"            <extensions>true</extensions> <3>\n"
"            <executions>\n"
"                <execution>\n"
"                    <goals>\n"
"                        <goal>build</goal>\n"
"                        <goal>generate-code</goal>\n"
"                        <goal>generate-code-tests</goal>\n"
"                    </goals>\n"
"                </execution>\n"
"            </executions>\n"
"        </plugin>\n"
"        <plugin> <4>\n"
"            <groupId>org.apache.maven.plugins</groupId>\n"
"            <artifactId>maven-surefire-plugin</artifactId>\n"
"            <version>${surefire-plugin.version}</version>\n"
"            <configuration>\n"
"                <systemPropertyVariables>\n"
"                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"                    <maven.home>${maven.home}</maven.home>\n"
"                </systemPropertyVariables>\n"
"            </configuration>\n"
"        </plugin>\n"
"    </plugins>\n"
"</build>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:526
#, no-wrap
msgid ""
"<profiles>\n"
"    <profile> <5>\n"
"        <id>native</id>\n"
"        <properties> <6>\n"
"            <quarkus.package.type>native</quarkus.package.type>\n"
"        </properties>\n"
"        <build>\n"
"            <plugins>\n"
"                <plugin> <7>\n"
"                    <groupId>org.apache.maven.plugins</groupId>\n"
"                    <artifactId>maven-failsafe-plugin</artifactId>\n"
"                    <version>${surefire-plugin.version}</version>\n"
"                    <executions>\n"
"                        <execution>\n"
"                            <goals>\n"
"                                <goal>integration-test</goal>\n"
"                                <goal>verify</goal>\n"
"                            </goals>\n"
"                            <configuration>\n"
"                                <systemPropertyVariables>\n"
"                                    <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n"
"                                    <java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>\n"
"                                    <maven.home>${maven.home}</maven.home>\n"
"                                </systemPropertyVariables>\n"
"                            </configuration>\n"
"                        </execution>\n"
"                    </executions>\n"
"                </plugin>\n"
"            </plugins>\n"
"        </build>\n"
"    </profile>\n"
"</profiles>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:529
msgid "Optionally use a BOM file to omit the version of the different Quarkus dependencies."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:530
msgid "Use the Quarkus Maven plugin that will hook into the build process."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:531
msgid "Enabling Maven plugin extensions will register a Quarkus `MavenLifecycleParticipant` which will make sure the Quarkus classloaders used during the build are properly closed. During the `generate-code` and `generate-code-tests` goals the Quarkus application bootstrap is initialized and re-used in the `build` goal (which actually builds and packages a production application). The Quarkus classloaders will be properly closed in the `build` goal of the `quarkus-maven-plugin`. However, if the build fails in between the `generate-code` or `generate-code-tests` and `build` then the Quarkus augmentation classloader won't be properly closed, which may lead to locking of JAR files that happened to be on the classpath on Windows OS."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:533
msgid "Add system properties to `maven-surefire-plugin`. + `maven.home` is only required if you have custom configuration in `${maven.home}/conf/settings.xml`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:534
msgid "Use a specific `native` profile for native executable building."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:535
msgid "Enable the `native` package type. The build will therefore produce a native executable."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:536
msgid "If you want to test your native executable with Integration Tests, add the following plugin configuration. Test names `*IT` and annotated `@NativeImageTest` will be run against the native executable. See the xref:building-native-image.adoc[Native executable guide] for more info."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:538
#, no-wrap
msgid "Using fast-jar"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:541
msgid "`fast-jar` is the default quarkus package type."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:543
msgid "The result of the build is a directory under `target` named `quarkus-app`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:545
msgid "You can run the application using: `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:548
msgid "In order to successfully run the produced jar, you need to have the entire contents of the `quarkus-app` directory. If any of the files are missing, the application will not start or might not function correctly."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:552
msgid "The `fast-jar` packaging results in creating an artifact that starts a little faster and consumes slightly less memory than a legacy Quarkus jar because it has indexed information about which dependency jar contains classes and resources. It can thus avoid the lookup into potentially every jar on the classpath that the legacy jar necessitates, when loading a class or resource."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:554
#, no-wrap
msgid "Uber-Jar Creation"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:558
msgid "Quarkus Maven plugin supports the generation of Uber-Jars by specifying a `quarkus.package.type=uber-jar` configuration option in your `application.properties` (or `<quarkus.package.type>uber-jar</quarkus.package.type>` in your `pom.xml`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:560
msgid "The original jar will still be present in the `target` directory but it will be renamed to contain the `.original` suffix."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:563
msgid "When building an Uber-Jar you can specify entries that you want to exclude from the generated jar by using the `quarkus.package.ignored-entries` configuration option, this takes a comma separated list of entries to ignore."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:565
msgid "Uber-Jar creation by default excludes link:https://docs.oracle.com/javase/tutorial/deployment/jar/intro.html[signature files] that might be present in the dependencies of the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:567
msgid "Uber-Jar's final name is configurable via a Maven's build settings `finalName` option."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:569
#, no-wrap
msgid "Working with multi-module projects"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:572
msgid "By default, Quarkus will not discover CDI beans inside another module."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:575
msgid "The best way to enable CDI bean discovery for a module in a multi-module project would be to include the `jandex-maven-plugin`, unless it is the main application module already configured with the quarkus-maven-plugin, in which case it will indexed automatically."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:595
#, no-wrap
msgid ""
"<build>\n"
"  <plugins>\n"
"    <plugin>\n"
"      <groupId>org.jboss.jandex</groupId>\n"
"      <artifactId>jandex-maven-plugin</artifactId>\n"
"      <version>{jandex-maven-plugin-version}</version>\n"
"      <executions>\n"
"        <execution>\n"
"          <id>make-index</id>\n"
"          <goals>\n"
"            <goal>jandex</goal>\n"
"          </goals>\n"
"        </execution>\n"
"      </executions>\n"
"    </plugin>\n"
"  </plugins>\n"
"</build>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:598
msgid "More information on this topic can be found on the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:600
#, no-wrap
msgid "Building with a specific configuration profile"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:603
msgid "Quarkus supports xref:config-reference.adoc#profiles[configuration profiles] in order to provide a specific configuration according to the target environment."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:605
msgid "The profile can be provided directly in the Maven build's command thanks to the system property `quarkus.profile` with a command of type:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:612
msgid "However it is also possible to specify the profile directly in the POM file of the project using project properties, the Quarkus Maven plugin configuration properties or system properties set in the Quarkus Maven plugin configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:614
msgid "In order of precedence (greater precedence first):"
msgstr ""

#. type: Block title
#: upstream/_versions/2.7/guides/maven-tooling.adoc:615
#, no-wrap
msgid "1. System properties set in the Quarkus Maven plugin configuration"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:641
#, no-wrap
msgid ""
"<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
"  ...\n"
"  <build>\n"
"    <plugins>\n"
"      ...\n"
"      <plugin>\n"
"        <groupId>${quarkus.platform.group-id}</groupId>\n"
"        <artifactId>quarkus-maven-plugin</artifactId>\n"
"        <version>${quarkus.platform.version}</version>\n"
"        <extensions>true</extensions>\n"
"        <configuration>\n"
"          <systemProperties>\n"
"            <quarkus.profile>prod-aws</quarkus.profile> <1>\n"
"          </systemProperties>\n"
"        </configuration>\n"
"     </plugin>\n"
"     ...\n"
"    </plugins>\n"
"  </build>\n"
"...\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:643
#: upstream/_versions/2.7/guides/maven-tooling.adoc:672
#: upstream/_versions/2.7/guides/maven-tooling.adoc:688
msgid "The default configuration profile of this project is `prod-aws`."
msgstr ""

#. type: Block title
#: upstream/_versions/2.7/guides/maven-tooling.adoc:644
#, no-wrap
msgid "2. Quarkus Maven plugin configuration properties"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:670
#, no-wrap
msgid ""
"<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
"  ...\n"
"  <build>\n"
"    <plugins>\n"
"      ...\n"
"      <plugin>\n"
"        <groupId>${quarkus.platform.group-id}</groupId>\n"
"        <artifactId>quarkus-maven-plugin</artifactId>\n"
"        <version>${quarkus.platform.version}</version>\n"
"        <extensions>true</extensions>\n"
"        <configuration>\n"
"          <properties>\n"
"            <quarkus.profile>prod-aws</quarkus.profile> <1>\n"
"          </properties>\n"
"        </configuration>\n"
"     </plugin>\n"
"     ...\n"
"    </plugins>\n"
"  </build>\n"
"...\n"
"</project>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.7/guides/maven-tooling.adoc:673
#, no-wrap
msgid "3. Project properties"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:686
#, no-wrap
msgid ""
"<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
"  ...\n"
"  <properties>\n"
"    <quarkus.profile>prod-aws</quarkus.profile> <1>\n"
"    ...\n"
"  </properties>\n"
"...\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:690
msgid "Whatever the approach is chosen, the profile can still be overridden with the `quarkus.profile` system property or the `QUARKUS_PROFILE` environment variable."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:692
#, no-wrap
msgid "Building several artifacts from a single module"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:696
msgid "In some particular use cases, it can be interesting to build several artifacts of your application from the same module.  A typical example is when you want to build your application with different configuration profiles."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:698
msgid "In that case, it is possible to add as many executions as needed to the Quarkus Maven plugin configuration."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:700
msgid "Below is an example of a Quarkus Maven plugin configuration that will produce two builds of the same application: one using the `prod-oracle` profile and the other one using the `prod-postgresql` profile."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:746
#, no-wrap
msgid ""
"<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
"  ...\n"
"  <build>\n"
"    <plugins>\n"
"      ...\n"
"      <plugin>\n"
"        <groupId>${quarkus.platform.group-id}</groupId>\n"
"        <artifactId>quarkus-maven-plugin</artifactId>\n"
"        <version>${quarkus.platform.version}</version>\n"
"        <extensions>true</extensions>\n"
"        <executions>\n"
"          <execution>\n"
"            <id>oracle</id>\n"
"            <goals>\n"
"              <goal>build</goal>\n"
"            </goals>\n"
"            <configuration>\n"
"              <properties>\n"
"                <quarkus.profile>prod-oracle</quarkus.profile> <1>\n"
"                <quarkus.package.output-directory>oracle-quarkus-app</quarkus.package.output-directory> <2>\n"
"              </properties>\n"
"            </configuration>\n"
"          </execution>\n"
"          <execution>\n"
"            <id>postgresql</id>\n"
"            <goals>\n"
"              <goal>build</goal>\n"
"            </goals>\n"
"            <configuration>\n"
"              <properties>\n"
"                <quarkus.profile>prod-postgresql</quarkus.profile> <3>\n"
"                <quarkus.package.output-directory>postgresql-quarkus-app</quarkus.package.output-directory> <4>\n"
"              </properties>\n"
"            </configuration>\n"
"          </execution>\n"
"        </executions>\n"
"     </plugin>\n"
"     ...\n"
"    </plugins>\n"
"  </build>\n"
"...\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:748
msgid "The default configuration profile of the first execution of the plugin is `prod-oracle`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:749
msgid "The output directory of the first execution of the plugin is set to `oracle-quarkus-app` instead of `quarkus-app` to have a dedicated directory."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:750
msgid "The default configuration profile of the second execution of the plugin is `prod-postgresql`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:751
msgid "The output directory of the second execution of the plugin is set to `postgresql-quarkus-app` instead of `quarkus-app` to have a dedicated directory."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:753
msgid "With the configuration above, both profile builds will be using the same dependencies, so if we added dependencies on the Oracle and PostgreSQL drivers to the application, both of the drivers will appear in both builds."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:756
msgid "To isolate profile-specific dependencies from other profiles, the JDBC drivers could be added as optional dependencies to the application but configured to be included in each profile that requires them, e.g.:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:802
#, no-wrap
msgid ""
"<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n"
"    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n"
"  ...\n"
"  <dependencies>\n"
"    ...\n"
"    <dependency>\n"
"      <groupId>org.postgresql</groupId>\n"
"      <artifactId>postgresql</artifactId>\n"
"      <version>${postgresql.driver.version}</version>\n"
"      <optional>true</optional> <1>\n"
"    </dependency>\n"
"  </dependencies>\n"
"  <build>\n"
"    <plugins>\n"
"      ...\n"
"      <plugin>\n"
"        <groupId>${quarkus.platform.group-id}</groupId>\n"
"        <artifactId>quarkus-maven-plugin</artifactId>\n"
"        <version>${quarkus.platform.version}</version>\n"
"        <extensions>true</extensions>\n"
"        <executions>\n"
"          ...\n"
"          <execution>\n"
"            <id>postgresql</id>\n"
"            <goals>\n"
"              <goal>build</goal>\n"
"            </goals>\n"
"            <configuration>\n"
"              <properties>\n"
"                <quarkus.profile>prod-postgresql</quarkus.profile>\n"
"                <quarkus.package.output-directory>postgresql-quarkus-app</quarkus.package.output-directory>\n"
"                <quarkus.package.filter-optional-dependencies>true</quarkus.package.filter-optional-dependencies> <2>\n"
"                <quarkus.package.included-optional-dependencies>org.postgresql:postgresql::jar</quarkus.package.included-optional-dependencies> <3>\n"
"              </properties>\n"
"            </configuration>\n"
"          </execution>\n"
"        </executions>\n"
"     </plugin>\n"
"     ...\n"
"    </plugins>\n"
"  </build>\n"
"...\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:804
msgid "The JDBC driver of PostgreSQL is defined as an optional dependency"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:805
msgid "For backward compatibility reasons, it is necessary to explicitly indicate that the optional dependencies need to be filtered."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:806
msgid "Only the optional dependency corresponding to the JDBC driver of PostgreSQL is expected in the final artifact."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:808
#, no-wrap
msgid "Configuring the Project Output"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:812
msgid "There are a several configuration options that will define what the output of your project build will be.  These are provided in `application.properties` the same as any other config property."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:814
msgid "The properties are shown below:"
msgstr "这些属性显示如下："

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:818
#, no-wrap
msgid "Custom test configuration profile in JVM mode"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:823
msgid "By default, Quarkus tests in JVM mode are run using the `test` configuration profile. If you are not familiar with Quarkus configuration profiles, everything you need to know is explained in the xref:config.adoc#configuration-profiles[Configuration Profiles Documentation]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:827
msgid "It is however possible to use a custom configuration profile for your tests with the Maven Surefire and Maven Failsafe configurations shown below. This can be useful if you need for example to run some tests using a specific database which is not your default testing database."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:862
#, no-wrap
msgid ""
"<project>\n"
"  [...]\n"
"  <build>\n"
"    <plugins>\n"
"      <plugin>\n"
"        <groupId>org.apache.maven.plugins</groupId>\n"
"        <artifactId>maven-surefire-plugin</artifactId>\n"
"        <version>${surefire-plugin.version}</version>\n"
"        <configuration>\n"
"          <systemPropertyVariables>\n"
"            <quarkus.test.profile>foo</quarkus.test.profile> <1>\n"
"            <buildDirectory>${project.build.directory}</buildDirectory>\n"
"            [...]\n"
"          </systemPropertyVariables>\n"
"        </configuration>\n"
"      </plugin>\n"
"      <plugin>\n"
"        <groupId>org.apache.maven.plugins</groupId>\n"
"        <artifactId>maven-failsafe-plugin</artifactId>\n"
"        <version>${failsafe-plugin.version}</version>\n"
"        <configuration>\n"
"          <systemPropertyVariables>\n"
"            <quarkus.test.profile>foo</quarkus.test.profile> <1>\n"
"            <buildDirectory>${project.build.directory}</buildDirectory>\n"
"            [...]\n"
"          </systemPropertyVariables>\n"
"        </configuration>\n"
"      </plugin>\n"
"    </plugins>\n"
"  </build>\n"
"  [...]\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:865
msgid "The `foo` configuration profile will be used to run the tests."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/maven-tooling.adoc:870
msgid "It is not possible to use a custom test configuration profile in native mode for now. Native tests are always run using the `prod` profile."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:873
#, no-wrap
msgid "Bootstrap Maven properties"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:876
msgid "Quarkus bootstrap includes a Maven resolver implementation that is used to resolve application runtime and build time dependencies. The Quarkus Maven resolver is initialized from the same Maven command line that launched the build, test or dev mode. Typically, there is no need to add any extra configuration for it. However, there could be cases where an extra configuration option may be necessary to properly resolve application dependencies in test or dev modes, or IDEs."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:878
msgid "Maven test plugins (such as `surefire` and `failsafe`), for example, are not propagating build system properties to the running tests by default. Which means some of the system properties set by the Maven CLI aren't available for the Quarkus Maven resolver initialized for the tests, which may result in test dependencies being resolved using different settings than the main Maven build."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:880
msgid "Here is a list of system properties the Quarkus bootstrap Maven resolver checks during its initialization."
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:884
#, no-wrap
msgid "Property name"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:888
#, no-wrap
msgid "`maven.home`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:889
#, no-wrap
msgid "`MAVEN_HOME` envvar"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:891
#, no-wrap
msgid "The Maven home dir is used to resolve the global settings file unless it was explicitly provided on the command line with the `-gs` argument"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:892
#, no-wrap
msgid "`maven.settings`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:893
#, no-wrap
msgid "`~/m2/settings.xml`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:895
#, no-wrap
msgid "Unless the custom settings file has been provided with the `-s` argument, this property can be used to point the resolver to a custom Maven settings file"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:896
#, no-wrap
msgid "`maven.repo.local`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:897
#, no-wrap
msgid "`~/m2/repository`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:899
#, no-wrap
msgid "This property could be used to configure a custom local Maven repository directory, if it is different from the default one and the one specified in the `settings.xml`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:900
#, no-wrap
msgid "`maven.top-level-basedir`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:901
#, no-wrap
msgid "none"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:903
#, no-wrap
msgid "This property may be useful to help the Maven resolver identify the top-level Maven project in the workspace. By default, the Maven resolver will be discovering a project's workspace by navigating the parent-module POM relationship. However there could be project layouts that are using an aggregator module which isn't appearing as the parent for its modules. In this case, this property will help the Quarkus Maven resolver to properly discover the workspace."
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:904
#, no-wrap
msgid "`quarkus.bootstrap.effective-model-builder`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:905
#, no-wrap
msgid "`false`"
msgstr ""

#. type: Table
#: upstream/_versions/2.7/guides/maven-tooling.adoc:907
#, no-wrap
msgid "By default, the Quarkus Maven resolver is reading project's POMs directly when discovering the project's layout. While in most cases it works well enough and relatively fast, reading raw POMs has its limitation. E.g. if a POM includes modules in a profile, these modules will not be discovered. This system property enables project's layout discovery based on the effective POM models, that are properly interpolated, instead of the raw ones. The reason this option is not enabled by default is it may appear to be significantly more time consuming that could increase, e.g. CI testing times. Until there is a better approach found that could be used by default, projects that require it should enable this option."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:910
msgid "These system properties above could be added to, e.g., a `surefire` and/or `failsafe` plugin configuration as"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:934
#, no-wrap
msgid ""
"<project>\n"
"  [...]\n"
"  <build>\n"
"    <plugins>\n"
"      <plugin>\n"
"        <groupId>org.apache.maven.plugins</groupId>\n"
"        <artifactId>maven-surefire-plugin</artifactId>\n"
"        <version>${surefire-plugin.version}</version>\n"
"        <configuration>\n"
"          <systemPropertyVariables>\n"
"            <maven.home>${maven.hom}</maven.home> <1>\n"
"            <maven.repo.local>${settings.localRepository}</maven.repo.local> <2>\n"
"            <maven.settings>${session.request.userSettingsFile.path}</maven.settings> <3>\n"
"            <maven.top-level-basedir>${session.topLevelProject.basedir.absolutePath}</maven.top-level-basedir> <4>\n"
"            <quarkus.bootstrap.effective-model-builder>true</quarkus.bootstrap.effective-model-builder> <5>\n"
"          </systemPropertyVariables>\n"
"        </configuration>\n"
"      </plugin>\n"
"    </plugins>\n"
"  </build>\n"
"  [...]\n"
"</project>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:937
msgid "Propagate `maven.home` system property set by the Maven CLI to the tests"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:938
msgid "Set the Maven local repository directory for the tests"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:939
msgid "Set the Maven settings file the tests"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:940
msgid "Point to the top-level project directory for the tests"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:941
msgid "Enable effective POM-based project layout discovery"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.7/guides/maven-tooling.adoc:942
#, no-wrap
msgid "Top-level vs Multi-module project directory"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:946
msgid "In Maven there appears to be a notion of the top-level project (that is exposed as a project property `${session.topLevelProject.basedir.absolutePath}`)  and the multi-module project directory (that is available as property `${maven.multiModuleProjectDirectory}`). These directories might not always match!"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:948
msgid "`maven.multiModuleProjectDirectory` is meant to be consulted by the Maven code itself and not something to be relied upon by user code. So, if you find it useful, use it at your own risk!"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:952
msgid "The `${maven.multiModuleProjectDirectory}` will be resolved to the first directory that contains `.mvn` directory as its child going up the workspace file system tree starting from the current directory (or the one specified with the `-f` argument) from which the `mvn` command was launched. If the `.mvn` directory was not found, however, the `${maven.multiModuleProjectDirectory}` will be pointing to the directory from which the `mvn` command was launched (or the one targeted with the `-f` argument)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:955
msgid "The `${session.topLevelProject.basedir.absolutePath}` will be pointing either to the directory from which the `mvn` command was launched or to the directory targeted with the `-f` argument, if it was specified."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:957
#, no-wrap
msgid "Quarkus project info"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:960
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1037
msgid "This goal was introduced in Quarkus Maven plugin 2.7.0.Final and can be used in projects that are based on Quarkus version 2.0.0.Final or later."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:963
msgid "The Quarkus Maven plugin includes a goal called `info` (currently marked as 'experimental') that logs Quarkus-specific information about the project, such as: the imported Quarkus platform BOMs and the Quarkus extensions found among the project dependencies.  In a multi-module project `quarkus:info` will assume that the current module, in which it is executed, is the main module of the application."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:965
msgid "The report generated by `quarkus:info` is not currently including the Quarkus Maven plugin information, however it's planned to be added in the future releases."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:967
msgid "Here is an example `info` output for a simple project:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:994
#, no-wrap
msgid ""
"[aloubyansky@localhost code-with-quarkus]$ mvn quarkus:info\n"
"[INFO] Scanning for projects...\n"
"[INFO] \n"
"[INFO] ---------------------< org.acme:code-with-quarkus >---------------------\n"
"[INFO] Building code-with-quarkus 1.0.0-SNAPSHOT\n"
"[INFO] --------------------------------[ jar ]---------------------------------\n"
"[INFO] \n"
"[INFO] --- quarkus-maven-plugin:{quarkus-version}:info (default-cli) @ code-with-quarkus ---\n"
"[WARNING] quarkus:info goal is experimental, its options and output may change in future versions\n"
"[INFO] Quarkus platform BOMs: <1>\n"
"[INFO]   io.quarkus.platform:quarkus-bom:pom:{quarkus-version}\n"
"[INFO]   io.quarkus.platform:quarkus-kogito-bom:pom:{quarkus-version}\n"
"[INFO]   io.quarkus.platform:quarkus-camel-bom:pom:{quarkus-version}\n"
"[INFO] \n"
"[INFO] Extensions from io.quarkus.platform:quarkus-bom: <2>\n"
"[INFO]   io.quarkus:quarkus-resteasy-reactive\n"
"[INFO] \n"
"[INFO] Extensions from io.quarkus.platform:quarkus-kogito-bom: <3>\n"
"[INFO]   org.kie.kogito:kogito-quarkus-decisions\n"
"[INFO] \n"
"[INFO] Extensions from io.quarkus.platform:quarkus-camel-bom: <4>\n"
"[INFO]   org.apache.camel.quarkus:camel-quarkus-rabbitmq\n"
"[INFO] \n"
"[INFO] Extensions from registry.quarkus.io: <5>\n"
"[INFO]   io.quarkiverse.prettytime:quarkus-prettytime:0.2.1\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:997
msgid "Quarkus platform BOMs imported in the project (BOMs imported by parent POMs will also be reported)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:998
msgid "Direct Quarkus extension dependencies managed by the `quarkus-bom`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:999
msgid "Direct Quarkus extension dependencies managed by the `quarkus-kogito-bom`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1000
msgid "Direct Quarkus extension dependencies managed by the `quarkus-camel-bom`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1001
msgid "Direct Quarkus extensions dependencies that aren't managed by Quarkus BOMs but found in the Quarkus extension registry"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1003
msgid "`quarkus:info` will also report Quarkus extensions that aren't found in the Quarkus extension registries if those are present among the project dependencies, indicating they have an 'unknown origin'."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1005
#, no-wrap
msgid "Highlighing misaligned versions"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1008
msgid "`quarkus:info` will also highlight basic Quarkus dependency version misalignments, in case they are detected. For example, if we modify the project mentioned above by removing the `kogito-quarkus-decisions` extension from the dependencies and adding a `2.6.3.Final` `<version>` element to the `quarkus-resteasy-reactive` dependency that is managed by the `quarkus-bom` and then run `quarkus:info` again, we'll see something like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1028
#, no-wrap
msgid ""
"[INFO] --- quarkus-maven-plugin:{quarkus-version}:info (default-cli) @ code-with-quarkus ---\n"
"[WARNING] quarkus:info goal is experimental, its options and output may change in future versions\n"
"[INFO] Quarkus platform BOMs:\n"
"[INFO]   io.quarkus.platform:quarkus-bom:pom:{quarkus-version}\n"
"[INFO]   io.quarkus.platform:quarkus-kogito-bom:pom:{quarkus-version} | unnecessary <1>\n"
"[INFO]   io.quarkus.platform:quarkus-camel-bom:pom:{quarkus-version}\n"
"[INFO] \n"
"[INFO] Extensions from io.quarkus.platform:quarkus-bom:\n"
"[INFO]   io.quarkus:quarkus-resteasy-reactive:2.6.3.Final | misaligned <2>\n"
"[INFO] \n"
"[INFO] Extensions from io.quarkus.platform:quarkus-camel-bom:\n"
"[INFO]   org.apache.camel.quarkus:camel-quarkus-rabbitmq\n"
"[INFO] \n"
"[INFO] Extensions from registry.quarkus.io:\n"
"[INFO]   io.quarkiverse.prettytime:quarkus-prettytime:0.2.1\n"
"[INFO]\n"
"[WARNING] Non-recommended Quarkus platform BOM and/or extension versions were found. For more details, please, execute 'mvn quarkus:update -Drectify'\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1031
msgid "The `quarkus-kogito-bom` import is now reported as 'unnecessary' since none of the Quarkus extensions it includes are found among the project dependencies"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1032
msgid "The version `2.6.3.Final` of the `quarkus-resteasy-reactive` is now reported as being misaligned with the version managed by the Quarkus platform BOM imported in the project, which is {quarkus-version}"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1034
#, no-wrap
msgid "Quarkus project update"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1039
msgid "The `quarkus:update` goal (currently marked as 'experimental') provided by the Quarkus Maven plugin can be used to check whether there are Quarkus-related updates available for a project, such as: new releases of the relevant Quarkus platform BOMs and non-platform Quarkus extensions present in the project. In a multi-module project the `update` goal is meant to be executed from the main Quarkus application module."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1041
msgid "At this point, the `quarkus:update` goal does not actually apply the recommended updates but simply reports what they are and how to apply them manually."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1043
msgid "The Quarkus Maven plugin version isn't currently included in the update report, however it's planned to be added in the future releases."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1045
msgid "The way `quarkus:update` works, first, all the direct Quarkus extension dependencies of the project are collected (those that are managed by the Quarkus platform BOMs and those that aren't but found in the Quarkus extension registries). Then the configured Quarkus extension registries (typically the `registry.quarkus.io`) will be queried for the latest recommended/supported Quarkus platform versions and non-platform Quarkus extensions compatible with them. The algorithm will then select the latest compatible combination of all the extensions found in the project, assuming such a combination actually exists. Otherwise, no updates will be suggested."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1047
msgid "Assuming we have a project including Kogito, Camel and core Quarkus extensions available in the Quarkus platform based on Quarkus `2.7.1.Final`, the output of the `quarkus:update` would look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1063
#, no-wrap
msgid ""
"[aloubyansky@localhost code-with-quarkus]$ mvn quarkus:update\n"
"[INFO] Scanning for projects...\n"
"[INFO] \n"
"[INFO] ---------------------< org.acme:code-with-quarkus >---------------------\n"
"[INFO] Building code-with-quarkus 1.0.0-SNAPSHOT\n"
"[INFO] --------------------------------[ jar ]---------------------------------\n"
"[INFO] \n"
"[INFO] --- quarkus-maven-plugin:{quarkus-version}:update (default-cli) @ code-with-quarkus ---\n"
"[WARNING] quarkus:update goal is experimental, its options and output might change in future versions\n"
"[INFO] \n"
"[INFO] Recommended Quarkus platform BOM updates: <1>\n"
"[INFO] Update: io.quarkus.platform:quarkus-bom:pom:2.7.1.Final -> {quarkus-version}\n"
"[INFO] Update: io.quarkus.platform:quarkus-kogito-bom:pom:2.7.1.Final -> {quarkus-version}\n"
"[INFO] Update: io.quarkus.platform:quarkus-camel-bom:pom:2.7.1.Final -> {quarkus-version}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1066
msgid "A list of currently recommended Quarkus platform BOM updates"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1068
msgid "Typically, a single project property will be used to manage all the Quarkus platform BOMs but the implementation isn't currently smart enough to point that out and will report updates for each BOM individually."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1070
msgid "If we modify the project to remove all the Kogito extensions from the project, change the version of the `quarkus-resteasy-reactive` extension to `2.6.3.Final` and downgrade `quarkus-prettytime` which is not included in the Quarkus platform BOMs to `0.2.0`, `quarkus:update` will report something like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1083
#, no-wrap
msgid ""
"[INFO] Recommended Quarkus platform BOM updates: <1>\n"
"[INFO] Update: io.quarkus.platform:quarkus-bom:pom:2.7.1.Final -> {quarkus-version}\n"
"[INFO] Update: io.quarkus.platform:quarkus-camel-bom:pom:2.7.1.Final -> {quarkus-version}\n"
"[INFO] Remove: io.quarkus.platform:quarkus-kogito-bom:pom:2.7.1.Final <2>\n"
"[INFO] \n"
"[INFO] Extensions from io.quarkus.platform:quarkus-bom:\n"
"[INFO] Update: io.quarkus:quarkus-resteasy-reactive:2.6.3.Final -> remove version (managed) <3>\n"
"[INFO] \n"
"[INFO] Extensions from registry.quarkus.io:\n"
"[INFO] Update: io.quarkiverse.prettytime:quarkus-prettytime:0.2.0 -> 0.2.1 <4>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1086
msgid "A list of the currently recommended Quarkus platform BOM updates for the project"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1087
msgid "Given that the project does not include any Kogito extensions, the BOM import is recommended to be removed"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1088
msgid "An outdated version of the `quarkus-resteasy-reactive` is recommended to be removed in favor of the one managed by the `quarkus-bom`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1089
msgid "The latest compatible version of the `quarkus-prettytime` extension"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1090
#, no-wrap
msgid "Quarkus project rectify"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1093
msgid "As was mentioned above, `quarkus:info`, besides reporting Quarkus platform and extension versions, performs a quick version alignment check, to make sure the extension versions used in the project are compatible with the imported Quarkus platform BOMs. If misalignments are detected, the following warning message will be logged:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1097
#, no-wrap
msgid "[WARNING] Non-recommended Quarkus platform BOM and/or extension versions were found. For more details, please, execute 'mvn quarkus:update -Drectify'\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/maven-tooling.adoc:1099
msgid "When the `rectify` option is enabled, `quarkus:update`, instead of suggesting the latest recommended Quarkus version updates, will log update instructions to simply align the extension dependency versions found in the project with the currently imported Quarkus platform BOMs."
msgstr ""
