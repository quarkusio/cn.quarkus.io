# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Authorization of Web Endpoints"
msgstr "网络端点的授权"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Quarkus has an integrated pluggable web security layer. If security is enabled all HTTP requests will have a permission\n"
"check performed to make sure they are allowed to continue."
msgstr "Quarkus有一个内置的可插拔的web安全层。如果安全功能被启用，所有的HTTP请求将会进行权限检查，以确保它们被允许继续操作。"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Configuration authorization checks are executed before any annotation-based authorization check is done, so both\n"
"checks have to pass for a request to be allowed. This means you cannot use `@PermitAll` to open up a path if the path has\n"
"been blocked using `quarkus.http.auth.` configuration. If you are using JAX-RS you may want to consider using the\n"
"`quarkus.security.jaxrs.deny-unannotated-endpoints` or `quarkus.security.jaxrs.default-roles-allowed` to set default security\n"
"requirements instead of HTTP path level matching, as these properties can be overridden by annotations on an individual\n"
"endpoint."
msgstr "配置授权检查会在任何基于注解的授权检查之前执行，所以只有这两种检查都通过后请求才会被允许执行。这意味着如果使用 `quarkus.http.auth.` 配置阻止了一个路径，您就不能使用 `@PermitAll` 来开放该路径。如果您使用 JAX-RS，您可能需要考虑使用 `quarkus.security.jaxrs.deny-unannotated-endpoints` 或 `quarkus.security.jaxrs.default-roles-allowed` 来设置默认的安全要求，而不是基于HTTP 路径级别的匹配，因为这些属性可以被独立节点上的注解所覆盖。"

#. type: Title ==
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Authorization using Configuration"
msgstr "使用配置进行授权"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"The default implementation allows you to define permissions using config in `application.properties`. An example\n"
"config is shown below:"
msgstr "默认实现允许您使用 `application.properties` 中的配置来定义权限。下面是一个配置的例子："

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "This defines a role based policy that allows users with the `user` and `admin` roles. This is referenced by later rules."
msgstr "定义了一个基于角色的策略来授权给具有 `user` 和 `admin` 角色的用户。该配置会被后面的规则所引用。"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "This is a permission set that references the previously defined policy. `roles1` is an arbitrary name, you can call the permission sets whatever you want."
msgstr "这是一个引用之前定义的策略的权限集。 `roles1` 是一个任意的名字，您可以随意的命名该权限集。"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "This permission references the default `permit` built-in policy to allow `GET` methods to `/public`. This is actually a no-op in this example, as this request would have been allowed anyway."
msgstr "这个权限引用了默认的 `permit` 内置策略，允许 `GET` 方法访问 `/public` 。在这个例子中，这实际上是一个空操作，因为这个请求无论如何都会被允许。"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "This permission references the built-in `deny` policy for `/forbidden`. This is an exact path match as it does not end with `*`."
msgstr "这个权限引用了内置的 `deny` 策略来作用于 `/forbidden` 。这是一个精确的路径匹配，因为它没有以 `*` 结尾。"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Permissions are defined in config using permission sets. These are arbitrarily named permission grouping. Each permission\n"
"set must specify a policy that is used to control access. There are three built-in policies: `deny`, `permit` and `authenticated`,\n"
"which respectively permits all, denies all and only allows authenticated users."
msgstr "权限是在配置中使用权限集来定义。他们是任意命名的权限分组。每个权限集必须指定一个用于控制访问的策略。有三种内置策略。 `deny` , `permit` 和 `authenticated` ，分别是允许所有、拒绝所有和只允许认证的用户。"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"It is also possible to define role based policies, as shown in the example. These policies will only allow users with the\n"
"specified roles to access the resources."
msgstr "也可以定义基于角色的策略，如例子所示。这些策略将只允许具有指定角色的用户访问资源。"

#. type: Title ===
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Matching on paths, methods"
msgstr "路径、方法的匹配"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Permission sets can also specify paths and methods as a comma separated list. If a path ends with `*` then it is considered\n"
"to be a wildcard match and will match all sub paths, otherwise it is an exact match and will only match that specific path:"
msgstr "权限集也可以用逗号分隔的列表来指定路径和方法。如果一个路径以 `*` 结尾，那么它被认为是通配符匹配，将匹配所有的子路径，否则它是精确匹配，只匹配这个特定路径："

#. type: Title ===
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Matching path but not method"
msgstr "匹配路径但不匹配方法"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"If a request would match one or more permission sets based on the path, but does not match any due to method requirements\n"
"then the request is rejected."
msgstr "如果一个请求匹配了一个或多个基于路径的权限集，但由于方法不匹配，那么该请求将被拒绝。"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Given the above permission set, `GET /public/foo` would match both the path and method and thus be allowed,\n"
"whereas `POST /public/foo` would match the path but not the method and would thus be rejected."
msgstr "对于上述权限设置， `GET /public/foo` 同时匹配了路径和方法，因此被允许，而 `POST /public/foo` 匹配路径但不匹配方法，因此被拒绝。"

#. type: Title ===
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Matching multiple paths: longest path wins"
msgstr "匹配多条路径：最长的路径获胜"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Matching is always done on a longest path wins basis, less specific permission sets are not considered if a more specific one\n"
"has been matched:"
msgstr "匹配总是在最长路径胜利的基础上进行，如果已经匹配了更具体的权限集，则不考虑其他模糊的权限集："

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Given the above permission set, `GET /public/forbidden-folder/foo` would match both permission sets' paths,\n"
"but because it matches the `deny1` permission set's path on a longer match, `deny1` will be chosen and the request will\n"
"be rejected."
msgstr "对于上述权限集， `GET /public/forbidden-folder/foo` 与两个权限集的路径相匹配，但由于 `deny1` 权限集的路径较长，所以 `deny1` 将被选择，请求将被拒绝。"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Subpath permissions always win against the root path permissions as explained above in the `deny1` versus `permit1` permission example.\n"
"Here is another example showing a subpath permission allowing a public resource access with the root path permission requiring the authorization:"
msgstr "子路径权限总是赢过根路径权限，正如上面 `deny1` 与 `permit1` 权限的例子所解释的那样。下面是另一个例子，显示了子路径权限允许公共资源访问，而根路径权限需要授权："

#. type: Title ===
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Matching multiple paths: most specific method wins"
msgstr "匹配多条路径：最具体的方法获胜"

#: _versions/2.7/guides/security-authorization.adoc
#, fuzzy
msgid ""
"If a path is registered with multiple permission sets then any permission sets that specify a HTTP method will take\n"
"precedence and permissions sets without a method will not be considered (assuming of course the method matches). In this\n"
"instance, the permission sets without methods will only come into effect if the request method does not match any of the\n"
"sets with method permissions."
msgstr "如果一个路径注册了多个权限集，那么任何指定 HTTP 方法的权限集都将优先，而不带方法的权限集将不被考虑（当然，前提是方法匹配）。在这种情况下，只有当请求方法与任何带有方法权限的权限集都不匹配时，不带方法的权限集才会生效。"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Given the above permission set, `GET /public/foo` would match both permission sets' paths,\n"
"but because it matches the `permit1` permission set's explicit method, `permit1` will be chosen and the request will\n"
"be accepted. `PUT /public/foo` on the other hand, will not match the method permissions of `permit1` and so\n"
"`deny1` will be activated and reject the request."
msgstr "对于上述权限集， `GET /public/foo` 将与两个权限集的路径相匹配，但由于它与 `permit1` 权限集的明确方法相匹配， `permit1` 将被选择，请求将被接受。另外， `PUT /public/foo` 没有匹配到 `permit1` 的方法权限，因此 `deny1` 将被激活并拒绝请求。"

#. type: Title ===
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Matching multiple paths and methods: both win"
msgstr "匹配多条路径和方法：双赢"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"If multiple permission sets specify the same path and method (or multiple have no method) then both permissions have to\n"
"allow access for the request to proceed. Note that for this to happen both have to either have specified the method, or\n"
"have no method, method specific matches take precedence as stated above:"
msgstr "如果多个权限组指定了相同的路径和方法(或者多个权限组没有指定方法)， 那么这两个权限都必须允许访问才能使请求被处理。请注意，要做到这一点，两个权限要么都必须指定方法，要么都不指定方法。这里就如之前所述那样，有具体的方法匹配会优先："

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Given the above permission set, `GET /api/foo` would match both permission sets' paths,\n"
"so would require both the `user` and `admin` roles."
msgstr "对于上述权限集， `GET /api/foo` 符合两个权限集的路径，所以需要 `user` 和 `admin` 两个角色。"

#. type: Title ===
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Configuration Properties to Deny access"
msgstr "拒绝访问的配置属性"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "There are three configuration settings that alter the RBAC Deny behavior:"
msgstr "有三个配置项可以改变RBAC拒绝行为："

#. type: Labeled list
#: _versions/2.7/guides/security-authorization.adoc
#, fuzzy, no-wrap
msgid "`quarkus.security.jaxrs.deny-unannotated-endpoints=true|false`"
msgstr " `quarkus.security.jaxrs.deny-unannotated-endpoints=true|false` "

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"If set to true, the access will be denied for all JAX-RS endpoints by default, so if a JAX-RS endpoint does not have any security annotations\n"
"then it will default to `@DenyAll` behaviour. This is useful to ensure you cannot accidentally expose an endpoint that is supposed to be secured. Defaults to `false`."
msgstr "如果设为 true，默认情况下将拒绝所有 JAX-RS 节点的访问，所以如果一个 JAX-RS 节点没有任何安全注解，那么它将默认为 `@DenyAll` 注解。这对于确保您不会意外地暴露出一个本应是安全的节点很有用。默认为 `false` 。"

#. type: Labeled list
#: _versions/2.7/guides/security-authorization.adoc
#, fuzzy, no-wrap
msgid "`quarkus.security.jaxrs.default-roles-allowed=role1,role2`"
msgstr " `quarkus.security.jaxrs.default-roles-allowed=role1,role2` "

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Defines the default role requirements for unannotated endpoints. The role '**' is a special role that means any authenticated user. This cannot be combined with\n"
"`deny-unannotated-endpoints`, as the deny will take effect instead."
msgstr "定义了未加注解节点的默认角色要求。角色'**'是一个特殊的角色，意味着任何认证的用户。该项不能与 `deny-unannotated-endpoints` 混合使用，因为deny会代替它生效。"

#. type: Labeled list
#: _versions/2.7/guides/security-authorization.adoc
#, fuzzy, no-wrap
msgid "`quarkus.security.deny-unannotated-members=true|false`"
msgstr " `quarkus.security.deny-unannotated-members=true|false` "

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"if set to true, the access will be denied to all CDI methods\n"
"and JAX-RS endpoints that do not have security annotations but are defined in classes that contain methods with\n"
"security annotations. Defaults to `false`."
msgstr "如果设置为 \"true\"，所有没有加安全注解但被定义在包含安全注解的方法的类中的CDI方法和JAX-RS节点的访问将被拒绝。默认为 `false` 。"

#: _versions/2.7/guides/security-authorization.adoc
msgid "Disabling permissions"
msgstr "禁用权限 "

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "Permissions can be disabled at build time with an `enabled` property for each declared permission, for example:"
msgstr "权限可以在构建时通过每个声明权限的 `enabled` 属性来禁用，例如："

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "and enabled at runtime with a system property or environment variable, for example: `-Dquarkus.http.auth.permission.permit1.enabled=true`."
msgstr "并在运行时通过系统属性或环境变量启用，例如： `-Dquarkus.http.auth.permission.permit1.enabled=true` 。"

#. type: Title ==
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "Authorization using Annotations"
msgstr "使用注解的授权"

#: _versions/2.7/guides/security-authorization.adoc
msgid ""
"Quarkus comes with built-in security to allow for Role-Based Access Control (link:https://en.wikipedia.org/wiki/Role-based_access_control[RBAC])\n"
"based on the common security annotations `@RolesAllowed`, `@DenyAll`, `@PermitAll` on REST endpoints and CDI beans.\n"
"An example of an endpoint that makes use of both JAX-RS and Common Security annotations to describe and secure its endpoints is given in <<subject-example>>. Quarkus also provides\n"
"the `io.quarkus.security.Authenticated` annotation that will permit any authenticated user to access the resource\n"
"(equivalent to `@RolesAllowed(\"**\")`)."
msgstr "Quarkus 具有内置的安全性，允许在 REST 节点和 CDI Bean 上使用基于通用安全注解 `@RolesAllowed` , `@DenyAll` , `@PermitAll` 的基于角色的访问控制 link:https://en.wikipedia.org/wiki/Role-based_access_control[（RBAC] ）。在 link:#subject-example[[subject-example]] 中给出了一个同时使用 JAX-RS 和通用安全注解来描述和保护其节点的例子。Quarkus 还提供了 `io.quarkus.security.Authenticated` 注解，它将允许任何经过认证的用户访问该资源（相当于 `@RolesAllowed(\"**\")` ）。"

#. type: Block title
#: _versions/2.7/guides/security-authorization.adoc
#, fuzzy, no-wrap
msgid "SubjectExposingResource Example"
msgstr "SubjectExposingResource 示例"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "This `/subject/secured` endpoint requires an authenticated user that has been granted the role \"Tester\" through the use of the `@RolesAllowed(\"Tester\")` annotation."
msgstr "`/subject/secured` 节点需要一个经过认证的用户，该用户通过使用 `@RolesAllowed(\"Tester\")` 注解被授予 \"Tester \"的角色。"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "The endpoint obtains the user principal from the JAX-RS `SecurityContext`. This will be non-null for a secured endpoint."
msgstr "该节点通过 JAX-RS `SecurityContext` 获取用户principal。对于受保护节点它将永不为null。"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "The `/subject/unsecured` endpoint allows for unauthenticated access by specifying the `@PermitAll` annotation."
msgstr "`/subject/unsecured` 节点通过使用 `@PermitAll` 注解来允许未认证的访问。"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "This call to obtain the user principal will return null if the caller is unauthenticated, non-null if the caller is authenticated."
msgstr "如果调用者未认证，这个获取用户principal的调用会返回null, 否则不会为null。"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
msgid "The `/subject/denied` endpoint disallows any access regardless of whether the call is authenticated by specifying the `@DenyAll` annotation."
msgstr "`/subject/denied` 节点使用了 `@DenyAll` 注解，所以不允许任何访问，即使访问是认证过的。"

#. type: Title ==
#: _versions/2.7/guides/security-authorization.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/2.7/guides/security-authorization.adoc
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "xref:security.adoc[夸克安全]"
