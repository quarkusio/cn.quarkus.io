# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "SmallRye GraphQL"
msgstr "小黑麦GraphQL"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"This guide demonstrates how your Quarkus application can use https://github.com/smallrye/smallrye-graphql/[SmallRye GraphQL],\n"
"an implementation of the https://github.com/eclipse/microprofile-graphql/[MicroProfile GraphQL] specification."
msgstr "本指南演示了 Quarkus 应用程序如何使用 link:https://github.com/eclipse/microprofile-graphql/[MicroProfile] link:https://github.com/smallrye/smallrye-graphql/[GraphQL] 规范的实现-- link:https://github.com/smallrye/smallrye-graphql/[SmallRye] GraphQL。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "As the https://www.graphql.org/[GraphQL] specification website states:"
msgstr "正如 link:https://www.graphql.org/[GraphQL] 规范网站所述。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.\n"
"GraphQL provides a complete and understandable description of the data in your API,\n"
"gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time,\n"
"and enables powerful developer tools."
msgstr "GraphQL 是应用程序接口的查询语言，也是利用现有数据实现这些查询的运行时。GraphQL 对 API 中的数据进行了完整、易懂的描述，使客户能够准确地询问他们所需的信息，使 API 更容易随时间推移而发展，并提供了功能强大的开发人员工具。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"**GraphQL** was originally developed by **Facebook** in 2012 and has been\n"
"an open standard since 2015."
msgstr "*GraphQL* 最初由 *Facebook* 于 2012 年开发，自 2015 年起成为开放标准。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"GraphQL is not a replacement for REST API specification but merely an\n"
"alternative. Unlike REST, GraphQL API's have the ability to benefit the client by:"
msgstr "GraphQL 并非 REST API 规范的替代品，而只是一种选择。与 REST 不同，GraphQL API 能够通过以下方式让客户受益："

#. type: Labeled list
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Preventing Over-fetching and Under-fetching"
msgstr "防止过度获取和获取不足"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"REST API's are server-driven fixed data responses that cannot be determined by\n"
"the client. Although the client does not require all the fields the client\n"
"must retrieve all the data hence `Over-fetching`. A client may also require\n"
"multiple REST API calls according to the first call (HATEOAS) to retrieve\n"
"all the data that is required thereby `Under-fetching`."
msgstr "REST API 是服务器驱动的固定数据响应，客户端无法确定。虽然客户端不需要所有字段，但客户端必须检索所有数据，因此 `Over-fetching` 。客户端也可能需要根据第一次调用（HATEOAS）多次调用 REST API 才能检索到所需的全部数据，因此 `Under-fetching` 。"

#. type: Labeled list
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "API Evolution"
msgstr "API的演变"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Since GraphQL API's returns data that are requested by the client adding additional\n"
"fields and capabilities to existing API will not create breaking changes to existing\n"
"clients."
msgstr "由于 GraphQL API 返回的数据是客户端请求的，因此在现有 API 中添加额外字段和功能不会对现有客户端造成破坏性更改。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"In this guide, we build a simple GraphQL application that exposes a GraphQL API\n"
"at `/graphql`."
msgstr "在本指南中，我们将构建一个简单的 GraphQL 应用程序，在 `/graphql` 上公开 GraphQL API。"

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "This example was inspired by a popular GraphQL API."
msgstr "这个例子是受一个流行的GraphQL API的启发。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "The solution is located in the `microprofile-graphql-quickstart` {quickstarts-tree-url}/microprofile-graphql-quickstart[directory]."
msgstr "解决方案位于 `microprofile-graphql-quickstart` {quickstarts-tree-url}/microprofile-graphql-quickstart[目录]。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "This command generates a project, importing the `smallrye-graphql` extension."
msgstr "该命令生成一个项目，导入 `smallrye-graphql` 扩展。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-graphql` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果已经配置了 Quarkus 项目，可以在项目基本目录下运行以下命令，将 `smallrye-graphql` 扩展添加到项目中："

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Preparing an Application: GraphQL API"
msgstr "准备一个应用程序。GraphQL API"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "In this section we will start creating the GraphQL API."
msgstr "在本节中，我们将开始创建GraphQL API。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "First, create the following entities representing a film from a galaxy far far away:"
msgstr "首先，创建以下实体，代表一部来自遥远星系的电影："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "For readability we use classes with public fields, but classes with private fields with public getters and setters will also work."
msgstr "为了便于阅读，我们使用带有公共字段的类，但带有公共getters和setters的私有字段的类也可以使用。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"The classes we have just created describe the GraphQL schema which is a\n"
"set of possible data (objects, fields, relationships) that a client can access."
msgstr "我们刚刚创建的类描述了 GraphQL 模式，这是一组客户端可以访问的可能数据（对象、字段、关系）。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Let's continue with an example CDI bean, that would work as a repository:"
msgstr "让我们继续看一个CDI bean的例子，它可以作为一个资源库来使用。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Now, let's create our first GraphQL API."
msgstr "现在，让我们来创建我们的第一个GraphQL API。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Edit the `org.acme.microprofile.graphql.FilmResource` class as following:"
msgstr "编辑 `org.acme.microprofile.graphql.FilmResource` 类，如下所示。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "`@GraphQLApi` annotation indicates that the CDI bean will be a GraphQL endpoint"
msgstr " `@GraphQLApi` 注解表明，CDI Bean将是一个GraphQL端点。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "`@Query` annotation defines that this method will be queryable with the name `allFilms`"
msgstr " `@Query` 注解定义了这个方法可以用以下名称进行查询 `allFilms` "

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Documentation of the queryable method"
msgstr "可查询方法的文件"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"The value of the `@Query` annotation is optional and would implicitly\n"
"be defaulted to the method name if absent."
msgstr "`@Query` 注解的值是可选的，如果没有，则默认为方法名称。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "This way we have created our first queryable API which we will later expand."
msgstr "这样，我们就创建了第一个可查询的API，以后我们将对其进行扩展。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Launch"
msgstr "启动"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Launch the quarkus application in dev mode:"
msgstr "在开发模式下启动quarkus应用程序。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Introspect"
msgstr "自省"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "The full schema of the GraphQL API can be retrieved by calling the following:"
msgstr "GraphQL API的完整模式可以通过调用以下内容进行检索。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "The server will return the complete schema of the GraphQL API."
msgstr "服务器将返回GraphQL API的完整模式。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "GraphiQL UI"
msgstr "图形QL 用户界面"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Experimental - not included in the MicroProfile specification"
msgstr "实验性的--不包括在MicroProfile规范中"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "GraphiQL UI is a great tool permitting easy interaction with your GraphQL APIs."
msgstr "GraphiQL UI 是一款出色的工具，可轻松与 GraphQL API 进行交互。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"The Quarkus `smallrye-graphql` extension ships with `GraphiQL` and enables it by default in `dev` and `test` modes,\n"
"but it can also be explicitly configured for `production` mode as well."
msgstr "Quarkus `smallrye-graphql` 扩展随 `GraphiQL` 一起提供，默认情况下在 `dev` 和 `test` 模式下启用，但也可明确配置为 `production` 模式。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "GraphiQL can be accessed from http://localhost:8080/q/graphql-ui/ ."
msgstr "可从 http://localhost:8080/q/graphql-ui/ 访问 GraphiQL。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "image:graphql-ui-screenshot01.png[alt=GraphQL UI]"
msgstr "image:graphql-ui-screenshot01.png[alt=\"GraphQL UI\"]"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Have a look at the link:security-authorization[Authorization of Web Endpoints] Guide on how to add/remove security for the GraphQL UI."
msgstr "请参阅《 link:security-authorization[Web 端点授权] 指南》，了解如何为 GraphQL UI 添加/删除安全性。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Query the GraphQL API"
msgstr "查询GraphQL API"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Now visit the GraphiQL page that has been deployed in `dev` mode."
msgstr "现在访问以 `dev` 模式部署的 GraphiQL 页面。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Enter the following query to GraphiQL and press the `play` button:"
msgstr "向 GraphiQL 输入以下查询，然后按 `play` 按钮："

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Since our query contains all the fields in the `Film` class\n"
"we will retrieve all the fields in our response. Since GraphQL API\n"
"responses are client determined, the client can choose which fields\n"
"it will require."
msgstr "由于我们的查询包含 `Film` 类中的所有字段，因此我们将在响应中检索所有字段。由于 GraphQL API 的响应由客户端决定，因此客户端可以选择需要哪些字段。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Let's assume that our client only requires `title` and `releaseDate`\n"
"making the previous call to the API `Over-fetching` of unnecessary\n"
"data."
msgstr "假设我们的客户只需要 `title` 和 `releaseDate` ，那么之前调用 API `Over-fetching` 时就会产生不必要的数据。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Enter the following query into GraphiQL and hit the `play` button:"
msgstr "在 GraphiQL 中输入以下查询，然后点击 `play` 按钮："

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Notice in the response we have only retrieved the required fields.\n"
"Therefore, we have prevented `Over-fetching`."
msgstr "请注意，我们只检索了响应中的必填字段。因此，我们防止了 `Over-fetching` 。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Let's continue to expand our GraphQL API by adding the following to the\n"
"`FilmResource` class."
msgstr "让我们在 `FilmResource` 类中添加以下内容，继续扩展我们的 GraphQL API。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Notice how we have excluded the value in the `@Query` annotation.\n"
"Therefore, the name of the query is implicitly set as the method name\n"
"excluding the `get`."
msgstr "请注意我们是如何排除 `@Query` 注释中的值的。因此，查询的名称被隐式设置为方法名称，不包括 `get` 。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"This query will allow the client to retrieve the film by id, and the `@Name` annotation on the parameter\n"
"changes the parameter name to `filmId` rather than the default `id` that it would be if you omit the `@Name` annotation."
msgstr "该查询允许客户端按 ID 检索影片，参数上的 `@Name` 注释会将参数名称改为 `filmId` ，而不是省略 `@Name` 注释后的默认名称 `id` 。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Enter the following into `GraphiQL` and make a request."
msgstr "在 `GraphiQL` 中输入以下内容并提出申请。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"The `film` query method requested fields can be determined\n"
"as such in our previous example. This way we can retrieve individual\n"
"film information."
msgstr "`film` 查询方法所要求的字段可以按照我们前面的例子来确定。这样，我们就可以检索到个别影片的信息。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"However, say our client requires both films with filmId `0` and `1`.\n"
"In a REST API the client would have to make two calls to the API.\n"
"Therefore, the client would be `Under-fetching`."
msgstr "但是，如果我们的客户需要两部影片，影片 ID 分别为 `0` 和 `1` 。在 REST API 中，客户必须对 API 进行两次调用。因此，客户端将 `Under-fetching` 。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "In GraphQL it is possible to make multiple queries at once."
msgstr "在 GraphQL 中，可以同时进行多个查询。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Enter the following into GraphiQL to retrieve two films:"
msgstr "在 GraphiQL 中输入以下内容，以检索两部影片："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "This enabled the client to fetch the required data in a single request."
msgstr "这使客户端能够在一次请求中获取所需的数据。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Expanding the API"
msgstr "扩大API的范围"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Until now, we have created a GraphQL API to retrieve film data.\n"
"We now want to enable the clients to retrieve the `Hero` data of the `Film`."
msgstr "到目前为止，我们已经创建了一个 GraphQL API 来检索电影数据。现在，我们希望让客户端能够检索 `Film` 的 `Hero` 数据。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Add the following to our `FilmResource` class:"
msgstr "在我们的 `FilmResource` 类中添加以下内容。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Enable `List<Hero>` data to be added to queries that respond with `Film`"
msgstr "启用 `List<Hero>` ，以便将数据添加到以下列方式回应的查询中： `Film` "

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"By adding this method we have effectively changed the schema of the GraphQL API.\n"
"Although the schema has changed the previous queries will still work.\n"
"Since we only expanded the API to be able to retrieve the `Hero` data of the `Film`."
msgstr "通过添加此方法，我们实际上改变了 GraphQL API 的模式。虽然模式发生了变化，但之前的查询仍然有效。因为我们只是扩展了 API，以便能够检索 `Film` 的 `Hero` 数据。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Enter the following into GraphiQL to retrieve the film and hero data."
msgstr "在 GraphiQL 中输入以下内容，以获取影片和主人公的数据。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "The response now includes the heroes of the film."
msgstr "现在的反应包括影片中的英雄们。"

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Batching"
msgstr "分流"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"When you are exposing a `Collection` return like our `getAllFilms`, you might want to use the batch form of the above, to more efficiently fetch\n"
"the heroes:"
msgstr "如果要公开 `Collection` 返回值（如我们的 `getAllFilms` ），可能需要使用上述的批处理形式，以便更有效地获取英雄："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Here receive the films as a batch, allowing you to fetch the corresponding heroes."
msgstr "这里以批处理的方式接收电影，让你取到相应的英雄。"

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Reactive"
msgstr "响应式"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, for example:"
msgstr "例如，通过使用 `Uni` , 或 `CompletionStage` 作为返回类型，可以使查询具有反应性："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Due to the underlying library, graphql-java, `Uni` is creating a `CompletionStage` under the hood."
msgstr "由于使用了底层库 graphql-java， `Uni` 正在引擎盖下创建一个 `CompletionStage` 。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Or you can use `CompletionStage`:"
msgstr "或者您也可以使用 `CompletionStage` ："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently."
msgstr "使用 `Uni` 或 `CompletionStage` 意味着，当一个请求包含多个查询时，它们将同时执行。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "For instance, the query below will fetch `film0` and `film1` concurrently:"
msgstr "例如，下面的查询将同时获取 `film0` 和 `film1` ："

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Mutations"
msgstr "突变"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Mutations are used when data is created, updated or deleted."
msgstr "当数据被创建、更新或删除时，会用到突变。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Let's now add the ability to add and delete heroes to our GraphQL API."
msgstr "现在让我们把添加和删除英雄的能力添加到我们的GraphQL API。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Enter the following into `GraphiQL` to insert a `Hero`:"
msgstr "在 `GraphiQL` 中输入以下内容，以插入 `Hero` ："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "By using this mutation we have created a `Hero` entity in our service."
msgstr "通过使用这种突变，我们在我们的服务中创建了一个 `Hero` 的实体。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Notice how in the response we have retrieved the `name` and `surname`\n"
"of the created Hero. This is because we selected to retrieve\n"
"these fields in the response within the `{ }` in the mutation query.\n"
"This can easily be a server side generated field that the client may require."
msgstr "请注意我们是如何在响应中检索到已创建 Hero 的 `name` 和 `surname` 的。这是因为我们在突变查询的 `{ }` 中选择了在响应中检索这些字段。这很容易成为客户端可能需要的服务器端生成字段。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Let's now try deleting an entry:"
msgstr "现在让我们试着删除一个条目。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Similar to the `createHero` mutation method we also retrieve the `name` and\n"
"`surname` of the hero we have deleted which is defined in `{ }`."
msgstr "与 `createHero` 突变方法类似，我们也会检索我们删除的英雄的 `name` 和 `surname` ，它们定义在 `{ }` 中。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Subscriptions"
msgstr "订阅"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Subscriptions allows you to subscribe to a query. It allows you to receive events."
msgstr "订阅允许您订阅查询。它允许您接收事件。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Subscription is currently still considered experimental."
msgstr "订阅目前仍被认为是试验性的。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Example: We want to know when new Heroes are being created:"
msgstr "例子。我们想知道什么时候有新的英雄被创建。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "The `Multi` processor that will broadcast any new Heros"
msgstr "`Multi` 处理器将广播任何新的 Heros"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "When adding a new Hero, also broadcast it"
msgstr "添加新英雄时，也要广播它"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Make the stream available in the schema and as a WebSocket during runtime"
msgstr "使流在模式中可用，并在运行时作为WebSocket使用"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Any client that now connect to the `/graphql` WebSocket connection will receive events on new Heroes being created:"
msgstr "现在连接到 `/graphql` WebSocket连接的任何客户端都将收到新英雄被创建的事件。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Creating Queries by fields"
msgstr "按字段创建查询"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Queries can also be done on individual fields. For example, let's\n"
"create a method to query heroes by their last name."
msgstr "也可以对单个字段进行查询。例如，让我们创建一个按姓氏查询英雄的方法。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"By using the `@DefaultValue` annotation we have determined that the surname value\n"
"will be `Skywalker` when the parameter is not provided."
msgstr "通过使用 `@DefaultValue` 注释，我们确定当没有提供参数时，姓氏值将是 `Skywalker` 。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Test the following queries with GraphiQL:"
msgstr "使用 GraphiQL 测试以下查询："

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Context"
msgstr "背景介绍"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "You can get information about the GraphQL request anywhere in your code, using this experimental, SmallRye specific feature:"
msgstr "你可以在你的代码中的任何地方获得关于GraphQL请求的信息，使用这个实验性的、SmallRye特有的功能。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "or as a parameter in your method if you are in the `GraphQLApi` class, for instance:"
msgstr "或在你的方法中作为一个参数，如果你在 `GraphQLApi` ，例如。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "The context object allows you to get:"
msgstr "上下文对象允许你获得。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "the original request (Query/Mutation)"
msgstr "原始请求（查询/变异）。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "the arguments"
msgstr "论点"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "the path"
msgstr "道路"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "the selected fields"
msgstr "选定的字段"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "any variables"
msgstr "任何变量"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "This allows you to optimize the downstream queries to the datastore."
msgstr "这允许你优化对数据存储的下游查询。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "See the https://javadoc.io/doc/io.smallrye/smallrye-graphql-api/latest/io/smallrye/graphql/api/Context.html[JavaDoc] for more details."
msgstr "更多细节请参见 link:https://javadoc.io/doc/io.smallrye/smallrye-graphql-api/latest/io/smallrye/graphql/api/Context.html[JavaDoc] 。"

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "GraphQL-Java"
msgstr "图形QL-Java"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "This context object also allows you to fall down to the underlying https://www.graphql-java.com/[graphql-java] features by using the leaky abstraction:"
msgstr "这个上下文对象也允许你通过使用泄漏的抽象来下降到底层的 link:https://www.graphql-java.com/[graphql-java] 特性。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "You can also get access to the underlying `graphql-java` during schema generation, to add your own features directly:"
msgstr "在模式生成过程中，你也可以获得对底层 `graphql-java` ，以直接添加你自己的功能。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "By using the `@Observer` you can add anything to the Schema builder."
msgstr "通过使用 `@Observer` ，你可以向模式构建器添加任何东西。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "For the Observer to work, you need to enable events. In `application.properties`, add the following: `quarkus.smallrye-graphql.events.enabled=true`."
msgstr "为了使观察者发挥作用，你需要启用事件。在 `application.properties` ，添加以下内容。 `quarkus.smallrye-graphql.events.enabled=true` ."

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Map to Scalar"
msgstr "标量地图"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"Another SmallRye specific experimental feature, allows you to map an existing scalar (that is mapped by the implementation to a certain Java type) to another type,\n"
"or to map complex object, that would typically create a `Type` or `Input` in GraphQL, to an existing scalar."
msgstr "SmallRye 的另一项特定实验功能允许您将现有标量（由实现映射到特定 Java 类型）映射到另一种类型，或将复杂对象（通常会在 GraphQL 中创建 `Type` 或 `Input` ）映射到现有标量。"

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Mapping an existing Scalar to another type:"
msgstr "将现有的标量映射到另一种类型："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "Above will map the `Long` java type to an `Int` Scalar type, rather than the https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html#scalars[default] `BigInteger`."
msgstr "以上将 `Long` java 类型映射为 `Int` Scalar 类型，而不是 link:https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html#scalars[默认的] `BigInteger` 。"

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Mapping a complex object to a Scalar type:"
msgstr "将复杂对象映射为标量类型："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "This will, rather than creating a `Type` or `Input` in GraphQL, map to a String scalar."
msgstr "这将，而不是在GraphQL中创建一个 `Type` 或 `Input` ，映射到一个String标量。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"To be able to do the above, the `Phone` object needs to have a constructor that takes a String (or `Int` / `Date` / etc.),\n"
"or have a setter method for the String  (or `Int` / `Date` / etc.),\n"
"or have a `fromString` (or `fromInt` / `fromDate` - depending on the Scalar type) static method."
msgstr "要实现上述功能， `Phone` 对象需要有一个接收字符串（或 `Int` / `Date` / 等）的构造函数，或有一个字符串（或 `Int` / `Date` / 等）的设置方法，或有一个 `fromString` （或 `fromInt` / `fromDate` - 取决于标量类型）静态方法。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "For example:"
msgstr "例如："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "See more about the `@ToScalar` feature in the https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.0.6/index.html?io/smallrye/graphql/api/ToScalar.html[JavaDoc]."
msgstr "有关 `@ToScalar` 功能的更多信息，请参阅 link:https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.0.6/index.html?io/smallrye/graphql/api/ToScalar.html[JavaDoc] 。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Error code"
msgstr "错误代码"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "You can add an error code on the error output in the GraphQL response by using the (SmallRye specific) `@ErrorCode`:"
msgstr "你可以通过使用（SmallRye专用） `@ErrorCode` ，在GraphQL响应中的错误输出上添加一个错误代码。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "When `SomeBusinessException` occurs, the error output will contain the Error code:"
msgstr "当 `SomeBusinessException` ，错误输出将包含错误代码。"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid "The error code"
msgstr "错误代码"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy, no-wrap
msgid "Additional Notes"
msgstr "补充说明"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"If you are using the `smallrye-graphql` extension and the `micrometer` metrics extension is present and metrics are\n"
"enabled, you may encounter a `java.lang.NoClassDefFoundError` as some versions of the `smallrye-graphql` extension\n"
"have runtime requirements on the Microprofile Metrics API.  Add the following MicroProfile Metrics API dependency\n"
"to resolve the issue:"
msgstr "如果正在使用 `smallrye-graphql` 扩展，并且存在 `micrometer` 度量扩展且已启用度量功能，则可能会遇到 `java.lang.NoClassDefFoundError` ，因为 `smallrye-graphql` 扩展的某些版本对微配置文件度量 API 有运行时要求。添加以下 MicroProfile Metrics API 依赖关系可解决该问题："

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Conclusion"
msgstr "解决方案"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"SmallRye GraphQL enables clients to retrieve the exact data that is\n"
"required preventing `Over-fetching` and `Under-fetching`."
msgstr "SmallRye GraphQL 使客户能够检索所需的准确数据，防止 `Over-fetching` 和 `Under-fetching` 。"

#: _versions/2.7/guides/smallrye-graphql.adoc
#, fuzzy
msgid ""
"The GraphQL API can be expanded without breaking previous queries enabling easy\n"
"API `evolution`."
msgstr "GraphQL API 可在不破坏先前查询的情况下进行扩展，从而轻松实现 API `evolution` 。"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"
