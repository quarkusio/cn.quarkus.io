# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "SmallRye GraphQL"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"This guide demonstrates how your Quarkus application can use https://github.com/smallrye/smallrye-graphql/[SmallRye GraphQL],\n"
"an implementation of the https://github.com/eclipse/microprofile-graphql/[MicroProfile GraphQL] specification."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "As the https://www.graphql.org/[GraphQL] specification website states:"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"GraphQL is a query language for APIs and a runtime for fulfilling those queries with your existing data.\n"
"GraphQL provides a complete and understandable description of the data in your API,\n"
"gives clients the power to ask for exactly what they need and nothing more, makes it easier to evolve APIs over time,\n"
"and enables powerful developer tools."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"**GraphQL** was originally developed by **Facebook** in 2012 and has been\n"
"an open standard since 2015."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"GraphQL is not a replacement for REST API specification but merely an\n"
"alternative. Unlike REST, GraphQL API's have the ability to benefit the client by:"
msgstr ""

#. type: Labeled list
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Preventing Over-fetching and Under-fetching"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"REST API's are server-driven fixed data responses that cannot be determined by\n"
"the client. Although the client does not require all the fields the client\n"
"must retrieve all the data hence `Over-fetching`. A client may also require\n"
"multiple REST API calls according to the first call (HATEOAS) to retrieve\n"
"all the data that is required thereby `Under-fetching`."
msgstr ""

#. type: Labeled list
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "API Evolution"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Since GraphQL API's returns data that are requested by the client adding additional\n"
"fields and capabilities to existing API will not create breaking changes to existing\n"
"clients."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"In this guide, we build a simple GraphQL application that exposes a GraphQL API\n"
"at `/graphql`."
msgstr ""

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This example was inspired by a popular GraphQL API."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "The solution is located in the `microprofile-graphql-quickstart` {quickstarts-tree-url}/microprofile-graphql-quickstart[directory]."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This command generates a project, importing the `smallrye-graphql` extension."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-graphql` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#. type: quote
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Preparing an Application: GraphQL API"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "In this section we will start creating the GraphQL API."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "First, create the following entities representing a film from a galaxy far far away:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "For readability we use classes with public fields, but classes with private fields with public getters and setters will also work."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"The classes we have just created describe the GraphQL schema which is a\n"
"set of possible data (objects, fields, relationships) that a client can access."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Let's continue with an example CDI bean, that would work as a repository:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Now, let's create our first GraphQL API."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Edit the `org.acme.microprofile.graphql.FilmResource` class as following:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "`@GraphQLApi` annotation indicates that the CDI bean will be a GraphQL endpoint"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "`@Query` annotation defines that this method will be queryable with the name `allFilms`"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Documentation of the queryable method"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"The value of the `@Query` annotation is optional and would implicitly\n"
"be defaulted to the method name if absent."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This way we have created our first queryable API which we will later expand."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Launch"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Launch the quarkus application in dev mode:"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Introspect"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "The full schema of the GraphQL API can be retrieved by calling the following:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "The server will return the complete schema of the GraphQL API."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "GraphiQL UI"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Experimental - not included in the MicroProfile specification"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "GraphiQL UI is a great tool permitting easy interaction with your GraphQL APIs."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"The Quarkus `smallrye-graphql` extension ships with `GraphiQL` and enables it by default in `dev` and `test` modes,\n"
"but it can also be explicitly configured for `production` mode as well."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "GraphiQL can be accessed from http://localhost:8080/q/graphql-ui/ ."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "image:graphql-ui-screenshot01.png[alt=GraphQL UI]"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Have a look at the link:security-authorization[Authorization of Web Endpoints] Guide on how to add/remove security for the GraphQL UI."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Query the GraphQL API"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Now visit the GraphiQL page that has been deployed in `dev` mode."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Enter the following query to GraphiQL and press the `play` button:"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Since our query contains all the fields in the `Film` class\n"
"we will retrieve all the fields in our response. Since GraphQL API\n"
"responses are client determined, the client can choose which fields\n"
"it will require."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Let's assume that our client only requires `title` and `releaseDate`\n"
"making the previous call to the API `Over-fetching` of unnecessary\n"
"data."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Enter the following query into GraphiQL and hit the `play` button:"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Notice in the response we have only retrieved the required fields.\n"
"Therefore, we have prevented `Over-fetching`."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Let's continue to expand our GraphQL API by adding the following to the\n"
"`FilmResource` class."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Notice how we have excluded the value in the `@Query` annotation.\n"
"Therefore, the name of the query is implicitly set as the method name\n"
"excluding the `get`."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"This query will allow the client to retrieve the film by id, and the `@Name` annotation on the parameter\n"
"changes the parameter name to `filmId` rather than the default `id` that it would be if you omit the `@Name` annotation."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Enter the following into `GraphiQL` and make a request."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"The `film` query method requested fields can be determined\n"
"as such in our previous example. This way we can retrieve individual\n"
"film information."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"However, say our client requires both films with filmId `0` and `1`.\n"
"In a REST API the client would have to make two calls to the API.\n"
"Therefore, the client would be `Under-fetching`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "In GraphQL it is possible to make multiple queries at once."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Enter the following into GraphiQL to retrieve two films:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This enabled the client to fetch the required data in a single request."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Expanding the API"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Until now, we have created a GraphQL API to retrieve film data.\n"
"We now want to enable the clients to retrieve the `Hero` data of the `Film`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Add the following to our `FilmResource` class:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Enable `List<Hero>` data to be added to queries that respond with `Film`"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"By adding this method we have effectively changed the schema of the GraphQL API.\n"
"Although the schema has changed the previous queries will still work.\n"
"Since we only expanded the API to be able to retrieve the `Hero` data of the `Film`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Enter the following into GraphiQL to retrieve the film and hero data."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "The response now includes the heroes of the film."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Batching"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"When you are exposing a `Collection` return like our `getAllFilms`, you might want to use the batch form of the above, to more efficiently fetch\n"
"the heroes:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Here receive the films as a batch, allowing you to fetch the corresponding heroes."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Reactive"
msgstr "响应式"

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, for example:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Due to the underlying library, graphql-java, `Uni` is creating a `CompletionStage` under the hood."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Or you can use `CompletionStage`:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "For instance, the query below will fetch `film0` and `film1` concurrently:"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Mutations"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Mutations are used when data is created, updated or deleted."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Let's now add the ability to add and delete heroes to our GraphQL API."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Enter the following into `GraphiQL` to insert a `Hero`:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "By using this mutation we have created a `Hero` entity in our service."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Notice how in the response we have retrieved the `name` and `surname`\n"
"of the created Hero. This is because we selected to retrieve\n"
"these fields in the response within the `{ }` in the mutation query.\n"
"This can easily be a server side generated field that the client may require."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Let's now try deleting an entry:"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Similar to the `createHero` mutation method we also retrieve the `name` and\n"
"`surname` of the hero we have deleted which is defined in `{ }`."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Subscriptions"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Subscriptions allows you to subscribe to a query. It allows you to receive events."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Subscription is currently still considered experimental."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Example: We want to know when new Heroes are being created:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "The `Multi` processor that will broadcast any new Heros"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "When adding a new Hero, also broadcast it"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Make the stream available in the schema and as a WebSocket during runtime"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Any client that now connect to the `/graphql` WebSocket connection will receive events on new Heroes being created:"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Creating Queries by fields"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Queries can also be done on individual fields. For example, let's\n"
"create a method to query heroes by their last name."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"By using the `@DefaultValue` annotation we have determined that the surname value\n"
"will be `Skywalker` when the parameter is not provided."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Test the following queries with GraphiQL:"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Context"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "You can get information about the GraphQL request anywhere in your code, using this experimental, SmallRye specific feature:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "or as a parameter in your method if you are in the `GraphQLApi` class, for instance:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "The context object allows you to get:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "the original request (Query/Mutation)"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "the arguments"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "the path"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "the selected fields"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "any variables"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This allows you to optimize the downstream queries to the datastore."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "See the https://javadoc.io/doc/io.smallrye/smallrye-graphql-api/latest/io/smallrye/graphql/api/Context.html[JavaDoc] for more details."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "GraphQL-Java"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This context object also allows you to fall down to the underlying https://www.graphql-java.com/[graphql-java] features by using the leaky abstraction:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "You can also get access to the underlying `graphql-java` during schema generation, to add your own features directly:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "By using the `@Observer` you can add anything to the Schema builder."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "For the Observer to work, you need to enable events. In `application.properties`, add the following: `quarkus.smallrye-graphql.events.enabled=true`."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Map to Scalar"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"Another SmallRye specific experimental feature, allows you to map an existing scalar (that is mapped by the implementation to a certain Java type) to another type,\n"
"or to map complex object, that would typically create a `Type` or `Input` in GraphQL, to an existing scalar."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Mapping an existing Scalar to another type:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "Above will map the `Long` java type to an `Int` Scalar type, rather than the https://download.eclipse.org/microprofile/microprofile-graphql-1.0/microprofile-graphql.html#scalars[default] `BigInteger`."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Mapping a complex object to a Scalar type:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "This will, rather than creating a `Type` or `Input` in GraphQL, map to a String scalar."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"To be able to do the above, the `Phone` object needs to have a constructor that takes a String (or `Int` / `Date` / etc.),\n"
"or have a setter method for the String  (or `Int` / `Date` / etc.),\n"
"or have a `fromString` (or `fromInt` / `fromDate` - depending on the Scalar type) static method."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "For example:"
msgstr "例如："

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "See more about the `@ToScalar` feature in the https://javadoc.io/static/io.smallrye/smallrye-graphql-api/1.0.6/index.html?io/smallrye/graphql/api/ToScalar.html[JavaDoc]."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Error code"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "You can add an error code on the error output in the GraphQL response by using the (SmallRye specific) `@ErrorCode`:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "When `SomeBusinessException` occurs, the error output will contain the Error code:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/smallrye-graphql.adoc
msgid "The error code"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Additional Notes"
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"If you are using the `smallrye-graphql` extension and the `micrometer` metrics extension is present and metrics are\n"
"enabled, you may encounter a `java.lang.NoClassDefFoundError` as some versions of the `smallrye-graphql` extension\n"
"have runtime requirements on the Microprofile Metrics API.  Add the following MicroProfile Metrics API dependency\n"
"to resolve the issue:"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Conclusion"
msgstr "解决方案"

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"SmallRye GraphQL enables clients to retrieve the exact data that is\n"
"required preventing `Over-fetching` and `Under-fetching`."
msgstr ""

#: _versions/2.7/guides/smallrye-graphql.adoc
msgid ""
"The GraphQL API can be expanded without breaking previous queries enabling easy\n"
"API `evolution`."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/smallrye-graphql.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"
