# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Using OAuth2 RBAC"
msgstr "使用OAuth2 RBAC"

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "This guide explains how your Quarkus application can utilize OAuth2 tokens to provide secured access to the JAX-RS endpoints."
msgstr "本指南解释了你的Quarkus应用程序如何利用OAuth2令牌来提供对JAX-RS端点的安全访问。"

#: _versions/2.7/guides/security-oauth2.adoc
msgid ""
"OAuth2 is an authorization framework that enables applications to obtain access to an HTTP resource on behalf of a user.\n"
"It can be used to implement an application authentication mechanism based on tokens by delegating to an external server (the authentication server) the user authentication and providing a token for the authentication context."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "This extension provides a light-weight support for using the opaque Bearer Tokens and validating them by calling an introspection endpoint."
msgstr ""

#: _versions/2.7/guides/security-oauth2.adoc
msgid ""
"If the OAuth2 Authentication server provides JWT Bearer Tokens then you should consider using either xref:security-openid-connect.adoc[OpenID Connect] or xref:security-jwt.adoc[SmallRye JWT] extensions instead.\n"
"OpenID Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow, please read xref:security-openid-connect-web-authentication.adoc[Using OpenID Connect to Protect Web Applications] guide for more information."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.7/guides/security-oauth2.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Clone the Git repository: git clone https://github.com/quarkusio/quarkus-quickstarts.git, or download an archive."
msgstr ""

#: _versions/2.7/guides/security-oauth2.adoc
msgid ""
"The solution is located in the `security-oauth2-quickstart` {quickstarts-tree-url}/security-oauth2-quickstart[directory].\n"
"It contains a very simple UI to use the JAX-RS resources created here, too."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "This command generates a project and imports the `elytron-security-oauth2` extension, which includes the OAuth2 opaque token support."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "If you don't want to use the Maven plugin, you can just include the dependency in your build file:"
msgstr ""

#. type: Block title
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Examine the JAX-RS resource"
msgstr "检查JAX-RS资源"

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Create the `src/main/java/org/acme/security/oauth2/TokenSecuredResource.java` file with the following content:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "This is a basic REST endpoint that does not have any of the {extension-name} specific features, so let's add some."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "We will use the JSR 250 common security annotations, they are described in the xref:security.adoc[Using Security] guide."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "`@PermitAll` indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Here we inject the JAX-RS `SecurityContext` to inspect the security state of the call."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Here we obtain the current request user/caller `Principal`. For an unsecured call this will be null, so we build the user name by checking `caller` against null."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Setting up application.properties"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "You need to configure your application with the following minimal properties:"
msgstr ""

#: _versions/2.7/guides/security-oauth2.adoc
msgid ""
"You need to specify the introspection URL of your authentication server and the `client-id` / `client-secret` that your application will use to authenticate itself to the authentication server. +\n"
"The extension will then use this information to validate the token and recover the information associate with it."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "For all configuration properties, see the <<config-reference,Configuration reference>> section at the end of this guide."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Run the application"
msgstr "运行应用程序"

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Now we are ready to run our application. Use:"
msgstr "现在我们准备运行我们的应用程序。使用："

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "现在，REST端点正在运行，我们可以使用curl这样的命令行工具来访问它："

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "We have not provided any token in our request, so we would not expect that there is any security state seen by the endpoint, and the response is consistent with that:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "user name is anonymous"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "`isSecure` is false as https is not used"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "`authScheme` is null"
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Securing the endpoint"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "所以，现在让我们真正让一些东西变得安全。看看下面的新端点方法 `helloRolesAllowed` ："

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "This new endpoint will be located at `/secured/roles-allowed`"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "`@RolesAllowed` indicates that the given endpoint is accessible by a caller if they have either a \"Echoer\" or \"Subscriber\" role assigned."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "After you make this addition to your `TokenSecuredResource`, try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint. Your output should be:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Excellent, we have not provided any OAuth2 token in the request, so we should not be able to access the endpoint, and we were not. Instead we received an HTTP 401 Unauthorized error. We need to obtain and pass in a valid OAuth2 token to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate the token, and 2) generating a matching token with the appropriate claims."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Generating a token"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "You need to obtain the token from a standard OAuth2 authentication server (https://www.keycloak.org/[Keycloak] for example) using the token endpoint."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "You can find below a curl example of such call for a `client_credential` flow:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "It should respond something like that..."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Finally, make a secured request to /secured/roles-allowed"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Now let's use this to make a secured request to the `/secured/roles-allowed` endpoint"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Success! We now have:"
msgstr "成功了!我们现在有："

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "a non-anonymous caller name of client_id"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "an authentication scheme of OAuth2"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Roles mapping"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Roles are mapped from one of the claims of the introspection endpoint response. By default, it's the `scope` claim. Roles are obtained by splitting the claim with a space separator. If the claim is an array, no splitting is done, the roles are obtained from the array."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "You can customize the name of the claim to use for the roles with the `quarkus.oauth2.role-claim` property."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "As usual, the application can be packaged using:"
msgstr "像往常一样，该应用程序能够使用以下方式进行打包:"

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`:"
msgstr "执行程序使用 `java -jar target/quarkus-app/quarkus-run.jar` ："

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "You can also generate the native executable with:"
msgstr "你也可以通过以下命令生成本地可执行文件:"

#. type: Title ==
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Integration testing"
msgstr ""

#: _versions/2.7/guides/security-oauth2.adoc
msgid ""
"If you don't want to use a real OAuth2 authorization server for your integration tests, you can use the\n"
"xref:security-properties.adoc[Properties based security] extension for your test, or mock an authorization server using Wiremock."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "First of all, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[here]."
msgstr ""

#: _versions/2.7/guides/security-oauth2.adoc
msgid ""
"In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource`\n"
"annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration\n"
"values that Quarkus will use."
msgstr ""

#: _versions/2.7/guides/security-oauth2.adoc
msgid "For more details about `@QuarkusTestResource` refer to  xref:getting-started-testing.adoc#quarkus-test-resource[this part of the documentation]."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `MockAuthorizationServerTestResource` like so:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Launch Wiremock."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Configure Wiremock to stub the calls to `/introspect` by returning an OAuth2 introspect response. You need to customize this line to return what's needed for your application (at least the scope property as roles are derived from the scope)."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "As the `start` method returns configuration that applies for tests, we set the `quarkus.oauth2.introspection-url` property that controls the URL of the introspect endpoint used by the OAuth2 extension."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "When all tests have finished, shutdown Wiremock."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Your test class needs to be annotated like with `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` to use this `QuarkusTestResourceLifecycleManager`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Below is an example of a test that uses the `MockAuthorizationServerTestResource`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Use the previously created `MockAuthorizationServerTestResource` as a Quarkus test resource."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Define whatever token you want, it will not be validated by the OAuth2 mock authorization server."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "Use this token inside the `Authorization` header to trigger OAuth2 authentication."
msgstr ""

#. type: delimited block =
#: _versions/2.7/guides/security-oauth2.adoc
msgid "`@QuarkusTestResource` applies to all tests, not just `TokenSecuredResourceTest`."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "https://tools.ietf.org/html/rfc6749[OAuth2]"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/security-oauth2.adoc
msgid "xref:security.adoc[Quarkus Security]"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/security-oauth2.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"
