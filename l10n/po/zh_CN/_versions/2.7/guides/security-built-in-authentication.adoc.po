# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, no-wrap
msgid "Built-In Authentication Support"
msgstr "内置的认证支持"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "This document describes the Quarkus built-in authentication mechanisms for HTTP based FORM, BASIC and Mutual TLS authentication as well as the proactive authentication."
msgstr "本文档介绍了 Quarkus 基于 HTTP 的 FORM、BASIC 和相互 TLS 身份验证以及主动身份验证的内置身份验证机制。"

#. type: Title ==
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy, no-wrap
msgid "Basic Authentication"
msgstr "基本认证"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"To enable basic authentication set `quarkus.http.auth.basic=true`. You must also have at least one extension installed\n"
"that provides a username/password based `IdentityProvider`, such as xref:security-jdbc.adoc[Elytron JDBC]."
msgstr "要启用基本身份验证，请设置 `quarkus.http.auth.basic=true` 。您还必须安装至少一个提供基于用户名/密码的扩展 `IdentityProvider` ，如 xref:security-jdbc.adoc[Elytron JDBC] 。"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "Please see xref:security.adoc#identity-providers[Security Identity Providers] for more information."
msgstr "更多信息，请参阅 xref:security.adoc#identity-providers[安全身份供应商] 。"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "Please also see xref:security-testing.adoc#configuring-user-information[Configuring User Information in application.properties] section."
msgstr "另请参阅 xref:security-testing.adoc#configuring-user-information[在 application.properties] 部分 xref:security-testing.adoc#configuring-user-information[配置用户信息] 。"

#. type: Title ==
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy, no-wrap
msgid "Form Based Authentication"
msgstr "基于表单的身份验证"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"Quarkus provides form based authentication that works in a similar manner to traditional Servlet form based auth. Unlike\n"
"traditional form authentication, the authenticated user is not stored in an HTTP session, as Quarkus does not provide\n"
"clustered HTTP session support. Instead the authentication information is stored in an encrypted cookie, which can\n"
"be read by all members of the cluster (provided they all share the same encryption key)."
msgstr "Quarkus 提供基于表单的身份验证，其工作方式与传统 Servlet 基于表单的身份验证类似。与传统的表单认证不同的是，由于 Quarkus 不提供集群 HTTP 会话支持，因此认证用户不会存储在 HTTP 会话中。相反，认证信息存储在加密的 cookie 中，集群中的所有成员都可以读取（前提是他们共享相同的加密密钥）。"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"The encryption key can be set using the `quarkus.http.auth.session.encryption-key` property, and it must be at least 16 characters\n"
"long. This key is hashed using SHA-256 and the resulting digest is used as a key for AES-256 encryption of the cookie\n"
"value. This cookie contains an expiry time as part of the encrypted value, so all nodes in the cluster must have their\n"
"clocks synchronized. At one minute intervals a new cookie will be generated with an updated expiry time if the session\n"
"is in use."
msgstr "加密密钥可使用 `quarkus.http.auth.session.encryption-key` 属性设置，长度至少为 16 个字符。该密钥使用 SHA-256 进行散列，得到的摘要将用作对 cookie 值进行 AES-256 加密的密钥。Cookie 含有过期时间，作为加密值的一部分，因此集群中的所有节点都必须同步时钟。如果会话正在使用，每隔一分钟就会生成一个新的 Cookie，并更新有效时间。"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "The following properties can be used to configure form based auth:"
msgstr "以下属性可用于配置基于表单的验证："

#. type: Title ==
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy, no-wrap
msgid "Mutual TLS Authentication"
msgstr "相互 TLS 验证"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "Quarkus provides mTLS authentication so that you can authenticate users based on their X.509 certificates."
msgstr "Quarkus 提供 mTLS 身份验证，这样就可以根据用户的 X.509 证书对其进行身份验证。"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "To use this authentication method, you should first enable SSL for your application. For more details, check the xref:http-reference.adoc#ssl[Supporting secure connections with SSL] guide."
msgstr "要使用这种身份验证方法，首先要为应用程序启用 SSL。如需了解更多详情，请查阅《 xref:http-reference.adoc#ssl[使用 SSL 支持安全连接] 》指南。"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"Once your application is accepting secure connections, the next step is to configure a `quarkus.http.ssl.certificate.trust-store-file`\n"
"holding all the certificates that your application should trust as well as how your application should ask for certificates when\n"
"a client (e.g.: browser or another service) tries to access one of its protected resources."
msgstr "应用程序接受安全连接后，下一步就是配置 `quarkus.http.ssl.certificate.trust-store-file` ，其中包含应用程序应信任的所有证书，以及当客户端（如浏览器或其他服务）试图访问其受保护资源时，应用程序应如何请求证书。"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "Configures a key store where the server's private key is located."
msgstr "配置服务器私钥所在的密钥存储区。"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "Configures a trust store from where the trusted certificates are going to be loaded from."
msgstr "配置信任存储，从该存储加载受信任的证书。"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"Defines that the server should *always* ask certificates from clients. You can relax this behavior by using `REQUEST` so\n"
"that the server should still accept requests without a certificate. Useful when you are also supporting authentication methods other than\n"
"mTLS."
msgstr "定义服务器应 *始终* 要求客户端提供证书。你可以使用 `REQUEST` 来放宽这一行为，这样服务器仍会接受没有证书的请求。在支持除 mTLS 之外的其他身份验证方法时，这种方法很有用。"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "Defines a policy where only authenticated users should have access to resources from your application."
msgstr "定义了一个策略，只有经过认证的用户才能访问你的应用程序的资源。"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"Once the incoming request matches a valid certificate in the truststore, your application should be able to obtain the subject by\n"
"just injecting a `SecurityIdentity` as follows:"
msgstr "一旦传入的请求与信任库中的有效证书相匹配，应用程序就可以通过注入 `SecurityIdentity` 获取主题，如下所示："

#. type: Block title
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy, no-wrap
msgid "Obtaining the subject"
msgstr "获得主题"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "You should also be able to get the certificate as follows:"
msgstr "您还可以通过以下方式获得证书："

#. type: Block title
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy, no-wrap
msgid "Obtaining the certificate"
msgstr "获得证书"

#. type: Title ===
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, no-wrap
msgid "Authorization"
msgstr "授权"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"The information from the client certificate can be used to enhance Quarkus `SecurityIdentity`. For example, one can add new roles after checking a client certificate subject name, etc.\n"
"Please see the xref:security-customization.adoc#security-identity-customization[SecurityIdentity Customization] section for more information about customizing Quarkus `SecurityIdentity`."
msgstr "来自客户证书的信息可用于增强 Quarkus `SecurityIdentity` 的功能。例如，可以在检查客户证书主题名称后添加新角色等。有关定制 Quarkus `SecurityIdentity` 的更多信息，请参阅 xref:security-customization.adoc#security-identity-customization[SecurityIdentity Customization] 部分。"

#. type: Title ==
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, no-wrap
msgid "Proactive Authentication"
msgstr "主动认证"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"By default Quarkus does what we call proactive authentication. This means that if an incoming request has a\n"
"credential then that request will always be authenticated (even if the target page does not require authentication)."
msgstr "默认情况下，Quarkus 会进行所谓的主动验证。这意味着，如果传入的请求带有证书，那么该请求将始终通过身份验证（即使目标页面不需要身份验证）。"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"This means that requests with an invalid credential will always be rejected, even for public pages. You can change\n"
"this behavior and only authenticate when required by setting `quarkus.http.auth.proactive=false`."
msgstr "这意味着，即使是公共页面，也会拒绝无效凭据的请求。您可以通过设置 `quarkus.http.auth.proactive=false` 来改变这种行为，只在需要时才进行身份验证。"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"If you disable proactive authentication then the authentication process will only be run when an identity is requested,\n"
"either because there are security rules that requires the user to be authenticated, or due to programmatic access to the\n"
"current identity."
msgstr "如果禁用主动身份验证，那么只有在请求身份时才会运行身份验证过程，这可能是因为有安全规则要求用户必须通过身份验证，也可能是因为对当前身份的编程访问。"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"Note that if proactive authentication is in use accessing the `SecurityIdentity` is a blocking operation. This is because\n"
"authentication may not have happened yet, and accessing it may require calls to external systems such as databases that\n"
"may block. For blocking applications this is no problem, however if you are have disabled authentication in a reactive\n"
"application this will fail (as you cannot do blocking operations on the IO thread). To work around this you need to\n"
"`@Inject` an instance of `io.quarkus.security.identity.CurrentIdentityAssociation`, and call the\n"
"`Uni<SecurityIdentity> getDeferredIdentity();` method. You can then subscribe to the resulting `Uni` and will be notified\n"
"when authentication is complete and the identity is available."
msgstr "请注意，如果使用的是主动身份验证，访问 `SecurityIdentity` 将是一个阻塞操作。这是因为身份验证可能尚未进行，访问它可能需要调用外部系统（如数据库），这可能会阻塞。对于阻塞型应用程序来说，这不是问题，但如果在反应型应用程序中禁用了身份验证，则会出现故障（因为无法在 IO 线程上执行阻塞操作）。要解决这个问题，您需要 `@Inject` `io.quarkus.security.identity.CurrentIdentityAssociation` 的一个实例，并调用 `Uni<SecurityIdentity> getDeferredIdentity();` 方法。然后，您可以订阅由此产生的 `Uni` ，并在身份验证完成且身份可用时收到通知。"

#. type: Title ===
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy, no-wrap
msgid "How to customize authentication exception responses"
msgstr "如何自定义身份验证异常响应"

#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid ""
"By default the authentication security constraints are enforced before the JAX-RS chain starts.\n"
"Disabling the proactive authentication effectively shifts this process to the moment when the JAX-RS chain starts running thus making it possible to use JAX-RS `ExceptionMapper` to capture Quarkus Security authentication exceptions such as `io.quarkus.security.AuthenticationFailedException`, for example:"
msgstr "默认情况下，身份验证安全限制是在 JAX-RS 链启动之前执行的。禁用主动身份验证可以有效地将这一过程转移到 JAX-RS 链开始运行的时刻，从而可以使用 JAX-RS `ExceptionMapper` 捕获 Quarkus Security 身份验证异常，例如 `io.quarkus.security.AuthenticationFailedException` ："

#. type: Title ==
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/2.7/guides/security-built-in-authentication.adoc
#, fuzzy
msgid "xref:security.adoc[Quarkus Security]"
msgstr "xref:security.adoc[夸克安全]"
