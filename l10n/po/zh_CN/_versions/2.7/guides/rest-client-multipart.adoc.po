# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:6
#, no-wrap
msgid "Using the REST Client with Multipart"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:11
msgid "RESTEasy has rich support for the `multipart/*` and `multipart/form-data` mime types. The multipart mime format is used to pass lists of content bodies. Multiple content bodies are embedded in one message. `multipart/form-data` is often found in web application HTML Form documents and is generally used to upload files. The form-data format is the same as other multipart formats, except that each inlined piece of content has a name associated with it."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:15
msgid "This guide explains how to use the RESTEasy REST Client with Multipart in order to interact with REST APIs requiring `multipart/form-data` content-type with very little effort."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:16
#, no-wrap
msgid "Prerequisites"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:20
#, no-wrap
msgid "Solution"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:24
msgid "We recommend that you follow the instructions in the next sections and create the application step by step.  However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:26
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:28
msgid "The solution is located in the `rest-client-multipart-quickstart` {quickstarts-tree-url}/rest-client-multipart-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:29
#, no-wrap
msgid "Creating the Maven project"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:32
msgid "First, we need a new project. Create a new project with the following command:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:41
msgid "This command generates the Maven project with a REST endpoint and imports the `rest-client` and `resteasy` extensions.  It also adds the `resteasy-multipart` extension to support `multipart/form-data` requests."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:42
#, no-wrap
msgid "Setting up the model"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:46
msgid "In this guide we will be demonstrating how to invoke a REST service accepting `multipart/form-data` input.  We are assuming the payload is well-known before the request is sent, so we can model as a POJO."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:50
msgid "If the payload is unknown, you can also use the RESTEasy custom API instead. If that's the case, see the RESTEasy Multipart Providers link at the end of the guide."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:53
msgid "Our first order of business is to setup the model we will be using to define the `multipart/form-data` payload, in the form of a `MultipartBody` POJO."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:55
msgid "Create a `src/main/java/org/acme/rest/client/multipart/MultipartBody.java` file and set the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:59
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:91
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:157
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:229
#, no-wrap
msgid "package org.acme.rest.client.multipart;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:61
#, no-wrap
msgid "import java.io.InputStream;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:64
#, no-wrap
msgid ""
"import javax.ws.rs.FormParam;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:66
#, no-wrap
msgid "import org.jboss.resteasy.annotations.providers.multipart.PartType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:68
#, no-wrap
msgid "public class MultipartBody {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:72
#, no-wrap
msgid ""
"    @FormParam(\"file\")\n"
"    @PartType(MediaType.APPLICATION_OCTET_STREAM)\n"
"    public InputStream file;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:77
#, no-wrap
msgid ""
"    @FormParam(\"fileName\")\n"
"    @PartType(MediaType.TEXT_PLAIN)\n"
"    public String fileName;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:80
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:119
msgid "The purpose of the annotations in the code above is the following:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:82
msgid "`@FormParam` is a standard JAX-RS annotation used to define a form parameter contained within a request entity body"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:83
msgid "`@PartType` is a RESTEasy specific annotation required when a client performs a multipart request and defines the content type for the part."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:84
#, no-wrap
msgid "Create the interface"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:87
msgid "Using the RESTEasy REST Client is as simple as creating an interface using the proper JAX-RS and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/multipart/MultipartService.java` and have the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:97
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:206
#, no-wrap
msgid ""
"import javax.ws.rs.Consumes;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:100
#, no-wrap
msgid ""
"import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;\n"
"import org.jboss.resteasy.annotations.providers.multipart.MultipartForm;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:104
#, no-wrap
msgid ""
"@Path(\"/echo\")\n"
"@RegisterRestClient\n"
"public interface MultipartService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:109
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.MULTIPART_FORM_DATA)\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    String sendMultipartData(@MultipartForm MultipartBody data);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:111
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:252
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:115
msgid "The `sendMultipartData` method gives our code the ability to POST a `multipart/form-data` request to our Echo service (running in the same server for demo purposes).  Because in this demo we have the exact knowledge of the `multipart/form-data` packets, we can map them to the model class created in the previous section using the `@org.jboss.resteasy.annotations.providers.multipart.MultipartForm` annotation."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:117
msgid "The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:122
msgid "`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for CDI injection as a REST Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:123
msgid "`@Path`, `@GET` and `@PathParam` are the standard JAX-RS annotations used to define how to access the service"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:124
msgid "`@MultipartForm` defines the parameter as a value object for incoming/outgoing request/responses of the multipart/form-data mime type."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:125
msgid "`@Consumes` defines the expected content-type consumed by this request (parameters)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:126
msgid "`@Produces` defines the expected content-type produced by this request (return type)"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:131
msgid "While `@Consumes` and `@Produces` are optional as auto-negotiation is supported, it is heavily recommended to annotate your endpoints with them to define precisely the expected content-types."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:133
msgid "It will allow to narrow down the number of JAX-RS providers (which can be seen as converters) included in the native executable."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:135
#, no-wrap
msgid "Create the configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:139
msgid "In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.  The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:144
#, no-wrap
msgid ""
"# Your configuration properties\n"
"quarkus.rest-client.\"org.acme.rest.client.multipart.MultipartService\".url=http://localhost:8080/\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:147
msgid "Having this configuration means that all requests performed using `org.acme.rest.client.multipart.MultipartService` will use `http://localhost:8080/ ` as the base URL."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:149
msgid "Note that `org.acme.rest.client.multipart.MultipartService` _must_ match the fully qualified name of the `MultipartService` interface we created in the previous section."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:150
#, no-wrap
msgid "Create the JAX-RS resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:153
msgid "Create the `src/main/java/org/acme/rest/client/multipart/MultipartClientResource.java` file with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:160
#, no-wrap
msgid ""
"import java.io.ByteArrayInputStream;\n"
"import java.nio.charset.StandardCharsets;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:166
#, no-wrap
msgid ""
"import javax.inject.Inject;\n"
"import javax.ws.rs.POST;\n"
"import javax.ws.rs.Path;\n"
"import javax.ws.rs.Produces;\n"
"import javax.ws.rs.core.MediaType;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:168
#, no-wrap
msgid "import org.eclipse.microprofile.rest.client.inject.RestClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:171
#, no-wrap
msgid ""
"@Path(\"/client\")\n"
"public class MultipartClientResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:175
#, no-wrap
msgid ""
"    @Inject\n"
"    @RestClient\n"
"    MultipartService service;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:186
#, no-wrap
msgid ""
"    @POST\n"
"    @Path(\"/multipart\")\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String sendFile() throws Exception {\n"
"        MultipartBody body = new MultipartBody();\n"
"        body.fileName = \"greeting.txt\";\n"
"        body.file = new ByteArrayInputStream(\"HELLO WORLD\".getBytes(StandardCharsets.UTF_8));\n"
"        return service.sendMultipartData(body);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:189
msgid "Note that in addition to the standard CDI `@Inject` annotation, we also need to use the MicroProfile `@RestClient` annotation to inject `MultipartService`."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:191
#, no-wrap
msgid "Creating the server"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:194
msgid "For demo purposes, let's create a simple Echo endpoint that will act as the server part."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:196
msgid "Create the directory `src/main/java/org/acme/rest/client/multipart/server` and include a `EchoService.java` file with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:200
#, no-wrap
msgid "package org.acme.rest.client.multipart.server;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:209
#, no-wrap
msgid ""
"@Path(\"/echo\")\n"
"public class EchoService {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:217
#, no-wrap
msgid ""
"    @POST\n"
"    @Consumes(MediaType.MULTIPART_FORM_DATA)\n"
"    @Produces(MediaType.TEXT_PLAIN)\n"
"    public String echo(String requestBody) throws Exception {\n"
"        return requestBody;\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:220
msgid "This will just return the request body and it's useful for testing purposes."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:221
#, no-wrap
msgid "Update the test"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:225
msgid "We also need to update the functional test to reflect the changes made to the endpoint.  Edit the `src/test/java/org/acme/rest/client/multipart/MultipartClientResourceTest.java` file to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:232
#, no-wrap
msgid ""
"import io.quarkus.test.junit.QuarkusTest;\n"
"import org.junit.jupiter.api.Test;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:235
#, no-wrap
msgid ""
"import static io.restassured.RestAssured.given;\n"
"import static org.hamcrest.CoreMatchers.containsString;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:238
#, no-wrap
msgid ""
"@QuarkusTest\n"
"public class MultipartClientResourceTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:250
#, no-wrap
msgid ""
"    @Test\n"
"    public void testMultipartDataIsSent() {\n"
"        given()\n"
"                .when().post(\"/client/multipart\")\n"
"                .then()\n"
"                .statusCode(200)\n"
"                .body( containsString(\"Content-Disposition: form-data; name=\\\"file\\\"\"),\n"
"                        containsString(\"HELLO WORLD\"),\n"
"                        containsString(\"Content-Disposition: form-data; name=\\\"fileName\\\"\"),\n"
"                        containsString(\"greeting.txt\"));\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:255
msgid "The code above uses link:http://rest-assured.io/[REST Assured] to assert that the returned content from the echo service contains multipart elements"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:257
msgid "Because the test runs in a different port, we also need to include an `application.properties` in our `src/test/resources` with the following content:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:262
#, no-wrap
msgid ""
"# Your configuration properties\n"
"quarkus.rest-client.\"org.acme.rest.client.multipart.MultipartService\".url=http://localhost:8081/\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:264
#, no-wrap
msgid "Package and run the application"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:267
msgid "Run the application with:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:271
msgid "In a terminal, run `curl -X POST http://localhost:8080/client/multipart`"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:273
msgid "You should see an output similar to:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:279
#, no-wrap
msgid ""
"--89d288bd-960f-460c-b266-64c5b4d170fa\n"
"Content-Disposition: form-data; name=\"fileName\"\n"
"Content-Type: text/plain\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:284
#, no-wrap
msgid ""
"greeting.txt\n"
"--89d288bd-960f-460c-b266-64c5b4d170fa\n"
"Content-Disposition: form-data; name=\"file\"\n"
"Content-Type: application/octet-stream\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:287
#, no-wrap
msgid ""
"HELLO WORLD\n"
"--89d288bd-960f-460c-b266-64c5b4d170fa--\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:290
msgid "As usual, the application can be packaged using:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:294
msgid "And executed with `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:296
msgid "You can also generate the native executable with:"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:299
#, no-wrap
msgid "Further reading"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:302
msgid "link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/rest-client-multipart.adoc:302
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-1.4.1/microprofile-rest-client-1.4.1.html[MicroProfile Rest Client specification]"
msgstr ""
