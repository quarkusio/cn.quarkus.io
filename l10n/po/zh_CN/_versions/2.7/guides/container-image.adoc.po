# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/container-image.adoc:6
#, no-wrap
msgid "Container Images"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:11
msgid "Quarkus provides extensions for building (and pushing) container images. Currently it supports:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:13
msgid "<<#jib,Jib>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:14
msgid "<<#docker,Docker>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:15
msgid "<<#s2i,S2I>>"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:16
msgid "<<#buildpack,Buildpack>>"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/container-image.adoc:17
#, no-wrap
msgid "Container Image extensions"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/container-image.adoc:20
#, no-wrap
msgid "Jib"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:26
msgid "The extension `quarkus-container-image-jib` is powered by https://github.com/GoogleContainerTools/jib[Jib] for performing container image builds.  The major benefit of using Jib with Quarkus is that all the dependencies (everything found under `target/lib`) are cached in a different layer than the actual application making rebuilds really fast and small (when it comes to pushing).  Another important benefit of using this extension is that it provides the ability to create a container image without having to have any dedicated client side tooling (like Docker) or running daemon processes (like the Docker daemon)  when all that is needed is the ability to push to a container image registry."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:28
msgid "To use this feature, add the following extension to your project:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:35
msgid "In situations where all that is needed to build a container image and no push to a registry is necessary (essentially by having set `quarkus.container-image.build=true` and left `quarkus.container-image.push` unset - it defaults to `false`), then this extension creates a container image and registers it with the Docker daemon. This means that although Docker isn't used to build the image, it is nevertheless necessary. Also note that using this mode, the built container image *will* show up when executing `docker images`."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.7/guides/container-image.adoc:36
#, no-wrap
msgid "Including extra files"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:42
msgid "There are cases when additional files (other than ones produced by the Quarkus build) need to be added to a container image.  To support these cases, Quarkus copies any file under `src/main/jib` into the built container image (which is essentially the same idea that the Jib Maven and Gradle plugins support).  For example, the presence of `src/main/jib/foo/bar` would result in `/foo/bar` being added into the container filesystem."
msgstr ""

#. type: Title ====
#: upstream/_versions/2.7/guides/container-image.adoc:43
#, no-wrap
msgid "JVM Debugging"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:46
msgid "There are cases where the built container image may need to have Java debugging conditionally enabled at runtime."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:49
msgid "When the base image has not been changed (and therefore `ubi8/openjdk-11-runtime` or `ubi8/openjdk-17-runtime` is used), then the `quarkus.jib.jvm-arguments` configuration property can be used in order to make the JVM listen on the debug port at startup."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:51
msgid "The exact configuration is:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/container-image.adoc:55
#, no-wrap
msgid "quarkus.jib.jvm-arguments=-agentlib:jdwp=transport=dt_socket\\\\,server=y\\\\,suspend=n\\\\,address=*:5005\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:58
msgid "Other base images might provide launch scripts that enable debugging when an environment variable is set, in which case you would set than environment variable when launching the container."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:60
msgid "Finally, the `quarkus.jib.jvm-entrypoint` configuration property can be used to completely override the container entry point and can thus be used to either hard code the JVM debug configuration or point to a script that handles the details."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/container-image.adoc:62
#, no-wrap
msgid "Docker"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:65
msgid "The extension `quarkus-container-image-docker` is using the Docker binary and the generated Dockerfiles under `src/main/docker` in order to perform Docker builds."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:67
#: upstream/_versions/2.7/guides/container-image.adoc:80
#: upstream/_versions/2.7/guides/container-image.adoc:110
msgid "To use this feature, add the following extension to your project."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/container-image.adoc:72
#, no-wrap
msgid "S2I"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:76
msgid "The extension `quarkus-container-image-s2i` is using S2I binary builds in order to perform container builds inside the OpenShift cluster.  The idea behind the binary build is that you just upload the artifact and its dependencies to the cluster and during the build they will be merged to a builder image (defaults to `fabric8/s2i-java`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:78
msgid "The benefit of this approach, is that it can be combined with OpenShift's `DeploymentConfig` that makes it easy to roll out changes to the cluster."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:86
msgid "S2I builds require creating a `BuildConfig` and two `ImageStream` resources, one for the builder image and one for the output image.  The creation of such objects is being taken care of by the Quarkus Kubernetes extension."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/container-image.adoc:89
#, no-wrap
msgid "Buildpack"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:94
msgid "The extension `quarkus-container-image-buildpack` is using buildpacks in order to perform container image builds.  Under the hood buildpacks will use a Docker daemon for the actual build.  While buildpacks support alternatives to Docker, this extension will only work with Docker."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:96
msgid "Additionally, the user will have to configure which build image to use (no default image is provided). For example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/container-image.adoc:100
#, no-wrap
msgid "quarkus.buildpack.jvm-builder-image=<jvm builder image>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:103
msgid "or for native:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/container-image.adoc:107
#, no-wrap
msgid "quarkus.buildpack.native-builder-image=<native builder image>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:115
msgid "When using the buildpack container image extension it is strongly advised to avoid adding `quarkus.container-image.build=true` in your properties configuration as it might trigger nesting builds within builds. It's preferable to pass it as an option to the build command instead."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/container-image.adoc:116
#, no-wrap
msgid "Building"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:119
msgid "To build a container image for your project, `quarkus.container-image.build=true` needs to be set using any of the ways that Quarkus supports."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:125
msgid "If you ever want to build a native container image and already have an existing native image you can set `-Dquarkus.native.reuse-existing=true` and the native image build will not be re-run."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/container-image.adoc:126
#, no-wrap
msgid "Pushing"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:129
msgid "To push a container image for your project, `quarkus.container-image.push=true` needs to be set using any of the ways that Quarkus supports."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:135
msgid "If no registry is set (using `quarkus.container-image.registry`) then `docker.io` will be used as the default."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/container-image.adoc:136
#, no-wrap
msgid "Selecting among multiple extensions"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:139
msgid "It does not make sense to use multiple extension as part of the same build. When multiple container image extensions are present, an error will be raised to inform the user. The user can either remove the unneeded extensions or select one using `application.properties`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:141
msgid "For example, if both `container-image-docker` and `container-image-s2i` are present and the user needs to use `container-image-docker`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/container-image.adoc:145
#, no-wrap
msgid "quarkus.container-image.builder=docker\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/container-image.adoc:147
#, no-wrap
msgid "Customizing"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:150
msgid "The following properties can be used to customize the container image build process."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/container-image.adoc:151
#, no-wrap
msgid "Container Image Options"
msgstr ""

#. type: Title ====
#: upstream/_versions/2.7/guides/container-image.adoc:155
#, no-wrap
msgid "Using CI Environments"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:159
msgid "Various CI environments provide a ready to use container-image registry which can be combined with the container-image Quarkus extensions in order to effortlessly create and push a Quarkus application to said registry."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:163
msgid "For example, https://gitlab.com/[GitLab] provides such a registry and in the provided CI environment, makes available the `CI_REGISTRY_IMAGE` environment variable (see GitLab's https://docs.gitlab.com/ee/ci/variables/[documentation]) for more information), which can be used in Quarkus like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/container-image.adoc:167
#, no-wrap
msgid "quarkus.container-image.image=${CI_REGISTRY_IMAGE}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:170
msgid "See xref:config.adoc#combine-property-env-var[this] for more information on how to combine properties with environment variables."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/container-image.adoc:171
#, no-wrap
msgid "Jib Options"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:174
msgid "In addition to the generic container image options, the `container-image-jib` also provides the following options:"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/container-image.adoc:177
#, no-wrap
msgid "Docker Options"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:180
msgid "In addition to the generic container image options, the `container-image-docker` also provides the following options:"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/container-image.adoc:183
#, no-wrap
msgid "S2I  Options"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/container-image.adoc:186
msgid "In addition to the generic container image options, the `container-image-s2i` also provides the following options:"
msgstr ""
