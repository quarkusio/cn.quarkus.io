# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "Scripting with Quarkus"
msgstr "用Quarkus编写脚本"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Quarkus provides integration with https://jbang.dev[jbang] which allows you to write Java scripts/applications requiring no Maven nor Gradle to get running."
msgstr "Quarkus提供了与 link:https://jbang.dev[jbang] 的集成，使你可以编写不需要Maven或Gradle就能运行的Java脚本/应用程序。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "In this guide, we will see how you can write a REST application using just a single Java file."
msgstr "在本指南中，我们将看到你如何只用一个Java文件就能写出一个REST应用程序。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "https://jbang.dev/download[JBang]"
msgstr "link:https://jbang.dev/download[姜文]"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Normally we would link to a Git repository to clone but in this case there is no additional files than the following:"
msgstr "通常我们会链接到一个Git仓库来克隆，但在这种情况下，除了下面的文件，没有其他的文件。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "In this guide, we create a straightforward application serving a `hello` endpoint with a single source file, no additional build files like `pom.xml` or `build.gradle` needed. To demonstrate dependency injection, this endpoint uses a `greeting` bean."
msgstr "在本指南中，我们创建了一个直接的应用程序，为一个 `hello` 端点提供服务，只需一个源文件，不需要额外的构建文件，如 `pom.xml` 或 `build.gradle` 。为了演示依赖性注入，这个端点使用了一个 `greeting` bean。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "Creating the initial file"
msgstr "创建初始文件"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "First, we need a Java file. JBang lets you create an initial version using:"
msgstr "首先，我们需要一个Java文件。JBang让你用以下方法创建一个初始版本。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "This command generates a .java file that you can directly run on Linux and macOS, i.e. `./quarkusapp.java` - on Windows you need to use `jbang quarkusapp.java`."
msgstr "这个命令生成了一个.java文件，你可以直接在Linux和macOS上运行，即 `./quarkusapp.java` - 在Windows上你需要使用 `jbang quarkusapp.java` 。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "This initial version will print `Hello World` when run."
msgstr "这个初始版本在运行时将打印 `Hello World` 。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Once generated, look at the `quarkusapp.java` file."
msgstr "一旦生成，看一下 `quarkusapp.java` 文件。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "You will find at the top a line looking like this:"
msgstr "你会发现在顶部有一行看起来像这样。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "This line is what on Linux and macOS allows you to run it as a script. On Windows this line is ignored."
msgstr "这一行在Linux和macOS上允许你作为一个脚本运行。在Windows上，这一行被忽略。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "The next line"
msgstr "下一行"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Is illustrating how you add dependencies to this script. This is a feature of JBang."
msgstr "说明了如何为该脚本添加依赖项。这是 JBang 的一项功能。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Go ahead and update this line to include the `quarkus-resteasy` dependency like so:"
msgstr "继续更新此行，加入 `quarkus-resteasy` 依赖关系，就像这样："

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Now, run `jbang quarkusapp.java` and you will see JBang resolving this dependency and building the jar with help from Quarkus' JBang integration."
msgstr "现在，运行 `jbang quarkusapp.java` ，你会看到JBang在Quarkus的JBang集成的帮助下解决了这个依赖关系并构建了jar。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "For now the application does nothing new."
msgstr "目前，该应用程序没有做任何新的事情。"

#. type: Block title
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "How do I edit this file and get content assist?"
msgstr "我如何编辑这个文件并获得内容协助？"

#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid ""
"As there is nothing but a `.java` file, most IDE's don't handle content assist well.\n"
"To work around that you can run `jbang edit quarkusapp.java`, this will print out a directory that will have a temporary project setup you can use in your IDE."
msgstr "由于只有一个 `.java` 文件，大多数集成开发环境都无法很好地处理内容辅助。要解决这个问题，你可以运行 `jbang edit quarkusapp.java` ，这会打印出一个目录，其中有一个临时项目设置，你可以在你的集成开发环境中使用。"

#. type: delimited block =
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "On Linux/macOS you can run `<idecommand> `jbang edit quarkusapp.java``."
msgstr "在 Linux/macOS 上，您可以运行 `<idecommand> `jbang edit quarkusapp.java`` 。"

#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid ""
"If you add dependencies while editing, you can get JBang to automatically refresh\n"
"the IDE project using `jbang edit --live=<idecommand> quarkusapp.java`."
msgstr "如果在编辑时添加了依赖项，可以使用 `jbang edit --live=<idecommand> quarkusapp.java` 让 JBang 自动刷新 IDE 项目。"

#. type: Title ===
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "The JAX-RS resources"
msgstr "JAX-RS 资源"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Now let us replace the class with one that uses Quarkus features:"
msgstr "现在让我们用一个使用Quarkus特性的类来代替这个类。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "It's a very simple class with a main method that starts Quarkus with a REST endpoint, returning \"hello\" to requests on \"/hello\"."
msgstr "这是一个非常简单的类，有一个主方法，用REST终端启动Quarkus，对\"/hello \"上的请求返回 \"hello\"。"

#. type: Block title
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "Why is the `main` method there?"
msgstr "为什么会有 `main` 方法？"

#. type: delimited block =
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "A `main` method is currently needed for the JBang integration to work - we might remove this requirement in the future."
msgstr "目前需要一个 `main` 方法来使JBang集成工作--我们将来可能会取消这一要求。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, no-wrap
msgid "Running the application"
msgstr "运行应用程序"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Now when you run the application you will see Quarkus start up."
msgstr "现在，当你运行该应用程序时，你会看到Quarkus启动了。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Use: `jbang quarkusapp.java`:"
msgstr "使用： `jbang quarkusapp.java` 。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
msgid "Once started, you can request the provided endpoint:"
msgstr "一旦启动，你可以发送请求到提供服务的端点。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "After that, hit `CTRL+C` to stop the application."
msgstr "之后，点击 `CTRL+C` ，停止应用程序。"

#. type: Block title
#: _versions/2.7/guides/scripting.adoc
#, no-wrap
msgid "Automatically add newline with `curl -w \"\\n\"`"
msgstr "自动添加换行符 `curl -w \"\\n\"` "

#. type: delimited block =
#: _versions/2.7/guides/scripting.adoc
msgid "We are using `curl -w \"\\n\"` in this example to avoid your terminal printing a '%' or put both result and next command prompt on the same line."
msgstr "我们在这个例子中使用 `curl -w \"\\n\"` ，以避免你的终端打印出'%'或把结果和下一个命令提示符放在同一行。"

#. type: Block title
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "Why is `quarkus-resteasy` not resolved?"
msgstr "为什么 `quarkus-resteasy` 没有解决？"

#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid ""
"In this second run you should not see a line saying it is resolving `quarkus-resteasy` as JBang caches the dependency resolution between runs.\n"
"If you want to clear the caches to force resolution use `jbang cache clear`."
msgstr "在第二次运行中，你应该不会看到 \"正在解析 `quarkus-resteasy` \"一行，因为 JBang 会在运行之间缓存依赖关系解析。如果要清除缓存以强制解析，请使用 `jbang cache clear` 。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, no-wrap
msgid "Using injection"
msgstr "使用注入法"

#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid ""
"Dependency injection in Quarkus is based on ArC which is a CDI-based dependency injection solution tailored for Quarkus' architecture.\n"
"You can learn more about it in the xref:cdi-reference.adoc[Contexts and Dependency Injection guide]."
msgstr "Quarkus 中的依赖注入基于 ArC，ArC 是为 Quarkus 架构定制的基于 CDI 的依赖注入解决方案。你可以在 xref:cdi-reference.adoc[上下文和依赖注入指南] 中了解更多相关信息。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "ArC comes as a dependency of `quarkus-resteasy` so you already have it handy."
msgstr "ArC 是 `quarkus-resteasy` 的附属程序，因此您已经可以随时使用。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Let's modify the application and add a companion bean."
msgstr "让我们修改应用程序并添加一个伴生豆。"

#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid ""
"Normally you would add a separate class, but as we are aiming to have it all in one file you will add a\n"
"nested class."
msgstr "通常情况下，您会添加一个单独的类，但由于我们的目标是在一个文件中实现所有功能，因此您将添加一个嵌套类。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Add the following *inside* the `quarkusapp` class body."
msgstr " *在* `quarkusapp` 类主体 *内* 添加以下内容。"

#. type: Block title
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "Use of nested static public classes"
msgstr "使用嵌套的静态公有类"

#. type: delimited block =
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "We are using a nested static public class instead of a top level class for two reasons:"
msgstr "我们使用一个嵌套的静态公有类而不是顶层类，有两个原因。"

#. type: delimited block =
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "JBang currently does not support multiple source files."
msgstr "JBang目前不支持多源文件。"

#. type: delimited block =
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "All Java frameworks relying on introspection have challenges using top level classes as they are not as visible as public classes; and in Java there can only be one top level public class in a file."
msgstr "所有依赖自省的Java框架在使用顶层类时都面临挑战，因为它们不像公有类那样可见；而且在Java中，一个文件中只能有一个顶层公有类。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Edit the `quarksapp` class to inject the `GreetingService` and create a new endpoint using it, you should end up with something like:"
msgstr "编辑 `quarksapp` 类以注入 `GreetingService` ，并使用它创建一个新的端点，你最终应该得到类似的结果。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Now when you run `jbang quarkusapp.java` you can check what the new end point returns:"
msgstr "现在当你运行 `jbang quarkusapp.java` ，你可以检查新的端点返回什么。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Now that is unexpected, why is it returning `hello null` and not `hello quarkus`?"
msgstr "现在，这是意料之外的，为什么它返回 `hello null` ，而不是 `hello quarkus` ？"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "The reason is that JAX-RS `@PathParam` relies on the `-parameters` compiler flag to be set to be able to map `{name}` to the `name` parameter."
msgstr "原因是 JAX-RS `@PathParam` 依赖于 `-parameters` 编译器标志的设置，以便将 `{name}` 映射到 `name` 参数。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "We fix that by adding the following comment instruction to the file:"
msgstr "我们通过在文件中添加以下注释指令来解决这个问题。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Now when you run with `jbang quarkusapp.java` the end point should return what you expect:"
msgstr "现在，当你用 `jbang quarkusapp.java` ，终点应该返回你所期望的结果。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "Debugging"
msgstr "调试"

#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid ""
"To debug the application you use `jbang --debug quarkusapp.java` and you can use your IDE to connect on port 4004; if you want to use the\n"
"more traditional Quarkus debug port you can use `jbang --debug=5005 quarkusapp.java`."
msgstr "要调试程序，可以使用 `jbang --debug quarkusapp.java` ，也可以使用集成开发环境连接到 4004 端口；如果要使用更传统的 Quarkus 调试端口，可以使用 `jbang --debug=5005 quarkusapp.java` 。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Note: JBang debugging always suspends thus you need to connect the debugger to have the application run."
msgstr "注意：JBang的调试总是暂停的，因此你需要连接调试器来让应用程序运行。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, no-wrap
msgid "Logging"
msgstr "日志"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "To use logging in Quarkus scripting with JBang you do as usual, with configuring a logger, i.e."
msgstr "要在Quarkus脚本中使用JBang的日志记录，你可以像往常一样，配置一个日志记录器，即"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "To get it to work you need to add a Java option to ensure the logging is initialized properly, i.e."
msgstr "为了让它工作，你需要添加一个Java选项，以确保日志被正确初始化，即"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "With that in place running `jbang quarkusapp.java` will log and render as expected."
msgstr "有了这一点，运行 `jbang quarkusapp.java` ，就会像预期的那样记录和渲染。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "Configuring Application"
msgstr "配置应用"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "You can use `//Q:CONFIG <property>=<value>` to set up static configuration for your application."
msgstr "你可以使用 `//Q:CONFIG <property>=<value>` ，为你的应用程序设置静态配置。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "I.e. if you wanted to add the `smallrye-openapi` and `swagger-ui` extensions and have the Swagger UI always show up you would add the following:"
msgstr "例如，如果你想添加 `smallrye-openapi` 和 `swagger-ui` 扩展，并让 Swagger UI 始终显示出来，你可以添加以下内容。"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "Now during build the `quarkus.swagger-ui.always-include` will be generated into the resulting jar and `http://0.0.0.0:8080/q/swagger-ui` will be available when run."
msgstr "现在，在构建过程中， `quarkus.swagger-ui.always-include` 将被生成到生成的jar中，并且 `<a href=\"http://0.0.0.0:8080/q/swagger-ui\" class=\"bare\">http://0.0.0.0:8080/q/swagger-ui</a>` 将在运行时可用。"

#. type: Title ==
#: _versions/2.7/guides/scripting.adoc
#, fuzzy, no-wrap
msgid "Running as a native application"
msgstr "作为一个本地应用程序运行"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "If you have the `native-image` binary installed and `GRAALVM_HOME` set, you can get the native executable built and run using `jbang --native quarkusapp.java`:"
msgstr "如果已安装 `native-image` 二进制文件并设置了 `GRAALVM_HOME` ，则可使用 `jbang --native quarkusapp.java` 生成并运行本地可执行文件："

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "This native build will take some time on first run but any subsequent runs (without changing `quarkusapp.java`) will be close to instant thanks to JBang cache:"
msgstr "首次运行时，本机构建会花费一些时间，但由于 JBang 缓存的存在，随后的运行（在不更改 `quarkusapp.java` 的情况下）将几乎即时完成："

#. type: Title ===
#: _versions/2.7/guides/scripting.adoc
#, no-wrap
msgid "Conclusion"
msgstr "解决方案"

#. type: Plain text
#: _versions/2.7/guides/scripting.adoc
#, fuzzy
msgid "If you want to get started with Quarkus or write something quickly, Quarkus Scripting with jbang lets you do that. No Maven, no Gradle - just a Java file. In this guide we outlined the very basics on using Quarkus with JBang; if you want to learn more about what JBang can do, go see https://jbang.dev."
msgstr "如果你想快速入门 Quarkus 或写点东西，使用 jbang 的 Quarkus 脚本可以让你做到这一点。无需 Maven，无需 Gradle，只需一个 Java 文件。在本指南中，我们简要介绍了使用 JBang 编写 Quarkus 脚本的基础知识；如果你想进一步了解 JBang 的功能，请访问 link:https://jbang.dev[https://jbang.dev。]"
