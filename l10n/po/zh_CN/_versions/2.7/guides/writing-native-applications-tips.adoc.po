# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Tips for writing native applications"
msgstr "编写原生应用程序的提示"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "This guide contains various tips and tricks for getting around problems that might arise when attempting to run Java applications as native executables."
msgstr "本指南包含各种提示和技巧，以解决在尝试以原生可执行文件形式运行Java应用程序时可能出现的问题。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Note that we differentiate two contexts where the solution applied might be different:"
msgstr "请注意，我们区分了两种情况，适用的解决方案可能是不同的。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "in the context of an application, you will rely on configuring the `native-image` configuration by tweaking your `pom.xml`;"
msgstr "在一个应用程序的背景下，你将依靠配置 `native-image` ，通过调整你的 `pom.xml` ；"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "in the context of an extension, Quarkus offers a lot of infrastructure to simplify all of this."
msgstr "在扩展的背景下，Quarkus提供了很多基础设施来简化这一切。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Please refer to the appropriate section depending on your context."
msgstr "请根据你的情况，参考适当的章节。"

#. type: Title ==
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Supporting native in your application"
msgstr "在你的应用程序中支持原生"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "GraalVM imposes a number of constraints and making your application a native executable might require a few tweaks."
msgstr "GraalVM施加了一些限制，使你的应用程序成为原生可执行文件可能需要进行一些调整。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Including resources"
msgstr "包含资源"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"By default, when building a native executable, GraalVM will not include any of the resources that are on the classpath into the native executable it creates.\n"
"Resources that are meant to be part of the native executable need to be configured explicitly."
msgstr "默认情况下，在构建本地可执行文件时，GraalVM不会将classpath上的任何资源纳入其创建的原生可执行文件。要成为原生可执行文件一部分的资源，需要明确地进行配置。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Quarkus automatically includes the resources present in `META-INF/resources` (the web resources) but, outside of this directory, you are on your own."
msgstr "Quarkus自动包括存在于 `META-INF/resources` (网络资源）的资源，但是，在这个目录之外，你就得靠自己了。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"Note that you need to be extremely careful here as anything in `META-INF/resources` will be exposed as static web resources.\n"
"So this directory is not a shortcut for \"let's automatically include these resources in the native executable\" and should only be used for static web resources."
msgstr "请注意，你在这里需要非常小心，因为 `META-INF/resources` 中的任何东西都会作为静态网络资源暴露出来。所以这个目录不是 \"让我们自动把这些资源包含在本地可执行文件中 \"的捷径，而应该只用于静态网络资源。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Other resources should be declared explicitly."
msgstr "其他资源应明确声明。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"To include more resources in the native executable, the easiest way is to use the `quarkus.native.resources.includes` configuration property,\n"
"and its counterpart to exclude resources `quarkus.native.resources.excludes`."
msgstr "要在原生可执行文件中包含更多的资源，最简单的方法是使用 `quarkus.native.resources.includes` 配置属性，及其对应的排除资源 `quarkus.native.resources.excludes`。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Both configuration properties support glob patterns."
msgstr "这两个配置属性都支持glob模式。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For instance, having the following properties in your `application.properties`:"
msgstr "例如，在你的 `application.properties`中有以下属性："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "will include:"
msgstr "将包括："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "all files in the `foo/` directory and its subdirectories except for files in `foo/private/` and its subdirectories,"
msgstr " `foo/` 目录及其子目录中的所有文件，但 `foo/private/` 及其子目录中的文件除外。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "all text files in the `bar/` directory and its subdirectories."
msgstr " `bar/` 目录及其子目录下的所有文本文件。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"If globs are not sufficiently precise for your use case and you need to rely on regular expressions or if you prefer relying on the GraalVM infrastructure,\n"
"you can also create a `resources-config.json` (the most common location is within `src/main/resources`) JSON file defining which resources should be included:"
msgstr "如果globs对于你的使用情况来说不够精确，你需要依靠正则表达式，或者你更喜欢依靠GraalVM的基础设施，你也可以创建一个 `resources-config.json` (最常见的位置是在`src/main/resources`) JSON文件，定义哪些资源应该被包含："

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"The patterns are valid Java regexps.\n"
"Here we include all the XML files and JSON files into the native executable."
msgstr "这些模式都是有效的Java重组函数。在这里，我们将所有的XML文件和JSON文件纳入原生可执行文件。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "You can find more information about this topic in https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[the GraalVM documentation]."
msgstr "你可以在 https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[GraalVM文档]中找到更多关于这个主题的信息。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "The final order of business is to make the configuration file known to the `native-image` executable by adding the proper configuration to `application.properties`:"
msgstr "最后一项工作是通过向 `application.properties`添加适当的配置，使配置文件为 `native-image` 可执行文件所知："

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"In the previous snippet we were able to simply use `resources-config.json` instead of specifying the entire path of the file simply because it was added to `src/main/resources`.\n"
"If the file had been added to another directory, the proper file path would have had to be specified manually."
msgstr "在前面的片段中，我们能够简单地使用 `resources-config.json` ，而不是指定文件的整个路径，只是因为它被添加到了 `src/main/resources` 。如果该文件被添加到了另一个目录，就必须手动指定适当的文件路径。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Multiple options may be separated by a comma. For example, one could use:"
msgstr "多个选项可以用逗号隔开。例如，可以使用："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "in order to ensure that various resources are included and additional reflection is registered."
msgstr "以确保各种资源被包括在内，并登记了额外的反射。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If for some reason adding the aforementioned configuration to `application.properties` is not desirable, it is possible to configure the build tool to effectively perform the same operation."
msgstr "如果由于某种原因，将上述配置添加到 `application.properties` ，是不可取的，可以通过配置构建工具来有效地执行相同的操作。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "When using Maven, we could use the following configuration:"
msgstr "使用Maven时，我们可以使用以下配置："

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Registering for reflection"
msgstr "登记反射"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"When building a native executable, GraalVM operates with a closed world assumption.\n"
"It analyzes the call tree and removes all the classes/methods/fields that are not used directly."
msgstr "在构建本地可执行文件时，GraalVM以封闭世界的假设进行操作。它分析调用树并删除所有不直接使用的类/方法/字段。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"The elements used via reflection are not part of the call tree so they are dead code eliminated (if not called directly in other cases).\n"
"To include these elements in your native executable, you need to register them for reflection explicitly."
msgstr "通过反射使用的元素不是调用树的一部分，所以它们是被消除的死代码（如果不是在其他情况下直接调用）。要在你的本地可执行文件中包含这些元素，你需要为反射明确地注册它们。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "This is a very common case as JSON libraries typically use reflection to serialize the objects to JSON:"
msgstr "这是一个非常常见的情况，因为JSON库通常使用反射来将对象序列化为JSON："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If we were to use the code above, we would get an exception like the following when using the native executable:"
msgstr "如果我们使用上面的代码，在使用原生可执行文件时，我们会得到一个类似下面的异常："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "or if you are using Jackson:"
msgstr "或如果你在使用Jackson："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "An even nastier possible outcome could be for no exception to be thrown, but instead the JSON result would be completely empty."
msgstr "一个更糟糕的结果是没有抛出异常，而JSON的结果是完全空的。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "There are two different ways to fix this type of issues."
msgstr "有两种不同的方法来解决这种类型的问题。"

#. type: Title ====
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Using the @RegisterForReflection annotation"
msgstr "使用@RegisterForReflection注解"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "The easiest way to register a class for reflection is to use the `@RegisterForReflection` annotation:"
msgstr "为反射注册一个类的最简单方法是使用 `@RegisterForReflection` 注解："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If your class is in a third-party jar, you can do it by using an empty class that will host the `@RegisterForReflection` for it."
msgstr "如果你的类在第三方的jar中，你可以通过使用一个空的类来做，这个空的类将为它托管 `@RegisterForReflection` 。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Note that `MyClassRequiringReflection` and  `MySecondClassRequiringReflection` will be registered for reflection but not `MyReflectionConfiguration`."
msgstr "请注意， `MyClassRequiringReflection` 和 `MySecondClassRequiringReflection` 将被注册为反射，但不包括 `MyReflectionConfiguration` 。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "This feature is handy when using third-party libraries using object mapping features (such as Jackson or GSON):"
msgstr "在运用使用对象映射功能的第三方库（如Jackson或GSON）时，这个功能很方便："

#. type: Title ====
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Using a configuration file"
msgstr "使用一个配置文件"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "You can use a configuration file to register classes for reflection."
msgstr "你可以使用一个配置文件来为反射注册类。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "As an example, in order to register all methods of class `com.acme.MyClass` for reflection, we create `reflection-config.json` (the most common location is within `src/main/resources`)"
msgstr "作为一个例子，为了注册类 `com.acme.MyClass` 的所有方法进行反射，我们创建 `reflection-config.json` （最常见的位置是在 `src/main/resources` 内）"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more details on the format of this file, please refer to https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[the GraalVM documentation]."
msgstr "关于该文件格式的更多细节，请参考 https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[GraalVM文档] 。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"In the previous snippet we were able to simply use `reflection-config.json` instead of specifying the entire path of the file simply because it was added to `src/main/resources`.\n"
"If the file had been added to another directory, the proper file path would have had to be specified manually."
msgstr "在前面的片段中，我们能够简单地使用 `reflection-config.json` ，而不是指定文件的整个路径，只是因为它被添加到了 `src/main/resources` 。如果该文件被添加到了另一个目录，就必须手动指定适当的文件路径。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Delaying class initialization"
msgstr "推迟类的初始化"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "By default, Quarkus initializes all classes at build time."
msgstr "默认情况下，Quarkus在构建时初始化所有类。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"There are cases where the initialization of certain classes is done in a static block needs to be postponed to runtime.\n"
"Typically omitting such configuration would result in a runtime exception like the following:"
msgstr "有些情况下，某些类的初始化是在静态块中完成的，需要推迟到运行时。通常情况下，省略这样的配置会导致运行时的异常，如下所示："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If you need to delay the initialization of a class, you can use the `--initialize-at-run-time=<package or class>` configuration knob."
msgstr "如果你需要延迟一个类的初始化，你可以使用 `--initialize-at-run-time=<package or class>` 配置旋钮。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "It should be added to the `native-image` configuration using the `quarkus.native.additional-build-args` configuration property as shown in the examples above."
msgstr "它应该使用 `quarkus.native.additional-build-args` 配置属性添加到 `native-image` 配置中，如上面的例子所示。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "You can find more information about all this in https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[the GraalVM documentation]."
msgstr "你可以在 https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[GraalVM的文档]中找到更多关于这一切的信息。"

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"When multiple classes or packages need to be specified via the `quarkus.native.additional-build-args` configuration property, the `,` symbol needs to be escaped.\n"
"An example of this is the following:"
msgstr "当需要通过 `quarkus.native.additional-build-args` 配置属性指定多个类或包时，需要对 `,` 符号进行转义。这方面的一个例子如下。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "and in the case of using the Maven configuration instead of `application.properties`:"
msgstr "以及在使用Maven配置而不是 `application.properties` :"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Managing Proxy Classes"
msgstr "管理代理类"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "While writing native application you'll need to define proxy classes at image build time by specifying the list of interfaces that they implement."
msgstr "在编写本地应用程序时，你需要在图像构建时通过指定它们实现的接口列表来定义代理类。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "In such a situation, the error you might encounter is:"
msgstr "在这种情况下，你可能遇到的错误是："

#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid ""
"Solving this issue requires adding the `-H:DynamicProxyConfigurationResources=<comma-separated-config-resources>` option and to provide a dynamic proxy configuration file.\n"
"You can find all the information about the format of this file in https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md#manual-configuration[the GraalVM documentation]."
msgstr "解决这个问题需要添加 `-H:DynamicProxyConfigurationResources=<comma-separated-config-resources>` 选项，并提供一个动态代理配置文件。你可以在 https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md#manual-configuration[GraalVM文档]中找到关于这个文件格式的所有信息。"

#. type: Title ==
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Supporting native in a Quarkus extension"
msgstr "在Quarkus扩展中支持原生"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Supporting native in a Quarkus extension is even easier as Quarkus provides a lot of tools to simplify all this."
msgstr "在Quarkus扩展中支持本机更容易，因为Quarkus提供了很多工具来简化这一切。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Everything described here will only work in the context of Quarkus extensions, it won't work in an application."
msgstr "这里描述的一切只在Quarkus扩展的范围内起作用，在应用程序中不会起作用。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Register reflection"
msgstr "登记反射"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Quarkus makes registration of reflection in an extension a breeze by using `ReflectiveClassBuildItem`, thus eliminating the need for a JSON configuration file."
msgstr "Quarkus通过使用 `ReflectiveClassBuildItem` ，使得在扩展中注册反射变得轻而易举，从而消除了对JSON配置文件的需求。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "To register a class for reflection, one would need to create a Quarkus processor class and add a build step that registers reflection:"
msgstr "要为反射注册一个类，需要创建一个Quarkus处理器类并添加一个注册反射的构建步骤："

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "More information about reflection in GraalVM can be found https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[here]."
msgstr "关于GraalVM中反射的更多信息可以 https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Reflection.md[在这里] 找到。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "In the context of an extension, Quarkus eliminates the need for a JSON configuration file by allowing extension authors to specify a `NativeImageResourceBuildItem`:"
msgstr "在扩展的背景下，Quarkus通过允许扩展的作者指定一个 `NativeImageResourceBuildItem` 来消除对JSON配置文件的需求："

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more information about GraalVM resource handling in native executables please refer to https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[the GraalVM documentation]."
msgstr "关于本地可执行文件中GraalVM资源处理的更多信息，请参考 https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/Resources.md[GraalVM文档] 。"

#. type: Title ==
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Delay class initialization"
msgstr "延迟类的初始化"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Quarkus simplifies things by allowing extensions authors to simply register a `RuntimeInitializedClassBuildItem`. A simple example of doing so could be:"
msgstr "Quarkus通过允许扩展作者简单地注册一个 `RuntimeInitializedClassBuildItem` 来简化操作。这样做的一个简单例子是："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Using such a construct means that a `--initialize-at-run-time` option will automatically be added to the `native-image` command line."
msgstr "使用这样的结构意味着 `--initialize-at-run-time` 选项将被自动添加到 `native-image` 命令行中。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more information about `--initialize-at-run-time`, please read https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[the GraalVM documentation]."
msgstr "关于 `--initialize-at-run-time` 的更多信息，请阅读 https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/ClassInitialization.md[GraalVM文档] 。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Very similarly, Quarkus allows extensions authors to register a `NativeImageProxyDefinitionBuildItem`. An example of doing so is:"
msgstr "非常相似的是，Quarkus允许扩展作者注册一个 `NativeImageProxyDefinitionBuildItem` 。这样做的一个例子是："

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "Using such a construct means that a `-H:DynamicProxyConfigurationResources` option will automatically be added to the `native-image` command line."
msgstr "使用这样的结构意味着 `-H:DynamicProxyConfigurationResources` 选项将被自动添加到 `native-image` 命令行中。"

#. type: delimited block =
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more information about Proxy Classes you can read https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md[the GraalVM documentation]."
msgstr "关于代理类的更多信息，你可以阅读 https://github.com/oracle/graal/blob/master/docs/reference-manual/native-image/DynamicProxy.md[GraalVM文档] 。"

#. type: Title ===
#: _versions/2.7/guides/writing-native-applications-tips.adoc
#, no-wrap
msgid "Logging with Native Image"
msgstr "使用原生镜像日志"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "If you are using dependencies that require logging components such as Apache Commons Logging or Log4j and are experiencing a `ClassNotFoundException` when building the native executable, you can resolve this by excluding the logging library and adding the corresponding JBoss Logging adapter."
msgstr "如果你正在使用需要日志组件（如Apache Commons logging或Log4j）的依赖，并且在构建原生可执行文件时遇到了' ClassNotFoundException '，你可以通过排除日志库并添加相应的JBoss日志适配器来解决这个问题。"

#. type: Plain text
#: _versions/2.7/guides/writing-native-applications-tips.adoc
msgid "For more details please refer to the xref:logging.adoc#logging-adapters[Logging guide]."
msgstr "更多细节请参考 xref:logging.adoc#logging-adapters[日志指南]。"
