# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/tests-with-coverage.adoc
#, no-wrap
msgid "Measuring the coverage of your tests"
msgstr "测量你的测试的覆盖率"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Learn how to measure the test coverage of your application. This guide covers:"
msgstr "了解如何测量你的应用程序的测试覆盖率。本指南包括。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Measuring the coverage of your Unit Tests"
msgstr "测量你的单元测试的覆盖率"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Measuring the coverage of your Integration Tests"
msgstr "测量你的集成测试的覆盖率"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Separating the execution of your Unit Tests and Integration Tests"
msgstr "将单元测试和集成测试分开执行"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Consolidating the coverage for all your tests"
msgstr "巩固你所有测试的覆盖率"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Please note that code coverage is not supported in native mode."
msgstr "请注意，在本地模式下不支持代码覆盖。"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Having completed the xref:getting-started-testing.adoc[Testing your application guide]"
msgstr "在完成了《 link:getting-started-testing.html[测试你的申请指南》] 之后"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"The application built in this guide is just a JAX-RS endpoint (hello world) that relies on dependency injection to use a service.\n"
"The service will be tested with JUnit 5 and the endpoint will be annotated via a `@QuarkusTest` annotation."
msgstr "本指南中构建的应用程序只是一个 JAX-RS 端点（hello world），它依赖于依赖注入来使用服务。服务将使用 JUnit 5 进行测试，端点将通过 `@QuarkusTest` 注释进行注解。"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step. However, you can go right to the completed example.\n"
"Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "我们建议您按照接下来章节中的说明逐步创建应用程序。不过，您也可以直接进入已完成的示例。克隆 Git 仓库： `git clone {quickstarts-clone-url}` 或下载 {quickstarts-archive-url}[归档]。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "The solution is located in the `tests-with-coverage-quickstart` {quickstarts-tree-url}/tests-with-coverage-quickstart[directory]."
msgstr "解决方案位于 `tests-with-coverage-quickstart` {quickstarts-tree-url}/tests-with-coverage-quickstart[directory] 中。"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy, no-wrap
msgid "Starting from a simple project and two tests"
msgstr "从一个简单的项目和两个测试开始"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Let's start from an empty application created with the Quarkus Maven plugin:"
msgstr "让我们从一个用Quarkus Maven插件创建的空应用程序开始。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Now we'll be adding all the elements necessary to have an application that is properly covered with tests."
msgstr "现在，我们将添加所有必要的元素，以拥有一个适当覆盖测试的应用程序。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "First, a JAX-RS resource serving a hello endpoint:"
msgstr "首先，一个 JAX-RS 资源为一个 hello 端点提供服务："

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "This endpoint uses a greeting service:"
msgstr "这个端点使用一个问候服务。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "The project will also need a test:"
msgstr "该项目还需要一个测试。"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy, no-wrap
msgid "Setting up Jacoco"
msgstr "设置 Jacoco"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Now we need to add Jacoco to our project. To do this we need to add the following to the build file:"
msgstr "现在，我们需要在项目中添加 Jacoco。为此，我们需要在构建文件中添加以下内容："

#. type: Block title
#: _versions/2.7/guides/tests-with-coverage.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.7/guides/tests-with-coverage.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"This Quarkus extension takes care of everything that would usually be done via the Jacoco Maven plugin, so no additional\n"
"config is required."
msgstr "Quarkus 扩展可以处理通常通过 Jacoco Maven 插件完成的所有工作，因此无需额外配置。"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"Using both the extension and the plugin requires special configuration, if you add both you will get lots of errors about classes\n"
"already being instrumented. The configuration needed is detailed below."
msgstr "同时使用扩展和插件需要进行特殊配置，如果同时添加这两种功能，则会出现大量关于类已被仪器化的错误。所需配置详见下文。"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy, no-wrap
msgid "Running the tests with coverage"
msgstr "用覆盖率运行测试"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"Run `mvn verify`, the tests will be run and the results will end up in `target/jacoco-reports`. This is all that is needed,\n"
"the `quarkus-jacoco` extension allows Jacoco to just work out of the box."
msgstr "运行 `mvn verify` ，测试将被执行，结果将在 `target/jacoco-reports` 中显示。这就是所需的一切， `quarkus-jacoco` 扩展使 Jacoco 可以开箱即用。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "There are some config options that affect this:"
msgstr "有一些配置选项会影响这一点。"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy, no-wrap
msgid "Coverage for tests not using @QuarkusTest"
msgstr "不使用@QuarkusTest的测试的覆盖率"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"The Quarkus automatic Jacoco config will only work for tests that are annotated with `@QuarkusTest`. If you want to check\n"
"the coverage of other tests as well then you will need to fall back to the Jacoco maven plugin."
msgstr "Quarkus 的自动 Jacoco 配置仅适用于注释为 `@QuarkusTest` 的测试。如果还想检查其他测试的覆盖率，则需要使用 Jacoco maven 插件。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "In addition to including the `quarkus-jacoco` extension in your pom you will need the following config:"
msgstr "除了在 pom 中包含 `quarkus-jacoco` 扩展外，您还需要以下配置："

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "This config tells it to ignore `@QuarkusTest` related classes, as they are loaded by `QuarkusClassLoader`"
msgstr "这个配置告诉它忽略了 `@QuarkusTest` 相关的类，因为它们是由 `QuarkusClassLoader` "

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "This is only needed if you are using Failsafe to run integration tests"
msgstr "只有在使用 Failsafe 运行集成测试时才需要这样做"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Add the `jacoco` gradle plugin"
msgstr "添加 `jacoco` gradle插件"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Set this config to `false` if you are also using the `quarkus-jacoco` extension and have at least one `@QuarkusTest`.  The default `jacocoTestReport` task can be skipped since `quarkus-jacoco` will generate the combined report of regular unit tests and `@QuarkusTest` classes since the execution data is recorded in the same file."
msgstr "如果你也在使用 `quarkus-jacoco` 扩展，并且至少有一个 `@QuarkusTest` ，则将此配置设为 `false` 。默认的 `jacocoTestReport` 任务可以跳过，因为 `quarkus-jacoco` 将生成常规单元测试和 `@QuarkusTest` 类的合并报告，因为执行数据被记录在同一个文件中。"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"This config will only work if at least one `@QuarkusTest` is being run. If you are not using `@QuarkusTest` then\n"
"you can simply use the Jacoco plugin in the standard manner with no additional config."
msgstr "只有在运行至少一个 `@QuarkusTest` 时，该配置才会起作用。如果您没有使用 `@QuarkusTest` ，则只需以标准方式使用 Jacoco 插件即可，无需额外配置。"

#. type: Title ===
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy, no-wrap
msgid "Coverage for Integration Tests"
msgstr "集成测试的覆盖率"

#. type: delimited block *
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "To get code coverage data from integration tests, the following need to be requirements need to be met:"
msgstr "要从集成测试中获取代码覆盖率数据，需要满足以下要求："

#. type: delimited block *
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "The built artifact is a jar (and not a container or native binary)."
msgstr "内置的工件是一个jar（而不是一个容器或本地二进制文件）。"

#. type: delimited block *
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Jacoco needs to be configured in your build tool."
msgstr "需要在构建工具中配置 Jacoco。"

#. type: delimited block *
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "The application must have been built with `quarkus.package.write-transformed-bytecode-to-build-output` set to `true`"
msgstr "该应用程序在构建时必须将 `quarkus.package.write-transformed-bytecode-to-build-output` 设置为 `true` "

#. type: delimited block *
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Setting `quarkus.package.write-transformed-bytecode-to-build-output=true` should be done with a caution and only if subsequent builds are done in a clean environment - i.e. the build tool's output directory has been completely cleaned."
msgstr "设置 `quarkus.package.write-transformed-bytecode-to-build-output=true` 时应小心谨慎，而且只有在后续的构建工作在干净的环境中完成时才可进行，即构建工具的输出目录已完全清理干净。"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"In the `pom.xml`, you can add the following plugin configuration for Jacoco. This will append integration test data into the same destination file as unit tests,\n"
"re-build the Jacoco report after the integration tests are complete, and thus produce a comprehensive code-coverage report."
msgstr "在 `pom.xml` 中，你可以为 Jacoco 添加以下插件配置。这将把集成测试数据追加到与单元测试相同的目标文件中，并在集成测试完成后重新构建 Jacoco 报告，从而生成一份全面的代码覆盖率报告。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "In order to run the integration tests as a jar with the Jacoco agent, add the following to your `pom.xml`."
msgstr "为了使用 Jacoco 代理以 jar 的形式运行集成测试，请将以下内容添加到 `pom.xml` ."

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Sharing the same value for `quarkus.test.arg-line` might break integration test runs that test different types of Quarkus artifacts. In such cases, the use of maven profiles is advised."
msgstr "共享 `quarkus.test.arg-line` 的相同值可能会破坏测试不同类型 Quarkus 工具的集成测试运行。在这种情况下，建议使用 maven 配置文件。"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy, no-wrap
msgid "Setting coverage thresholds"
msgstr "设置覆盖阈值"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"You can set thresholds for code coverage using the Jacoco Maven plugin. Note the element `<dataFile>${project.build.directory}/jacoco-quarkus.exec</dataFile>`.\n"
"You must set it matching your choice for `quarkus.jacoco.data-file`."
msgstr "您可以使用 Jacoco Maven 插件设置代码覆盖率的阈值。请注意 `<dataFile>${project.build.directory}/jacoco-quarkus.exec</dataFile>` 这一元素。您必须将其设置为与您选择的 `quarkus.jacoco.data-file` 匹配。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Excluding classes from the verification task can be configured as following:"
msgstr "从验证任务中排除的类可以按以下方式配置。"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "`classDirectories` needs to be read after evaluation phase in Gradle"
msgstr " `classDirectories` 需要在Gradle的评估阶段后读取"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Currently, there is a bug in Gradle JaCoCo which requires the `excludes` to be specified in this manner - https://github.com/gradle/gradle/issues/14760.  Once this issue is fixed, excludes"
msgstr "目前，Gradle JaCoCo 中存在一个错误，要求以这种方式指定 `excludes` - link:https://github.com/gradle/gradle/issues/14760[https://github.com/gradle/gradle/issues/14760。] 一旦这个问题得到解决，排除"

#. type: Plain text
#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid "Exclude all classes in `org/example/package` package"
msgstr "排除 `org/example/package` 软件包中的所有类"

#. type: Title ==
#: _versions/2.7/guides/tests-with-coverage.adoc
#, no-wrap
msgid "Conclusion"
msgstr "解决方案"

#: _versions/2.7/guides/tests-with-coverage.adoc
#, fuzzy
msgid ""
"You now have all the information you need to study the coverage of your tests!\n"
"But remember, some code that is not covered is certainly not well tested. But some code that is covered is not necessarily *well* tested. Make sure to write good tests!"
msgstr "现在，您已经掌握了研究测试覆盖率所需的所有信息！但请记住，有些没有覆盖的代码肯定没有得到很好的测试。但有些覆盖了的代码也不一定测试 *得很好* 。一定要写好测试！"
