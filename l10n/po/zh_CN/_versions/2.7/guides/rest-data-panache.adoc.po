# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "Generating JAX-RS resources with Panache"
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"A lot of web applications are monotonous CRUD applications with REST APIs that are tedious to write.\n"
"To streamline this task, REST Data with Panache extension can generate the basic CRUD endpoints for your entities and repositories."
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"While this extension is still experimental and provides a limited feature set, we hope to get an early feedback for it.\n"
"Currently, this extension supports Hibernate ORM and MongoDB with Panache and can generate CRUD resources that work with `application/json` and `application/hal+json` content."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "Setting up REST Data with Panache"
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "Hibernate ORM"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Add the required dependencies to your build file"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Hibernate ORM REST Data with Panache extension (`quarkus-hibernate-orm-rest-data-panache`)"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "A JDBC driver extension (`quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, `quarkus-jdbc-mariadb`, ...)"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "One of the RESTEasy JSON serialization extensions (the extension supports both RESTEasy Classic and RESTEasy Reactive)"
msgstr ""

#. type: Block title
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Implement the Panache entities and/or repositories as explained in the xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache guide]."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Define the interfaces for generation as explained in the resource generation section."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "MongoDB"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "MongoDB REST Data with Panache extension (`quarkus-mongodb-rest-data-panache`)"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "One of the RESTEasy JSON serialization extensions (`quarkus-resteasy-reactive-jackson` or `quarkus-resteasy-reactive-jsonb`)"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Implement the Panache entities and/or repositories as explained in the xref:mongodb-panache.adoc[MongoDB with Panache guide]."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "Generating resources"
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"REST Data with Panache generates JAX-RS resources based on the interfaces available in your application.\n"
"For each entity and repository that you want to generate, provide a resource interface.\n"
"_Do not implement these interfaces and don't provide custom methods because they will be ignored._ You can, however, override the methods from the extended interface in order to customize them (see the section at the end)."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "PanacheEntityResource"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "If your application has an entity (e.g. `Person`) that extends either `PanacheEntity` or `PanacheEntityBase` class, you could instruct REST Data with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "PanacheRepositoryResource"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "If your application has a simple entity (e.g. `Person`) and a repository (e.g. `PersonRepository`) that implements either `PanacheRepository` or `PanacheRepositoryBase` interface, you could instruct REST Data with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "PanacheMongoEntityResource"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "If your application has an entity (e.g. `Person`) that extends either `PanacheMongoEntity` or `PanacheMongoEntityBase` class, you could instruct REST Data with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "PanacheMongoRepositoryResource"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "If your application has a simple entity (e.g. `Person`) and a repository (e.g. `PersonRepository`) that implements either `PanacheMongoRepository` or `PanacheMongoRepositoryBase` interface, you could instruct REST Data with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "The generated resource"
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"The generated resources will be functionally equivalent for both entities and repositories.\n"
"The only difference being the particular data access pattern and data storage in use."
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"If you have defined one of the `PeopleResource` interfaces mentioned above, this extension will generate its implementation using a particular data access strategy.\n"
"The implemented class then will be used by a generated JAX-RS resource, which will look like this:"
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "Resource customisation"
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"REST Data with Panache provides a `@ResourceProperties` and `@MethodProperties` annotations that can be used to customize certain features of the resource.\n"
"It can be used in your resource interface:"
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "Available options"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`@ResourceProperties`"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`exposed` - whether resource could be exposed. A global resource property that can be overridden for each method. Default is `true`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`path` - resource base path. Default path is a hyphenated lowercase resource name without a suffix of `resource` or `controller`."
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"`paged` - whether collection responses should be paged or not.\n"
"First, last, previous and next page URIs are included in the response headers if they exist.\n"
"Request page index and size are taken from the `page` and `size` query parameters that default to `0` and `20` respectively.\n"
"Default is `true`."
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"`hal` - in addition to the standard `application/json` responses, generates additional methods that can return `application/hal+json` responses if requested via an `Accept` header.\n"
"Default is `false`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`halCollectionName` - name that should be used when generating a hal collection response. Default name is a hyphenated lowercase resource name without a suffix of `resource` or `controller`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`@MethodProperties`"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`exposed` - does not expose a particular HTTP verb when set to `false`. Default is `true`."
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`path` - operation path (this is appended to the resource base path). Default is an empty string."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "Query parameters"
msgstr "查询参数"

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "REST Data with Panache supports the following query parameters with the generated resources."
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"`page` - a page number which should be returned by a list operation.\n"
"It applies to the paged resources only and is a number starting with 0. Default is 0."
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"`size` - a page size which should be returned by a list operation.\n"
"It applies to the paged resources only and is a number starting with 1. Default is 20."
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"`sort` - a comma separated list of fields which should be used for sorting a result of a list operation.\n"
"Fields are sorted in the ascending order unless they're prefixed with a `-`.\n"
"E.g. `?sort=name,-age` will sort the result by the name ascending by the age descending."
msgstr ""

#. type: Title ==
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "Response body examples"
msgstr ""

#: _versions/2.7/guides/rest-data-panache.adoc
msgid ""
"As mentioned above REST Data with Panache supports the `application/json` and `application/hal+json` response content types.\n"
"Here are a couple of examples of how a response body would look like for the `get` and `list` operations assuming there are five `Person` records in a database."
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "GET /people/1"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`Accept: application/json`"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "`Accept: application/hal+json`"
msgstr ""

#. type: Title ===
#: _versions/2.7/guides/rest-data-panache.adoc
#, no-wrap
msgid "GET /people?page=0&size=2"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Both responses would also contain these headers:"
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Link: < http://example.com/people?page=0&size=2 >; rel=\"first\""
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Link: < http://example.com/people?page=2&size=2 >; rel=\"last\""
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "Link: < http://example.com/people?page=1&size=2 >; rel=\"next\""
msgstr ""

#. type: Plain text
#: _versions/2.7/guides/rest-data-panache.adoc
msgid "A `previous` link header (and hal link) would not be included, because the previous page does not exist."
msgstr ""
