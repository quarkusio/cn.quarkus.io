# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:6
#, no-wrap
msgid "Kubernetes Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:13
msgid "Quarkus includes the `kubernetes-client` extension which enables the use of the https://github.com/fabric8io/kubernetes-client[Fabric8 Kubernetes Client] in native mode while also making it easier to work with."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:18
msgid "Having a Kubernetes Client extension in Quarkus is very useful in order to unlock the power of Kubernetes Operators.  Kubernetes Operators are quickly emerging as a new class of Cloud Native applications.  These applications essentially watch the Kubernetes API and react to changes on various resources and can be used to manage the lifecycle of all kinds of complex systems like databases, messaging systems and much much more.  Being able to write such operators in Java with the very low footprint that native images provide is a great match."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:19
#, no-wrap
msgid "Configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:23
msgid "Once you have your Quarkus project configured you can add the `kubernetes-client` extension to your project by running the following command in your project base directory."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:28
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:30
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:138
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:324
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:453
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:36
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-kubernetes-client</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:39
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:148
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:333
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:463
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:42
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-kubernetes-client\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:44
#, no-wrap
msgid "Usage"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:48
msgid "Quarkus configures a Bean of type `KubernetesClient` which can be injected into application code using the well known CDI methods.  This client can be configured using various properties as can be seen in the following example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:53
#, no-wrap
msgid ""
"quarkus.kubernetes-client.trust-certs=false\n"
"quarkus.kubernetes-client.namespace=default\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:56
msgid "Note that the full list of properties is available in the https://github.com/quarkusio/quarkus/blob/main/extensions/kubernetes-client/runtime-internal/src/main/java/io/quarkus/kubernetes/client/runtime/KubernetesClientBuildConfig.java[KubernetesClientBuildConfig] class."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:57
#, no-wrap
msgid "Overriding"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:61
msgid "The extension also allows application code to override either of `io.fabric8.kubernetes.client.Config` or `io.fabric8.kubernetes.client.KubernetesClient` which are normally provided by the extension by simply declaring custom versions of those beans."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:63
msgid "An example of this can be seen in the following snippet:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:68
#, no-wrap
msgid ""
"@Singleton\n"
"public class KubernetesClientProducer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:75
#, no-wrap
msgid ""
"    @Produces\n"
"    public KubernetesClient kubernetesClient() {\n"
"        // here you would create a custom client\n"
"        return new DefaultKubernetesClient();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:77
#, no-wrap
msgid "Testing"
msgstr "测试"

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:82
msgid "To make testing against a mock Kubernetes API extremely simple, Quarkus provides the `WithKubernetesTestServer` annotation which automatically launches a mock of the Kubernetes API server and sets the proper environment variables needed so that the Kubernetes Client configures itself to use said mock.  Tests can inject the mock server and set it up in any way necessary for the particular testing using the `@KubernetesTestServer` annotation."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:84
msgid "Let's assume we have a REST endpoint defined like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:89
#, no-wrap
msgid ""
"@Path(\"/pod\")\n"
"public class Pods {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:91
#, no-wrap
msgid "    private final KubernetesClient kubernetesClient;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:95
#, no-wrap
msgid ""
"    public Pods(KubernetesClient kubernetesClient) {\n"
"        this.kubernetesClient = kubernetesClient;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:102
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/{namespace}\")\n"
"    public List<Pod> pods(@PathParam(\"namespace\") String namespace) {\n"
"        return kubernetesClient.pods().inNamespace(namespace).list().getItems();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:105
msgid "We could write a test for this endpoint very easily like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:112
#, no-wrap
msgid ""
"// you can even configure aspects like crud, https and port on this annotation\n"
"@WithKubernetesTestServer\n"
"@QuarkusTest\n"
"public class KubernetesClientTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:115
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:165
#, no-wrap
msgid ""
"    @KubernetesTestServer\n"
"    KubernetesServer mockServer;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:120
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:170
#, no-wrap
msgid ""
"    @BeforeEach\n"
"    public void before() {\n"
"        final Pod pod1 = new PodBuilder().withNewMetadata().withName(\"pod1\").withNamespace(\"test\").and().build();\n"
"        final Pod pod2 = new PodBuilder().withNewMetadata().withName(\"pod2\").withNamespace(\"test\").and().build();\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:125
#, no-wrap
msgid ""
"        // Set up Kubernetes so that our \"pretend\" pods are created\n"
"        mockServer.getClient().pods().create(pod1);\n"
"        mockServer.getClient().pods().create(pod2);\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:131
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:184
#, no-wrap
msgid ""
"    @Test\n"
"    public void testInteractionWithAPIServer() {\n"
"        RestAssured.when().get(\"/pod/test\").then()\n"
"                .body(\"size()\", is(2));\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:133
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:186
#, no-wrap
msgid "}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:136
msgid "Note that to take advantage of these features, the `quarkus-test-kubernetes-client` dependency needs to be added, for example like so:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:145
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-kubernetes-client</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:151
#, no-wrap
msgid "testImplementation(\"io.quarkus:quarkus-test-kubernetes-client\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:155
msgid "By default, the mock server will be in CRUD mode, so you have to use the client to build your state before your application can retrieve it, but you can also set it up in non-CRUD mode and mock all HTTP requests made to Kubernetes:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:162
#, no-wrap
msgid ""
"// you can even configure aspects like crud, https and port on this annotation\n"
"@WithKubernetesTestServer(crud = false)\n"
"@QuarkusTest\n"
"public class KubernetesClientTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:178
#, no-wrap
msgid ""
"        // Mock any HTTP request to Kubernetes pods so that our pods are returned\n"
"        mockServer.expect().get().withPath(\"/api/v1/namespaces/test/pods\")\n"
"                .andReturn(200,\n"
"                        new PodListBuilder().withNewMetadata().withResourceVersion(\"1\").endMetadata().withItems(pod1, pod2)\n"
"                                .build())\n"
"                .always();\n"
"    }\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:189
msgid "You can also use the `setup` attribute on the `@WithKubernetesTestServer` annotation to provide a class that will configure the `KubernetesServer` instance:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:195
#, no-wrap
msgid ""
"@WithKubernetesTestServer(setup = MyTest.Setup.class)\n"
"@QuarkusTest\n"
"public class MyTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:197
#, no-wrap
msgid "    public static class Setup implements Consumer<KubernetesServer> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:204
#, no-wrap
msgid ""
"        @Override\n"
"        public void accept(KubernetesServer server) {\n"
"          server.expect().get().withPath(\"/api/v1/namespaces/test/pods\")\n"
"            .andReturn(200, new PodList()).always();\n"
"        }\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:207
#, no-wrap
msgid ""
"    // tests\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:210
msgid "Alternately, you can create an extension of the `KubernetesServerTestResource` class to ensure all your `@QuarkusTest` enabled test classes share the same mock server setup via the `QuarkusTestResource` annotation:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:214
#, no-wrap
msgid "public class CustomKubernetesMockServerTestResource extends KubernetesServerTestResource {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:222
#, no-wrap
msgid ""
"    @Override\n"
"    protected void configureServer() {\n"
"        super.configureServer();\n"
"        server.expect().get().withPath(\"/api/v1/namespaces/test/pods\")\n"
"          .andReturn(200, new PodList()).always();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:225
msgid "and use this in your other test classes as follows:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:230
#, no-wrap
msgid ""
"@QuarkusTestResource(CustomKubernetesMockServerTestResource.class)\n"
"@QuarkusTest\n"
"public class KubernetesClientTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:233
#, no-wrap
msgid ""
"    //tests will now use the configured server...\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:236
#, no-wrap
msgid "Note on implementing or extending generic types"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:242
msgid "Due to the restrictions imposed by GraalVM, extra care needs to be taken when implementing or extending generic types provided by the client if the application is intended to work in native mode.  Essentially every implementation or extension of generic classes such as `Watcher`, `ResourceHandler` or `CustomResource` needs to specify their associated Kubernetes model class (or, in the case of `CustomResource`, regular Java types) at class definition time.  To better understand this, suppose we want to watch for changes to Kubernetes `Pod` resources.  There are a couple ways to write such a `Watcher` that are guaranteed to work in native:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:250
#, no-wrap
msgid ""
"client.pods().watch(new Watcher<Pod>() {\n"
"    @Override\n"
"    public void eventReceived(Action action, Pod pod) {\n"
"        // do something\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:256
#, no-wrap
msgid ""
"    @Override\n"
"    public void onClose(KubernetesClientException e) {\n"
"        // do something\n"
"    }\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:259
msgid "or"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:267
#, no-wrap
msgid ""
"public class PodResourceWatcher implements Watcher<Pod> {\n"
"    @Override\n"
"    public void eventReceived(Action action, Pod pod) {\n"
"        // do something\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:273
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:314
#, no-wrap
msgid ""
"    @Override\n"
"    public void onClose(KubernetesClientException e) {\n"
"        // do something\n"
"    }\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:275
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:288
#, no-wrap
msgid "...\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:278
#, no-wrap
msgid "client.pods().watch(new PodResourceWatcher());\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:281
msgid "Note that defining the generic type via a class hierarchy similar to the following example will also work correctly:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:286
#, no-wrap
msgid ""
"public abstract class MyWatcher<S> implements Watcher<S> {\n"
"}\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:296
#, no-wrap
msgid ""
"client.pods().watch(new MyWatcher<Pod>() {\n"
"    @Override\n"
"    public void eventReceived(Action action, Pod pod) {\n"
"        // do something\n"
"    }\n"
"});\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:300
msgid "The following example will **not** work in native mode because the generic type of watcher cannot be determined by looking at the class and method definitions thus making Quarkus unable to properly determine the Kubernetes model class for which reflection registration is needed:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:308
#, no-wrap
msgid ""
"public class ResourceWatcher<T extends HasMetadata> implements Watcher<T> {\n"
"    @Override\n"
"    public void eventReceived(Action action, T resource) {\n"
"        // do something\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:316
#, no-wrap
msgid "client.pods().watch(new ResourceWatcher<Pod>());\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:319
#, no-wrap
msgid "Note on using Elliptic Curve keys"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:322
msgid "Please note that if you would like to use Elliptic Curve keys with Kubernetes Client then adding a BouncyCastle PKIX dependency is required:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:330
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>org.bouncycastle</groupId>\n"
"    <artifactId>bcpkix-jdk15on</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:336
#, no-wrap
msgid "implementation(\"org.bouncycastle:bcpkix-jdk15on\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:339
msgid "Note that internally an `org.bouncycastle.jce.provider.BouncyCastleProvider` provider will be registered if it has not already been registered."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:341
msgid "You can have this provider registered as described in the xref:security-customization.adoc#bouncy-castle[BouncyCastle] or xref:security-customization.adoc#bouncy-castle-fips[BouncyCastle FIPS] sections."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:342
#, no-wrap
msgid "Access to the Kubernetes API"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:346
msgid "In many cases in order to access the Kubernetes API server a `ServiceAccount`, `Role` and `RoleBinding` will be necessary.  An example that allows listing all pods could look something like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:349
#, no-wrap
msgid "---\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:355
#, no-wrap
msgid ""
"apiVersion: v1\n"
"kind: ServiceAccount\n"
"metadata:\n"
"  name: <applicationName>\n"
"  namespace: <namespace>\n"
"---\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:365
#, no-wrap
msgid ""
"apiVersion: rbac.authorization.k8s.io/v1\n"
"kind: Role\n"
"metadata:\n"
"  name: <applicationName>\n"
"  namespace: <namespace>\n"
"rules:\n"
"  - apiGroups: [\"\"]\n"
"    resources: [\"pods\"]\n"
"    verbs: [\"list\"]\n"
"---\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:379
#, no-wrap
msgid ""
"apiVersion: rbac.authorization.k8s.io/v1\n"
"kind: RoleBinding\n"
"metadata:\n"
"  name: <applicationName>\n"
"  namespace: <namespace>\n"
"roleRef:\n"
"  kind: Role\n"
"  name: <applicationName>\n"
"  apiGroup: rbac.authorization.k8s.io\n"
"subjects:\n"
"  - kind: ServiceAccount\n"
"    name: <applicationName>\n"
"    namespace: <namespace>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:383
msgid "Replace `<applicationName>` and `<namespace>` with your values.  Have a look at https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/[Configure Service Accounts for Pods] to get further information."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:384
#, no-wrap
msgid "OpenShift Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:389
msgid "If the targeted Kubernetes cluster is an OpenShift cluster, it is possible to access it through the `openshift-client` extension, in a similar way. This leverages the dedicated fabric8 openshift client, and provides access to `OpenShift` proprietary objects (e.g. `Route`, `ProjectRequest`, `BuildConfig` ...)"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:392
msgid "Note that the configuration properties are shared with the `kubernetes-client` extension. In particular they have the same `quarkus.kubernetes-client` prefix."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:394
msgid "Add the extension with:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:399
msgid "Note that `openshift-client` extension has a dependency on the `kubernetes-client` extension."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:401
msgid "To use the client, inject an `OpenShiftClient` instead of the `KubernetesClient`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:406
#, no-wrap
msgid ""
"@Inject\n"
"private OpenShiftClient openshiftClient;\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:409
msgid "If you need to override the default `OpenShiftClient`, provide a producer such as:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:414
#, no-wrap
msgid ""
"@Singleton\n"
"public class OpenShiftClientProducer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:421
#, no-wrap
msgid ""
"    @Produces\n"
"    public OpenShiftClient openshiftClient() {\n"
"        // here you would create a custom client\n"
"        return new DefaultOpenShiftClient();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:424
msgid "Mock support is also provided in a similar fashion:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:430
#, no-wrap
msgid ""
"@QuarkusTestResource(OpenShiftMockServerTestResource.class)\n"
"@QuarkusTest\n"
"public class OpenShiftClientTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:434
#, no-wrap
msgid ""
"    @MockServer\n"
"    private OpenShiftMockServer mockServer;\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:438
msgid "Or by using the `@WithOpenShiftTestServer` similar to the `@WithKubernetesTestServer` explained in the previous section:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:444
#, no-wrap
msgid ""
"@WithOpenShiftTestServer\n"
"@QuarkusTest\n"
"public class OpenShiftClientTest {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:448
#, no-wrap
msgid ""
"    @OpenShiftTestServer\n"
"    private OpenShiftServer mockOpenShiftServer;\n"
"...\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:451
msgid "To use this feature, you have to add a dependency on `quarkus-test-openshift-client`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:460
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-test-openshift-client</artifactId>\n"
"    <scope>test</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:466
#, no-wrap
msgid "testImplementation(\"io.quarkus:quarkus-test-openshift-client\")\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/kubernetes-client.adoc:468
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"
