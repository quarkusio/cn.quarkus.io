# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2022-05-12 15:58+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/2.7/guides/stork-reference.adoc:6
#, no-wrap
msgid "Stork Reference Guide"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:12
msgid "This guide is the companion from the xref:stork.adoc[Stork Getting Started Guide].  It explains the configuration and usage of SmallRye Stork integration in Quarkus."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/stork-reference.adoc:13
#, no-wrap
msgid "Supported clients"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:16
msgid "The current integration of Stork supports:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:18
msgid "the Reactive REST Client"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:19
msgid "the gRPC clients"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:21
msgid "Warning: The gRPC client integration does not support statistic-based load balancers."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/stork-reference.adoc:22
#, no-wrap
msgid "Available service discovery and selection"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:25
msgid "Check the https://smallrye.io/smallrye-stork[SmallRye Stork website] to find more about the provided service discovery and selection."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/stork-reference.adoc:26
#, no-wrap
msgid "Using Stork in Kubernetes"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:30
msgid "Stork provides a service discovery support for Kubernetes, which goes beyond what Kubernetes provides by default.  It looks for all the pods backing up a Kubernetes service, but instead of applying a round-robin (as Kubernetes would do), it gives you the option to select the pod using a Stork load-balancer."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:32
msgid "To use this feature, add the following dependency to your project:"
msgstr ""

#. type: Block title
#: upstream/_versions/2.7/guides/stork-reference.adoc:34
#: upstream/_versions/2.7/guides/stork-reference.adoc:67
#: upstream/_versions/2.7/guides/stork-reference.adoc:219
#, no-wrap
msgid "pom.xml"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:40
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-service-discovery-kubernetes</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: Block title
#: upstream/_versions/2.7/guides/stork-reference.adoc:43
#: upstream/_versions/2.7/guides/stork-reference.adoc:82
#: upstream/_versions/2.7/guides/stork-reference.adoc:234
#, no-wrap
msgid "build.gradle"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:46
#, no-wrap
msgid "implementation(\"io.smallrye.stork:stork-service-discovery-kubernetes\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:49
msgid "For each service expected to be exposed as a Kubernetes Service, configure the lookup:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:54
#, no-wrap
msgid ""
"stork.my-service.service-discovery=kubernetes\n"
"stork.my-service.service-discovery.k8s-namespace=my-namespace\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:58
msgid "Stork looks for the Kubernetes Service with the given name (`my-service` in the previous example) in the specified namespace.  Instead of using the Kubernetes Service IP directly and let Kubernetes handle the selection and balancing, Stork inspects the service and retrieves the list of pods providing the service. Then, it can select the instance."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/stork-reference.adoc:59
#, no-wrap
msgid "Implementing a custom service discovery"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:62
msgid "Stork is extensible, and you can implement your own service discovery mechanism."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/stork-reference.adoc:63
#: upstream/_versions/2.7/guides/stork-reference.adoc:215
#, no-wrap
msgid "Dependency"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:65
msgid "To implement your Service Discovery Provider, make sure your project depends on Core and Configuration Generator. The former brings classes necessary to implement custom discovery, the latter contains an annotation processor that generates classes needed by Stork."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:79
#: upstream/_versions/2.7/guides/stork-reference.adoc:231
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-core</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-configuration-generator</artifactId>\n"
"    <!-- provided scope is sufficient for the annotation processor -->\n"
"    <scope>provided</scope>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:86
#: upstream/_versions/2.7/guides/stork-reference.adoc:238
#, no-wrap
msgid ""
"implementation(\"io.smallrye.stork:stork-core\")\n"
"compileOnly(\"io.smallrye.stork:stork-configuration-generator\")\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/stork-reference.adoc:92
msgid "If the provider is located in an extension, the configuration generator should be declared in the `annotationProcessorPaths` section of the runtime module using the default scope:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:102
#, no-wrap
msgid ""
"<annotationProcessorPaths>\n"
"  ...\n"
"  <path>\n"
"    <groupId>io.smallrye.stork</groupId>\n"
"    <artifactId>stork-configuration-generator</artifactId>\n"
"  </path>\n"
"</annotationProcessorPaths>\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/stork-reference.adoc:105
#, no-wrap
msgid "Implementing a service discovery provider"
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/stork-reference.adoc:110
msgid "The custom provider is a factory that creates an `io.smallrye.stork.ServiceDiscovery` instance for each configured service using this service discovery provider.  A type, for example, `acme` identifies each provider.  This type is used in the configuration to reference the provider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:114
#, no-wrap
msgid "stork.my-service.service-discovery=acme\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:117
msgid "The first step consists of implementing the `io.smallrye.stork.spi.ServiceDiscoveryProvider` interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:121
#: upstream/_versions/2.7/guides/stork-reference.adoc:160
#: upstream/_versions/2.7/guides/stork-reference.adoc:267
#: upstream/_versions/2.7/guides/stork-reference.adoc:296
#, no-wrap
msgid "package examples;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:128
#, no-wrap
msgid ""
"import io.smallrye.stork.api.ServiceDiscovery;\n"
"import io.smallrye.stork.api.config.ServiceConfig;\n"
"import io.smallrye.stork.api.config.ServiceDiscoveryAttribute;\n"
"import io.smallrye.stork.api.config.ServiceDiscoveryType;\n"
"import io.smallrye.stork.spi.StorkInfrastructure;\n"
"import io.smallrye.stork.spi.ServiceDiscoveryProvider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:136
#, no-wrap
msgid ""
"@ServiceDiscoveryType(\"acme\") // <1>\n"
"@ServiceDiscoveryAttribute(name = \"host\",\n"
"        description = \"Host name of the service discovery server.\", required = true) // <2>\n"
"@ServiceDiscoveryAttribute(name = \"port\",\n"
"        description = \"Port of the service discovery server.\", required = false)\n"
"public class AcmeServiceDiscoveryProvider // <3>\n"
"        implements ServiceDiscoveryProvider<AcmeServiceDiscoveryProviderConfiguration> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:146
#, no-wrap
msgid ""
"    // <4>\n"
"    @Override\n"
"    public ServiceDiscovery createServiceDiscovery(AcmeServiceDiscoveryProviderConfiguration config,\n"
"                                                   String serviceName,\n"
"                                                   ServiceConfig serviceConfig,\n"
"                                                   StorkInfrastructure storkInfrastructure) {\n"
"        return new AcmeServiceDiscovery(config);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:149
msgid "This implementation is straightforward."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:151
msgid "`@ServiceDiscoveryType` annotation defines the type of the service discovery provider. For each `ServiceDiscoveryProvider` annotated with this annotation, a configuration class will be generated. The name of the configuration class is constructed by appending `Configuration` to the name of the provider."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:152
msgid "Use `@ServiceDiscoveryAttribute` to define configuration properties for services configured with this service discovery provider. Configuration properties are gathered from all properties of a form: `stork.my-service.service-discovery.attr=value`."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:153
msgid "The provider needs to implement `ServiceDiscoveryType` typed by the configuration class."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:154
msgid "`createServiceDiscovery` method is the factory method. It receives the configuration and access to the name of the service and available infrastructure."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:156
msgid "Then, we need to implement the `ServiceDiscovery` interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:163
#, no-wrap
msgid ""
"import java.util.Collections;\n"
"import java.util.List;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:169
#, no-wrap
msgid ""
"import io.smallrye.mutiny.Uni;\n"
"import io.smallrye.stork.api.ServiceDiscovery;\n"
"import io.smallrye.stork.api.ServiceInstance;\n"
"import io.smallrye.stork.impl.DefaultServiceInstance;\n"
"import io.smallrye.stork.utils.ServiceInstanceIds;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:171
#, no-wrap
msgid "public class AcmeServiceDiscovery implements ServiceDiscovery {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:174
#, no-wrap
msgid ""
"    private final String host;\n"
"    private final int port;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:179
#, no-wrap
msgid ""
"    public AcmeServiceDiscovery(AcmeServiceDiscoveryProviderConfiguration configuration) {\n"
"        this.host = configuration.getHost();\n"
"        this.port = Integer.parseInt(configuration.getPort());\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:190
#, no-wrap
msgid ""
"    @Override\n"
"    public Uni<List<ServiceInstance>> getServiceInstances() {\n"
"        // Proceed to the lookup...\n"
"        // Here, we just return a DefaultServiceInstance with the configured host and port\n"
"        // The last parameter specifies whether the communication with the instance should happen over a secure connection\n"
"        DefaultServiceInstance instance =\n"
"                new DefaultServiceInstance(ServiceInstanceIds.next(), host, port, false);\n"
"        return Uni.createFrom().item(() -> Collections.singletonList(instance));\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:196
msgid "Again, this implementation is simplistic.  Typically, instead of creating a service instance with values from the configuration, you would connect to a service discovery backend, look for the service and build the list of service instances accordingly.  That's why the method returns a `Uni`.  Most of the time, the lookup is a remote operation."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/stork-reference.adoc:197
#, no-wrap
msgid "Using your service discovery"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:201
#: upstream/_versions/2.7/guides/stork-reference.adoc:336
msgid "In the project using it, don't forget to add the dependency on the module providing your implementation.  Then, in the configuration, just add:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:207
#, no-wrap
msgid ""
"stork.my-service.service-discovery=acme\n"
"stork.my-service.service-discovery.host=localhost\n"
"stork.my-service.service-discovery.port=1234\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:210
msgid "Then, Stork will use your implementation to locate the `my-service` service."
msgstr ""

#. type: Title ==
#: upstream/_versions/2.7/guides/stork-reference.adoc:211
#, no-wrap
msgid "Implementing a custom service selection / load-balancer"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:214
msgid "Stork is extensible, and you can implement your own service selection (load-balancer) mechanism."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:217
msgid "To implement your Load Balancer Provider, make sure your project depends on Core and Configuration Generator. The former brings classes necessary to implement custom load balancer, the latter contains an annotation processor that generates classes needed by Stork."
msgstr ""

#. type: delimited block =
#: upstream/_versions/2.7/guides/stork-reference.adoc:243
msgid "Similar to custom discovery providers, if the provider is located in an extension, the configuration generator should be declared in the `annotationProcessorPaths` section of the runtime module using the default scope."
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/stork-reference.adoc:245
#, no-wrap
msgid "Implementing a load balancer provider"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:248
msgid "Load balancer implementation consists of three elements:"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:250
msgid "`LoadBalancer` which is responsible for selecting service instances for a single Stork service"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:251
msgid "`LoadBalancerProvider` which creates instances of `LoadBalancer` for a given load balancer _type_"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:252
msgid "`LoadBalancerProviderConfiguration` which is a configuration for the load balancer"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:256
msgid "A _type_, for example, `acme`, identifies each provider.  This _type_ is used in the configuration to reference the provider:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:260
#, no-wrap
msgid "stork.my-service.load-balancer=acme\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:264
msgid "Similarly to `ServiceDiscoveryProvider, a `LoadBalancerProvider` implementation needs to be annotated with `@LoadBalancerType` that defines the _type_.  Any configuration properties that the provider expects should be defined with `@LoadBalancerAttribute` annotations placed on the provider."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:273
#, no-wrap
msgid ""
"import io.smallrye.stork.api.LoadBalancer;\n"
"import io.smallrye.stork.api.ServiceDiscovery;\n"
"import io.smallrye.stork.api.config.LoadBalancerAttribute;\n"
"import io.smallrye.stork.api.config.LoadBalancerType;\n"
"import io.smallrye.stork.spi.LoadBalancerProvider;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:279
#, no-wrap
msgid ""
"@LoadBalancerType(\"acme\")\n"
"@LoadBalancerAttribute(name = \"my-attribute\",\n"
"        description = \"Attribute that alters the behavior of the LoadBalancer\")\n"
"public class AcmeLoadBalancerProvider implements\n"
"        LoadBalancerProvider<AcmeLoadBalancerProviderConfiguration> {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:286
#, no-wrap
msgid ""
"    @Override\n"
"    public LoadBalancer createLoadBalancer(AcmeLoadBalancerProviderConfiguration config,\n"
"                                           ServiceDiscovery serviceDiscovery) {\n"
"        return new AcmeLoadBalancer(config);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:290
msgid "Note, that similarly to the `ServiceDiscoveryProvider`, the `LoadBalancerProvider` interface takes a configuration class as a parameter. This configuration class is generated automatically by the _Configuration Generator_.  Its name is created by appending `Configuration` to the name of the provider class."
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:292
msgid "The next step is to implement the `LoadBalancer` interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:300
#, no-wrap
msgid ""
"import java.util.ArrayList;\n"
"import java.util.Collection;\n"
"import java.util.Random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:304
#, no-wrap
msgid ""
"import io.smallrye.stork.api.LoadBalancer;\n"
"import io.smallrye.stork.api.NoServiceInstanceFoundException;\n"
"import io.smallrye.stork.api.ServiceInstance;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:306
#, no-wrap
msgid "public class AcmeLoadBalancer implements LoadBalancer {\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:308
#, no-wrap
msgid "    private final Random random;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:312
#, no-wrap
msgid ""
"    public AcmeLoadBalancer(AcmeLoadBalancerProviderConfiguration config) {\n"
"        random = new Random();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:322
#, no-wrap
msgid ""
"    @Override\n"
"    public ServiceInstance selectServiceInstance(Collection<ServiceInstance> serviceInstances) {\n"
"        if (serviceInstances.isEmpty()) {\n"
"            throw new NoServiceInstanceFoundException(\"No services found.\");\n"
"        }\n"
"        int index = random.nextInt(serviceInstances.size());\n"
"        return new ArrayList<>(serviceInstances).get(index);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:325
msgid "Again, this implementation is simplistic and just picks a random instance from the received list."
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:330
#, no-wrap
msgid "examples.AcmeLoadBalancerProvider\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/2.7/guides/stork-reference.adoc:332
#, no-wrap
msgid "Using your load balancer"
msgstr ""

#. type: delimited block -
#: upstream/_versions/2.7/guides/stork-reference.adoc:341
#, no-wrap
msgid ""
"stork.my-service.service-discovery=...\n"
"stork.my-service.load-balancer=acme\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/2.7/guides/stork-reference.adoc:344
msgid "Then, Stork will use your implementation to select the `my-service` service instance."
msgstr ""
