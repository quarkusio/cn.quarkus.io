# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-05-05 19:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "Validation with Hibernate Validator"
msgstr "用Hibernate验证器进行验证"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "This guide covers how to use Hibernate Validator/Bean Validation for:"
msgstr "本指南涵盖了如何使用Hibernate Validator/Bean Validation来实现。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "validating the input/output of your REST services;"
msgstr "验证你的REST服务的输入/输出。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "validating the parameters and return values of the methods of your business services."
msgstr "验证你的业务服务的方法的参数和返回值。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "Architecture"
msgstr "应用结构"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"The application built in this guide is quite simple. The user fills a form on a web page.\n"
"The web page sends the form content to the `BookResource` as JSON (using Ajax). The `BookResource` validates the user input and returns the\n"
"_result_ as JSON."
msgstr "本指南中构建的应用程序非常简单。用户在网页上填写表格。网页将表单内容以 JSON 格式发送到 `BookResource` （使用 Ajax）。 `BookResource` 验证用户输入，并以 JSON 格式返回 _结果_ 。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "image:validation-guide-architecture.png[alt=Architecture]"
msgstr "image:validation-guide-architecture.png[alt=\"Architecture\"]"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.16/guides/validation.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The solution is located in the `validation-quickstart` {quickstarts-tree-url}/validation-quickstart[directory]."
msgstr "解决方案位于 `validation-quickstart` {quickstarts-tree-url}/validation-quickstart[目录]。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
msgid "This command generates a Maven structure importing the RESTEasy Reactive/JAX-RS, Jackson and Hibernate Validator/Bean Validation extensions."
msgstr ""

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `hibernate-validator` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果已经配置了 Quarkus 项目，可以在项目基本目录下运行以下命令，将 `hibernate-validator` 扩展添加到项目中："

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The result of this command is dependent on your build tool:"
msgstr "该命令的结果取决于您的构建工具："

#. type: Block title
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Constraints"
msgstr "限制条件"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"In this application, we are going to test an elementary object, but we support complicated constraints and can validate graphs of objects.\n"
"Create the `org.acme.validation.Book` class with the following content:"
msgstr "在此应用程序中，我们将测试一个基本对象，但我们支持复杂的约束条件，并可验证对象图。创建 `org.acme.validation.Book` 类，内容如下："

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Constraints are added on fields, and when an object is validated, the values are checked.\n"
"The getter and setter methods are also used for JSON mapping."
msgstr "在字段上添加约束，并在验证对象时检查其值。getter 和 setter 方法也用于 JSON 映射。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "JSON mapping and validation"
msgstr "JSON映射和验证"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Create the following REST resource as `org.acme.validation.BookResource`:"
msgstr "创建以下REST资源为 `org.acme.validation.BookResource` 。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The `Validator` instance is injected via CDI."
msgstr " `Validator` 实例是通过CDI注入的。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Yes it does not compile, `Result` is missing, but we will add it very soon."
msgstr "是的，它不能编译， `Result` ，但我们将很快添加它。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The method parameter (`book`) is created from the JSON payload automatically."
msgstr "方法参数( `book` )是由JSON有效载荷自动创建的。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"The method uses the `Validator` instance to check the payload.\n"
"It returns a set of violations.\n"
"If this set is empty, it means the object is valid.\n"
"In case of failures, the messages are concatenated and sent back to the browser."
msgstr "该方法使用 `Validator` 实例检查有效载荷。它会返回一组违规信息。如果该集合为空，则表示对象有效。如果失败，则会将信息连接起来并发送回浏览器。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Let's now create the `Result` class as an inner class:"
msgstr "现在让我们把 `Result` 类作为一个内层类来创建。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"The class is very simple and only contains 2 fields and the associated getters and setters.\n"
"Because we indicate that we produce JSON, the mapping to JSON is made automatically."
msgstr "该类非常简单，只包含 2 个字段以及相关的获取器和设置器。因为我们表示要生成 JSON，所以会自动映射到 JSON。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "REST end point validation"
msgstr "REST端点验证"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"While using the `Validator` manually might be useful for some advanced usage,\n"
"if you simply want to validate the parameters or the return value or your REST end point,\n"
"you can annotate it directly, either with constraints (`@NotNull`, `@Digits`...)\n"
"or with `@Valid` (which will cascade the validation to the bean)."
msgstr "虽然手动使用 `Validator` 可能对某些高级用法有用，但如果您只是想验证参数或返回值或 REST 端点，您可以直接注释它，可以使用约束 ( `@NotNull` , `@Digits` ...) 或 `@Valid` （这将把验证级联到 Bean）。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Let's create an end point validating the `Book` provided in the request:"
msgstr "让我们创建一个端点，验证请求中提供的 `Book` 。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "As you can see, we don't have to manually validate the provided `Book` anymore as it is automatically validated."
msgstr "正如你所看到的，我们不必再手动验证所提供的 `Book` ，因为它是自动验证的。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"If a validation error is triggered, a violation report is generated and serialized as JSON as our end point produces a JSON output.\n"
"It can be extracted and manipulated to display a proper error message."
msgstr "如果触发了验证错误，就会生成违规报告并序列化为 JSON 格式，因为我们的终端会生成 JSON 输出。可以对其进行提取和处理，以显示正确的错误信息。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Service method validation"
msgstr "服务方法验证"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "It might not always be handy to have the validation rules declared at the end point level as it could duplicate some business validation."
msgstr "在端点水平上声明验证规则可能并不总是很方便，因为它可能重复一些业务验证。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The best option is then to annotate a method of your business service with your constraints (or in our particular case with `@Valid`):"
msgstr "最好的选择是用你的约束条件来注释你的业务服务的方法（或者在我们的特定案例中用 `@Valid` ）。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Calling the service in your rest end point triggers the `Book` validation automatically:"
msgstr "在你的休息端点中调用服务，会自动触发 `Book` 验证。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Note that, if you want to push the validation errors to the frontend, you have to catch the exception and push the information yourselves\n"
"as they will not be automatically pushed to the JSON output."
msgstr "请注意，如果要将验证错误推送到前端，必须捕获异常并自行推送信息，因为它们不会自动推送到 JSON 输出中。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Keep in mind that you usually don't want to expose to the public the internals of your services\n"
"- and especially not the validated value contained in the violation object."
msgstr "请记住，您通常不希望向公众公开服务的内部结构，尤其不希望公开违规对象中包含的验证值。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "A frontend"
msgstr "一个前台"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Now let's add the simple web page to interact with our `BookResource`.\n"
"Quarkus automatically serves static resources contained in the `META-INF/resources` directory.\n"
"In the `src/main/resources/META-INF/resources` directory, replace the `index.html` file with the content from this {quickstarts-blob-url}/validation-quickstart/src/main/resources/META-INF/resources/index.html[index.html] file in it."
msgstr "现在，让我们添加一个简单的网页，与我们的 `BookResource` 进行交互。Quarkus 会自动提供 `META-INF/resources` 目录中的静态资源。在 `src/main/resources/META-INF/resources` 目录中，用该 {quickstarts-blob-url}/validation-quickstart/src/main/resources/META-INF/resources/index.html[index.html] 文件中的内容替换 `index.html` 文件。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "Run the application"
msgstr "运行应用程序"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Now, let's see our application in action. Run it with:"
msgstr "现在，让我们看看我们的应用程序的运行情况。用以下方式运行它。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Then, open your browser to http://localhost:8080/:"
msgstr "然后，打开你的浏览器 http://localhost:8080/ "

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Enter the book details (valid or invalid)"
msgstr "输入书的详细信息（有效或无效）。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Click on the _Try me..._ buttons to check if your data is valid using one of the methods we presented above."
msgstr "点击 _Try me_ ...按钮，用我们上面介绍的方法之一检查你的数据是否有效。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "image:validation-guide-screenshot.png[alt=Application]"
msgstr "image:validation-guide-screenshot.png[alt=\"Application\"]"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The application can be packaged using:"
msgstr "该应用程序可以用以下方式打包。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "and executed using `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "并使用 `java -jar target/quarkus-app/quarkus-run.jar` 来执行。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
msgid "You can also build the native executable using:"
msgstr "您也可以用以下方法构建原生(native)可执行文件："

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, no-wrap
msgid "Going further"
msgstr "进一步探索"

#. type: Title ===
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Hibernate Validator extension and CDI"
msgstr "Hibernate验证器扩展和CDI"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The Hibernate Validator extension is tightly integrated with CDI."
msgstr "Hibernate Validator扩展与CDI紧密结合。"

#. type: Title ====
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Configuring the ValidatorFactory"
msgstr "配置ValidatorFactory"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Sometimes, you might need to configure the behavior of the `ValidatorFactory`, for instance to use a specific `ParameterNameProvider`."
msgstr "有时，你可能需要配置 `ValidatorFactory` 的行为，例如，使用一个特定的 `ParameterNameProvider` 。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"While the `ValidatorFactory` is instantiated by Quarkus itself,\n"
"you can very easily tweak it by declaring replacement beans that will be injected in the configuration."
msgstr "虽然 `ValidatorFactory` 是由 Quarkus 本身实例化的，但你可以通过声明将注入配置中的替换 Bean，非常轻松地对其进行调整。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "If you create a bean of the following types in your application, it will automatically be injected into the `ValidatorFactory` configuration:"
msgstr "如果你在你的应用程序中创建了以下类型的Bean，它将自动被注入到 `ValidatorFactory` 配置中。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`javax.validation.ClockProvider`"
msgstr "`javax.validation.ClockProvider`"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`javax.validation.ConstraintValidator`"
msgstr "`javax.validation.ConstraintValidator`"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`javax.validation.ConstraintValidatorFactory`"
msgstr "`javax.validation.ConstraintValidatorFactory`"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`javax.validation.MessageInterpolator`"
msgstr "`javax.validation.MessageInterpolator`"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`javax.validation.ParameterNameProvider`"
msgstr "`javax.validation.ParameterNameProvider`"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`javax.validation.TraversableResolver`"
msgstr "`javax.validation.TraversableResolver`"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`org.hibernate.validator.spi.properties.GetterPropertySelectionStrategy`"
msgstr " `org.hibernate.validator.spi.properties.GetterPropertySelectionStrategy` "

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`org.hibernate.validator.spi.nodenameprovider.PropertyNodeNameProvider`"
msgstr " `org.hibernate.validator.spi.nodenameprovider.PropertyNodeNameProvider` "

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "`org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory`"
msgstr " `org.hibernate.validator.spi.scripting.ScriptEvaluatorFactory` "

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "You don't have to wire anything."
msgstr "你不需要给任何东西接线。"

#. type: delimited block =
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Obviously, for each listed type, you can declare only one bean."
msgstr "很明显，对于每个列出的类型，你只能声明一个bean。"

#. type: delimited block =
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Most of the time, these beans should be declared as `@ApplicationScoped`."
msgstr "大多数情况下，这些豆子应该被声明为 `@ApplicationScoped` 。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"However, in the case of ``ConstraintValidator``s that are dependent of attributes of the constraint annotation\n"
"(typically when implementing the `initialize(A constraintAnnotation)` method),\n"
"use the `@Dependent` scope to make sure each annotation context has a separate instance of the `ConstraintValidator` bean."
msgstr "但是，如果 `ConstraintValidator` 依赖于约束注解的属性（通常是在实现 `initialize(A constraintAnnotation)` 方法时），则应使用 `@Dependent` 作用域来确保每个注解上下文都有一个单独的 `ConstraintValidator` Bean 实例。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"If customizing the `ValidatorFactory` through the available configuration properties and the CDI beans above doesn't cover your requirements,\n"
"you can customize it further by registering `ValidatorFactoryCustomizer` beans."
msgstr "如果通过可用的配置属性和上述 CDI Bean 对 `ValidatorFactory` 进行定制还不能满足您的要求，您还可以通过注册 `ValidatorFactoryCustomizer` Bean 对其进行进一步定制。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "For instance, you could override the built-in validator enforcing the `@Email` constraint and use `MyEmailValidator` instead with the following class:"
msgstr "例如，你可以覆盖内置的验证器，强制执行 `@Email` 的约束，并使用 `MyEmailValidator` 来代替下面的类。"

#: _versions/2.16/guides/validation.adoc
msgid ""
"All beans implementing `ValidatorFactoryCustomizer` are applied, meaning you can have several of them.\n"
"If you need to enforce some ordering, you can use the usual `@javax.annotation.Priority` annotation - beans with higher priority are applied first."
msgstr ""

#. type: Title ====
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Constraint validators as beans"
msgstr "作为豆类的限制性验证器"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "You can declare your constraint validators as CDI beans:"
msgstr "你可以把你的约束验证器声明为CDI豆。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"When initializing a constraint validator of a given type,\n"
"Quarkus will check if a bean of this type is available and, if so, it will use it instead of instantiating a `ConstraintValidator`."
msgstr "在初始化给定类型的约束验证器时，Quarkus 将检查该类型的 Bean 是否可用，如果可用，则使用该 Bean 而不是实例化 `ConstraintValidator` 。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Thus, as demonstrated in our example, you can fully use injection in your constraint validator beans."
msgstr "因此，正如我们的例子所展示的，你可以在你的约束验证器Bean中完全使用注入。"

#. type: delimited block =
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The scope you choose for your `ConstraintValidator` bean is important:"
msgstr "你为你的 `ConstraintValidator` 豆选择的范围很重要。"

#. type: delimited block =
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "If the same instance of the `ConstraintValidator` bean can be used across the whole application, use the `@ApplicationScoped` scope."
msgstr "如果 `ConstraintValidator` bean的同一个实例可以在整个应用程序中使用，请使用 `@ApplicationScoped` 范围。"

#. type: delimited block =
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "If the `ConstraintValidator` bean implements the `initialize(A constraintAnnotation)` method and depends on the state of the constraint annotation, use the `@Dependent` scope to make sure each annotation context has a separate and properly configured instance of the `ConstraintValidator` bean."
msgstr "然而，在 `ConstraintValidator` s依赖于约束注解的属性的情况下（通常在实现 `initialize(A constraintAnnotation)` 方法时），使用 `@Dependent` 范围来确保每个注解上下文都有一个单独的 `ConstraintValidator` Bean实例。"

#. type: Title ===
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Validation and localization"
msgstr "审定和本地化"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "By default, constraint violation messages will be returned in the build system locale."
msgstr "默认情况下，违反约束的信息将以构建系统的语言返回。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "You can configure this behavior by adding the following configuration in your `application.properties`:"
msgstr "你可以通过在你的 `application.properties` 中添加以下配置来配置这种行为。"

#: _versions/2.16/guides/validation.adoc
msgid ""
"If you are using RESTEasy Reactive or RESTEasy Classic, in the context of a JAX-RS endpoint,\n"
"Hibernate Validator will automatically resolve the optimal locale to use from the `Accept-Language` HTTP header,\n"
"provided the supported locales have been properly specified in the `application.properties`:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "A similar mechanism exists for GraphQL services based on the `quarkus-smallrye-graphql` extension."
msgstr "基于 `quarkus-smallrye-graphql` 扩展的GraphQL服务也有类似的机制。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "If this default mechanism is not sufficient and you need a custom locale resolution, you can add additional ``org.hibernate.validator.spi.messageinterpolation.LocaleResolver``s:"
msgstr "如果这个默认机制不够用，而你需要一个自定义的区域划分，你可以添加额外的 `org.hibernate.validator.spi.messageinterpolation.LocaleResolver` s。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Any CDI bean implementing `org.hibernate.validator.spi.messageinterpolation.LocaleResolver` will be taken into account."
msgstr "任何实施 `org.hibernate.validator.spi.messageinterpolation.LocaleResolver` 的CDI bean都将被考虑在内。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The ``LocaleResolver``s are consulted in the order of `@Priority` (higher priority goes first)."
msgstr " `LocaleResolver` ，并按照 `@Priority` （优先级较高者优先）的顺序查询。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "A `LocaleResolver` may return null if it cannot resolve the locale, it will then be ignored."
msgstr " `LocaleResolver` ，如果它不能解析locale，可以返回null，那么它将被忽略。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "The first non-null locale returned by a `LocaleResolver` is the one resolved."
msgstr "由 `LocaleResolver` 返回的第一个非空的locale是被解决的。"

#. type: Title ===
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Validation groups for REST endpoint or service method validation"
msgstr "用于REST端点或服务方法验证的验证组"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"It's sometimes necessary to enable different validation constraints\n"
"for the same class when it's passed to a different method."
msgstr "当同一个类被传递到不同的方法时，有时需要为它启用不同的验证约束。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"For example, a `Book` may need to have a `null` identifier when passed to the `post` method\n"
"(because the identifier will be generated),\n"
"but a non-`null` identifier when passed to the `put` method\n"
"(because the method needs the identifier to know what to update)."
msgstr "例如，当 `Book` 传递给 `post` 方法时，可能需要一个 `null` 标识符（因为将生成标识符），但当传递给 `put` 方法时，可能需要一个非 `null` 标识符（因为该方法需要标识符才能知道要更新什么）。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"To address this, you can take advantage of validation groups.\n"
"Validation groups are markers that you put on your constraints in order to enable or disable them at will."
msgstr "要解决这个问题，可以利用验证组。验证组是您在约束上设置的标记，可以随意启用或禁用。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "First, define the `Post` and `Put` groups, which are just Java interfaces."
msgstr "首先，定义 `Post` 和 `Put` 组，这只是Java接口。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Make the custom groups extend the `Default` group.\n"
"This means that whenever these groups are enabled, the `Default` group is also enabled.\n"
"This is useful if you have constraints that you want validated in both the `Post` and `Put` method:\n"
"you can simply use the default group on those constraints, like on the `title` property below."
msgstr "使自定义组扩展 `Default` 组。这意味着只要这些组被启用， `Default` 组也会被启用。如果您希望在 `Post` 和 `Put` 方法中都验证约束，这将非常有用：您只需在这些约束上使用默认组即可，如下面的 `title` 属性。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Then add the relevant constraints to `Book`, assigning the right group to each constraint:"
msgstr "然后将相关约束添加到 `Book` ，为每个约束分配正确的组。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Finally, add a `@ConvertGroup` annotation next to your `@Valid` annotation in your validated method."
msgstr "最后，在你的验证方法中的 `@Valid` 注释旁边添加一个 `@ConvertGroup` 注释。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Enable the `Post` group, meaning only constraints assigned to the `Post` (and `Default`) groups\n"
"will be validated for the `book` parameter of the `post` method.\n"
"In this case, it means `Book.id` must be `null` and `Book.title` must not be blank."
msgstr "启用 `Post` 组，这意味着只有分配给 `Post` （和 `Default` ）组的约束才会对 `post` 方法的 `book` 参数进行验证。在这种情况下，意味着 `Book.id` 必须是 `null` ， `Book.title` 不得为空。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Enable the `Put` group, meaning only constraints assigned to the `Put` (and `Default`) groups\n"
"will be validated for the `book` parameter of the `put` method.\n"
"In this case, it means `Book.id` must not be `null` and `Book.title` must not be blank."
msgstr "启用 `Put` 组，这意味着只有分配给 `Put` （和 `Default` ）组的约束才会对 `put` 方法的 `book` 参数进行验证。在这种情况下，意味着 `Book.id` 不能是 `null` ， `Book.title` 不能是空白。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Limitations"
msgstr "限制条件"

#. type: Title ===
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "META-INF/validation.xml"
msgstr "META-INF/validation.xml"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Configuring the `ValidatorFactory` using a `META-INF/validation.xml` file is *NOT* supported in Quarkus."
msgstr "Quarkus *不* 支持使用 `META-INF/validation.xml` 文件来配置 `ValidatorFactory` 。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"At the moment, Hibernate Validator does not expose an API to extract the information from this file\n"
"so that we could register the appropriate classes for reflection."
msgstr "目前，Hibernate Validator 还没有提供从该文件中提取信息的应用程序接口，这样我们就可以注册相应的类来进行反射。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "To configure the `ValidatorFactory`, use the exposed configuration properties and the CDI integration."
msgstr "为了配置 `ValidatorFactory` ，使用暴露的配置属性和CDI集成。"

#. type: Plain text
#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "Consequently, the only way to define constraints in Quarkus is by annotating your classes."
msgstr "因此，在Quarkus中定义约束的唯一方法是通过注释你的类。"

#. type: Title ===
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "ValidatorFactory and native executables"
msgstr "ValidatorFactory和本地可执行文件"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Quarkus provides a default `ValidatorFactory` that you can customize using configuration properties.\n"
"This `ValidatorFactory` is carefully initialized to support native executables\n"
"using a bootstrap that is Quarkus-specific."
msgstr "Quarkus 提供了一个默认的 `ValidatorFactory` ，你可以使用配置属性对其进行自定义。该 `ValidatorFactory` 经过精心初始化，使用 Quarkus 特有的引导程序支持本地可执行文件。"

#: _versions/2.16/guides/validation.adoc
msgid ""
"Creating a `ValidatorFactory` by yourself it not supported in native executables\n"
"and if you try to do so,\n"
"you will get an  error similar to `javax.validation.NoProviderFoundException: Unable to create a Configuration, because no\n"
"Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your\n"
"classpath.` when running your native executable."
msgstr ""

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"Thus why you should always use the Quarkus-managed `ValidatorFactory` by injecting an instance of\n"
"`ValidatorFactory` or directly an instance of `Validator` using CDI injection."
msgstr "因此，您应该始终使用 Quarkus 管理的 `ValidatorFactory` ，方法是注入 `ValidatorFactory` 的实例或使用 CDI 注入直接注入 `Validator` 的实例。"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid ""
"To support some external libraries that are creating a `ValidatorFactory` using the default bootstrap,\n"
"Quarkus returns the `ValidatorFactory` managed by Quarkus when `Validation.buildDefaultValidatorFactory()`\n"
"is called."
msgstr "为了支持一些使用默认引导创建 `ValidatorFactory` 的外部库，当调用 `Validation.buildDefaultValidatorFactory()` 时，Quarkus 会返回由 Quarkus 管理的 `ValidatorFactory` 。"

#. type: Title ==
#: _versions/2.16/guides/validation.adoc
#, fuzzy, no-wrap
msgid "Hibernate Validator Configuration Reference"
msgstr "Hibernate 验证器配置参考"

#: _versions/2.16/guides/validation.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
