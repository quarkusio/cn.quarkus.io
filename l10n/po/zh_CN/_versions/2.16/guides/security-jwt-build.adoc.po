# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-05-05 19:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Build, Sign and Encrypt JSON Web Tokens"
msgstr "建立、签署和加密JSON网络令牌"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "According to link:https://datatracker.ietf.org/doc/html/rfc7519[RFC7519], JSON Web Token (JWT) is a compact, URL-safe means of representing claims which are encoded as a JSON object that is used as the payload of a JSON Web Signature (JWS) structure or as the plaintext of a JSON Web Encryption (JWE) structure, enabling the claims to be digitally signed or integrity protected with a Message Authentication Code(MAC) and/or encrypted."
msgstr "根据 link:https://datatracker.ietf.org/doc/html/rfc7519[RFC7519] ，JSON Web Token（JWT）是一种紧凑的、对URL安全的手段，它表示被编码为JSON对象的索赔，该对象被用作JSON Web签名（JWS）结构的有效载荷或JSON Web加密（JWE）结构的明文，使索赔能够被数字签名或用消息验证码（MAC）进行完整性保护和/或被加密。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Signing the claims is used most often to secure the claims. What is known today as a JWT token is typically produced by signing the claims in a JSON format using the steps described in the link:https://tools.ietf.org/html/rfc7515[JSON Web Signature] specification."
msgstr "签署权利要求最常被用来保证权利要求的安全。今天被称为JWT令牌的东西，通常是通过使用 link:https://tools.ietf.org/html/rfc7515[JSON网络签名] 规范中描述的步骤，以JSON格式签署权利要求而产生的。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "However, when the claims are sensitive, their confidentiality can be guaranteed by following the steps described in the link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption] specification to produce a JWT token with the encrypted claims."
msgstr "然而，当索赔是敏感的，它们的保密性可以通过遵循 link:https://tools.ietf.org/html/rfc7516[JSON网络加密] 规范中描述的步骤来保证，以产生一个带有加密索赔的JWT令牌。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Finally, both the confidentiality and integrity of the claims can be further enforced by signing them first and then encrypting the nested JWT token."
msgstr "最后，索赔的保密性和完整性可以通过首先签署它们，然后对嵌套的JWT令牌进行加密来进一步强制执行。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "SmallRye JWT Build provides an API for securing JWT claims using all of these options. link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J] is used internally to support this API."
msgstr "SmallRye JWT Build提供了一个API，用于保护使用所有这些选项的JWT请求。内部使用 link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J] 来支持这个API。"

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Dependency"
msgstr "依赖性"

#. type: Block title
#: _versions/2.16/guides/security-jwt-build.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/2.16/guides/security-jwt-build.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Note you can use Smallrye JWT Build API without having to create MicroProfile JWT endpoints supported by `quarkus-smallrye-jwt`.\n"
"It can also be excluded from `quarkus-smallrye-jwt` if MP JWT endpoints do not need to generate JWT tokens."
msgstr "请注意，您可以使用 Smallrye JWT Build API，而无需创建 `quarkus-smallrye-jwt` 支持的 MicroProfile JWT 端点。如果 MP JWT 端点不需要生成 JWT 标记，也可以将其从 `quarkus-smallrye-jwt` 中排除。"

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Create JwtClaimsBuilder and set the claims"
msgstr "创建JwtClaimsBuilder并设置索赔。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "The first step is to initialize a `JwtClaimsBuilder` using one of the options below and add some claims to it:"
msgstr "第一步是使用下面的一个选项初始化一个 `JwtClaimsBuilder` ，并向其添加一些索赔。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "The API is fluent so the builder initialization can be done as part of the fluent API sequence."
msgstr "该API是流畅的，所以构建器的初始化可以作为流畅的API序列的一部分来完成。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "The builder will also set `iat` (issued at) to the current time, `exp` (expires at) to 5 minutes away from the current time (it can be customized with the `smallrye.jwt.new-token.lifespan` property) and `jti` (unique token identifier) claims if they have not already been set."
msgstr "构建器还将把 `iat` （发布时间）设置为当前时间， `exp` （过期时间）设置为离当前时间5分钟（可以用 `smallrye.jwt.new-token.lifespan` 属性自定义）， `jti` （唯一的令牌标识符）声称，如果它们还没有被设置。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "One can also configure `smallrye.jwt.new-token.issuer` and `smallrye.jwt.new-token.audience` properties and skip setting the issuer and audience directly with the builder API."
msgstr "人们还可以配置 `smallrye.jwt.new-token.issuer` 和 `smallrye.jwt.new-token.audience` 属性，并跳过直接使用构建器API设置发行者和受众。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "The next step is to decide how to secure the claims."
msgstr "下一步是决定如何确保索赔。"

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Sign the claims"
msgstr "签署索赔书"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "The claims can be signed immediately or after the `JSON Web Signature` headers have been set:"
msgstr "债权可以立即签署，也可以在设置 `JSON Web Signature` headers之后签署。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Note the `alg` (algorithm) header is set to `RS256` by default. Signing key identifier (`kid` header) does not have to be set if a single JSON Web Key (JWK) containing a `kid` property is used."
msgstr "注意 `alg` （算法）头默认设置为 `RS256` 。如果使用一个包含 `kid` 属性的单一JSON网络密钥(JWK)，则不必设置签名密钥标识符( `kid` header)。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"RSA and Elliptic Curve (EC) private keys as well as symmetric secret keys can be used to sign the claims.\n"
"`ES256` and `HS256` are the default algorithms for EC private and symmetric key algorithms respectively."
msgstr "RSA 和椭圆曲线（EC）私钥以及对称秘钥可用于签署报销单。 `ES256` 和 `HS256` 分别是 EC 私钥和对称密钥算法的默认算法。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can customize the signature algorithm, for example:"
msgstr "例如，你可以自定义签名算法。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Alternatively you can use a `smallrye.jwt.new-token.signature-algorithm` property:"
msgstr "另外，你也可以使用 `smallrye.jwt.new-token.signature-algorithm` 财产。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "and write a simpler API sequence:"
msgstr "并编写一个更简单的API序列。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Note the `sign` step can be combined with the <<encrypt-claims, encrypt>> step to produce `inner-signed and encrypted` tokens, see <<innersign-encrypt-claims, Sign the claims and encrypt the nested JWT token>> section."
msgstr "请注意， `sign` 步骤可与 xref:encrypt-claims[加密] 步骤结合使用，以生成 `inner-signed and encrypted` 令牌，请参阅 \" xref:innersign-encrypt-claims[签署声明并加密嵌套 JWT 令牌] \"部分。"

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Encrypt the claims"
msgstr "加密索赔"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"The claims can be encrypted immediately or after the `JSON Web Encryption` headers have been set the same way as they can be signed.\n"
"The only minor difference is that encrypting the claims always requires a `jwe()` `JwtEncryptionBuilder` transition given that the API has been optimized to support signing and inner-signing of the claims."
msgstr "可以立即加密权利要求，也可以在 `JSON Web Encryption` 标头设置后加密权利要求，加密方式与签名方式相同。唯一的细微差别是，由于 API 已优化为支持对权利要求进行签名和内部签名，对权利要求进行加密始终需要 `jwe()` `JwtEncryptionBuilder` 转换。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Note the `alg` (key management algorithm) header is set to `RSA-OAEP` and the `enc` (content encryption header) is set to `A256GCM` by default."
msgstr "注意 `alg` （密钥管理算法）头被设置为 `RSA-OAEP` ， `enc` （内容加密头）默认设置为 `A256GCM` 。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"RSA and Elliptic Curve (EC) public keys as well as symmetric secret keys can be used to encrypt the claims.\n"
"`ECDH-ES` and `A256KW` are the default algorithms for EC public and symmetric key encryption algorithms respectively."
msgstr "RSA 和椭圆曲线（EC）公开密钥以及对称密钥可用于加密报销单。 `ECDH-ES` 和 `A256KW` 分别是 EC 公开密钥和对称密钥加密算法的默认算法。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Note two encryption operations are done when creating an encrypted token:"
msgstr "注意在创建加密令牌时要进行两次加密操作。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"1) the generated content encryption key is encrypted by the key supplied with the API using the key encryption algorithm such as `RSA-OAEP`\n"
"2) the claims are encrypted by the generated content encryption key using the content encryption algorithm such as `A256GCM`."
msgstr "1) 生成的内容加密密钥由随 API 提供的密钥加密，使用密钥加密算法，如 `RSA-OAEP` 2) 索赔内容由生成的内容加密密钥加密，使用内容加密算法，如 `A256GCM` 。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can customize the key and content encryption algorithms, for example:"
msgstr "例如，你可以定制密钥和内容加密算法。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Alternatively you can use `smallrye.jwt.new-token.key-encryption-algorithm` and `smallrye.jwt.new-token.content-encryption-algorithm` properties to customize the key and content encryption algorithms:"
msgstr "另外，你可以使用 `smallrye.jwt.new-token.key-encryption-algorithm` 和 `smallrye.jwt.new-token.content-encryption-algorithm` 属性来定制密钥和内容加密算法。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"Note that when the token is directly encrypted by the public RSA or EC key it is not possible to verify which party sent the token.\n"
"Therefore, the secret keys should be preferred for directly encrypting the tokens, for example, when using JWT as cookies where a secret key is managed by the Quarkus endpoint with only this endpoint being both a producer and a consumer of the encrypted token."
msgstr "请注意，当令牌直接使用公开 RSA 或 EC 密钥加密时，就无法验证是哪一方发送了令牌。因此，秘密密钥应优先用于直接加密令牌，例如，在使用 JWT 作为 cookie 时，秘密密钥由 Quarkus 端点管理，只有该端点既是加密令牌的生产者，也是消费者。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "If you would like to use RSA or EC public keys to encrypt the token then it is recommended to sign the token first if the signing key is available, see the next <<innersign-encrypt-claims, Sign the claims and encrypt the nested JWT token>> section."
msgstr "如果您想使用 RSA 或 EC 公钥加密令牌，建议先签署令牌（如果有签署密钥），请参阅下一节 xref:innersign-encrypt-claims[签署声明并加密嵌套的 JWT 令牌] 。"

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Sign the claims and encrypt the nested JWT token"
msgstr "对索赔进行签名并对嵌套的JWT令牌进行加密"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "The claims can be signed and then the nested JWT token encrypted by combining the sign and encrypt steps."
msgstr "可以对索赔进行签名，然后通过结合签名和加密步骤对嵌套的JWT令牌进行加密。"

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Fast JWT Generation"
msgstr "快速生成JWT"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "If `smallrye.jwt.sign.key.location` or/and `smallrye.jwt.encrypt.key.location` properties are set then one can secure the existing claims (resources, maps, JsonObjects) with a single call:"
msgstr "如果 `smallrye.jwt.sign.key.location` 或/和 `smallrye.jwt.encrypt.key.location` 属性被设置，那么人们可以通过一次调用来确保现有的索赔（资源、地图、JsonObjects）。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "As mentioned above, `iat` (issued at), `exp` (expires at), `jti` (token identifier), `iss` (issuer) and `aud` (audience) claims will be added if needed."
msgstr "如上所述，如有需要，将添加 `iat` （签发时间）、 `exp` （失效时间）、 `jti` （令牌标识符）、 `iss` （签发者）和 `aud` （受众）的要求。"

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Dealing with the keys"
msgstr "处理钥匙的问题"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "`smallrye.jwt.sign.key.location` and `smallrye.jwt.encrypt.key.location` properties can be used to point to signing and encryption key locations. The keys can be located on the local file system, classpath, or fetched from the remote endpoints and can be in `PEM` or `JSON Web Key` (`JWK`) formats. For example:"
msgstr " `smallrye.jwt.sign.key.location` 和 属性可被用来指向签名和加密密钥的位置。密钥可以位于本地文件系统、classpath或从远程端点获取，可以是 或 ( ) 格式。例如。 `smallrye.jwt.encrypt.key.location` `PEM` `JSON Web Key` `JWK` "

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can also use MicroProfile `ConfigSource` to fetch the keys from the external services such as link:{vault-guide}[HashiCorp Vault] or other secret managers and use `smallrye.jwt.sign.key` and `smallrye.jwt.encrypt.key` properties instead:"
msgstr "你也可以使用MicroProfile `ConfigSource` 从外部服务（如 link:{vault-guide}[HashiCorp Vault] 或其他秘密管理器）获取密钥，并使用 `smallrye.jwt.sign.key` 和 `smallrye.jwt.encrypt.key` 属性来代替。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid ""
"where both `private.key.from.vault` and `public.key.from.vault` are the `PEM` or `JWK` formatted key values provided by the custom `ConfigSource`.\n"
"`smallrye.jwt.sign.key` and `smallrye.jwt.encrypt.key` can also contain only the Base64-encoded private or public keys values."
msgstr "其中 `private.key.from.vault` 和 `public.key.from.vault` 都是自定义 `ConfigSource` 提供的 `PEM` 或 `JWK` 格式化密钥值。 `smallrye.jwt.sign.key` 和 `smallrye.jwt.encrypt.key` 也可以只包含 Base64 编码的私钥或公钥值。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "However, please note, directly inlining the private keys in the configuration is not recommended. Use the `smallrye.jwt.sign.key` property only if you need to fetch a signing key value from the remote secret manager."
msgstr "然而，请注意，不建议在配置中直接内联私钥。只有当你需要从远程秘密管理器中获取一个签名密钥值时，才使用 `smallrye.jwt.sign.key` 属性。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "The keys can also be loaded by the code which builds the token and supplied to JWT Build API."
msgstr "密钥也可以由构建令牌的代码加载并提供给JWT Build API。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "If you need to sign and/or encrypt the token using the symmetric secret key then consider using `io.smallrye.jwt.util.KeyUtils` to generate a SecretKey of the required length."
msgstr "如果你需要使用对称秘钥对令牌进行签名和/或加密，那么可以考虑使用 `io.smallrye.jwt.util.KeyUtils` ，生成一个所需长度的秘钥。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "For example, one needs to have a 64 byte key to sign using the `HS512` algorithm (`512/8`) and a 32 byte key to encrypt the content encryption key with the `A256KW` algorithm (`256/8`):"
msgstr "例如，人们需要有一个64字节的密钥来使用 `HS512` 算法( `512/8` )进行签名，并需要一个32字节的密钥来使用 `A256KW` 算法( `256/8` )加密内容加密密钥。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "You can also consider using a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format to store a secret key on a secure file system and refer to it using either `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` properties, for example:"
msgstr "你也可以考虑使用 `JSON Web Key` （JWK）或 `JSON Web Key Set` （JWK Set）格式，在安全文件系统中存储秘密密钥，并使用 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` 属性来引用它，例如。"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "or"
msgstr "或"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "`io.smallrye.jwt.util.KeyUtils` can also be used to generate a pair of asymmetric RSA or EC keys. These keys can be stored using a `JWK`, `JWK Set` or `PEM` format."
msgstr " `io.smallrye.jwt.util.KeyUtils` 也可以用来生成一对非对称的RSA或EC密钥。这些密钥可以使用 , 或 的格式来存储。 `JWK` `JWK Set` `PEM` "

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "SmallRye JWT Builder configuration"
msgstr "SmallRye JWT Builder配置"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "SmallRye JWT supports the following properties which can be used to customize the way claims are signed and/or encrypted:"
msgstr "SmallRye JWT支持以下属性，可用于自定义签名和/或加密索赔的方式。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "Property Name"
msgstr "物业名称"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, no-wrap
msgid "Default"
msgstr "默认"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.sign.key.location"
msgstr "Smallrye.jwt.sign.key.location"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "`none`"
msgstr "`none`"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Location of a private key which will be used to sign the claims when either a no-argument `sign()` or `innerSign()` method is called."
msgstr "私钥的位置，当调用无参数的 `sign()` 或 `innerSign()` 方法时，该私钥将被用于签署索赔。"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.sign.key"
msgstr "Smallrye.jwt.sign.key"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "none"
msgstr "无"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Key value which will be used to sign the claims when either a no-argument sign() or innerSign() method is called."
msgstr "当调用无参数的sign()或innerSign()方法时，将用于签署索赔的密钥值。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.sign.key.id"
msgstr "smallrye.jwt.sign.key.id"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Signing key identifier which is checked only when JWK keys are used."
msgstr "签名钥匙的标识符，只有在使用JWK钥匙时才会检查。"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.encrypt.key.location"
msgstr "Smallrye.jwt.encrypt.key.location"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Location of a public key which will be used to encrypt the claims or inner JWT when a no-argument `encrypt()` method is called."
msgstr "公钥的位置，当调用无参数的 `encrypt()` 方法时，该公钥将被用于加密索赔或内部JWT。"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.sign.relax-key-validation"
msgstr "Smallrye.jwt.sign.relax-key-validation"

#: _versions/2.16/guides/security-jwt-build.adoc
msgid "false"
msgstr "false"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Relax the validation of the signing keys."
msgstr "放松对签名钥匙的验证。"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.encrypt.key"
msgstr "Smallrye.jwt.encrypt.key"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Key value which will be used to encrypt the claims or inner JWT when a no-argument encrypt() method is called."
msgstr "当调用无参数encrypt()方法时，将用于加密索赔或内部JWT的密钥值。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.encrypt.key.id"
msgstr "smallrye.jwt.encrypt.key.id"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Encryption key identifier which is checked only when JWK keys are used."
msgstr "加密密钥标识符，只有在使用JWK密钥时才会检查。"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.encrypt.relax-key-validation"
msgstr "Smallrye.jwt.encrypt.relax-key-validation"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Relax the validation of the encryption keys."
msgstr "放松对加密密钥的验证。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.signature-algorithm"
msgstr "smallrye.jwt.new-token.signature-algorithm"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "RS256"
msgstr "RS256"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Signature algorithm. This property will be checked if the JWT signature builder has not already set the signature algorithm."
msgstr "签名算法。如果JWT签名生成器尚未设置签名算法，该属性将被检查。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.key-encryption-algorithm"
msgstr "smallrye.jwt.new-token.key-encryption-algorithm"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "RSA-OAEP"
msgstr "RSA-OAEP"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Key encryption algorithm. This property will be checked if the JWT encryption builder has not already set the key encryption algorithm."
msgstr "密钥加密算法。如果JWT加密生成器尚未设置密钥加密算法，则将检查该属性。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.content-encryption-algorithm"
msgstr "smallrye.jwt.new-token.content-encryption-algorithm"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "A256GCM"
msgstr "A256GCM"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Content encryption algorithm. This property will be checked if the JWT encryption builder has not already set the content encryption algorithm."
msgstr "内容加密算法。如果JWT加密生成器尚未设置内容加密算法，则将检查该属性。"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.new-token.lifespan"
msgstr "Smallrye.jwt.new-token.lifespan"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "300"
msgstr "300"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Token lifespan in seconds which will be used to calculate an `exp` (expiry) claim value if this claim has not already been set."
msgstr "代币寿命，以秒为单位，如果这个要求尚未设置，将用于计算 `exp` （到期）要求值。"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.new-token.issuer"
msgstr "Smallrye.jwt.new-token.issuer"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Token issuer which can be used to set an `iss` (issuer) claim value if this claim has not already been set."
msgstr "代币发行者，如果这个主张还没有被设置，可以用来设置 `iss` （发行者）主张值。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.audience"
msgstr "smallrye.jwt.new-token.audience"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Token audience which can be used to set an `aud` (audience) claim value if this claim has not already been set."
msgstr "代币受众，如果这个主张还没有被设置，可以用来设置 `aud` （受众）主张值。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.new-token.override-matching-claims"
msgstr "smallrye.jwt.new-token.override-matching-claims"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Set this property to `true` for `smallrye.jwt.new-token.issuer` and `smallrye.jwt.new-token.audience` values to override the already initialized `iss` (issuer) and `aud` (audience) claims."
msgstr "对于 `smallrye.jwt.new-token.issuer` 和 `smallrye.jwt.new-token.audience` 的值，将此属性设置为 `true` ，以覆盖已经初始化的 `iss` （发行者）和 `aud` （受众）的要求。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.type"
msgstr "smallrye.jwt.keystore.type"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "`JKS`"
msgstr " `JKS` "

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "This property can be used to customize a keystore type if either `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` or both of these properties point to a `KeyStore` file. If it is not set then the file name will be checked to determine the keystore type before defaulting to `JKS`."
msgstr "如果 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` 或这两个属性都指向 `KeyStore` 文件，该属性可用于自定义密钥库类型。如果没有设置，那么文件名将被检查以确定密钥库类型，然后默认为 `JKS` 。"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.keystore.provider"
msgstr "Smallrye.jwt.keystore.provider"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "This property can be used to customize a `KeyStore` provider if `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` point to a `KeyStore` file."
msgstr "如果 `smallrye.jwt.sign.key.location` 或 `smallrye.jwt.encrypt.key.location` 指向一个 `KeyStore` 文件，该属性可用于定制一个 `KeyStore` 提供者。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.password"
msgstr "smallrye.jwt.keystore.password"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "Keystore password. If `smallrye.jwt.sign.key.location` or `smallrye.jwt.encrypt.key.location` point to a `KeyStore` file then this property has be set."
msgstr "如果 `smallrye.jwt.sign.key.location` 或/和 `smallrye.jwt.encrypt.key.location` 属性被设置，那么人们可以通过一次调用来确保现有的索赔（资源、地图、JsonObjects）。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.encrypt.key.alias"
msgstr "smallrye.jwt.keystore.encrypt.key.alias"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "This property has to be set to identify a public encryption key which will be extracted from `KeyStore` from a matching certificate if `smallrye.jwt.encrypt.key.location` points to a `KeyStore` file."
msgstr "必须设置此属性以确定公开加密密钥，如果 `smallrye.jwt.encrypt.key.location` 指向 `KeyStore` 文件，则将从匹配的证书中提取 `KeyStore` 。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.sign.key.alias"
msgstr "smallrye.jwt.keystore.sign.key.alias"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "This property has to be set to identify a private signing key if `smallrye.jwt.sign.key.location` points to a `KeyStore` file."
msgstr "如果 `smallrye.jwt.sign.key.location` 指向一个 `KeyStore` 文件，则必须设置该属性以识别一个私人签名钥匙。"

#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.sign.key.password"
msgstr "smallrye.jwt.keystore.sign.key.password"

#. type: Table
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy, no-wrap
msgid "This property may be set if a private signing key's password in `KeyStore` is different to `smallrye.jwt.keystore.password` when `smallrye.jwt.sign.key.location` points to a `KeyStore` file."
msgstr "当 `smallrye.jwt.sign.key.location` 指向 `KeyStore` 文件时，如果 `KeyStore` 中的私人签名密钥的密码与 `smallrye.jwt.keystore.password` 不同，则可设置此属性。"

#. type: Title ==
#: _versions/2.16/guides/security-jwt-build.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON网络令牌]"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON网络签名]"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON网络加密]"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON网络算法]"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J]"
msgstr "link:https://bitbucket.org/b_c/jose4j/wiki/Home[Jose4J]"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "xref:security-openid-connect.adoc[Using OpenID Connect to Protect Service Applications]"
msgstr "xref:security-openid-connect.adoc[使用 OpenID Connect 保护服务应用程序]"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "xref:security-jwt.adoc[Using Smallrye JWT to Protect Service Applications]"
msgstr "xref:security-jwt.adoc[使用 Smallrye JWT 保护服务应用程序]"

#. type: Plain text
#: _versions/2.16/guides/security-jwt-build.adoc
#, fuzzy
msgid "xref:security-overview-concept.adoc[Quarkus Security overview]"
msgstr "xref:security-overview-concept.adoc[Quarkus 安全概述]"
