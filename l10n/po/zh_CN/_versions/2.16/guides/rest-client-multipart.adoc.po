# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-05-05 19:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Using the REST Client with Multipart"
msgstr "使用Multipart的REST客户端"

#. type: delimited block =
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "This guide is about the multipart support of the REST Client compatible with https://resteasy.dev[RESTEasy Classic] which used to be the default JAX-RS implementation until Quarkus 2.8."
msgstr ""

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"It is now recommended to use RESTEasy Reactive, which supports equally well traditional blocking workloads and reactive workloads.\n"
"For more information about RESTEasy Reactive,\n"
"please see the xref:rest-client-reactive.adoc[REST Client Reactive guide] and, for the server side, the xref:rest-json.adoc[introductory REST JSON guide] or the more detailed xref:resteasy-reactive.adoc[RESTEasy Reactive guide]."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "RESTEasy has rich support for the `multipart/*` and `multipart/form-data` mime types. The multipart mime format is used to pass lists of content bodies. Multiple content bodies are embedded in one message. `multipart/form-data` is often found in web application HTML Form documents and is generally used to upload files. The form-data format is the same as other multipart formats, except that each inlined piece of content has a name associated with it."
msgstr ""

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"This guide explains how to use the RESTEasy REST Client with Multipart in order to interact with REST APIs\n"
"requiring `multipart/form-data` content-type with very little effort."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "The solution is located in the `rest-client-multipart-quickstart` {quickstarts-tree-url}/rest-client-multipart-quickstart[directory]."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"This command generates the Maven project with a REST endpoint and imports the `rest-client` and `resteasy` extensions.\n"
"It also adds the `resteasy-multipart` extension to support `multipart/form-data` requests."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Setting up the model"
msgstr ""

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"In this guide we will be demonstrating how to invoke a REST service accepting `multipart/form-data` input.\n"
"We are assuming the payload is well-known before the request is sent, so we can model as a POJO."
msgstr ""

#. type: delimited block =
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "If the payload is unknown, you can also use the RESTEasy custom API instead. If that's the case, see the RESTEasy Multipart Providers link at the end of the guide."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Our first order of business is to set up the model we will be using to define the `multipart/form-data` payload, in the form of a `MultipartBody` POJO."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Create a `src/main/java/org/acme/rest/client/multipart/MultipartBody.java` file and set the following content:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "The purpose of the annotations in the code above is the following:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "`@FormParam` is a standard JAX-RS annotation used to define a form parameter contained within a request entity body"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "`@PartType` is a RESTEasy specific annotation required when a client performs a multipart request and defines the content type for the part."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Create the interface"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Using the RESTEasy REST Client is as simple as creating an interface using the proper JAX-RS and MicroProfile annotations. In our case the interface should be created at `src/main/java/org/acme/rest/client/multipart/MultipartService.java` and have the following content:"
msgstr ""

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"The `sendMultipartData` method gives our code the ability to POST a `multipart/form-data` request to our Echo service (running in the same server for demo purposes).\n"
"Because in this demo we have the exact knowledge of the `multipart/form-data` packets, we can map them to the model class created in the previous section using the `@org.jboss.resteasy.annotations.providers.multipart.MultipartForm` annotation."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "The client will handle all the networking and marshalling leaving our code clean of such technical details."
msgstr ""

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"`@RegisterRestClient` allows Quarkus to know that this interface is meant to be available for\n"
"CDI injection as a REST Client"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "`@Path` and `@POST` are the standard JAX-RS annotations used to define how to access the service"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "`@MultipartForm` defines the parameter as a value object for incoming/outgoing request/responses of the multipart/form-data mime type."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "`@Consumes` defines the expected content-type consumed by this request (parameters)"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "`@Produces` defines the expected content-type produced by this request (return type)"
msgstr ""

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"While `@Consumes` and `@Produces` are optional as auto-negotiation is supported,\n"
"it is heavily recommended to annotate your endpoints with them to define precisely the expected content-types."
msgstr ""

#. type: delimited block =
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "It will allow to narrow down the number of JAX-RS providers (which can be seen as converters) included in the native executable."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Create the configuration"
msgstr "创建配置"

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"In order to determine the base URL to which REST calls will be made, the REST Client uses configuration from `application.properties`.\n"
"The name of the property needs to follow a certain convention which is best displayed in the following code:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Having this configuration means that all requests performed using `org.acme.rest.client.multipart.MultipartService` will use `http://localhost:8080/ ` as the base URL."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Note that `org.acme.rest.client.multipart.MultipartService` _must_ match the fully qualified name of the `MultipartService` interface we created in the previous section."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Create the JAX-RS resource"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Create the `src/main/java/org/acme/rest/client/multipart/MultipartClientResource.java` file with the following content:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Note that in addition to the standard CDI `@Inject` annotation, we also need to use the MicroProfile `@RestClient` annotation to inject `MultipartService`."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Creating the server"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "For demo purposes, let's create a simple Echo endpoint that will act as the server part."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Create the directory `src/main/java/org/acme/rest/client/multipart/server` and include a `EchoService.java` file with the following content:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "This will just return the request body and it's useful for testing purposes."
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Update the test"
msgstr ""

#: _versions/2.16/guides/rest-client-multipart.adoc
msgid ""
"We also need to update the functional test to reflect the changes made to the endpoint.\n"
"Edit the `src/test/java/org/acme/rest/client/multipart/MultipartClientResourceTest.java` file to:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "The code above uses link:https://rest-assured.io/[REST Assured] to assert that the returned content from the echo service contains multipart elements"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Because the test runs in a different port, we also need to include an `application.properties` in our `src/test/resources` with the following content:"
msgstr ""

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "Run the application with:"
msgstr "使用以下命令运行该应用程序:"

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "In a terminal, run `curl -X POST http://localhost:8080/client/multipart`"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "You should see an output similar to:"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "As usual, the application can be packaged using:"
msgstr "像往常一样，该应用程序能够使用以下方式进行打包:"

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "And executed with `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "You can also generate the native executable with:"
msgstr "你也可以通过以下命令生成本地可执行文件:"

#. type: Title ==
#: _versions/2.16/guides/rest-client-multipart.adoc
#, no-wrap
msgid "Further reading"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "link:https://docs.jboss.org/resteasy/docs/4.5.6.Final/userguide/html/Multipart.html[RESTEasy Multipart Provider]"
msgstr ""

#. type: Plain text
#: _versions/2.16/guides/rest-client-multipart.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-rest-client-1.4.1/microprofile-rest-client-1.4.1.html[MicroProfile Rest Client specification]"
msgstr ""
