# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-28 16:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with AMQP 1.0"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with AMQP 1.0."
msgstr "本指南演示了你的Quarkus应用程序如何使用SmallRye Reactive Messaging来与AMQP 1.0进行交互。"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"If you want to use RabbitMQ, you should use the xref:rabbitmq.adoc[SmallRye Reactive Messaging RabbitMQ extension].\n"
"Alternatively, if you want to use RabbitMQ with AMQP 1.0 you need to enable the AMQP 1.0 plugin in the RabbitMQ broker;\n"
"check the https://smallrye.io/smallrye-reactive-messaging/smallrye-reactive-messaging/3.9/amqp/amqp.html#amqp-rabbitmq[connecting to RabbitMQ]\n"
"documentation."
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"In this guide, we are going to develop two applications communicating with an AMQP broker.\n"
"We will use https://activemq.apache.org/components/artemis/[Artemis], but you can use any AMQP 1.0 broker.\n"
"The first application sends a _quote request_ to an AMQP queue and consumes messages from the _quote_ queue.\n"
"The second application receives the _quote request_ and sends a _quote_ back."
msgstr ""

#: _versions/3.2/guides/amqp.adoc
msgid ""
"The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.\n"
"For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.\n"
"At the same time the generated request id is sent over the `quote-requests` queue."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to a queue named `quotes`."
msgstr "反过来，第二个应用程序 `processor` ，将读取 `quote-requests` 队列，将一个随机价格放入报价，并将其发送给一个名为 `quotes` 的队列。"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.\n"
"The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create applications step by step.\n"
"However, you can go right to the completed example."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "The solution is located in the `amqp-quickstart` link:{quickstarts-tree-url}/amqp-quickstart[directory]."
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "首先，我们需要创建两个项目： _producer_ 和 _processor_ 。"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "To create the _producer_ project, in a terminal run:"
msgstr "要创建 _producer_ 项目，请在终端中运行："

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr "这个命令会创建项目结构，并选择我们将要使用的两个Quarkus扩展："

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "RESTEasy Reactive and its Jackson support to handle JSON payloads"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "The Reactive Messaging AMQP connector"
msgstr "响应式消息AMQP连接器"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "要创建 _processor_ 项目，请在同一目录下运行："

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "At that point you should have the following structure:"
msgstr "此时，你应该有如下的结构："

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Open the two projects in your favorite IDE."
msgstr "在你喜欢的IDE中打开这两个项目。"

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "The Quote object"
msgstr ""

#: _versions/3.2/guides/amqp.adoc
msgid ""
"The `Quote` class will be used in both `producer` and `processor` projects.\n"
"For the sake of simplicity we will duplicate the class.\n"
"In both projects, create the `src/main/java/org/acme/amqp/model/Quote.java` file, with the following content:"
msgstr ""

#: _versions/3.2/guides/amqp.adoc
msgid ""
"JSON representation of `Quote` objects will be used in messages sent to the AMQP queues\n"
"and also in the server-sent events sent to browser clients."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Quarkus has built-in capabilities to deal with JSON AMQP messages."
msgstr "Quarkus有内置的功能来处理JSON AMQP消息。"

#. type: Block title
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"The `@RegisterForReflection` annotation instructs Quarkus to include the class (including fields and methods) when building the native executable.\n"
"This will be useful later when we run the applications as native executables inside containers.\n"
"Without, the native compilation would remove the fields and methods during the dead-code elimination phase."
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Sending quote request"
msgstr "发送报价请求"

#: _versions/3.2/guides/amqp.adoc
msgid "Inside the `producer` project locate the generated  `src/main/java/org/acme/amqp/producer/QuotesResource.java` file, and update the content to be:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "注入一个响应式消息 `Emitter` ，来向 `quote-requests` 通道发送消息。"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "On a post request, generate a random UUID and send it to the AMQP queue using the emitter."
msgstr "在post请求中，生成一个随机的UUID，并使用emitter将其发送给AMQP队列。"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"The `quote-requests` channel is going to be managed as a AMQP queue, as that's the only connector on the classpath.\n"
"If not indicated otherwise, like in this example, Quarkus uses the channel name as AMQP queue name.\n"
"So, in this example, the application sends messages to the `quote-requests` queue."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "When you have multiple connectors, you would need to indicate which connector you want to use in the application configuration."
msgstr "当你有多个连接器时，你需要在应用程序配置中指出你想要使用哪个连接器。"

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Processing quote requests"
msgstr "处理报价请求"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"Now let's consume the quote request and give out a price.\n"
"Inside the `processor` project, locate the `src/main/java/org/acme/amqp/processor/QuoteProcessor.java` file and add the following:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr "表示该方法消费 `requests` 通道中的项"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr "表示方法返回的对象被发送给 `quotes` 通道"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "表示该处理是 _blocking_ ，不能在调用者线程上运行。"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "The `process` method is called for every AMQP message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` queue."
msgstr "`process` 方法被 `quote-requests` 队列中的每一个AMQP消息调用，并将 `Quote` 对象发送给 `quotes` 队列。"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"Because we want to consume messages from the `quotes-requests` queue into the `requests` channel, we need to configure this association.\n"
"Open the `src/main/resources/application.properties` file and add:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "The configuration keys are structured as follows:"
msgstr "配置键的结构如下："

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value` "

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "In our case, we want to configure the `address` attribute to indicate the name of the queue."
msgstr "在我们的情形中，我们想配置 `address` 属性来表示队列的名称。"

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Receiving quotes"
msgstr "接收报价"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"Back to our `producer` project.\n"
"Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "使用 `@Channel` 修饰符注入 `quotes` 通道"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "表示内容是使用 `Server Sent Events` 发送的"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Returns the stream (_Reactive Stream_)"
msgstr "返回流 (_Reactive Stream_) 。"

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "The HTML page"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "最后，HTML页面使用SSE读取转换后的价格。"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr "在 `producer` 项目中创建 `src/main/resources/META-INF/resources/quotes.html` 文件，内容如下："

#: _versions/3.2/guides/amqp.adoc
msgid ""
"Nothing spectacular here.\n"
"On each received quote, it updates the page."
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Get it running"
msgstr "让它运行起来"

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "You just need to run both applications using:"
msgstr "你只需使用以下命令运行这两个应用程序："

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "And, in a separate terminal:"
msgstr "并且，在另一台终端中："

#: _versions/3.2/guides/amqp.adoc
msgid ""
"Quarkus starts a AMQP broker automatically, configures the application and shares the broker instance between different applications.\n"
"See xref:amqp-dev-services.adoc[Dev Services for AMQP] for more details."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "在你的浏览器中打开 `http://localhost:8080/quotes.html` ，点击按钮来请求一些报价。"

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Running in JVM or Native mode"
msgstr "在JVM或本地模式下运行"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"When not running in dev or test mode, you will need to start your AMQP broker.\n"
"You can follow the instructions from the https://activemq.apache.org/components/artemis/documentation/latest/using-server.html[Apache ActiveMQ Artemis website] or create a `docker-compose.yaml` file with the following content:"
msgstr ""

#: _versions/3.2/guides/amqp.adoc
msgid ""
"Note how the AMQP broker location is configured.\n"
"The `amqp.host` and `amqp.port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr "首先，确保你停止了应用程序，并在JVM模式下使用以下命令构建这两个应用程序："

#: _versions/3.2/guides/amqp.adoc
msgid ""
"Once packaged, run `docker compose up --build`.\n"
"The UI is exposed on http://localhost:8080/quotes.html"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "To run your applications as native, first we need to build the native executables:"
msgstr "要以本地方式运行你的应用程序，我们首先需要构建本地可执行文件："

#: _versions/3.2/guides/amqp.adoc
msgid ""
"The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.\n"
"Then, run the system using:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/amqp.adoc
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "与之前一样，UI也是在 http://localhost:8080/quotes.html"

#. type: Title ==
#: _versions/3.2/guides/amqp.adoc
#, no-wrap
msgid "Going further"
msgstr "进一步探索"

#: _versions/3.2/guides/amqp.adoc
msgid ""
"This guide has shown how you can interact with AMQP 1.0 using Quarkus.\n"
"It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr ""

#: _versions/3.2/guides/amqp.adoc
msgid ""
"If you did the Kafka quickstart, you have realized that it's the same code.\n"
"The only difference is the connector configuration and the JSON mapping."
msgstr ""
