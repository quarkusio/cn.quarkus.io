# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-28 16:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy, no-wrap
msgid "Getting Started to SmallRye Reactive Messaging with RabbitMQ"
msgstr "开始使用RabbitMQ的SmallRye反应式消息传递"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "This guide demonstrates how your Quarkus application can utilize SmallRye Reactive Messaging to interact with RabbitMQ."
msgstr "本指南演示了您的 Quarkus 应用程序如何利用 SmallRye响应式消息传递与RabbitMQ进行交互。"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"In this guide, we are going to develop two applications communicating with a RabbitMQ broker.\n"
"The first application sends a _quote request_ to the RabbitMQ _quote requests_ exchange and consumes messages from the _quote_ queue.\n"
"The second application receives the _quote request_ and sends a _quote_ back."
msgstr "在本指南中，我们将开发两个与 RabbitMQ 代理通信的应用程序。第一个应用程序向 RabbitMQ _报价_ 请求交换发送 _报价_ 请求，并从 _报价_ 队列中消费消息。第二个应用程序接收 _报价_ 请求并发回 _报价_ 。"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"The first application, the `producer`, will let the user request some quotes over an HTTP endpoint.\n"
"For each quote request, a random identifier is generated and returned to the user, to put the quote request on _pending_.\n"
"At the same time the generated request id is sent to the `quote-requests` exchange."
msgstr "第一个应用程序是 `producer` ，用户可以通过 HTTP 端点请求一些报价。对于每个报价请求，都会生成一个随机标识符并返回给用户，以便将报价请求置于 _待处理_ 状态。同时，生成的请求 ID 会发送到 `quote-requests` 交易所。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "The second application, the `processor`, in turn, will read from the `quote-requests` queue put a random price to the quote, and send it to an exchange named `quotes`."
msgstr "第二个应用程序， `processor` ，反过来，将从 `quote-requests` 队列中读取将一个随机价格放到报价中，并将其发送到一个名为 `quotes` 的交易所。"

#: _versions/3.2/guides/rabbitmq.adoc
msgid ""
"Lastly, the `producer` will read the quotes and send them to the browser using server-sent events.\n"
"The user will therefore see the quote price updated from _pending_ to the received price in real-time."
msgstr "最后， `producer` 将读取报价，并使用服务器发送事件将其发送给浏览器。因此，用户将实时看到报价从 _pending_ 更新为收到的价格。"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/3.2/guides/rabbitmq.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create applications step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议你按照下面章节中的说明，一步一步地创建应用程序。但是，你可以直接转到已完成的示例。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "The solution is located in the `rabbitmq-quickstart` link:{quickstarts-tree-url}/rabbitmq-quickstart[directory]."
msgstr "该解决方案位于 `rabbitmq-quickstart` {quickstarts-tree-url}/rabbitmq-quickstart[目录]中。"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "First, we need to create two projects: the _producer_ and the _processor_."
msgstr "首先，我们需要创建两个项目： _producer_ 和 _processor_ 。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "To create the _producer_ project, in a terminal run:"
msgstr "要创建 _producer_ 项目，请在终端中运行："

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "This command creates the project structure and select the two Quarkus extensions we will be using:"
msgstr "这个命令会创建项目结构，并选择我们将要使用的两个Quarkus扩展："

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "The Reactive Messaging RabbitMQ connector"
msgstr "Reactive Messaging RabbitMQ连接器"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "RESTEasy Reactive and it's Jackson support to handle JSON payloads"
msgstr "RESTEasy Reactive 及其 Jackson 支持处理 JSON 有效载荷"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "To create the _processor_ project, from the same directory, run:"
msgstr "要创建 _processor_ 项目，请在同一目录下运行："

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "At that point you should have the following structure:"
msgstr "此时，你应该有如下的结构："

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Open the two projects in your favorite IDE."
msgstr "在你喜欢的IDE中打开这两个项目。"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy, no-wrap
msgid "The Quote object"
msgstr "报价对象"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"The `Quote` class will be used in both `producer` and `processor` projects.\n"
"For the sake of simplicity we will duplicate the class.\n"
"In both projects, create the `src/main/java/org/acme/rabbitmq/model/Quote.java` file, with the following content:"
msgstr "`Quote` 类将在 `producer` 和 `processor` 项目中使用。为简单起见，我们将复制该类。在这两个项目中，创建 `src/main/java/org/acme/rabbitmq/model/Quote.java` 文件，内容如下："

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"JSON representation of `Quote` objects will be used in messages sent to the RabbitMQ queues\n"
"and also in the server-sent events sent to browser clients."
msgstr "`Quote` 对象的 JSON 表示法将用于发送到 RabbitMQ 队列的消息以及发送到浏览器客户端的服务器发送事件中。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "Quarkus has built-in capabilities to deal with JSON RabbitMQ messages."
msgstr "Quarkus具有处理JSON RabbitMQ消息的内置功能。"

#. type: Block title
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "@RegisterForReflection"
msgstr "@RegisterForReflection"

#: _versions/3.2/guides/rabbitmq.adoc
msgid ""
"The `@RegisterForReflection` annotation instructs Quarkus to include the class (including fields and methods) when building the native executable.\n"
"This will be useful later when we run the applications as native executables inside containers.\n"
"Without, the native compilation would remove the fields and methods during the dead-code elimination phase."
msgstr "`@RegisterForReflection` 注释指示Quarkus在构建本地可执行文件时包含类（包括字段和方法）。这在以后我们在容器中作为本地可执行文件运行应用程序时将会很有用。如果没有这个注释，本地编译会在死代码清除阶段删除这些字段和方法。"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Sending quote request"
msgstr "发送报价请求"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "Inside the `producer` project locate the generated  `src/main/java/org/acme/rabbitmq/producer/QuotesResource.java` file, and update the content to be:"
msgstr "在 `producer` 项目中找到生成的 `src/main/java/org/acme/rabbitmq/producer/QuotesResource.java` 文件，并将内容更新为"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Inject a Reactive Messaging `Emitter` to send messages to the `quote-requests` channel."
msgstr "注入一个响应式消息 `Emitter` ，来向 `quote-requests` 通道发送消息。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "On a post request, generate a random UUID and send it to the RabbitMQ queue using the emitter."
msgstr "在一个post请求中，生成一个随机UUID并使用发射器将其发送到RabbitMQ队列。"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"This channel is mapped to a RabbitMQ exchange using the configuration we will add to the `application.properties` file.\n"
"Open the `src/main/resource/application.properties` file and add:"
msgstr "该通道使用我们将添加到 `application.properties` 文件中的配置映射到 RabbitMQ 交换。打开 `src/main/resource/application.properties` 文件并添加"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"All we need to specify is the `smallrye-rabbitmq` connector.\n"
"By default, reactive messaging maps the channel name `quote-requests` to the same RabbitMQ exchange name."
msgstr "我们只需指定 `smallrye-rabbitmq` 连接器。默认情况下，反应式消息传递会将通道名称 `quote-requests` 映射到相同的 RabbitMQ 交换名称。"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Processing quote requests"
msgstr "处理报价请求"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"Now let's consume the quote request and give out a price.\n"
"Inside the `processor` project, locate the `src/main/java/org/acme/rabbitmq/processor/QuoteProcessor.java` file and add the following:"
msgstr "现在我们来处理报价请求并给出价格。在 `processor` 项目中，找到 `src/main/java/org/acme/rabbitmq/processor/QuoteProcessor.java` 文件并添加以下内容："

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Indicates that the method consumes the items from the `requests` channel"
msgstr "表示该方法消费 `requests` 通道中的项"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Indicates that the objects returned by the method are sent to the `quotes` channel"
msgstr "表示方法返回的对象被发送给 `quotes` 通道"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Indicates that the processing is _blocking_ and cannot be run on the caller thread."
msgstr "表示该处理是 _blocking_ ，不能在调用者线程上运行。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "The `process` method is called for every RabbitMQ message from the `quote-requests` queue, and will send a `Quote` object to the `quotes` exchange."
msgstr " `process` 方法为来自 `quote-requests` 队列的每条 RabbitMQ 消息被调用，并将发送一个 `Quote` 对象到 `quotes` 交换机。"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"As with the previous example we need to configure the connectors in the `application.properties` file.\n"
"Open the `src/main/resources/application.properties` file and add:"
msgstr "与上一个示例一样，我们需要在 `application.properties` 文件中配置连接器。打开 `src/main/resources/application.properties` 文件并添加"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"Note that in this case we have one incoming and one outgoing connector configuration, each one distinctly named.\n"
"The configuration keys are structured as follows:"
msgstr "请注意，在这种情况下，我们有一个传入和一个传出连接器配置，每个配置都有不同的名称。配置键的结构如下"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "`mp.messaging.[outgoing|incoming].{channel-name}.property=value`"
msgstr "`mp.messaging.[outgoing|incoming].{channel-name}.property=value` "

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "The `channel-name` segment must match the value set in the `@Incoming` and `@Outgoing` annotation:"
msgstr "`channel-name` 片段必须与 `@Incoming` 和 `@Outgoing` 注解中设定的值相匹配:"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "`quote-requests` -> RabbitMQ queue from which we read the quote requests"
msgstr " `quote-requests` → RabbitMQ队列，我们从中读取报价请求"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid "`quotes` -> RabbitMQ exchange in which we write the quotes"
msgstr " `quotes` → RabbitMQ 交易所，我们在其中写入报价"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Receiving quotes"
msgstr "接收报价"

#: _versions/3.2/guides/rabbitmq.adoc
msgid ""
"Back to our `producer` project.\n"
"Let's modify the `QuotesResource` to consume quotes, bind it to an HTTP endpoint to send events to clients:"
msgstr "回到我们的 `producer` 项目。让我们修改 `QuotesResource` 来消费报价，将其绑定到一个HTTP端点，来向客户端发送事件："

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Injects the `quotes` channel using the `@Channel` qualifier"
msgstr "使用 `@Channel` 修饰符注入 `quotes` 通道"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Indicates that the content is sent using `Server Sent Events`"
msgstr "表示内容是使用 `Server Sent Events` 发送的"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Returns the stream (_Reactive Stream_)"
msgstr "返回流 (_Reactive Stream_) 。"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"Again we need to configure the incoming `quotes` channel inside `producer` project.\n"
"Add the following inside `application.properties` file:"
msgstr "同样，我们需要在 `producer` 项目中配置传入的 `quotes` 通道。在 `application.properties` 文件中添加以下内容："

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy, no-wrap
msgid "The HTML page"
msgstr "HTML页面"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Final touch, the HTML page reading the converted prices using SSE."
msgstr "最后，HTML页面使用SSE读取转换后的价格。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Create inside the `producer` project `src/main/resources/META-INF/resources/quotes.html` file, with the following content:"
msgstr "在 `producer` 项目中创建 `src/main/resources/META-INF/resources/quotes.html` 文件，内容如下："

#: _versions/3.2/guides/rabbitmq.adoc
msgid ""
"Nothing spectacular here.\n"
"On each received quote, it updates the page."
msgstr "这里没有什么特别之处。对于每一个收到的报价，它都会更新页面。"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Get it running"
msgstr "让它运行起来"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "You just need to run both applications using:"
msgstr "你只需使用以下命令运行这两个应用程序："

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "And, in a separate terminal:"
msgstr "并且，在另一台终端中："

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"Quarkus starts a RabbitMQ broker automatically, configures the application and shares the broker instance between different applications.\n"
"See xref:rabbitmq-dev-services.adoc[Dev Services for RabbitMQ] for more details."
msgstr "Quarkus 会自动启动 RabbitMQ 代理，配置应用程序并在不同应用程序之间共享代理实例。有关详细信息，请参阅 xref:rabbitmq-dev-services.adoc[RabbitMQ 的开发服务] 。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "Open `http://localhost:8080/quotes.html` in your browser and request some quotes by clicking the button."
msgstr "在你的浏览器中打开 `http://localhost:8080/quotes.html` ，点击按钮来请求一些报价。"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Running in JVM or Native mode"
msgstr "在JVM或本地模式下运行"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"When not running in dev or test mode, you will need to start your RabbitMQ broker.\n"
"You can follow the instructions from the https://hub.docker.com/_/rabbitmq[RabbitMQ Docker website] or create a `docker-compose.yaml` file with the following content:"
msgstr "不在开发或测试模式下运行时，您需要启动 RabbitMQ 代理。您可以按照 link:https://hub.docker.com/_/rabbitmq[RabbitMQ Docker 网站] 上的说明进行操作，或创建一个包含以下内容的 `docker-compose.yaml` 文件："

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"Note how the RabbitMQ broker location is configured.\n"
"The `rabbitmq-host` and `rabbitmq-port` (`AMQP_HOST` and `AMQP_PORT` environment variables) properties configure location."
msgstr "请注意 RabbitMQ 代理位置是如何配置的。 `rabbitmq-host` 和 `rabbitmq-port` （ `AMQP_HOST` 和 `AMQP_PORT` 环境变量）属性配置位置。"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "First, make sure you stopped the applications, and build both applications in JVM mode with:"
msgstr "首先，确保你停止了应用程序，并在JVM模式下使用以下命令构建这两个应用程序："

#: _versions/3.2/guides/rabbitmq.adoc
msgid ""
"Once packaged, run `docker compose up --build`.\n"
"The UI is exposed on http://localhost:8080/quotes.html"
msgstr "一旦打包完成，请运行 `docker compose up --build` 。UI在 http://localhost:8080/quotes.html"

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "To run your applications as native, first we need to build the native executables:"
msgstr "要以本地方式运行你的应用程序，我们首先需要构建本地可执行文件："

#: _versions/3.2/guides/rabbitmq.adoc
msgid ""
"The `-Dquarkus.native.container-build=true` instructs Quarkus to build Linux 64bits native executables, who can run inside containers.\n"
"Then, run the system using:"
msgstr "`-Dquarkus.native.container-build=true` 指示Quarkus构建可以在容器中运行的64位Linux本地可执行文件。然后，使用以下命令运行系统："

#. type: Plain text
#: _versions/3.2/guides/rabbitmq.adoc
msgid "As before, the UI is exposed on http://localhost:8080/quotes.html"
msgstr "与之前一样，UI也是在 http://localhost:8080/quotes.html"

#. type: Title ==
#: _versions/3.2/guides/rabbitmq.adoc
#, no-wrap
msgid "Going further"
msgstr "进一步探索"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"This guide has shown how you can interact with RabbitMQ using Quarkus.\n"
"It utilizes https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] to build data streaming applications."
msgstr "本指南介绍了如何使用 Quarkus 与 RabbitMQ 交互。它利用 link:https://smallrye.io/smallrye-reactive-messaging[SmallRye Reactive Messaging] 构建数据流应用程序。"

#: _versions/3.2/guides/rabbitmq.adoc
#, fuzzy
msgid ""
"If you did the Kafka, you have realized that it's the same code.\n"
"The only difference is the connector configuration and the JSON mapping."
msgstr "如果你使用过 Kafka，就会发现代码是一样的。唯一不同的是连接器配置和 JSON 映射。"
