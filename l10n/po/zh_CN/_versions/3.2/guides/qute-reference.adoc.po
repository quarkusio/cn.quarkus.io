# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-28 16:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Qute Reference Guide"
msgstr "衢州参考指南"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Qute is a templating engine designed specifically to meet the Quarkus needs.\n"
"The usage of reflection is minimized to reduce the size of native images.\n"
"The API combines both the imperative and the non-blocking reactive style of coding.\n"
"In the development mode, all files located in the `src/main/resources/templates` folder are watched for changes and modifications are immediately visible in your application.\n"
"Furthermore, Qute attempts to detect most of the template problems at build time and fail fast."
msgstr "Qute 是专为满足 Quarkus 需求而设计的模板引擎。它最大限度地减少了反射的使用，以减小原生图像的大小。应用程序接口结合了命令式和非阻塞反应式编码风格。在开发模式下，位于 `src/main/resources/templates` 文件夹中的所有文件都会受到监控，以防发生变化，而且修改内容会立即在应用程序中显示出来。此外，Qute 还能在构建时检测到大部分模板问题，并快速解决。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In this guide, you will find an xref:hello_world_example[introductory example], the description of the xref:core_features[core features] and xref:quarkus_integration[Quarkus integration] details."
msgstr "在本指南中，你会发现一个介绍性的 link:#hello_world_example[例子] ， link:#core_features[核心功能] 的描述和 link:#quarkus_integration[Quarkus集成] 的细节。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Qute is primarily designed as a Quarkus extension.\n"
"It is possible to use it as a \"standalone\" library too.\n"
"However, in such case some features are not available.\n"
"In general, any feature mentioned under the xref:quarkus_integration[Quarkus Integration] section is missing.\n"
"Find more information about the limitations and possibilities in the xref:standalone[Qute Used as a Standalone Library] section."
msgstr "Qute 主要是作为 Quarkus 扩展库设计的。它也可以作为一个 \"独立 \"库使用。不过，在这种情况下，有些功能将无法使用。一般来说， xref:quarkus_integration[Quarkus 集成] 部分提到的任何功能都会缺失。有关限制和可能性的更多信息，请参阅 \" xref:standalone[Qute 用作独立库] \"部分。"

#. type: Title ==
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "The Simplest Example"
msgstr "最简单的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The easiest way to try Qute is to use the convenient `io.quarkus.qute.Qute` class and call one of its `fmt()` static methods that can be used to format simple messages:"
msgstr "尝试Qute的最简单的方法是使用方便的 `io.quarkus.qute.Qute` 类，并调用它的一个 `fmt()` 静态方法，可以用来格式化简单的消息。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The empty expression `{}` is a placeholder that is replaced with an index-based array accessor, i.e. `{data[0]}`."
msgstr "空表达式 `{}` 是一个占位符，被替换为基于索引的数组访问器，即 `{data[0]}` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can provide a data map instead."
msgstr "你可以提供一个数据地图来代替。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A builder-like API is available for more complex formatting requirements."
msgstr "对于更复杂的格式化要求，有一个类似于构建器的API可用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Note that for a \"text/html\" template the special chars are replaced with html entities by default."
msgstr "请注意，对于 \"text/html \"模板，特殊字符默认为html实体所取代。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"You can use any xref:basic-building-blocks[building block] in the template.\n"
"In this case, the xref:if_section[If Section] is used to render the appropriate part of the message based on the input data."
msgstr "您可以在模板中使用任何 xref:basic-building-blocks[构件] 。在这种情况下，\" xref:if_section[如果 \"部分] 用于根据输入数据渲染信息的适当部分。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In xref:quarkus_integration[Quarkus], the engine used to format the messages is the same as the one injected by `@Inject Engine`. Therefore, you can make use of any Quarkus-specific integration feature such as xref:template_extension_methods[Template Extension Methods], xref:injecting-beans-directly-in-templates[Injecting Beans Directly In Templates] or even xref:type-safe-message-bundles[Type-safe Message Bundles]."
msgstr "在 link:#quarkus_integration[Quarkus] 中，用于格式化消息的引擎与由 `@Inject Engine` 注入的引擎相同。因此，你可以利用任何Quarkus特有的集成功能，如 link:#template_extension_methods[[template_extension_methods]] ， link:#injecting-beans-directly-in-templates[[injecting-beans-directly-in-templates]] 甚至 link:#type-safe-message-bundles[[type-safe-message-bundles]] 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The format object returned by the `Qute.fmt(String)` method can be evaluated lazily and used e.g. as a log message:"
msgstr "由 `Qute.fmt(String)` 方法返回的格式对象可以被懒惰地评估，并作为日志信息等使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Please read the javadoc of the `io.quarkus.qute.Qute` class for more details."
msgstr "请阅读 `io.quarkus.qute.Qute` 类的javadoc以了解更多细节。"

#. type: Title ==
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Hello World Example"
msgstr "Hello World实例"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"In this example, we would like to demonstrate the _basic workflow_ when working with Qute templates.\n"
"Let's start with a simple \"hello world\" example.\n"
"We will always need some *template contents*:"
msgstr "在本例中，我们将演示使用 Qute 模板时的 _基本工作流程_ 。让我们从一个简单的 \"hello world \"例子开始。我们总是需要一些 *模板内容* ："

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "hello.html"
msgstr "ǞǞǞ"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{name}` is a value expression that is evaluated when the template is rendered."
msgstr " `{name}` 是一个值表达式，在模板渲染时被评估。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Then, we will need to parse the contents into a *template definition* Java object.\n"
"A template definition is an instance of `io.quarkus.qute.Template`."
msgstr "然后，我们需要将内容解析为 *模板定义* Java 对象。模板定义是 `io.quarkus.qute.Template` 的一个实例。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"If using Qute \"standalone\" you'll need to create an instance of `io.quarkus.qute.Engine` first.\n"
"The `Engine` represents a central point for template management with dedicated configuration.\n"
"Let's use the convenient builder:"
msgstr "如果使用 Qute \"单机版\"，您需要先创建一个 `io.quarkus.qute.Engine` 实例。 `Engine` 是模板管理的中心点，有专门的配置。让我们使用便捷的生成器："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In Quarkus, there is a preconfigured `Engine` available for injection - see xref:quarkus_integration[Quarkus Integration]."
msgstr "在Quarkus中，有一个预先配置好的 `Engine` ，可供注入 - 见 link:#quarkus_integration[[quarkus_integration]] 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Once we have an `Engine` instance we could parse the template contents:"
msgstr "一旦我们有了一个 `Engine` 实例，我们就可以解析模板内容。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In Quarkus, you can simply inject the template definition. The template is automatically parsed and cached - see xref:quarkus_integration[Quarkus Integration]."
msgstr "在Quarkus中，你可以简单地注入模板定义。模板会被自动解析和缓存 - 参见 link:#quarkus_integration[[quarkus_integration]] 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Finally, create a *template instance*, set the data and render the output:"
msgstr "最后，创建一个 *模板实例* ，设置数据并渲染输出。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`Template.data(String, Object)` is a convenient method that creates a template instance and sets the data in one step."
msgstr " `Template.data(String, Object)` 是一个方便的方法，它在一个步骤中创建一个模板实例并设置数据。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`TemplateInstance.render()` triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished. However, there are also asynchronous ways to trigger the rendering and consume the results. For example, there is the `TemplateInstance.renderAsync()` method that returns `CompletionStage<String>` or `TemplateInstance.createMulti()` that returns Mutiny's `Multi<String>`."
msgstr " `TemplateInstance.render()` 触发同步渲染，也就是说，当前线程被阻塞，直到渲染完成。然而，也有一些异步的方法来触发渲染并消耗结果。例如，有一个 方法返回 ，或者 返回Mutiny的 。 `TemplateInstance.renderAsync()` `CompletionStage<String>` `TemplateInstance.createMulti()` `Multi<String>` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "So the workflow is simple:"
msgstr "所以工作流程很简单。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Create the template contents (`hello.html`),"
msgstr "创建模板内容( `hello.html` )。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Parse the template definition (`io.quarkus.qute.Template`),"
msgstr "解析模板定义( `io.quarkus.qute.Template` )。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Create a template instance (`io.quarkus.qute.TemplateInstance`),"
msgstr "创建一个模板实例( `io.quarkus.qute.TemplateInstance` )。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Render the output."
msgstr "渲染输出。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `Engine` is able to cache the template definitions so that it's not necessary to parse the contents again and again. In Quarkus, the caching is done automatically."
msgstr " `Engine` ，能够缓存模板定义，这样就不需要反复解析内容了。在Quarkus中，缓存是自动完成的。"

#. type: Title ==
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Core Features"
msgstr "核心功能"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Basic Building Blocks"
msgstr "基本构件"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The dynamic parts of a template include comments, expressions, sections and unparsed character data."
msgstr "模板的动态部分包括注释、表达式、章节和未解析的字符数据。"

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, no-wrap
msgid "Comments"
msgstr "备注"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A comment starts with the sequence `{!` and ends with the sequence `!}`, e.g. `{! This is a comment !}`.\n"
"Can be multiline and may contain expressions and sections: `{! {#if true} !}`.\n"
"The content of a comment is completely ignored when rendering the output."
msgstr "注释以 `{!` 开头，以 `!}` 结尾，如 `{! This is a comment !}` 。可以是多行，也可以包含表达式和部分： `{! {#if true} !}` 。在渲染输出时，注释的内容将被完全忽略。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, no-wrap
msgid "Expressions"
msgstr "表达式"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"An xref:expressions[expression] outputs an evaluated value.\n"
"It consists of one or more parts.\n"
"A part may represent simple properties: `{foo}`, `{item.name}`, and virtual methods: `{item.get(name)}`, `{name ?: 'John'}`.\n"
"An expression may also start with a namespace: `{inject:colors}`."
msgstr "xref:expressions[表达式] 输出一个已求值。它由一个或多个部分组成。一个部分可以表示简单的属性 `{foo}` , `{item.name}` 和虚拟方法： `{item.get(name)}` , `{name ?: 'John'}` 。表达式也可以以命名空间开头： `{inject:colors}` 。"

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Sections"
msgstr "描述"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A xref:sections[section] may contain static text, expressions and nested sections: `{#if foo.active}{foo.name}{/if}`.\n"
"The name in the closing tag is optional: `{#if active}ACTIVE!{/}`.\n"
"A section can be empty: `{#myTag image=true /}`.\n"
"Some sections support optional end tags, i.e. if the end tag is missing then the section ends where the parent section ends.\n"
"A section may also declare nested section blocks: `{#if item.valid} Valid. {#else} Invalid. {/if}` and decide which block to render."
msgstr "一个 xref:sections[小节] 可以包含静态文本、表达式和嵌套小节： `{#if foo.active}{foo.name}{/if}` 。结尾标签中的名称是可选的： `{#if active}ACTIVE!{/}` 。小节可以为空： `{#myTag image=true /}` 。有些小节支持可选的结束标记，也就是说，如果缺少结束标记，小节就会在父小节结束的地方结束。小节还可以声明嵌套的小节块： `{#if item.valid} Valid. {#else} Invalid. {/if}` ，并决定渲染哪个块。"

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Unparsed Character Data"
msgstr "未解析的字符数据"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"It is used to mark the content that should be rendered but _not parsed_.\n"
"It starts with the sequence `{|`  and ends with the sequence `|}`: `{| <script>if(true){alert('Qute is cute!')};</script> |}`, and could be multi-line."
msgstr "用于标记应呈现但 _未解析_ 的内容。它以序列 `{|` 开始，以序列 `|}` : `{| <script>if(true){alert('Qute is cute!')};</script> |}` 结束，可以是多行。"

#. type: delimited block =
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Previously, unparsed character data could start with `{[` and end with `]}`. This syntax is now removed due to common collisions with constructs from other languages."
msgstr "以前，未解析的字符数据必须以 `{[` 开始，以 `]}` 结束。这种语法仍然被支持，但我们鼓励用户改用新的语法，以避免与其他语言的构造发生一些常见的碰撞。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Identifiers and Tags"
msgstr "识别器和标签"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Identifiers are used in expressions and section tags.\n"
"A valid identifier is a sequence of non-whitespace characters.\n"
"However, users are encouraged to only use valid Java identifiers in expressions."
msgstr "标识符用于表达式和章节标记中。有效的标识符是一串非空格字符。不过，我们鼓励用户只在表达式中使用有效的 Java 标识符。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can use bracket notation if you need to specify an identifier that contains a dot, e.g. `{map['my.key']}`."
msgstr "如果你需要指定一个包含点的标识符，你可以使用括号符号，例如： `{map['my.key']}` 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"When parsing a template document the parser identifies all _tags_.\n"
"A tag starts and ends with a curly bracket, e.g. `{foo}`.\n"
"The content of a tag must start with:"
msgstr "解析器在解析模板文档时会识别所有 _标签_ 。标签以大括号开始和结束，例如 `{foo}` 。标签的内容必须以"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "a digit, or"
msgstr "一个数字，或"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "an alphabet character, or"
msgstr "一个字母字符，或"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "underscore, or"
msgstr "下划线，或"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "a built-in command: `#`, `!`, `@`, `/`."
msgstr "一个内置的命令。 `#` , `!` , `@` , `/` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If it does not start with any of the above it is ignored by the parser."
msgstr "如果它不是以上述任何一项开始，它就会被分析器忽略。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Tag Examples"
msgstr "标签示例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Parsed: an expression that starts with underscore."
msgstr "解析：一个以下划线开头的表达式。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Parsed: a comment"
msgstr "已解析：一个评论"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Ignored: starts with whitespace."
msgstr "忽略：以空白开头。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Ignored: starts with `{`."
msgstr "忽略了：以 `{` 开始。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Ignored: starts with `\"`."
msgstr "忽略了：以 `\"` 开始。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It is also possible to use escape sequences `\\{` and `\\}` to insert delimiters in the text. In fact, an escape sequence is usually only needed for the start delimiter, i.e. `\\\\{foo}` will be rendered as `{foo}` (no parsing/evaluation will happen)."
msgstr "也可以使用转义序列 `\\{` 和 `\\}` 来在文本中插入分隔符。事实上，转义序列通常只需要用于起始定界符，即 `\\{foo}` 将被呈现为 `{foo}` （不会发生解析/评估）。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Removing Standalone Lines From the Template"
msgstr "从模板中删除独立的行"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"By default, the parser removes standalone lines from the template output.\n"
"A *standalone line* is a line that contains at least one section tag (e.g. `{#each}` and `{/each}`), parameter declaration (e.g. `{@org.acme.Foo foo}`) or comment but no expression and no non-whitespace character.\n"
"In other words, a line that contains no section tag or a parameter declaration is *not* a standalone line.\n"
"Likewise, a line that contains an _expression_ or a _non-whitespace character_ is *not* a standalone line."
msgstr "默认情况下，解析器会删除模板输出中的独立行。 *独立行* 是指至少包含一个章节标签（如 `{#each}` 和 `{/each}` ）、参数声明（如 `{@org.acme.Foo foo}` ）或注释，但不包含表达式和非空格字符的行。换句话说，不包含章节标签或参数声明的行 *不是* 独立的行。同样，包含 _表达式_ _或非空格字符_ 的行也 *不是* 独立行。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template Example"
msgstr "模板实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This is a standalone line and will be removed."
msgstr "这是一个独立的项目，将被删除。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Not a standalone line - contains an expression and non-whitespace characters"
msgstr "不是一个独立的行 - 包含一个表达式和非空白字符"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Not a standalone line - contains no section tag/parameter declaration"
msgstr "不是一个独立的行 - 不包含章节标签/参数声明"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This is a standalone line."
msgstr "这是一条独立的线路。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Default Output"
msgstr "默认输出"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"In Quarkus, the default behavior can be disabled by setting the property `quarkus.qute.remove-standalone-lines` to `false`.\n"
"In this case, all whitespace characters from a standalone line will be printed to the output."
msgstr "在 Quarkus 中，可以通过将属性 `quarkus.qute.remove-standalone-lines` 设置为 `false` 来禁用默认行为。在这种情况下，独立行中的所有空白字符都将打印到输出中。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Output with `quarkus.qute.remove-standalone-lines=false`"
msgstr "输出与 `quarkus.qute.remove-standalone-lines=false` "

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"An expression is evaluated and outputs the value.\n"
"It has one or more parts, where each part represents either a property accessor (aka Field Access Expression) or a virtual method invocation (aka Method Invocation Expression)."
msgstr "表达式经过求值后输出值。它有一个或多个部分，每个部分代表一个属性访问器（又名字段访问表达式）或一个虚拟方法调用（又名方法调用表达式）。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"When accessing the properties you can either use the dot notation or bracket notation.\n"
"In the `object.property` (dot notation) syntax, the `property` must be a xref:identifiers[valid identifier].\n"
"In the `object[property_name]` (bracket notation) syntax, the `property_name` has to be a non-null xref:literals[literal] value."
msgstr "访问属性时，可以使用点符号或括号符号。在 `object.property` （点符号）语法中， `property` 必须是一个 xref:identifiers[有效的标识符] 。在 `object[property_name]` （括号符号）语法中， `property_name` 必须是非空的 xref:literals[字面值] 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"An expression can start with an optional namespace followed by a colon (`:`).\n"
"A valid namespace consist of alphanumeric characters and underscores.\n"
"Namespace expressions are resolved differently - see also xref:expression_resolution[Resolution]."
msgstr "表达式的开头可以是一个可选的命名空间，后面跟一个冒号 ( `:` )。有效的命名空间由字母数字字符和下划线组成。命名空间表达式的解析方式不同，另请参阅 xref:expression_resolution[解析] 。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Property Accessor Examples"
msgstr "属性访问器实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "no namespace, one part: `name`"
msgstr "没有命名空间，只有一个部分。 `name` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "no namespace, two parts: `item`, `name`"
msgstr "没有命名空间，有两个部分。 `item` , `name` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "equivalent to `{item.name}` but using the bracket notation"
msgstr "相当于 `{item.name}` ，但使用括号符号"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "namespace `global`, one part: `colors`"
msgstr "命名空间 `global` ，一个部分。 `colors` "

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A part of an expression can be a _virtual method_ in which case the name can be followed by a list of comma-separated parameters in parentheses.\n"
"A parameter of a virtual method can be either a nested expression or a xref:literals[literal] value.\n"
"We call these methods _\"virtual\"_ because they do not have to be backed by a real Java method.\n"
"You can learn more about virtual methods in the xref:virtual_methods[following section]."
msgstr "表达式的一部分可以是一个 _虚拟方法_ ，在这种情况下，名称后的括号中可以是一个用逗号分隔的参数列表。虚拟方法的参数可以是嵌套表达式，也可以是 xref:literals[字面值] 。我们之所以称这些方法为 _\"虚拟\"_ ，是因为它们不必由真正的 Java 方法来支持。有关虚拟方法的更多信息，请参阅 xref:virtual_methods[下一节] 。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Virtual Method Example"
msgstr "虚拟方法实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "no namespace, two parts - `item`, `getLabels(1)`, the second part is a virtual method with name `getLabels` and params `1`"
msgstr "没有命名空间，有两部分 - `item` , `getLabels(1)` , 第二部分是一个虚拟方法，名称为 `getLabels` 和参数 `1` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "infix notation that can be used for virtual methods with single parameter, translated to `name.or('John')`; no namespace, two parts - `name`, `or('John')`"
msgstr "可用于单参数的虚拟方法的infix符号，翻译为 `name.or('John')` ；没有命名空间，有两个部分 - `name` 。 `or('John')` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Supported Literals"
msgstr "支持的字词"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Literal"
msgstr "字面意思"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Examples"
msgstr "实例"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "boolean"
msgstr "布尔型"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`true`, `false`"
msgstr " `true` , `false` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "null"
msgstr "无"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`null`"
msgstr " `null` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "string"
msgstr "绳子"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`'value'`, `\"string\"`"
msgstr " `'value'` , `\"string\"` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "integer"
msgstr "整数"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`1`, `-5`"
msgstr " `1` , `-5` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "long"
msgstr "长"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`1l`, `-5L`"
msgstr " `1l` , `-5L` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "double"
msgstr "双"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`1D`, `-5d`"
msgstr " `1D` , `-5d` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "float"
msgstr "浮动"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`1f`, `-5F`"
msgstr " `1f` , `-5F` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Resolution"
msgstr "决议"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The first part of the expression is always resolved against the xref:current_context_object[current context object].\n"
"If no result is found for the first part it's resolved against the parent context object (if available).\n"
"For an expression that starts with a namespace the current context object is found using all the available ``NamespaceResolver``s.\n"
"For an expression that does not start with a namespace the current context object is *derived from the position* of the tag.\n"
"All other parts of an expression are resolved using all ``ValueResolver``s against the result of the previous resolution."
msgstr "表达式的第一部分总是根据 xref:current_context_object[当前上下文对象] 进行解析。如果第一部分没有结果，则根据父上下文对象（如果有）进行解析。对于以命名空间开头的表达式，将使用所有可用的 `NamespaceResolver` s 查找当前上下文对象。对于不以命名空间开头的表达式，将 *根据* 标签的 *位置推导出* 当前上下文对象。表达式的所有其他部分将使用所有 `ValueResolver` s 与上一次的解析结果进行对比。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"For example, expression `{name}` has no namespace and single part - `name`.\n"
"The \"name\" will be resolved using all available value resolvers against the current context object.\n"
"However, the expression `{global:colors}` has the namespace `global` and single part - `colors`.\n"
"First, all available ``NamespaceResolver``s will be used to find the current context object.\n"
"And afterwards value resolvers will be used to resolve \"colors\" against the context object found."
msgstr "例如，表达式 `{name}` 没有名称空间，只有一个部分 - `name` 。名称 \"将使用当前上下文对象的所有可用值解析器进行解析。但是，表达式 `{global:colors}` 的命名空间为 `global` ，单一部分为 `colors` 。首先，将使用所有可用的 `NamespaceResolver` s 查找当前上下文对象。然后，将使用值解析器针对找到的上下文对象解析 \"颜色\"。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Data passed to the template instance are always accessible using the `data` namespace.\n"
"This could be useful to access data for which the key is overridden:"
msgstr "传递给模板实例的数据始终可通过 `data` 命名空间访问。这对于访问关键字被重写的数据非常有用："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item` is passed to the template instance as a data object."
msgstr " `item` 被作为一个数据对象传递给模板实例。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Iterate over the list of derived items."
msgstr "遍历派生项目的列表。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item` is an alias for the iterated element."
msgstr " `item` 是迭代元素的一个别名。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Use the `data` namespace to access the `item` data object."
msgstr "使用 `data` 名称空间来访问 `item` 数据对象。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Current Context"
msgstr "当前的背景"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"If an expression does not specify a namespace, the _current context object_ is derived from the position of the tag.\n"
"By default, the current context object represents the data passed to the template instance.\n"
"However, sections may change the current context object.\n"
"A typical example is the xref:let_section[`let`] section that can be used to define named local variables:"
msgstr "如果表达式未指定名称空间，则 _当前上下文对象_ 将从标签位置导出。默认情况下，当前上下文对象代表传递给模板实例的数据。但是，部分可以更改当前上下文对象。一个典型的例子是 xref:let_section[let] 部分，它可用于定义已命名的局部变量："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The current context object inside the section is the map of resolved parameters."
msgstr "节内的当前上下文对象是已解决参数的映射。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The current context can be accessed via the implicit binding `this`."
msgstr "当前的上下文可以通过隐式绑定来访问 `this` 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Built-in Resolvers"
msgstr "内置调解器"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, no-wrap
msgid "Name"
msgstr "名称"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Elvis Operator"
msgstr "Elvis Operator"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Outputs the default value if the previous part cannot be resolved or resolves to `null`."
msgstr "如果前面的部分不能解决或解决到 `null` ，则输出默认值。"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{person.name ?: 'John'}`, `{person.name or 'John'}`, `{person.name.or('John')}`"
msgstr " `{person.name ?: 'John'}` , `{person.name or 'John'}` 。 `{person.name.or('John')}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "orEmpty"
msgstr "orEmpty"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Outputs an empty list if the previous part cannot be resolved or resolves to `null`."
msgstr "如果前面的部分不能解决或解决为 `null` ，则输出一个空列表。"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{pets.orEmpty.size}` outputs `0` if `pets` is not resolvable or `null`"
msgstr " `{pets.orEmpty.size}` 如果 不能解决，则输出 。 `pets` `0` `null` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Ternary Operator"
msgstr "三元运算符"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Shorthand for if-then-else statement. Unlike in xref:if_section[If Section] nested operators are not supported."
msgstr "if-then-else语句的简写。与 link:#if_section[[if_section]] 不同，不支持嵌套运算符。"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{item.isActive ? item.name : 'Inactive item'}` outputs the value of `item.name` if `item.isActive` resolves to `true`."
msgstr " `{item.isActive ? item.name : 'Inactive item'}` 如果 解析为 ，则输出 的值。 `item.isActive` `true` `item.name` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Logical AND Operator"
msgstr "逻辑与运算符"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid ""
"Outputs `true` if both parts are not `falsy` as described in the xref:if_section[If Section].\n"
"The parameter is only evaluated if needed."
msgstr "如果两部分都没有 `falsy` ，则输出 `true` ，如 link:#if_section[[if_section]] 中所述。该参数仅在需要时被评估。"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{person.isActive && person.hasStyle}`"
msgstr " `{person.isActive && person.hasStyle}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Logical OR Operator"
msgstr "逻辑OR运算符"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid ""
"Outputs `true` if any of the parts is not `falsy` as described in the xref:if_section[If Section].\n"
"The parameter is only evaluated if needed."
msgstr "如果任何一个部分没有按照 link:#if_section[[if_section]] 中的描述 `falsy` ，则输出 `true` 。该参数仅在需要时被评估。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{person.isActive || person.hasStyle}`"
msgstr "`{person.isActive || person.hasStyle}`"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The condition in a ternary operator evaluates to `true` if the value is not considered `falsy` as described in xref:if_section[If Section]."
msgstr "如果值不被认为是 `falsy` ，那么三元运算符中的条件评估为 `true` ，如 link:#if_section[[if_section]] 中所述。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In fact, the operators are implemented as \"virtual methods\" that consume one parameter and can be used with infix notation. For example `{person.name or 'John'}` is translated to `{person.name.or('John')}` and `{item.isActive ? item.name : 'Inactive item'}` is translated to `{item.isActive.ifTruthy(item.name).or('Inactive item')}`"
msgstr "事实上，运算符被实现为 \"虚拟方法\"，消耗一个参数，可以使用infix符号。例如， `{person.name or 'John'}` 被翻译成 `{person.name.or('John')}` ， `{item.isActive ? item.name : 'Inactive item'}` 被翻译成 `{item.isActive.ifTruthy(item.name).or('Inactive item')}` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Arrays"
msgstr "数组"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"You can iterate over elements of an array with xref:loop_section[Loop Section].\n"
"Moreover, it's also possible to get the length of the specified array and access the elements directly via an index value.\n"
"Additionally, you can access the first/last `n` elements via the `take(n)/takeLast(n)` methods."
msgstr "使用 xref:loop_section[循环部分] 可以遍历数组中的元素。此外，还可以获取指定数组的长度，并通过索引值直接访问元素。此外，还可以通过 `take(n)/takeLast(n)` 方法访问第一个/最后一个 `n` 元素。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Array Examples"
msgstr "阵列实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Outputs the length of the array."
msgstr "输出数组的长度。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Outputs the first element of the array."
msgstr "输出数组的第一个元素。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Outputs the second element of the array using the bracket notation."
msgstr "使用括号符号输出数组的第二个元素。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Outputs the third element of the array via the virtual method `get()`."
msgstr "通过虚拟方法 `get()` ，输出数组的第三个元素。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Outputs the first two elements of the array."
msgstr "输出数组的前两个元素。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Character Escapes"
msgstr "角色逃亡"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "For HTML and XML templates the `'`, `\"`, `<`, `>`, `&` characters are escaped by default if a template variant is set."
msgstr "对于HTML和XML模板，如果设置了模板变量， `'` , `\"` , `<` , `>` , `&` 字符会被默认转义。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In Quarkus, a variant is set automatically for templates located in the `src/main/resources/templates`. By default, the `java.net.URLConnection#getFileNameMap()` is used to determine the content-type of a template file. The additional map of suffixes to content types can be set via `quarkus.qute.content-types`."
msgstr "在Quarkus中，位于 `src/main/resources/templates` 的模板会自动设置一个变体。默认情况下， `java.net.URLConnection#getFileNameMap()` ，以确定模板文件的内容类型。后缀与内容类型的附加映射可以通过 `quarkus.qute.content-types` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If you need to render the unescaped value:"
msgstr "如果你需要渲染未转义的值。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Either use the `raw` or `safe` properties implemented as extension methods of the `java.lang.Object`,"
msgstr "要么使用作为 `java.lang.Object` 的扩展方法实现的 `raw` 或 `safe` 属性。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Or wrap the `String` value in a `io.quarkus.qute.RawString`."
msgstr "或者将 `String` 值包裹在一个 `io.quarkus.qute.RawString` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`"
msgstr " `title` 解析为 ，将被呈现为 `Expressions & Escapes` `Expressions &amp; Escapes` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`"
msgstr " `paragraph` 解析为 ，将被呈现为 `<p>My text!</p>` `<p>My text!</p>` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "By default, a template with one of the following content types is escaped: `text/html`, `text/xml`, `application/xml` and `application/xhtml+xml`. However, it's possible to extend this list via the `quarkus.qute.escape-content-types` configuration property."
msgstr "默认情况下，具有以下内容类型之一的模板会被转义。 `text/html` , `text/xml` , `application/xml` 和 `application/xhtml+xml` 。然而，可以通过 `quarkus.qute.escape-content-types` 配置属性来扩展这个列表。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Virtual Methods"
msgstr "虚拟方法"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A virtual method is a *part of an expression* that looks like a regular Java method invocation.\n"
"It's called \"virtual\" because it does not have to match the actual method of a Java class.\n"
"In fact, like normal properties a virtual method is also handled by a value resolver.\n"
"The only difference is that for virtual methods a value resolver consumes parameters that are also expressions."
msgstr "虚拟方法是 *表达式的一部分* ，看起来就像普通的 Java 方法调用。之所以称为 \"虚拟\"，是因为它不必与 Java 类的实际方法相匹配。事实上，与普通属性一样，虚方法也由值解析器处理。唯一不同的是，对于虚拟方法，值解析器消耗的参数也是表达式。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`buildName(item.name,5)` represents a virtual method with name `buildName` and two parameters: `item.name` and `5` . The virtual method could be evaluated by a value resolver generated for the following Java class:"
msgstr " `buildName(item.name,5)` 表示一个虚拟方法，名称为 ，有两个参数： 和 。这个虚拟方法可以由一个为以下Java类生成的值解析器来评估。 `buildName` `item.name` `5` "

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Virtual methods are usually evaluated by value resolvers generated for xref:template_extension_methods[@TemplateExtension methods], xref:template_data[@TemplateData] or classes used in xref:typesafe_expressions[parameter declarations].\n"
"However, a custom value resolver that is not backed by any Java class/method can be registered as well."
msgstr "虚拟方法通常由 xref:template_extension_methods[@TemplateExtension 方法] 、 xref:template_extension_methods[@] xref:template_data[TemplateData] 或 xref:typesafe_expressions[参数声明] 中使用的类生成的值解析器进行评估。不过，也可以注册不受任何 Java 类/方法支持的自定义值解析器。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A virtual method with single parameter can be called using the infix notation:"
msgstr "一个有单参数的虚拟方法可以用infix符号来调用。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Infix Notation Example"
msgstr "Infix记号的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item.price or 5` is translated to `item.price.or(5)`."
msgstr " `item.price or 5` 被翻译成 。 `item.price.or(5)` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Virtual method parameters can be \"nested\" virtual method invocations."
msgstr "虚拟方法参数可以是 \"嵌套 \"的虚拟方法调用。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Nested Virtual Method Example"
msgstr "嵌套虚拟方法实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item.calculateDiscount(10)` is evaluated first and then passed as an argument to `item.subtractPrice()`."
msgstr " `item.calculateDiscount(10)` 首先被评估，然后作为参数传递给 。 `item.subtractPrice()` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Evaluation of `CompletionStage` and `Uni` Objects"
msgstr "对 `CompletionStage` 和 `Uni` 物体的评价"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Objects that implement `java.util.concurrent.CompletionStage` and `io.smallrye.mutiny.Uni` are evaluated in a special way.\n"
"If a part of an expression resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.\n"
"For example, if there is an expression `{foo.size}` and `foo` resolves to `CompletionStage<List<String>>` then `size` is resolved against the completed result, i.e. `List<String>`.\n"
"If a part of an expression resolves to a `Uni`, a `CompletionStage` is first created from `Uni` using `Uni#subscribeAsCompletionStage()` and then evaluated as described above."
msgstr "实现 `java.util.concurrent.CompletionStage` 和 `io.smallrye.mutiny.Uni` 的对象以特殊方式进行求值。如果表达式的某一部分解析到 `CompletionStage` ，则在该阶段完成后继续解析，并根据已完成阶段的结果对表达式的下一部分（如有）进行评估。例如，如果有一个表达式 `{foo.size}` ，而 `foo` 解析为 `CompletionStage<List<String>>` ，那么 `size` 将根据已完成的结果进行解析，即 `List<String>` 。如果表达式的一部分解析为 `Uni` ，则首先使用 `Uni#subscribeAsCompletionStage()` 从 `Uni` 创建 `CompletionStage` ，然后按上述方法进行评估。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Note that each `Uni#subscribeAsCompletionStage()` results in a new subscription. You might need to configure memoization of the `Uni` item or failure before it's used as template data, i.e. `myUni.memoize().indefinitely()`."
msgstr "请注意，每个 `Uni#subscribeAsCompletionStage()` ，都会产生一个新的订阅。你可能需要在 `Uni` 项目或失败之前配置备忘录，作为模板数据，即 `myUni.memoize().indefinitely()` 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"It can happen that a `CompletionStage` never completes or a `Uni` emits no item/failure.\n"
"In this case, the rendering methods (such as `TemplateInstance#render()` and `TemplateInstance#createUni()`) fail after a specific timeout.\n"
"The timeout can be specified as a template instance `timeout` attribute.\n"
"If no `timeout` attribute is set the global rendering timeout is used."
msgstr "`CompletionStage` 可能永远无法完成，或者 `Uni` 可能不显示任何项目/失败。在这种情况下，渲染方法（如 `TemplateInstance#render()` 和 `TemplateInstance#createUni()` ）会在特定超时后失败。超时可指定为模板实例 `timeout` 的属性。如果未设置 `timeout` 属性，则使用全局渲染超时。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In Quarkus, the default timeout can be set via the `io.quarkus.qute.timeout` configuration property. If using Qute standalone then the `EngineBuilder#timeout()` method can be used."
msgstr "在Quarkus中，默认超时可以通过 `io.quarkus.qute.timeout` 配置属性设置。如果使用Qute单机版，那么可以使用 `EngineBuilder#timeout()` 方法。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In previous versions, only the `TemplateInstance#render()` method honored the timeout attribute. You can use the `io.quarkus.qute.useAsyncTimeout=false` config property to preserve the old behavior and take care of the timeout yourself, for example `templateInstance.createUtni().ifNoItem().after(Duration.ofMillis(500)).fail()`."
msgstr "在以前的版本中，只有 `TemplateInstance#render()` 方法会尊重超时属性。你可以使用 `io.quarkus.qute.useAsyncTimeout=false` 配置属性来保留旧的行为，并自行处理超时的问题，例如 `templateInstance.createUtni().ifNoItem().after(Duration.ofMillis(500)).fail()` 。"

#. type: Title =====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "How to Identify a Problematic Part of the Template"
msgstr "如何识别模板中的问题部分"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"It's not easy to find the problematic part of a template when a timeout occurs.\n"
"You can set the `TRACE` level for the logger `io.quarkus.qute.nodeResolve` and try to analyze the log output afterwards."
msgstr "发生超时时，要找到模板中存在问题的部分并不容易。您可以为日志记录器 `io.quarkus.qute.nodeResolve` 设置 `TRACE` 级别，然后尝试分析日志输出。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`application.properties` Example"
msgstr " `application.properties` 例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You should see the following pair of log messages for every expression and section used in a template:"
msgstr "对于模板中使用的每个表达式和部分，你应该看到以下一对日志信息。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"TRACE [io.qua.qut.nodeResolve] Resolve {name} started: Template hello.html at line 8\n"
"TRACE [io.qua.qut.nodeResolve] Resolve {name} completed: Template hello.html at line 8"
msgstr "TRACE [io.qua.qut.nodeResolve] 解析 {name} 开始：模板 hello.html 在第 8 行 TRACE [io.qua.qut.nodeResolve] 解析 {name} 已完成：模板 hello.html 第 8 行"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If a `completed` log message is missing then you have a good candidate to explore."
msgstr "如果缺少一个 `completed` 的日志信息，那么你就有一个很好的候选者来探索。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Missing Properties"
msgstr "缺少的属性"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"It can happen that an expression may not be evaluated at runtime.\n"
"For example, if there is an expression `{person.age}` and there is no property `age` declared on the `Person` class.\n"
"The behavior differs based on whether the xref:strict_rendering[Strict Rendering] is enabled or not."
msgstr "在运行时可能无法对表达式进行评估。例如，如果有一个表达式 `{person.age}` ，而 `Person` 类上没有声明任何属性 `age` 。根据是否启用 \" xref:strict_rendering[严格渲染] \"，行为会有所不同。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"If enabled then a missing property will always result in a `TemplateException` and the rendering is aborted.\n"
"You can use _default values_ and _safe expressions_ in order to suppress the error."
msgstr "如果启用该功能，则属性缺失将导致 `TemplateException` 并中止渲染。您可以使用 _默认值_ 和 _安全表达式_ 来抑制错误。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If disabled then the special constant `NOT_FOUND` is written to the output by default."
msgstr "如果禁用，则默认将特殊常数 `NOT_FOUND` 写到输出。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In Quarkus, it's possible to change the default strategy via the `quarkus.qute.property-not-found-strategy` as described in the xref:configuration-reference[Configuration Reference]."
msgstr "在Quarkus中，可以通过 `quarkus.qute.property-not-found-strategy` ，如 link:#configuration-reference[[配置-参考]] 中所述，改变默认策略。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Similar errors are detected at build time if xref:typesafe_expressions[Type-safe Expressions] and xref:typesafe_templates[Type-safe Templates] are used."
msgstr "如果使用 link:#typesafe_expressions[[typesafe_expressions]] 和 link:#typesafe_templates[[typesafe_templates]] ，在构建时也会检测到类似的错误。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A section has a start tag that starts with `#`, followed by the name of the section such as `{#if}` and `{#each}`.\n"
"It may be empty, i.e. the start tag ends with `/`: `{#myEmptySection /}`.\n"
"Sections usually contain nested expressions and other sections.\n"
"The end tag starts with `/` and contains the name of the section (optional): `{#if foo}Foo!{/if}` or `{#if foo}Foo!{/}`.\n"
"Some sections support optional end tags, i.e. if the end tag is missing then the section ends where the parent section ends."
msgstr "节的起始标签以 `#` 开头，其后是节的名称，如 `{#if}` 和 `{#each}` 。它可能是空的，即起始标签以 `/` : `{#myEmptySection /}` 结尾。章节通常包含嵌套表达式和其他章节。结束标记以 `/` 开始，包含节的名称（可选）： `{#if foo}Foo!{/if}` 或 `{#if foo}Foo!{/}` 。有些节支持可选的结束标记，即如果缺少结束标记，则节在父节结束的地方结束。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`#let` Optional End Tag Example"
msgstr "Infix记号的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Defines the local variable that can be used inside the parent `{#if}` section."
msgstr "定义了可以在父 `{#if}` 部分内使用的局部变量。"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Built-in section"
msgstr "内置调解器"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Supports Optional End Tag"
msgstr "支持可选的结束标签"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#for}`"
msgstr " `{#for}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "❌"
msgstr "❌"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#if}`"
msgstr " `{#is < 10}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#when}`"
msgstr " `{#when}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#let}`"
msgstr " `{#let}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "✅"
msgstr "✅"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#with}`"
msgstr " `{#with}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#include}`"
msgstr " `{#include}` "

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "User-defined Tags"
msgstr "用户定义的标签"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#fragment}`"
msgstr "碎片"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#cached}`"
msgstr " `{#case le 10}` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Parameters"
msgstr "方法参数"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A start tag can define parameters with optional names, e.g. `{#if item.isActive}` and `{#let foo=1 bar=false}`.\n"
"Parameters are separated by one or more spaces.\n"
"Names are separated from the values by the equals sign.\n"
"Names and values can be prefixed and suffixed with any number of spaces, e.g. `{#let id='Foo'}` and `{#let id  = 'Foo'}` are equivalents where the name of the parameter is `id` and the value is `Foo`.\n"
"Values can be grouped using parentheses, e.g. `{#let id=(item.id ?: 42)}` where the name is `id` and the value is `item.id ?: 42`.\n"
"Sections can interpret parameter values in any way, e.g. take the value as is.\n"
"However, in most cases, the parameter value is registered as an xref:expressions[expression] and evaluated before use."
msgstr "起始标签可定义带有可选名称的参数，如 `{#if item.isActive}` 和 `{#let foo=1 bar=false}` 。参数之间用一个或多个空格隔开。名称与值之间用等号隔开。名称和值的前缀和后缀可以是任意数量的空格，例如 `{#let id='Foo'}` 和 `{#let id = 'Foo'}` 就是等价参数，其中参数名称是 `id` ，值是 `Foo` 。可使用括号对值进行分组，例如， `{#let id=(item.id ?: 42)}` 的名称是 `id` ，值是 `item.id ?: 42` 。各部分可以以任何方式解释参数值，例如按原样取值。不过，在大多数情况下，参数值会作为 xref:expressions[表达式] 注册，并在使用前进行评估。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A section may contain several content *blocks*.\n"
"The \"main\" block is always present.\n"
"Additional/nested blocks also start with `#` and can have parameters too - `{#else if item.isActive}`.\n"
"A section helper that defines the logic of a section can \"execute\" any of the blocks and evaluate the parameters."
msgstr "一个部分可能包含多个内容 *块* 。主 \"区块始终存在。附加/嵌套块也以 `#` 开始，也可以有参数 - `{#else if item.isActive}` 。定义章节逻辑的章节辅助程序可以 \"执行 \"任何章节并评估参数。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`#if` Section Example"
msgstr "Infix记号的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This is the main block."
msgstr "这是主街区。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Additional block."
msgstr "附加区块。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Loop Section"
msgstr "循环部分"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The loop section makes it possible to iterate over an instance of `Iterable`, `Iterator`, array, `Map` (element is a `Map.Entry`), `Stream`, `Integer` and `int` (primitive value).\n"
"A `null` parameter value results in a no-op."
msgstr "循环部分可以遍历 `Iterable` , `Iterator` , 数组 , `Map` （元素为 `Map.Entry` ） , `Stream` , `Integer` 和 `int` （原始值）的实例。 `null` 参数值会导致无操作。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"This section has two flavors.\n"
"The first one is using the name `each` and `it` is an implicit alias for the iteration element."
msgstr "本节有两种形式。第一种是使用 `each` 这个名称， `it` 是迭代元素的隐式别名。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`name` is resolved against the current iteration element."
msgstr " `name` 是针对当前迭代元素进行解析的。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The other form is using the name `for` and specifies the alias used to reference the iteration element:"
msgstr "另一种形式是使用名称 `for` ，并指定用于引用迭代元素的别名。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item` is the alias used for the iteration element."
msgstr " `item` 是用于迭代元素的别名。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It's also possible to access the iteration metadata inside the loop via the following keys:"
msgstr "也可以通过以下键来访问循环内部的迭代元数据。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`count` - 1-based index"
msgstr " `count` - 基于1的指数"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`index` - zero-based index"
msgstr " `index` - 零基指数"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`hasNext` - `true` if the iteration has more elements"
msgstr " `hasNext` - ，如果该迭代有更多的元素 `true` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`isLast` - `true` if `hasNext == false`"
msgstr " `isLast` - ，如果 `true` `hasNext == false` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`isFirst` - `true` if `count == 1`"
msgstr " `isFirst` - ，如果 `true` `count == 1` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`odd` - `true` if the element's count is odd"
msgstr " `odd` - ，如果基于零的索引是奇数 `true` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`even` - `true` if the element's count is even"
msgstr " `even` - ，如果基于零的指数是偶数 `true` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`indexParity` - outputs `odd` or `even` based on the count value"
msgstr " `indexParity` - 根据基于零的指数值，输出 或 。 `odd` `even` "

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"However, the keys cannot be used directly.\n"
"Instead, a prefix is used to avoid possible collisions with variables from the outer scope.\n"
"By default, the alias of an iterated element suffixed with an underscore is used as a prefix.\n"
"For example, the `hasNext` key must be prefixed with `it_` inside an `{#each}` section: `{it_hasNext}`."
msgstr "但是，键不能直接使用。取而代之的是使用前缀，以避免与外层作用域的变量发生碰撞。默认情况下，以下划线为后缀的迭代元素别名被用作前缀。例如， `hasNext` 关键字必须在 `{#each}` 部分中以 `it_` 作为前缀： `{it_hasNext}` 。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`each` Iteration Metadata Example"
msgstr " `each` 迭代元数据实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`it_count` represents one-based index."
msgstr " `it_count` 代表一基指数。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`<br>` is only rendered if the iteration has more elements."
msgstr " `<br>` 只有在迭代有更多元素时才会呈现。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "And must be used in a form of `{item_hasNext}` inside a `{#for}` section with the `item` element alias."
msgstr "而且必须以 `{item_hasNext}` 的形式在 `{#for}` 部分内使用，并有 `item` 的元素别名。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`for` Iteration Metadata Example"
msgstr " `for` 迭代元数据实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item_count` represents one-based index."
msgstr " `item_count` 代表一基指数。"

#. type: delimited block =
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The iteration metadata prefix is configurable either via `EngineBuilder.iterationMetadataPrefix()` for standalone Qute or via the `quarkus.qute.iteration-metadata-prefix` configuration property in a Quarkus application. Three special constants can be used:"
msgstr "迭代元数据的前缀可以通过独立的Qute的 `EngineBuilder.iterationMetadataPrefix()` ，或者通过Quarkus应用程序的 `quarkus.qute.iteration-metadata-prefix` 配置属性进行配置。有三个特殊的常数可以使用。"

#. type: delimited block =
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`<alias_>` - the alias of an iterated element suffixed with an underscore is used (default)"
msgstr " `<alias_>` - 使用以下划线为后缀的迭代元素的别名（默认）。"

#. type: delimited block =
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`<alias?>` - the alias of an iterated element suffixed with a question mark is used"
msgstr " `<alias?>` - 使用以问号为后缀的迭代元素的别名。"

#. type: delimited block =
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`<none>` - no prefix is used"
msgstr " `<none>` - 不使用前缀"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `for` statement also works with integers, starting from 1. In the example below, considering that `total = 3`:"
msgstr " `for` 语句也适用于整数，从1开始。在下面的例子中，考虑到 `total = 3` :"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "And the output will be:"
msgstr "而输出将是。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A loop section may also define the `{#else}` block that is executed when there are no items to iterate:"
msgstr "循环部分也可以定义 `{#else}` ，当没有项目需要迭代时，就执行这个块。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "If Section"
msgstr "如果第"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The `if` section represents a basic control flow section.\n"
"The simplest possible version accepts a single parameter and renders the content if the condition is evaluated to `true`.\n"
"A condition without an operator evaluates to `true` if the value is not considered `falsy`, i.e. if the value is not `null`, `false`, an empty collection, an empty map, an empty array, an empty string/char sequence or a number equal to zero."
msgstr "`if` 部分表示一个基本的控制流部分。最简单的版本接受一个参数，如果条件评估结果为 `true` ，则渲染内容。如果值不被视为 `falsy` ，即值不是 `null` 、 `false` 、空集合、空映射、空数组、空字符串/字符序列或等于零的数字，则不带操作符的条件将被评估为 `true` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can also use the following operators in a condition:"
msgstr "你也可以在一个条件中使用以下运算符。"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Operator"
msgstr "运营商"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Aliases"
msgstr "别名"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Precedence (higher wins)"
msgstr "优先权（较高者获胜）"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "logical complement"
msgstr "逻辑补充"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`!`"
msgstr " `!` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "4"
msgstr "4"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "greater than"
msgstr "大于"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`gt`, `>`"
msgstr " `gt` , `>` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "3"
msgstr "3"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "greater than or equal to"
msgstr "大于或等于"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`ge`, `>=`"
msgstr " `ge` , `>=` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "less than"
msgstr "不到"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`lt`, `<`"
msgstr " `lt` , `<` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "less than or equal to"
msgstr "小于或等于"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`le`, `\\<=`"
msgstr " `le` , `<=` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "equals"
msgstr "等同于"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`eq`, `==`, `is`"
msgstr " `eq` , `==` 。 `is` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "2"
msgstr "2"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "not equals"
msgstr "不等于"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`ne`, `!=`"
msgstr " `ne` , `!=` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "logical AND (short-circuiting)"
msgstr "逻辑和(短路)"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`&&`, `and`"
msgstr " `&&` , `and` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "1"
msgstr "1"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "logical OR (short-circuiting)"
msgstr "逻辑OR(短路)"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`||`, `or`"
msgstr "`||` , `or`"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "A simple operator example"
msgstr "一个简单的操作者例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Multiple conditions are also supported."
msgstr "也支持多种条件。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Multiple conditions example"
msgstr "多个条件的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Precedence rules can be overridden by parentheses."
msgstr "顺序规则可以被括号所覆盖。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Parentheses example"
msgstr "括号内的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can also add any number of `else` blocks:"
msgstr "你也可以添加任何数量的 `else` 块。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "When Section"
msgstr "当科"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"This section is similar to Java's `switch` or Kotlin's `when` constructs.\n"
"It matches a _tested value_ against all blocks sequentially until a condition is satisfied.\n"
"The first matching block is executed.\n"
"All other blocks are ignored (this behavior differs to the Java `switch` where a `break` statement is necessary)."
msgstr "该部分类似于 Java 的 `switch` 或 Kotlin 的 `when` 结构。它按顺序将 _测试值_ 与所有代码块匹配，直到满足条件为止。第一个匹配块将被执行。其他所有代码块都将被忽略（这一行为与 Java `switch` 不同，后者需要使用 `break` 语句）。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Example using the `when`/`is` name aliases"
msgstr "使用 `when` / `is` 名称别名的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If there is exactly one parameter it's tested for equality."
msgstr "如果正好有一个参数，它将被测试为平等。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"It is possible to use xref:when_operators[an operator] to specify the matching logic.\n"
"Unlike in the xref:if_section[If Section] nested operators are not supported."
msgstr "可以使用 xref:when_operators[操作符] 来指定匹配逻辑。与 xref:if_section[\"如果 \"部分] 不同的是，不支持嵌套运算符。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`else` is block is executed if no other block matches the value."
msgstr " `else` 如果没有其他区块与该值匹配，则执行该区块。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Example using the `switch`/`case` name aliases"
msgstr "使用 `switch` / `case` 名称别名的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`case` is an alias for `is`."
msgstr " `case` 是 的一个别名。 `is` "

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A tested value that resolves to an enum is handled specifically.\n"
"The parameters of an `is`/`case` block are not evaluated as expressions but compared with the result of `toString()` invocation upon the tested value."
msgstr "对解析为枚举的测试值会进行特殊处理。 `is` / `case` 程序块的参数不作为表达式求值，而是与 `toString()` 调用测试值的结果进行比较。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This block is executed if `machine.status.toString().equals(\"ON\")`."
msgstr "如果 `machine.status.toString().equals(\"ON\")` ，则执行该块。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This block is executed if  `machine.status.toString().equals(\"OFF\")` or `machine.status.toString().equals(\"BROKEN\")`."
msgstr "如果 `machine.status.toString().equals(\"OFF\")` 或 `machine.status.toString().equals(\"BROKEN\")` ，则执行该代码块。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "An enum constant is validated if the tested value has a type information available and resolves to an enum type."
msgstr "如果被测试的值有可用的类型信息，并且可以解析为一个枚举类型，那么枚举常量就会被验证。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The following operators are supported in `is`/`case` block conditions:"
msgstr "在 `is` / `case` 块条件下，支持以下运算符。"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, no-wrap
msgid "Example"
msgstr "例子"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "not equal"
msgstr "不等"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`!=`, `not`, `ne`"
msgstr " `!=` , `not` 。 `ne` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#is not 10}`,`{#case != 10}`"
msgstr " `{#is not 10}` , `{#case != 10}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#case le 10}`"
msgstr " `{#case le 10}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#is >= 10}`"
msgstr " `{#is >= 10}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#is < 10}`"
msgstr " `{#is < 10}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "in"
msgstr "在"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`in`"
msgstr " `in` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#is in 'foo' 'bar' 'baz'}`"
msgstr " `{#is in 'foo' 'bar' 'baz'}` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "not in"
msgstr "不在"

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`ni`,`!in`"
msgstr " `ni` , `!in` "

#. type: Table
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`{#is !in 1 2 3}`"
msgstr " `{#is !in 1 2 3}` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Let Section"
msgstr "让科"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This section allows you to define named local variables:"
msgstr "本节允许你定义命名的局部变量。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The local variable is initialized with an expression that can also represent a xref:literals[literal], i.e. `isActive=false` and `age=10`."
msgstr "本地变量用一个表达式初始化，这个表达式也可以代表一个 link:#literals[字面] 意思。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The infix notation is only supported if parentheses are used for grouping, e.g. `price=(order.price + 10)` is equivalent to `price=order.price.plus(10)`."
msgstr "只有在使用括号进行分组的情况下，才支持infix符号，例如： `price=(order.price + 10)` ，相当于 `price=order.price.plus(10)` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Keep in mind that the variable is not available outside the `let` section that defines it."
msgstr "请记住，该变量在定义它的 `let` 部分之外是不可用的。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If a key of a section parameter, such as the name of the local variable, ends with a `?`, then the local variable is only set if the key without the `?` suffix resolves to `null` or _\"not found\"_:"
msgstr "如果一个部分参数的键（也就是局部变量的名称）以 `?` 结尾，那么只有当不带 `?` 后缀的键解析为 `null` 或 _\"未找到 \"_ 时，才会设置局部变量。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`true` is effectively a _default value_ that is only used if the parent scope does not define `enabled` already."
msgstr " `true` 是一个有效的 _默认值_ ，只有在父作用域没有定义 时才会使用。 `enabled` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`enabled?=true` is a short version of `enabled=enabled.or(true)`."
msgstr " `enabled?=true` 是 的简称。 `enabled=enabled.or(true)` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This section tag is also registered under the `set` alias:"
msgstr "该部分标签也被注册在 `set` 别名下。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "With Section"
msgstr "有科室"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"This section can be used to set the current context object.\n"
"This could be useful to simplify the template structure:"
msgstr "该部分可用于设置当前上下文对象。这有助于简化模板结构："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `name` will be resolved against the `item.parent`."
msgstr " `name` ，将解决对 `item.parent` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `description` will be also resolved against the `item.parent`."
msgstr " `description` ，也将针对 `item.parent` 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Note that the `with` section should not be used in xref:typesafe_templates[Type-safe Templates] or templates that define xref:typesafe_expressions[Type-safe Expressions].\n"
"The reason is that it prevents Qute from validating the nested expressions.\n"
"If possible, replace it with the `{#let}` section which declares an explicit binding:"
msgstr "请注意， `with` 部分不应在 xref:typesafe_templates[类型安全模板] 或定义了 xref:typesafe_expressions[类型安全表达式] 的模板中使用。原因是它会阻止 Qute 验证嵌套表达式。如果可能，请用 `{#let}` 部分代替它，该部分声明了显式绑定："

#. type: delimited block =
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This section might also come in handy when we'd like to avoid multiple expensive invocations:"
msgstr "当我们想避免多次昂贵的调用时，这一部分也可能会派上用场。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`this` is the result of `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)`. The method is only invoked once even though the result may be used in multiple expressions."
msgstr " `this` 是 的结果。该方法只被调用一次，尽管结果可能被用于多个表达式。 `item.callExpensiveLogicToGetTheValue(1,'foo',bazinga)` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Include Section"
msgstr "包含的部分"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This section can be used to include another template and possibly override some parts of the template (see the _template inheritance_ below)."
msgstr "这一部分可以用来包括另一个模板，并可能覆盖模板的某些部分（模板继承）。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Simple Example"
msgstr "简单的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Include a template with id `foo`. The included template can reference data from the current context."
msgstr "包括一个ID为 `foo` 的模板。包含的模板可以引用当前上下文中的数据。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It's also possible to define optional parameters that can be used in the included template."
msgstr "也可以定义可选的参数，可以在包含的模板中使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "_Template inheritance_ makes it possible to reuse template layouts."
msgstr "模板的继承性使得重复使用模板布局成为可能。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template \"base\""
msgstr "模板 \"基地\""

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`insert` sections are used to specify parts that could be overridden by a template that includes the given template."
msgstr " `insert` 部分用于指定可以被包含给定模板的模板所覆盖的部分。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "An `insert` section may define the default content that is rendered if not overridden. If there is no name supplied then the main block of the relevant `{#include}` section is used."
msgstr "一个 `insert` 部分可以定义默认的内容，如果没有被覆盖，就会被渲染。如果没有提供名称参数，那么将使用相关 `{#include}` 部分的主块。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template \"detail\""
msgstr "模板 \"细节\""

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`include` section is used to specify the extended template."
msgstr " `include` 部分用于指定扩展模板。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Nested blocks are used to specify the parts that should be overridden."
msgstr "嵌套块被用来指定应该被覆盖的部分。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The content of the main block is used for an `{#insert}` section with no name parameter specified."
msgstr "主块的内容被用于没有指定名称参数的 `{#insert}` 部分。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Section blocks can also define an optional end tag - `{/title}`."
msgstr "节块还可以定义一个可选的结束标签 - `{/title}` 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"User-defined tags can be used to include a _tag template_, optionally pass some arguments and possibly override some parts of the template.\n"
"Let's suppose we have a tag template called `itemDetail.html`:"
msgstr "用户自定义标签可用于包含一个 _标签模板_ ，可选择传递一些参数，也可覆盖模板的某些部分。假设我们有一个名为 `itemDetail.html` 的标签模板："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`showImage` is a named parameter."
msgstr " `showImage` 是一个命名的参数。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`it` is a special key that is replaced with the first unnamed parameter of the tag."
msgstr " `it` 是一个特殊的键，被替换为标签的第一个未命名的参数。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "(optional) `nested-content` is a special key that will be replaced by the content of the tag."
msgstr "(可选) `nested-content` 是一个特殊的键，将被标签的内容所取代。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"In Quarkus, all files from the `src/main/resources/templates/tags` are registered and monitored automatically.\n"
"For Qute standalone, you need to put the parsed template under the name `itemDetail.html` and register a relevant `UserTagSectionHelper` to the engine:"
msgstr "在 Quarkus 中，来自 `src/main/resources/templates/tags` 的所有文件都会被自动注册和监控。对于 Qute 单机版，您需要将解析后的模板置于 `itemDetail.html` 名下，并向引擎注册相关的 `UserTagSectionHelper` ："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Then, we can call the tag like this:"
msgstr "然后，我们可以像这样调用这个标签。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item` is resolved to an iteration element and can be referenced using the `it` key in the tag template."
msgstr " `item` 被解析为一个迭代元素，可以使用标签模板中的 关键来引用。 `it` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Tag content injected using the `nested-content` key in the tag template."
msgstr "使用标签模板中的 `nested-content` 键注入的标签内容。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"By default, the tag template can reference data from the parent context.\n"
"For example, the tag above could use the following expression `{items.size}`.\n"
"However, sometimes it might be useful to disable this behavior and execute the tag as an _isolated_ template, i.e. without access to the context of the template that calls the tag.\n"
"In this case, just add `_isolated` or `_isolated=true` argument to the call site, e.g. `{#itemDetail item showImage=true _isolated /}`."
msgstr "默认情况下，标签模板可以引用父上下文中的数据。例如，上面的标签可以使用以下表达式 `{items.size}` 。不过，有时可能需要禁用这一行为，将标签作为一个 _孤立的_ 模板执行，即不访问调用标签的模板上下文。在这种情况下，只需在调用站点添加 `_isolated` 或 `_isolated=true` 参数，例如 `{#itemDetail item showImage=true _isolated /}` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "User tags can also make use of the template inheritance in the same way as regular `{#include}` sections do."
msgstr "用户标签也可以像普通的 `{#include}` 部分一样利用模板的继承性。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Tag `myTag`"
msgstr "标签 `myTag` "

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Tag Call Site"
msgstr "标签调用网站"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The result would be something like `<p>This is my custom title!</p>`."
msgstr "结果会是这样的： `<p>This is my custom title!</p>` 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Fragments"
msgstr "碎片"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A fragment represents a part of the template that can be treated as a separate template, i.e. rendered separately.\n"
"One of the main motivations to introduce this feature was to support use cases like https://htmx.org/essays/template-fragments/[htmx fragments]."
msgstr "片段代表模板的一部分，可作为单独的模板处理，即单独渲染。引入这一功能的主要动机之一是为了支持 link:https://htmx.org/essays/template-fragments/[htmx 片段] 等用例。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Fragments can be defined with the `{#fragment}` section.\n"
"Each fragment has an identifier that can only consist of alphanumeric characters and underscores."
msgstr "片段可通过 `{#fragment}` 部分定义。每个片段都有一个标识符，只能由字母数字字符和下划线组成。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Note that a fragment identifier must be unique in a template."
msgstr "方法参数可以在模板中使用。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Fragment Definition in `item.html`"
msgstr "片段的定义 `item.html` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Defines a fragment with identifier `item_aliases`. Note that only alphanumeric characters and underscores can be used in the identifier."
msgstr "定义了一个具有标识符 `item_aliases` 的片段。注意，标识符中只能使用字母数字字符和下划线。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can obtain a fragment programmatically via the `io.quarkus.qute.Template.getFragment(String)` method."
msgstr "你可以通过 `io.quarkus.qute.Template.getFragment(String)` 方法以编程方式获得一个片段。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Obtaining a Fragment"
msgstr "获得一个片段"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Obtains the template fragment with identifier `item_aliases`."
msgstr "获取标识符为 `item_aliases` 的模板片段。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Make sure the data are set correctly."
msgstr "确保数据设置正确。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The snippet above should render something like:"
msgstr "上面的片段应该呈现出这样的效果。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In Quarkus, it is also possible to define a xref:type_safe_fragments[type-safe fragment]."
msgstr "在Quarkus中，也可以定义一个 link:#type_safe_fragments[类型安全的片段] 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can also include a fragment with an `{#include}` section inside another template or the template that defines the fragment."
msgstr "你也可以在另一个模板或定义该片段的模板内包含一个带有 `{#include}` 部分的片段。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Including a Fragment in `user.html`"
msgstr "包括一个片段在 `user.html` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A template identifier that contains a dollar sign `$` denotes a fragment. The `item$item_aliases` value is translated as: _Use the fragment `item_aliases` from the template `item`._"
msgstr "一个包含美元符号的模板标识符 `$` ，表示一个片段。 `item$item_aliases` 的值被翻译为： _使用模板<code>item</code> 中的片段<code>item_aliases</code> 。_ "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `aliases` parameter is used to pass the relevant data. We need to make sure that the data are set correctly. In this particular case the fragment will use the expression `user.aliases` as the value of `aliases` in the `{#for alias in aliases}` section."
msgstr " `aliases` 参数用于传递相关数据。我们需要确保数据的设置是正确的。在这种特殊情况下，该片段将使用表达式 `user.aliases` 作为 `{#for alias in aliases}` 部分中 `aliases` 的值。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If you want to reference a fragment from the same template, skip the part before `$`, i.e. something like `{#include $item_aliases /}`."
msgstr "如果你想引用同一模板的片段，你可以跳过 `$` 之前的部分，即像 `{#include $item_aliases /}` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can specify `{#include item$item_aliases _ignoreFragments=true /}` in order to disable this feature, i.e. a dollar sign `$` in the template identifier does not result in a fragment lookup."
msgstr "你可以指定 `{#include item$item_aliases _ignoreFragments=true /}` ，以便禁用这一功能，即模板标识符中的美元符号 `$` ，不会导致片段查找。"

#. type: Title =====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Hidden Fragments"
msgstr "隐藏的碎片"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"By default, a fragment is normally rendered as a part of the original template.\n"
"However, sometimes it might be useful to mark a fragment as _hidden_ with `rendered=false`.\n"
"An interesting use case would be a fragment that can be used multiple-times inside the template that defines it."
msgstr "默认情况下，片段通常作为原始模板的一部分呈现。不过，有时可能需要使用 `rendered=false` 将片段标记为 _隐藏_ 。一个有趣的用例是，一个片段可以在定义它的模板中多次使用。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Defines a hidden fragment with identifier `strong`.\n"
"In this particular case, we use the `false` boolean literal as the value of the `rendered` parameter.\n"
"However, it's possible to use any expression there."
msgstr "定义一个标识符为 `strong` 的隐藏片段。在本例中，我们使用 `false` 布尔文字作为 `rendered` 参数的值。不过，也可以使用任何表达式。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Include the fragment `strong` and pass the value.\n"
"Note the syntax `$strong` which is translated to include the fragment `strong` from the current template."
msgstr "包含片段 `strong` 并传递值。请注意语法 `$strong` ，它被翻译为包含当前模板中的片段 `strong` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Include the fragment `strong` and pass the value."
msgstr "包括片段 `strong` ，并传递值。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The snippet above renders something like:"
msgstr "上面的片段呈现出这样的效果。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Eval Section"
msgstr "评估部分"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"This section can be used to parse and evaluate a template dynamically.\n"
"The behavior is very similar to xref:include_helper[Include Section] but:"
msgstr "该部分可用于动态解析和评估模板。其行为与 \" xref:include_helper[包含部分] \"非常相似，但 \" xref:include_helper[包含部分] \"的功能更多："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The template content is passed directly, i.e. not obtained via an `io.quarkus.qute.TemplateLocator`,"
msgstr "模板内容是直接传递的，也就是说，不是通过 `io.quarkus.qute.TemplateLocator` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It's not possible to override parts of the evaluated template."
msgstr "不可能覆盖已评估模板的部分内容。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The result of `myData.template` will be used as the template.\n"
"The template is executed with the xref:current_context_object[Current Context], i.e. can reference data from the template it's included into."
msgstr "`myData.template` 的结果将用作模板。模板以 xref:current_context_object[当前上下文] 执行，即可以引用模板中的数据。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It's also possible to define optional parameters that can be used in the evaluated template."
msgstr "也可以定义可选的参数，可以在评估的模板中使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The content of the section is always ignored."
msgstr "该部分的内容总是被忽略。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The evaluated template is parsed and evaluated every time the section is executed.\n"
"In other words, it is not possible to cache the parsed value to conserve resources and optimize performance."
msgstr "每次执行该部分时，都会对已评估模板进行解析和评估。换句话说，无法通过缓存解析值来节省资源和优化性能。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Cached Section"
msgstr "当科"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Sometimes it's practical to cache parts of the template that rarely change.\n"
"In order to use the caching capability, register and configure the built-in `io.quarkus.qute.CacheSectionHelper.Factory`:"
msgstr "有时，缓存模板中很少更改的部分也很实用。要使用缓存功能，请注册并配置内置的 `io.quarkus.qute.CacheSectionHelper.Factory` .NET 缓存："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If the `quarkus-cache` extension is present in a Quarkus application then the `CacheSectionHelper` is registered and configured _automatically_. The name of the cache is `qute-cache`. It can be configured xref:cache.adoc#configuring-the-underlying-caching-provider[in a standard way] and even managed programmatically via `@Inject @CacheName(\"qute-cache\") Cache`."
msgstr "如果Quarkus应用程序中存在 `quarkus-cache` 扩展，那么 `CacheSectionHelper` 会 _自动_ 注册和配置。缓存的名称是 `qute-cache` 。它可以 link:cache.html#configuring-the-underlying-caching-provider[以标准的方式] 进行配置，甚至可以通过 `@Inject @CacheName(\"qute-cache\") Cache` 进行编程管理。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Then, the `{#cached}` section can be used in a template:"
msgstr "方法参数可以在模板中使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If the `key` param is not used then all clients of the template share the same cached value."
msgstr "如果不使用 `key` 参数，那么模板的所有客户端都共享相同的缓存值。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This part of the template will be cached and the `{service.findResult}` expression is only evaluated when a cache entry is missing/invalidated."
msgstr "模板的这一部分将被缓存， `{service.findResult}` 表达式只有在缓存条目缺失/无效时才会被评估。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `key` param is set and so a different cached value is used for each result of the `{currentUser.username}` expression."
msgstr " `key` 参数被设置，因此对于 `{currentUser.username}` 表达式的每个结果，都会使用不同的缓存值。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "When using cache it's very often important to have the option to invalidate a cache entry by the specific key. In Qute the key of a cache entry is a `String` that consist of the template name, line and column of the starting `{#cached}` tag and the optional `key` parameter: `{TEMPLATE}:{LINE}:{COLUMN}_{KEY}`. For example, `foo.html:10:1_alpha` is a key for the cached section in a template `foo.html`, the `{#cached}` tag is placed on the line 10, column 1. And the optional `key` parameter resolves to `alpha`."
msgstr "在使用缓存的时候，有一个选项可以通过特定的键来使缓存条目失效，这一点非常重要。在Qute中，一个缓存条目的键是一个 `String` ，由模板名称、起始 `{#cached}` 标签的行和列以及可选的 `key` 参数组成： `{TEMPLATE}:{LINE}:{COLUMN}_{KEY}` 。例如， `foo.html:10:1_alpha` 是一个模板 `foo.html` ， `{#cached}` 标签放在第10行第1列中的缓存部分的键。而可选的 `key` 参数则解析为 `alpha` 。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Rendering Output"
msgstr "渲染输出"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"`TemplateInstance` provides several ways to trigger the rendering and consume the result.\n"
"The most straightforward approach is represented by `TemplateInstance.render()`.\n"
"This method triggers a synchronous rendering, i.e. the current thread is blocked until the rendering is finished, and returns the output.\n"
"By contrast, `TemplateInstance.renderAsync()` returns a `CompletionStage<String>` which is completed when the rendering is finished."
msgstr "`TemplateInstance` 提供了几种触发渲染和消耗渲染结果的方法。最直接的方法是 。该方法触发同步渲染，即当前线程被阻塞直到渲染完成，并返回输出结果。相比之下， 返回一个 ，当渲染完成时，渲染也随之完成。 `TemplateInstance.render()` `TemplateInstance.renderAsync()` `CompletionStage<String>`"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`TemplateInstance.renderAsync()` Example"
msgstr " `TemplateInstance.renderAsync()` 例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Register a callback that is executed once the rendering is finished."
msgstr "注册一个回调，一旦渲染完成就会执行。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"There are also two methods that return https://smallrye.io/smallrye-mutiny/[Mutiny] types.\n"
"`TemplateInstance.createUni()` returns a new `Uni<String>` object.\n"
"If you call `createUni()` the template is not rendered right away.\n"
"Instead, every time `Uni.subscribe()` is called a new rendering of the template is triggered."
msgstr "`TemplateInstance.createUni()` 返回一个 link:https://smallrye.io/smallrye-mutiny/[新] 的 `Uni<String>` 对象。如果调用 `createUni()` ，模板不会立即渲染。相反，每次调用 `Uni.subscribe()` 都会触发一次新的模板渲染。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`TemplateInstance.createUni()` Example"
msgstr " `TemplateInstance.createUni()` 例子"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"`TemplateInstance.createMulti()` returns a new `Multi<String>` object.\n"
"Each item represents a part/chunk of the rendered template.\n"
"Again, `createMulti()` does not trigger rendering.\n"
"Instead, every time a computation is triggered by a subscriber the template is rendered again."
msgstr "`TemplateInstance.createMulti()` 返回一个新的 对象。每个项目代表渲染模板的一部分/大块。同样， 不会触发渲染。相反，每次用户触发计算时，模板都会再次呈现。 `Multi<String>` `createMulti()`"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`TemplateInstance.createMulti()` Example"
msgstr " `TemplateInstance.createMulti()` 例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The template rendering is divided in two phases. During the first phase, which is asynchronous, all expressions in the template are resolved and a _result tree_ is built. In the second phase, which is synchronous, the result tree is _materialized_, i.e. one by one the result nodes emit chunks that are consumed/buffered by the specific consumer."
msgstr "模板的渲染分为两个阶段。在第一阶段，即异步阶段，模板中的所有表达式被解析，并建立一个 _结果树_ 。在第二阶段，也就是同步阶段，结果树被 _具体化_ ，也就是说，结果节点一个接一个地发射出被特定消费者消费/缓冲的块。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Engine Configuration"
msgstr "发动机配置"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Value Resolvers"
msgstr "价值解析器"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Value resolvers are used when evaluating expressions.\n"
"A custom `io.quarkus.qute.ValueResolver` can be registered programmatically via `EngineBuilder.addValueResolver()`."
msgstr "值解析器用于计算表达式。自定义 `io.quarkus.qute.ValueResolver` 可通过 `EngineBuilder.addValueResolver()` 以编程方式注册。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`ValueResolver` Builder Example"
msgstr " `ValueResolver` 建筑商实例"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template Locator"
msgstr "模板定位器"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A template can be either registered manually or automatically via a template locator.\n"
"The locators are used whenever the `Engine.getTemplate()` method is called, and the engine has no template for a given id stored in the cache.\n"
"The locator is responsible for using the correct character encoding when reading the contents of a template."
msgstr "模板可以手动注册，也可以通过模板定位器自动注册。当调用 `Engine.getTemplate()` 方法时，如果引擎缓存中没有给定 id 的模板，就会使用定位器。定位器负责在读取模板内容时使用正确的字符编码。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"In Quarkus, all templates from the `src/main/resources/templates` are located automatically and the encoding set via `quarkus.qute.default-charset` (UTF-8 by default) is used.\n"
"Custom locators can be xref:template-locator-registration[registered] by using the `@Locate` annotation."
msgstr "在 Quarkus 中，来自 `src/main/resources/templates` 的所有模板都会自动定位，并使用通过 `quarkus.qute.default-charset` 设置的编码（默认为 UTF-8）。自定义定位器可通过 `@Locate` 注释 xref:template-locator-registration[注册] 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Content Filters"
msgstr "内容过滤器"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Content filters can be used to modify the template contents before parsing."
msgstr "内容过滤器可以用来在解析前修改模板内容。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Content Filter Example"
msgstr "内容过滤器实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Escape all occurrences of `${`."
msgstr "逃避所有出现的 `${` 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Strict Rendering"
msgstr "严格的渲染"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The strict rendering enables the developers to catch insidious errors caused by typos and invalid expressions.\n"
"If enabled then any expression that cannot be resolved, i.e. is evaluated to an instance of `io.quarkus.qute.Results.NotFound`, will always result in a `TemplateException` and the rendering is aborted.\n"
"A `NotFound` value is considered an error because it basically means that no value resolver was able to resolve the expression correctly."
msgstr "严格渲染使开发人员能够捕捉到由错别字和无效表达式引起的隐性错误。如果启用该功能，那么任何无法解析的表达式（即求值为 `io.quarkus.qute.Results.NotFound` 的实例）都会导致 `TemplateException` ，并中止渲染。 `NotFound` 值被视为错误，因为它基本上意味着任何值解析器都无法正确解析表达式。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`null` is a valid value though. It is considered `falsy` as described in xref:if_section[If Section] and does not produce any output."
msgstr " `null` 是一个有效的值，但是。如 link:#if_section[[if_section]] 中所述，它被认为是 ，不产生任何输出。 `falsy` "

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Strict rendering is enabled by default.\n"
"However, you can disable this functionality via `io.quarkus.qute.EngineBuilder.strictRendering(boolean)`."
msgstr "严格渲染功能默认已启用。不过，您可以通过 `io.quarkus.qute.EngineBuilder.strictRendering(boolean)` 禁用该功能。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In Quarkus, a dedicated config property can be used instead: `quarkus.qute.strict-rendering`."
msgstr "在Quarkus中，可以使用一个专门的配置属性来代替： `quarkus.qute.strict-rendering` 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"If you really need to use an expression which can potentially lead to a \"not found\" error, you can use _default values_ and _safe expressions_ in order to suppress the error.\n"
"A default value is used if the previous part of an expression cannot be resolved or resolves to `null`.\n"
"You can use the elvis operator to output the default value: `{foo.bar ?: 'baz'}`, which is effectively the same as the following virtual method: `{foo.bar.or('baz')}`.\n"
"A safe expression ends with the `??` suffix and results in `null` if the expression cannot be resolved.\n"
"It can be very useful e.g. in `{#if}` sections: `{#if valueNotFound??}Only rendered if valueNotFound is truthy!{/if}`.\n"
"In fact, `??` is just a shorthand notation for `.or(null)`, i.e. `{#if valueNotFound??}` becomes `{#if valueNotFound.or(null)}`."
msgstr "如果确实需要使用可能导致 \"未找到 \"错误的表达式，可以使用 _默认值_ 和 _安全表达式_ 来抑制错误。如果表达式的前一部分无法解析或解析为 `null` ，则使用默认值。可以使用 elvis 操作符输出默认值： `{foo.bar ?: 'baz'}` ，这实际上与以下虚拟方法相同： `{foo.bar.or('baz')}` 。安全表达式以 `??` 后缀结束，如果表达式无法解析，则结果为 `null` 。这种表达式非常有用，例如在 `{#if}` 部分： `{#if valueNotFound??}Only rendered if valueNotFound is truthy!{/if}` 。事实上， `??` 只是 `.or(null)` 的速记符号，即 `{#if valueNotFound??}` 变成 `{#if valueNotFound.or(null)}` 。"

#. type: Title ==
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Quarkus Integration"
msgstr "Quarkus集成"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If you want to use Qute in your Quarkus application, add the following dependency to your project:"
msgstr "如果你想在你的Quarkus应用程序中使用Qute，请在你的项目中添加以下依赖关系。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"In Quarkus, a preconfigured engine instance is provided and available for injection - a bean with scope `@ApplicationScoped`, bean type `io.quarkus.qute.Engine` and qualifier `@Default` is registered automatically.\n"
"Moreover, all templates located in the `src/main/resources/templates` directory are validated and can be easily injected."
msgstr "在 Quarkus 中，提供了一个预配置的引擎实例供注入使用--一个具有作用域 `@ApplicationScoped` 、Bean 类型 `io.quarkus.qute.Engine` 和限定符 `@Default` 的 Bean 会被自动注册。此外，位于 `src/main/resources/templates` 目录中的所有模板都经过验证，可以轻松注入。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If there is no `Location` qualifier provided, the field name is used to locate the template. In this particular case, the container will attempt to locate a template with path `src/main/resources/templates/items.html`."
msgstr "如果没有提供 `Location` 修饰语，则使用字段名来定位模板。在这种特殊情况下，容器将试图定位一个路径为 `src/main/resources/templates/items.html` 的模板。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `Location` qualifier instructs the container to inject a template from a path relative from `src/main/resources/templates`. In this case, the full path is `src/main/resources/templates/detail/items2_v1.html`."
msgstr " `Location` 修饰语指示容器从与 `src/main/resources/templates` 相对的路径中注入一个模板。在这种情况下，全路径是 `src/main/resources/templates/detail/items2_v1.html` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Inject the configured `Engine` instance."
msgstr "注入配置的 `Engine` 实例。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Engine Customization"
msgstr "发动机配置"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Additional components can be registered manually via `EngineBuilder` methods in a CDI observer method at runtime:"
msgstr "附加组件可以在运行时通过CDI观察者方法中的 `EngineBuilder` 方法手动注册："

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"However, in this particular case the section helper factory is ignored during validation at build time.\n"
"If you want to register a section that participates in validation of templates at build time then use the convenient `@EngineConfiguration` annotation:"
msgstr "不过，在这种特殊情况下，部分辅助工厂会在构建时的验证过程中被忽略。如果您想在构建时注册一个参与模板验证的部分，请使用方便的 `@EngineConfiguration` 注解："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A `SectionHelperFactory` annotated with `@EngineConfiguration` is used during validation of templates at build time and automatically registered at runtime (a) as a section factory and (b) as a CDI bean."
msgstr "一个用 `@EngineConfiguration` 注释的 `SectionHelperFactory` 在构建时的模板验证过程中被使用，并在运行时自动注册（a）作为一个部分工厂和（b）作为一个CDI bean。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A CDI bean instance is used at runtime - this means that the factory can define injection points"
msgstr "一个CDI Bean实例在运行时被使用--这意味着工厂可以定义注入点"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Validate that `foo` parameter is always present; e.g. `{#custom foo='bar' /}` is ok but `{#custom /}` results in a build failure."
msgstr "验证 `foo` 参数是否始终存在；例如， `{#custom foo='bar' /}` 可以，但 `{#custom /}` 会导致构建失败。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Use the injected `Service` during rendering."
msgstr "在渲染过程中使用注入的 `Service` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `@EngineConfiguration` annotation can be also used to register ``ValueResolver``s and ``NamespaceResolver``s."
msgstr " `@EngineConfiguration` 注释也可以用来注册 `ValueResolver` s和 `NamespaceResolver` s。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template Locator Registration"
msgstr "模板定位器"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The easiest way to register xref:template-locator[template locators] is to make them CDI beans.\n"
"As the custom locator is not available during the build time when a template validation is done, you need to disable the validation via the `@Locate` annotation."
msgstr "注册 xref:template-locator[模板定位器] 的最简单方法是将它们变成 CDI Bean。由于自定义定位器在模板验证完成后的构建过程中不可用，因此需要通过 `@Locate` 注解禁用验证。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Custom Locator Example"
msgstr "一个简单的操作者例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A template named `bar.html` is located by the custom locator at runtime."
msgstr "一个名为 `bar.html` 的模板在运行时被自定义定位器定位。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A regular expression `foo.*` disables validation for templates whose name is starting with `foo`."
msgstr "正则表达式 `foo.*` ，禁止对名称以 `foo` 开始的模板进行验证。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Injection fields are resolved as template locators annotated with `@Locate` are registered as singleton session beans."
msgstr "注入字段被解析为用 `@Locate` 注解的模板定位器被注册为单子会话豆。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template Variants"
msgstr "模板变体"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Sometimes it's useful to render a specific variant of the template based on the content negotiation.\n"
"This can be done by setting a special attribute via `TemplateInstance.setAttribute()`:"
msgstr "有时，根据协商内容渲染模板的特定变体非常有用。这可以通过 `TemplateInstance.setAttribute()` 设置一个特殊属性来实现："

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"When using `quarkus-resteasy-qute` the content negotiation is performed automatically.\n"
"For more information, see the xref:resteasy_integration[RESTEasy Integration] section."
msgstr "使用 `quarkus-resteasy-qute` 时，内容协商将自动执行。更多信息，请参阅 xref:resteasy_integration[RESTEasy Integration] 部分。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Injecting Beans Directly In Templates"
msgstr "在模板中直接注入豆类"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A CDI bean annotated with `@Named` can be referenced in any template through `cdi` and/or `inject` namespaces:"
msgstr "一个用 `@Named` 注释的CDI Bean可以通过 `cdi` 和/或 `inject` 命名空间在任何模板中被引用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "First, a bean with name `personService` is found and then used as the base object."
msgstr "首先，找到一个名字为 `personService` 的bean，然后将其作为基础对象。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "First, a bean with name `foo` is found and then used as the base object."
msgstr "首先，找到一个名字为 `foo` 的bean，然后将其作为基础对象。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`@Named @Dependent` beans are shared across all expressions in a template for a single rendering operation, and destroyed after the rendering finished."
msgstr " `@Named @Dependent` beans在一个模板中的所有表达式中共享，用于一次渲染操作，并在渲染完成后销毁。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "All expressions with `cdi` and `inject` namespaces are validated during build."
msgstr "所有带有 `cdi` 和 `inject` 命名空间的表达式都在构建过程中被验证。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "For the expression `cdi:personService.findPerson(10).name`, the implementation class of the injected bean must either declare the `findPerson` method or a matching xref:template_extension_methods[template extension method] must exist."
msgstr "对于表达式 `cdi:personService.findPerson(10).name` ，被注入的Bean的实现类必须声明 `findPerson` 方法或者必须存在一个匹配的 link:#template_extension_methods[模板扩展方法] 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "For the expression `inject:foo.price`, the implementation class of the injected bean must either have the `price` property (e.g. a `getPrice()` method) or a matching xref:template_extension_methods[template extension method] must exist."
msgstr "对于表达式 `inject:foo.price` ，被注入的Bean的实现类必须具有 `price` 属性（例如 `getPrice()` 方法）或者必须存在一个匹配的 link:#template_extension_methods[模板扩展方法] 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A `ValueResolver` is also generated for all beans annotated with `@Named` so that it's possible to access its properties without reflection."
msgstr "对于所有用 `@Named` 注释的Bean，也会生成一个 `ValueResolver` ，这样就有可能在没有反射的情况下访问其属性。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If your application serves xref:http-reference.adoc[HTTP requests] you can also inject the current `io.vertx.core.http.HttpServerRequest` via the `inject` namespace, e.g. `{inject:vertxRequest.getParam('foo')}`."
msgstr "如果你的应用程序提供 link:http-reference.html[HTTP请求] ，你也可以通过 `inject` 命名空间注入当前的 `io.vertx.core.http.HttpServerRequest` ，例如 `{inject:vertxRequest.getParam('foo')}` 。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Type-safe Expressions"
msgstr "类型安全的表达式"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Template expressions can be optionally type-safe.\n"
"Which means that an expression is validated against the existing Java types and template extension methods.\n"
"If an invalid/incorrect expression is found then the build fails."
msgstr "模板表达式可以选择类型安全。这意味着表达式将根据现有的 Java 类型和模板扩展方法进行验证。如果发现无效/不正确的表达式，则构建失败。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "For example, if there is an expression `item.name` where `item` maps to `org.acme.Item` then `Item` must have a property `name` or a matching template extension method must exist."
msgstr "例如，如果有一个表达式 `item.name` ，其中 `item` 映射到 `org.acme.Item` ，那么 `Item` 必须有一个属性 `name` ，或者必须存在一个匹配的模板扩展方法。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"An optional _parameter declaration_ is used to bind a Java type to expressions whose first part matches the parameter name.\n"
"Parameter declarations are specified directly in a template."
msgstr "可选 _参数声明_ 用于将 Java 类型绑定到第一部分与参数名称相匹配的表达式。参数声明可在模板中直接指定。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A Java type should be always identified with a _fully qualified name_ unless it's a JDK type from the `java.lang` package - in this case, the package name is optional.\n"
"Parameterized types are supported, however wildcards are always ignored - only the upper/lower bound is taken into account.\n"
"For example, the parameter declaration `{@java.util.List<? extends org.acme.Foo> list}` is recognized as `{@java.util.List<org.acme.Foo> list}`.\n"
"Type variables are not handled in a special way and should never be used."
msgstr "Java 类型应始终使用 _完全限定名称_ 来标识，除非它是 `java.lang` 包中的 JDK 类型--在这种情况下，包名称是可选的。支持参数化类型，但通配符总是被忽略--只考虑上下限。例如，参数声明 `{@java.util.List<? extends org.acme.Foo> list}` 被识别为 `{@java.util.List<org.acme.Foo> list}` 。类型变量没有特殊处理方式，因此绝对不能使用。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Parameter Declaration Example"
msgstr "参数声明示例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Parameter declaration - maps `foo` to `org.acme.Foo`."
msgstr "参数声明--将 `foo` 到 `org.acme.Foo` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Not validated - not matching a param declaration."
msgstr "未验证 - 不匹配参数声明。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This expression is validated. `org.acme.Foo` must have a property `message` or a matching template extension method must exist."
msgstr "这个表达式被验证。 `org.acme.Foo` ，必须有一个属性 `message` ，或者必须存在一个匹配的模板扩展方法。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Likewise, the Java type of the object resolved from `foo.message` must have a property `toLowerCase` or a matching template extension method must exist."
msgstr "同样，从 `foo.message` 中解析的对象的Java类型必须有一个属性 `toLowerCase` ，或者必须存在一个匹配的模板扩展方法。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A value resolver is automatically generated for all types used in parameter declarations so that it's possible to access its properties without reflection."
msgstr "对于参数声明中使用的所有类型，会自动生成一个值解析器，这样就有可能在没有反射的情况下访问其属性。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Method parameters of xref:typesafe_templates[type-safe templates] are automatically turned into parameter declarations."
msgstr "link:#typesafe_templates[类型安全模板] 的方法参数会自动转为参数声明。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Note that sections can override names that would otherwise match a parameter declaration:"
msgstr "请注意，章节可以覆盖那些本来与参数声明相匹配的名称。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Validated against `org.acme.Foo`."
msgstr "根据 `org.acme.Foo` 验证。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Not validated - `foo` is overridden in the loop section."
msgstr "未验证 - `foo` 在循环部分被覆盖。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A parameter declaration may specify the _default value_ after the key.\n"
"The key and the default value are separated by an equals sign: `{@int age=10}`.\n"
"The default value is used in the template if the parameter key resolves to `null` or is not found."
msgstr "参数声明可在键后指定 _默认值_ 。关键字和默认值之间用等号隔开： `{@int age=10}` 。如果参数键解析为 `null` 或未找到，则在模板中使用默认值。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"For example, if there's a parameter declaration `{@String foo=\"Ping\"}` and `foo` is not found then you can use `{foo}` and the output will be `Ping`.\n"
"On the other hand, if the value is set (e.g. via `TemplateInstance.data(\"foo\", \"Pong\")`) then the output of `{foo}` will be `Pong`."
msgstr "例如，如果有一个参数声明 `{@String foo=\"Ping\"}` ，但找不到 `foo` ，那么可以使用 `{foo}` ，输出结果将是 `Ping` 。另一方面，如果值已设置（例如通过 `TemplateInstance.data(\"foo\", \"Pong\")` ），那么 `{foo}` 的输出将是 `Pong` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The type of a default value must be assignable to the type of the parameter declaration. For example, see the incorrect parameter declaration that results in a build failure: `{@org.acme.Foo foo=1}`."
msgstr "默认值的类型必须可以分配给参数声明的类型，即下面的参数声明是不正确的，会导致构建失败： `{@org.acme.Foo foo=1}` 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The default value is actually an xref:expressions[expression]. So the default value does not have to be a literal (such as `42` or `true`). For example, you can leverage the `@TemplateEnum` and specify an enum constant as a default value of a parameter declaration: `{@org.acme.MyEnum myEnum=MyEnum:FOO}`.\n"
"However, the infix notation is not supported in default values unless the parentheses are used for grouping, e.g. `{@org.acme.Foo foo=(foo1 ?: foo2)}`."
msgstr "默认值实际上是一个 xref:expressions[表达式] 。因此，默认值不一定是一个字面形式（如 `42` 或 `true` ）。例如，您可以利用 `@TemplateEnum` ，指定一个枚举常量作为参数声明的默认值： `{@org.acme.MyEnum myEnum=MyEnum:FOO}` 。不过，默认值不支持下位符号，除非括号用于分组，例如 `{@org.acme.Foo foo=(foo1 ?: foo2)}` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The type of a default value is not validated in xref:standalone[Qute standalone]."
msgstr "缺省值的类型在 link:#standalone[Qute单机版] 中没有得到验证。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "More Parameter Declarations Examples"
msgstr "更多参数声明的例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A primitive type."
msgstr "一个原始的类型。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`String` is replaced with `java.lang.String`: `{@java.util.List<java.lang.String> strings}`"
msgstr " `String` 被替换成 。 `java.lang.String` `{@java.util.List<java.lang.String> strings}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The wildcard is ignored and the upper bound is used instead: `{@java.util.Map<String,Number>}`"
msgstr "通配符被忽略，而使用上界。 `{@java.util.Map<String,Number>}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The wildcard is ignored and the `java.lang.Object` is used instead: `{@java.util.Optional<java.lang.Object>}`"
msgstr "通配符被忽略，而是使用 `java.lang.Object` 。 `{@java.util.Optional<java.lang.Object>}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The type is `java.lang.String`, the key is `name` and the default value is `Quarkus`."
msgstr "类型是 `java.lang.String` ，键是 `name` ，默认值是 `Quarkus` 。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Type-safe Templates"
msgstr "类型安全的模板"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"You can also define type-safe templates in your Java code.\n"
"If using xref:resteasy_integration[templates in Jakarta REST resources], you can rely on the following convention:"
msgstr "您还可以在 Java 代码中定义类型安全模板。如果 xref:resteasy_integration[在 Jakarta REST 资源中] 使用 xref:resteasy_integration[模板] ，可以遵循以下约定："

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Organise your template files in the `/src/main/resources/templates` directory, by grouping them into one directory per resource class. So, if\n"
"your `ItemResource` class references two templates `hello` and `goodbye`, place them at `/src/main/resources/templates/ItemResource/hello.txt`\n"
"and `/src/main/resources/templates/ItemResource/goodbye.txt`. Grouping templates per resource class makes it easier to navigate to them."
msgstr "在 `/src/main/resources/templates` 目录中整理模板文件，每个资源类将它们归入一个目录。因此，如果 `ItemResource` 类引用了两个模板 `hello` 和 `goodbye` ，请将它们放在 `/src/main/resources/templates/ItemResource/hello.txt` 和 `/src/main/resources/templates/ItemResource/goodbye.txt` 下。按资源类对模板进行分组可以更容易地找到它们。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In each of your resource class, declare a `@CheckedTemplate static class Template {}` class within your resource class."
msgstr "在你的每个资源类中，在你的资源类中声明一个 `@CheckedTemplate static class Template {}` 类。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Declare one `public static native TemplateInstance method();` per template file for your resource."
msgstr "为你的资源在每个模板文件中声明一个 `public static native TemplateInstance method();` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Use those static methods to build your template instances."
msgstr "使用这些静态方法来构建你的模板实例。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "ItemResource.java"
msgstr "ItemResource.java"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template."
msgstr " `TemplateInstance` 声明一个方法，给我们一个 `templates/ItemResource/item.html` ，并声明其 `Item item` 参数，以便我们可以验证模板。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `item` parameter is automatically turned into a xref:typesafe_expressions[parameter declaration] and so all expressions that reference this name will be validated."
msgstr " `item` 参数会自动变成一个 link:#typesafe_expressions[参数声明] ，因此所有引用这个名字的表达式都会被验证。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Make the `Item` object accessible in the template."
msgstr "使 `Item` 对象在模板中可以访问。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "By default, the templates defined in a class annotated with `@CheckedTemplate` can only contain type-safe expressions, i.e. expressions that can be validated at build time. You can use `@CheckedTemplate(requireTypeSafeExpressions = false)` to relax this requirement."
msgstr "默认情况下，用 `@CheckedTemplate` 注释的类中定义的模板只能包含类型安全的表达式，即在构建时可以被验证的表达式。你可以使用 `@CheckedTemplate(requireTypeSafeExpressions = false)` 来放松这一要求。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Top-level Type-safe Templates"
msgstr "类型安全的模板"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can also declare a top-level Java class annotated with `@CheckedTemplate`:"
msgstr "你也可以声明一个顶层的Java类，并注有 `@CheckedTemplate` 。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Top-level checked templates"
msgstr "顶层检查的模板"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This declares a template with path `templates/hello.txt`. The `name` parameter is automatically turned into a  xref:typesafe_expressions[parameter declaration], so that all expressions referencing this name will be validated."
msgstr "这声明了一个模板，路径为 `templates/hello.txt` 。 `name` 参数会自动转为 xref:typesafe_expressions[参数声明] ，因此所有引用该名称的表达式都将得到验证。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Then declare one `public static native TemplateInstance method();` per template file.\n"
"Use those static methods to build your template instances:"
msgstr "然后为每个模板文件声明一个 `public static native TemplateInstance method();` 。使用这些静态方法来构建模板实例："

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "HelloResource.java"
msgstr "HelloResource.java"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Customized Template Path"
msgstr "定制的模板路径"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The template path of a `@CheckedTemplate` method consists of the _base path_ and a _defaulted name_.\n"
"The _base path_ is supplied by the `@CheckedTemplate#basePath()`.\n"
"By default, the simple name of the declaring class for a nested static class or an empty string for a top level class is used.\n"
"The _defaulted name_ is derived by the strategy specified in `@CheckedTemplate#defaultName()`.\n"
"By default, the name of the `@CheckedTemplate` method is used as is."
msgstr "__ `@CheckedTemplate` _方法的_ 模 _板路径由_ 基本路径和默认名称组成。基本路径由 提供。默认情况下，嵌套静态类使用声明类的简单名称，顶层类使用空字符串。 _基本路径_ 由 `@CheckedTemplate#basePath()` 提供。默认情况下，嵌套静态类使用声明类的简单名称，顶层类使用空字符串。 _默认名称_ 由 `@CheckedTemplate#defaultName()` 中指定的策略导出。默认情况下， `@CheckedTemplate` 方法的名称按原样使用。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Customized Template Path Example"
msgstr "RestTemplate示例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The template path for this method will be `items/item-and-order`."
msgstr "该方法的模板路径将是 `items/item-and-order` 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Type-safe Fragments"
msgstr "类型安全的表达式"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"You can also define a type-safe xref:fragments[fragment] in your Java code.\n"
"A _native static_ method with the name that contains a dollar sign `$` denotes a method that represents a fragment of a type-safe template.\n"
"The name of the fragment is derived from the annotated method name.\n"
"The part before the last occurence of a dollar sign `$` is the method name of the related type-safe template.\n"
"The part after the last occurence of a dollar sign is the fragment identifier.\n"
"The strategy defined by the relevant `CheckedTemplate#defaultName()` is honored when constructing the defaulted names."
msgstr "您也可以在 Java 代码中定义类型安全 xref:fragments[片段] 。名称中包含美元符号 `$` 的 _本地静态方法_ 表示类型安全模板片段的方法。片段的名称来自注释的方法名称。最后一次出现美元符号 `$` 之前的部分是相关类型安全模板的方法名。最后一个美元符号之后的部分是片段标识符。在构建默认名称时，将遵守相关 `CheckedTemplate#defaultName()` 所定义的策略。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Type-safe Fragment Example"
msgstr "类型安全的模板"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Quarkus validates at build time that each template that corresponds to the `Templates#items()` contains a fragment with identifier `item`. Moreover, the parameters of the fragment method are validated too. In general, all type-safe expressions that are found in the fragment and that reference some data from the original/outer template require a specific parameter to be present."
msgstr "Quarkus在构建时验证每个对应于 `Templates#items()` 的模板是否包含一个标识符为 `item` 的片段。此外，片段方法的参数也被验证。一般来说，在片段中发现的所有类型安全表达式，如果引用原始/外部模板中的一些数据，都需要有一个特定的参数存在。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Fragment Definition in `items.html`"
msgstr "片段的定义 `items.html` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Defines a fragment with identifier `item`."
msgstr "定义了一个标识符为 `item` 的片段。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `{item.name}` expression implies that the `Templates#items$item()` method must declare a parameter of name `item` and type `org.acme.Item`."
msgstr " `{item.name}` 表达式意味着 `Templates#items$item()` 方法必须声明一个名称为 `item` ，类型为 `org.acme.Item` 的参数。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Type-safe Fragment Call Site Example"
msgstr "类型安全的片段调用站点示例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can specify `@CheckedTemplate#ignoreFragments=true` in order to disable this feature, i.e. a dollar sign `$` in the method name will not result in a checked fragment method."
msgstr "你可以指定 `@CheckedTemplate#ignoreFragments=true` ，以便禁用这一功能，即方法名称中的美元符号 `$` ，将不会导致检查片段方法。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template Extension Methods"
msgstr "模板扩展方法"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Extension methods can be used to extend the data classes with new functionality (to extend the set of accessible properties and methods) or to resolve expressions for a specific xref:namespace_extension_methods[namespace].\n"
"For example, it is possible to add _computed properties_ and _virtual methods_."
msgstr "扩展方法可用于用新功能扩展数据类（扩展可访问属性和方法集）或解决特定 xref:namespace_extension_methods[命名空间] 的表达式问题。例如，可以添加 _计算属性_ 和 _虚拟方法_ 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A value resolver is automatically generated for a method annotated with `@TemplateExtension`.\n"
"If a class is annotated with `@TemplateExtension` then a value resolver is generated for every _non-private static method_ declared on the class.\n"
"Method-level annotations override the behavior defined on the class.\n"
"Methods that do not meet the following requirements are ignored."
msgstr "使用 `@TemplateExtension` 进行注解的方法会自动生成一个值解析器。如果一个类使用 `@TemplateExtension` 进行注解，那么该类中声明的每个 _非私有静态方法_ 都会生成一个值解析器。方法级注释会覆盖类上定义的行为。不符合以下要求的方法将被忽略。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A template extension method:"
msgstr "一种模板扩展方法。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "must not be `private`"
msgstr "不得 `private` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "must be static,"
msgstr "必须是静态的。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "must not return `void`."
msgstr "不得返回 `void` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If there is no namespace defined the class of the first parameter that is not annotated with `@TemplateAttribute` is used to match the base object. Otherwise, the namespace is used to match an expression."
msgstr "如果没有定义命名空间，那么第一个参数中没有注解的类 `@TemplateAttribute` ，用来匹配基础对象。否则，命名空间被用来匹配一个表达式。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Matching by Name"
msgstr "按名称匹配"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The method name is used to match the property name by default."
msgstr "默认情况下，方法名称用于匹配属性名称。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Extension Method Example"
msgstr "扩展方法示例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This method matches an expression with base object of the type `Item.class` and the `discountedPrice` property name."
msgstr "该方法与类型为 `Item.class` 的基础对象和 `discountedPrice` 属性名称的表达式相匹配。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This template extension method makes it possible to render the following template:"
msgstr "这个模板扩展方法使得渲染以下模板成为可能。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item` is resolved to an instance of `org.acme.Item`."
msgstr " `item` 被解析为 的一个实例。 `org.acme.Item` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "However, it is possible to specify the matching name with `matchName()`."
msgstr "然而，也可以用 `matchName()` ，指定匹配的名称。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`TemplateExtension#matchName()` Example"
msgstr " `TemplateInstance.createUni()` 例子"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A special constant - `TemplateExtension#ANY`/`*` - can be used to specify that the extension method matches any name."
msgstr "一个特殊的常数-- `TemplateExtension#ANY` / `*` --可以用来指定扩展方法匹配任何名称。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`TemplateExtension#ANY` Example"
msgstr "模板实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A additional string method parameter is used to pass the actual property name."
msgstr "一个额外的字符串方法参数被用来传递实际的属性名称。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It's also possible to match the name against a regular expression specified in `matchRegex()`."
msgstr "也可以用 `matchRegex()` 中指定的正则表达式来匹配名称。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`TemplateExtension#matchRegex()` Example"
msgstr " `TemplateInstance.createUni()` 例子"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Finally, `matchNames()` can be used to specify a collection of matching names.\n"
"An additional string method parameter is mandatory as well."
msgstr "最后， `matchNames()` 可用于指定匹配名称的集合。另外一个字符串方法参数也是必须的。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`TemplateExtension#matchNames()` Example"
msgstr " `TemplateInstance.createUni()` 例子"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Superfluous matching conditions are ignored. The conditions sorted by priority in descending order are:\n"
"`matchRegex()`, `matchNames()` and `matchName()`."
msgstr "多余的匹配条件将被忽略。按优先级降序排列的条件是 `matchRegex()` , `matchNames()` 和 `matchName()` 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Method Parameters"
msgstr "方法参数"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"An extension method may declare parameters.\n"
"If no namespace is specified then the first parameter that is not annotated with `@TemplateAttribute` is used to pass the base object, i.e. `org.acme.Item` in the first example.\n"
"If matching any name or using a regular expression, then a string method parameter needs to be used to pass the property name.\n"
"Parameters annotated with `@TemplateAttribute` are obtained via `TemplateInstance#getAttribute()`.\n"
"All other parameters are resolved when rendering the template and passed to the extension method."
msgstr "扩展方法可以声明参数。如果未指定命名空间，则第一个未注明 `@TemplateAttribute` 的参数将用于传递基本对象，即第一个示例中的 `org.acme.Item` 。如果匹配任何名称或使用正则表达式，则需要使用字符串方法参数来传递属性名称。注释为 `@TemplateAttribute` 的参数通过 `TemplateInstance#getAttribute()` 获取。所有其他参数都会在渲染模板时解析并传递给扩展方法。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Multiple Parameters Example"
msgstr "多参数实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This method matches an expression with base object of the type `BigDecimal.class`, with the `scale` virtual method name and two virtual method parameters."
msgstr "该方法与类型为 `BigDecimal.class` ，具有 `scale` 虚方法名称和两个虚方法参数的基对象的表达式匹配。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`item.discountedPrice` is resolved to an instance of `BigDecimal`."
msgstr " `item.discountedPrice` 被解析为 的一个实例。 `BigDecimal` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Namespace Extension Methods"
msgstr "名称空间扩展方法"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"If `TemplateExtension#namespace()` is specified then the extension method is used to resolve expressions with the given xref:expressions[namespace].\n"
"Template extension methods that share the same namespace are grouped in one resolver ordered by `TemplateExtension#priority()`.\n"
"The first matching extension method is used to resolve an expression."
msgstr "如果指定了 `TemplateExtension#namespace()` ，那么扩展方法将用于解析具有给定 xref:expressions[命名空间] 的表达式。共享相同名称空间的模板扩展方法将被归入一个解析器，按 `TemplateExtension#priority()` 排序。第一个匹配的扩展方法用于解析表达式。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Namespace Extension Method Example"
msgstr "命名空间扩展方法实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "These extension methods can be used as follows."
msgstr "这些扩展方法可按以下方式使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The output is `Hello world!`"
msgstr "输出是 `Hello world!` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The output is `olleh`"
msgstr "输出是 `olleh` "

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Built-in Template Extensions"
msgstr "内置模板扩展"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Quarkus provides a set of built-in extension methods."
msgstr "Quarkus提供了一套内置的扩展方法。"

#. type: Title =====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Maps"
msgstr "地图"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`keys` or `keySet`: Returns a Set view of the keys contained in a map"
msgstr " `keys` 或 。返回一个地图中包含的键的Set视图 `keySet` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{#for key in map.keySet}`"
msgstr " `{#for key in map.keySet}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`values`: Returns a Collection view of the values contained in a map"
msgstr " `values` :返回一个地图中包含的数值的集合视图"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{#for value in map.values}`"
msgstr " `{#for value in map.values}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`size`: Returns the number of key-value mappings in a map"
msgstr " `size` :返回一个地图中的键值映射的数量"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{map.size}`"
msgstr " `{map.size}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`isEmpty`: Returns true if a map contains no key-value mappings"
msgstr " `isEmpty` :如果一个地图不包含键值映射，则返回true"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{#if map.isEmpty}`"
msgstr " `{#if map.isEmpty}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`get(key)`: Returns the value to which the specified key is mapped"
msgstr " `get(key)` :返回指定键所映射的值"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{map.get('foo')}`"
msgstr " `{map.get('foo')}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A map value can be also accessed directly: `{map.myKey}`. Use the bracket notation for keys that are not legal identifiers: `{map['my key']}`."
msgstr "一个地图值也可以直接访问： `{map.myKey}` 。对于不是法定标识符的键，使用括号符号： `{map['my key']}` 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Lists"
msgstr "列表"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`get(index)`: Returns the element at the specified position in a list"
msgstr " `get(index)` :返回列表中指定位置的元素"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{list.get(0)}`"
msgstr " `{list.get(0)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`reversed`: Returns a reversed iterator over a list"
msgstr " `reversed` :返回列表上的反转迭代器"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{#for r in recordsList.reversed}`"
msgstr " `{#for r in recordsList.reversed}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`take`: Returns the first `n` elements from the given list; throws an `IndexOutOfBoundsException` if `n` is out of range"
msgstr " `take` :返回给定列表中的第一个 `n` 元素；如果 `n` 超出范围，则抛出一个 `IndexOutOfBoundsException` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{#for r in recordsList.take(3)}`"
msgstr " `{#for r in recordsList.take(3)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`takeLast`: Returns the last `n` elements from the given list; throws an `IndexOutOfBoundsException` if `n` is out of range"
msgstr " `takeLast` :返回给定列表中的最后一个 `n` 元素；如果 `n` 超出范围，则抛出一个 `IndexOutOfBoundsException` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{#for r in recordsList.takeLast(3)}`"
msgstr " `{#for r in recordsList.takeLast(3)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`first`: Returns the first element of the given list; throws an `NoSuchElementException` if the list is empty"
msgstr " `first` :返回给定列表的第一个元素；如果列表为空，则抛出一个 `NoSuchElementException` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{recordsList.first}`"
msgstr " `{recordsList.first}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`last`: Returns the last element of the given list; throws an `NoSuchElementException` if the list is empty"
msgstr " `last` :返回给定列表的最后一个元素；如果列表为空，则抛出一个 `NoSuchElementException` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{recordsList.last}`"
msgstr " `{recordsList.last}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A list element can be accessed directly via an index: `{list.10}` or even `{list[10]}`."
msgstr "一个列表元素可以直接通过索引访问： `{list.10}` ，甚至 `{list[10]}` 。"

#. type: Title =====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Integer Numbers"
msgstr "数字"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`mod`: Modulo operation"
msgstr " `mod` :模数操作"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{#if counter.mod(5) == 0}`"
msgstr " `{#if counter.mod(5) == 0}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`plus` or `+`: Addition"
msgstr " `plus` 或 。加法 `+` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{counter + 1}`"
msgstr " `{#if counter.mod(5) == 0}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{age plus 10}`"
msgstr " `{#case le 10}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{age.plus(10)}`"
msgstr " `{age.plus(10)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`minus` or `-`: Subtraction"
msgstr " `minus` 或 。减法 `-` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{counter - 1}`"
msgstr " `{#if counter.mod(5) == 0}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{age minus 10}`"
msgstr " `{#case le 10}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{age.minus(10)}`"
msgstr " `{age.minus(10)}` "

#. type: Title =====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Strings"
msgstr "弦乐"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`fmt` or `format`: Formats the string instance via `java.lang.String.format()`"
msgstr " `fmt` 或 ：通过以下方式格式化字符串实例 `format` `java.lang.String.format()` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{myStr.fmt(\"arg1\",\"arg2\")}`"
msgstr " `{myStr.fmt(\"arg1\",\"arg2\")}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{myStr.format(locale,arg1)}`"
msgstr " `{myStr.format(locale,arg1)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`str:fmt` or `str:format`: Formats the supplied string value via `java.lang.String.format()`"
msgstr " `str:fmt` 或 ：通过以下方式格式化提供的字符串值 `str:format` `java.lang.String.format()` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{str:format(\"Hello %s!\",name)}`"
msgstr " `{str:format(\"Hello %s!\",name)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{str:fmt(locale,'%tA',now)}`"
msgstr " `{str:fmt(locale,'%tA',now)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`+`: Concatenation"
msgstr " `+` :串联"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{item.name + '_' + mySuffix}`"
msgstr " `{item.name + '_' + mySuffix}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{name + 10}`"
msgstr " `{#case le 10}` "

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Config"
msgstr "配置"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`config:<name>` or `config:[<name>]`: Returns the config value for the given property name"
msgstr " `config:<name>` 或 。返回给定属性名称的配置值 `config:[<name>]` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{config:foo}` or `{config:['property.with.dot.in.name']}`"
msgstr " `{config:foo}` 或 `{config:['property.with.dot.in.name']}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`config:property(name)`: Returns the config value for the given property name; the name can be obtained dynamically by an expression"
msgstr " `config:property(name)` :返回给定属性名称的配置值；该名称可以通过表达式动态地获得"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{config:property('quarkus.foo')}`"
msgstr " `{config:property('quarkus.foo')}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{config:property(foo.getPropertyName())}`"
msgstr " `{config:property(foo.getPropertyName())}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`config:boolean(name)`: Returns the config value for the given property name as a boolean; the name can be obtained dynamically by an expression"
msgstr " `config:boolean(name)` :返回给定属性名称的配置值为一个布尔值；名称可以通过表达式动态获得"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{config:boolean('quarkus.foo.boolean') ?: 'Not Found'}`"
msgstr " `{config:boolean('quarkus.foo.boolean') ?: 'Not Found'}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{config:boolean(foo.getPropertyName()) ?: 'property is false'}`"
msgstr " `{config:boolean(foo.getPropertyName()) ?: 'property is false'}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`config:integer(name)`: Returns the config value for the given property name as an integer; the name can be obtained dynamically by an expression"
msgstr " `config:integer(name)` :返回给定属性名称的配置值为一个整数；名称可以通过表达式动态地获得"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{config:integer('quarkus.foo')}`"
msgstr " `{config:integer('quarkus.foo')}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{config:integer(foo.getPropertyName())}`"
msgstr " `{config:integer(foo.getPropertyName())}` "

#. type: Title =====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Time"
msgstr "时间"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`format(pattern)`: Formats temporal objects from the `java.time` package"
msgstr " `format(pattern)` :形成来自 `java.time` 包的时间对象"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu')}`"
msgstr " `{dateTime.format('d MMM uuuu')}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`format(pattern,locale)`: Formats temporal objects from the `java.time` package"
msgstr " `format(pattern,locale)` :形成来自 `java.time` 包的时间对象"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu',myLocale)}`"
msgstr " `{dateTime.format('d MMM uuuu',myLocale)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`format(pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package"
msgstr " `format(pattern,locale,timeZone)` :形成来自 `java.time` 包的时间对象"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr " `{dateTime.format('d MMM uuuu',myLocale,myTimeZoneId)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`time:format(dateTime,pattern)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr " `time:format(dateTime,pattern)` :形成来自 `java.time` 包、 `java.util.Date` 、 `java.util.Calendar` 和 的时间对象。 `java.lang.Number` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu')}`"
msgstr " `{time:format(myDate,'d MMM uuuu')}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`time:format(dateTime,pattern,locale)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr " `time:format(dateTime,pattern,locale)` :形成来自 `java.time` 包、 `java.util.Date` 、 `java.util.Calendar` 和 的时间对象。 `java.lang.Number` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu', myLocale)}`"
msgstr " `{time:format(myDate,'d MMM uuuu', myLocale)}` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`time:format(dateTime,pattern,locale,timeZone)`: Formats temporal objects from the `java.time` package, `java.util.Date`, `java.util.Calendar` and `java.lang.Number`"
msgstr " `time:format(dateTime,pattern,locale,timeZone)` :形成来自 `java.time` 包、 `java.util.Date` 、 `java.util.Calendar` 和 的时间对象。 `java.lang.Number` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`{time:format(myDate,'d MMM uuuu',myLocale,myTimeZoneId)}`"
msgstr " `{time:format(myDate,'d MMM uuuu',myLocale,myTimeZoneId)}` "

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "@TemplateData"
msgstr "@TemplateData"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"A value resolver is automatically generated for a type annotated with `@TemplateData`.\n"
"This allows Quarkus to avoid using reflection to access the data at runtime."
msgstr "注释为 `@TemplateData` 的类型会自动生成一个值解析器。这样，Quarkus 就可以避免在运行时使用反射来访问数据。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Non-public members, constructors, static initializers, static, synthetic and void methods are always ignored."
msgstr "非公共成员、构造函数、静态初始化器、静态、合成和无效方法总是被忽略。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Any instance of `Item` can be used directly in the template:"
msgstr " `Item` 的任何实例都可以直接在模板中使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`items` is resolved to a list of `org.acme.Item` instances."
msgstr " `items` 被解析为一个 实例的列表。 `org.acme.Item` "

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Furthermore, `@TemplateData.properties()` and `@TemplateData.ignore()` can be used to fine-tune the generated resolver.\n"
"Finally, it is also possible to specify the \"target\" of the annotation - this could be useful for third-party classes not controlled by the application:"
msgstr "此外， `@TemplateData.properties()` 和 `@TemplateData.ignore()` 可用于微调生成的解析器。最后，还可以指定注解的 \"目标\"--这对不受应用程序控制的第三方类可能很有用："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The generated value resolver knows how to invoke the `BigDecimal.setScale()` method."
msgstr "生成值解析器知道如何调用 `BigDecimal.setScale()` 方法。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Accessing Static Fields and Methods"
msgstr "访问静态字段和方法"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"If `@TemplateData#namespace()` is set to a non-empty value then a namespace resolver is automatically generated to access the public static fields and methods of the target class.\n"
"By default, the namespace is the FQCN of the target class where dots and dollar signs are replaced by underscores.\n"
"For example, the namespace for a class with name `org.acme.Foo` is `org_acme_Foo`.\n"
"The static field `Foo.AGE` can be accessed via `{org_acme_Foo:AGE}`.\n"
"The static method `Foo.computeValue(int number)` can be accessed via `{org_acme_Foo:computeValue(10)}`."
msgstr "如果 `@TemplateData#namespace()` 设置为非空值，则会自动生成一个命名空间解析器，以访问目标类的公共静态字段和方法。默认情况下，命名空间是目标类的 FQCN，其中点和美元符号由下划线代替。例如，名称为 `org.acme.Foo` 的类的命名空间是 `org_acme_Foo` 。静态字段 `Foo.AGE` 可通过 `{org_acme_Foo:AGE}` 访问。静态方法 `Foo.computeValue(int number)` 可通过 `{org_acme_Foo:computeValue(10)}` 访问。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A namespace can only consist of alphanumeric characters and underscores."
msgstr "一个命名空间只能由字母数字字符和下划线组成。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Class Annotated With `@TemplateData`"
msgstr "类的注解与 `@TemplateData` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A name resolver with the namespace `model_Status` is generated automatically."
msgstr "一个带有命名空间 `model_Status` 的名称解析器会自动生成。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template Accessing Class Constants"
msgstr "模板访问类常量"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Convenient Annotation For Enums"
msgstr "为枚举提供方便的注释"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"There's also a convenient annotation to access enum constants: `@io.quarkus.qute.TemplateEnum`.\n"
"This annotation is functionally equivalent to `@TemplateData(namespace = TemplateData.SIMPLENAME)`, i.e. a namespace resolver is automatically generated for the target enum and the simple name of the target enum is used as the namespace."
msgstr "访问枚举常量还有一个方便的注解： `@io.quarkus.qute.TemplateEnum` 。该注解的功能等同于 `@TemplateData(namespace = TemplateData.SIMPLENAME)` ，即自动为目标枚举生成命名空间解析器，并将目标枚举的简单名称用作命名空间。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Enum Annotated With `@TemplateEnum`"
msgstr "枚举注解有 `@TemplateEnum` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A name resolver with the namespace `Status` is generated automatically."
msgstr "一个带有命名空间 `Status` 的名称解析器会自动生成。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`@TemplateEnum` declared on a non-enum class is ignored. Also, if an enum also declares the `@TemplateData` annotation, then the `@TemplateEnum` annotation is ignored."
msgstr " `@TemplateEnum` 声明的非枚举类将被忽略。同样，如果一个枚举也声明了 注释，那么 注释也会被忽略。 `@TemplateData` `@TemplateEnum` "

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Template Accessing Enum Constants"
msgstr "模板访问枚举常量"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Quarkus detects possible namespace collisions and fails the build if a specific namespace is defined by multiple `@TemplateData` and/or `@TemplateEnum` annotations."
msgstr "Quarkus会检测可能的命名空间碰撞，如果一个特定的命名空间被多个 `@TemplateData` 和/或 `@TemplateEnum` 注释所定义，则构建失败。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Global Variables"
msgstr "全局变量"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The `io.quarkus.qute.TemplateGlobal` annotation can be used to denote static fields and methods that supply _global variables_ which are accessible in any template.\n"
"Internally, each global variable is added to the data map of any `TemplateInstance` via the `TemplateInstance#data(String, Object)` method."
msgstr "`io.quarkus.qute.TemplateGlobal` 注解可用于表示提供 _全局变量_ 的静态字段和方法，这些全局变量可在任何模板中访问。在内部，每个全局变量都会通过 `TemplateInstance#data(String, Object)` 方法添加到任何 `TemplateInstance` 的数据映射中。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Global Variables Definition"
msgstr "全局变量的定义"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If a class is annotated with `@TemplateGlobal` then every non-void non-private static method that declares no parameters and every non-private static field is considered a global variable. The name is defaulted, i.e. the name of the field/method is used."
msgstr "如果一个类被注解为 `@TemplateGlobal` ，那么每个没有声明参数的非void非私有静态方法和每个非私有静态字段都被认为是全局变量。名称是默认的，即使用字段/方法的名称。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Method-level annotations override the class-level annotation. In this particular case, the name is not defaulted but selected explicitly."
msgstr "方法级注解覆盖了类级注解。在这种特殊情况下，名称不是默认的，而是明确选择的。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "A Template Accessing Global Variables"
msgstr "一个访问全局变量的模板"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`currentUser` resolves to `Globals#user()`."
msgstr " `currentUser` 解决了 。 `Globals#user()` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`age` resolves to `Globals#age`."
msgstr " `age` 解决了 。 `Globals#age` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`myColors` resolves to `Globals#myColors()`."
msgstr " `myColors` 解决了 。 `Globals#myColors()` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Note that global variables implicitly add xref:typesafe_expressions[parameter declarations] to all templates and so any expression that references a global variable is validated during build."
msgstr "请注意，全局变量隐含地将 link:#typesafe_expressions[参数声明] 添加到所有的模板中，因此任何引用全局变量的表达式都会在构建过程中得到验证。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "The Output"
msgstr "输出"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Resolving Conflicts"
msgstr "解决冲突"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Global variables may conflict with regular data objects.\n"
"xref:typesafe_templates[Type-safe templates] override the global variables automatically.\n"
"For example, the following definition overrides the global variable supplied by the `Globals#user()` method:"
msgstr "全局变量可能会与常规数据对象发生冲突。 xref:typesafe_templates[类型安全模板] 会自动覆盖全局变量。例如，下面的定义覆盖了 `Globals#user()` 方法提供的全局变量："

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Type-safe Template Definition"
msgstr "类型安全的模板定义"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`currentUser` conflicts with the global variable supplied by `Globals#user()`."
msgstr " `currentUser` 与 提供的全局变量冲突。 `Globals#user()` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "So the corresponding template does not result in a validation error even though the `Globals#user()` method returns `java.lang.String` which does not have the `name` property:"
msgstr "所以相应的模板不会导致验证错误，即使 `Globals#user()` 方法返回 `java.lang.String` ，该方法没有 `name` 属性。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`templates/hello.txt`"
msgstr " `templates/hello.txt` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`org.acme.User` has the `name` property."
msgstr " `org.acme.User` 具有 的特性。 `name` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "For other templates an explicit parameter declaration is needed:"
msgstr "对于其他模板，则需要明确的参数声明。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This parameter declaration overrides the declaration added by the global variable supplied by the `Globals#user()` method."
msgstr "这个参数声明覆盖了由 `Globals#user()` 方法提供的全局变量所添加的声明。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Native Executables"
msgstr "本地可执行文件"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"In the JVM mode a reflection-based value resolver may be used to access properties and call methods of the model classes.\n"
"But this does not work for xref:building-native-image.adoc[a native executable] out of the box.\n"
"As a result, you may encounter template exceptions like `Property \"name\" not found on the base object \"org.acme.Foo\" in expression {foo.name} in template hello.html` even if the `Foo` class declares a relevant getter method."
msgstr "在 JVM 模式下，可以使用基于反射的值解析器来访问模型类的属性和调用模型类的方法。但这并不适用于开箱即用 xref:building-native-image.adoc[的本地可执行文件] 。因此，即使 `Foo` 类声明了相关的 getter 方法，也可能会遇到模板异常（如 `Property \"name\" not found on the base object \"org.acme.Foo\" in expression {foo.name} in template hello.html` ）。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "There are several ways to solve this problem:"
msgstr "有几种方法来解决这个问题。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Make use of xref:typesafe_templates[type-safe templates] or xref:typesafe_expressions[type-safe expressions]"
msgstr "使用 link:#typesafe_templates[类型安全] 的模板或 link:#typesafe_expressions[类型安全的表达式]"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In this case, an optimized value resolver is generated automatically and used at runtime"
msgstr "在这种情况下，一个优化的值解析器会自动生成并在运行时使用"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This is the preferred solution"
msgstr "这是首选的解决方案"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Annotate the model class with xref:template_data[`@TemplateData`] - a specialized value resolver is generated and used at runtime"
msgstr "对模型类进行注解 link:#template_data[`@TemplateData`] - 在运行时生成并使用一个专门的值解析器"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Annotate the model class with `@io.quarkus.runtime.annotations.RegisterForReflection` to make the reflection-based value resolver work"
msgstr "用 `@io.quarkus.runtime.annotations.RegisterForReflection` 注释模型类，以使基于反射的值解析器工作。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "RESTEasy Integration"
msgstr "RESTEasy集成"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"If you want to use Qute in your Jakarta REST application, then depending on which Jakarta REST stack you are using, you'll need to register the proper extension first.\n"
"If you are using the traditional `quakus-resteasy` extension, then in your `pom.xml` file, add:"
msgstr "如果您想在 Jakarta REST 应用程序中使用 Qute，那么根据您使用的 Jakarta REST 栈，您需要先注册适当的扩展名。如果您使用的是传统的 `quakus-resteasy` 扩展，那么请在 `pom.xml` 文件中添加："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "If instead you are using RESTEasy Reactive via the `quarkus-resteasy-reactive` extension, then in your `pom.xml` file, add:"
msgstr "如果你是通过 `quarkus-resteasy-reactive` 扩展使用RESTEasy Reactive，那么在你的 `pom.xml` 文件中，添加:"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Both of these extensions register a special `ContainerResponseFilter` implementation which enables resource methods to return a `TemplateInstance`, thus freeing users of having to take care of all necessary internal steps."
msgstr "这两个扩展都注册了一个特殊的 `ContainerResponseFilter` 实现，使资源方法能够返回一个 `TemplateInstance` ，从而使用户不必照顾到所有必要的内部步骤。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The end result is that a using Qute within a Jakarta REST resource may look as simple as:"
msgstr "最终的结果是，在JAX-RS资源中使用Qute可能看起来像这样简单。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"If there is no `@Location` qualifier provided, the field name is used to locate the template.\n"
"In this particular case, we're injecting a template with path `templates/hello.txt`."
msgstr "如果没有提供 `@Location` 修饰语，则使用字段名来定位模板。在这个特殊情况下，我们要注入一个路径为 `templates/hello.txt` 的模板。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"`Template.data()` returns a new template instance that can be customized before the actual rendering is triggered.\n"
"In this case, we put the name value under the key `name`.\n"
"The data map is accessible during rendering."
msgstr " `Template.data()` 返回一个新的模板实例，可以在实际渲染被触发之前进行自定义。在这种情况下，我们把名称值放在键 。渲染过程中可以访问数据地图。 `name`"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Note that we don't trigger the rendering - this is done automatically by a special `ContainerResponseFilter` implementation."
msgstr "请注意，我们并没有触发渲染--这是由一个特殊的 `ContainerResponseFilter` 实现自动完成的。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Users are encouraged to use xref:typesafe_templates[Type-safe templates] that help to organize the templates for a specific Jakarta REST resource and enable xref:typesafe_expressions[type-safe expressions] automatically."
msgstr "我们鼓励用户使用 link:#typesafe_templates[类型安全模板] ，它有助于为特定的 JAX-RS 资源组织模板并自动启用 link:#typesafe_expressions[类型安全表达式] 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The content negotiation is performed automatically.\n"
"The resulting output depends on the `Accept` header received from the client."
msgstr "内容协商是自动进行的。输出结果取决于从客户端接收到的 `Accept` 标头。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Inject a variant template with base path derived from the injected field - `src/main/resources/templates/item`."
msgstr "注入一个变体模板，其基本路径来自注入的字段 - `src/main/resources/templates/item` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "For `text/plain` the `src/main/resources/templates/item.txt` template is used. For `text/html` the `META-INF/resources/templates/item.html` template is used."
msgstr "对于 `text/plain` ，使用的是 `src/main/resources/templates/item.txt` 模板。对于 `text/html` ，则使用 `META-INF/resources/templates/item.html` 模板。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `RestTemplate` util class can be used to obtain a template instance from a body of a Jakarta REST resource method:"
msgstr " `RestTemplate` util类可用于从JAX-RS资源方法的主体中获取模板实例。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "RestTemplate Example"
msgstr "RestTemplate示例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The name of the template is derived from the resource class and method name; `DetailResource/item` in this particular case."
msgstr "模板的名称来自于资源类和方法名称；在这种特殊情况下， `DetailResource/item` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Unlike with `@Inject` the templates obtained via `RestTemplate` are not validated, i.e. the build does not fail if a template does not exist."
msgstr "与 `@Inject` 不同的是，通过 `RestTemplate` 获得的模板不被验证，也就是说，如果模板不存在，构建就不会失败。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, no-wrap
msgid "Development Mode"
msgstr "开发模式"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "In the development mode, all files located in `src/main/resources/templates` are watched for changes and modifications are immediately visible."
msgstr "在开发模式下，位于 `src/main/resources/templates` 中的所有文件都会受到监控，以防发生变化，修改内容也会立即显示出来。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Type-safe Message Bundles"
msgstr "类型安全的消息包"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Basic Concepts"
msgstr "基本概念"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The basic idea is that every message is potentially a very simple template.\n"
"In order to prevent type errors, a message is defined as an annotated method of a *message bundle interface*.\n"
"Quarkus generates the *message bundle implementation* at build time."
msgstr "其基本思想是，每条消息都可能是一个非常简单的模板。为了防止类型错误，消息被定义为 *消息捆绑接口* 的注解方法。Quarkus 会在构建时生成 *消息束的实现* 。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Message Bundle Interface Example"
msgstr "消息包接口实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Denotes a message bundle interface. The bundle name is defaulted to `msg` and is used as a namespace in templates expressions, e.g. `{msg:hello_name}`."
msgstr "表示一个消息捆绑接口。捆绑名称默认为 `msg` ，并在模板表达式中作为命名空间使用，例如： `{msg:hello_name}` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Each method must be annotated with `@Message`. The value is a qute template. If no value is provided, then a corresponding value from a localized file is taken. If no such file exists, an exception is thrown and the build fails."
msgstr "每个方法都必须用 `@Message` 来注释。其值是一个qute模板。如果没有提供值，那么将从一个本地化的文件中获取相应的值。如果没有这样的文件存在，就会产生异常，并且构建失败。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The method parameters can be used in the template."
msgstr "方法参数可以在模板中使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The message bundles can be used at runtime:"
msgstr "方法参数可以在模板中使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Directly in your code via `io.quarkus.qute.i18n.MessageBundles#get()`; e.g. `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")`"
msgstr "直接在你的代码中通过 `io.quarkus.qute.i18n.MessageBundles#get()` ；例如 `MessageBundles.get(AppMessages.class).hello_name(\"Lucie\")` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Injected in your beans via `@Inject`; e.g. `@Inject AppMessages`"
msgstr "通过 `@Inject` ，注入到你的豆子里；比如说 `@Inject AppMessages` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Referenced in the templates via the message bundle namespace:"
msgstr "在模板中通过消息捆绑命名空间引用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`msg` is the default namespace."
msgstr " `msg` 是默认的命名空间。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`hello_name` is the message key."
msgstr " `hello_name` 是信息密钥。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "`Lucie` is the parameter of the message bundle interface method."
msgstr " `Lucie` 是消息捆绑接口方法的参数。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It is also possible to obtain a localized message for a key resolved at runtime using a reserved key `message`. The validation is skipped in this case though."
msgstr "也可以通过使用保留的密钥 `message` ，为运行时解决的密钥获得一个本地化的信息。但在这种情况下，验证被跳过。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Default Bundle Name"
msgstr "默认捆绑名称"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The bundle name is defaulted unless it's specified with `@MessageBundle#value()`.\n"
"For a top-level class the `msg` value is used by default.\n"
"For a nested class the name consists of the simple names of all enclosing classes in the hierarchy (top-level class goes first), followed by the simple name of the message bundle interface.\n"
"Names are separated by underscores."
msgstr "除非使用 `@MessageBundle#value()` 指定，否则默认使用捆绑包名称。对于顶层类，默认使用 `msg` 值。对于嵌套类，名称由层次结构中所有外层类的简单名称（顶层类在前）和消息捆绑接口的简单名称组成。名称之间用下划线分隔。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "For example, the name of the following message bundle will be defaulted to `Controller_index`:"
msgstr "例如，以下信息包的名称将被默认为 `Controller_index` ："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "This message could be used in a template via `{Controller_index:hello(name)}`."
msgstr "这条信息可以通过 `{Controller_index:hello(name)}` 在模板中使用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The bundle name is also used as a part of the name of a localized file, e.g. `Controller_index` in the `Controller_index_de.properties`."
msgstr "捆绑名称也被用作本地化文件名称的一部分，例如 `Controller_index` ，在 `Controller_index_de.properties` 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Bundle Name and Message Keys"
msgstr "捆绑名称和信息键"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Message keys are used directly in templates.\n"
"The bundle name is used as a namespace in template expressions.\n"
"The `@MessageBundle` can be used to define the default strategy used to generate message keys from method names.\n"
"However, the `@Message` can override this strategy and even define a custom key.\n"
"By default, the annotated element's name is used as-is.\n"
"Other possibilities are:"
msgstr "消息键直接用于模板。捆绑包名称在模板表达式中用作命名空间。 `@MessageBundle` 可用于定义从方法名生成消息键的默认策略。不过， `@Message` 可以覆盖这一策略，甚至定义自定义键。默认情况下，注释元素的名称按原样使用。其他可能性包括"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "De-camel-cased and hyphenated; e.g. `helloName()` -> `hello-name`"
msgstr "去掉camel-cased和连字符；例如： `helloName()` → `hello-name` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "De-camel-cased and parts separated by underscores; e.g. `helloName()` -> `hello_name`."
msgstr "去掉camel-cased，各部分用下划线分开；例如： `helloName()` → `hello_name` 。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Validation"
msgstr "审定"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "All message bundle templates are validated:"
msgstr "所有的消息捆绑模板都经过验证。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "All expressions without a namespace must map to a parameter; e.g. `Hello {foo}` -> the method must have a param of name `foo`"
msgstr "所有没有命名空间的表达式都必须映射到一个参数；例如， `Hello {foo}` → 方法必须有一个名称为param的参数。 `foo` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "All expressions are validated against the types of the parameters; e.g. `Hello {foo.bar}` where the parameter `foo` is of type `org.acme.Foo` -> `org.acme.Foo` must have a property of name `bar`"
msgstr "所有表达式都根据参数的类型进行验证；例如： `Hello {foo.bar}` ，其中参数 `foo` 的类型为 `org.acme.Foo` → `org.acme.Foo` ，必须有一个名称的属性。 `bar` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A warning message is logged for each _unused_ parameter."
msgstr "每个 _未使用的_ 参数都会有一条警告信息被记录下来。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Expressions that reference a message bundle method, such as `{msg:hello(item.name)}`, are validated too."
msgstr "引用消息捆绑方法的表达式，如 `{msg:hello(item.name)}` ，也要进行验证。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Localization"
msgstr "本地化"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"The default locale specified via the `quarkus.default-locale` config property is used for the `@MessageBundle` interface by default.\n"
"However, the `io.quarkus.qute.i18n.MessageBundle#locale()` can be used to specify a custom locale.\n"
"Additionally, there are two ways to define a localized bundle:"
msgstr "`@MessageBundle` 界面默认使用通过 `quarkus.default-locale` 配置属性指定的默认语言。不过， `io.quarkus.qute.i18n.MessageBundle#locale()` 可用来指定自定义的本地化语言。此外，还有两种定义本地化捆绑包的方法："

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Create an interface that extends the default interface that is annotated with `@Localized`"
msgstr "创建一个扩展默认接口的接口，该接口被注释为 `@Localized` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Create an UTF-8 encoded file located in the `src/main/resources/messages` directory of an application archive; e.g. `msg_de.properties`."
msgstr "创建一个UTF-8编码的文件，位于应用程序存档的 `src/main/resources/messages` 目录中；例如： `msg_de.properties` 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "While a localized interface enables easy refactoring, an external file might be more convenient in many situations."
msgstr "虽然本地化的接口可以使重构变得容易，但在许多情况下，外部文件可能更方便。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Localized Interface Example"
msgstr "本地化界面示例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The value is the locale tag string (IETF)."
msgstr "该值是locale标签字符串（IETF）。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The value is the localized template."
msgstr "该值是本地化的模板。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Message bundle files must be encoded in _UTF-8_.\n"
"The file name consists of the relevant bundle name (e.g. `msg`) and underscore followed by a language tag (IETF; e.g. `en-US`).\n"
"The language tag may be omitted, in which case the language tag of the default bundle locale is used.\n"
"For example, if bundle `msg` has default locale `en`, then `msg.properties` is going to be treated as `msg_en.properties`.\n"
"If both `msg.properties` and `msg_en.properties` are detected, an exception is thrown and build fails.\n"
"The file format is very simple: each line represents either a key/value pair with the equals sign used as a separator or a comment (line starts with `#`).\n"
"Blank lines are ignored.\n"
"Keys are _mapped to method names_ from the corresponding message bundle interface.\n"
"Values represent the templates normally defined by `io.quarkus.qute.i18n.Message#value()`.\n"
"A value may be spread out across several adjacent normal lines.\n"
"In such case, the line terminator must be escaped with a backslash character `\\`.\n"
"The behavior is very similar to the behavior of the `java.util.Properties.load(Reader)` method."
msgstr "信息包文件必须以 _UTF-8_ 编码。文件名由相关捆绑包名称（如 `msg` ）和下划线组成，后跟语言标记（IETF；如 `en-US` ）。语言标记可以省略，在这种情况下，将使用默认软件包语言标记。例如，如果软件包 `msg` 的默认语言是 `en` ，那么 `msg.properties` 将被视为 `msg_en.properties` 。如果同时检测到 `msg.properties` 和 `msg_en.properties` ，则会出现异常并导致构建失败。文件格式非常简单：每行代表一个键/值对，以等号作为分隔符，或者代表一个注释（以 `#` 开头）。空行将被忽略。键 _映射到_ 相应消息捆绑接口的 _方法名_ 。值代表通常由 `io.quarkus.qute.i18n.Message#value()` 定义的模板。一个值可能分布在相邻的几行中。在这种情况下，必须用反斜杠字符转义行结束符 `\\` 。该行为与 `java.util.Properties.load(Reader)` 方法的行为非常相似。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Localized File Example - `msg_de.properties`"
msgstr "本地化文件的例子 - `msg_de.properties` "

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Each line in a localized file represents a key/value pair. The key must correspond to a method declared on the message bundle interface. The value is the message template."
msgstr "本地化文件中的每一行代表一个键/值对。键必须对应于消息捆绑接口上声明的方法。值是消息模板。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Keys and values are separated by the equals sign."
msgstr "键和值用等号分开。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "We use the `.properties` suffix in our example because most IDEs and text editors support syntax highlighting of `.properties` files. But in fact, the suffix could be anything - it is just ignored."
msgstr "在我们的例子中，我们使用 `.properties` 后缀，因为大多数IDE和文本编辑器支持 `.properties` 文件的语法高亮。但事实上，后缀可以是任何东西 - 它只是被忽略。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "An example properties file is generated into the target directory for each message bundle interface automatically. For example, by default if no name is specified for `@MessageBundle` the file `target/qute-i18n-examples/msg.properties` is generated when the application is build via `mvn clean package`. You can use this file as a base for a specific locale. Just rename the file - e.g. `msg_fr.properties`, change the message templates and move it in the `src/main/resources/messages` directory."
msgstr "每个消息捆绑接口都会在目标目录下自动生成一个示例属性文件。例如，默认情况下，如果没有为 `@MessageBundle` 指定名称，那么当应用程序通过 `mvn clean package` 构建时，会生成 `target/qute-i18n-examples/msg.properties` 文件。你可以使用这个文件作为一个特定地区的基础。只需重命名该文件--例如： `msg_fr.properties` ，改变消息模板并将其移至 `src/main/resources/messages` 目录中。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Value Spread Out Across Several Adjacent Lines"
msgstr "价值分散在几个相邻的行中"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Note that the line terminator is escaped with a backslash character `\\` and white space at the start of the following line is ignored. I.e. `{msg:hello('Edgar')}` would be rendered as `Hello Edgar and good morning!`."
msgstr "请注意，行结束符是用反斜杠字符 `\\` ，下一行开始的白色空间被忽略。即： `{msg:hello('Edgar')}` 将被呈现为 `Hello Edgar and good morning!` 。"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Once we have the localized bundles defined, we need a way to _select_ the correct bundle for a specific template instance, i.e. to specify the locale for all message bundle expressions in the template.\n"
"By default, the locale specified via the `quarkus.default-locale` configuration property is used to select the bundle.\n"
"Alternatively, you can specify the `locale` attribute of a template instance."
msgstr "一旦定义了本地化捆绑包，我们就需要一种方法来为特定模板实例 _选择_ 正确的捆绑包，即为模板中的所有消息捆绑包表达式指定本地语言。默认情况下，通过 `quarkus.default-locale` 配置属性指定的本地化语言将用于选择捆绑包。或者，也可以指定模板实例的 `locale` 属性。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "`locale` Attribute Example"
msgstr " `locale` 属性实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can set a `Locale` instance or a locale tag string (IETF)."
msgstr "你可以设置一个 `Locale` 实例或一个locale标签字符串（IETF）。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "When using xref:resteasy_integration[quarkus-resteasy-qute] the `locale` attribute is derived from the `Accept-Language` header if not set by a user."
msgstr "当使用 link:#resteasy_integration[quarkus-resteasy-qute] 时，如果用户没有设置， `locale` 属性会从 `Accept-Language` 头部派生。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The `@Localized` qualifier can be used to inject a localized message bundle interface."
msgstr " `@Localized` 修饰语可以用来注入一个本地化的消息捆绑接口。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Injected Localized Message Bundle Example"
msgstr "注入的本地化消息包实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The annotation value is a locale tag string (IETF)."
msgstr "注释值是一个locale标签字符串（IETF）。"

#. type: Title ====
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Message Templates"
msgstr "类型安全的模板"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Every method of a message bundle interface must define a message template. The value is normally defined by `io.quarkus.qute.i18n.Message#value()`,\n"
"but for convenience, there is also an option to define the value in a localized file."
msgstr "消息捆绑接口的每个方法都必须定义一个消息模板。该值通常由 `io.quarkus.qute.i18n.Message#value()` 定义，但为了方便起见，也可以选择在本地化文件中定义该值。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Example of the Message Bundle Interface without the value"
msgstr "消息包接口实例"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The annotation value is not defined. In such a case, the value from supplementary localized file is taken."
msgstr "注释值未被定义。在这种情况下，将采用补充的本地化文件中的值。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The annotation value is defined and preferred to the value defined in the localized file."
msgstr "注释值的定义和优先于本地化文件中定义的值。"

#. type: Block title
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Supplementary localized file"
msgstr "补充本地化的文件"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The value is ignored as `io.quarkus.qute.i18n.Message#value()` is always prioritized."
msgstr "该值被忽略，因为 `io.quarkus.qute.i18n.Message#value()` 始终被优先考虑。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Message templates are validated during the build. If a missing message template is detected, an exception is thrown and build fails."
msgstr "消息模板在构建过程中被验证。如果检测到一个缺失的消息模板，就会抛出一个异常，构建失败。"

#. type: Title ===
#: _versions/3.2/guides/qute-reference.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ==
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Qute Used as a Standalone Library"
msgstr "Qute作为一个独立的图书馆使用"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"Qute is primarily designed as a Quarkus extension.\n"
"However. it is possible to use it as a \"standalone\" library.\n"
"In this case, some features are not available and some additional configuration is needed."
msgstr "Qute 主要是作为 Quarkus 扩展库设计的。不过，它也可以作为一个 \"独立 \"库使用。在这种情况下，某些功能不可用，需要进行一些额外的配置。"

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Engine"
msgstr "发动机"

#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid ""
"First, no managed `Engine` instance is available out of the box.\n"
"You'll need to configure a new instance via `Engine.builder()`."
msgstr "首先，没有开箱即用的受管 `Engine` 实例。您需要通过 `Engine.builder()` 配置一个新实例。"

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Templates"
msgstr "模板"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "By default, no xref:template-locator[template locators] are registered, i.e. `Engine.getTemplate(String)` will not work."
msgstr "默认情况下，没有注册 link:#template-locator[模板定位器] ，也就是说， `Engine.getTemplate(String)` ，将无法工作。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "You can register a custom template locator using `EngineBuilder.addLocator()` or parse a template manually and put the result in the cache via `Engine.putTemplate(String, Template)`."
msgstr "你可以注册一个自定义的模板定位器，或者手动解析一个模板，并通过 `Engine.putTemplate(String, Template)` ，将其放入缓存。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "No section helpers are registered by default."
msgstr "默认情况下，没有注册任何部门的助手。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The default set of value resolvers can be registered via the convenient `EngineBuilder.addDefaultSectionHelpers()` method and the `EngineBuilder.addDefaults()` method respectively."
msgstr "默认的价值解析器集可以分别通过方便的 `EngineBuilder.addDefaultSectionHelpers()` 方法和 `EngineBuilder.addDefaults()` 方法注册。"

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Value resolvers"
msgstr "价值解析器"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "No xref:value-resolvers[``ValueResolver``s] are generated automatically."
msgstr "没有自动生成 link:#value-resolvers[`ValueResolver`] 。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "xref:template_extension_methods[`@TemplateExtension` methods] will not work."
msgstr "link:#template_extension_methods[`@TemplateExtension`] 的 link:#template_extension_methods[方法] 将不会起作用。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "xref:template_data[`@TemplateData`] and xref:convenient-annotation-for-enums[`@TemplateEnum`] annotations are ignored."
msgstr "link:#template_data[`@TemplateData`] 和 link:#convenient-annotation-for-enums[`@TemplateEnum`] 注释被忽略。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "The default set of value resolvers can be registered via the convenient `EngineBuilder.addDefaultValueResolvers()` method and the `EngineBuilder.addDefaults()` method respectively."
msgstr "默认的价值解析器集可以分别通过方便的 `EngineBuilder.addDefaultValueResolvers()` 方法和 `EngineBuilder.addDefaults()` 方法注册。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Not all functionality provided by the built-in extension methods is covered by the default value resolvers. However, a custom value resolver can be easily built via the `ValueResolver.builder()`."
msgstr "默认值解析器并没有涵盖内置扩展方法提供的所有功能。然而，可以通过 `ValueResolver.builder()` .NET来轻松构建一个自定义的值解析器。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It's recommended to register a `ReflectionValueResolver` instance via `Engine.addValueResolver(new ReflectionValueResolver())` so that Qute can access object properties and call public methods."
msgstr "建议通过 `Engine.addValueResolver(new ReflectionValueResolver())` 注册一个 `ReflectionValueResolver` 实例，这样Qute就可以访问对象属性和调用公共方法。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "Keep in mind that reflection may not work correctly in some restricted environments or may require additional configuration, e.g. registration in case of a GraalVM native image."
msgstr "请记住，在某些受限制的环境中，反射可能无法正常工作，或者需要额外的配置，例如在GraalVM本地镜像的情况下需要注册。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "No user-defined tags are registered automatically."
msgstr "没有用户定义的标签被自动注册。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "A tag can be registered manually via `Engine.builder().addSectionHelper(new UserTagSectionHelper.Factory(\"tagName\",\"tagTemplate.html\")).build()`"
msgstr "一个标签可以通过以下方式手动注册 `Engine.builder().addSectionHelper(new UserTagSectionHelper.Factory(\"tagName\",\"tagTemplate.html\")).build()` "

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Type-safety"
msgstr "类型-安全"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "xref:typesafe_expressions[Type-safe Expressions] are not validated."
msgstr "link:#typesafe_expressions[[typesafe_expressions]] 未被验证。"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "xref:type-safe-message-bundles[Type-safe message bundles] are not supported."
msgstr "不支持 link:#type-safe-message-bundles[类型安全的消息包] 。"

#. type: Labeled list
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy, no-wrap
msgid "Injection"
msgstr "注射"

#. type: Plain text
#: _versions/3.2/guides/qute-reference.adoc
#, fuzzy
msgid "It is not possible to inject a `Template` instance and vice versa - a template cannot inject a `@Named` CDI bean via the `inject:` and `cdi:` namespace."
msgstr "无法注入 `Template` 实例，反之亦然--模板无法通过 `inject:` 和 `cdi:` 命名空间注入 `@Named` CDI Bean。"
