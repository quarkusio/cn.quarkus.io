# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-28 16:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "Cross-Site Request Forgery Prevention"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery (CSRF)] is an attack that forces an end user to execute unwanted actions on a web application in which they are currently authenticated."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Quarkus Security provides a CSRF prevention feature which implements a https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#double-submit-cookie[Double Submit Cookie technique]. This techninque requires that the CSRF token is never directly exposed to scripts executed on the client-side. In this extension, the CSRF token is:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "sent as `HTTPOnly` cookie to the client, and"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "directly embedded in a hidden form input of server-side rendered forms, which are transmitted to and used by the client."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "The extension consists of a xref:resteasy-reactive.adoc[RESTEasy Reactive] server filter which creates and verifies CSRF tokens in `application/x-www-form-urlencoded` and `multipart/form-data` forms and a Qute HTML form parameter provider which supports the xref:qute-reference.adoc#injecting-beans-directly-in-templates[injection of CSRF tokens in Qute templates]."
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "Creating the Project"
msgstr "创建项目"

#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid ""
"First, we need a new project.\n"
"Create a new project with the following command:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "This command generates a project which imports the `csrf-reactive` extension."
msgstr ""

#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `csrf-reactive` extension\n"
"to your project by running the following command in your project base directory:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Next, let's add a `csrfToken.html` Qute template producing an HTML form in the `src/main/resources/templates` folder:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "This expression is used to inject a CSRF token into a hidden form field. This token will be verified by the CSRF filter against a CSRF cookie."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Now let's create a resource class which returns an HTML form and handles form POST requests:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Inject the `csrfToken.html` as a `Template`."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Return the HTML form with a hidden form field containing a CSRF token created by the CSRF filter."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Handle the POST form request, this method can only be invoked if the CSRF filter has successfully verified the token."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "The form POST request will fail with HTTP status `400` if the filter finds the hidden CSRF form field is missing, the CSRF cookie is missing, or if the CSRF form field and CSRF cookie values do not match."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "At this stage no additional configuration is needed - by default the CSRF form field and cookie name will be set to `csrf-token`, and the filter will verify the token. But you can change these names if you would like:"
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "Sign CSRF token"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "You can get `HMAC` signatures created for the generated CSRF tokens and have these `HMAC` values stored as CSRF token cookies if you would like to avoid the risk of the attackers recreating the CSRF cookie token. All you need to do is to configure a token signature secret which must be at least 32 characters long:"
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "Restrict CSRF token verification"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Your Jakarta REST endpoint may accept not only HTTP POST requests with `application/x-www-form-urlencoded` or `multipart/form-data` payloads but also payloads with other media types, either on the same or different URL paths, and therefore you would like to avoid verifying the CSRF token in such cases, for example:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "POST form request to `/user`, CSRF token verification is enforced by the CSRF filter"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "POST json request to `/user`, CSRF token verification is not needed"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "POST json request to `/users`, CSRF token verification is not needed"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "As you can see a CSRF token verification will be required at the `/service/user` path accepting the `application/x-www-form-urlencoded` payload, but `User` JSON representation posted to both `/service/user` and `/service/users` method will have no CSRF token and therefore the token verification has to be skipped in these cases by restricting it to the specific `/service/user` request path but also allowing not only `application/x-www-form-urlencoded` on this path:"
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "Verify CSRF token in the application code"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "If you prefer to compare the CSRF form field and cookie values in the application code then you can do it as follows:"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Compare the CSRF form field and cookie values and fail with HTTP status `400` if they don't match."
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "Also disable the token verification in the filter:"
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr ""

#. type: Title ==
#: _versions/3.2/guides/security-csrf-prevention.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "https://owasp.org/www-community/attacks/csrf[OWASP Cross-Site Request Forgery]"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "xref:resteasy-reactive.adoc[RESTEasy Reactive]"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "xref:qute-reference.adoc[Qute Reference]"
msgstr ""

#. type: Plain text
#: _versions/3.2/guides/security-csrf-prevention.adoc
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr ""
