# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-28 16:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Using JWT RBAC"
msgstr "使用 JWT RBAC"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"This guide explains how your Quarkus application can utilize https://github.com/smallrye/smallrye-jwt/[SmallRye JWT]\n"
"to verify https://tools.ietf.org/html/rfc7519[JSON Web Token]s, represent them as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`\n"
"and provide secured access to the Quarkus HTTP endpoints using Bearer Token Authorization and https://en.wikipedia.org/wiki/Role-based_access_control[Role-Based Access Control]."
msgstr "本指南旨在阐述如何在你的Quarkus应用程序中使用 https://github.com/smallrye/smallrye-jwt/[SmallRye JWT]来验证 https://tools.ietf.org/html/rfc7519[JSON Web Token]，并将它们呈现为MicroProfile JWT 的 `org.eclipse.microprofile.jwt.JsonWebToken` ，然后使用不记名令牌验证(Bearer Token Authorization)和 https://en.wikipedia.org/wiki/Role-based_access_control[基于角色的访问控制]来保证对Quarkus HTTP端点的安全访问。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Quarkus OpenID Connect `quarkus-oidc` extension also supports Bearer Token Authorization and uses `smallrye-jwt` to represent the bearer tokens as `JsonWebToken`.\n"
"For more information, read the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] guide.\n"
"OpenID Connect extension has to be used if the Quarkus application needs to authenticate the users using OIDC Authorization Code Flow.\n"
"For more information, see xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr "Quarkus OpenID Connect `quarkus-oidc` 扩展也支持承载令牌授权，并使用 `smallrye-jwt` 来表示承载令牌，即 `JsonWebToken` 。更多信息，请阅读 xref:security-oidc-bearer-token-authentication.adoc[OIDC 不记名令牌认证] 指南。如果 Quarkus 应用程序需要使用 OIDC 授权码流对用户进行身份验证，则必须使用 OpenID Connect 扩展。欲了解更多信息，请参阅 xref:security-oidc-code-flow-authentication.adoc[用于保护网络应用程序的 OIDC 代码流机制] 。"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Quickstart"
msgstr "快速入门"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr "我们建议您按照下面几节的说明，一步一步地创建应用程序。不过，您可以直接跳到已完成的例子。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "The solution is located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory]."
msgstr "该解决方案位于 `security-jwt-quickstart` {quickstarts-tree-url}/security-jwt-quickstart[目录]中。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "First, create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "This command generates the Maven project and imports the `smallrye-jwt` extension, which includes the {mp-jwt} support."
msgstr "该命令生成Maven项目并导入 `smallrye-jwt` 扩展，其中包括{mp-jwt}支持。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-jwt` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果你已经配置了你的Quarkus项目，你可以通过在你的项目基础目录下运行以下命令，将 `smallrye-jwt` 扩展到你的项目。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Examine the Jakarta REST resource"
msgstr "检查JAX-RS资源"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Create a REST endpoint in `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` with the following content:"
msgstr "在 `src/main/java/org/acme/security/jwt/TokenSecuredResource.java` 里，创建一个REST端点，内容如下:"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "REST Endpoint V1"
msgstr "REST Endpoint V1"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Here we inject the JsonWebToken interface, an extension of the java.security.\n"
"Principal interface that provides access to the claims associated with the current authenticated token."
msgstr "在这里，我们注入了 JsonWebToken 接口，它是 java.security.Principal 接口的扩展。Principal 接口的扩展，该接口可访问与当前已验证令牌相关的请求。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "@PermitAll is a JSR 250 common security annotation that indicates that the given endpoint is accessible by any caller, authenticated or not."
msgstr "@PermitAll是JSR 250的一个通用安全注解，它表明给定的端点可以被任何调用者访问，无论是否经过验证。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "Here we inject the Jakarta REST SecurityContext to inspect the security state of the call and use a `getResponseString()` function to populate a response string."
msgstr "这里我们注入JAX-RS SecurityContext来检查调用的安全状态，并使用 `getResponseString()` 函数来得到响应字符串。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we check if the call is insecure by checking the request user/caller `Principal` against null."
msgstr "在这里，我们通过检查请求用户/呼叫者 `Principal` 是否是null值，如果是则不安全。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we check that the Principal and JsonWebToken have the same name since JsonWebToken does represent the current Principal."
msgstr "这里我们检查Principal和JsonWebToken是否有相同的名字，因为JsonWebToken代表了当前的Principal。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we get the Principal name."
msgstr "这里我们得到了Principal的名字。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "The reply we build up makes use of the caller name, the `isSecure()` and `getAuthenticationScheme()` states of the request `SecurityContext`, and whether a non-null `JsonWebToken` was injected."
msgstr "当我们建立的回复时使用调用者的名字，和 `isSecure()` 和 `getAuthenticationScheme()` 这两个 `SecurityContext` 的状态，以及是否注入了非空的 `JsonWebToken` 。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Run the application"
msgstr "运行应用程序"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now we are ready to run our application. Use:"
msgstr "现在我们准备运行我们的应用程序。使用："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "and you should see output similar to:"
msgstr "而你应该看到类似的输出："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "quarkus:dev Output"
msgstr "quarkus:dev 输出"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now that the REST endpoint is running, we can access it using a command line tool like curl:"
msgstr "现在，REST端点正在运行，我们可以使用curl这样的命令行工具来访问它："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "curl command for /secured/permit-all"
msgstr "针对 /secured/permit-all 的 curl 命令"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"We have not provided any JWT in our request, so we would not expect that there is any security state seen by the endpoint,\n"
"and the response is consistent with that:"
msgstr "我们在请求中没有提供任何JWT，所以我们不会期望有任何安全状态被终端看到，而响应也与此一致："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "username is anonymous"
msgstr "用户名称是匿名的"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "isHttps is false as https is not used"
msgstr "isHttps 为 false，因为没有使用 https"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "authScheme is null"
msgstr "authScheme 为空"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "hasJWT is false"
msgstr "hasJWT 为 false"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Use Ctrl-C to stop the Quarkus server."
msgstr "使用Ctrl-C来停止Quarkus服务器。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "So now let's actually secure something. Take a look at the new endpoint method `helloRolesAllowed` in the following:"
msgstr "所以，现在让我们真正让一些东西变得安全。看看下面的新端点方法 `helloRolesAllowed` ："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "REST Endpoint V2"
msgstr "REST Endpoint V2"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we inject `JsonWebToken`"
msgstr "在这里，我们注入 `JsonWebToken`"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "This new endpoint will be located at /secured/roles-allowed"
msgstr "这个新的endpoint将位于/secured/roles-allowed"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"@RolesAllowed is a JSR 250 common security annotation that indicates that the given endpoint is accessible by a caller if\n"
"they have either a \"User\" or \"Admin\" role assigned."
msgstr "@RolesAllowed是一个JSR 250通用安全注解，表明如果调用者分配了 \"用户 \"或 \"管理员 \"角色，那么他们可以访问给定的端点。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we build the reply the same way as in the `hello` method but also add a value of the JWT `birthdate` claim by directly calling the injected `JsonWebToken`."
msgstr "在这里，我们以与 `hello` 方法相同的方式建立回复，但也通过直接调用注入的 `JsonWebToken` ，添加JWT `birthdate` 要求的值。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "After you make this addition to your `TokenSecuredResource`, rerun the `./mvnw compile quarkus:dev` command, and then try `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` to attempt to access the new endpoint."
msgstr "在对你的 `TokenSecuredResource` 进行这一补充后，重新运行 `./mvnw compile quarkus:dev` 命令，然后尝试 `curl -v http://127.0.0.1:8080/secured/roles-allowed; echo` 来访问新的端点。你的输出应该是:"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "Your output should be as follows:"
msgstr "你的输出应该如下："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "curl command for /secured/roles-allowed"
msgstr "/secured/roles-allowed 的 curl 命令"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Excellent, we have not provided any JWT in the request, so we should not be able to access the endpoint, and we were not. Instead, we received an HTTP 401 Unauthorized error.\n"
"We need to obtain and pass in a valid JWT to access that endpoint. There are two steps to this, 1) configuring our {extension-name} extension with information on how to validate a JWT, and 2) generating a matching JWT with the appropriate claims."
msgstr "很好，我们在请求中没有提供任何JWT，所以我们应该不能够访问这个端点，而我们确实没有。相反，我们收到了一个HTTP 401 Unauthorized错误。我们需要获得并传入一个有效的JWT来访问该端点。这有两个步骤，1）用如何验证JWT的信息配置我们的{extension-name}扩展；2）用适当的声明(claim)生成一个匹配的JWT。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Configuring the {extension-name} Extension Security Information"
msgstr "配置{extension-name}扩展安全信息"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Create a `security-jwt-quickstart/src/main/resources/application.properties` with the following content:"
msgstr "创建一个 `security-jwt-quickstart/src/main/resources/application.properties` ，内容如下:"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "application.properties for TokenSecuredResource"
msgstr "TokenSecuredResource的application.properties"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "We are setting public key location to point to a classpath publicKey.pem location. We will add this key in part B, xref:add-public-key[Adding a Public Key]."
msgstr "我们设置公钥位置以指向classpath publicKey.pem所在位置。我们将在B部分中 <<添加公钥>> 。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "We are setting the issuer to the URL string `https://example.com/issuer`."
msgstr "我们将发行者issuer设置为URL字符串 `https://example.com/issuer` ."

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "We are including the public key as a resource in the native executable."
msgstr "我们将公钥作为一种资源纳入本地可执行文件。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Adding a Public Key"
msgstr "添加公钥"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The https://tools.ietf.org/html/rfc7519[JWT specification] defines various levels of security of JWTs that one can use.\n"
"The {mp-jwt} specification requires that JWTs that are signed with the RSA-256 signature algorithm. This in\n"
"turn requires an RSA public key pair.\n"
"On the REST endpoint server side, you need to configure the location of the RSA public\n"
"key to use to verify the JWT sent along with requests.\n"
"The `mp.jwt.verify.publickey.location=publicKey.pem` setting configured\n"
"previously expects that the public key is available on the classpath as `publicKey.pem`.\n"
"To accomplish this, copy the following content to a `security-jwt-quickstart/src/main/resources/publicKey.pem` file."
msgstr "这个 link:https://tools.ietf.org/html/rfc7519[JWT规范] 定义了人们可以使用的JWTs的各种安全级别。{mp-jwt}规范要求JWTs用RSA-256签名算法进行签名。这反过来又需要一个RSA公钥对。在REST终端服务器端，你需要配置RSA公钥的位置，用来验证与请求一起发送的JWT。之前配置的 `mp.jwt.verify.publickey.location=publicKey.pem` ，意思是公钥要能在classpath上作为 `publicKey.pem` 文件能找到。为了达到这个目的，请将以下内容复制到 `security-jwt-quickstart/src/main/resources/publicKey.pem` 文件中。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "RSA Public Key PEM Content"
msgstr "RSA 公钥 PEM 内容"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Generating a JWT"
msgstr "生成一个JWT"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Often one obtains a JWT from an identity manager like https://www.keycloak.org/[Keycloak], but for this quickstart we will generate our own using the JWT generation API provided by `smallrye-jwt`.\n"
"For more information, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "通常，我们会从 link:https://www.keycloak.org/[Keycloak] 等身份管理器获取 JWT，但在本快速入门中，我们将使用 `smallrye-jwt` 提供的 JWT 生成 API 生成自己的 JWT。更多信息，请参阅 xref:security-jwt-build.adoc[使用 SmallRye JWT 生成 JWT 标记] 。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Take the code from the following listing and place into `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java`:"
msgstr "从以下列表中拷贝代码，并将其放入 `security-jwt-quickstart/src/test/java/org/acme/security/jwt/GenerateToken.java` ："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "GenerateToken main Driver Class"
msgstr "生成令牌主驱动程序类"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The `iss` claim is the issuer of the JWT. This needs to match the server side `mp.jwt.verify.issuer`.\n"
"in order for the token to be accepted as valid."
msgstr "这个 `iss` 声明(claim)是JWT的发行者。这需要与服务器端的 `mp.jwt.verify.issuer` 符合。一遍使令牌被接受为有效的。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The `upn` claim is defined by the {mp-jwt} spec as preferred claim to use for the\n"
"`Principal` seen via the container security APIs."
msgstr "这个 `upn` 声明(claim)被{mp-jwt}规范定义为首选声明，用做为被container security APIs所能见的 `Principal` 。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "The `group` claim provides the groups and top-level roles associated with the JWT bearer."
msgstr "这个 `group` 声明(claim)提供了与JWT bearer相关的group和最高级别的role。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "The `birthday` claim. It can be considered to be a sensitive claim, so you may want to consider encrypting the claims, see xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT]."
msgstr "这个 `birthday` 声明(claim)，它可以被认为是一个敏感的声明，所以你可能要考虑对这些声明进行加密， link:smallrye-jwt-build.html[见用SmallRye JWT生成JWT令牌] 。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Note for this code to work we need the content of the RSA private key that corresponds to the public key we have in the TokenSecuredResource application. Take the following PEM content and place it into `security-jwt-quickstart/src/test/resources/privateKey.pem`:"
msgstr "注意为了使这段代码工作，我们需要RSA私钥的内容，它与我们在TokenSecuredResource应用程序中的公钥相对应。将以下PEM内容放入 `security-jwt-quickstart/src/test/resources/privateKey.pem` ："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "RSA Private Key PEM Content"
msgstr "RSA 私钥 PEM 内容"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "We will use a `smallrye.jwt.sign.key.location` property to point to this private signing key."
msgstr "我们将使用一个 `smallrye.jwt.sign.key.location` 属性来指向这个私人签名钥匙。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Generating Keys with OpenSSL"
msgstr "用OpenSSL生成密钥"

#. type: delimited block =
#: _versions/3.2/guides/security-jwt.adoc
msgid "It is also possible to generate a public and private key pair using the OpenSSL command line tool."
msgstr "也可以使用OpenSSL命令行工具生成一个公钥和私钥对。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "openssl commands for generating keys"
msgstr "生成密钥的 openssl 命令"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "An additional step is needed for generating the private key for converting it into the PKCS#8 format."
msgstr "生成私钥后需要一个额外的步骤，以便将其转换为PKCS#8格式。"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "openssl command for converting private key"
msgstr "转换私钥的 openssl 命令"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "You can use the generated pair of keys instead of the keys used in this quickstart."
msgstr "你可以使用生成的这对密钥，而不是本快速入门中使用的密钥。"

#. type: delimited block =
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now we can generate a JWT to use with `TokenSecuredResource` endpoint. To do this, run the following command:"
msgstr "现在我们可以生成一个JWT，然后与 `TokenSecuredResource` 端点一起使用。要做到这一点，运行以下命令："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Sample JWT Generation Output"
msgstr "JWT 生成输出示例"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The JWT string is the Base64 URL encoded string that has 3 parts separated by '.' characters.\n"
"First part - JWT headers, second part - JWT claims, third part - JWT signature."
msgstr "JWT字符串是Base64 URL编码的字符串，有3个部分，由'.'字符分隔。第一部分 - JWT头，第二部分 - JWT要求，第三部分 - JWT签名。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Finally, Secured Access to /secured/roles-allowed"
msgstr "最后，安全访问/secured/roles-allowed"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now let's use this to make a secured request to the /secured/roles-allowed endpoint. Make sure you have the Quarkus server still running in dev mode, and then run the following command, making sure to use your version of the generated JWT from the previous step:"
msgstr "现在让我们用它来向/secured/roles-allowed端点发出一个安全请求。确保你的Quarkus服务器仍然运行在开发模式下，然后运行以下命令，确保使用你在上一步中生成的JWT："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "curl Command for /secured/roles-allowed With JWT"
msgstr "使用 JWT 获取 /secured/roles-allowed 的 curl 命令"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Success! We now have:"
msgstr "成功了!我们现在有："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "a non-anonymous caller name of jdoe@quarkus.io"
msgstr "link:mailto:jdoe@quarkus.io[jdoe@quarkus.io] 的非匿名来电名称"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "an authentication scheme of Bearer"
msgstr "一个不记名(bearer)的认证方案"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "a non-null JsonWebToken"
msgstr "非空的 JsonWebToken"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "birthdate claim value"
msgstr "birthdate声明(claim)的值"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Using the JsonWebToken and Claim Injection"
msgstr "使用JsonWebToken和声明(claim)注入"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid ""
"Now that we can generate a JWT to access our secured REST endpoints, let's see what more we can do with the `JsonWebToken`\n"
"interface and the JWT claims. The `org.eclipse.microprofile.jwt.JsonWebToken` interface extends the `java.security.Principal`\n"
"interface, and is in fact the type of the object that is returned by the `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` call we\n"
"used previously. This means that code that does not use CDI but does have access to the REST container `SecurityContext` can get\n"
"hold of the caller `JsonWebToken` interface by casting the `SecurityContext#getUserPrincipal()`."
msgstr "现在我们可以生成一个 JWT 来访问我们的安全 REST 端点了，让我们看看我们还能用 `JsonWebToken` 接口和 JWT 声明做些什么。 `org.eclipse.microprofile.jwt.JsonWebToken` 接口扩展了 `java.security.Principal` 接口，实际上就是我们之前使用的 `jakarta.ws.rs.core.SecurityContext#getUserPrincipal()` 调用返回的对象类型。 `JsonWebToken` 这意味着，不使用 CDI 但可以访问 REST 容器 `SecurityContext` 的代码可以通过将 `SecurityContext#getUserPrincipal()` ."

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"The `JsonWebToken` interface defines methods for accessing claims in the underlying JWT.\n"
"It provides accessors for common claims that are required by the {mp-jwt} specification as well as arbitrary claims that may exist in the JWT."
msgstr "这个 `JsonWebToken` 接口定义了用于访问底层JWT中的声明(claims)的方法。它为{mp-jwt}规范所要求的共同声明(common claims)以及JWT中可能存在的任何的声明提供访问器。"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"All the JWT claims can also be injected.\n"
"Let's expand our `TokenSecuredResource` with another endpoint /secured/roles-allowed-admin which uses the injected `birthdate` claim (as opposed to getting it from `JsonWebToken`):"
msgstr "所有的JWT声明(claims)也可以被注入。让我们用另一个端点/secured/roles-allowed-admin来扩展我们的 `TokenSecuredResource` ，它使用注入的 `birthdate` （而不是从 `JsonWebToken` 得来）："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we inject the JsonWebToken."
msgstr "这里我们注入JsonWebToken。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we inject the `birthday` claim as `String` - this is why the `@RequestScoped` scope is now required."
msgstr "在这里，我们把 `birthday` 的声明(claim)作为 `String` 注入 - 这就是为什么现在需要 `@RequestScoped` 范围。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Here we use the injected `birthday` claim to build the final reply."
msgstr "在这里，我们使用注入的 `birthday` 声明(claim)来建立最终的回复。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Now generate the token again and run:"
msgstr "现在再次生成令牌并运行："

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Package and run the application"
msgstr "打包并运行该应用程序"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "As usual, the application can be packaged using:"
msgstr "像往常一样，该应用程序可以用以下方式打包："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "And executed using `java -jar target/quarkus-app/quarkus-run.jar`:"
msgstr "执行程序使用 `java -jar target/quarkus-app/quarkus-run.jar` ："

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Runner jar Example"
msgstr "转轮罐示例"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "You can also generate the native executable with:"
msgstr "你也可以通过以下命令生成本地可执行文件:"

#. type: Block title
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Native Executable Example"
msgstr "本地可执行文件示例"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Explore the Solution"
msgstr "探索解决方案"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid ""
"The solution repository located in the `security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[directory] contains all the versions we have worked through in this quickstart guide as well as some additional endpoints that illustrate subresources with injection of ``JsonWebToken``s and their claims into those using the CDI APIs.\n"
"We suggest that you check out the quickstart solutions and explore the `security-jwt-quickstart` directory to learn more about the {extension-name} extension features."
msgstr "`security-jwt-quickstart` link:{quickstarts-tree-url}/security-jwt-quickstart[目录] 中的解决方案资源库包含我们在本快速入门指南中使用的所有版本，以及一些额外的端点，这些端点说明了将 `JsonWebToken` s 及其声明注入使用 CDI API 的子资源的情况。我们建议您查看快速入门解决方案并访问 `security-jwt-quickstart` 目录，以了解有关 {extension-name} 扩展功能的更多信息。"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Reference Guide"
msgstr "参考指南"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Supported Injection Scopes"
msgstr "支持的注射范围"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "`@ApplicationScoped`, `@Singleton` and `@RequestScoped` outer bean injection scopes are all supported when an `org.eclipse.microprofile.jwt.JsonWebToken` is injected, with the `@RequestScoped` scoping for `JsonWebToken` enforced to ensure the current token is represented."
msgstr "这里 `@ApplicationScoped` , `@Singleton` 和 `@RequestScoped` 外层Bean注入作用域在注入 `org.eclipse.microprofile.jwt.JsonWebToken` 时都是被支持的， `@RequestScoped` 作用域对 `JsonWebToken` 强制执行，以确保当前令牌被呈现。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "However, `@RequestScoped` must be used when the individual token claims are injected as simple types such as `String`, for example:"
msgstr "然而，当单个令牌要求被注入为简单的类型，例如 `String` ，必须使用 `@RequestScoped` ："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Note you can also use the injected `JsonWebToken` to access the individual claims in which case setting `@RequestScoped` is not necessary."
msgstr "请注意，你也可以使用注入的 `JsonWebToken` 来访问各个声明(claims)，在这种情况下，设置 `@RequestScoped` 是没有必要的。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Please see link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI Injection Requirements] for more details."
msgstr "请参阅 link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html#_cdi_injection_requirements[MP JWT CDI注入要求] 以了解更多细节。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Supported Public Key Formats"
msgstr "支持的公钥格式"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Public Keys may be formatted in any of the following formats, specified in order of\n"
"precedence:"
msgstr "公钥可以采用以下任何一种格式，按优先顺序排列："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Public Key Cryptography Standards #8 (PKCS#8) PEM"
msgstr "公钥密码学标准#8（PKCS#8） PEM"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "JSON Web Key (JWK)"
msgstr "JSON网络密钥（JWK）"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "JSON Web Key Set (JWKS)"
msgstr "JSON 网络密钥集 (JWKS)"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "JSON Web Key (JWK) Base64 URL encoded"
msgstr "JSON 网络密钥 (JWK) Base64 URL 编码"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "JSON Web Key Set (JWKS) Base64 URL encoded"
msgstr "JSON网络密钥集（JWKS）Base64 URL编码"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Dealing with the verification keys"
msgstr "处理验证密钥"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you need to verify the token signature using the asymmetric RSA or Elliptic Curve (EC) key then use the `mp.jwt.verify.publickey.location` property to refer to the local or remote verification key."
msgstr "如果你需要使用非对称RSA或椭圆曲线（EC）密钥来验证令牌签名，那么请使用 `mp.jwt.verify.publickey.location` 属性来参考本地或远程验证密钥。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Use `mp.jwt.verify.publickey.algorithm` to customize the verification algorithm (default is `RS256`), for example, set it to `ES256` when working with the EC keys."
msgstr "使用 `mp.jwt.verify.publickey.algorithm` 来定制验证算法（默认为 `RS256` ），例如，在使用EC密钥时，将其设置为 `ES256` 。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you need to verify the token signature using the symmetric secret key then either a `JSON Web Key` (JWK) or `JSON Web Key Set` (JWK Set) format must be used to represent this secret key, for example:"
msgstr "如果你需要使用对称密匙验证令牌签名，那么必须使用 `JSON Web Key` （JWK）或 `JSON Web Key Set` （JWK Set）格式来呈现这个密匙，例如："

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"This secret key JWK will also need to be referred to with `smallrye.jwt.verify.key.location`.\n"
"`smallrye.jwt.verify.algorithm` should be set to `HS256`/`HS384`/`HS512`."
msgstr "这个密匙JWK也需要用 `smallrye.jwt.verify.key.location` 。 `smallrye.jwt.verify.algorithm` 应该设置为 `HS256` / `HS384` / `HS512` 。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Parse and Verify JsonWebToken with JWTParser"
msgstr "用JWTParser解析和验证JsonWebToken"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If the JWT token can not be injected, for example, if it is embedded in the service request payload or the service endpoint acquires it out of band, then one can use `JWTParser`:"
msgstr "如果JWT令牌不能被注入，例如，如果它被嵌入到服务请求的有效载荷中，或者服务端点在带外获得它，那么人们可以使用 `JWTParser` ："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "You can also use it to customize the way the token is verified or decrypted. For example, one can supply a local `SecretKey`:"
msgstr "你也可以用它来定制令牌的验证或解密方式。例如，可以提供一个本地 `SecretKey` ："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "Please also see the xref:add-smallrye-jwt[How to Add SmallRye JWT directly] section about using `JWTParser` without the `HTTP` support provided by `quarkus-smallrye-jwt`."
msgstr "也请参见 link:#add-smallrye-jwt[如何直接添加SmallRye JWT] 部分，关于在没有 `quarkus-smallrye-jwt` 提供的 `HTTP` 支持的情况下使用 `JWTParser` 。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Token Decryption"
msgstr "令牌解密"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid ""
"If your application needs to accept the tokens with the encrypted claims or the encrypted inner-signed claims, all you have to do is set\n"
"`smallrye.jwt.decrypt.key.location` pointing to the decryption key."
msgstr "如果您的应用程序需要接受带有加密权利要求或加密内部签名权利要求的令牌，您只需设置 `smallrye.jwt.decrypt.key.location` ，指向解密密钥即可。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid ""
"If this is the only key property that is set, the incoming token is expected to contain the encrypted claims only.\n"
"If either `mp.jwt.verify.publickey` or `mp.jwt.verify.publickey.location` verification properties are also set then the incoming token is expected to contain the encrypted inner-signed token."
msgstr "如果只设置了这一个密钥属性，则传入的令牌将只包含加密的权利要求。如果同时设置了 `mp.jwt.verify.publickey` 或 `mp.jwt.verify.publickey.location` 验证属性，则收到的令牌将包含加密的内部签名令牌。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "See xref:security-jwt-build.adoc[Generate JWT tokens with SmallRye JWT] and learn how to generate the encrypted or inner-signed and then encrypted tokens fast."
msgstr "请参阅 link:smallrye-jwt-build.html[使用SmallRye JWT生成JWT令牌] ，了解如何快速生成加密的或内部签名然后加密的令牌。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Custom Factories"
msgstr "定制工厂"

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` is used by default to parse and verify JWT tokens and convert them to `JsonWebToken` principals.\n"
"It uses `MP JWT` and `smallrye-jwt` properties listed in the `Configuration` section to verify and customize JWT tokens."
msgstr "`io.smallrye.jwt.auth.principal.DefaultJWTCallerPrincipalFactory` 默认用于解析和验证JWT令牌，并将其转换为 `JsonWebToken`。它使用 `MP JWT` `smallrye-jwt` 这些在 `Configuration` 中列出的属性来验证和定制JWT令牌。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "If you need to provide your own factory, for example, to avoid verifying the tokens again which have already been verified by the firewall, then you can either use a `ServiceLoader` mechanism by providing a `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` resource or simply have an `Alternative` CDI bean implementation like this one:"
msgstr "如果你需要提供你自己的工厂，例如，避免再次验证已经被防火墙验证过的令牌，那么你可以通过提供 `META-INF/services/io.smallrye.jwt.auth.principal.JWTCallerPrincipalFactory` 资源来使用 `ServiceLoader` 机制，或者干脆像这样有一个 `Alternative` CDI bean 实现："

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Token Propagation"
msgstr "令牌传播"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "Please see the xref:security-openid-connect-client.adoc#token-propagation[Token Propagation] section about the Bearer access token propagation to the downstream services."
msgstr "关于不记名(Bearer)访问令牌向下游服务的传播，请参见 link:security-openid-connect-client.html#token-propagation[令牌传播] 部分。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Testing"
msgstr "测试"

#. type: Title ====
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Wiremock"
msgstr "Wiremock"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "If you configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP based JsonWebKey (JWK) set then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] `Wiremock` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "如果你配置 `mp.jwt.verify.publickey.location` ，以指向HTTPS或基于HTTP的JsonWebKey（JWK）集，那么你可以使用与 link:security-openid-connect.html#integration-testing[OpenID Connect Bearer Token集成测试] `Wiremock` 部分所述相同的方法，但只需改变 `application.properties` ，以使用MP JWT配置属性来代替："

#. type: Title ====
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Keycloak"
msgstr "Keycloak"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "If you work with Keycloak and configure `mp.jwt.verify.publickey.location` to point to HTTPS or HTTP based JsonWebKey (JWK) set then you can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] Keycloak section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "如果你使用Keycloak，并配置了 `mp.jwt.verify.publickey.location` ，以指向HTTPS或基于HTTP的JsonWebKey（JWK）集，那么你可以使用与 link:security-openid-connect.html#integration-testing-keycloak[OpenID Connect Bearer Token集成测试] `Keycloak` 部分中描述的方法，只是需改变 `application.properties` ，以使用MP JWT配置属性来代替："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "Note that the tokens issued by Keycloak have an `iss` (issuer) claim set to the realm endpoint address."
msgstr "请注意，Keycloak发行的令牌有一个 `iss` （发行者）声称，设置为境界端点地址。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "If your Quarkus application is running in a docker container, it may share a network interface with a Keycloak docker container launched by DevServices for Keycloak, with the Quarkus application and Keycloak communicating with each other via an internal shared docker network."
msgstr "如果你的Quarkus应用程序在docker容器中运行，它可能与由DevServices for Keycloak启动的Keycloak docker容器共享一个网络接口，Quarkus应用程序和Keycloak通过内部共享docker网络相互通信。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "In such cases, use the following configuration instead:"
msgstr "在这种情况下，请使用以下配置代替："

#. type: Title ====
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Local Public Key"
msgstr "本地公钥"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "You can use the same approach as described in the xref:security-oidc-bearer-token-authentication.adoc#integration-testing[OpenID Connect Bearer Token Integration testing] `Local Public Key` section but only change the `application.properties` to use MP JWT configuration properties instead:"
msgstr "你可以使用与 link:security-openid-connect.html#integration-testing.adoc[OpenID Connect承载令牌集成测试] `Local Public Key` 部分所述的相同方法，只需改变 `application.properties` ，使用MP JWT配置属性代替："

#. type: Title ====
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "TestSecurity annotation"
msgstr "TestSecurity注解"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Add the following dependency:"
msgstr "添加以下依赖关系："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "and write a test code like this one:"
msgstr "并写一个像这样的测试代码："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "where `ProtectedResource` class may look like this:"
msgstr "其中 `ProtectedResource` 类可能看起来像这样："

#: _versions/3.2/guides/security-jwt.adoc
msgid ""
"Note that `@TestSecurity` annotation must always be used and its `user` property is returned as `JsonWebToken.getName()` and `roles` property - as `JsonWebToken.getGroups()`.\n"
"`@JwtSecurity` annotation is optional and can be used to set the additional token claims."
msgstr "请注意，必须始终使用 `@TestSecurity` 注解，并且其 `user` 属性作为 `JsonWebToken.getName()` ， `roles` 属性-作为 `JsonWebToken.getGroups()` 。 `@JwtSecurity` 注释是可选的，可以用来设置额外的标记要求。"

#. type: delimited block =
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "`@TestSecurity` and `@JwtSecurity` can be combined in a meta-annotation, as follows:"
msgstr " `@TestSecurity` 和 ，可以在一个元注释中结合起来，如下所示： `@JwtSecurity` "

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "This is particularly useful if the same set of security settings needs to be used in multiple test methods."
msgstr "如果需要在多个测试方法中使用同一套安全设置，这一点特别有用。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "How to check the errors in the logs"
msgstr "如何检查日志中的错误"

#. type: delimited block =
#: _versions/3.2/guides/security-jwt.adoc
msgid "Please enable `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` level logging to see more details about the token verification or decryption errors:"
msgstr "请启用 `io.quarkus.smallrye.jwt.runtime.auth.MpJwtValidator` `TRACE` 级日志，以查看有关令牌验证或解密错误的更多细节："

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Proactive Authentication"
msgstr "主动认证"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "If you'd like to skip the token verification when the public endpoint methods are invoked, disable the xref:security-proactive-authentication.adoc[proactive authentication]."
msgstr "如果你想在调用公共端点方法时跳过令牌验证，那么请停用 link:security-built-in-authentication.html#proactive-authentication[主动验证] 。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "Note that you can't access the injected `JsonWebToken` in the public methods if the token verification has not been done."
msgstr "请注意，如果没有进行令牌验证，你就不能在公共方法中使用注入的 `JsonWebToken` 。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "How to Add SmallRye JWT directly"
msgstr "如何直接添加SmallRye JWT"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "To xref:jwt-parser[parse and verify JsonWebToken with JWTParser], use `smallrye-jwt` instead of `quarkus-smallrye-jwt` directly for the following situations:"
msgstr "link:#jwt-parser[要用JWTParser解析和验证JsonWebToken] ，在以下情况下，请使用 `smallrye-jwt` ，而不是直接使用 `quarkus-smallrye-jwt` ："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "You work with Quarkus extensions that do not support `HTTP`, such as `Quarkus GRPC`."
msgstr "你与不支持 `HTTP` ，如 `Quarkus GRPC` 的Quarkus扩展工作。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "You provide an extension-specific `HTTP`, the support of which conflicts with the support of those offered by `quarkus-smallrye-jwt` and `Vert.x HTTP`, such as `Quarkus Amazon Lambda`."
msgstr "您提供了一个特定于扩展的 `HTTP` ，其支持与 `quarkus-smallrye-jwt` 和 `Vert.x HTTP` 提供的支持相冲突，例如 `Quarkus Amazon Lambda` 。"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "Start with adding the `smallrye-jwt` dependency:"
msgstr "首先添加 `smallrye-jwt` 依赖项："

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "and update `application.properties` to get all the CDI producers provided by `smallrye-jwt` included as follows:"
msgstr "并更新 `application.properties` ，以获得所有由 `smallrye-jwt` 提供的CDI生产者，包括如下："

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Quarkus configuration"
msgstr "夸克斯配置"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "MicroProfile JWT configuration"
msgstr "微配置文件 JWT 配置"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "Property Name"
msgstr "物业名称"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Default"
msgstr "默认值"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Description"
msgstr "描述"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.verify.publickey"
msgstr "mp.jwt.verify.publickey"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "none"
msgstr "无"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "The `mp.jwt.verify.publickey` config property allows the Public Key text itself to be supplied as a string.  The Public Key will be parsed from the supplied string in the order defined in the xref:supported-public-key-formats[Supported Public Key Formats] section."
msgstr "这个 `mp.jwt.verify.publickey` 配置属性允许将公钥文本本身作为一个字符串提供。公钥将按照 <<支持的公钥格式>> 一节中所定义的顺序，从提供的字符串中解析出来。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.verify.publickey.location"
msgstr "mp.jwt.verify.publickey.location"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Config property allows for an external or internal location of Public Key to be specified.  The value may be a relative path or a URL. If the value points to an HTTPS based JWK set then, for it to work in native mode, the `quarkus.ssl.native` property must also be set to `true`, see xref:native-and-ssl.adoc[Using SSL With Native Executables] for more details."
msgstr "配置属性允许指定公钥的外部或内部位置。该值可以是一个相对路径或一个URL。如果该值指向一个基于HTTPS的JWK集，那么为了让它在本地模式下工作， `quarkus.ssl.native` 属性也必须被设置为 `true` ，更多细节请参见 link:native-and-ssl.html[使用SSL与本地可执行程序] 。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "mp.jwt.verify.publickey.algorithm"
msgstr "mp.jwt.verify.publickey.algorithm 算法"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`RS256`"
msgstr "`RS256`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Signature algorithm. Set it to `ES256` to support the Elliptic Curve signature algorithm."
msgstr "签名算法。将其设置为 `ES256` ，以支持椭圆曲线签名算法。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.decrypt.key.location"
msgstr "mp.jwt.decrypt.key.location"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Config property allows for an external or internal location of Private Decryption Key to be specified."
msgstr "配置属性允许指定私人解密密钥的外部或内部位置。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.verify.issuer"
msgstr "mp.jwt.verify.issuer"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Config property specifies the value of the `iss` (issuer) claim of the JWT that the server will accept as valid."
msgstr "配置属性指定了服务器将接受为有效的JWT的 `iss` （签发者）声明的值。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "mp.jwt.verify.audiences"
msgstr "mp.jwt.verify.audiences"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Comma separated list of the audiences that a token `aud` claim may contain."
msgstr "逗号分隔的列表，其中列出了一个令牌的 `aud` 声明可能包含的受众。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "mp.jwt.verify.clock.skew"
msgstr "mp.jwt.verify.publickey"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`60`"
msgstr "`60`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Clock skew in seconds used during the token expiration and age verification. An expired token is accepted if the current time is within the number of seconds specified by this property after the token expiration time. The default value is 60 seconds."
msgstr "令牌过期和年龄验证过程中使用的时钟偏差（以秒为单位）。如果当前时间在此属性指定的令牌过期时间后的秒数内，过期令牌将被接受。默认值为 60 秒。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "mp.jwt.verify.token.age"
msgstr "mp.jwt.verify.token.age"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`none`"
msgstr "`none`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Number of seconds that must not elapse since the token `iat` (issued at) time."
msgstr "令牌 `iat` （发出时间）后不得超过的秒数。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "mp.jwt.token.header"
msgstr "mp.jwt.token.header"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`Authorization`"
msgstr "`Authorization`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property if another header such as `Cookie` is used to pass the token."
msgstr "如果使用另一个header（如 `Cookie` ）来传递令牌，则设置此属性。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "mp.jwt.token.cookie"
msgstr "mp.jwt.token.cookie"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Name of the cookie containing a token. This property will be effective only if `mp.jwt.token.header` is set to `Cookie`."
msgstr "包含令牌的cookie的名称。只有当 `mp.jwt.token.header` 被设置为 `Cookie` ，该属性才会有效。"

#. type: Title ===
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Additional SmallRye JWT configuration"
msgstr "额外的SmallRye JWT配置"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "SmallRye JWT provides more properties which can be used to customize the token processing:"
msgstr "SmallRye JWT提供了更多的属性，可以用来定制令牌的处理:"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.verify.key.location"
msgstr "smallrye.jwt.verify.key.location"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "NONE"
msgstr "无"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Location of the verification key which can point to both public and secret keys. Secret keys can only be in the JWK format. Note that 'mp.jwt.verify.publickey.location' will be ignored if this property is set."
msgstr "验证密钥的位置，可以指向公钥和秘钥。秘密密钥只能是JWK格式。注意，如果设置了这个属性，`mp.jwt.verify.publickey.location` 将被忽略。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.verify.algorithm"
msgstr "smallrye.jwt.verify.algorithm"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Signature algorithm. This property should only be used for setting a required symmetric algorithm such as `HS256`. It is deprecated for setting asymmetric algorithms such as `ES256` - use 'mp.jwt.verify.publickey.algorithm' instead."
msgstr "签名算法。此属性只能用于设置所需的对称算法，如 `HS256` 。对于设置非对称算法，如已被弃用的 `ES256` - 请使用 `mp.jwt.verify.publickey.algorithm` 代替。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.verify.key-format"
msgstr "smallrye.jwt.verify.key-format"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`ANY`"
msgstr "`ANY`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property to a specific key format such as `PEM_KEY`, `PEM_CERTIFICATE`, `JWK` or `JWK_BASE64URL` to optimize the way the verification key is loaded."
msgstr "将此属性设置为特定的密钥格式，如 `PEM_KEY` , `PEM_CERTIFICATE` , `JWK` 或 `JWK_BASE64URL` ，以优化验证密钥的加载方式。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.verify.relax-key-validation"
msgstr "smallrye.jwt.verify.relax-key-validation"

#: _versions/3.2/guides/security-jwt.adoc
msgid "false"
msgstr "false"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Relax the validation of the verification keys, setting this property to `true` will allow public RSA keys with the length less than 2048 bit."
msgstr "放宽密钥验证，将此属性设置为 `true` ，将允许长度小于2048比特的公共RSA密钥。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.verify.certificate-thumbprint"
msgstr "smallrye.jwt.verify.certificate-thumbprint"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "If this property is enabled then a signed token must contain either 'x5t' or 'x5t#S256' X509Certificate thumbprint headers. Verification keys can only be in JWK or PEM Certificate key formats in this case. JWK keys must have a 'x5c' (Base64-encoded X509Certificate) property set."
msgstr "如果此属性被启用，那么签名的令牌必须包含 `x5t` 或 `x5t#S256` X509Certificate的thumbprint headers。在这种情况下，验证密钥只能是JWK或PEM证书密钥格式。JWK密钥必须有一个 `x5c`（Base64编码的X509Certificate）属性设置。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.token.header"
msgstr "smallrye.jwt.token.header"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property if another header such as `Cookie` is used to pass the token. This property is deprecated - use 'mp.jwt.token.header'."
msgstr "如果使用另一个header，如 `Cookie` ，来传递令牌，则设置此属性。此属性已被废弃—请使用 `mp.jwt.token.header` 。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.token.cookie"
msgstr "smallrye.jwt.token.cookie"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Name of the cookie containing a token. This property will be effective only if `smallrye.jwt.token.header` is set to `Cookie`. This property is deprecated - use 'mp.jwt.token.cookie`."
msgstr "包含token的cookie的名称。该属性只有在 `smallrye.jwt.token.header` 被设置为 `Cookie` 时才有效。该属性已被废弃--请使用 `mp.jwt.token.cookie`。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.always-check-authorization"
msgstr "smallrye.jwt.always-check-authorization"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set this property to `true` for `Authorization` header be checked even if the `smallrye.jwt.token.header` is set to `Cookie` but no cookie with a `smallrye.jwt.token.cookie` name exists."
msgstr "如果将此属性设置为 `true` ，`Authorization` header也会被检查，即使 `smallrye.jwt.token.header` 被设置为 `Cookie` ，但又不存在名称为 `smallrye.jwt.token.cookie` 的cookie。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.token.schemes"
msgstr "smallrye.jwt.token.schemes"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`Bearer`"
msgstr "`Bearer`"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Comma-separated list containing an alternative single or multiple schemes, for example, `DPoP`."
msgstr "逗号分隔的列表，其中包含一个可替代的单一或多个schemes，例如， `DPoP` 。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.token.kid"
msgstr "smallrye.jwt.token.kid"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Key identifier. If it is set then the verification JWK key as well every JWT token must have a matching `kid` header."
msgstr "密钥标识符。如果它被设置，那么验证JWK密钥以及每个JWT标记必须有一个匹配的 `kid` header。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.time-to-live"
msgstr "smallrye.jwt.time-to-live"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "The maximum number of seconds that a JWT may be issued for use. Effectively, the difference between the expiration date of the JWT and the issued at date must not exceed this value. Setting this property to a non-positive value relaxes the requirement for the token to have a valid 'iat' (issued at) claim."
msgstr "JWT可能被发布使用的最大秒数。实际上，JWT的到期日和签发日期之间的差异不得超过这个值。将此属性设置为非正值，可以取消对令牌具有有效的 `iat`（签发日期）声明的要求。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.require.named-principal"
msgstr "smallrye.jwt.require.named-principal"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "`true`"
msgstr "`true` "

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "If an application relies on `java.security.Principal` returning a name then a token must have a `upn` or `preferred_username` or `sub` claim set. Setting this property will result in SmallRye JWT throwing an exception if none of these claims is available for the application code to reliably deal with a non-null `Principal` name."
msgstr "如果一个应用程序依赖于 `java.security.Principal` ，返回一个名称，那么一个标记必须有一个 `upn` 、 `preferred_username` 或 `sub` 的声明集。如果应用程序代码没有这些要求来可靠地处理非空的 `Principal` 名称，设置此属性将导致SmallRye JWT抛出一个异常。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.path.sub"
msgstr "smallrye.jwt.path.sub"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Path to the claim containing the subject name. It starts from the top level JSON object and can contain multiple segments where each segment represents a JSON object name only, example: `realms/subject`. This property can be used if a token has no 'sub' claim but has the subject set in a different claim. Use double quotes with the namespace qualified claims."
msgstr "包含subject名称的声明的路径。它从顶级的JSON对象开始，可以包含多个段，每个段只代表一个JSON对象名称，例如： `realms/subject` 。如果一个标记没有 `sub` 声明，但在一个不同的声明里设置了subject，则可以使用这个属性。在命名空间限定的声明上使用双引号。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.claims.sub"
msgstr "smallrye.jwt.claims.sub"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to set a default sub claim value when the current token has no standard or custom `sub` claim available. Effectively this property can be used to customize `java.security.Principal` name if no `upn` or `preferred_username` or `sub` claim is set."
msgstr "当当前令牌没有可用的标准或自定义 `sub` 声明时，此属性可用于设置默认的sub声明值。如果没有设置 `upn` 或 `preferred_username` 或 `sub` 声明，该属性可有效地用于自定义 `java.security.Principal` 名称。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.path.groups"
msgstr "smallrye.jwt.path.groups"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Path to the claim containing the groups. It starts from the top level JSON object and can contain multiple segments where each segment represents a JSON object name only, example: `realm/groups`. This property can be used if a token has no 'groups' claim but has the groups set in a different claim. Use double quotes with the namespace qualified claims."
msgstr "到包含组的声明的路径。它从顶级的JSON对象开始，可以包含多个段，每个段只代表一个JSON对象的名称，例如： `realm/groups` 。如果一个标记没有 `groups` 的声明，但在一个不同的声明中设置了组，就可以使用这个属性。在命名空间限定的声明上使用双引号。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "smallrye.jwt.groups-separator"
msgstr "smallrye.jwt.groups-separator"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "' '"
msgstr "' '"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Separator for splitting a string which may contain multiple group values. It will only be used if the `smallrye.jwt.path.groups` property points to a custom claim whose value is a string. The default value is a single space because a standard OAuth2 `scope` claim may contain a space separated sequence."
msgstr "分隔符，用于分割一个可能包含多个组值的字符串。只有当 `smallrye.jwt.path.groups` 属性指向一个值为字符串的自定义声明时，它才会被使用。默认值是一个单一的空格，因为一个标准的OAuth2 `scope` 声明可能包含一个空格分隔的序列。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.claims.groups"
msgstr "smallrye.jwt.claims.groups"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to set a default groups claim value when the current token has no standard or custom groups claim available."
msgstr "当当前令牌没有可用的标准或自定义的组声明时，此属性可用于设置默认组声明值。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.jwks.refresh-interval"
msgstr "smallrye.jwt.jwks.refresh-interval"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "60"
msgstr "60"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "JWK cache refresh interval in minutes. It will be ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL based JWK set and no HTTP `Cache-Control` response header with a positive `max-age` parameter value is returned from a JWK HTTPS endpoint."
msgstr "JWK缓存刷新时间间隔，单位是分钟。它将被忽略，除非 `mp.jwt.verify.publickey.location` 指向基于HTTP或HTTPS URL的JWK设置，并且没有从JWK HTTPS端点返回具有正 `max-age` 参数值的HTTP `Cache-Control` 响应header。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.jwks.forced-refresh-interval"
msgstr "smallrye.jwt.jwks.forced-refresh-interval"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "30"
msgstr "30"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Forced JWK cache refresh interval in minutes which is used to restrict the frequency of the forced refresh attempts which may happen when the token verification fails due to the cache having no JWK key with a `kid` property matching the current token's `kid` header. It will be ignored unless the `mp.jwt.verify.publickey.location` points to the HTTP or HTTPS URL based JWK set."
msgstr "强制刷新JWK缓存的时间间隔，以分钟为单位，用于限制强制刷新尝试的频率，这可能发生在令牌验证失败时，因为缓存中没有能与当前令牌带 `kid` 属性的JWK密钥，相匹配的 `kid` header。除非 `mp.jwt.verify.publickey.location` 指向基于HTTP或HTTPS URL的JWK集，否则它将被忽略。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.expiration.grace"
msgstr "smallrye.jwt.expiration.grace"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "0"
msgstr "0"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "Expiration grace in seconds. By default an expired token will still be accepted if the current time is no more than 1 min after the token expiry time. This property is deprecated. Use `mp.jwt.verify.clock.skew` instead."
msgstr "过期时间，以秒为单位。默认情况下，如果当前时间不超过令牌过期时间1分钟，过期的令牌仍将被接受。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.verify.aud"
msgstr "smallrye.jwt.verify.aud"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Comma separated list of the audiences that a token `aud` claim may contain. This property is deprecated - use `mp.jwt.verify.audiences`."
msgstr "逗号分隔的列表，列出了令牌 `aud` 声明可能包含的受众。该属性已被废弃—请使用 `mp.jwt.verify.audiences` 。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.required.claims"
msgstr "smallrye.jwt.required.claims"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Comma separated list of the claims that a token must contain."
msgstr "一个token必须包含逗号分隔的声明(claims)列表。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.decrypt.key.location"
msgstr "Smallrye.jwt.decrypt.key.location"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Config property allows for an external or internal location of Private Decryption Key to be specified. This property is deprecated - use 'mp.jwt.decrypt.key.location'."
msgstr "配置属性允许指定私人解密密钥的外部或内部位置。此属性已被废弃 - 请使用 `mp.jwt.decrypt.key.location` 。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.decrypt.algorithm"
msgstr "smallrye.jwt.decrypt.algorithm 算法"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`RSA_OAEP`"
msgstr " `RSA_OAEP` "

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption algorithm."
msgstr "解密算法。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.decrypt.key"
msgstr "Smallrye.jwt.decrypt.key"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption key supplied as a string."
msgstr "以字符串形式提供的解密密钥。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.token.decryption.kid"
msgstr "smallrye.jwt.token.decryption.kid"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Decryption Key identifier. If it is set then the decryption JWK key as well every JWT token must have a matching `kid` header."
msgstr "解密密钥标识符。如果它被设置，那么解密JWK密钥以及每个JWT标记必须有一个匹配的 `kid` header。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.client.tls.certificate.path"
msgstr "smallrye.jwt.client.tls.certificate.path"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Path to TLS trusted certificate which may need to be configured if the keys have to be fetched over `HTTPS`."
msgstr "如果需要通过 `HTTPS` 获取密钥，则需要配置 TLS 信任证书的路径。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.client.tls.trust-all"
msgstr "smallrye.jwt.client.tls.trust-all"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Trust all the hostnames. If the keys have to be fetched over `HTTPS` and this property is set to `true` then all the hostnames are trusted by default."
msgstr "信任所有的主机名。如果钥匙必须通过 `HTTPS` 获得，并且该属性被设置为 `true` ，那么所有的主机名都被默认信任。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.client.tls.hosts"
msgstr "smallrye.jwt.client.tls.hosts"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Set of trusted hostnames. If the keys have to be fetched over `HTTPS` and `smallrye.jwt.client.tls.trust-all` is set to `false` then this property can be used to configure the trusted hostnames."
msgstr "受信任的主机名的集合。如果钥匙必须通过 `HTTPS` 获得，并且 `smallrye.jwt.client.tls.trust-all` 被设置为 `false` ，那么这个属性可以用来配置可信的主机名。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.http.proxy.host"
msgstr "Smallrye.jwt.http.proxy.host"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "HTTP proxy host."
msgstr "HTTP代理主机。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.http.proxy.port"
msgstr "Smallrye.jwt.http.proxy.port"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "80"
msgstr "80"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "HTTP proxy port."
msgstr "HTTP代理端口。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.type"
msgstr "smallrye.jwt.keystore.type"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "`JKS`"
msgstr " `JKS` "

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to customize a keystore type if either `mp.jwt.verify.publickey.location` or mp.jwt.decrypt.key.location` points to a `KeyStore` file. If it is not set then the file name will be checked to determine the keystore type before defaulting to `JKS`."
msgstr "如果 `mp.jwt.verify.publickey.location` 或 `mp.jwt.decrypt.key.location` 指向一个 `KeyStore` 文件，这个属性可以用来定制一个密钥库类型。如果没有设置，那么文件名将被检查以确定密钥库类型，默认为 `JKS` 。"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy, no-wrap
msgid "smallrye.jwt.keystore.provider"
msgstr "Smallrye.jwt.keystore.provider"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property can be used to customize a `KeyStore` provider if `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "如果 `mp.jwt.verify.publickey.location` 或 `mp.jwt.decrypt.key.location` 指向一个 `KeyStore` 文件，该属性可用于定制一个 `KeyStore` 提供者。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.password"
msgstr "smallrye.jwt.keystore.password"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "Keystore password. If `mp.jwt.verify.publickey.location` or `mp.jwt.decrypt.key.location` then this property has be set."
msgstr "Keystore密码。如果有 `mp.jwt.verify.publickey.location` 或 `mp.jwt.decrypt.key.location` ，则此属性必须被设置。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.verify.key.alias"
msgstr "smallrye.jwt.keystore.verify.key.alias"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property has to be set to identify a public verification key which will be extracted from `KeyStore` from a matching certificate if `mp.jwt.verify.publickey.location` points to a `KeyStore` file."
msgstr "这个属性必须被设置，以确定一个公共验证密钥，如果 `mp.jwt.verify.publickey.location` 指向 `KeyStore` 文件，该密钥将从所匹配的证书中的 `KeyStore` 中提取。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.decrypt.key.alias"
msgstr "smallrye.jwt.keystore.decrypt.key.alias"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property has to be set to identify a private decryption key if `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "如果 `mp.jwt.decrypt.key.location` 指向 `KeyStore` 文件，则必须将此属性设置为标识专用解密密钥。"

#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "smallrye.jwt.keystore.decrypt.key.password"
msgstr "smallrye.jwt.keystore.decrypt.key.password"

#. type: Table
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "This property may be set if a private decryption key's password in `KeyStore` is different to `smallrye.jwt.keystore.password` when `mp.jwt.decrypt.key.location` points to a `KeyStore` file."
msgstr "如果 `mp.jwt.decrypt.key.location` 指向 `KeyStore` 文件时，并且 `KeyStore` 中的专用解密密钥的密码与 `smallrye.jwt.keystore.password` 不同，则可以设置此属性。"

#. type: Title ==
#: _versions/3.2/guides/security-jwt.adoc
#, no-wrap
msgid "References"
msgstr "参考文献"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.html[MP JWT 1.2 HTML]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"
msgstr "link:https://download.eclipse.org/microprofile/microprofile-jwt-auth-1.2/microprofile-jwt-auth-spec-1.2.pdf[MP JWT 1.2 PDF]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
msgid "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"
msgstr "link:https://github.com/smallrye/smallrye-jwt[SmallRye JWT]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON网络令牌]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7515[JSON Web Signature]"
msgstr "link:https://tools.ietf.org/html/rfc7515[JSON网络签名]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7516[JSON Web Encryption]"
msgstr "link:https://tools.ietf.org/html/rfc7516[JSON网络加密]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "link:https://tools.ietf.org/html/rfc7518[JSON Web Algorithms]"
msgstr "link:https://tools.ietf.org/html/rfc7518[JSON网络算法]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "xref:security-jwt-build.adoc[Sign and encrypt JWT tokens with SmallRye JWT Build]"
msgstr "link:security-jwt-build.html[用SmallRye JWT Build签署和加密JWT令牌]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[Combining authentication mechanisms]"
msgstr "xref:security-authentication-mechanisms.adoc#combining-authentication-mechanisms[组合认证机制]"

#. type: Plain text
#: _versions/3.2/guides/security-jwt.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"
