# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-28 16:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "SmallRye Health"
msgstr "小黑麦健康"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"This guide demonstrates how your Quarkus application can use https://github.com/smallrye/smallrye-health/[SmallRye Health]\n"
"an implementation of the https://github.com/eclipse/microprofile-health/[MicroProfile Health] specification."
msgstr "本指南演示了 Quarkus 应用程序如何使用 link:https://github.com/smallrye/smallrye-health/[SmallRye] Health 实现 link:https://github.com/eclipse/microprofile-health/[MicroProfile Health] 规范。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"SmallRye Health allows applications to provide information about their state\n"
"to external viewers which is typically useful in cloud environments where automated\n"
"processes must be able to determine whether the application should be discarded\n"
"or restarted."
msgstr "SmallRye Health 允许应用程序向外部查看器提供有关其状态的信息，这在云环境中非常有用，因为在云环境中，自动化流程必须能够确定是否应该丢弃或重新启动应用程序。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"In this guide, we build a simple REST application that exposes MicroProfile Health\n"
"functionalities at the `/q/health/live` and `/q/health/ready` endpoints according to the\n"
"specification."
msgstr "在本指南中，我们将构建一个简单的 REST 应用程序，根据规范在 `/q/health/live` 和 `/q/health/ready` 端点公开 MicroProfile Health 功能。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/3.2/guides/smallrye-health.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the\n"
"application step by step. However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#: _versions/3.2/guides/smallrye-health.adoc
msgid ""
"Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an\n"
"{quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或下载一个 {quickstarts-archive-url}[存档] 。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"The solution is located in the `microprofile-health-quickstart`\n"
"{quickstarts-tree-url}/microprofile-health-quickstart[directory]."
msgstr "解决方案位于 `microprofile-health-quickstart` {quickstarts-tree-url}/microprofile-health-quickstart[目录]。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, no-wrap
msgid "Creating the Maven Project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "This command generates a project, importing the `smallrye-health` extension."
msgstr "该命令生成一个项目，导入 `smallrye-health` 扩展。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `smallrye-health` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果已经配置了 Quarkus 项目，可以在项目基本目录下运行以下命令，将 `smallrye-health` 扩展添加到项目中："

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/3.2/guides/smallrye-health.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/3.2/guides/smallrye-health.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Running the health check"
msgstr "运行健康检查"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Importing the `smallrye-health` extension directly exposes three REST endpoints:"
msgstr "导入 `smallrye-health` 扩展直接暴露了三个REST端点。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`/q/health/live` - The application is up and running."
msgstr " `/q/health/live` - 该应用程序已经启动并运行。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`/q/health/ready` - The application is ready to serve requests."
msgstr " `/q/health/ready` - 该应用程序已准备好为请求提供服务。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`/q/health/started` - The application is started."
msgstr " `/q/health/started` - 应用程序已启动。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`/q/health` - Accumulating all health check procedures in the application."
msgstr " `/q/health` - 在应用程序中积累所有健康检查程序。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "To check that the `smallrye-health` extension is working as expected:"
msgstr "要检查 `smallrye-health` 扩展是否按预期工作。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "start your Quarkus application with:"
msgstr "用来启动你的Quarkus应用程序。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "CLI"
msgstr "CLI"

#: _versions/3.2/guides/smallrye-health.adoc
msgid "Maven"
msgstr "Maven"

#: _versions/3.2/guides/smallrye-health.adoc
msgid "Gradle"
msgstr "Gradle"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"access the `http://localhost:8080/q/health/live` endpoint using your browser or\n"
"`curl http://localhost:8080/q/health/live`"
msgstr "访问 `http://localhost:8080/q/health/live` 使用浏览器或 `curl http://localhost:8080/q/health/live`"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "All `health` REST endpoints return a simple JSON object with two fields:"
msgstr "所有的健康REST端点都返回一个简单的JSON对象，有两个字段。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`status` -- the overall result of all the health check procedures"
msgstr " `status` - 所有健康检查程序的总体结果"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`checks` -- an array of individual checks"
msgstr " `checks` - 一个单独的检查阵列"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"The general `status` of the health check is computed as a logical AND of all the\n"
"declared health check procedures. The `checks` array is empty as we have not specified\n"
"any health check procedure yet so let's define some."
msgstr "健康检查的一般 `status` 是由所有已声明的健康检查过程的逻辑 AND 计算得出的。 `checks` 数组是空的，因为我们还没有指定任何健康检查程序，所以让我们来定义一些程序。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Management interface"
msgstr "管理界面"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"By default, the health checks are exposed on the main HTTP server.\n"
"You can expose them on a separate network interface and port by enabling the management interface with the\n"
"`quarkus.management.enabled=true` property.\n"
"Refer to the xref:./management-interface-reference.adoc[management interface reference] for more information."
msgstr "默认情况下，健康检查在主 HTTP 服务器上进行。您可以通过使用 `quarkus.management.enabled=true` 属性启用管理接口，在单独的网络接口和端口上公开健康检查。有关详细信息，请参阅 xref:./management-interface-reference.adoc[管理接口参考资料] 。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Creating your first health check"
msgstr "创建你的第一次健康检查"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "In this section, we create our first simple health check procedure."
msgstr "在本节中，我们创建了第一个简单的健康检查程序。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Create the `org.acme.microprofile.health.SimpleHealthCheck` class:"
msgstr "创建 `org.acme.microprofile.health.SimpleHealthCheck` 类。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "It's recommended to annotate the health check class with `@ApplicationScoped` or the `@Singleton` scope so that a single bean instance is used for all health check requests."
msgstr "建议用 `@ApplicationScoped` 或 `@Singleton` 范围来注解健康检查类，以便所有健康检查请求都使用一个bean实例。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "If a bean class annotated with one of the health check annotations declares no scope then the `@Singleton` scope is used automatically."
msgstr "如果一个用健康检查注解之一注解的Bean类没有声明任何作用域，那么会自动使用 `@Singleton` 作用域。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "As you can see, the health check procedures are defined as CDI beans that implement the `HealthCheck` interface and are annotated with one of the health check qualifiers, such as:"
msgstr "正如你所看到的，健康检查程序被定义为CDI Bean，它实现了 `HealthCheck` 接口，并被注解为健康检查限定符之一，如：。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`@Liveness` - the liveness check accessible at `/q/health/live`"
msgstr " `@Liveness` - 可访问的有效性检查在 `/q/health/live` "

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`@Readiness` - the readiness check accessible at `/q/health/ready`"
msgstr " `@Readiness` - 可通过以下网址进行准备情况检查 `/q/health/ready` "

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"`HealthCheck` is a functional interface whose single method `call` returns a\n"
"`HealthCheckResponse` object which can be easily constructed by the fluent builder\n"
"API shown in the example."
msgstr "`HealthCheck` 是一个功能接口，其单个方法 返回一个 对象，该对象可通过示例中的流畅构建器 API 轻松构建。 `call` `HealthCheckResponse`"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"As we have started our Quarkus application in dev mode simply repeat the request\n"
"to `http://localhost:8080/q/health/live` by refreshing your browser window or by\n"
"using `curl http://localhost:8080/q/health/live`. Because we defined our health check\n"
"to be a liveness procedure (with `@Liveness` qualifier) the new health check procedure\n"
"is now present in the `checks` array."
msgstr "由于我们已在开发模式下启动了 Quarkus 应用程序，因此只需通过刷新浏览器窗口或使用 `http://localhost:8080/q/health/live` 的请求，刷新浏览器窗口或使用 `curl http://localhost:8080/q/health/live` .由于我们已将健康检查定义为有效存储过程（带有 `@Liveness` 限定符），因此新的健康检查存储过程现已出现在 `checks` 数组中。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"Congratulations! You've created your first Quarkus health check procedure. Let's\n"
"continue by exploring what else can be done with SmallRye Health."
msgstr "恭喜您！你已经创建了第一个 Quarkus 健康检查程序。让我们继续探索 SmallRye Health 还能做些什么。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Adding a readiness health check procedure"
msgstr "增加一个准备就绪的健康检查程序"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"In the previous section, we created a simple liveness health check procedure which states\n"
"whether our application is running or not. In this section, we will create a readiness\n"
"health check which will be able to state whether our application is able to process\n"
"requests."
msgstr "在上一节中，我们创建了一个简单的运行状况健康检查程序，用于说明应用程序是否正在运行。在本节中，我们将创建一个就绪状态健康检查程序，它将能够说明应用程序是否能够处理请求。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"We will create another health check procedure that simulates a connection to\n"
"an external service provider such as a database. For starters, we will always return\n"
"the response indicating the application is ready."
msgstr "我们将创建另一个健康检查存储过程，模拟与外部服务提供商（如数据库）的连接。首先，我们将始终返回应用程序已就绪的响应。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Create `org.acme.microprofile.health.DatabaseConnectionHealthCheck` class:"
msgstr "创建 `org.acme.microprofile.health.DatabaseConnectionHealthCheck` 类。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"If you now rerun the health check at `http://localhost:8080/q/health/live` the `checks`\n"
"array will contain only the previously defined `SimpleHealthCheck` as it is the only\n"
"check defined with the `@Liveness` qualifier. However, if you access\n"
"`http://localhost:8080/q/health/ready` (in the browser or with\n"
"`curl http://localhost:8080/q/health/ready`) you will see only the\n"
"`Database connection health check` as it is the only health check defined with the\n"
"`@Readiness` qualifier as the readiness health check procedure."
msgstr "如果现在在 `http://localhost:8080/q/health/live` `checks` 数组将只包含先前定义的 `SimpleHealthCheck` ，因为它是唯一定义了 `@Liveness` 限定符的检查。但是，如果访问 `http://localhost:8080/q/health/ready` (浏览器或使用 `curl http://localhost:8080/q/health/ready` ），你将只看到 `Database connection health check` ，因为它是唯一一个定义了 `@Readiness` 限定符作为就绪健康检查程序的健康检查。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "If you access `http://localhost:8080/q/health` you will get back both checks."
msgstr "如果你访问 `<a href=\"http://localhost:8080/q/health\" class=\"bare\">http://localhost:8080/q/health</a>` 你会得到两张支票。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"More information about which health check procedures should be used in which situation\n"
"is detailed in the MicroProfile Health specification. Generally, the liveness\n"
"procedures determine whether the application should be restarted while readiness\n"
"procedures determine whether it makes sense to contact the application with requests."
msgstr "有关在何种情况下应使用何种健康检查程序的更多信息，请参阅 MicroProfile Health 规范。一般来说，有效性程序决定是否应重新启动应用程序，而就绪性程序则决定是否有必要向应用程序发出请求。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Adding a startup health check procedure"
msgstr "添加一个启动健康检查程序"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "The third and final type of health check procedures is startup. Startup procedures are defined as an option for slow starting containers (should not be needed in Quarkus) to delay the invocations of liveness probe which will take over from startup once the startup responds UP for the first time. Startup health checks are defined with the `@Startup` qualifier."
msgstr "第三种也是最后一种健康检查程序是启动。启动程序被定义为慢速启动容器的一个选项（在Quarkus中应该是不需要的），以延迟调用liveness probe，一旦启动响应UP第一次，它将从启动中接管。启动健康检查是用 `@Startup` 修饰语定义的。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Please make sure that you import the microprofile `org.eclipse.microprofile.health.Startup` annotation since there is an unfortunate clash with `io.quarkus.runtime.Startup`."
msgstr "请确保你导入了微配置文件 `org.eclipse.microprofile.health.Startup` 注释，因为它与 `io.quarkus.runtime.Startup` 有一个不幸的冲突。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Create `org.acme.microprofile.health.StartupHealthCheck` class:"
msgstr "创建 `org.acme.microprofile.health.StartupHealthCheck` 类。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "The startup health check will be available either at `http://localhost:8080/q/health/started` or together with other health check procedure at `http://localhost:8080/q/health`."
msgstr "启动健康检查将在以下网站提供 `<a href=\"http://localhost:8080/q/health/started\" class=\"bare\">http://localhost:8080/q/health/started</a>` 或与其他健康检查程序一起在 `<a href=\"http://localhost:8080/q/health\" class=\"bare\">http://localhost:8080/q/health</a>` ."

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Negative health check procedures"
msgstr "消极的健康检查程序"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"In this section, we extend our `Database connection health check` with the option of\n"
"stating that our application is not ready to process requests as the underlying\n"
"database connection cannot be established. For simplicity reasons, we only determine\n"
"whether the database is accessible or not by a configuration property."
msgstr "在本节中，我们将对 `Database connection health check` 进行扩展，以说明由于无法建立底层数据库连接，应用程序无法处理请求。为简单起见，我们仅通过配置属性来确定数据库是否可访问。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Update the `org.acme.microprofile.health.DatabaseConnectionHealthCheck` class:"
msgstr "更新 `org.acme.microprofile.health.DatabaseConnectionHealthCheck` 类。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"Until now, we used a simplified method of building a `HealthCheckResponse`\n"
"through the `HealthCheckResponse#up(String)` (there is also\n"
"`HealthCheckResponse#down(String)`) which will directly build the response object.\n"
"From now on, we utilize the full builder capabilities provided by the\n"
"`HealthCheckResponseBuilder` class."
msgstr "到目前为止，我们使用的是一种简化方法，即通过 `HealthCheckResponse#up(String)` （还有 `HealthCheckResponse#down(String)` ）直接构建 `HealthCheckResponse` 的响应对象。从现在起，我们将利用 `HealthCheckResponseBuilder` 类提供的全部构建器功能。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"If you now rerun the readiness health check (at `http://localhost:8080/q/health/ready`)\n"
"the overall `status` should be DOWN. You can also check the liveness check at\n"
"`http://localhost:8080/q/health/live` which will return the overall `status` UP because\n"
"it isn't influenced by the readiness checks."
msgstr "如果您现在重新运行准备就绪健康检查（在 `http://localhost:8080/q/health/ready` ），整个 `status` 应该是 DOWN。您还可以在 `http://localhost:8080/q/health/live` 的有效性检查，这样整个 `status` 就会上升，因为它不受准备状态检查的影响。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"As we shouldn't leave this application with a readiness check in a DOWN state and\n"
"because we are running Quarkus in dev mode you can add `database.up=true` in\n"
"`src/main/resources/application.properties` and rerun the readiness health check again\n"
"-- it should be up again."
msgstr "由于我们不应该让该应用程序的就绪检查处于 DOWN 状态，而且我们是在开发模式下运行 Quarkus 的，因此你可以在 `src/main/resources/application.properties` 中添加 `database.up=true` ，然后重新运行就绪健康检查 - 它应该会再次启动。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Adding user-specific data to the health check response"
msgstr "将用户特定的数据添加到健康检查响应中"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"In previous sections, we saw how to create simple health checks with only the minimal\n"
"attributes, namely, the health check name and its status (UP or DOWN). However, the\n"
"MicroProfile Health specification also provides a way for the applications to supply\n"
"arbitrary data in the form of key-value pairs sent to the consuming end. This can be\n"
"done by using the `withData(key, value)` method of the health check response\n"
"builder API."
msgstr "在前面的章节中，我们了解了如何创建只有最基本属性（即健康检查名称及其状态（UP 或 DOWN））的简单健康检查。不过，\"微配置文件健康 \"规范也为应用程序提供了一种方法，可将任意数据以键值对的形式发送到消费端。这可以通过使用健康检查响应生成器 API 的 `withData(key, value)` 方法来实现。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Let's create a new health check procedure `org.acme.microprofile.health.DataHealthCheck`:"
msgstr "让我们创建一个新的健康检查程序 `org.acme.microprofile.health.DataHealthCheck` 。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"If you rerun the liveness health check procedure by accessing the `/q/health/live`\n"
"endpoint you can see that the new health check `Health check with data` is present\n"
"in the `checks` array. This check contains a new attribute called `data` which is a\n"
"JSON object consisting of the properties we have defined in our health check procedure."
msgstr "如果访问 `/q/health/live` 端点重新运行有效性健康检查过程，可以看到 `checks` 数组中出现了新的健康检查 `Health check with data` 。该检查包含一个名为 `data` 的新属性，它是一个 JSON 对象，由我们在健康检查过程中定义的属性组成。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"This functionality is specifically useful in failure scenarios where you can pass the\n"
"error along with the health check response."
msgstr "该功能在故障情况下特别有用，您可以将错误与健康检查响应一起传递。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Context propagation into the health check invocations"
msgstr "语境传播到健康检查调用中"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "For performance reasons, the context (e.g., CDI or security context) is not propagated into each health check invocation. However, if you need to enable this functionality you can set the config property `quarkus.smallrye-health.context-propagation=true` to allow the context propagation into every health check call."
msgstr "由于性能原因，上下文（如CDI或安全上下文）不会被传播到每个健康检查调用中。但是，如果你需要启用这个功能，你可以设置配置属性 `quarkus.smallrye-health.context-propagation=true` ，允许将上下文传播到每个健康检查调用中。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Reactive health checks"
msgstr "反应性健康检查"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "MicroProfile Health currently doesn't support returning reactive types, but SmallRye Health does."
msgstr "MicroProfile Health目前不支持返回反应性类型，但SmallRye Health支持。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"If you want to provide a reactive health check, you can implement the `io.smallrye.health.api.AsyncHealthCheck` interface instead of the `org.eclipse.microprofile.health.HealthCheck` one.\n"
"The `io.smallrye.health.api.AsyncHealthCheck` interface allows you to return a `Uni<HealthCheckResponse>`."
msgstr "如果要提供反应式健康检查，可以实现 `io.smallrye.health.api.AsyncHealthCheck` 接口，而不是 `org.eclipse.microprofile.health.HealthCheck` 接口。 `io.smallrye.health.api.AsyncHealthCheck` 接口允许您返回一个 `Uni<HealthCheckResponse>` 。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "The following example shows a reactive liveness check:"
msgstr "下面的例子显示了一个反应式的有效性检查。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy, no-wrap
msgid "Extension health checks"
msgstr "延期健康检查"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Some extension may provide default health checks, including the extension will automatically register its health checks."
msgstr "一些扩展可能提供默认的健康检查，包括扩展将自动注册其健康检查。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"For example, `quarkus-agroal` that is used to manage Quarkus datasource(s) automatically register a readiness health check\n"
"that will validate each datasource: xref:datasource.adoc#datasource-health-check[Datasource Health Check]."
msgstr "例如，用于管理 Quarkus 数据源的 `quarkus-agroal` 会自动注册准备状态健康检查，以验证每个数据源： xref:datasource.adoc#datasource-health-check[数据源健康检查] 。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "You can disable extension health checks via the property `quarkus.health.extensions.enabled` so none will be automatically registered."
msgstr "你可以通过属性 `quarkus.health.extensions.enabled` ，禁用扩展的健康检查，这样就没有人会自动注册。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Health UI"
msgstr "健康用户界面"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Experimental - not included in the MicroProfile specification"
msgstr "实验性的--不包括在MicroProfile规范中"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`health-ui` allows you to see your Health Checks in a Web GUI."
msgstr " `health-ui` 允许你在Web GUI中查看你的健康检查。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "The Quarkus `smallrye-health` extension ships with `health-ui` and enables it by default in dev and test modes, but it can also be explicitly configured for production mode as well."
msgstr "Quarkus `smallrye-health` 扩展与 `health-ui` ，并在开发和测试模式下默认启用，但也可以明确配置为生产模式。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "`health-ui` can be accessed from http://localhost:8080/q/health-ui/ ."
msgstr " `health-ui` 可以从 http://localhost:8080/q/health-ui/ 。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "image:health-ui-screenshot01.png[alt=Health UI]"
msgstr "image:health-ui-screenshot01.png[alt=\"Health UI\"]"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"By default, the health checks are exposed on the main HTTP server.\n"
"You can expose them on a separate network interface and port by setting `quarkus.management.enabled=true` in your application configuration.\n"
"Note that this property is a build-time property.\n"
"The value cannot be overridden at runtime."
msgstr "默认情况下，健康检查在主 HTTP 服务器上进行。您可以通过在应用程序配置中设置 `quarkus.management.enabled=true` ，在单独的网络接口和端口上公开健康检查。请注意，该属性是构建时属性。运行时无法覆盖该值。"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"If you enable the management interface without customizing the management network interface and port, the health checks are exposed under: `http://0.0.0.0:9000/q/health`.\n"
"You can configure the _path_ (the `health` segment in the previous URL) using the `quarkus.smallrye-health.root-path` property."
msgstr "如果启用了管理界面，但没有自定义管理网络接口和端口，则会在： `http://0.0.0.0:9000/q/health` .您可以使用 `quarkus.smallrye-health.root-path` 属性配置 _路径_ （上一个 URL 中的 `health` 段）。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "Refer to the xref:./management-interface-reference.adoc[management interface reference] for more information."
msgstr "更多信息请参考 link:./management-interface-reference.html[管理界面参考] 。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, no-wrap
msgid "Conclusion"
msgstr "解决方案"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"SmallRye Health provides a way for your application to distribute information\n"
"about its healthiness state to state whether it is able to function properly.\n"
"Liveness checks are utilized to tell whether the application should be restarted and\n"
"readiness checks are used to tell whether the application is able to process requests."
msgstr "SmallRye Health 为应用程序提供了一种发布健康状态信息的方式，以说明应用程序是否能够正常运行。有效性检查用于判断应用程序是否应该重新启动，就绪性检查用于判断应用程序是否能够处理请求。"

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "All that is needed to enable the SmallRye Health features in Quarkus is:"
msgstr "在Quarkus中启用SmallRye Health功能所需要的就是："

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid ""
"adding the `smallrye-health` Quarkus extension to your project using the\n"
"`quarkus-maven-plugin`:"
msgstr "使用 `quarkus-maven-plugin` 将 `smallrye-health` Quarkus 扩展程序添加到您的项目中："

#. type: Plain text
#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "or simply adding the following Maven dependency:"
msgstr "或简单地添加以下Maven依赖。"

#. type: Title ==
#: _versions/3.2/guides/smallrye-health.adoc
#, no-wrap
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/3.2/guides/smallrye-health.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
