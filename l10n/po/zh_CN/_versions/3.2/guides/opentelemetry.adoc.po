# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-08-28 16:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Using OpenTelemetry"
msgstr "使用OpenTelemetry"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"This guide explains how your Quarkus application can utilize https://opentelemetry.io/[OpenTelemetry] (OTel) to provide\n"
"distributed tracing for interactive web applications."
msgstr "本指南介绍了 Quarkus 应用程序如何利用 link:https://opentelemetry.io/[OpenTelemetry] (OTel) 为交互式网络应用程序提供分布式跟踪。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "OpenTelemetry Metrics and Logging are not yet supported."
msgstr "目前还不支持OpenTelemetry指标和日志。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"Quarkus now supports the OpenTelemetry Autoconfiguration for Traces. The configurations match what you can see at\n"
"https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md[OpenTelemetry SDK Autoconfigure]\n"
"with the `quarkus.*` prefix."
msgstr "Quarkus 现在支持跟踪的 OpenTelemetry 自动配置。这些配置与你在带有 `quarkus.*` 前缀的 link:https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md[OpenTelemetry SDK Autoconfigure] 中看到的配置一致。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Extensions and the libraries they provide, are directly instrumented in Quarkus. The *use of the https://opentelemetry.io/docs/instrumentation/java/automatic/[OpenTelemetry Agent] is not needed nor recommended* due to context propagation issues between imperative and reactive libraries."
msgstr "扩展和它们所提供的库，在Quarkus中直接使用工具。由于命令式和反应式库之间的上下文传播问题， *不需要也不推荐* 使用 *<a href=\"https://opentelemetry.io/docs/instrumentation/java/automatic/\">OpenTelemetry Agent</a>* 。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Architecture"
msgstr "架构"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "In this guide, we create a straightforward REST application to demonstrate distributed tracing."
msgstr "在本指南中，我们创建了一个简单的REST应用程序来演示分布式跟踪服务。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Solution"
msgstr "解决方案"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can skip right to the completed example."
msgstr "我们建议您按照下面几节的说明，一步一步地创建应用程序。不过，您可以直接跳到已完成的例子。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "The solution is located in the `opentelemetry-quickstart` link:{quickstarts-tree-url}/opentelemetry-quickstart[directory]."
msgstr "该解决方案位于 `opentelemetry-quickstart` {quickstarts-tree-url}/opentelemetry-quickstart[目录]中。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Creating the Maven project"
msgstr "创建Maven项目"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "First, we need a new project. Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"This command generates the Maven project and imports the `quarkus-opentelemetry` extension,\n"
"which includes the default OpenTelemetry support,\n"
"and a gRPC span exporter for https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP]."
msgstr "该命令生成 Maven 项目并导入 `quarkus-opentelemetry` 扩展，其中包括默认的 OpenTelemetry 支持和用于 link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/otlp.md[OTLP] 的 gRPC span 输出程序。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"If you already have your Quarkus project configured, you can add the `quarkus-opentelemetry` extension\n"
"to your project by running the following command in your project base directory:"
msgstr "如果已经配置了 Quarkus 项目，可以在项目基本目录下运行以下命令，将 `quarkus-opentelemetry` 扩展添加到项目中："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#. type: Block title
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: Block title
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "Examine the Jakarta REST resource"
msgstr "检查JAX-RS资源"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Create a `src/main/java/org/acme/opentelemetry/TracedResource.java` file with the following content:"
msgstr "创建一个 `src/main/java/org/acme/opentelemetry/TracedResource.java` 文件，内容如下："

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Notice that there is no tracing specific code included in the application. By default, requests sent to this\n"
"endpoint will be traced without any required code changes."
msgstr "请注意，应用程序中没有包含任何关于追踪的代码。默认情况下，不需要修改任何必要的代码就可以实现对发送到这个节点的请求进行追踪。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Create the configuration"
msgstr "创建配置"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "There are no mandatory configurations for the extension to work."
msgstr "该扩展的工作没有强制性配置。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "If you need to change any of the default property values, here is an example on how to configure the default OTLP gRPC Exporter within the application, using the `src/main/resources/application.properties` file:"
msgstr "如果你需要改变任何默认的属性值，这里有一个例子，说明如何在应用程序内配置默认的OTLP gRPC导出器，使用 `src/main/resources/application.properties` 文件："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "All spans created from the application will include an OpenTelemetry `Resource` indicating the span was created by the `myservice` application. If not set, it will default to the artifact id."
msgstr "所有从应用程序创建的spans将包含一个OpenTelemetry `Resource` ，表明该span是由 `myservice` 应用程序创建。如果没有设置，它将默认为artifact id。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "gRPC endpoint to send spans. If not set, it will default to `http://localhost:4317`."
msgstr "用于发送跨度的gRPC端点。如果没有设置，它将默认为 `<a href=\"http://localhost:4317\" class=\"bare\">http://localhost:4317</a>` ."

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Optional gRPC headers commonly used for authentication"
msgstr "可选的gRPC消息头，通常用于认证"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Add tracing information into log messages."
msgstr "在日志信息中添加追踪信息。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "You can also only put the trace info into the access log. In this case you must omit the info in the console log format."
msgstr "你也可以只把跟踪信息放到访问日志中。在这种情况下，你必须省略控制台日志格式中的信息。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "All configurations have been updated from `quarkus.opentelemetry.\\*` -> `quarkus.otel.*`"
msgstr "所有的配置都从 `quarkus.opentelemetry.*` →更新。 `quarkus.otel.*` "

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "The legacy configurations are now deprecated but will still work during a transition period."
msgstr "遗留的配置现在已被废弃，但在过渡期内仍可使用。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Run the application"
msgstr "运行应用程序"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The first step is to configure and start the https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] to receive, process and export telemetry data to https://www.jaegertracing.io/[Jaeger] that will display the captured traces."
msgstr "第一步是配置和启动 link:https://opentelemetry.io/docs/collector/[OpenTelemetry Collector] ，以接收、处理和输出勘测数据到 link:https://www.jaegertracing.io/[Jaeger] 来显示捕获的traces。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"Jaeger-all-in-one includes the Jaeger agent, an OTel collector, and the query service/UI.\n"
"You do not need to install a separated collector. You can directly send the trace data to Jaeger (after enabling OTLP receivers there, see e.g. this\n"
"https://medium.com/jaegertracing/introducing-native-support-for-opentelemetry-in-jaeger-eb661be8183c[blog entry] for details)."
msgstr "Jaeger-all-in-one包括Jaeger代理、OTel采集器和查询服务/用户界面。你不需要安装单独的收集器。你可以直接将跟踪数据发送到Jaeger（在那里启用OTLP接收器后，详情参见本 link:https://medium.com/jaegertracing/introducing-native-support-for-opentelemetry-in-jaeger-eb661be8183c[博客条目] ）。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Start the OpenTelemetry Collector and Jaeger system via the following `docker-compose.yml` file that you can launch via `docker-compose up -d`:"
msgstr "您可以通过 `docker-compose up -d` 命令和下面的 `docker-compose.yml` 文件来启动OpenTelemetry Collector和Jaeger系统："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "You should remove the optional ports you don't need them."
msgstr "你应该删除你不需要的可选端口。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Now we are ready to run our application. If using `application.properties` to configure the tracer:"
msgstr "现在我们准备运行我们的应用程序。如果使用 `application.properties` 来配置tracer："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "or if configuring the OTLP gRPC endpoint via JVM arguments:"
msgstr "或者如果通过JVM参数配置OTLP gRPC节点："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "With the OpenTelemetry Collector, the Jaeger system and the application running, you can make a request to the provided endpoint:"
msgstr "在OpenTelemetry Collector、Jaeger系统和应用程序运行的情况下，您可以向指定的节点发出请求："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "When the first request has been submitted, you will be able to see the tracing information in the logs:"
msgstr "当第一个请求被提交后，你将能在日志中看到追踪信息。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Then visit the http://localhost:16686[Jaeger UI] to see the tracing information."
msgstr "然后访问 link:http://localhost:16686[Jaeger界面] 来查看追踪信息。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Hit `CTRL+C` or type `q` to stop the application."
msgstr "使用 `CTRL+C` 来停止应用程序。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "JDBC"
msgstr "JDBC"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBC instrumentation] will add a span for each JDBC queries done by your application, to enable it, add the following dependency to your build file:"
msgstr "通过link:https://github.com/open-telemetry/opentelemetry-java-instrumentation/tree/main/instrumentation/jdbc/library[JDBC instrumentation] 可以为您的应用程序的每个JDBC查询添加一个span。要启用它，请在您的构建文件中添加以下依赖："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "As it uses a dedicated JDBC datasource wrapper, you must enable telemetry for your datasource:"
msgstr "由于它使用专用的JDBC驱动，您必须配置您的数据源和Hibernate ORM来使用它。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Additional configuration"
msgstr "其他配置"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Some use cases will require custom configuration of OpenTelemetry.\n"
"These sections will outline what is necessary to properly configure it."
msgstr "有些情况下需要对OpenTelemetry进行自定义配置。以下章节将展示如何对一些必要的属性进行正确配置。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "ID Generator"
msgstr "ID生成器（ID Generator）"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"The OpenTelemetry extension will use by default a random https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID Generator]\n"
"when creating the trace and span identifier."
msgstr "OpenTelemetry扩展将默认使用一个随机的 link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#id-generators[ID发生器] 来创建trace和span标识符。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Some vendor-specific protocols need a custom ID Generator, you can override the default one by creating a producer.\n"
"The OpenTelemetry extension will detect the `IdGenerator` CDI bean and will use it when configuring the tracer producer."
msgstr "一些供应商特定协议需要一个自定义的ID生成器，您可以通过创建一个自定义生成器来覆盖默认的ID。OpenTelemetry扩展将检测 `IdGenerator` CDI Bean，并在配置tracer生成器时使用它。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Propagators"
msgstr "Propagators"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"OpenTelemetry propagates cross-cutting concerns through https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[propagators] that will share an underlying `Context` for storing state and accessing\n"
"data across the lifespan of a distributed transaction."
msgstr "OpenTelemetry 通过 link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[传播器传播] 横向关注点，这些 link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/context/api-propagators.md[传播器] 将共享一个底层 `Context` ，用于在分布式事务的整个生命周期内存储状态和访问数据。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"By default, the OpenTelemetry extension enables the https://www.w3.org/TR/trace-context/[W3C Trace Context] and the https://www.w3.org/TR/baggage/[W3C Baggage]\n"
"propagators, you can however choose any of the supported OpenTelemetry propagators by setting the `propagators` config that is described in the xref:configuration-reference[OpenTelemetry Configuration Reference]."
msgstr "默认情况下，OpenTelemetry 扩展会启用 link:https://www.w3.org/TR/trace-context/[W3C Trace Context] 和 link:https://www.w3.org/TR/baggage/[W3C Baggage] 传播器，但您也可以通过设置 `propagators` config（参见《 xref:configuration-reference[OpenTelemetry 配置参考] 》）来选择任何受支持的 OpenTelemetry 传播器。"

#. type: Title ====
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "Additional Propagators"
msgstr "其他配置"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"The `b3`, `b3multi`, `jaeger` and `ottrace` propagators will need the https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators]\n"
"extension to be added as a dependency to your project."
msgstr "`b3` , `b3multi` , `jaeger` 和 `ottrace` propatagors 需要将 link:https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/trace-propagators[trace-propagators] 扩展作为一个依赖添加到您的项目中。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"The `xray` propagator will need the https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/aws-xray-propagator[aws]\n"
"extension to be added as a dependency to your project."
msgstr "`xray` 传播器需要将 link:https://github.com/open-telemetry/opentelemetry-java-contrib/tree/main/aws-xray-propagator[aws] 扩展作为依赖项添加到项目中。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Resource"
msgstr "资源"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[resource] is a representation\n"
"of the entity that is producing telemetry, it adds attributes to the exported trace to characterize who is producing the trace."
msgstr "Opentelemetry link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/overview.md#resources[资源] 是产生telemetry的实体的表示，它向输出的trace中添加属性，用以描述谁在产生trace。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"You can add attributes by setting the `resource-attributes` tracer config that is described in the xref:configuration-reference[OpenTelemetry Configuration Reference].\n"
"Since this property can be overridden at runtime, the OpenTelemetry extension will pick up its value following the order of precedence that\n"
"is described in the xref:config-reference.adoc#configuration-sources[Quarkus Configuration Reference]."
msgstr "你可以通过设置 `resource-attributes` 跟踪配置来添加属性，该配置在《 xref:configuration-reference[OpenTelemetry 配置参考] 》中有所描述。由于该属性可在运行时被重写，OpenTelemetry 扩展将按照《 xref:config-reference.adoc#configuration-sources[Quarkus 配置参考] 》中描述的优先顺序取值。"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"If by any means you need to use a custom resource or one that is provided by one of the https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK Extensions]\n"
"you can create multiple resource producers. The OpenTelemetry extension will detect the `Resource` CDI beans and will merge them when configuring the tracer producer."
msgstr "如果通过您需要的任何方式来使用自定义的资源或由 link:https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions[OpenTelemetry SDK扩展] 之一提供的资源，您可以创建多个资源生产者。OpenTelemetry扩展将检测 `Resource` CDI beans，并在配置tracer生成器时将其合并。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Sampler"
msgstr "采样器(Sampler)"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"A https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[sampler] decides whether\n"
"a trace should be sampled and exported, controlling noise and overhead by reducing the number of sample of traces collected and sent\n"
"to the collector."
msgstr "Opentelemetry link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#sampling[采样器] 决定了是否应该对一个trace进行采样和输出，通过减少收集和发送至exporter的trace样本数量来控制噪音和开销。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"You can set a https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[built-in sampler]\n"
"simply by setting the desired sampler config described in the xref:configuration-reference[OpenTelemetry Configuration Reference]."
msgstr "只需设置 xref:configuration-reference[OpenTelemetry 配置参考] 中描述的所需采样器配置，即可设置 link:https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/sdk.md#built-in-samplers[内置] 采样器。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Quarkus 3.0 introduced breaking changes on the configuration."
msgstr "Quarkus 3.0在配置上引入了突破性的变化。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Sampler related property names and values change to comply with the latest Java OpenTelemetry SDK. During a transition period it will be possible to set the new configuration values in the old property because we are mapping  `quarkus.opentelemetry.tracer.sampler` -> `quarkus.otel.traces.sampler`."
msgstr "采样器相关属性的名称和值会发生变化，以符合最新的 Java OpenTelemetry SDK。在过渡期间，可以在旧属性中设置新的配置值，因为我们正在映射 `quarkus.opentelemetry.tracer.sampler` → `quarkus.otel.traces.sampler` 。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "If the sampler is parent based, there is no need to set, the now dropped property, `quarkus.opentelemetry.tracer.sampler.parent-based`."
msgstr "如果采样器是基于父级的，就不需要设置现在被放弃的属性， `quarkus.opentelemetry.tracer.sampler.parent-based` 。"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "The values you need to set on `quarkus.opentelemetry.tracer.sampler` are now:"
msgstr "你需要在 `quarkus.opentelemetry.tracer.sampler` ，现在需要设置的值是："

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "Old Sampler config value"
msgstr "旧的采样器配置值"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "New Sampler config value"
msgstr "新采样器配置值"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "New Sampler config value (Parent based)"
msgstr "新的采样器配置值（基于父代）。"

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`on`"
msgstr " `on` "

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`always_on`"
msgstr " `always_on` "

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`parentbased_always_on`"
msgstr " `parentbased_always_on` "

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`off`"
msgstr " `off` "

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`always_off`"
msgstr " `always_off` "

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`parentbased_always_off`"
msgstr " `parentbased_always_off` "

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`ratio`"
msgstr " `ratio` "

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`traceidratio`"
msgstr " `traceidratio` "

#. type: Table
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "`parentbased_traceidratio`"
msgstr " `parentbased_traceidratio` "

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "If you need to use a custom sampler there are now 2 different ways:"
msgstr "如果你需要使用自定义采样器，现在有两种不同的方法："

#. type: Title ====
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "Sampler CDI Producer"
msgstr "采样器CDI生产者"

#. type: delimited block =
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "You can create a sampler CDI producer. The Quarkus OpenTelemetry extension will detect the `Sampler` CDI bean and will use it when configuring the Tracer."
msgstr "一些供应商特定协议需要一个自定义的ID生成器，您可以通过创建一个自定义生成器来覆盖默认的ID。OpenTelemetry扩展将检测 `IdGenerator` CDI Bean，并在配置tracer生成器时使用它。"

#. type: Title ====
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "OTel Sampler SPI"
msgstr "采样器(Sampler)"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"This will use the SPI hooks available with the OTel Autoconfiguration.\n"
"You can create a simple Sampler class:"
msgstr "这将使用 OTel Autoconfiguration 提供的 SPI 钩子。您可以创建一个简单的采样器类："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Then a Sampler Provider:"
msgstr "然后是一个采样器供应商："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Write the SPI loader text file at `resources/META-INF/services` with name `io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSamplerProvider` containing the full qualified name of the `CustomSPISamplerProvider` class."
msgstr "在 `resources/META-INF/services` ，写入SPI加载器文本文件，文件名为 `io.opentelemetry.sdk.autoconfigure.spi.traces.ConfigurableSamplerProvider` ，包含 `CustomSPISamplerProvider` 类的全称。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Then activate on the configuration:"
msgstr "创建配置"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "As you can see, CDI is much simpler to work with."
msgstr "正如你所看到的，CDI在工作上要简单得多。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "Additional instrumentation"
msgstr "其他的植入(instrumentation)"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"Some Quarkus extensions will require additional code to ensure traces are propagated to subsequent execution.\n"
"These sections will outline what is necessary to propagate traces across process boundaries."
msgstr "一些Quarkus扩展需要额外的代码来确保traces被传播到后续执行中。以下章节将展示跨越进程边界传播traces的必要条件。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "The instrumentation documented in this section has been tested with Quarkus and works in both standard and native mode."
msgstr "本节中用到的植入方式已经过Quarkus测试，并且在标准和本地模式下都能工作。"

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "CDI"
msgstr "CDI"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"Annotating a method in any CDI aware bean with the `io.opentelemetry.instrumentation.annotations.WithSpan`\n"
"annotation will create a new Span and establish any required relationships with the current Trace context."
msgstr "使用 `io.opentelemetry.instrumentation.annotations.WithSpan` 注解注解任何 CDI 感知 bean 中的方法，将创建一个新的 Span，并与当前跟踪上下文建立任何必要的关系。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"Method parameters can be annotated with the `io.opentelemetry.instrumentation.annotations.SpanAttribute` annotation to\n"
"indicate which method parameters should be part of the Trace."
msgstr "方法参数可使用 `io.opentelemetry.instrumentation.annotations.SpanAttribute` 注释，以指明哪些方法参数应成为跟踪的一部分。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
msgid "Example:"
msgstr "例如："

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "Available OpenTelemetry CDI injections"
msgstr "可用的OpenTelemetry CDI注射剂"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"As per MicroProfile Telemetry Tracing specification, Quarkus supports the CDI injections of the\n"
"following classes:"
msgstr "根据 MicroProfile 遥测跟踪规范，Quarkus 支持以下类别的 CDI 注入："

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "`io.opentelemetry.api.OpenTelemetry`"
msgstr " `io.opentelemetry.api.OpenTelemetry` "

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "`io.opentelemetry.api.trace.Tracer`"
msgstr " `io.opentelemetry.api.trace.Tracer` "

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "`io.opentelemetry.api.trace.Span`"
msgstr " `io.opentelemetry.api.trace.Span` "

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "`io.opentelemetry.api.baggage.Baggage`"
msgstr " `io.opentelemetry.api.baggage.Baggage` "

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "You can inject these classes in any CDI enabled bean. For instance, the `Tracer` is particularly useful to start custom spans:"
msgstr "你可以在任何支持CDI的bean中注入这些类。例如， `Tracer` ，对启动自定义跨度特别有用："

#. type: Title ===
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "SmallRye Reactive Messaging - Kafka"
msgstr "SmallRye Reactive Messaging - Kafka"

#: _versions/3.2/guides/opentelemetry.adoc
msgid ""
"When using the SmallRye Reactive Messaging extension for Kafka,\n"
"we are able to propagate the span into the Kafka Record with:"
msgstr "当使用 SmallRye Reactive Messaging  的 Kafka 扩展时，我们可以向Kafka记录中传播span，通过："

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"The above creates a `TracingMetadata` object we can add to the `Message` being produced,\n"
"which retrieves the OpenTelemetry `Context` to extract the current span for propagation."
msgstr "上述操作会创建一个 `TracingMetadata` 对象，我们可以将其添加到正在生成的 `Message` 中，该对象会检索 OpenTelemetry `Context` ，以提取当前跨度进行传播。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy, no-wrap
msgid "Exporters"
msgstr "出口商"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Quarkus OpenTelemetry defaults to the standard OTLP exporter defined in OpenTelemetry."
msgstr "Quarkus OpenTelemetry 默认使用 OpenTelemetry 中定义的标准 OTLP 输出程序。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Additional exporters will be available in the Quarkiverse https://github.com/quarkiverse/quarkus-opentelemetry-exporter/blob/main/README.md[quarkus-opentelemetry-exporter] project."
msgstr "额外的出口商将在Quarkiverse link:https://github.com/quarkiverse/quarkus-opentelemetry-exporter/blob/main/README.md[quarkus-opentelemetry-exporter] 项目中提供。"

#. type: Title ==
#: _versions/3.2/guides/opentelemetry.adoc
#, no-wrap
msgid "OpenTelemetry Configuration Reference"
msgstr "OpenTelemetry参考配置"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid ""
"Quarkus supports the OpenTelemetry Autoconfiguration for Traces.\n"
"The configurations match what you can see at\n"
"https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md[OpenTelemetry SDK Autoconfigure]\n"
"adding the usual `quarkus.*` prefix."
msgstr "Quarkus 支持用于跟踪的 OpenTelemetry 自动配置。配置与你在 link:https://github.com/open-telemetry/opentelemetry-java/blob/main/sdk-extensions/autoconfigure/README.md[OpenTelemetry SDK Autoconfigure] 中看到的一致，添加了常用的 `quarkus.*` 前缀。"

#. type: Plain text
#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "Quarkus OpenTelemetry configuration properties now have the `quarkus.otel.*` prefix."
msgstr "Quarkus OpenTelemetry配置属性现在有 `quarkus.otel.*` 前缀。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "*The legacy properties* with prefix `quarkus.opentelemetry.*` are currently being mapped to the new ones as a default, during a transition period. See Default column in the details below."
msgstr "在过渡期内，前缀为 `quarkus.opentelemetry.*` 的 *传统属性* 目前正被映射为新的默认 *属性* 。请参阅下面详细信息中的默认列。"

#: _versions/3.2/guides/opentelemetry.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
