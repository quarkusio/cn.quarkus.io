msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Using Hibernate ORM and Jakarta Persistence"
msgstr "使用 Hibernate ORM 和 Jakarta Persistence"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Hibernate ORM is the de facto standard Jakarta Persistence (formerly known as JPA) implementation and offers you the full breadth of an Object Relational Mapper.\n"
"It works beautifully in Quarkus."
msgstr "Hibernate ORM 是事实上的标准 Jakarta Persistence（以前称为 JPA）实现，为您提供对象关系映射器的全部功能。它在 Quarkus 中运行良好。"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "Solution"
msgstr "解决方案"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The solution is located in the `hibernate-orm-quickstart` link:{quickstarts-tree-url}/hibernate-orm-quickstart[directory]."
msgstr "解决方案位于 `hibernate-orm-quickstart` link:{quickstarts-tree-url}/hibernate-orm-quickstart[目录] 中。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Setting up and configuring Hibernate ORM"
msgstr "设置和配置 Hibernate ORM"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "When using Hibernate ORM in Quarkus, you don't need to have a `persistence.xml` resource to configure it."
msgstr "在 Quarkus 中使用 Hibernate ORM 时，无需 `persistence.xml` 资源即可进行配置。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Using such a classic configuration file is an option, but unnecessary unless you have specific advanced needs;\n"
"so we'll see first how Hibernate ORM can be configured without a `persistence.xml` resource."
msgstr "使用这种经典的配置文件是一种选择，但除非你有特殊的高级需求，否则没有必要；因此，我们将首先看看如何在没有 `persistence.xml` 资源的情况下配置 Hibernate ORM。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "In Quarkus, you only need to:"
msgstr "在 Quarkus 中，您只需"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "add your configuration settings in `{config-file}`"
msgstr "中添加您的配置设置 `{config-file}`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "annotate your entities with `@Entity` and any other mapping annotation as usual"
msgstr "使用 `@Entity` 和其他映射注释对实体进行注释"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Other configuration needs have been automated: Quarkus will make some opinionated choices and educated guesses."
msgstr "其他配置需求已实现自动化：Quarkus 会做出一些有主见的选择和有根据的猜测。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Add the following dependencies to your project:"
msgstr "在项目中添加以下依赖项"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "the Hibernate ORM extension: `io.quarkus:quarkus-hibernate-orm`"
msgstr "Hibernate ORM 扩展： `io.quarkus:quarkus-hibernate-orm`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "your JDBC driver extension; the following options are available:"
msgstr "您的 JDBC 驱动程序扩展；有以下选项可供选择："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-db2` for link:https://www.ibm.com/products/db2-database[IBM DB2]"
msgstr "`quarkus-jdbc-db2` 用于 link:https://www.ibm.com/products/db2-database[IBM DB2]"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-derby` for link:https://db.apache.org/derby/[Apache Derby]"
msgstr "`quarkus-jdbc-derby` link:https://db.apache.org/derby/[阿帕奇德比]"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-h2` for link:https://www.h2database.com/html/main.html[H2]"
msgstr "`quarkus-jdbc-h2` 为 link:https://www.h2database.com/html/main.html[H2]"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-mariadb` for link:https://mariadb.com/[MariaDB]"
msgstr "`quarkus-jdbc-mariadb` 用于 link:https://mariadb.com/[MariaDB]"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-mssql` for link:https://www.microsoft.com/en-gb/sql-server/[Microsoft SQL Server]"
msgstr "`quarkus-jdbc-mssql` 用于 link:https://www.microsoft.com/en-gb/sql-server/[Microsoft SQL Server]"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-mysql` for link:https://www.mysql.com/[MySQL]"
msgstr "`quarkus-jdbc-mysql` 用于 link:https://www.mysql.com/[MySQL]"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-oracle` for link:https://www.oracle.com/database/[Oracle Database]"
msgstr "`quarkus-jdbc-oracle` 用于 link:https://www.oracle.com/database/[Oracle 数据库]"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus-jdbc-postgresql` for link:https://www.postgresql.org/[PostgreSQL]"
msgstr "`quarkus-jdbc-postgresql` 用于 link:https://www.postgresql.org/[PostgreSQL]"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "For instance:"
msgstr "比如："

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Annotate your persistent objects with `@Entity`,\n"
"then add the relevant configuration properties in `{config-file}`."
msgstr "使用 `@Entity` 对持久对象进行注释，然后在 `{config-file}` 中添加相关配置属性。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Example `{config-file}`"
msgstr "示例 `{config-file}`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Note that these configuration properties are not the same ones as in your typical Hibernate ORM configuration file.\n"
"They will often map to Hibernate ORM configuration properties but could have different names and don't necessarily map 1:1 to each other."
msgstr "请注意，这些配置属性与典型的 Hibernate ORM 配置文件中的属性不同。它们通常会映射到 Hibernate ORM 配置属性，但名称可能不同，也不一定能 1:1 地相互映射。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Also, Quarkus will set many Hibernate ORM configuration settings automatically, and will often use more modern defaults."
msgstr "此外，Quarkus 还会自动设置许多 Hibernate ORM 配置设置，而且通常会使用更现代的默认设置。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "For a list of the items that you can set in `{config-file}`, see xref:hibernate-configuration-properties[Hibernate ORM configuration properties]."
msgstr "有关可在 `{config-file}` 中设置的项目列表，请参阅 xref:hibernate-configuration-properties[Hibernate ORM 配置属性] 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "An `EntityManagerFactory` will be created based on the Quarkus `datasource` configuration as long as the Hibernate ORM extension is listed among your project dependencies."
msgstr "只要 Hibernate ORM 扩展列在项目依赖项中，就会根据 Quarkus `datasource` 配置创建 `EntityManagerFactory` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"The dialect will be selected and configured automatically based on your datasource;\n"
"you may want to xref:hibernate-dialect[configure it to more precisely match your database]."
msgstr "方言将根据数据源自动选择和配置；您可能需要对 xref:hibernate-dialect[其进行配置，以便更精确地匹配您的数据库] 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "You can then happily inject your `EntityManager`:"
msgstr "然后，您就可以愉快地注入 `EntityManager` ："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Example application bean using Hibernate"
msgstr "使用 Hibernate 的应用 bean 示例"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Inject your entity manager and have fun"
msgstr "注入实体管理器，享受乐趣"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Mark your CDI bean method as `@Transactional` and the `EntityManager` will enlist and flush at commit."
msgstr "将您的 CDI Bean 方法标记为 `@Transactional` ，这样 `EntityManager` 就会在提交时加入并刷新。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Example Entity"
msgstr "实体示例"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"To load SQL statements when Hibernate ORM starts, add an `import.sql` file to the root of your `resources` directory.\n"
"This script can contain any SQL DML statements.\n"
"Make sure to terminate each statement with a semicolon."
msgstr "要在 Hibernate ORM 启动时加载 SQL 语句，请在 `resources` 目录根目录下添加一个 `import.sql` 文件。该脚本可以包含任何 SQL DML 语句。确保以分号结束每条语句。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "This is useful to have a data set ready for your tests or demos."
msgstr "这有助于为测试或演示准备好数据集。"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid ""
"Make sure to wrap methods modifying your database (e.g. `entity.persist()`) within a transaction. Marking a\n"
"CDI bean method `@Transactional` will do that for you and make that method a transaction boundary. We recommend doing\n"
"so at your application entry point boundaries like your REST endpoint controllers."
msgstr "请确保修改数据库的方法（例如： `entity.persist()` ）处于同一个事务中。给一个CDI bean方法增加 `@Transactional` 注解，可以确保该方法即事务边界。我们建议在应用端点的边界这样做，比如REST端点的Controller。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Dialect"
msgstr "方言"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Supported databases"
msgstr "支持的数据库"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"For xref:datasource.adoc#extensions-and-database-drivers-reference[supported databases],\n"
"the link:{hibernate-orm-docs-url}#database-dialect[Hibernate ORM dialect]\n"
"does not need to be set explicitly:\n"
"it is selected automatically based on the datasource."
msgstr "对于 xref:datasource.adoc#extensions-and-database-drivers-reference[支持的数据库] ，无需显式设置 link:{hibernate-orm-docs-url}#database-dialect[Hibernate ORM 方言] ：它会根据数据源自动选择。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "By default, the dialect is configured to target the minimum supported version of the database."
msgstr "默认情况下，方言被配置为数据库的最小支持版本。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"In order for Hibernate ORM to generate more efficient SQL,\n"
"to avoid workarounds and to take advantage of more database features,\n"
"you can set the database version explicitly:"
msgstr "为了让 Hibernate ORM 生成更高效的 SQL，避免使用变通方法，并利用更多数据库功能，可以明确设置数据库版本："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`{config-file}` with an explicit `db-version`"
msgstr "`{config-file}` 用一个明确的 `db-version`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Set the database version. The Hibernate ORM dialect will target that version."
msgstr "设置数据库版本。Hibernate ORM 方言将以该版本为目标。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"As a rule, the version set here should be as high as possible,\n"
"but must be lower than or equal to the version of any database your application will connect to."
msgstr "通常，此处设置的版本应尽可能高，但必须低于或等于应用程序将连接的任何数据库的版本。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"When a version is set explicitly,\n"
"Quarkus will try to check this version against the actual database version on startup,\n"
"leading to a startup failure when the actual version is lower."
msgstr "如果明确设置了版本，Quarkus 将尝试在启动时根据实际数据库版本检查该版本，从而在实际版本较低时导致启动失败。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"This is because Hibernate ORM may generate SQL that is invalid\n"
"for versions of the database older than what is configured,\n"
"which would lead to runtime exceptions."
msgstr "这是因为 Hibernate ORM 生成的 SQL 可能对旧版本数据库无效，从而导致运行时异常。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "If the database cannot be reached, a warning will be logged but startup will proceed."
msgstr "如果无法进入数据库，系统将发出警告，但启动仍将继续。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Other databases"
msgstr "其他数据库"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"If xref:datasource.adoc#other-databases[your database does not have a corresponding Quarkus extension],\n"
"or if the defaults do not match your needs for some reason,\n"
"you will need to set the link:{hibernate-orm-docs-url}#database-dialect[Hibernate ORM dialect] explicitly:"
msgstr "如果 xref:datasource.adoc#other-databases[你的数据库没有相应的 Quarkus 扩展] ，或者默认值因某种原因与你的需求不符，你就需要明确设置 link:{hibernate-orm-docs-url}#database-dialect[Hibernate ORM 方言] ："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`{config-file}` with an explicit `dialect`"
msgstr "`{config-file}` 用一个明确的 `dialect`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Set the Hibernate ORM dialect."
msgstr "设置 Hibernate ORM 方言。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"In that case, keep in mind that the JDBC driver or Hibernate ORM dialect\n"
"may not work properly in GraalVM native executables."
msgstr "在这种情况下，请注意 JDBC 驱动程序或 Hibernate ORM 方言可能无法在 GraalVM 本地可执行文件中正常工作。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"As with xref:hibernate-dialect-supported-databases[supported databases],\n"
"you can configure the DB version explicitly to get the most out of Hibernate ORM:"
msgstr "与 xref:hibernate-dialect-supported-databases[支持的数据库] 一样，您可以明确配置数据库版本，以充分利用 Hibernate ORM："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`{config-file}` with an explicit `dialect` and `db-version`"
msgstr "`{config-file}` `dialect` 和 `db-version`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Set the database version. The Hibernate ORM dialect will target that version.\n"
"Since we're targeting CockroachDB here, we're passing the CockroachDB version, not the PostgreSQL version."
msgstr "设置数据库版本。Hibernate ORM 方言将以该版本为目标。由于我们在这里使用的是 CockroachDB，所以我们传递的是 CockroachDB 版本，而不是 PostgreSQL 版本。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Hibernate ORM configuration properties"
msgstr "Hibernate ORM 配置属性"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "There are various optional properties useful to refine your `EntityManagerFactory` or guide guesses of Quarkus."
msgstr "有多种可选属性可用于完善您的 `EntityManagerFactory` 或指导对夸克斯的猜测。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "There are no required properties, as long as a default datasource is configured."
msgstr "只要配置了默认数据源，就没有必要的属性。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"When no property is set, Quarkus can typically infer everything it needs to set up Hibernate ORM\n"
"and will have it use the default datasource."
msgstr "如果没有设置任何属性，Quarkus 通常可以推断出设置 Hibernate ORM 所需的一切，并让它使用默认数据源。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The configuration properties listed here allow you to override such defaults, and customize and tune various aspects."
msgstr "这里列出的配置属性允许您覆盖这些默认设置，并自定义和调整各个方面。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "<span class=\"icon\"><i class=\"fa fa-lock\" title=\"Fixed at build time\"></i></span> Configuration property fixed at build time - All other configuration properties are overridable at runtime <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"
msgstr "<span class=\"icicon\"><i class=\"fa fa-lock\" title=\"在构建时固定\"></i></span>在构建时固定的配置属性 - 所有其他配置属性都可在运行时重写 <input type=\"search\" id=\"config-search-0\" placeholder=\"FILTER CONFIGURATION\" disabled>"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Do not mix xref:persistence-xml[`persistence.xml`] and `quarkus.hibernate-orm.*` properties in `{config-file}`.\n"
"Quarkus will raise an exception.\n"
"Make up your mind on which approach you want to use."
msgstr "请勿将 xref:persistence-xml[persistence.xml] 和 `quarkus.hibernate-orm.*` 属性混用 `{config-file}` 。Quarkus 将引发异常。请决定使用哪种方法。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"If your classpath contains a `persistence.xml` that you want to ignore,\n"
"set the following configuration property:"
msgstr "如果您的类路径中包含要忽略的 `persistence.xml` ，请设置以下配置属性："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Want to start a PostgreSQL server on the side with Docker?"
msgstr "想用 Docker 在一侧启动 PostgreSQL 服务器？"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "This will start a non-durable empty database: ideal for a quick experiment!"
msgstr "这将启动一个不可用的空数据库：非常适合快速实验！"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Multiple persistence units"
msgstr "多个持久性单元"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Setting up multiple persistence units"
msgstr "设置多个持久性单元"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "It is possible to define multiple persistence units using the Quarkus configuration properties."
msgstr "可以使用 Quarkus 配置属性定义多个持久化单元。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"The properties at the root of the `quarkus.hibernate-orm.` namespace define the default persistence unit.\n"
"For instance, the following snippet defines a default datasource and a default persistence unit:"
msgstr "`quarkus.hibernate-orm.` 命名空间根部的属性定义了默认持久化单元。例如，以下代码段定义了默认数据源和默认持久化单元："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Using a map based approach, it is possible to define named persistence units:"
msgstr "使用基于地图的方法，可以定义命名的持久性单元："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Define a datasource named `users`."
msgstr "定义名为 `users` 的数据源。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Define a datasource named `inventory`."
msgstr "定义名为 `inventory` 的数据源。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Define a persistence unit called `users`."
msgstr "定义一个名为 `users` 的持久化单元。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Define the datasource used by the persistence unit."
msgstr "定义持久化单元使用的数据源。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "This configuration property is important, but we will discuss it a bit later."
msgstr "这个配置属性很重要，我们稍后再讨论。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Define a persistence unit called `inventory` pointing to the `inventory` datasource."
msgstr "定义一个名为 `inventory` 的持久化单元，指向 `inventory` 数据源。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "You can mix the default datasource and named datasources or only have one or the other."
msgstr "您可以混合使用默认数据源和命名数据源，也可以只使用其中一种。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"The default persistence unit points to the default datasource by default.\n"
"For named persistence units, the `datasource` property is mandatory.\n"
"You can point your persistence unit to the default datasource by setting it to `<default>`\n"
"(which is the internal name of the default datasource)."
msgstr "默认持久化单元默认指向默认数据源。对于已命名的持久化单元， `datasource` 属性是强制性的。您可以将持久化单元设置为 `<default>` （这是默认数据源的内部名称），从而将持久化单元指向默认数据源。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "It is perfectly valid to have several persistence units pointing to the same datasource."
msgstr "让多个持久化单元指向同一个数据源是完全正确的。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Attaching model classes to persistence units"
msgstr "将模型类附加到持久性单元"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "There are two ways to attach model classes to persistence units, and they should not be mixed:"
msgstr "有两种方法可以将模型类附加到持久化单元上，这两种方法不能混用："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Via the `packages` configuration property;"
msgstr "通过 `packages` 配置属性；"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Via the `@io.quarkus.hibernate.orm.PersistenceUnit` package-level annotation."
msgstr "通过 `@io.quarkus.hibernate.orm.PersistenceUnit` 软件包级注释。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "If both are mixed, the annotations are ignored and only the `packages` configuration properties are taken into account."
msgstr "如果两者混合使用，则会忽略注释，只考虑 `packages` 配置属性。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Using the `packages` configuration property is simple:"
msgstr "使用 `packages` 配置属性非常简单："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "This configuration snippet will create two persistence units:"
msgstr "此配置片段将创建两个持久化单元："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The default one which will contain all the model classes under the `org.acme.model.defaultpu` package, subpackages included."
msgstr "默认情况下，它将包含 `org.acme.model.defaultpu` 软件包下的所有模型类，包括子软件包。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "A named `users` persistence unit which will contain all the model classes under the `org.acme.model.user` package, subpackages included."
msgstr "一个命名为 `users` 的持久化单元，它将包含 `org.acme.model.user` 包（包括子包）下的所有模型类。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "You can attach several packages to a persistence unit:"
msgstr "您可以将多个软件包附加到一个持久性单元："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "All the model classes under the `org.acme.model.shared` and `org.acme.model.user` packages will be attached to the `users` persistence unit."
msgstr "`org.acme.model.shared` 和 `org.acme.model.user` 包下的所有模型类都将附加到 `users` 持久化单元。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "It is also supported to attach a given model class to several persistence units."
msgstr "此外，还支持将给定的模型类附加到多个持久化单元。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Model classes need to be consistently added to a given persistence unit.\n"
"That meant that all dependent model classes of a given entity (mapped super classes, embeddables...) are required to be attached to the persistence unit.\n"
"As we are dealing with the persistence unit at the package level, it should be simple enough."
msgstr "模型类需要一致地添加到给定的持久化单元中。这意味着给定实体的所有从属模型类（映射超类、可嵌入类......）都必须附加到持久化单元。由于我们处理的是包级别的持久化单元，所以应该很简单。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Panache entities can be attached to only one persistence unit."
msgstr "Panache 实体只能连接到一个持久性单元。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"For entities attached to several persistence units, you cannot use Panache.\n"
"You can mix the two approaches though and mix Panache entities and traditional entities where multiple persistence units are required."
msgstr "对于连接到多个持久化单元的实体，不能使用 Panache。不过，您可以混合使用这两种方法，在需要多个持久化单元时混合使用 Panache 实体和传统实体。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"If you have a use case for that and clever ideas about how to implement it without cluttering the simplified Panache approach,\n"
"contact us on the link:{quarkus-mailing-list-index}[quarkus-dev mailing list]."
msgstr "如果你有这方面的用例，以及如何在不影响 Panache 简化方法的前提下实现它的聪明想法，请通过 link:{quarkus-mailing-list-index}[quarkus-dev 邮件列表] 联系我们。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"The second approach to attach model classes to a persistence unit is to use package-level `@io.quarkus.hibernate.orm.PersistenceUnit` annotations.\n"
"Again, the two approaches cannot be mixed."
msgstr "将模型类附加到持久化单元的第二种方法是使用包级 `@io.quarkus.hibernate.orm.PersistenceUnit` 注释。同样，这两种方法不能混用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "To obtain a configuration similar to the one above with the `packages` configuration property, create a `package-info.java` file with the following content:"
msgstr "要通过 `packages` 配置属性获得与上述类似的配置，请创建一个 `package-info.java` 文件，内容如下："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Be careful, use the `@io.quarkus.hibernate.orm.PersistenceUnit` annotation, not the Jakarta Persistence one."
msgstr "请注意，请使用 `@io.quarkus.hibernate.orm.PersistenceUnit` 注释，而不是 Jakarta Persistence 注释。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"We only support defining the `@PersistenceUnit` for model classes at the package level,\n"
"using the `@PersistenceUnit` annotation at the class level is not supported in this case."
msgstr "我们只支持在包级别为模型类定义 `@PersistenceUnit` ，在这种情况下不支持在类级别使用 `@PersistenceUnit` 注解。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Note that, similarly to what we do with the configuration property, we take into account the annotated package but also all its subpackages."
msgstr "请注意，与使用配置属性时的做法类似，我们不仅要考虑注释的软件包，还要考虑它的所有子软件包。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "CDI integration"
msgstr "CDI 集成"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "If you are familiar with using Hibernate ORM in Quarkus, you probably already have injected the `EntityManager` using CDI:"
msgstr "如果你熟悉在 Quarkus 中使用 Hibernate ORM，那么你可能已经使用 CDI 注入了 `EntityManager` ："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "This will inject the `EntityManager` of the default persistence unit."
msgstr "这将注入默认持久性单元的 `EntityManager` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Injecting the `EntityManager` of a named persistence unit (`users` in our example) is as simple as:"
msgstr "注入一个已命名持久性单元（在我们的示例中为 `users` ）的 `EntityManager` 就这么简单："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Here again, we use the same `@io.quarkus.hibernate.orm.PersistenceUnit` annotation."
msgstr "在这里，我们同样使用 `@io.quarkus.hibernate.orm.PersistenceUnit` 注释。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "You can inject the `EntityManagerFactory` of a named persistence unit using the exact same mechanism:"
msgstr "您可以使用完全相同的机制注入已命名持久性单元的 `EntityManagerFactory` ："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Setting up and configuring Hibernate ORM with a `persistence.xml`"
msgstr "设置和配置 Hibernate ORM，使用 `persistence.xml`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Alternatively, you can use a `META-INF/persistence.xml` to set up Hibernate ORM.\n"
"This is useful for:"
msgstr "或者，也可以使用 `META-INF/persistence.xml` 来设置 Hibernate ORM。这对以下方面非常有用"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "migrating existing code"
msgstr "迁移现有代码"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "when you have relatively complex settings requiring the full flexibility of the configuration"
msgstr "当你有相对复杂的设置，需要配置的充分灵活性时"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "or if you like it the good old way"
msgstr "如果你喜欢老办法"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"If you use a `persistence.xml`, then you cannot use the `quarkus.hibernate-orm.*` properties\n"
"and only persistence units defined in `persistence.xml` will be taken into account."
msgstr "如果使用 `persistence.xml` ，则不能使用 `quarkus.hibernate-orm.*` 属性，只能使用 `persistence.xml` 中定义的持久化单元。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Your `pom.xml` dependencies as well as your Java code would be identical to the precedent example. The only\n"
"difference is that you would specify your Hibernate ORM configuration in `META-INF/persistence.xml`:"
msgstr "您的 `pom.xml` 依赖项和 Java 代码与前面的示例完全相同。唯一不同的是，你将在 `META-INF/persistence.xml` 中指定你的 Hibernate ORM 配置："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Example persistence.xml resource"
msgstr "persistence.xml 资源示例"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"When using the `persistence.xml` configuration you are configuring Hibernate ORM directly,\n"
"so in this case the appropriate reference is the link:{hibernate-orm-docs-url}#configurations[documentation on hibernate.org]."
msgstr "当使用 `persistence.xml` 配置时，你将直接配置 Hibernate ORM，因此在这种情况下，适当的参考资料是 link:{hibernate-orm-docs-url}#configurations[hibernate.org 上的文档] 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Please remember these are not the same property names as the ones used in the Quarkus `{config-file}`, nor will\n"
"the same defaults be applied."
msgstr "请记住，这些属性名称与 Quarkus `{config-file}` 中使用的属性名称不同，也不会应用相同的默认值。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "XML mapping"
msgstr "XML 映射"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Hibernate ORM in Quarkus supports XML mapping.\n"
"You can add mapping files following\n"
"the https://jakarta.ee/specifications/persistence/3.0/jakarta-persistence-spec-3.0.html#a16944[`orm.xml` format (Jakarta Persistence)]\n"
"or the http://hibernate.org/dtd/hibernate-mapping-3.0.dtd[`hbm.xml` format (specific to Hibernate ORM, deprecated)]:"
msgstr "Quarkus 中的 Hibernate ORM 支持 XML 映射。你可以按照 link:https://jakarta.ee/specifications/persistence/3.0/jakarta-persistence-spec-3.0.html#a16944[orm.xml 格式（Jakarta Persistence）] 或 link:http://hibernate.org/dtd/hibernate-mapping-3.0.dtd[hbm.xml 格式（Hibernate ORM 专用，已废弃）] 添加映射文件："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "in `application.properties` through the (build-time) link:#quarkus-hibernate-orm_quarkus.hibernate-orm.mapping-files[`quarkus.hibernate-orm.mapping-files`] property."
msgstr "在 `application.properties` 中通过（构建时间） link:#quarkus-hibernate-orm_quarkus.hibernate-orm.mapping-files[quarkus.hibernate-orm.mapping-files] 属性。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "in xref:persistence-xml[`persistence.xml`] through the `<mapping-file>` element."
msgstr "通过 xref:persistence-xml[persistence.xml] 通过 `<mapping-file>` 元素。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "XML mapping files are parsed at build time."
msgstr "XML 映射文件在构建时进行解析。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The file `META-INF/orm.xml` will always be included by default, if it exists in the classpath."
msgstr "如果文件 `META-INF/orm.xml` 存在于 classpath 中，则默认情况下总是包含该文件。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "If that is not what you want, use `quarkus.hibernate-orm.mapping-files = no-file` or `<mapping-file>no-file</mapping-file>`."
msgstr "如果这不是您想要的，请使用 `quarkus.hibernate-orm.mapping-files = no-file` 或 `<mapping-file>no-file</mapping-file>` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "Defining entities in external projects or jars"
msgstr "在外部项目或jar包中定义实体"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Hibernate ORM in Quarkus relies on compile-time bytecode enhancements to your entities. If you define your entities in the\n"
"same project where you build your Quarkus application, everything will work fine."
msgstr "Quarkus 中的 Hibernate ORM 依赖于编译时字节码对实体的增强。如果在构建 Quarkus 应用程序的同一项目中定义实体，一切都会很顺利。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"If the entities come from external projects\n"
"or jars, you can make sure that your jar is treated like a Quarkus application library by adding an empty `META-INF/beans.xml` file."
msgstr "如果实体来自外部项目或 jar，可以通过添加一个空的 `META-INF/beans.xml` 文件，确保你的 jar 被当作 Quarkus 应用程序库。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "This will allow Quarkus to index and enhance your entities as if they were inside the current project."
msgstr "这样，Quarkus 就能像在当前项目中一样对实体进行索引和增强。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Hibernate ORM in development mode"
msgstr "开发模式下的 Hibernate ORM"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Quarkus development mode is really useful for applications that mix front end or services and database access."
msgstr "Quarkus 开发模式对于混合前端或服务和数据库访问的应用程序非常有用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "There are a few common approaches to make the best of it."
msgstr "有几种常见的方法可以使其达到最佳效果。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The first choice is to use `quarkus.hibernate-orm.database.generation=drop-and-create` in conjunction with `import.sql`."
msgstr "第一种选择是将 `quarkus.hibernate-orm.database.generation=drop-and-create` 与 `import.sql` 结合使用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"That way for every change to your app and in particular to your entities, the database schema will be properly recreated\n"
"and your data fixture (stored in `import.sql`) will be used to repopulate it from scratch.\n"
"This is best to perfectly control your environment and works magic with Quarkus live reload mode:\n"
"your entity changes or any change to your `import.sql` is immediately picked up and the schema updated without restarting the application!"
msgstr "这样，应用程序，特别是实体的每一次更改，数据库模式都会正确地重新创建，而数据夹具（存储在 `import.sql` 中）将用于从头开始重新填充。这是对环境进行完美控制的最佳方式，与 Quarkus 实时重载模式配合使用，效果奇佳：您的实体更改或对 `import.sql` 的任何更改都会立即被接收，并在无需重启应用程序的情况下更新模式！"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"By default, in `dev` and `test` modes, Hibernate ORM, upon boot, will read and execute the SQL statements in the `/import.sql` file (if present).\n"
"You can change the file name by changing the property `quarkus.hibernate-orm.sql-load-script` in `application.properties`."
msgstr "默认情况下，在 `dev` 和 `test` 模式下，Hibernate ORM 将在启动时读取并执行 `/import.sql` 文件（如果存在）中的 SQL 语句。你可以通过修改 `application.properties` 中的属性 `quarkus.hibernate-orm.sql-load-script` 来更改文件名。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"The second approach is to use `quarkus.hibernate-orm.database.generation=update`.\n"
"This approach is best when you do many entity changes but\n"
"still need to work on a copy of the production data\n"
"or if you want to reproduce a bug that is based on specific database entries.\n"
"`update` is a best effort from Hibernate ORM and will fail in specific situations\n"
"including altering your database structure which could lead to data loss.\n"
"For example if you change structures which violate a foreign key constraint, Hibernate ORM might have to bail out.\n"
"But for development, these limitations are acceptable."
msgstr "第二种方法是使用 `quarkus.hibernate-orm.database.generation=update` 。当你做了许多实体变更，但仍需要在生产数据的副本上工作，或者你想重现一个基于特定数据库条目的错误时，这种方法是最好的。 `update` 是 Hibernate ORM 的最佳努力，在特定情况下会失败，包括改变你的数据库结构，这可能会导致数据丢失。例如，如果你改变了违反外键约束的结构，Hibernate ORM 可能不得不退出。但对于开发而言，这些限制是可以接受的。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"The third approach is to use `quarkus.hibernate-orm.database.generation=none`.\n"
"This approach is best when you are working on a copy of the production data but want to fully control the schema evolution.\n"
"Or if you use a database schema migration tool like xref:flyway.adoc[Flyway] or xref:liquibase.adoc[Liquibase]."
msgstr "第三种方法是使用 `quarkus.hibernate-orm.database.generation=none` 。这种方法适用于正在处理生产数据副本但希望完全控制模式演变的情况。或者使用 xref:flyway.adoc[Flyway] 或 xref:liquibase.adoc[Liquibase] 等数据库模式迁移工具。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"With this approach when making changes to an entity, make sure to adapt the database schema accordingly;\n"
"you could also use `validate` to have Hibernate verify the schema matches its expectations."
msgstr "使用这种方法对实体进行修改时，确保对数据库模式进行相应调整；还可以使用 `validate` 让 Hibernate 验证模式是否符合其预期。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Do not use `quarkus.hibernate-orm.database.generation` `drop-and-create` and `update` in your production environment."
msgstr "请勿在生产环境中使用 `quarkus.hibernate-orm.database.generation` `drop-and-create` 和 `update` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"These approaches become really powerful when combined with Quarkus configuration profiles.\n"
"You can define different xref:config-reference.adoc#profiles[configuration profiles]\n"
"to select different behaviors depending on your environment.\n"
"This is great because you can define different combinations of Hibernate ORM properties matching the development style you currently need."
msgstr "当与 Quarkus 配置文件相结合时，这些方法就会变得非常强大。你可以定义不同的 xref:config-reference.adoc#profiles[配置文件] ，根据你的环境选择不同的行为。这非常好，因为你可以定义不同的 Hibernate ORM 属性组合，使其与你当前需要的开发风格相匹配。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "application.properties"
msgstr "应用程序属性"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "You can start dev mode using a custom profile:"
msgstr "您可以使用自定义配置文件启动开发模式："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Hibernate ORM in production mode"
msgstr "生产模式下的 Hibernate ORM"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Quarkus comes with default profiles (`dev`, `test` and `prod`).\n"
"And you can add your own custom profiles to describe various environments (`staging`, `prod-us`, etc)."
msgstr "Quarkus 自带默认配置文件（ `dev` 、 `test` 和 `prod` ）。你还可以添加自己的自定义配置文件来描述各种环境 ( `staging` , `prod-us` , 等等)。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The Hibernate ORM Quarkus extension sets some default configurations differently in dev and test modes than in other environments."
msgstr "在开发和测试模式下，Hibernate ORM Quarkus 扩展设置的某些默认配置与其他环境下的不同。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus.hibernate-orm.sql-load-script` is set to `no-file` for all profiles except the `dev` and `test` ones."
msgstr "`quarkus.hibernate-orm.sql-load-script` 设置为 ，但 和 除外。 `no-file` `dev` `test` "

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"You can override it in your `application.properties` explicitly\n"
"(e.g. `%prod.quarkus.hibernate-orm.sql-load-script = import.sql`)\n"
"but we wanted you to avoid overriding your database by accident in prod :)"
msgstr "您可以在 `application.properties` 中明确覆盖它（例如 `%prod.quarkus.hibernate-orm.sql-load-script = import.sql` ），但我们希望您避免在 prod 中意外覆盖数据库：)"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Speaking of, make sure to not drop your database schema in production!\n"
"Add the following in your properties file."
msgstr "说到这里，请确保不要在生产中删除数据库模式！在属性文件中添加以下内容。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Automatically transitioning to Flyway to Manage Schemas"
msgstr "自动过渡到 Flyway 管理模式"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"If you have the xref:flyway.adoc[Flyway extension] installed when running in development mode, Quarkus provides a simple way to turn\n"
"your Hibernate ORM auto generated schema into a Flyway migration file. This is intended to make is easy to move from\n"
"the early development phase, where Hibernate can be used to quickly set up the schema, to the production phase, where\n"
"Flyway is used to manage schema changes."
msgstr "如果你在开发模式下运行时安装了 xref:flyway.adoc[Flyway 扩展] ，Quarkus 提供了一种简单的方法，可以将 Hibernate ORM 自动生成的模式转化为 Flyway 迁移文件。这样做的目的是为了方便从早期开发阶段（使用 Hibernate 快速设置模式）过渡到生产阶段（使用 Flyway 管理模式变更）。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"To use this feature simply open the Dev UI when the `quarkus-flyway` extension is installed and click in the `Datasources`\n"
"link in the Flyway pane. Hit the `Create Initial Migration` button and the following will happen:"
msgstr "要使用该功能，只需在安装 `quarkus-flyway` 扩展后打开开发人员用户界面，然后点击 Flyway 窗格中的 `Datasources` 链接。点击 `Create Initial Migration` 按钮，就会出现以下操作："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "A `db/migration/V1.0.0__\\{appname\\}.sql` file will be created, containing the SQL Hibernate is running to generate the schema"
msgstr "将创建一个 `db/migration/V1.0.0__{appname}.sql` 文件，其中包含 Hibernate 为生成模式而运行的 SQL 语句"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus.flyway.baseline-on-migrate` will be set, telling Flyway to automatically create its baseline tables"
msgstr "`quarkus.flyway.baseline-on-migrate` 将被设置，告诉 Flyway 自动创建基线表"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`quarkus.flyway.migrate-at-start` will be set, telling Flyway to automatically apply migrations on application startup"
msgstr "`quarkus.flyway.migrate-at-start` 将被设置，告诉 Flyway 在应用程序启动时自动应用迁移"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "`%dev.quarkus.flyway.clean-at-start` and `%test.quarkus.flyway.clean-at-start` will be set, to clean the DB after reload in dev/test mode"
msgstr "`%dev.quarkus.flyway.clean-at-start` 和 将被设置，以便在 dev/test 模式下重新加载后清理数据库 `%test.quarkus.flyway.clean-at-start` "

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"This button is simply a convenience to quickly get you started with Flyway, it is up to you to determine how you want to\n"
"manage your database schemas in production. In particular the `migrate-at-start` setting may not be right for all environments."
msgstr "这个按钮只是为了方便您快速开始使用 Flyway，您可以自行决定在生产中如何管理数据库模式。尤其是 `migrate-at-start` 设置不一定适合所有环境。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Caching"
msgstr "缓存"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Applications that frequently read the same entities can see their performance improved when the Hibernate ORM second-level cache is enabled."
msgstr "启用 Hibernate ORM 二级缓存后，经常读取相同实体的应用程序的性能会得到改善。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Caching of entities"
msgstr "缓存实体"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "To enable second-level cache, mark the entities that you want cached with `@jakarta.persistence.Cacheable`:"
msgstr "要启用二级缓存，请使用 `@jakarta.persistence.Cacheable` 标记您希望缓存的实体："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "When an entity is annotated with `@Cacheable`, all its field values are cached except for collections and relations to other entities."
msgstr "当一个实体被注释为 `@Cacheable` 时，除了集合和与其他实体的关系外，其所有字段值都会被缓存。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "This means the entity can be loaded without querying the database, but be careful as it implies the loaded entity might not reflect recent changes in the database."
msgstr "这意味着可以在不查询数据库的情况下加载实体，但要小心，因为这意味着加载的实体可能无法反映数据库中最近的变化。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Caching of collections and relations"
msgstr "缓存集合和关系"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Collections and relations need to be individually annotated to be cached; in this case the Hibernate specific `@org.hibernate.annotations.Cache` should be used, which requires also to specify the `CacheConcurrencyStrategy`:"
msgstr "要缓存集合和关系，需要对其进行单独注释；在这种情况下，应使用 Hibernate 特有的 `@org.hibernate.annotations.Cache` ，其中还需要指定 `CacheConcurrencyStrategy` ："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Caching of queries"
msgstr "缓存查询"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Queries can also benefit from second-level caching. Cached query results can be returned immediately to the caller, avoiding to run the query on the database."
msgstr "查询还可受益于二级缓存。缓存的查询结果可以立即返回给调用者，从而避免在数据库中运行查询。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Be careful as this implies the results might not reflect recent changes."
msgstr "请注意，这意味着结果可能无法反映最近的变化。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "To cache a query, mark it as cacheable on the `Query` instance:"
msgstr "要缓存查询，请在 `Query` 实例上将其标记为可缓存："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "If you have a `NamedQuery` then you can enable caching directly on its definition, which will usually be on an entity:"
msgstr "如果有 `NamedQuery` ，则可以直接在其定义上启用缓存，通常是在实体上："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "That's all! Caching technology is already integrated and enabled by default in Quarkus, so it's enough to set which ones are safe to be cached."
msgstr "仅此而已！Quarkus 已经集成并默认启用了缓存技术，因此只需设置哪些内容可以安全缓存即可。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Tuning of Cache Regions"
msgstr "高速缓存区域的调整"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Caches store the data in separate regions to isolate different portions of data; such regions are assigned a name, which is useful for configuring each region independently, or to monitor their statistics."
msgstr "缓存将数据存储在单独的区域中，以隔离不同的数据部分；这些区域会被分配一个名称，这对于独立配置每个区域或监控其统计数据非常有用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "By default, entities are cached in regions named after their fully qualified name, e.g. `org.acme.Country`."
msgstr "默认情况下，实体缓存在以其完整限定名称命名的区域中，例如 `org.acme.Country` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Collections are cached in regions named after the fully qualified name of their owner entity and collection field name, separated by `#` character, e.g. `org.acme.Country#cities`."
msgstr "集合缓存在以其所有者实体的完整限定名称和集合字段名称命名的区域中，以 `#` 字符分隔，例如 `org.acme.Country#cities` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "All cached queries are by default kept in a single region dedicated to them called `default-query-results-region`."
msgstr "默认情况下，所有缓存查询都保存在一个名为 `default-query-results-region` 的专用区域中。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "All regions are bounded by size and time by default. The defaults are `10000` max entries, and `100` seconds as maximum idle time."
msgstr "默认情况下，所有区域都有大小和时间限制。默认情况下，最大条目数为 `10000` ，最长空闲时间为 `100` 秒。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The size of each region can be customized via the `quarkus.hibernate-orm.cache.\"<region_name>\".memory.object-count` property (Replace _<region_name>_ with the actual region name)."
msgstr "每个区域的大小可通过 `quarkus.hibernate-orm.cache.\"<region_name>\".memory.object-count` 属性自定义（用实际区域名称替换 _<region_name>_ ）。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "To set the maximum idle time, provide the duration (see note on duration's format below) via the `quarkus.hibernate-orm.cache.\"<region_name>\".expiration.max-idle` property (Replace _<region_name>_ with the actual region name)."
msgstr "要设置最长空闲时间，请通过 `quarkus.hibernate-orm.cache.\"<region_name>\".expiration.max-idle` 属性提供持续时间（请参阅下文关于持续时间格式的说明）（用实际区域名称替换 _<region_name>_ ）。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The double quotes are mandatory if your region name contains a dot. For instance:"
msgstr "如果您的区域名称包含点，则必须使用双引号。例如"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Limitations of Caching"
msgstr "缓存的局限性"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The caching technology provided within Quarkus is currently quite rudimentary and limited."
msgstr "目前，Quarkus 提供的缓存技术非常初级和有限。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The team thought it was better to have _some_ caching capability to start with, than having nothing; you can expect better caching solution to be integrated in future releases, and any help and feedback in this area is very welcome."
msgstr "我们的团队认为，有 _一些_ 缓存功能总比什么都没有要好；你可以期待在未来的版本中集成更好的缓存解决方案，我们非常欢迎在这方面提供任何帮助和反馈。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "These caches are kept locally, so they are not invalidated or updated when changes are made to the persistent store by other applications."
msgstr "这些缓存保存在本地，因此当其他应用程序对持久存储进行更改时，它们不会失效或更新。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Also, when running multiple copies of the same application (in a cluster, for example on Kubernetes/OpenShift), caches in separate copies of the application aren't synchronized."
msgstr "此外，当运行同一应用程序的多个副本时（在集群中，例如在 Kubernetes/OpenShift 上），应用程序不同副本中的缓存不会同步。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "For these reasons, enabling caching is only suitable when certain assumptions can be made: we strongly recommend that only entities, collections and queries which never change are cached. Or at most, that when indeed such an entity is mutated and allowed to be read out of date (stale) this has no impact on the expectations of the application."
msgstr "出于这些原因，只有在可以做出某些假设的情况下，才适合启用缓存：我们强烈建议只缓存永不改变的实体、集合和查询。或者最多是，当这样的实体发生变化并允许读取过时（陈旧）的内容时，不会对应用程序的预期产生影响。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Following this advice guarantees applications get the best performance out of the second-level cache and yet avoid unexpected behaviour."
msgstr "遵循这些建议可确保应用程序从二级缓存中获得最佳性能，同时避免出现意想不到的行为。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"On top of immutable data, in certain contexts it might be acceptable to enable caching also on mutable data; this could be a necessary tradeoff on selected\n"
" entities which are read frequently and for which some degree of staleness is acceptable; this \" acceptable degree of staleness\" can be tuned by setting eviction properties.\n"
" This is however not recommended and should be done with extreme care, as it might\n"
" produce unexpected and unforeseen effects on the data."
msgstr "除了不可变数据外，在某些情况下，对可变数据也启用缓存也是可以接受的；这可能是对经常被读取的选定实体的必要权衡，对于这些实体来说，某种程度的僵化是可以接受的；这种 \"可接受的僵化程度 \"可以通过设置驱逐属性来调整。不过，我们不建议这样做，而且应该非常小心，因为这可能会对数据产生意想不到的影响。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Rather than enabling caching on mutable data, ideally a better solution would be to use a clustered cache; however at this time Quarkus doesn't provide any such implementation: feel free to get in touch and let this need known so that the team can take this into account."
msgstr "理想情况下，更好的解决方案是使用集群缓存，而不是在易变数据上启用缓存；不过，Quarkus 目前还没有提供这样的实现方式：请随时联系我们并告知这一需求，以便团队将其考虑在内。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Finally, the second-level cache can be disabled globally by setting `hibernate.cache.use_second_level_cache` to `false`; this is a setting that needs to be specified in the `persistence.xml` configuration file."
msgstr "最后，可以通过将 `hibernate.cache.use_second_level_cache` 设置为 `false` 来全局禁用二级缓存；这一设置需要在 `persistence.xml` 配置文件中指定。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "When second-level cache is disabled, all cache annotations are ignored and all queries are run ignoring caches; this is generally useful only to diagnose issues."
msgstr "禁用二级缓存时，所有缓存注释都会被忽略，所有查询的运行都会忽略缓存；这通常只在诊断问题时有用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Hibernate Envers"
msgstr "冬眠 Envers"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The Envers extension to Hibernate ORM aims to provide an easy auditing / versioning solution for entity classes."
msgstr "Hibernate ORM 的 Envers 扩展旨在为实体类提供一个简单的审计/版本管理解决方案。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "In Quarkus, Envers has a dedicated Quarkus Extension `io.quarkus:quarkus-hibernate-envers`; you just need to add this to your project to start using it."
msgstr "在 Quarkus 中，Envers 有一个专门的 Quarkus 扩展 `io.quarkus:quarkus-hibernate-envers` ；你只需将其添加到你的项目中即可开始使用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Additional dependency to enable Hibernate Envers"
msgstr "Additional dependency to enable Hibernate Envers"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "At this point the extension does not expose additional configuration properties."
msgstr "At this point the extension does not expose additional configuration properties."

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "For more information about Hibernate Envers, see link:https://hibernate.org/orm/envers/[hibernate.org/orm/envers/]."
msgstr "有关 Hibernate Envers 的更多信息，请参见 link:https://hibernate.org/orm/envers/[hibernate.org/orm/envers/] 。"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "Metrics"
msgstr "指标"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Either xref:telemetry-micrometer.adoc[Micrometer] or xref:microprofile-metrics.adoc[SmallRye Metrics] are\n"
"capable of exposing metrics that Hibernate ORM collects at runtime. To enable exposure of Hibernate metrics\n"
"on the `/q/metrics` endpoint, make sure your project depends on a metrics extension and set the configuration property `quarkus.hibernate-orm.metrics.enabled` to `true`.\n"
"When using link:microprofile-metrics[SmallRye Metrics], metrics will be available under the `vendor` scope."
msgstr "xref:telemetry-micrometer.adoc[Micrometer] 或 xref:microprofile-metrics.adoc[SmallRye Metrics] 都能公开 Hibernate ORM 在运行时收集的指标。要在 `/q/metrics` 端点上公开 Hibernate 指标，请确保您的项目依赖于指标扩展，并将配置属性 `quarkus.hibernate-orm.metrics.enabled` 设置为 `true` 。使用 link:microprofile-metrics[SmallRye Metrics] 时，指标将在 `vendor` 作用域下可用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Limitations and other things you should know"
msgstr "Limitations and other things you should know"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Quarkus does not modify the libraries it uses; this rule applies to Hibernate ORM as well: when using\n"
"this extension you will mostly have the same experience as using the original library."
msgstr "Quarkus 不会修改它所使用的库；这一规则也适用于 Hibernate ORM：在使用该扩展时，你将获得与使用原始库相同的体验。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"But while they share the same code, Quarkus does configure some components automatically and injects custom implementations\n"
"for some extension points; this should be transparent and useful but if you're an expert of Hibernate you might want to\n"
"know what is being done."
msgstr "虽然它们共享相同的代码，但 Quarkus 会自动配置某些组件，并为某些扩展点注入自定义实现；这应该是透明和有用的，但如果你是 Hibernate 专家，你可能想知道正在做什么。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Automatic build time enhancement"
msgstr "自动生成时间增强"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Hibernate ORM can use build time enhanced entities; normally this is not mandatory, but it's useful and will have your\n"
"applications perform better."
msgstr "Hibernate ORM 可以使用构建时增强的实体；通常这不是强制性的，但它很有用，会让你的应用程序性能更好。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Typically, you would need to adapt your build scripts to include the Hibernate Enhancement plugins; in Quarkus this is\n"
"not necessary as the enhancement step is integrated in the build and analysis of the Quarkus application."
msgstr "通常情况下，你需要调整你的构建脚本以包含 Hibernate 增强插件；而在 Quarkus 中则不需要，因为增强步骤已集成在 Quarkus 应用程序的构建和分析中。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Due to the usage of enhancement, using the `clone()` method on entities is currently not supported\n"
"as it will also clone some enhancement-specific fields that are specific to the entity."
msgstr "由于使用了增强功能，目前不支持在实体上使用 `clone()` 方法，因为它还会克隆实体特有的一些增强功能字段。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "This limitation might be removed in the future."
msgstr "This limitation might be removed in the future."

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Automatic integration"
msgstr "自动集成"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Transaction Manager integration"
msgstr "交易管理器集成"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"You don't need to set this up, Quarkus automatically injects the reference to the Narayana Transaction Manager.\n"
"The dependency is included automatically as a transitive dependency of the Hibernate ORM extension.\n"
"All configuration is optional; for more details see xref:transaction.adoc[Using Transactions in Quarkus]."
msgstr "你不需要设置，Quarkus 会自动注入对 Narayana 事务管理器的引用。该依赖关系会作为 Hibernate ORM 扩展的传递依赖关系自动包含在内。All configuration is optional; for more details see xref:transaction.adoc[Using Transactions in Quarkus] ."

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Connection pool"
msgstr "连接池"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Don't need to choose one either. Quarkus automatically includes the Agroal connection pool;\n"
"configure your datasource as in the above examples and it will set up Hibernate ORM to use Agroal.\n"
"More details about this connection pool can be found in xref:datasource.adoc[Quarkus - Datasources]."
msgstr "Don’t need to choose one either.Quarkus 会自动包含 Agroal 连接池；按照上述示例配置数据源，它就会设置 Hibernate ORM 使用 Agroal。关于连接池的更多详情，请参阅 xref:datasource.adoc[Quarkus - Datasources] 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Second Level Cache"
msgstr "二级缓存"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"As explained earlier in the xref:caching[Caching section], you don't need to pick an implementation.\n"
"A suitable implementation based on technologies from link:https://infinispan.org/[Infinispan] and link:https://github.com/ben-manes/caffeine[Caffeine] is included as a transitive dependency of the Hibernate ORM extension, and automatically integrated during the build."
msgstr "正如前面在 xref:caching[缓存部分] 所解释的，你不需要选择一种实现方式。基于 link:https://infinispan.org/[Infinispan] 和 link:https://github.com/ben-manes/caffeine[Caffeine] 技术的合适实现将作为 Hibernate ORM 扩展的传递依赖关系，并在构建过程中自动集成。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Limitations"
msgstr "局限性"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "XML mapping with duplicate files in the classpath"
msgstr "类路径中存在重复文件的 XML 映射"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "xref:xml-mapping[XML mapping] files are expected to have a unique path."
msgstr "xref:xml-mapping[XML 映射] 文件应具有唯一路径。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"In practice, it's only possible to have duplicate XML mapping files in the classpath in very specific scenarios.\n"
"For example, if two JARs include a `META-INF/orm.xml` file (with the exact same path but in different JARs),\n"
"then the mapping file path `META-INF/orm.xml` can only be referenced from a `persistence.xml`\n"
"**in the same JAR as the `META-INF/orm.xml` file**."
msgstr "实际上，只有在非常特殊的情况下，classpath 中才有可能出现重复的 XML 映射文件。例如，如果两个 JAR 包含一个 `META-INF/orm.xml` 文件（路径完全相同，但在不同的 *JAR* 中），那么映射文件路径 `META-INF/orm.xml` 只能从 *与<code>META-INF/orm.xml</code> 文件在同一 JAR 中的* `persistence.xml` 引用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "JMX"
msgstr "JMX"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Management beans are not working in GraalVM native images;\n"
"therefore, Hibernate's capability to register statistics and management operations with the JMX bean is disabled when compiling into a native image.\n"
"This limitation is likely permanent, as it's not a goal for native images\n"
"to implement support for JMX. All such metrics can be accessed in other ways."
msgstr "管理 Bean 在 GraalVM 本机镜像中不起作用；因此，在编译成本机镜像时，Hibernate 向 JMX Bean 注册统计和管理操作的功能将被禁用。这种限制很可能是永久性的，因为本机镜像的目标并不是实现对 JMX 的支持。所有这些指标都可以通过其他方式访问。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "JACC Integration"
msgstr "JACC 整合"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Hibernate ORM's capability to integrate with JACC is disabled when building GraalVM native images,\n"
"as JACC is not available - nor useful - in native mode."
msgstr "在构建 GraalVM 本机镜像时，Hibernate ORM 与 JACC 集成的功能被禁用，因为 JACC 在本机模式下不可用，也没有用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Binding the Session to ThreadLocal context"
msgstr "将会话绑定到线程本地上下文"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"It is impossible to use the `ThreadLocalSessionContext` helper of Hibernate ORM as support for it is not implemented.\n"
"Since Quarkus provides out-of-the-box CDI support, injection or programmatic CDI lookup is a better approach.\n"
"This feature also didn't integrate well with reactive components and more modern context propagation techniques, making us believe this legacy feature has no future.\n"
"If you badly need to bind it to a ThreadLocal, it should be trivial to implement in your own code."
msgstr "不可能使用 Hibernate ORM 的 `ThreadLocalSessionContext` helper，因为没有实现对它的支持。由于 Quarkus 提供了开箱即用的 CDI 支持，注入或编程式 CDI 查找是更好的方法。这项功能也没有与反应式组件和更现代的上下文传播技术很好地集成，这让我们相信这项传统功能没有未来。如果您急需将其绑定到 ThreadLocal，那么在自己的代码中实现它应该是轻而易举的。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "JNDI"
msgstr "JNDI"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"The JNDI technology is commonly used in other runtimes to integrate different components.\n"
"A common use case is Java Enterprise servers to bind the TransactionManager and the Datasource components to a name and then have Hibernate ORM configured to look these components up by name.\n"
"But in Quarkus, this use case doesn't apply as components are injected directly, making JNDI support an unnecessary legacy.\n"
"To avoid unexpected use of JNDI, full support for JNDI has been disabled in the Hibernate ORM extension for Quarkus.\n"
"This is both a security precaution and an optimization."
msgstr "JNDI 技术通常用于其他运行时，以集成不同的组件。一个常见的用例是 Java 企业服务器将 TransactionManager 和 Datasource 组件绑定到一个名称上，然后配置 Hibernate ORM 通过名称查找这些组件。但在 Quarkus 中，这种用例并不适用，因为组件是直接注入的，这使得 JNDI 支持成为不必要的遗产。为了避免意外使用 JNDI，Quarkus 的 Hibernate ORM 扩展已经禁用了对 JNDI 的完全支持。这既是一种安全防范措施，也是一种优化。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Other notable differences"
msgstr "其他显著差异"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Format of `import.sql`"
msgstr "格式 `import.sql`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"When importing a `import.sql` to set up your database, keep in mind that Quarkus reconfigures Hibernate ORM so to require a semicolon (`;`) to terminate each statement.\n"
"The default in Hibernate is to have a statement per line, without requiring a terminator other than newline: remember to convert your scripts to use the `;` terminator character if you're reusing existing scripts.\n"
"This is useful so to allow multi-line statements and human friendly formatting."
msgstr "在导入 `import.sql` 以建立数据库时，请记住 Quarkus 会重新配置 Hibernate ORM，要求在每条语句的结尾使用分号 ( `;` )。Hibernate 的默认设置是每行一条语句，不需要换行符以外的结束符：如果你要使用现有的脚本，记得将脚本转换为使用 `;` 结束符。这对允许多行语句和人性化格式非常有用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Simplifying Hibernate ORM with Panache"
msgstr "用 Panache 简化 Hibernate ORM"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] extension facilitates the usage of Hibernate ORM by providing active record style entities (and repositories) and focuses on making your entities trivial and fun to write in Quarkus."
msgstr "xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache] 扩展通过提供活动记录风格的实体（和存储库）来促进 Hibernate ORM 的使用，并专注于让你的实体在 Quarkus 中变得琐碎而有趣。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Configure your datasource"
msgstr "配置数据源"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Datasource configuration is extremely simple, but is covered in a different guide as technically\n"
"it's implemented by the Agroal connection pool extension for Quarkus."
msgstr "数据源配置非常简单，但会在另一本指南中介绍，因为从技术上讲，它是由 Quarkus 的 Agroal 连接池扩展实现的。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Jump over to xref:datasource.adoc[Quarkus - Datasources] for all details."
msgstr "跳转到 xref:datasource.adoc[Quarkus - Datasources] 了解所有详细信息。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Multitenancy"
msgstr "多租户"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "\"The term multitenancy, in general, is applied to software development to indicate an architecture in which a single running instance of an application simultaneously serves multiple clients (tenants). This is highly common in SaaS solutions. Isolating information (data, customizations, etc.) pertaining to the various tenants is a particular challenge in these systems. This includes the data owned by each tenant stored in the database\" (link:{hibernate-orm-docs-url}#multitenacy[Hibernate User Guide])."
msgstr "\"多租户 \"一词一般用于软件开发，指应用程序的单个运行实例同时为多个客户（租户）提供服务的架构。这在 SaaS 解决方案中非常常见。在这些系统中，隔离与不同租户相关的信息（数据、定制等）是一项特殊的挑战。这包括存储在数据库中的每个租户所拥有的数据\"（《 link:{hibernate-orm-docs-url}#multitenacy[Hibernate 用户指南》] ）。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Quarkus currently supports the link:{hibernate-orm-docs-url}#multitenacy-separate-database[separate database] approach, the link:{hibernate-orm-docs-url}#multitenacy-separate-schema[separate schema] approach and the link:{hibernate-orm-docs-url}#multitenacy-discriminator[discriminator] approach."
msgstr "Quarkus 目前支持 link:{hibernate-orm-docs-url}#multitenacy-separate-database[独立数据库] 方法、 link:{hibernate-orm-docs-url}#multitenacy-separate-schema[独立模式] 方法和 link:{hibernate-orm-docs-url}#multitenacy-discriminator[判别器] 方法。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "To see multitenancy in action, you can check out the link:{quickstarts-tree-url}/hibernate-orm-multi-tenancy-quickstart[hibernate-orm-multi-tenancy-quickstart] quickstart."
msgstr "要了解多租户的实际操作，可以查看 link:{quickstarts-tree-url}/hibernate-orm-multi-tenancy-quickstart[hibernate-orm-multi-tenancy-quickstart quick] start。"

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "Writing the application"
msgstr "编写应用程序"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Let's start by implementing the `/{tenant}` endpoint. As you can see from the source code below it is just a regular Jakarta REST resource:"
msgstr "让我们从实现 `/{tenant}` 端点开始。从下面的源代码中可以看到，这只是一个普通的 Jakarta REST 资源："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "In order to resolve the tenant from incoming requests and map it to a specific tenant configuration, you need to create an implementation for the `io.quarkus.hibernate.orm.runtime.tenant.TenantResolver` interface."
msgstr "为了从传入请求中解析租户并将其映射到特定租户配置，需要为 `io.quarkus.hibernate.orm.runtime.tenant.TenantResolver` 接口创建一个实现。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Annotate the TenantResolver implementation with the `@PersistenceUnitExtension` qualifier\n"
"to tell Quarkus it should be used in the default persistence unit."
msgstr "使用 `@PersistenceUnitExtension` 限定符对 TenantResolver 实现进行注释，以告诉 Quarkus 它应在默认持久化单元中使用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "For xref:multiple-persistence-units[named persistence units], use `@PersistenceUnitExtension(\"nameOfYourPU\")`."
msgstr "对于 xref:multiple-persistence-units[已命名的持久性单元] ，请使用 `@PersistenceUnitExtension(\"nameOfYourPU\")` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The bean is made `@RequestScoped` as the tenant resolution depends on the incoming request."
msgstr "由于租户解析取决于传入的请求，因此该 Bean 是 `@RequestScoped` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "From the implementation above, tenants are resolved from the request path so that in case no tenant could be inferred, the default tenant identifier is returned."
msgstr "从上面的实现来看，租户是通过请求路径解析的，因此如果无法推断出租户，就会返回默认租户标识符。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "If you also use xref:security-openid-connect-multitenancy.adoc[OIDC multitenancy] and both OIDC and Hibernate ORM tenant IDs are the same and must be extracted from the Vert.x `RoutingContext` then you can pass the tenant id from the OIDC Tenant Resolver to the Hibernate ORM Tenant Resolver as a `RoutingContext` attribute, for example:"
msgstr "如果您也使用 xref:security-openid-connect-multitenancy.adoc[OIDC 多租户] ，并且 OIDC 和 Hibernate ORM 租户 ID 相同，且必须从 Vert.x `RoutingContext` 中提取，那么您可以将租户 ID 从 OIDC 租户解析器传递给 Hibernate ORM 租户解析器，例如作为 `RoutingContext` 属性："

#: _versions/3.6/guides/hibernate-orm.adoc
msgid "Configuring the application"
msgstr "配置该应用程序"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"In general, it is not possible to use the Hibernate ORM database generation feature in conjunction with a multitenancy setup.\n"
"Therefore, you have to disable it, and you need to make sure that the tables are created per schema.\n"
"The following setup will use the xref:flyway.adoc[Flyway] extension to achieve this goal."
msgstr "一般来说，在多租户设置中无法使用 Hibernate ORM 数据库生成功能。因此，必须禁用该功能，并确保按模式创建表格。下面的设置将使用 xref:flyway.adoc[Flyway] 扩展来实现这一目标。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "SCHEMA approach"
msgstr "SCHEMA 方法"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"The same data source will be used for all tenants and a schema has to be created for every tenant inside that data source.\n"
"CAUTION: Some databases like MariaDB/MySQL do not support database schemas. In these cases you have to use the DATABASE approach below."
msgstr "所有租户将使用相同的数据源，必须在该数据源内为每个租户创建模式。注意：某些数据库（如 MariaDB/MySQL）不支持数据库模式。在这种情况下，您必须使用下面的 DATABASE 方法。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Here is an example of the Flyway SQL (`V1.0.0__create_fruits.sql`) to be created in the configured folder `src/main/resources/schema`."
msgstr "以下是在配置文件夹 `src/main/resources/schema` 中创建 Flyway SQL ( `V1.0.0__create_fruits.sql` ) 的示例。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "DATABASE approach"
msgstr "数据库方法"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "For every tenant you need to create a named data source with the same identifier that is returned by the `TenantResolver`."
msgstr "您需要为每个租户创建一个已命名的数据源，其标识符与 `TenantResolver` 返回的标识符相同。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Following are examples of the Flyway SQL files to be created in the configured folder `src/main/resources/database`."
msgstr "以下是在配置文件夹 `src/main/resources/database` 中创建 Flyway SQL 文件的示例。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Default schema (`src/main/resources/database/default/V1.0.0__create_fruits.sql`):"
msgstr "默认模式 ( `src/main/resources/database/default/V1.0.0__create_fruits.sql` )："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Mycompany schema (`src/main/resources/database/mycompany/V1.0.0__create_fruits.sql`):"
msgstr "Mycompany schema ( `src/main/resources/database/mycompany/V1.0.0__create_fruits.sql` )："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "DISCRIMINATOR approach"
msgstr "歧视者方法"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "The default data source will be used for all tenants. All entities defining a field annotated with `@TenantId` will have that field populated automatically, and will get filtered automatically in queries."
msgstr "所有租户都将使用默认数据源。所有定义了注释为 `@TenantId` 的字段的实体都将自动填充该字段，并在查询中自动过滤。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Programmatically Resolving Tenants Connections"
msgstr "通过程序解决租户联系问题"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"If you need a more dynamic configuration for the different tenants you want to support and don't want to end up with multiple entries in your configuration file,\n"
"you can use the `io.quarkus.hibernate.orm.runtime.tenant.TenantConnectionResolver` interface to implement your own logic for retrieving a connection.\n"
"Creating an application-scoped bean that implements this interface\n"
"and annotating it with `@PersistenceUnitExtension` (or `@PersistenceUnitExtension(\"nameOfYourPU\")` for a xref:multiple-persistence-units[named persistence unit])\n"
"will replace the current Quarkus default implementation `io.quarkus.hibernate.orm.runtime.tenant.DataSourceTenantConnectionResolver`.\n"
"Your custom connection resolver would allow for example to read tenant information from a database and create a connection per tenant at runtime based on it."
msgstr "如果你需要为你想要支持的不同租户进行更动态的配置，并且不想最终在配置文件中出现多个条目，你可以使用 `io.quarkus.hibernate.orm.runtime.tenant.TenantConnectionResolver` 接口来实现你自己的连接检索逻辑。创建一个实现该接口的应用程序作用域 Bean，并用 `@PersistenceUnitExtension` （或 `@PersistenceUnitExtension(\"nameOfYourPU\")` 用于 xref:multiple-persistence-units[命名的持久化单元] ）对其进行注释，就可以取代当前的 Quarkus 默认实现 `io.quarkus.hibernate.orm.runtime.tenant.DataSourceTenantConnectionResolver` 。例如，您自定义的连接解析器可以从数据库中读取租户信息，并在运行时根据租户信息创建连接。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Interceptors"
msgstr "拦截器"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"You can assign an link:{hibernate-orm-docs-url}#events-interceptors[`org.hibernate.Interceptor`]\n"
"to your `SessionFactory` by simply defining a CDI bean with the appropriate qualifier:"
msgstr "您只需在定义 CDI Bean 时使用适当的限定符 link:{hibernate-orm-docs-url}#events-interceptors[org.hibernate.Interceptor] 到 `SessionFactory` ，只需定义一个带有相应限定符的 CDI Bean 即可："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Annotate the interceptor implementation with the `@PersistenceUnitExtension` qualifier\n"
"to tell Quarkus it should be used in the default persistence unit."
msgstr "使用 `@PersistenceUnitExtension` 限定符对拦截器实现进行注释，以告诉 Quarkus 它应在默认持久化单元中使用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "For xref:multiple-persistence-units[named persistence units], use `@PersistenceUnitExtension(\"nameOfYourPU\")`"
msgstr "对于 xref:multiple-persistence-units[已命名的持久性单元] ，使用 `@PersistenceUnitExtension(\"nameOfYourPU\")`"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Either extend `org.hibernate.EmptyInterceptor` or implement `org.hibernate.Interceptor` directly."
msgstr "要么扩展 `org.hibernate.EmptyInterceptor` ，要么直接实现 `org.hibernate.Interceptor` 。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Implement methods as necessary."
msgstr "根据需要实施方法。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"By default, interceptor beans annotated with `@PersistenceUnitExtension` are application-scoped,\n"
"which means only one interceptor instance will be created per application\n"
"and reused across all entity managers.\n"
"For this reason, the interceptor implementation must be thread-safe."
msgstr "默认情况下，注释为 `@PersistenceUnitExtension` 的拦截器 Bean 是面向应用程序的，这意味着每个应用程序只能创建一个拦截器实例，并在所有实体管理器中重复使用。因此，拦截器的实现必须是线程安全的。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"In order to create one interceptor instance per entity manager instead,\n"
"annotate your bean with `@Dependent`.\n"
"In that case, the interceptor implementation doesn't need to be thread-safe."
msgstr "如果要为每个实体管理器创建一个拦截器实例，可使用 `@Dependent` 对 bean 进行注解。在这种情况下，拦截器的实现不需要是线程安全的。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Due to a limitation in Hibernate ORM itself,\n"
"`@PreDestroy` methods on `@Dependent`-scoped interceptors will never get called."
msgstr "由于 Hibernate ORM 本身的限制， `@Dependent` -scoped 拦截器上的 `@PreDestroy` 方法永远不会被调用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Statement Inspectors"
msgstr "报表检查员"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "You can assign a `org.hibernate.engine.jdbc.spi.StatementInspector` to your `SessionFactory` by simply defining a CDI bean with the appropriate qualifier:"
msgstr "只需定义一个带有相应限定符的 CDI Bean，就可以为 `SessionFactory` 指定 `org.hibernate.engine.jdbc.spi.StatementInspector` ："

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid ""
"Annotate the statement inspector implementation with the `@PersistenceUnitExtension` qualifier\n"
"to tell Quarkus it should be used in the default persistence unit."
msgstr "使用 `@PersistenceUnitExtension` 限定符对语句检查器的实现进行注释，以告诉 Quarkus 它应在默认持久化单元中使用。"

#: _versions/3.6/guides/hibernate-orm.adoc
#, fuzzy
msgid "Implement `org.hibernate.engine.jdbc.spi.StatementInspector`."
msgstr "实施 `org.hibernate.engine.jdbc.spi.StatementInspector` 。"
