msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Quarkus and Maven"
msgstr "Quarkus 和 Maven"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Use Maven to create a new project, add or remove extensions, launch development mode, debug your application, and build your application into a jar, native executable, or container-friendly executable. Import your project into your favorite IDE using Maven project metadata."
msgstr "使用 Maven 创建新项目、添加或删除扩展、启动开发模式、调试应用程序，以及将应用程序构建为 jar、本地可执行文件或容器友好型可执行文件。使用 Maven 项目元数据将项目导入您最喜欢的集成开发环境。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Creating a new project"
msgstr "创建新项目"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "You can scaffold a new Maven project with:"
msgstr "您可以通过以下方式构建一个新的 Maven 项目："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "If you are using the CLI, you can get the list of available options with:"
msgstr "如果使用的是 CLI，则可以通过以下命令获取可用选项列表："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "If you are using the Maven command, the following table lists the attributes you can pass to the `create` command:"
msgstr "如果使用 Maven 命令，下表列出了可以传递给 `create` 命令的属性："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Attribute"
msgstr "属性"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Default Value"
msgstr "默认值"

#: _versions/3.6/guides/maven-tooling.adoc
msgid "Description"
msgstr "描述"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`projectGroupId`"
msgstr "`projectGroupId`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`org.acme.sample`"
msgstr "`org.acme.sample`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The group id of the created project"
msgstr "创建项目的组 ID"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`projectArtifactId`"
msgstr "`projectArtifactId`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "_mandatory_"
msgstr "_强制性的_"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The artifact id of the created project. Not passing it triggers the interactive mode."
msgstr "创建项目的工件 ID。不传递它将触发交互模式。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`projectVersion`"
msgstr "`projectVersion`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`1.0.0-SNAPSHOT`"
msgstr "`1.0.0-SNAPSHOT`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The version of the created project"
msgstr "创建项目的版本"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`platformGroupId`"
msgstr "`platformGroupId`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`{quarkus-platform-groupid}`"
msgstr "`{quarkus-platform-groupid}`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The group id of the target platform."
msgstr "目标平台的组 ID。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`platformArtifactId`"
msgstr "`platformArtifactId`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`quarkus-bom`"
msgstr "`quarkus-bom`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The artifact id of the target platform BOM."
msgstr "目标平台 BOM 的工件 ID。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`platformVersion`"
msgstr "`platformVersion`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The version currently recommended by the xref:extension-registry-user.adoc[Quarkus Extension Registry]"
msgstr "xref:extension-registry-user.adoc[Quarkus 扩展注册表] 目前推荐的版本"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The version of the platform you want the project to use. It can also accept a version range, in which case the latest from the specified range will be used."
msgstr "您希望项目使用的平台版本。也可以接受版本范围，在这种情况下，将使用指定范围内的最新版本。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`javaVersion`"
msgstr "`javaVersion`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "17"
msgstr "17"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The version of Java you want the project to use."
msgstr "您希望项目使用的 Java 版本。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`className`"
msgstr "`className`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "_Not created if omitted_"
msgstr "_如果省略，则不创建_"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The fully qualified name of the generated resource"
msgstr "生成资源的全称"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`path`"
msgstr "`path`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`/hello`"
msgstr "`/hello`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The resource path, only relevant if `className` is set."
msgstr "资源路径，只有在设置 `className` 时才相关。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`extensions`"
msgstr "`extensions`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "_[]_"
msgstr "_[]_"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The list of extensions to add to the project (comma-separated)"
msgstr "要添加到项目中的扩展名列表（以逗号分隔）"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`quarkusRegistryClient`"
msgstr "`quarkusRegistryClient`"

#: _versions/3.6/guides/maven-tooling.adoc
msgid "`true`"
msgstr "`true` "

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Whether Quarkus should use the online registry to resolve extension catalogs. If this is set to false, the extension catalog will be narrowed to the defined (or default) platform BOM."
msgstr "Quarkus 是否应使用在线注册表来解析扩展目录。如果设置为 \"false\"，扩展目录将缩小到已定义（或默认）的平台 BOM。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "By default, the command will target the `{quarkus-platform-groupid}:quarkus-bom:{quarkus-version}` platform release (unless the coordinates of the desired platform release have been specified)."
msgstr "默认情况下，该命令将以 `{quarkus-platform-groupid}:quarkus-bom:{quarkus-version}` 平台版本为目标（除非指定了所需平台版本的坐标）。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The project is generated in a directory named after the passed artifactId.\n"
"If the directory already exists, the generation fails."
msgstr "项目将在以传递的 artifactId 命名的目录中生成。如果目录已经存在，则生成失败。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"A pair of Dockerfiles for native and jvm mode are also generated in `src/main/docker`.\n"
"Instructions to build the image and run the container are written in those Dockerfiles."
msgstr "`src/main/docker` 中还生成了一对用于本地模式和 jvm 模式的 Dockerfile。构建镜像和运行容器的说明就写在这些 Dockerfile 中。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Dealing with extensions"
msgstr "处理延期"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "From inside a Quarkus project, you can obtain a list of the available extensions with:"
msgstr "在 Quarkus 项目中，您可以通过以下方式获取可用扩展的列表："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "You can add an extension using:"
msgstr "您可以使用"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Extensions are passed using a comma-separated list."
msgstr "扩展名用逗号分隔的列表传递。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The extension name is the GAV name of the extension: e.g., `io.quarkus:quarkus-agroal`.\n"
"However, you can pass a partial name, and Quarkus will do its best to find the right extension.\n"
"For example, `agroal`, `Agroal`, or `agro` will expand to `io.quarkus:quarkus-agroal`.\n"
"If no extension is found or more than one extension matches, you will see a red check mark ❌ in the command result."
msgstr "扩展名是扩展名的 GAV 名称：如 `io.quarkus:quarkus-agroal` 。不过，你也可以输入部分名称，Quarkus 会尽力找到正确的扩展名。例如， `agroal` 、 `Agroal` 或 `agro` 将扩展为 `io.quarkus:quarkus-agroal` 。如果没有找到扩展名或有多个扩展名匹配，则会在命令结果中看到一个红色的复选标记❌。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "You can install all extensions which match a globbing pattern :"
msgstr "您可以安装与套料模式匹配的所有扩展："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Configuring `javac` options"
msgstr "配置 `javac` 选项"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The Quarkus Maven plugin makes use of `javac`,\n"
"and by default it picks up compiler flags to pass to\n"
"`javac` from `maven-compiler-plugin`."
msgstr "Quarkus Maven 插件使用 `javac` ，默认情况下，它会从 `maven-compiler-plugin` 获取编译器标志，并将其传递给 `javac` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"If you need to customize the compiler flags used by the plugin, like in xref:dev-mode[development mode], add a `configuration` section to the `plugin` block and set the `compilerArgs` property just as you would when configuring `maven-compiler-plugin`.\n"
"You can also set `source`, `target`, and `jvmArgs`.\n"
"For example, to pass `--enable-preview` to both the JVM and `javac`:"
msgstr "如果需要自定义插件使用的编译器标志（如在 xref:dev-mode[开发模式] 下），可在 `plugin` 块中添加 `configuration` 部分，并像配置 `maven-compiler-plugin` 一样设置 `compilerArgs` 属性。您还可以设置 `source` 、 `target` 和 `jvmArgs` 。例如，将 `--enable-preview` 传递给 JVM 和 `javac` ："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Because the Quarkus Maven plugin itself runs in the JVM started by Maven,\n"
"and because some (rare) Quarkus extensions need to load application classes during the build,\n"
"it may be necessary to pass the same flags to the JVM running Maven."
msgstr "由于 Quarkus Maven 插件本身运行在由 Maven 启动的 JVM 中，而且某些（极少数）Quarkus 扩展需要在构建过程中加载应用类，因此可能有必要向运行 Maven 的 JVM 传递相同的标志。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "To that end, you can use https://maven.apache.org/configure.html#maven_opts-environment-variable[`MAVEN_OPTS`]:"
msgstr "为此，您可以使用 link:https://maven.apache.org/configure.html#maven_opts-environment-variable[MAVEN_OPTS] :"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "CLI"
msgstr "CLI"

#: _versions/3.6/guides/maven-tooling.adoc
msgid "Maven"
msgstr "Maven"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"**Alternatively**, you can simply create the file\n"
"https://maven.apache.org/configure.html#mvn-jvm-config-file[`.mvn/jvm.config`] at the root of your project:\n"
"and any options you put in that file will be picked up by Maven, without having to set `MAVEN_OPTS`."
msgstr "*或者* ，您只需在项目根目录下创建 link:https://maven.apache.org/configure.html#mvn-jvm-config-file[.mvn/jvm.config] 在项目根目录下创建一个文件：Maven 将接收你在该文件中设置的任何选项，而无需设置 `MAVEN_OPTS` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Development mode"
msgstr "开发模式"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Quarkus comes with a built-in development mode.\n"
"Run your application with:"
msgstr "Quarkus 自带开发模式。使用以下工具运行你的应用程序"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"You can then update the application sources, resources and configurations.\n"
"The changes are automatically reflected in your running application.\n"
"This is great to do development spanning UI and database as you see changes reflected immediately."
msgstr "然后，您就可以更新应用程序源、资源和配置。这些更改会自动反映到正在运行的应用程序中。这对于跨用户界面和数据库的开发来说非常有用，因为您可以立即看到变化的反映。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Dev mode enables hot deployment with background compilation, which means\n"
"that when you modify your Java files or your resource files and refresh your browser these changes will automatically take effect.\n"
"This works too for resource files like the configuration property file.\n"
"The act of\n"
"refreshing the browser triggers a scan of the workspace, and if any changes are detected the Java files are compiled,\n"
"and the application is redeployed, then your request is serviced by the redeployed application. If there are any issues\n"
"with compilation or deployment an error page will let you know."
msgstr "开发模式可通过后台编译实现热部署，这意味着当您修改 Java 文件或资源文件并刷新浏览器时，这些更改将自动生效。这也适用于配置属性文件等资源文件。刷新浏览器会触发对工作区的扫描，如果检测到任何更改，就会对 Java 文件进行编译，并重新部署应用程序，然后由重新部署的应用程序为您的请求提供服务。如果编译或部署过程中出现任何问题，错误页面会通知您。"

#: _versions/3.6/guides/maven-tooling.adoc
msgid "Hit `CTRL+C` to stop the application."
msgstr "使用 `CTRL+C` 来停止应用程序。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "By default, `quarkus:dev` sets the debug host to `localhost` (for security reasons). If you need to change this, for example to enable debugging on all hosts, you can use the `-DdebugHost` option like so:"
msgstr "默认情况下， `quarkus:dev` 将调试主机设置为 `localhost` （出于安全考虑）。如果需要更改，例如在所有主机上启用调试，可以使用 `-DdebugHost` 选项，如下所示："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Remote Development Mode"
msgstr "远程开发模式"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"It is possible to use development mode remotely, so that you can run Quarkus in a container environment (such as OpenShift)\n"
"and have changes made to your local files become immediately visible."
msgstr "您可以远程使用开发模式，这样就可以在容器环境（如 OpenShift）中运行 Quarkus，并立即看到对本地文件所做的更改。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "This allows you to develop in the same environment you will actually run your app in, and with access to the same services."
msgstr "这样，您就可以在与实际运行应用程序相同的环境中进行开发，并访问相同的服务。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Do not use this in production. This should only be used in a development environment. You should not run production application in dev mode."
msgstr "请勿在生产环境中使用。只能在开发环境中使用。不应在开发模式下运行生产应用程序。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "To do this you must build a mutable application, using the `mutable-jar` format. Set the following properties in `application.properties`:"
msgstr "为此，您必须使用 `mutable-jar` 格式创建一个可变应用程序。在 `application.properties` 中设置以下属性"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"This tells Quarkus to use the mutable-jar format. Mutable applications also include the deployment time parts of Quarkus,\n"
"so they take up a bit more disk space. If run normally they start just as fast and use the same memory as an immutable application,\n"
"however they can also be started in dev mode."
msgstr "这样，Quarkus 就会使用可变 jar 格式。可变应用程序还包括 Quarkus 的部署时间部分，因此会占用更多磁盘空间。如果正常运行，它们的启动速度和内存使用量与不可变应用程序相同，但它们也可以在开发模式下启动。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The password that is used to secure communication between the remote side and the local side."
msgstr "用于确保远程端和本地端之间通信安全的密码。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The URL that your app is going to be running in dev mode at. This is only needed on the local side, so you\n"
"may want to leave it out of the properties file and specify it as a system property on the command line."
msgstr "应用程序将在开发模式下运行的 URL。只有本地端需要使用该 URL，因此您可以不在属性文件中指定该 URL，而是在命令行中将其指定为系统属性。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The `mutable-jar` is then built in the same way that a regular Quarkus jar is built, i.e. by issuing:"
msgstr "`mutable-jar` 的构建方式与普通 Quarkus jar 的构建方式相同，即发布："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Before you start Quarkus on the remote host set the environment variable `QUARKUS_LAUNCH_DEVMODE=true`. If you are\n"
"on bare metal you can set it via the `export QUARKUS_LAUNCH_DEVMODE=true` command and then run the application with the proper `java -jar ...` command to run the application."
msgstr "在远程主机上启动 Quarkus 之前，请设置环境变量 `QUARKUS_LAUNCH_DEVMODE=true` 。如果是裸机，可以通过 `export QUARKUS_LAUNCH_DEVMODE=true` 命令进行设置，然后使用适当的 `java -jar …​` 命令运行应用程序。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"If you plan on running the application via Docker, then you'll need to add `-e QUARKUS_LAUNCH_DEVMODE=true` to the `docker run` command.\n"
"When the application starts you should now see the following line in the logs: `Profile dev activated. Live Coding activated`."
msgstr "如果计划通过 Docker 运行应用程序，则需要在 `docker run` 命令中添加 `-e QUARKUS_LAUNCH_DEVMODE=true` 。应用程序启动后，您应该会在日志中看到以下一行： `Profile dev activated. Live Coding activated` ."

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The remote side does not need to include Maven or any other development tools. The normal `fast-jar` Dockerfile\n"
"that is generated with a new Quarkus application is all you need. If you are using bare metal launch the Quarkus runner\n"
"jar, do not attempt to run normal dev mode."
msgstr "远程端不需要包含 Maven 或任何其他开发工具。你只需使用新 Quarkus 应用程序生成的普通 `fast-jar` Dockerfile 即可。如果使用裸机启动 Quarkus 运行器 jar，请不要尝试运行正常的开发模式。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Now you need to connect your local agent to the remote host, using the `remote-dev` command:"
msgstr "现在，您需要使用 `remote-dev` 命令将本地代理连接到远程主机："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Now every time you refresh the browser you should see any changes you have made locally immediately visible in the remote\n"
"app. This is done via an HTTP based long polling transport, that will synchronize your local workspace and the remote\n"
"application via HTTP calls."
msgstr "现在，每次刷新浏览器时，您在本地所做的任何更改都能立即在远程应用程序中看到。这是通过基于 HTTP 的长轮询传输实现的，它将通过 HTTP 调用同步本地工作区和远程应用程序。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"If you do not want to use the HTTP feature then you can simply run the `remote-dev` command without specifying the URL.\n"
"In this mode the command will continuously rebuild the local application, so you can use an external tool such as odo or\n"
"rsync to sync to the remote application."
msgstr "如果不想使用 HTTP 功能，可以直接运行 `remote-dev` 命令，无需指定 URL。在这种模式下，命令将持续重建本地应用程序，因此你可以使用外部工具（如 odo 或 rsync）同步到远程应用程序。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "All the config options are shown below:"
msgstr "所有配置选项如下所示："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"It is recommended you use SSL when using remote dev mode, however even if you are using an unencrypted connection\n"
"your password is never sent directly over the wire. For the initial connection request the password is hashed with the\n"
"initial state data, and subsequent requests hash it with a random session id generated by the server and any body contents\n"
"for POST requests, and the path for DELETE requests, as well as an incrementing counter to prevent replay attacks."
msgstr "建议使用远程开发模式时使用 SSL，但即使使用未加密连接，密码也不会直接通过网络发送。对于初始连接请求，密码会与初始状态数据一起散列，随后的请求则会与服务器生成的随机会话 ID、POST 请求的任何正文内容、DELETE 请求的路径以及用于防止重放攻击的递增计数器一起散列。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Debugging"
msgstr "调试"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In development mode, Quarkus starts by default with debug mode enabled, listening to port `5005` without suspending the JVM."
msgstr "在开发模式下，Quarkus 启动时默认启用调试模式，监听端口 `5005` ，而不会暂停 JVM。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "This behavior can be changed by giving the `debug` system property one of the following values:"
msgstr "可以通过赋予 `debug` 系统属性下列值之一来改变这种行为："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`false` - the JVM will start with debug mode disabled"
msgstr "`false` - JVM 启动时将禁用调试模式"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`true` - The JVM is started in debug mode and will be listening on port `5005`"
msgstr "`true` - JVM 会以调试模式启动，并在端口 `5005`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`client` - the JVM will start in client mode and attempt to connect to `localhost:5005`"
msgstr "`client` - JVM 将以客户端模式启动，并尝试连接到 `localhost:5005`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`{port}` - The JVM is started in debug mode and will be listening on `{port}`"
msgstr "`{port}` - JVM 会以调试模式启动，并监听 `{port}`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "An additional system property `suspend` can be used to suspend the JVM, when launched in debug mode. `suspend` supports the following values:"
msgstr "`suspend` `suspend` 支持以下值："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`y` or `true` - The debug mode JVM launch is suspended"
msgstr "`y` 或 - 调试模式下的 JVM 启动被暂停 `true` "

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`n` or `false` - The debug mode JVM is started without suspending"
msgstr "`n` 或 - 启动调试模式 JVM 时不暂停 `false` "

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "You can also run a Quarkus application in debug mode with a suspended JVM using:"
msgstr "您还可以在调试模式下使用暂停的 JVM 运行 Quarkus 应用程序："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Then, attach your debugger to `localhost:5005`."
msgstr "然后，将调试器连接到 `localhost:5005` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Import in your IDE"
msgstr "在集成开发环境中导入"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Once you have a xref:project-creation[project generated], you can import it in your favorite IDE.\n"
"The only requirement is the ability to import a Maven project."
msgstr "xref:project-creation[生成项目] 后，您就可以将其导入您喜欢的集成开发环境。唯一的要求是能导入 Maven 项目。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "**Eclipse**"
msgstr "*日蚀*"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"In Eclipse, click on: `File -> Import`.\n"
"In the wizard, select: `Maven -> Existing Maven Project`.\n"
"On the next screen, select the root location of the project.\n"
"The next screen list the found modules; select the generated project and click on `Finish`. Done!"
msgstr "在 Eclipse 中，单击： `File → Import` 。在向导中，选择： `Maven → Existing Maven Project` 。在下一个屏幕中，选择项目的根位置。下一个屏幕将列出找到的模块；选择生成的项目并点击 `Finish` 。完成！"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In a separated terminal, run:"
msgstr "在分隔的终端中，运行"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "and enjoy a highly productive environment."
msgstr "并享受高效的工作环境。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "**IntelliJ IDEA**"
msgstr "*IntelliJ IDEA*"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In IntelliJ IDEA:"
msgstr "在 IntelliJ IDEA 中："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "From inside IntelliJ IDEA select `File -> New -> Project From Existing Sources...` or, if you are on the welcome dialog, select `Import project`."
msgstr "从 IntelliJ IDEA 内部选择 `File → New → Project From Existing Sources…​` ，或者，如果您在欢迎对话框中，选择 `Import project` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Select the project root"
msgstr "选择项目根目录"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Select `Import project from external model` and `Maven`"
msgstr "选择 `Import project from external model` 和 `Maven`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Next a few times (review the different options if needed)"
msgstr "下几步（必要时查看不同的选项）"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "On the last screen click on Finish"
msgstr "在最后一个屏幕点击完成"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In a separated terminal or in the embedded terminal, run:"
msgstr "在分隔终端或嵌入式终端中，运行"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Enjoy!"
msgstr "请慢用"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "**Apache NetBeans**"
msgstr "*Apache NetBeans*"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In NetBeans:"
msgstr "在 NetBeans："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Select `File -> Open Project`"
msgstr "选择 `File → Open Project`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Click on `Open Project`"
msgstr "点击 `Open Project`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In a separated terminal or the embedded terminal, go to the project root and run:"
msgstr "在独立终端或嵌入式终端中，进入项目根目录并运行："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "**Visual Studio Code**"
msgstr "*Visual Studio 代码*"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Open the project directory in VS Code. If you have installed the Java Extension Pack (grouping a set of Java extensions), the project is loaded as a Maven project."
msgstr "在 VS Code 中打开项目目录。如果安装了 Java 扩展包（一组 Java 扩展），项目将作为 Maven 项目加载。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Logging Quarkus application build classpath tree"
msgstr "记录 Quarkus 应用程序构建的类路径树"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Usually, dependencies of an application (which is a Maven project) could be displayed using `mvn dependency:tree` command. In case of a Quarkus application, however, this command will list only the runtime dependencies of the application.\n"
"Given that the Quarkus build process adds deployment dependencies of the extensions used in the application to the original application classpath, it could be useful to know which dependencies and which versions end up on the build classpath.\n"
"Luckily, the `quarkus` Maven plugin includes the `dependency-tree` goal which displays the build dependency tree for the application."
msgstr "通常，可以使用 `mvn dependency:tree` 命令显示应用程序（Maven 项目）的依赖项。但对于 Quarkus 应用程序，该命令将只列出应用程序的运行时依赖项。鉴于 Quarkus 的构建过程会将应用程序中使用的扩展的部署依赖项添加到原始应用程序的类路径中，因此了解哪些依赖项和哪些版本最终会出现在构建类路径中是非常有用的。幸运的是， `quarkus` Maven 插件包含 `dependency-tree` 目标，可显示应用程序的构建依赖树。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Executing `./mvnw quarkus:dependency-tree` on your project should result in an output similar to:"
msgstr "在您的项目上执行 `./mvnw quarkus:dependency-tree` 时，输出结果应与之类似："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The goal accepts the following optional parameters:"
msgstr "目标接受以下可选参数："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`mode` - the default value is `prod`, i.e. the production build dependency tree. Alternatively, it accepts values `test` to display the test dependency tree and `dev` to display the dev mode dependency tree;"
msgstr "`mode` - 默认值为 ，即生产构建依赖关系树。此外，它还接受 和 这两个值，前者用于显示测试依赖关系树，后者用于显示开发模式依赖关系树； `prod` `test` `dev` "

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`outputFile` - specifies the file to persist the dependency tree to;"
msgstr "`outputFile` - 指定要将依赖关系树持久化的文件；"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`appendOutput` - the default value is `false`, indicates whether the output to the command should be appended to the file specified with the `outputFile` parameter or it should be overridden."
msgstr "`appendOutput` - 默认值为 ，表示命令的输出是否应附加到 参数指定的文件中，还是应被覆盖。 `false` `outputFile` "

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Downloading Maven artifact dependencies for offline development and testing"
msgstr "下载 Maven 构件依赖关系，用于离线开发和测试"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Quarkus extension dependencies are divided into the runtime extension dependencies that end up on the application runtime classpath and the deployment (or build time) extension dependencies that are resolved by Quarkus only at application build time to create\n"
"the build classpath. Application developers are expected to express dependencies only on the runtime artifacts of Quarkus extensions. As a consequence, the deployment extension dependencies aren't visible to Maven plugins that aren't aware of the Quarkus\n"
"extension dependency model, such as the `maven-dependency-plugin`, `go-offline-maven-plugin`, etc. That means those plugins can not be used to pre-download all the application dependencies to be able to build and test the application later in offline mode."
msgstr "Quarkus 扩展依赖关系分为运行时扩展依赖关系和部署（或构建时）扩展依赖关系，前者最终会出现在应用程序的运行时类路径上，而后者仅在应用程序构建时由 Quarkus 解决，以创建构建类路径。应用程序开发人员只能对 Quarkus 扩展的运行时工件表达依赖关系。因此，不了解 Quarkus 扩展依赖模型的 Maven 插件（如 `maven-dependency-plugin` 、 `go-offline-maven-plugin` 等）无法看到部署扩展依赖。这意味着这些插件不能用来预先下载所有应用程序依赖项，以便以后在离线模式下构建和测试应用程序。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "To enable the use-case of building and testing a Quarkus application offline, the `quarkus-maven-plugin` includes the `go-offline` goal that could be called from the command line like this:"
msgstr "为了实现离线构建和测试 Quarkus 应用程序， `quarkus-maven-plugin` 包括 `go-offline` goal，可以像这样从命令行调用："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "This goal will resolve all the runtime, build time, test and dev mode dependencies of the application downloading them to the configured local Maven repository."
msgstr "该目标将解析应用程序的所有运行时、构建时、测试和开发模式依赖项，并将其下载到配置的本地 Maven 资源库中。"

#: _versions/3.6/guides/maven-tooling.adoc
msgid "Building a native executable"
msgstr "构建一个本地可执行文件"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Native executables make Quarkus applications ideal for containers and serverless workloads."
msgstr "本地可执行文件使 Quarkus 应用程序成为容器和无服务器工作负载的理想选择。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Make sure to have `GRAALVM_HOME` configured and pointing to the latest release of GraalVM {graalvm-version}.\n"
"Verify that your `pom.xml` has the proper `native` profile as shown in xref:build-tool-maven[Maven configuration]."
msgstr "确保 `GRAALVM_HOME` 已配置并指向最新发布的 GraalVM {graalvm-version}。验证 `pom.xml` 是否具有 xref:build-tool-maven[Maven 配置] 中所示的 `native` 配置文件。"

#: _versions/3.6/guides/maven-tooling.adoc
msgid "Create a native executable using:"
msgstr "使用以下方法创建一个原生可执行文件："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "A native executable will be present in `target/`."
msgstr "本地可执行文件将出现在 `target/` ."

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "To run Integration Tests on the native executable, make sure to have the proper xref:build-tool-maven[Maven plugin configured] and launch the `verify` goal."
msgstr "要在本地可执行文件上运行集成测试，请确保 xref:build-tool-maven[配置] 了适当的 xref:build-tool-maven[Maven 插件] ，并启动 `verify` goal。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Build a container friendly executable"
msgstr "构建容器友好型可执行文件"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The native executable will be specific to your operating system.\n"
"To create an executable that will run in a container, use the following:"
msgstr "本地可执行文件将与操作系统相关。要创建可在容器中运行的可执行文件，请使用以下命令："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The produced executable will be a 64-bit Linux executable, so depending on your operating system, it may no longer be runnable.\n"
"However, it's not an issue as we are going to copy it to a Docker container.\n"
"Note that in this case the build itself runs in a Docker container too, so you don't need to have GraalVM installed locally."
msgstr "生成的可执行文件将是一个 64 位 Linux 可执行文件，因此根据操作系统的不同，可能无法继续运行。不过，这不是问题，因为我们将把它复制到 Docker 容器中。请注意，在这种情况下，构建本身也会在 Docker 容器中运行，因此您无需在本地安装 GraalVM。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "By default, the native executable will be generated using the `quay.io/quarkus/ubi-quarkus-mandrel-builder-image:{mandrel-flavor}` Docker image."
msgstr "默认情况下，本地可执行文件将使用 `quay.io/quarkus/ubi-quarkus-mandrel-builder-image:{mandrel-flavor}` Docker 镜像生成。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"If you want to build a native executable with a different Docker image (for instance to use a different GraalVM version),\n"
"use the `-Dquarkus.native.builder-image=<image name>` build argument."
msgstr "如果要使用不同的 Docker 映像构建本地可执行文件（例如使用不同的 GraalVM 版本），请使用 `-Dquarkus.native.builder-image=<image name>` build 参数。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The list of the available Docker images can be found on https://quay.io/repository/quarkus/ubi-quarkus-mandrel-builder-image?tab=tags[quay.io].\n"
"Be aware that a given Quarkus version might not be compatible with all the images available."
msgstr "可用的 Docker 映像列表可在 link:https://quay.io/repository/quarkus/ubi-quarkus-mandrel-builder-image?tab=tags[quay.io] 上找到。请注意，特定的 Quarkus 版本可能无法兼容所有可用的映像。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "You can follow the xref:building-native-image.adoc[Build a native executable guide] as well as xref:deploying-to-kubernetes.adoc[Deploying Application to Kubernetes and OpenShift] for more information."
msgstr "更多信息，请参阅 \" xref:building-native-image.adoc[构建本地可执行文件 \"指南] 以及 \"将 xref:deploying-to-kubernetes.adoc[应用程序部署到 Kubernetes 和 OpenShift] \"。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Maven configuration"
msgstr "Maven 配置"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "If you have not used xref:project-creation[project scaffolding], add the following elements in your `pom.xml`"
msgstr "如果您还没有使用过 xref:project-creation[项目脚手架] ，请在 xref:project-creation[项目脚手架] 中添加以下元素 `pom.xml`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Disable running of integration tests (test names `*IT` and annotated with `@QuarkusIntegrationTest`) on all builds. To run these tests all the time, either remove this property, set its value to `false`, or set `-DskipITs=false` on the command line when you run the build. +\n"
"As mentioned below, this is overridden in the `native` profile."
msgstr ""
"禁止在所有联编过程中运行集成测试（测试名称为 `*IT` 并注有 `@QuarkusIntegrationTest` ）。要一直运行这些测试，可删除此属性，将其值设为 `false` ，或在运行联编时在命令行中设置 `-DskipITs=false` 。\n"
"\n"
" 如下所述，在 `native` 配置文件中，该属性被覆盖。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Optionally use a BOM file to omit the version of the different Quarkus dependencies."
msgstr "可选择使用 BOM 文件省略不同 Quarkus 依赖项的版本。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Use the Quarkus Maven plugin that will hook into the build process."
msgstr "使用 Quarkus Maven 插件，它将与构建过程挂钩。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Enabling Maven plugin extensions will register a Quarkus `MavenLifecycleParticipant` which will make sure the Quarkus classloaders used during the build are properly closed. During the `generate-code` and `generate-code-tests` goals the Quarkus application bootstrap is initialized and re-used in the `build` goal (which actually builds and packages a production application). The Quarkus classloaders will be properly closed in the `build` goal of the `quarkus-maven-plugin`. However, if the build fails in between the `generate-code` or `generate-code-tests` and `build` then the Quarkus augmentation classloader won't be properly closed, which may lead to locking of JAR files that happened to be on the classpath on Windows OS."
msgstr "启用 Maven 插件扩展将注册一个 Quarkus `MavenLifecycleParticipant` ，它将确保在构建过程中使用的 Quarkus 类加载器被正确关闭。在 `generate-code` 和 `generate-code-tests` 目标中，Quarkus 应用程序引导程序将被初始化，并在 `build` 目标（实际构建和打包生产应用程序）中重复使用。在 `build` 目标的 `quarkus-maven-plugin` 中，Quarkus 类加载器将被正确关闭。但是，如果在 `generate-code` 或 `generate-code-tests` 和 `build` 之间的构建失败，Quarkus 增强类加载器将不会被正确关闭，这可能会导致在 Windows 操作系统上锁定类路径上的 JAR 文件。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Add system properties to `maven-surefire-plugin`. +\n"
"`maven.home` is only required if you have custom configuration in `${maven.home}/conf/settings.xml`."
msgstr ""
"在 `maven-surefire-plugin` 中添加系统属性。\n"
" `maven.home` 只有在 `${maven.home}/conf/settings.xml` 中有自定义配置时才需要。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"If you want to test the artifact produced by your build with Integration Tests, add the following plugin configuration. Test names `*IT` and annotated with `@QuarkusIntegrationTest` will be run against the artifact produced by the build (JAR file, container image, etc). See the xref:getting-started-testing.adoc#quarkus-integration-test[Integration Testing guide] for more info. +\n"
"`maven.home` is only required if you have custom configuration in `${maven.home}/conf/settings.xml`."
msgstr ""
"如果要使用集成测试对构建生成的构件进行测试，请添加以下插件配置。测试名称 `*IT` 和注释为 `@QuarkusIntegrationTest` 的测试将针对构建产生的工件（JAR 文件、容器映像等）运行。更多信息请参阅 xref:getting-started-testing.adoc#quarkus-integration-test[集成测试指南] 。\n"
" `maven.home` 只有在 `${maven.home}/conf/settings.xml` 中有自定义配置时才需要。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Use a specific `native` profile for native executable building."
msgstr "使用特定的 `native` 配置文件来构建本地可执行文件。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Enable the `native` package type. The build will therefore produce a native executable."
msgstr "启用 `native` 软件包类型。因此，编译将生成本地可执行文件。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Always run integration tests when building a native image (test names `*IT` and annotated with `@QuarkusIntegrationTest`). +\n"
"If you do not wish to run integration tests when building a native image, simply remove this property altogether or set its value to `true`."
msgstr ""
"在构建本地镜像时始终运行集成测试（测试名称 `*IT` 并用 `@QuarkusIntegrationTest` 注释）。\n"
"\n"
" 如果不希望在构建本地镜像时运行集成测试，只需完全删除此属性或将其值设为 `true` 即可。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Using fast-jar"
msgstr "使用快速密封罐"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`fast-jar` is the default quarkus package type."
msgstr "`fast-jar` 是默认的 quarkus 软件包类型。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The result of the build is a directory under `target` named `quarkus-app`."
msgstr "构建结果是 `target` 下的一个目录，名为 `quarkus-app` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "You can run the application using: `java -jar target/quarkus-app/quarkus-run.jar`."
msgstr "您可以使用以下方式运行应用程序： `java -jar target/quarkus-app/quarkus-run.jar` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"In order to successfully run the produced jar, you need to have the entire contents of the `quarkus-app` directory. If any of the files are missing, the application will not start or\n"
"might not function correctly."
msgstr "为了成功运行生成的 jar，您需要拥有 `quarkus-app` 目录中的全部内容。如果缺少任何文件，应用程序将无法启动或无法正常运行。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The `fast-jar` packaging results in creating an artifact that starts a little faster and consumes slightly less memory than a legacy Quarkus jar\n"
"because it has indexed information about which dependency jar contains classes and resources. It can thus avoid the lookup into potentially every jar\n"
"on the classpath that the legacy jar necessitates, when loading a class or resource."
msgstr "`fast-jar` 打包的结果是，与传统的 Quarkus jar 相比，它的启动速度更快一些，消耗的内存也更少一些，因为它拥有关于哪个依赖 jar 包含类和资源的索引信息。因此，在加载类或资源时，它可以避免传统 jar 在类路径上可能需要查找的所有 jar。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Uber-Jar Creation"
msgstr "创建 Uber-Jar"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"Quarkus Maven plugin supports the generation of Uber-Jars by specifying a `quarkus.package.type=uber-jar` configuration option in your `application.properties`\n"
"(or `<quarkus.package.type>uber-jar</quarkus.package.type>` in your `pom.xml`)."
msgstr "Quarkus Maven 插件支持生成 Uber-Jars，方法是在 `application.properties` （或 `pom.xml` 中的 `<quarkus.package.type>uber-jar</quarkus.package.type>` ）中指定 `quarkus.package.type=uber-jar` 配置选项。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The original jar will still be present in the `target` directory, but it will be renamed to contain the `.original` suffix."
msgstr "原始 jar 仍将存在于 `target` 目录中，但会重命名为包含后缀 `.original` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"When building an Uber-Jar you can specify entries that you want to exclude from the generated jar by using the `quarkus.package.ignored-entries` configuration\n"
"option, this takes a comma separated list of entries to ignore."
msgstr "在创建 Uber-Jar 时，你可以使用 `quarkus.package.ignored-entries` 配置选项，指定要从生成的 jar 中排除的条目，该选项使用逗号分隔要忽略的条目列表。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Uber-Jar creation by default excludes link:https://docs.oracle.com/javase/tutorial/deployment/jar/intro.html[signature files] that might be present in the dependencies of the application."
msgstr "创建 Uber-Jar 时，默认情况下会排除应用程序依赖项中可能存在的 link:https://docs.oracle.com/javase/tutorial/deployment/jar/intro.html[签名文件] 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Uber-Jar's final name is configurable via a Maven's build settings `finalName` option."
msgstr "Uber-Jar 的最终名称可通过 Maven 的构建设置 `finalName` 选项进行配置。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Uber-Jar file name suffix"
msgstr "Uber-Jar 文件名后缀"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"By default the generated uber JAR file name will have the `-runner` suffix, unless it was overriden by configuring a custom one with `quarkus.package.runner-suffix` configuration option.\n"
"If the runner suffix is not desired, it can be disabled by setting `quarkus.package.add-runner-suffix` configuration option to `false`, in which case the uber JAR will replace the original JAR\n"
"file generated by `maven-jar-plugin` for the application module."
msgstr "默认情况下，生成的 uber JAR 文件后缀名为 `-runner` ，除非通过 `quarkus.package.runner-suffix` 配置选项配置自定义后缀名。如果不需要运行程序后缀，可将 `quarkus.package.add-runner-suffix` 配置选项设置为 `false` ，禁用运行程序后缀，在这种情况下，uber JAR 将取代 `maven-jar-plugin` 为应用模块生成的原始 JAR 文件。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Attaching Uber-Jar file as the main project artifact"
msgstr "将 Uber-Jar 文件作为主要项目构件进行附加"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"As long as an Uber-Jar file name is created by appending a suffix, such as `runner`, to the original project JAR file name, the Uber-Jar file name suffix will also be used as the Maven\n"
"artifact classifier for the Uber-Jar artifact. There are two ways to attach an Uber-Jar as the main project artifact (without the classifier):"
msgstr "只要 Uber-Jar 文件名是通过在原始项目 JAR 文件名后添加后缀（如 `runner` ）创建的，Uber-Jar 文件名后缀也将用作 Uber-Jar 构件的 Maven 构件分类器。有两种方法可将 Uber-Jar 附加为主要项目工件（不含分类器）："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "set `quarkus.package.add-runner-suffix=false`, which will disable the addition of the file name suffix and, by doing that, will replace the original project JAR on the file system;"
msgstr "设置 `quarkus.package.add-runner-suffix=false` ，这将禁用添加文件名后缀的功能，从而替换文件系统中的原始项目 JAR；"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "set `attachRunnerAsMainArtifact` parameter of the `quarkus:build` goal to `true`."
msgstr "将 `quarkus:build` 目标的 `attachRunnerAsMainArtifact` 参数设置为 `true` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Working with multi-module projects"
msgstr "使用多模块项目"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "By default, Quarkus will not discover CDI beans inside another module."
msgstr "默认情况下，Quarkus 不会发现其他模块内的 CDI Bean。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The best way to enable CDI bean discovery for a module in a multi-module project would be to include the `jandex-maven-plugin`,\n"
"unless it is the main application module already configured with the quarkus-maven-plugin, in which case it will be indexed automatically."
msgstr "为多模块项目中的模块启用 CDI Bean 发现功能的最佳方法是包含 `jandex-maven-plugin` ，除非它是已使用 quarkus-maven-plugin 配置的主应用模块，在这种情况下，它将被自动索引。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "More information on this topic can be found on the xref:cdi-reference.adoc#bean_discovery[Bean Discovery] section of the CDI guide."
msgstr "有关此主题的更多信息，请参阅 CDI 指南中的 \" xref:cdi-reference.adoc#bean_discovery[豆子发现] \"部分。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Maven test plugin configuration"
msgstr "Maven 测试插件配置"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`maven-surefire-plugin` and `maven-failsafe-plugin` configurations showed above will work in most cases. However, there could be cases when extra configuration will be required."
msgstr "`maven-surefire-plugin` 和 配置在大多数情况下都有效。不过，在某些情况下可能需要额外的配置。 `maven-failsafe-plugin` "

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The reason is that, Quarkus may need to re-resolve application dependencies during the test phase to set up the test classpath for the tests. The original Maven resolver used in previous build phases\n"
"will not be available in the test process and, as a conseqence, Quarkus will need to initialize a new one. To make sure the new resolver is initialized correctly, the relevant configuration options\n"
"will need to be passed to the test process."
msgstr "原因是在测试阶段，Quarkus 可能需要重新解析应用程序的依赖关系，以便为测试设置测试类路径。因此，Quarkus 需要初始化一个新的解析器。为确保新的解析器被正确初始化，需要将相关配置选项传递给测试进程。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Maven user settings"
msgstr "Maven 用户设置"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"A path to the Maven user settings file may need to be passed to test processes, for example, in case the Maven build process was not launched using the default `mvn` scripts included in the Maven distribution.\n"
"It could be done in the following way:"
msgstr "例如，如果 Maven 编译过程没有使用 Maven 发行版中默认的 `mvn` 脚本启动，则可能需要向测试过程传递 Maven 用户设置文件的路径。具体方法如下："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Remote repository access through authenticated HTTPS"
msgstr "通过认证的 HTTPS 进行远程存储库访问"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In case a remote Maven repository requires link:https://maven.apache.org/guides/mini/guide-repository-ssl.html[authenticated HTTPS access configuration], some or all of the following properties will need to be passed to the test plugins:"
msgstr "如果远程 Maven 资源库需要 link:https://maven.apache.org/guides/mini/guide-repository-ssl.html[经过身份验证的 HTTPS 访问配置] ，则需要将以下部分或全部属性传递给测试插件："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Building with a specific configuration profile"
msgstr "使用特定配置文件进行构建"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Quarkus supports xref:config-reference.adoc#profiles[configuration profiles] in order to provide a specific configuration according to the target environment."
msgstr "Quarkus 支持 xref:config-reference.adoc#profiles[配置文件] ，以便根据目标环境提供特定配置。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The profile can be provided directly in the Maven build's command thanks to the system property `quarkus.profile` with a command of type:"
msgstr "通过带有命令类型的系统属性 `quarkus.profile` ，可以在 Maven 构建命令中直接提供配置文件："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "However, it is also possible to specify the profile directly in the POM file of the project using project properties, the Quarkus Maven plugin configuration properties or system properties set in the Quarkus Maven plugin configuration."
msgstr "不过，也可以使用项目属性、Quarkus Maven 插件配置属性或在 Quarkus Maven 插件配置中设置的系统属性，直接在项目的 POM 文件中指定配置文件。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In order of precedence (greater precedence first):"
msgstr "按优先顺序排列（先大后小）："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "1. System properties set in the Quarkus Maven plugin configuration"
msgstr ""
"\n"
" 在 Quarkus Maven 插件配置中设置的系统属性"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The default configuration profile of this project is `prod-aws`."
msgstr "该项目的默认配置文件是 `prod-aws` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "2. Quarkus Maven plugin configuration properties"
msgstr ""
"\n"
" Quarkus Maven 插件配置属性"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "3. Project properties"
msgstr ""
"\n"
" 项目属性"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Whatever the approach is chosen, the profile can still be overridden with the `quarkus.profile` system property or the `QUARKUS_PROFILE` environment variable."
msgstr "无论选择哪种方法，都可以通过 `quarkus.profile` 系统属性或 `QUARKUS_PROFILE` 环境变量覆盖配置文件。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Building several artifacts from a single module"
msgstr "从一个模块构建多个人工制品"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"In some particular use cases, it can be interesting to build several artifacts of your application from the same module.\n"
"A typical example is when you want to build your application with different configuration profiles."
msgstr "在某些特殊使用情况下，从同一个模块构建多个应用程序构件可能会很有趣。一个典型的例子是，您想用不同的配置文件构建应用程序。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "In that case, it is possible to add as many executions as needed to the Quarkus Maven plugin configuration."
msgstr "在这种情况下，可以根据需要在 Quarkus Maven 插件配置中添加执行次数。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Below is an example of a Quarkus Maven plugin configuration that will produce two builds of the same application: one using the `prod-oracle` profile and the other one using the `prod-postgresql` profile."
msgstr "下面是一个 Quarkus Maven 插件配置示例，它将生成同一应用程序的两个构建版本：一个使用 `prod-oracle` 配置文件，另一个使用 `prod-postgresql` 配置文件。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The default configuration profile of the first execution of the plugin is `prod-oracle`."
msgstr "首次执行插件的默认配置文件是 `prod-oracle` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The output directory of the first execution of the plugin is set to `oracle-quarkus-app` instead of `quarkus-app` to have a dedicated directory."
msgstr "首次执行插件时的输出目录设置为 `oracle-quarkus-app` ，而不是 `quarkus-app` ，以便有一个专用目录。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The default configuration profile of the second execution of the plugin is `prod-postgresql`."
msgstr "插件第二次执行的默认配置文件是 `prod-postgresql` 。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The output directory of the second execution of the plugin is set to `postgresql-quarkus-app` instead of `quarkus-app` to have a dedicated directory."
msgstr "插件第二次执行的输出目录设置为 `postgresql-quarkus-app` ，而不是 `quarkus-app` ，以便有一个专用目录。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "With the configuration above, both profile builds will be using the same dependencies, so if we added dependencies on the Oracle and PostgreSQL drivers to the application, both of the drivers will appear in both builds."
msgstr "有了上述配置，两个配置文件的构建都将使用相同的依赖项，因此，如果我们在应用程序中添加了 Oracle 和 PostgreSQL 驱动程序的依赖项，那么这两个驱动程序都将出现在两个构建中。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "To isolate profile-specific dependencies from other profiles, the JDBC drivers could be added as optional dependencies to the application but configured to be included in each profile that requires them, e.g.:"
msgstr "为了将特定配置文件的依赖关系与其他配置文件隔离开来，可以将 JDBC 驱动程序作为可选依赖关系添加到应用程序中，但将其配置为包含在每个需要它们的配置文件中，例如"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The JDBC driver of PostgreSQL is defined as an optional dependency"
msgstr "PostgreSQL 的 JDBC 驱动程序被定义为可选依赖项"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "For backward compatibility reasons, it is necessary to explicitly indicate that the optional dependencies need to be filtered."
msgstr "出于向后兼容的原因，有必要明确指出需要过滤可选依赖项。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Only the optional dependency corresponding to the JDBC driver of PostgreSQL is expected in the final artifact."
msgstr "最终成品中只有与 PostgreSQL 的 JDBC 驱动程序相对应的可选依赖项。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "If you have more than one optional dependency to declare in the `quarkus.package.included-optional-dependencies` tag, make sure they are separated with `,` (e.g. `org.postgresql:postgresql::jar,com.foo:bar::jar`)."
msgstr "如果要在 `quarkus.package.included-optional-dependencies` 标记中声明多个可选依赖项，请确保用 `,` 将它们分隔开来（例如 `org.postgresql:postgresql::jar,com.foo:bar::jar` ）。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Configuring the Project Output"
msgstr "配置项目输出"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"There are a several configuration options that will define what the output of your project build will be.\n"
"These are provided in `application.properties` the same as any other config property."
msgstr "有几个配置选项可以定义项目构建的输出结果。与其他配置属性一样，这些选项也在 `application.properties` 中提供。"

#: _versions/3.6/guides/maven-tooling.adoc
msgid "The properties are shown below:"
msgstr "这些属性显示如下："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Custom test configuration profile in JVM mode"
msgstr "JVM 模式下的自定义测试配置文件"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"By default, Quarkus tests in JVM mode are run using the `test` configuration profile. If you are not familiar with Quarkus\n"
"configuration profiles, everything you need to know is explained in the\n"
"xref:config-reference.adoc#profiles[Configuration Profiles Documentation]."
msgstr "默认情况下，JVM 模式下的 Quarkus 测试使用 `test` 配置文件运行。如果你不熟悉 Quarkus 配置文件，你需要知道的一切都可以在 xref:config-reference.adoc#profiles[配置文件文档] 中找到。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"It is however possible to use a custom configuration profile for your tests with the Maven Surefire and Maven Failsafe\n"
"configurations shown below. This can be useful if you need for example to run some tests using a specific database which is not\n"
"your default testing database."
msgstr "不过，您也可以使用下图所示的 Maven Surefire 和 Maven Failsafe 配置，为测试使用自定义配置文件。例如，如果您需要使用特定数据库（非默认测试数据库）运行某些测试，这将非常有用。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The `foo` configuration profile will be used to run the tests."
msgstr "`foo` 配置文件将用于运行测试。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"It is not possible to use a custom test configuration profile in native mode for now. Native tests are always run using the\n"
"`prod` profile."
msgstr "目前还不能在本地模式下使用自定义测试配置文件。本地测试始终使用 `prod` 配置文件运行。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Bootstrap Maven properties"
msgstr "Bootstrap Maven 属性"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Quarkus bootstrap includes a Maven resolver implementation that is used to resolve application runtime and build time dependencies. The Quarkus Maven resolver is initialized from the same Maven command line that launched the build, test or dev mode. Typically, there is no need to add any extra configuration for it. However, there could be cases where an extra configuration option may be necessary to properly resolve application dependencies in test or dev modes, or IDEs."
msgstr "Quarkus 引导包包含一个 Maven 解析器实现，用于解析应用程序运行时和构建时的依赖关系。Quarkus Maven 解析器由启动构建、测试或开发模式的同一 Maven 命令行初始化。通常情况下，无需为其添加任何额外配置。不过，在某些情况下，可能需要额外的配置选项，以便在测试或开发模式或集成开发环境中正确解析应用程序的依赖关系。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Maven test plugins (such as `surefire` and `failsafe`), for example, are not propagating build system properties to the running tests by default. Which means some system properties set by the Maven CLI aren't available for the Quarkus Maven resolver initialized for the tests, which may result in test dependencies being resolved using different settings than the main Maven build."
msgstr "例如，Maven 测试插件（如 `surefire` 和 `failsafe` ）默认情况下不会将构建系统属性传播给正在运行的测试。这意味着由 Maven CLI 设置的某些系统属性无法用于为测试初始化的 Quarkus Maven 解析器，这可能导致测试依赖项的解析设置与主 Maven 构建不同。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Here is a list of system properties the Quarkus bootstrap Maven resolver checks during its initialization."
msgstr "以下是 Quarkus 引导包 Maven 解析器在初始化过程中检查的系统属性列表。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Property name"
msgstr "财产名称"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`maven.home`"
msgstr "`maven.home`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`MAVEN_HOME` envvar"
msgstr "`MAVEN_HOME` envvar"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The Maven home dir is used to resolve the global settings file unless it was explicitly provided on the command line with the `-gs` argument"
msgstr "除非在命令行中使用 `-gs` 参数明确提供，否则 Maven home 目录将用于解析全局设置文件"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`maven.settings`"
msgstr "`maven.settings`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`~/.m2/settings.xml`"
msgstr "`~/.m2/settings.xml`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Unless the custom settings file has been provided with the `-s` argument, this property can be used to point the resolver to a custom Maven settings file"
msgstr "除非通过 `-s` 参数提供了自定义设置文件，否则该属性可用于将解析器指向自定义 Maven 设置文件"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`maven.repo.local`"
msgstr "`maven.repo.local`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`~/.m2/repository`"
msgstr "`~/.m2/repository`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "This property could be used to configure a custom local Maven repository directory, if it is different from the default one and the one specified in the `settings.xml`"
msgstr "该属性可用于配置自定义的本地 Maven 资源库目录，如果该目录不同于默认目录和在 `settings.xml`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`maven.top-level-basedir`"
msgstr "`maven.top-level-basedir`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "none"
msgstr "无"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "This property may be useful to help the Maven resolver identify the top-level Maven project in the workspace. By default, the Maven resolver will be discovering a project's workspace by navigating the parent-module POM relationship. However, there could be project layouts that are using an aggregator module which isn't appearing as the parent for its modules. In this case, this property will help the Quarkus Maven resolver to properly discover the workspace."
msgstr "该属性可帮助 Maven 解析器识别工作区中的顶层 Maven 项目。默认情况下，Maven 解析器将通过导航父模块 POM 关系来发现项目的工作区。不过，有些项目布局使用的聚合器模块并不是其模块的父模块。在这种情况下，该属性将帮助 Quarkus Maven 解析器正确发现工作区。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`quarkus.bootstrap.effective-model-builder`"
msgstr "`quarkus.bootstrap.effective-model-builder`"

#: _versions/3.6/guides/maven-tooling.adoc
msgid "`false`"
msgstr "`false` "

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "By default, the Quarkus Maven resolver is reading project's POMs directly when discovering the project's layout. While in most cases it works well enough and relatively fast, reading raw POMs has its limitation. E.g. if a POM includes modules in a profile, these modules will not be discovered. This system property enables project's layout discovery based on the effective POM models, that are properly interpolated, instead of the raw ones. The reason this option is not enabled by default is it may appear to be significantly more time-consuming that could increase, e.g. CI testing times. Until there is a better approach found that could be used by default, projects that require it should enable this option."
msgstr "默认情况下，Quarkus Maven 解析器在发现项目布局时会直接读取项目的 POM。虽然在大多数情况下，读取原始 POM 的速度相对较快，但也有其局限性。例如，如果 POM 在配置文件中包含模块，这些模块将不会被发现。该系统属性可以根据经过适当插值的有效 POM 模型（而不是原始模型）来发现项目布局。默认情况下不启用该选项的原因是，它可能会耗费更多时间，从而增加 CI 测试时间等。在找到可以默认使用的更好方法之前，需要使用该选项的项目应启用该选项。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "These system properties above could be added to, e.g., a `surefire` and/or `failsafe` plugin configuration as"
msgstr "上述系统属性可添加到 `surefire` 和/或 `failsafe` 等插件配置中，如"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Propagate `maven.home` system property set by the Maven CLI to the tests"
msgstr "将 Maven CLI 设置的 `maven.home` 系统属性传播给测试"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Set the Maven local repository directory for the tests"
msgstr "为测试设置 Maven 本地存储库目录"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Set the Maven settings file the tests"
msgstr "设置测试的 Maven 设置文件"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Point to the top-level project directory for the tests"
msgstr "指向测试的顶级项目目录"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Enable effective POM-based project layout discovery"
msgstr "有效发现基于 POM 的项目布局"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Top-level vs Multi-module project directory"
msgstr "顶层与多模块项目目录"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"In Maven there appears to be a notion of the top-level project (that is exposed as a project property `${session.topLevelProject.basedir.absolutePath}`)\n"
"and the multi-module project directory (that is available as property `${maven.multiModuleProjectDirectory}`). These directories might not always match!"
msgstr "在 Maven 中，似乎存在顶层项目（作为项目属性 `${session.topLevelProject.basedir.absolutePath}` ）和多模块项目目录（作为属性 `${maven.multiModuleProjectDirectory}` ）的概念。这些目录可能并不总是匹配的！"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`maven.multiModuleProjectDirectory` is meant to be consulted by the Maven code itself and not something to be relied upon by user code. So, if you find it useful, use it at your own risk!"
msgstr "`maven.multiModuleProjectDirectory` 仅供 Maven 代码本身参考，用户代码不可依赖。因此，如果您觉得它有用，请自行承担使用风险！"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The `${maven.multiModuleProjectDirectory}` will be resolved to the first directory that contains `.mvn` directory as its child going up the workspace file system tree\n"
"starting from the current directory (or the one specified with the `-f` argument) from which the `mvn` command was launched. If the `.mvn` directory was not found, however,\n"
"the `${maven.multiModuleProjectDirectory}` will be pointing to the directory from which the `mvn` command was launched (or the one targeted with the `-f` argument)."
msgstr "`${maven.multiModuleProjectDirectory}` 将解析为从 `mvn` 命令的当前目录（或使用 `-f` 参数指定的目录）开始的工作区文件系统树上第一个包含 `.mvn` 目录作为子目录的目录。如果找不到 `.mvn` 目录， `${maven.multiModuleProjectDirectory}` 将指向 `mvn` 命令的启动目录（或使用 `-f` 参数指定的目录）。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The `${session.topLevelProject.basedir.absolutePath}` will be pointing either to the directory from which the `mvn` command was launched or to the directory targeted with\n"
"the `-f` argument, if it was specified."
msgstr "`${session.topLevelProject.basedir.absolutePath}` 将指向启动 `mvn` 命令的目录，或 `-f` 参数（如果已指定）的目标目录。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Quarkus project info"
msgstr "Quarkus 项目信息"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "This goal was introduced in Quarkus Maven plugin 2.7.0.Final and can be used in projects that are based on Quarkus version 2.0.0.Final or later."
msgstr "该目标在 Quarkus Maven 插件 2.7.0.Final 中引入，可用于基于 Quarkus 2.0.0.Final 或更高版本的项目。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid ""
"The Quarkus Maven plugin includes a goal called `info` (currently marked as 'experimental') that logs Quarkus-specific information about the project, such as: the imported Quarkus platform BOMs and the Quarkus extensions found among the project dependencies.\n"
"In a multi-module project `quarkus:info` will assume that the current module, in which it is executed, is the main module of the application."
msgstr "Quarkus Maven 插件包含一个名为 `info` 的目标（当前标记为 \"实验\"），它记录项目的 Quarkus 特定信息，例如：导入的 Quarkus 平台 BOM 和项目依赖项中的 Quarkus 扩展。在多模块项目中， `quarkus:info` 将假定当前执行的模块是应用程序的主模块。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The report generated by `quarkus:info` is not currently including the Quarkus Maven plugin information, however it's planned to be added in the future releases."
msgstr "`quarkus:info` 生成的报告目前不包括 Quarkus Maven 插件信息，但计划在今后的版本中添加。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Here is an example `info` output for a simple project:"
msgstr "下面是一个简单项目的 `info` 输出示例："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Quarkus platform BOMs imported in the project (BOMs imported by parent POMs will also be reported)"
msgstr "项目中导入的 Quarkus 平台 BOM（也会报告由父 POM 导入的 BOM）"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Direct Quarkus extension dependencies managed by the `quarkus-bom`"
msgstr "直接的 Quarkus 扩展依赖关系，由 `quarkus-bom`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Direct Quarkus extension dependencies managed by the `quarkus-camel-bom`"
msgstr "直接的 Quarkus 扩展依赖关系，由 `quarkus-camel-bom`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Direct Quarkus extensions dependencies that aren't managed by Quarkus BOMs but found in the Quarkus extension registry"
msgstr "不属于 Quarkus BOM 管理但在 Quarkus 扩展注册表中找到的直接 Quarkus 扩展依赖项"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`quarkus:info` will also report Quarkus extensions that aren't found in the Quarkus extension registries if those are present among the project dependencies, indicating they have an 'unknown origin'."
msgstr "`quarkus:info` 也会报告在 Quarkus 扩展注册表中找不到的 Quarkus 扩展，如果这些扩展出现在项目依赖项中，则表明其 \"来源不明\"。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Highlighting misaligned versions"
msgstr "突出显示不对齐的版本"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "`quarkus:info` will also highlight basic Quarkus dependency version misalignments, in case they are detected. For example, if we modify the project mentioned above by removing the `camel-quarkus-rabbitmq` extension from the dependencies and adding a `2.6.3.Final` `<version>` element to the `quarkus-resteasy-reactive` dependency that is managed by the `quarkus-bom` and then run `quarkus:info` again, we'll see something like:"
msgstr "`quarkus:info` 也会高亮显示基本的 Quarkus 依赖关系版本错位，以防被检测到。例如，如果我们修改上述项目，从依赖关系中移除 扩展，并在由 管理的 依赖关系中添加  元素，然后再次运行 ，就会看到类似的内容： `camel-quarkus-rabbitmq` `quarkus-bom` `quarkus-resteasy-reactive` `2.6.3.Final` `<version>` `quarkus:info` "

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The `quarkus-camel-bom` import is now reported as 'unnecessary' since none of the Quarkus extensions it includes are found among the project dependencies"
msgstr "`quarkus-camel-bom` 导入现在被报告为 \"不必要\"，因为在项目依赖项中找不到它所包含的任何 Quarkus 扩展名"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The version `2.6.3.Final` of the `quarkus-resteasy-reactive` is now reported as being misaligned with the version managed by the Quarkus platform BOM imported in the project, which is {quarkus-version}"
msgstr "`quarkus-resteasy-reactive` 的版本 `2.6.3.Final` 现在被报告为与项目中导入的 Quarkus 平台 BOM 管理的版本（{quarkus-version}）不一致。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Quarkus project update"
msgstr "Quarkus 项目最新情况"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The `quarkus:update` goal (currently marked as 'experimental') provided by the Quarkus Maven plugin can be used to check whether there are Quarkus-related updates available for a project, such as: new releases of the relevant Quarkus platform BOMs and non-platform Quarkus extensions present in the project. In a multi-module project the `update` goal is meant to be executed from the main Quarkus application module."
msgstr "Quarkus Maven 插件提供的 `quarkus:update` 目标（当前标记为 \"实验\"）可用于检查项目中是否有与 Quarkus 相关的更新，例如：相关 Quarkus 平台 BOM 的新版本以及项目中存在的非平台 Quarkus 扩展。在多模块项目中， `update` 目标应在主要 Quarkus 应用模块中执行。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "At this point, the `quarkus:update` goal does not actually apply the recommended updates but simply reports what they are and how to apply them manually."
msgstr "此时， `quarkus:update` 目标并不实际应用推荐的更新，而只是报告它们是什么以及如何手动应用它们。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The Quarkus Maven plugin version isn't currently included in the update report, however it's planned to be added in the future releases."
msgstr "Quarkus Maven 插件版本目前未包含在更新报告中，但计划在未来的版本中添加。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The way `quarkus:update` works, first, all the direct Quarkus extension dependencies of the project are collected (those that are managed by the Quarkus platform BOMs and those that aren't but found in the Quarkus extension registries). Then the configured Quarkus extension registries (typically the `registry.quarkus.io`) will be queried for the latest recommended/supported Quarkus platform versions and non-platform Quarkus extensions compatible with them. The algorithm will then select the latest compatible combination of all the extensions found in the project, assuming such a combination actually exists. Otherwise, no updates will be suggested."
msgstr "`quarkus:update` 的工作方式是：首先，收集项目的所有直接 Quarkus 扩展依赖项（那些由 Quarkus 平台 BOM 管理的依赖项和那些不在 Quarkus 扩展注册表中的依赖项）。然后，将查询已配置的 Quarkus 扩展注册表（通常是 `registry.quarkus.io` ），以获得最新推荐/支持的 Quarkus 平台版本以及与之兼容的非平台 Quarkus 扩展。然后，该算法将从项目中找到的所有扩展中选择最新的兼容组合，前提是这种组合确实存在。否则，将不建议更新。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Assuming we have a project including Kogito, Camel and core Quarkus extensions available in the Quarkus platform based on Quarkus `2.7.1.Final`, the output of the `quarkus:update` would look like:"
msgstr "假设我们有一个项目，其中包括 Kogito、Camel 和 Quarkus 平台中基于 Quarkus `2.7.1.Final` 的核心 Quarkus 扩展，那么 `quarkus:update` 的输出结果将是这样的："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "A list of currently recommended Quarkus platform BOM updates"
msgstr "目前推荐的 Quarkus 平台 BOM 更新列表"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Typically, a single project property will be used to manage all the Quarkus platform BOMs but the implementation isn't currently smart enough to point that out and will report updates for each BOM individually."
msgstr "通常情况下，单个项目属性将用于管理所有 Quarkus 平台 BOM，但目前的实施还没有智能到能够指出这一点，而是会单独报告每个 BOM 的更新。"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "If we modify the project to remove all the Camel Quarkus extensions from the project, change the version of the `quarkus-resteasy-reactive` extension to `2.6.3.Final` and downgrade `quarkus-prettytime` which is not included in the Quarkus platform BOMs to `0.2.0`, `quarkus:update` will report something like:"
msgstr "如果我们修改项目，移除项目中的所有 Camel Quarkus 扩展，将 `quarkus-resteasy-reactive` 扩展的版本更改为 `2.6.3.Final` ，并将不包含在 Quarkus 平台 BOM 中的 `quarkus-prettytime` 降级为 `0.2.0` ， `quarkus:update` 将报告类似内容："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "A list of the currently recommended Quarkus platform BOM updates for the project"
msgstr "目前为项目推荐的 Quarkus 平台 BOM 更新列表"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Given that the project does not include any Camel Quarkus extensions, the BOM import is recommended to be removed"
msgstr "鉴于该项目不包括任何 Camel Quarkus 扩展，建议删除 BOM 导入功能"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "An outdated version of the `quarkus-resteasy-reactive` is recommended to be removed in favor of the one managed by the `quarkus-bom`"
msgstr "建议删除 `quarkus-resteasy-reactive` 的过时版本，改用由 `quarkus-bom`"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "The latest compatible version of the `quarkus-prettytime` extension"
msgstr "`quarkus-prettytime` 扩展程序的最新兼容版本"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "Quarkus project rectify"
msgstr "夸克项目整改"

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "As was mentioned above, `quarkus:info`, besides reporting Quarkus platform and extension versions, performs a quick version alignment check, to make sure the extension versions used in the project are compatible with the imported Quarkus platform BOMs. If misalignments are detected, the following warning message will be logged:"
msgstr "如上所述， `quarkus:info` 除了报告 Quarkus 平台和扩展版本外，还会执行快速版本对齐检查，以确保项目中使用的扩展版本与导入的 Quarkus 平台 BOM 兼容。如果检测到对齐错误，将记录以下警告信息："

#: _versions/3.6/guides/maven-tooling.adoc
#, fuzzy
msgid "When the `rectify` option is enabled, `quarkus:update`, instead of suggesting the latest recommended Quarkus version updates, will log update instructions to simply align the extension dependency versions found in the project with the currently imported Quarkus platform BOMs."
msgstr "启用 `rectify` 选项后， `quarkus:update` ，而不是建议使用最新的 Quarkus 版本更新，而是记录更新说明，以便简单地将项目中发现的扩展依赖版本与当前导入的 Quarkus 平台 BOM 对齐。"
