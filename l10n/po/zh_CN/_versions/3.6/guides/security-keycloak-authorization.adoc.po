msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Using OpenID Connect (OIDC) and Keycloak to Centralize Authorization"
msgstr "使用OpenID连接（OIDC）与Keycloak来做集中式授权"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "This guide demonstrates how your Quarkus application can authorize a bearer token access to protected resources using https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services]."
msgstr "本指南展示了如何在您的Quarkus应用程序中使用 link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak授权服务] 来授权不记名token(bearer token)访问受保护的资源。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The `quarkus-keycloak-authorization` extension is based on `quarkus-oidc` and provides a policy enforcer that enforces access to protected resources based on permissions managed by Keycloak and currently can only be used with the Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC service applications]."
msgstr "`quarkus-keycloak-authorization` 扩展基于 `quarkus-oidc` ，提供了一个策略执行器，可根据 Keycloak 管理的权限强制访问受保护的资源，目前只能与 Quarkus xref:security-oidc-bearer-token-authentication.adoc[OIDC 服务应用程序] 一起使用。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "It provides a flexible and dynamic authorization capability based on Resource-Based Access Control."
msgstr "它以基于资源的访问控制为基础，提供灵活、动态的授权能力。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Instead of explicitly enforcing access based on some specific access control mechanism such as Role-Based Access Control(RBAC), `quarkus-keycloak-authorization` checks whether a request is allowed to access a resource based on its name, identifier or URI by sending a bearer access token verified by `quarkus-oidc` to Keycloak Authorization Services where an authorization decision is made."
msgstr "`quarkus-keycloak-authorization` 并不明确地根据某些特定的访问控制机制（如基于角色的访问控制（RBAC））来执行访问，而是通过向 Keycloak 授权服务发送经 `quarkus-oidc` 验证的承载访问令牌来检查请求是否允许根据资源名称、标识符或 URI 访问该资源，并由 Keycloak 授权服务做出授权决定。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Use `quarkus-keycloak-authorization` only if you work with Keycloak and have Keycloak Authorization Services enabled to make authorization decisions. Use `quarkus-oidc` if you do not work with Keycloak or work with Keycloak but do not have its Keycloak Authorization Services enabled to make authorization decisions."
msgstr "如果您与 Keycloak 合作并启用了 Keycloak 授权服务以作出授权决定，请使用 `quarkus-keycloak-authorization` 。如果您不与 Keycloak 合作，或与 Keycloak 合作但未启用 Keycloak 授权服务以作出授权决定，请使用 `quarkus-oidc` 。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "By externalizing authorization from your application, you are allowed to protect your applications using different access control mechanisms as well as avoid re-deploying your application every time your security requirements change, where Keycloak will be acting as a centralized authorization service from where your protected resources and their associated permissions are managed."
msgstr "通过将授权功能从您的应用程序中抽离并外部化，您可以使用不同的访问控制机制来保护您的应用程序，也可以避免在您的安全控制需求发生变化时重新部署您的应用程序。Keycloak将作为一个集中的授权服务，它允许您的受保护资源和它们的相关权限在它这里得到管理。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "See the xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication] guide for more information about `Bearer Token` authentication mechanism. It is important to realize that it is the `Bearer Token` authentication mechanism which does the authentication and creates a security identity - while the `quarkus-keycloak-authorization` extension is responsible for applying a Keycloak Authorization Policy to this identity based on the current request path and other policy settings."
msgstr "有关 `Bearer Token` 身份验证机制的更多信息，请参阅 xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token] 身份验证指南。重要的是， `Bearer Token` 身份验证机制负责进行身份验证并创建安全身份，而 `quarkus-keycloak-authorization` 扩展则负责根据当前请求路径和其他策略设置对该身份应用 Keycloak 授权策略。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Please see https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak Authorization Services documentation] for more information."
msgstr "更多信息，请参阅 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_overview[Keycloak 授权服务文档] 。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "https://stedolan.github.io/jq/[jq tool]"
msgstr "link:https://stedolan.github.io/jq/[jq工具]"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "https://www.keycloak.org/docs/latest/server_installation/index.html[Keycloak]"
msgstr "link:https://www.keycloak.org/docs/latest/server_installation/index.html[Keycloak]"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Architecture"
msgstr "架构"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "In this example, we build a very simple microservice which offers two endpoints:"
msgstr "在该例子中，我们建立了一个非常简单的微服务并提供了两个节点："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "`/api/users/me`"
msgstr "`/api/users/me`"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "`/api/admin`"
msgstr "`/api/admin`"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "These endpoints are protected and can only be accessed if a client is sending a bearer token along with the request, which must be valid (e.g.: signature, expiration and audience) and trusted by the microservice."
msgstr "这些节点是受保护的，只有当客户端将一个bearer token与请求一起发送时才能被访问，而且该token必须是有效的（例如：签名、过期时间和受众），并且要得到微服务的信任。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"The bearer token is issued by a Keycloak Server and represents the subject to which the token was issued for.\n"
"For being an OAuth 2.0 Authorization Server, the token also references the client acting on behalf of the user."
msgstr "不记名令牌是由Keycloak服务器颁发的，并代表令牌发放对象的主体。对于OAuth 2.0授权服务器来说，该令牌还引用了代表用户的客户端。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"The `/api/users/me` endpoint can be accessed by any user with a valid token.\n"
"As a response, it returns a JSON document with details about the user where these details are obtained from the information carried on the token.\n"
"This endpoint is protected with RBAC (Role-Based Access Control) and only users granted with the `user` role can access this endpoint."
msgstr "`/api/users/me` 节点可由任何拥有有效token的用户访问。作为响应，它返回一个JSON文档，其中包含关于用户的详细信息，这些详细信息是从token上的信息中获得的。这个节点受到RBAC（基于角色的访问控制）的保护，只有被授予 `user` 角色的用户才能访问这个节点。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "The `/api/admin` endpoint is protected with RBAC (Role-Based Access Control) and only users granted with the `admin` role can access it."
msgstr "`/api/admin` 节点受到RBAC（基于角色的访问控制）的保护，只有被授予 `admin` 角色的用户才能访问它。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"This is a very simple example using RBAC policies to govern access to your resources.\n"
"However, Keycloak supports other types of policies that you can use to perform even more fine-grained access control.\n"
"By using this example, you'll see that your application is completely decoupled from your authorization policies with enforcement being purely based on the accessed resource."
msgstr "该示例非常简单，它使用RBAC策略来管理对您的资源的访问。但是，Keycloak也支持其他类型的策略，您可以用这些策略来执行更细粒度的访问控制。通过这个例子，您会发现您的应用程序与授权策略完全解耦，授权策略的执行完全基于所访问的资源。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Solution"
msgstr "解决方案"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"We recommend that you follow the instructions in the next sections and create the application step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照下一节的说明逐步创建应用程序。然而，您可以直接转到已完成的示例。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "The solution is located in the `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[directory]."
msgstr "解决方案位于 `security-keycloak-authorization-quickstart` link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart[目录] 中。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Creating the Project"
msgstr "创建项目"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"First, we need a new project.\n"
"Create a new project with the following command:"
msgstr "首先，我们需要一个新的项目。使用以下命令创建一个新的项目:"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "This command generates a project, importing the `keycloak-authorization` extension which is an implementation of a Keycloak Adapter for Quarkus applications and provides all the necessary capabilities to integrate with a Keycloak Server and perform bearer token authorization."
msgstr "该命令生成一个项目并导入 `keycloak-authorization` 扩展，该扩展是一个用于Quarkus应用程序的Keycloak适配器的实现，并提供所有必要的功能来与Keycloak服务器集成并执行bearer token授权。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"If you already have your Quarkus project configured, you can add the `oidc` and `keycloak-authorization` extensions\n"
"to your project by running the following command in your project base directory:"
msgstr "如果您已经配置了Quarkus项目，您可以通过在项目根目录中执行以下命令将 `oidc` 和 `keycloak-authorization` 扩展添加到您的项目中:"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "This will add the following to your build file:"
msgstr "这会将以下内容添加到你的构建文件中:"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Let's start by implementing the `/api/users/me` endpoint.\n"
"As you can see from the source code below it is just a regular Jakarta REST resource:"
msgstr "让我们从实现 `/api/users/me` 端点开始。从下面的源代码中可以看到，这只是一个普通的 Jakarta REST 资源："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "The source code for the `/api/admin` endpoint is also very simple:"
msgstr "`/api/admin` 节点的源代码也非常简单："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"Note that we did not define any annotation such as `@RolesAllowed` to explicitly enforce access to a resource.\n"
"The extension will be responsible to map the URIs of the protected resources you have in Keycloak and evaluate the permissions accordingly, granting or denying access depending on the permissions that will be granted by Keycloak."
msgstr "请注意，我们没有定义任何注解，如 `@RolesAllowed` ，以明确地执行对资源的访问。扩展将负责映射在Keycloak中的受保护资源的URI，并相应地评估权限，然后根据由Keycloak授予的权限来授予或拒绝访问。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Configuring the application"
msgstr "配置该应用程序"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "The OpenID Connect extension allows you to define the adapter configuration using the `application.properties` file which should be located at the `src/main/resources` directory."
msgstr "OpenID Connect扩展允许您使用 `application.properties` 来定义适配器配置，该文件应位于 `src/main/resources` 目录下。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Adding a `%prod.` profile prefix to `quarkus.oidc.auth-server-url` ensures that `Dev Services for Keycloak` will launch a container for you when the application is run in a dev mode. See xref:keycloak-dev-mode[Running the Application in Dev mode] section below for more information."
msgstr "在 `quarkus.oidc.auth-server-url` 中添加 `%prod.` 配置文件前缀可确保 `Dev Services for Keycloak` 在开发模式下运行应用程序时为您启动容器。有关详细信息，请参阅下面的在开发模式下 xref:keycloak-dev-mode[运行应用程序] 部分。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "By default, applications using the `quarkus-oidc` extension are marked as a `service` type application (see `quarkus.oidc.application-type`). This extension also supports only  `web-app` type applications but only if the access token returned as part of the authorization code grant response is marked as a source of roles: `quarkus.oidc.roles.source=accesstoken` (`web-app` type applications check ID token roles by default)."
msgstr "默认情况下，使用 `quarkus-oidc` 扩展的应用程序被标记为 `service` 类型的应用程序（见 `quarkus.oidc.application-type` ）。这个扩展也仅支持 `web-app` 类型的应用程序且只有当作为授权码授予响应的一部分而返回的访问token被标记为角色的来源时可行： `quarkus.oidc.roles.source=accesstoken` （ `web-app` 类型的应用程序会默认检查ID token角色）。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Starting and Configuring the Keycloak Server"
msgstr "启动和配置Keycloak服务器"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Do not start the Keycloak server when you run the application in a dev mode - `Dev Services for Keycloak` will launch a container. See xref:keycloak-dev-mode[Running the Application in Dev mode] section below for more information."
msgstr "在开发模式下运行应用程序时，请勿启动 Keycloak 服务器 - `Dev Services for Keycloak` 将启动一个容器。更多信息，请参阅下面的 \" xref:keycloak-dev-mode[在开发模式下运行应用程序] \"部分。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "To start a Keycloak Server you can use Docker and just run the following command:"
msgstr "要启动Keycloak服务器，您可以使用Docker服务，且只需运行以下命令："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "where `keycloak.version` should be set to `17.0.0` or higher."
msgstr "其中 `keycloak.version` 应该设置为 `17.0.0` 或更高。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "You should be able to access your Keycloak Server at https://localhost:8543[localhost:8543]."
msgstr "现在您应该可以在 link:https://localhost:8543[localhost:8543] 访问您的Keycloak服务器了。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"Log in as the `admin` user to access the Keycloak Administration Console.\n"
"Username should be `admin` and password `admin`."
msgstr "以 `admin` 用户身份登录，访问Keycloak管理控制台。用户名应该是 `admin` ，密码是 `admin` 。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Import the link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[realm configuration file] to create a new realm.\n"
"For more details, see the Keycloak documentation about how to https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[create a new realm]."
msgstr "导入 link:{quickstarts-tree-url}/security-keycloak-authorization-quickstart/config/quarkus-realm.json[领域配置文件] 以创建新领域。更多详情，请参阅 Keycloak 有关如何 link:https://www.keycloak.org/docs/latest/server_admin/index.html#_create-realm[创建新领域] 的文档。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "After importing the realm you can see the resource permissions:"
msgstr "导入realm后，您可以看到资源的权限："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "It explains why the endpoint has no `@RolesAllowed` annotations - the resource access permissions are set directly in Keycloak."
msgstr "这解释了为什么节点没有 `@RolesAllowed` 注解--资源访问权限是直接在Keycloak中设置的。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Running the Application in Dev mode"
msgstr "在开发模式下运行应用程序"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "To run the application in dev mode, use:"
msgstr "要在开发模式下运行应用程序，请使用："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "xref:security-openid-connect-dev-services.adoc[Dev Services for Keycloak] will launch a Keycloak container and import a `quarkus-realm.json`."
msgstr "link:security-openid-connect-dev-services.html[Keycloak开发服务] 将启动一个Keycloak容器并导入一个 `quarkus-realm.json` 。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Open a xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev-ui[/q/dev-ui] and click on a `Provider: Keycloak` link in an `OpenID Connect` `Dev UI` card."
msgstr "打开 link:http://localhost:8080/q/dev-ui[/q/dev-ui] 上的 xref:dev-ui.adoc[Dev UI] ，点击 `OpenID Connect` `Dev UI` 卡上的 `Provider: Keycloak` 链接。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "You will be asked to log in into a `Single Page Application` provided by `OpenID Connect Dev UI`:"
msgstr "您将被要求登录到由 `OpenID Connect Dev UI` 提供的 `Single Page Application` ："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Login as `alice` (password: `alice`) who only has a `User Permission` to access the `/api/users/me` resource"
msgstr "以 `alice` （密码： `alice` ）登录，该用户仅有一个 `User Permission` 可以访问 `/api/users/me` 资源"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "accessing `/api/admin` will return `403`"
msgstr "访问 `/api/admin` ，将返回 `403`"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "accessing `/api/users/me` will return `200`"
msgstr "访问 `/api/users/me` ，将返回 `200`"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Logout and login as `admin` (password: `admin`) who has both `Admin Permission` to access the `/api/admin` resource and `User Permission` to access the `/api/users/me` resource"
msgstr "退出并以 `admin` （密码： `admin` ）的身份登录，他同时拥有 `Admin Permission` 以访问 `/api/admin` 资源以及 `User Permission` 以访问 `/api/users/me` 资源"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "accessing `/api/admin` will return `200`"
msgstr "访问 `/api/admin` ，将返回 `200`"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Running the Application in JVM mode"
msgstr "在JVM模式下运行应用程序"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "When you're done playing with the `dev` mode\" you can run it as a standard Java application."
msgstr "当您尝试完毕 `开发` 模式后，您可以把它作为一个标准的Java应用程序运行。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "First compile it:"
msgstr "首先编译它："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Then run it:"
msgstr "然后运行："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Running the Application in Native Mode"
msgstr "在本地模式下运行应用程序"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "This same demo can be compiled into native code: no modifications required."
msgstr "这个同样的演示可以被编译成本地代码：不需要任何修改。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "This implies that you no longer need to install a JVM on your production environment, as the runtime technology is included in the produced binary, and optimized to run with minimal resource overhead."
msgstr "这意味着您不再需要在您的生产环境中安装JVM，因为运行时技术包含在生产的二进制文件中，并以最小的资源开销优化运行。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Compilation will take a bit longer, so this step is disabled by default; let's build again by enabling the `native` profile:"
msgstr "编译会花一点时间，所以这一步默认是禁用的；让我们通过启用 `native` profile来再次构建："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "After getting a cup of coffee, you'll be able to run this binary directly:"
msgstr "一杯咖啡的时间后，您就可以直接运行该二进制文件了："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Testing the Application"
msgstr "测试应用程序"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "See xref:keycloak-dev-mode[Running the Application in Dev mode] section above about testing your application in a dev mode."
msgstr "有关在开发模式下测试 xref:keycloak-dev-mode[应用程序] ，请参阅上文 \"在开发模式下 xref:keycloak-dev-mode[运行] 应用程序 \"一节。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "You can test the application launched in JVM or Native modes with `curl`."
msgstr "您可以用 `curl` 测试在JVM或Native模式下启动的应用程序。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "The application is using bearer token authorization and the first thing to do is obtain an access token from the Keycloak Server in order to access the application resources:"
msgstr "该应用程序使用bearer token授权，首先要做的是从Keycloak服务器获得一个访问token，以便访问应用程序资源："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "The example above obtains an access token for user `alice`."
msgstr "上面的命令为用户 `alice` 获取了一个访问token。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"Any user is allowed to access the\n"
"`http://localhost:8080/api/users/me` endpoint\n"
"which basically returns a JSON payload with details about the user."
msgstr "任何用户都被允许访问 `<a href=\"http://localhost:8080/api/users/me\" class=\"bare\">http://localhost:8080/api/users/me</a>` 节点，该节点会返回一个包含用户详细信息的JSON payload。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"The `http://localhost:8080/api/admin` endpoint can only be accessed by users with the `admin` role.\n"
"If you try to access this endpoint with the previously issued access token, you should get a `403` response from the server."
msgstr "该 `http://localhost:8080/api/admin` 端点只能由具有 `admin` 角色的用户访问。如果你试图用先前发布的访问令牌访问这个端点，你应该会从服务器上得到一个 `403` 的响应。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "In order to access the admin endpoint you should obtain a token for the `admin` user:"
msgstr "为了访问管理节点，您需要获得一个 `admin` 用户的token："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Injecting the Authorization Client"
msgstr "注入授权客户端"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid ""
"In some cases, you may want to use the https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak Authorization Client Java API] to perform\n"
"specific operations like managing resources and obtaining permissions directly from Keycloak. For that, you can inject a\n"
"`AuthzClient` instance into your beans as follows:"
msgstr "在某些情况下，您可能想使用 link:https://www.keycloak.org/docs/latest/authorization_services/#_service_client_api[Keycloak授权客户端Java API] 来执行特定的操作，如管理资源和直接从Keycloak获得权限。为此，您可以按以下方式将一个 `AuthzClient` 实例注入到您的bean中："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Note: If you want to use the `AuthzClient` directly make sure to set `quarkus.keycloak.policy-enforcer.enable=true` otherwise there is no Bean available for injection."
msgstr "注意：如果您想直接使用 `AuthzClient` ，请确保设置 `quarkus.keycloak.policy-enforcer.enable=true` ，否则将没有Bean可供注入。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Mapping Protected Resources"
msgstr "映射受保护资源"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "By default, the extension is going to fetch resources on-demand from Keycloak where their `URI` are used to map the resources in your application that should be protected."
msgstr "默认情况下，扩展将从Keycloak按需获取资源，而资源 `URI` 被用于映射您的应用程序中应被保护的资源。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "If you want to disable this behavior and fetch resources during startup, you can use the following configuration:"
msgstr "如果您想禁用这种行为，并在启动期间获取资源，您可以使用以下配置："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Note that, depending on how many resources you have in Keycloak the time taken to fetch them may impact your application startup time."
msgstr "请注意，基于您在Keycloak中的资源数量，获取这些资源的时间可能会影响您的应用程序的启动时间。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "More About Configuring Protected Resources"
msgstr "关于配置受保护资源的更多信息"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "In the default configuration, Keycloak is responsible for managing the roles and deciding who can access which routes."
msgstr "在默认配置中，Keycloak负责管理角色并决定谁可以访问哪些路由。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "To configure the protected routes using the `@RolesAllowed` annotation or the `application.properties` file, check the xref:security-oidc-bearer-token-authentication.adoc[Using OpenID Connect Adapter to Protect Jakarta REST Applications] and xref:security-authorize-web-endpoints-reference.adoc[Security Authorization] guides. For more details, check the xref:security-overview.adoc[Security guide]."
msgstr "要使用 `@RolesAllowed` 注释或 `application.properties` 文件配置受保护路由，请查阅《 xref:security-oidc-bearer-token-authentication.adoc[使用 OpenID Connect 适配器保护 Jakarta REST 应用程序] 》和《 xref:security-authorize-web-endpoints-reference.adoc[安全授权] 》指南。有关详细信息，请查看 xref:security-overview.adoc[安全指南] 。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Access to Public Resources"
msgstr "获取公共资源"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "If you'd like to access a public resource without `quarkus-keycloak-authorization` trying to apply its policies to it then you need to create a `permit` HTTP Policy configuration in `application.properties` as documented in the xref:security-authorize-web-endpoints-reference.adoc[Security Authorization] guide."
msgstr "如果您想访问公共资源，而 `quarkus-keycloak-authorization` 又不试图对其应用策略，那么您需要在 `application.properties` 中创建 `permit` HTTP 策略配置，如 xref:security-authorize-web-endpoints-reference.adoc[安全授权] 指南中所述。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Disabling a policy check using a Keycloak Authorization Policy such as:"
msgstr "使用Keycloak授权策略禁用一个策略检查，如："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "is no longer required."
msgstr "不再需要。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "If you'd like to block access to the public resource to anonymous users then you can create an enforcing Keycloak Authorization Policy:"
msgstr "如果您想阻止匿名用户访问公共资源，那么您可以创建一个强制的Keycloak授权策略："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Note only the default tenant configuration applies when controlling anonymous access to the public resource is required."
msgstr "注意只有在需要控制公共资源的匿名访问时才适用默认租户配置。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Checking Permission Scopes Programmatically"
msgstr "以编程方式检查权限范围"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"In addition to resource permissions, you may want to specify method scopes. The scope usually represents an action that\n"
"can be performed on a resource. You can create an enforcing Keycloak Authorization Policy with method scope like this:"
msgstr "除了资源权限外，您可能还想指定方法作用域。作用域通常代表可在资源上执行的操作。您可以像这样创建具有方法作用域的强制 Keycloak 授权策略："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "User must have resource permission 'Scope Permission Resource' and scope 'read'"
msgstr "用户必须拥有 \"范围权限资源 \"和 \"读取 \"范围的资源权限"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"Request path `/api/protected/standard-way` is now secured by the Keycloak Policy Enforcer and does not require\n"
"any additions (such as `@RolesAllowed` annotation). In some cases, you may want to perform the same check programmatically.\n"
"You are allowed to do that by injecting a `SecurityIdentity` instance in your beans, as demonstrated in the example below.\n"
"Alternatively, if you annotate resource method with the `@PermissionsAllowed` annotation, you can achieve the same effect.\n"
"The following example shows three resource method that all requires same 'read' scope:"
msgstr "请求路径 `/api/protected/standard-way` 现在由 Keycloak Policy Enforcer 保护，不需要添加任何内容（如 `@RolesAllowed` 注释）。在某些情况下，您可能希望以编程方式执行相同的检查。您可以通过在 Bean 中注入 `SecurityIdentity` 实例来实现这一点，如下例所示。另外，如果使用 `@PermissionsAllowed` 注解来注解资源方法，也可以达到同样的效果。下面的示例显示了三个资源方法，它们都需要相同的 \"读取 \"作用域："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Request sub-path `/standard-way` requires both resource permission and scope `read` according to the configuration properties we set in the `application.properties` before."
msgstr "根据我们之前在 `application.properties` 中设置的配置属性，请求子路径 `/standard-way` 需要资源权限和作用域 `read` 。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "Request sub-path `/programmatic-way` only requires permission `Scope Permission Resource`, but we can enforce scope with `SecurityIdentity#checkPermission`."
msgstr "请求子路径 `/programmatic-way` 只需要 `Scope Permission Resource` 的权限，但我们可以通过 `SecurityIdentity#checkPermission` 强化范围。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid ""
"The `@PermissionsAllowed` annotation only grants access to the requests with permission `Scope Permission Resource` and scope `read`.\n"
"For more information, see the section xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[Authorization using annotations] of the Security Authorization guide."
msgstr "`@PermissionsAllowed` 注解只允许访问权限为 `Scope Permission Resource` 和范围为 `read` 的请求。如需了解更多信息，请参阅安全授权指南中的 \" xref:security-authorize-web-endpoints-reference.adoc#standard-security-annotations[使用注解授权] \"部分。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Multi-Tenancy"
msgstr "多租户"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "It is possible to configure multiple policy enforcer configurations, one per each tenant, similarly to how it can be done for xref:security-openid-connect-multitenancy.adoc[Multi-Tenant OpenID Connect Service Applications]."
msgstr "可以配置多个策略执行者的配置，每个租户一个，类似于 link:security-openid-connect-multitenancy.html[多租户OpenID连接服务应用程序] 的配置方式。"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "For example:"
msgstr "例如："

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "Configuration Reference"
msgstr "配置参考"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "The configuration is based on the official https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer Configuration]. If you are looking for more details about the different configuration options, please take a look at this documentation,"
msgstr "以下配置基于官方文档 link:https://www.keycloak.org/docs/latest/authorization_services/index.html#_enforcer_filter[Keycloak Policy Enforcer Configuration]。如果您想要查看不同配置选项的更多细节，请参看该文档,"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
msgid "References"
msgstr "参考文献"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak 文档]"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak Authorization Services Documentation]"
msgstr "link:https://www.keycloak.org/docs/latest/authorization_services/index.html[Keycloak 授权服务文档]"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "https://tools.ietf.org/html/rfc7519[JSON Web Token]"
msgstr "link:https://tools.ietf.org/html/rfc7519[JSON 网络令牌]"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"

#: _versions/3.6/guides/security-keycloak-authorization.adoc
#, fuzzy
msgid "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak Admin Client]"
msgstr "xref:security-keycloak-admin-client.adoc[Quarkus Keycloak 管理客户端]"
