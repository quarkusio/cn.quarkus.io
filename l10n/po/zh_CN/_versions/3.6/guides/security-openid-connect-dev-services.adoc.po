msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Dev Services and UI for OpenID Connect (OIDC)"
msgstr "OpenID Connect (OIDC) 的开发服务和用户界面"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This guide covers the Dev Services and UI for OpenID Connect (OIDC) Keycloak provider and explains how to support Dev Services and UI for other OpenID Connect providers.\n"
"It also describes Dev UI for all OpenID Connect providers which have already been started before Quarkus is launched in a dev mode."
msgstr "本指南涵盖 OpenID Connect (OIDC) Keycloak 提供商的开发服务和用户界面，并解释如何支持其他 OpenID Connect 提供商的开发服务和用户界面。本指南还介绍了在 Quarkus 以开发模式启动之前已经启动的所有 OpenID Connect 提供程序的开发用户界面。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
msgid "Introduction"
msgstr "简介"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Quarkus provides `Dev Services For Keycloak` feature which is enabled by default when the `quarkus-oidc` extension is started in dev mode and when the integration tests are running in test mode, but only when no `quarkus.oidc.auth-server-url` property is configured.\n"
"It starts a Keycloak container for both the dev and/or test modes and initializes them by registering the existing Keycloak realm or creating a new realm with the client and users for you to start developing your Quarkus application secured by Keycloak immediately. It will restart the container when the `application.properties` or the realm file changes have been detected."
msgstr "Quarkus 提供 `Dev Services For Keycloak` 功能，默认情况下，当 `quarkus-oidc` 扩展在开发模式下启动时，以及当集成测试在测试模式下运行时，都会启用该功能，但只有在未配置 `quarkus.oidc.auth-server-url` 属性时才会启用。它会为开发和/或测试模式启动 Keycloak 容器，并通过注册现有 Keycloak 领域或创建新领域与客户端和用户进行初始化，以便你立即开始开发由 Keycloak 保护的 Quarkus 应用程序。当检测到 `application.properties` 或 Realm 文件发生变化时，它会重新启动容器。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Additionally, xref:dev-ui.adoc[Dev UI] available at http://localhost:8080/q/dev[/q/dev] complements this feature with a Dev UI page which helps to acquire the tokens from Keycloak and test your Quarkus application."
msgstr "此外，位于 link:http://localhost:8080/q/dev[/q/dev] 的 xref:dev-ui.adoc[Dev UI] 通过 Dev UI 页面对该功能进行了补充，该页面有助于从 Keycloak 获取令牌并测试你的 Quarkus 应用程序。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If `quarkus.oidc.auth-server-url` is already set then a generic OpenID Connect Dev Console which can be used with all OpenID Connect providers will be activated, please see xref:dev-ui-all-oidc-providers[Dev UI for all OpenID Connect Providers] for more information."
msgstr "如果已设置 `quarkus.oidc.auth-server-url` ，则将激活可用于所有 OpenID Connect 提供商的通用 OpenID Connect 开发控制台，更多信息请参阅 xref:dev-ui-all-oidc-providers[所有 OpenID Connect 提供商的开发用户界面] 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
msgid "Dev Services for Keycloak"
msgstr "为Keycloak提供的开发服务"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Start your application without configuring `quarkus.oidc` properties in `application.properties` with:"
msgstr "在不配置 `quarkus.oidc` 属性的情况下，使用 `application.properties` 启动应用程序："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You will see in the console something similar to:"
msgstr "您将在控制台中看到类似的内容："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "When logging in the Keycloak admin console, the username is `admin` and the password is `admin`."
msgstr "登录 Keycloak 管理控制台时，用户名是 `admin` ，密码是 `admin` 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note that by default, `Dev Services for Keycloak` will not start a new container if it finds a container with a `quarkus-dev-service-keycloak` label and connect to it if this label's value matches the value of the `quarkus.keycloak.devservices.service-name` property (default value is `quarkus`). In such cases you will see a slightly different output when running:"
msgstr "请注意，默认情况下，如果 `Dev Services for Keycloak` 发现一个带有 `quarkus-dev-service-keycloak` 标签的容器，并且如果该标签的值与 `quarkus.keycloak.devservices.service-name` 属性的值相匹配（默认值为 `quarkus` ），则不会启动新容器。在这种情况下，运行时的输出结果会略有不同："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "It is possible that the Keycloak container does not become ready before the default timeout of 60 seconds. A simple way to overcome the issue is to increase the time out - for example to 2 minutes - using `quarkus.devservices.timeout=2M`."
msgstr "Keycloak 容器有可能在默认的 60 秒超时前没有准备就绪。解决这个问题的简单方法是使用 `quarkus.devservices.timeout=2M` 增加超时时间，例如增加到 2 分钟。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note that you can disable sharing the containers with `quarkus.keycloak.devservices.shared=false`."
msgstr "请注意，您可以通过 `quarkus.keycloak.devservices.shared=false` 禁用共享容器。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Now open the main link:http://localhost:8080/q/dev[Dev UI page], and you will see the `OpenID Connect Card` linking to a Keycloak page:"
msgstr "Now open the main link:http://localhost:8080/q/dev[Dev UI page] , and you will see the `OpenID Connect Card` linking to a Keycloak page:"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Click on the `Provider: Keycloak` link, and you will see a Keycloak page which will be presented slightly differently depending on how `Dev Services for Keycloak` feature has been configured."
msgstr "单击 `Provider: Keycloak` 链接，您将看到一个 Keycloak 页面，根据 `Dev Services for Keycloak` 功能的配置，该页面的显示方式会略有不同。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Developing Service Applications"
msgstr "开发服务应用程序"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "By default, the Keycloak page can be used to support the development of a xref:security-oidc-bearer-token-authentication.adoc[Quarkus OIDC service application]."
msgstr "默认情况下，Keycloak 页面可用于支持开发 xref:security-oidc-bearer-token-authentication.adoc[Quarkus OIDC 服务应用程序] 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Authorization Code Grant"
msgstr "授权代码 赠款"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=code` in `application.properties` (this is a default value) then an `authorization_code` grant will be used to acquire both access and ID tokens. Using this grant is recommended to emulate a typical flow where a `Single Page Application` acquires the tokens and uses them to access Quarkus services."
msgstr "如果在 `application.properties` 中设置 `quarkus.oidc.devui.grant.type=code` （这是默认值），那么 `authorization_code` 授权将用于获取访问和 ID 标记。建议使用该授权来模拟 `Single Page Application` 获取令牌并使用它们访问 Quarkus 服务的典型流程。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "First you will see an option to `Log into Single Page Application`:"
msgstr "首先，您将看到 `Log into Single Page Application` 选项："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Choose Keycloak realm and client id which will be used during the authentication process."
msgstr "选择将在身份验证过程中使用的 Keycloak 领域和客户端 ID。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "This SPA represents a public OpenId Connect client therefore the client IDs you enter should identify public Keycloak clients which have no secrets. This is because SPA is not a web application and can not securely handle secrets which it will need to complete the authorization code flow if the client secret is also expected to complete the authorization code flow."
msgstr "此 SPA 代表一个公共 OpenId Connect 客户端，因此您输入的客户端 ID 应标识没有秘密的公共 Keycloak 客户端。这是因为 SPA 不是网络应用程序，无法安全地处理秘密，而如果客户端秘密也要完成授权代码流，则 SPA 就需要秘密来完成授权代码流。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The clients requiring secrets can only be supported with this SPA if a default realm has been created or if `quarkus.oidc.credentials.secret` is configued and a single custom realm is used since in these cases the SPA can figure out the client secret it may need to complete the authorization code flow after Keycloak redorected the user back to it."
msgstr "只有在创建了默认域或配置了 `quarkus.oidc.credentials.secret` 并使用了单个自定义域的情况下，该 SPA 才能支持需要秘密的客户端，因为在这些情况下，SPA 可以在 Keycloak 将用户重新连接到它之后，找出完成授权代码流所需的客户端秘密。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Next, after selecting `Log into Single Page Application`, you will be redirected to Keycloak to authenticate, example, as `alice:alice` and then returned to the page representing the SPA:"
msgstr "选择 `Log into Single Page Application` 后，您将被重定向到 Keycloak 进行身份验证，例如，以 `alice:alice` 的身份，然后返回到代表 SPA 的页面："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can view the acquired access and ID tokens, for example:"
msgstr "例如，您可以查看获取的访问和 ID 标记："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "This view shows the encoded JWT token on the left-hand side and highlights the headers (red colour), payload/claims (green colour) and signature (blue colour). It also shows the decoded JWT token on the right-hand side where you can see the header and claim names and their values."
msgstr "该视图在左侧显示已编码的 JWT 标记，并突出显示标头（红色）、有效载荷/权利要求（绿色）和签名（蓝色）。它还会在右侧显示解码后的 JWT 标记，您可以看到标头和请求名称及其值。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Next test the service by entering a relative service path and sending a token. SPA usually sends access tokens to the application endpoint, so choose `Test with Access Token` option, for example:"
msgstr "接下来，通过输入相对服务路径和发送令牌来测试服务。SPA 通常会向应用程序端点发送访问令牌，因此请选择 `Test with Access Token` 选项："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can use an `eraser` symbol in the right bottom corner to clear the test results area."
msgstr "您可以使用右下角的 `eraser` 符号清除测试结果区域。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Sometimes ID tokens are forwarded to the application frontends as bearer tokens as well for the endpoints be aware about the user who is currently logged into SPA or to perform an out-of-band token verification. Choose `Test with ID Token` option in such cases."
msgstr "有时，ID 令牌也会作为承载令牌转发到应用程序前端，以便端点了解当前登录 SPA 的用户，或执行带外令牌验证。在这种情况下，请选择 `Test with ID Token` 选项。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Manually entering the service paths is not ideal, so please see the xref:test-with-swagger-graphql[Test with Swagger UI or GraphQL UI] section about enabling Swagger or GraphQL UI for testing the service with the access token already acquired by OIDC Dev UI."
msgstr "手动输入服务路径并不理想，因此请参阅 \" xref:test-with-swagger-graphql[使用 Swagger UI 或 GraphQL UI 测试] \"部分，了解如何启用 Swagger 或 GraphQL UI，以便使用 OIDC Dev UI 已获取的访问令牌 xref:test-with-swagger-graphql[测试] 服务。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Finally, you can select a `Log Out` image::dev-ui-keycloak-logout.png option if you'd like to log out and authenticate to Keycloak as a different user."
msgstr "最后，如果你想注销 Keycloak 并以其他用户身份进行认证，可以选择 `Log Out` image::dev-ui-keycloak-logout.png 选项。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note Keycloak may return an error when you try to `Log into Single Page Application`. For example, `quarkus.oidc.client-id` may not match the client id in the realm imported to Keycloak or the client in this realm is not configured correctly to support the authorization code flow, etc. In such cases Keycloak will return an `error_description` query parameter and `Dev UI` will also show this error description, for example:"
msgstr "注意 Keycloak 可能会在您尝试 `Log into Single Page Application` 时返回错误信息。例如， `quarkus.oidc.client-id` 可能与导入 Keycloak 的领域中的客户端 id 不匹配，或该领域中的客户端未正确配置以支持授权码流等。在这种情况下，Keycloak 会返回 `error_description` 查询参数， `Dev UI` 也会显示此错误描述，例如："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the error occurs then log into Keycloak using the `Keycloak Admin` option and update the realm configuration as necessary and also check the `application.properties`."
msgstr "如果出现错误，请使用 `Keycloak Admin` 选项登录 Keycloak，必要时更新领域配置，并检查 `application.properties` 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Test with Swagger UI or GraphQL UI"
msgstr "使用 Swagger UI 或 GraphQL UI 进行测试"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can avoid manually entering the service paths and test your service with `Swagger UI` or `GraphQL UI` if `quarkus-smallrye-openapi` and/or `quarkus-smallrye-graphql` are used in your project. For example, if you start Quarkus in dev mode with both `quarkus-smallrye-openapi` and `quarkus-smallrye-graphql` dependencies then you will see the following options after logging in into Keycloak:"
msgstr "如果项目中使用了 `quarkus-smallrye-openapi` 和/或 `quarkus-smallrye-graphql` ，则可以避免手动输入服务路径，而是使用 `Swagger UI` 或 `GraphQL UI` 测试服务。例如，如果在开发模式下启动 Quarkus，并同时依赖 `quarkus-smallrye-openapi` 和 `quarkus-smallrye-graphql` ，那么登录 Keycloak 后将看到以下选项："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"For example, clicking on `Swagger UI` will open `Swagger UI` in a new browser tab where you can test the service using the token acquired by Dev UI for Keycloak.\n"
"and `Swagger UI` will not try to re-authenticate again. Do not choose a `Swagger UI` `Authorize` option once you are in Swagger UI since OIDC Dev UI has done the authorization and provided the access token for Swagger UI to use for testing."
msgstr "例如，单击 `Swagger UI` 将在新的浏览器标签页中打开 `Swagger UI` ，您可以在其中使用 Dev UI 为 Keycloak 获取的令牌测试服务。 `Swagger UI` 将不会再次尝试重新验证。进入 Swagger UI 后，请不要选择 `Swagger UI` `Authorize` 选项，因为 OIDC Dev UI 已完成授权并提供了访问令牌供 Swagger UI 用于测试。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Integration with `GraphQL UI` works in a similar way, the access token acquired by Dev UI for Keycloak will be used."
msgstr "与 `GraphQL UI` 的集成方式类似，将使用 Dev UI 为 Keycloak 获取的访问令牌。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You may need to register a redirect URI for the authorization code flow initiated by Dev UI for Keycloak to work because Keycloak may enforce that the authenticated users are redirected only to the configured redirect URI. It is recommended to do in production to avoid the users being redirected to the wrong endpoints which might happen if the correct `redirect_uri` parameter in the authentication request URI has been manipulated."
msgstr "您可能需要为 Dev UI 启动的授权代码流注册一个重定向 URI 才能让 Keycloak 正常工作，因为 Keycloak 可能会强制要求已通过身份验证的用户只能重定向到配置的重定向 URI。建议在生产中这样做，以避免用户被重定向到错误的端点，因为如果验证请求 URI 中的 `redirect_uri` 正确参数被篡改，可能会发生这种情况。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If Keycloak does enforce it then you will see an authentication error informing you that the `redirect_uri` value is wrong."
msgstr "如果 Keycloak 确实强制执行，那么您将看到一个验证错误，告知您 `redirect_uri` 的值是错误的。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "In this case select the `Keycloak Admin` option in the right top corner, login as `admin:admin`, select the test realm and the client which Dev UI for Keycloak is configured with and add `http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/keycloak-provider` to `Valid Redirect URIs`. If you used `-Dquarkus.http.port` when starting Quarkus then change `8080` to the value of `quarkus.http.port`"
msgstr "在这种情况下，选择右上角的 `Keycloak Admin` 选项，以 `admin:admin` 的身份登录，选择测试域和为 Keycloak 配置的 Dev UI 的客户端，并将其添加到 。 `http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/keycloak-provider` 到 `Valid Redirect URIs` 。如果启动 Quarkus 时使用的是 `-Dquarkus.http.port` ，则将 `8080` 更改为 `quarkus.http.port`"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the container is shared between multiple applications running on different ports then you will need to register `redirect_uri` values for each of these applications."
msgstr "如果在不同端口上运行的多个应用程序共享容器，则需要为每个应用程序注册 `redirect_uri` 值。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can set the `redirect_uri` value to `*` only for the test purposes, especially when the containers are shared between multiple applications."
msgstr "您可以将 `redirect_uri` 值设置为 `*` ，仅用于测试目的，尤其是在多个应用程序共享容器时。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`*` `redirect_uri` value is set by `Dev Services for Keycloak` when it creates a default realm, if no custom realm is imported."
msgstr "`*` `redirect_uri` 值由 `Dev Services for Keycloak` 在创建默认域时设置，如果没有导入自定义域的话。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Implicit Grant"
msgstr "隐性赠款"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=implicit` in `application.properties` then an `implicit` grant will be used to acquire both access and ID tokens. Use this grant for emulating a `Single Page Application` only if the authorization code grant does not work (for example, a client is configured in Keycloak to support an implicit grant, etc)."
msgstr "如果在 `application.properties` 中设置了 `quarkus.oidc.devui.grant.type=implicit` ，则 `implicit` 授权将用于获取访问和 ID 标记。只有在授权码授权不起作用时（例如，客户端在 Keycloak 中配置为支持隐式授权等），才使用此授权来模拟 `Single Page Application` 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Password Grant"
msgstr "密码授予"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=password` in `application.properties` then you will see a screen like this one:"
msgstr "如果您在 `application.properties` 中设置了 `quarkus.oidc.devui.grant.type=password` ，那么您会看到类似这样的屏幕："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"Select a realm, enter client id and secret, username amd user password, a relative service endpoint path, click on `Test Service` and you will see a status code such as `200`, `403`, `401` or `404` printed.\n"
"If the username is also set in `quarkus.keycloak.devservices.users` map property containing usernames and passwords then you do not have to set a password when testing the service.\n"
"But note, you do not have to initialize `quarkus.keycloak.devservices.users` to test the service using the password grant."
msgstr "选择一个领域，输入客户端 id 和 secret、用户名和用户密码、相对服务端点路径，点击 `Test Service` ，就会看到打印的状态代码，如 `200` , `403` , `401` 或 `404` 。如果在包含用户名和密码的 `quarkus.keycloak.devservices.users` map 属性中也设置了用户名，那么在测试服务时就不必设置密码。但请注意，使用密码授权测试服务时不必初始化 `quarkus.keycloak.devservices.users` 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You will also see in the Dev UI console something similar to:"
msgstr "您还会在开发人员用户界面控制台中看到类似的内容："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "A token is acquired from Keycloak using a `password` grant and is sent to the service endpoint."
msgstr "使用 `password` 授权从 Keycloak 获取令牌，并将其发送到服务端点。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Client Credentials Grant"
msgstr "客户证书授予"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you set `quarkus.oidc.devui.grant.type=client` then a `client_credentials` grant will be used to acquire a token, with the page showing no `User` field in this case:"
msgstr "如果设置了 `quarkus.oidc.devui.grant.type=client` ，则将使用 `client_credentials` 授权来获取令牌，在这种情况下，页面不会显示 `User` 字段："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Select a realm, enter the client id and secret, a relative service endpoint path, click on `Test Service` and you will see a status code such as `200`, `403`, `401` or `404` printed."
msgstr "选择一个领域，输入客户端 ID 和密 码、相对服务端点路径，点击 `Test Service` ，就会看到打印的状态代码，如 `200` 、 `403` 、 `401` 或 `404` 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Developing OpenID Connect Web App Applications"
msgstr "开发 OpenID Connect Web 应用程序"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you develop a xref:security-oidc-code-flow-authentication.adoc[Quarkus OIDC web-app application], then you should set `quarkus.oidc.application-type=web-app` in `application.properties` before starting the application."
msgstr "如果您开发的是 xref:security-oidc-code-flow-authentication.adoc[Quarkus OIDC 网络应用程序] ，则应在启动应用程序之前在 `application.properties` 中设置 `quarkus.oidc.application-type=web-app` 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You will see a screen like this one:"
msgstr "您将看到类似这样的屏幕："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Set a relative service endpoint path, click on `Sign In To Service` and you will be redirected to Keycloak to enter a username and password in a new browser tab and get a response from the Quarkus application."
msgstr "设置一个相对服务端点路径，点击 `Sign In To Service` ，你将被重定向到 Keycloak，在一个新的浏览器标签页中输入用户名和密码，并从 Quarkus 应用程序中获得响应。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Note that in this case Dev UI does not really enrich a dev experience since it is a Quarkus OIDC `web-app` application which controls the authorization code flow and acquires the tokens."
msgstr "请注意，在这种情况下，Dev UI 并没有真正丰富开发体验，因为它是 Quarkus OIDC `web-app` 应用程序，负责控制授权代码流和获取令牌。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "To make Dev UI more useful for supporting the development of OIDC `web-app` applications you may want to consider setting profile specific values for `quarkus.oidc.application-type`:"
msgstr "为使 Dev UI 更好地支持 OIDC `web-app` 应用程序的开发，您可能需要考虑为 `quarkus.oidc.application-type` 设置配置文件的特定值："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"It will ensure that all Dev UI options described in xref:develop-service-applications[Developing OpenID Connect Service Applications] will be available when your `web-app` application is run in dev mode. The limitation of this approach is that both access and ID tokens returned with the code flow and acquired with Dev UI will be sent to the endpoint as HTTP `Bearer` tokens - which will not work well if your endpoint requires the injection of `IdToken`.\n"
"However, it will work as expected if your `web-app` application only uses the access token, for example, as a source of roles or to get `UserInfo`, even if it is assumed to be a `service` application in dev mode."
msgstr "它将确保在开发模式下运行 `web-app` xref:develop-service-applications[应用程序] 时，可以使用《 xref:develop-service-applications[开发 OpenID Connect 服务应用程序] 》中描述的所有开发人员用户界面选项。这种方法的局限性在于，通过代码流返回和通过 Dev UI 获取的访问令牌和 ID 令牌都将以 HTTP `Bearer` 令牌的形式发送到端点--如果端点需要注入 `IdToken` ，这种方法将无法正常工作。不过，如果 `web-app` 应用程序仅使用访问令牌，例如作为角色来源或获取 `UserInfo` ，即使假定它是开发模式下的 `service` 应用程序，这种方法也能正常工作。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Even a better option is to use a `hybrid` application type in dev mode:"
msgstr "更好的办法是在开发模式下使用 `hybrid` 应用程序类型："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "It will ensure that if you access the application from the browser in dev mode, without using OIDC DevUI, then Quarkus OIDC will also perform the authorization code flow as in the production mode. But OIDC DevUI will also be more useful because `hybrid` applications can accept the bearer access tokens as well."
msgstr "这将确保在不使用 OIDC DevUI 的情况下，在开发模式下从浏览器访问应用程序时，Quarkus OIDC 也能像在生产模式下一样执行授权代码流。But OIDC DevUI will also be more useful because `hybrid` applications can accept the bearer access tokens as well."

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Running the tests"
msgstr "运行测试"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can run the tests against a Keycloak container started in a test mode in a xref:continuous-testing.adoc[Continuous Testing] mode."
msgstr "您可以在 xref:continuous-testing.adoc[持续测试] 模式下，针对以测试模式启动的 Keycloak 容器运行测试。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"It is also recommended to run the integration tests against Keycloak using `Dev Services for Keycloak`.\n"
"For more information, see xref:security-oidc-bearer-token-authentication.adoc#integration-testing-keycloak-devservices[Testing OpenID onnect Service Applications with Dev Services] and xref:security-oidc-code-flow-authentication.adoc#integration-testing-keycloak-devservices[Testing OpenID Connect WebApp Applications with Dev Services]."
msgstr "还建议使用 `Dev Services for Keycloak` 针对 Keycloak 运行集成测试。有关更多信息，请参阅 xref:security-oidc-bearer-token-authentication.adoc#integration-testing-keycloak-devservices[使用开发服务测试 OpenID onnect 服务应用程序] 和 xref:security-oidc-code-flow-authentication.adoc#integration-testing-keycloak-devservices[使用开发服务测试 OpenID Connect WebApp 应用] 程序。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Keycloak Initialization"
msgstr "钥匙斗篷初始化"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"The `quay.io/keycloak/keycloak:23.0.0` image which contains a Keycloak distribution powered by Quarkus is used to start a container by default.\n"
"`quarkus.keycloak.devservices.image-name` can be used to change the Keycloak image name. For example, set it to `quay.io/keycloak/keycloak:19.0.3-legacy` to use a Keycloak distribution powered by WildFly.\n"
"Note that only a Quarkus based Keycloak distribution is available starting from Keycloak `20.0.0`."
msgstr "`quay.io/keycloak/keycloak:23.0.0` 映像包含由 Quarkus 提供的 Keycloak 发行版，默认用于启动容器。 `quarkus.keycloak.devservices.image-name` 可用于更改 Keycloak 映像名称。例如，把它设为 `quay.io/keycloak/keycloak:19.0.3-legacy` 就能使用 WildFly 提供的 Keycloak 发行版。请注意，从 Keycloak `20.0.0` 开始，只有基于 Quarkus 的 Keycloak 发行版可用。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`Dev Services for Keycloak` will initialize a launched Keycloak server next."
msgstr "`Dev Services for Keycloak` 将初始化已启动的 Keycloak 服务器。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "By default, the `quarkus`, `quarkus-app` client with a `secret` password, `alice` and `bob` users (with the passwords matching the names), and `user` and `admin` roles are created, with `alice` given both `admin` and `user` roles and `bob` - the `user` role."
msgstr "默认情况下，会创建 `quarkus` 、带有 `secret` 密码的 `quarkus-app` 客户端、 `alice` 和 `bob` 用户（密码与名称一致）、 `user` 和 `admin` 角色，其中 `alice` 同时拥有 `admin` 和 `user` 角色， `bob` - `user` 角色。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Usernames, secrets and their roles can be customized with `quarkus.keycloak.devservices.users` (the map which contains usernames and secrets) and `quarkus.keycloak.devservices.roles` (the map which contains usernames and comma separated role values)."
msgstr "用户名、保密信息及其角色可通过 `quarkus.keycloak.devservices.users` （包含用户名和保密信息的映射）和 `quarkus.keycloak.devservices.roles` （包含用户名和逗号分隔的角色值的映射）自定义。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
msgid "For example:"
msgstr "例如："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"This configuration creates two users:\n"
" * `duke` with a `dukePassword` password and a `reader` role\n"
" * `john` with a `johnPassword` password and `reader` and `writer` roles"
msgstr "该配置创建了两个用户：* `duke` ，密码为 `dukePassword` ，角色为 `reader` * `john` ，密码为 `johnPassword` ，角色为 `reader` 和 `writer` "

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`quarkus.oidc.client-id` and `quarkus.oidc.credentials.secret` can be used to customize the client id and secret."
msgstr "`quarkus.oidc.client-id` 和 可用于定制客户 ID 和密文。 `quarkus.oidc.credentials.secret` "

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "However, it is likely your Keycloak configuration may be more complex and require setting more properties."
msgstr "不过，您的 Keycloak 配置可能更为复杂，需要设置更多属性。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "This is why `quarkus.keycloak.devservices.realm-path` is always checked first before trying to initialize Keycloak with the default or configured realm, client, user and roles properties. If the realm file exists on the file system or classpath then only this realm will be used to initialize Keycloak, for example:"
msgstr "这就是为什么在尝试使用默认或配置的 realm、客户端、用户和角色属性初始化 Keycloak 之前，总是先检查 `quarkus.keycloak.devservices.realm-path` 的原因。如果 realm 文件存在于文件系统或 classpath 中，那么在初始化 Keycloak 时将只使用该 realm："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You can use `quarkus.keycloak.devservices.realm-path` to initialize Keycloak with multiple realm files by providing a comma-separated list of files:"
msgstr "您可以使用 `quarkus.keycloak.devservices.realm-path` ，通过提供逗号分隔的文件列表，用多个 Realm 文件初始化 Keycloak："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "quarkus.keycloak.devservices.realm-path=quarkus-realm1.json,quarkus-realm2.json"
msgstr "quarkus.keycloak.devservices.realm-path=quarkus-realm1.json,quarkus-realm2.json"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Also, the Keycloak page offers an option to `Sign In To Keycloak To Configure Realms` using a `Keycloak Admin` option in the right top corner:"
msgstr "此外，Keycloak 页面右上角的 `Keycloak Admin` 选项还提供了 `Sign In To Keycloak To Configure Realms` 选项："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Sign in to Keycloak as `admin:admin` in order to further customize the realm properties, create or import a new realm, export the realm."
msgstr "以 `admin:admin` 登录 Keycloak，以便进一步自定义领域属性、创建或导入新领域、导出领域。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Disable Dev Services for Keycloak"
msgstr "禁用 Keycloak 的开发服务"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "`Dev Services For Keycloak` will not be activated if either `quarkus.oidc.auth-server-url` is already initialized or the default OIDC tenant is disabled with `quarkus.oidc.tenant.enabled=false`, irrespectively of whether you work with Keycloak or not."
msgstr "`Dev Services For Keycloak` 如果 已经初始化，或者使用 禁用了默认 OIDC 租户，那么无论您是否使用 Keycloak，都将无法激活该租户。 `quarkus.oidc.auth-server-url` `quarkus.oidc.tenant.enabled=false`"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you prefer not to have a `Dev Services for Keycloak` container started or do not work with Keycloak then you can also disable this feature with `quarkus.keycloak.devservices.enabled=false` - it will only be necessary if you expect to start `quarkus:dev` without `quarkus.oidc.auth-server-url`."
msgstr "如果您不希望启动 `Dev Services for Keycloak` 容器或不使用 Keycloak，也可以通过 `quarkus.keycloak.devservices.enabled=false` 禁用该功能 - 只有当您希望在没有 `quarkus.oidc.auth-server-url` 的情况下启动 `quarkus:dev` 时才有必要这样做。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid ""
"The main Dev UI page will include an empty `OpenID Connect Card` when `Dev Services for Keycloak` is disabled and the `quarkus.oidc.auth-server-url` property\n"
"has not been initialized:"
msgstr "当 `Dev Services for Keycloak` 被禁用且 `quarkus.oidc.auth-server-url` 属性尚未初始化时，主 Dev UI 页面将包含一个空的 `OpenID Connect Card` ："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If `quarkus.oidc.auth-server-url` is already set then a generic OpenID Connect Dev Console which can be used with all OpenID Connect providers may be activated, please see xref:dev-ui-all-oidc-providers[Dev UI for all OpenID Connect Providers] for more information."
msgstr "如果已设置 `quarkus.oidc.auth-server-url` ，则可激活通用 OpenID Connect 开发控制台，该控制台可与所有 OpenID Connect 提供商一起使用，详情请参阅 xref:dev-ui-all-oidc-providers[所有 OpenID Connect 提供商的开发用户界面] 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Dev UI for all OpenID Connect Providers"
msgstr "适用于所有 OpenID Connect 提供商的开发用户界面"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If `quarkus.oidc.auth-server-url` points to an already started OpenID Connect provider (which can be Keycloak or other provider), `quarkus.oidc.auth-server-url` is set to `service` (which is a default value) or `hybrid` and at least `quarkus.oidc.client-id` is set then `Dev UI for all OpenID Connect Providers` will be activated."
msgstr "如果 `quarkus.oidc.auth-server-url` 指向已启动的 OpenID Connect 提供商（可以是 Keycloak 或其他提供商）， `quarkus.oidc.auth-server-url` 设置为 `service` （默认值）或 `hybrid` ，并且至少设置了 `quarkus.oidc.client-id` ，那么 `Dev UI for all OpenID Connect Providers` 将被激活。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Setting `quarkus.oidc.credentials.secret` will mostly likely be required for Keycloak and other providers for the authorization code flow initiated from Dev UI to complete, unless the client identified with `quarkus.oidc.client-id` is configured as a public client in your OpenID Connect provider's administration console."
msgstr "除非在 OpenID Connect 提供商的管理控制台中将 `quarkus.oidc.client-id` 标识的客户端配置为公共客户端，否则 Keycloak 和其他提供商很可能需要设置 `quarkus.oidc.credentials.secret` 才能完成从 Dev UI 发起的授权代码流。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "For example, you can use Dev UI to test Google authentication with this configuration:"
msgstr "例如，您可以使用 Dev UI 通过此配置测试 Google 身份验证："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Run:"
msgstr "运行："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "And you will see the following message:"
msgstr "你会看到以下信息"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If the provider metadata discovery has been successful then, after you open the main link:http://localhost:8080/q/dev[Dev UI page], you will see the following `OpenID Connect Card` referencing a `Google` provider:"
msgstr "如果成功找到了提供程序元数据，那么在打开 link:http://localhost:8080/q/dev[Dev UI] 主 link:http://localhost:8080/q/dev[页面] 后，就会看到 `OpenID Connect Card` 引用了 `Google` 提供程序："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Follow the link, and you will be able to log in to your provider, get the tokens and test the application. The experience will be the same as described in the xref:keycloak-authorization-code-grant[Authorization Code Grant for Keycloak] section, where `Dev Services for Keycloak` container has been started, especially if you work with Keycloak."
msgstr "按照该链接，您就可以登录到您的提供商，获取令牌并测试应用程序。尤其是在使用 xref:keycloak-authorization-code-grant[Keycloak 的] 情况下，体验将与已启动 `Dev Services for Keycloak` 容器的 \" xref:keycloak-authorization-code-grant[Keycloak 授权码授予] \"部分所述相同。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "You will most likely need to configure your OpenId Connect provider to support redirecting back to the `Dev Console`. Add `http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/`providerName`-provider` as one of the supported redirect and logout URLs, where `providerName` will need to be replaced by the name of the provider shown in DevUI, for example, `auth0`."
msgstr "您很可能需要配置 OpenId Connect 提供商，使其支持重定向回 `Dev Console` 。添加 `http://localhost:8080/q/dev-ui/io.quarkus.quarkus-oidc/`providerName` 作为支持的重定向和注销 URL 之一，其中 `providerName` 需要替换为 DevUI 中显示的提供程序名称，例如 `auth0` 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "If you work with other providers then a Dev UI experience described in the xref:keycloak-authorization-code-grant[Authorization Code Grant for Keycloak] section might differ slightly. For example, an access token may not be in a JWT format, so it won't be possible to show its internal content, though all providers should return an ID Token as JWT."
msgstr "如果您使用的是其他提供商，那么在 xref:keycloak-authorization-code-grant[授权码授予 Keycloak] 部分描述的 Dev UI 体验可能会略有不同。例如，访问令牌可能不是 JWT 格式，因此无法显示其内部内容，尽管所有提供商都应返回 JWT 格式的 ID 令牌。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The current access token is used by default to test the service with `Swagger UI` or `GrapghQL UI`. If the provider (other than Keycloak) returns a binary access token then it will be used with `Swagger UI` or `GrapghQL UI` only if this provider has a token introspection endpoint otherwise an `IdToken` which is always in a JWT format will be passed to `Swagger UI` or `GrapghQL UI`. In such cases you can verify with the manual Dev UI test that `401` will always be returned for the current binary access token. Also note that using `IdToken` as a fallback with either of these UIs is only possible with the authorization code flow."
msgstr "默认情况下，当前访问令牌将用于 `Swagger UI` 或 `GrapghQL UI` 测试服务。如果提供商（Keycloak 除外）返回二进制访问令牌，则只有在该提供商有令牌反省端点时，才会将其用于 `Swagger UI` 或 `GrapghQL UI` ，否则 `IdToken` （始终为 JWT 格式）将被传递到 `Swagger UI` 或 `GrapghQL UI` 。在这种情况下，您可以通过手动 Dev UI 测试来验证 `401` 是否始终会返回当前二进制访问令牌。另外请注意，只有在授权代码流中使用 `IdToken` 作为这些用户界面的后备方案才是可行的。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Some providers such as `Auth0` do not support a standard RP initiated logout so the provider specific logout properties will have to be configured for a logout option be visible. For more information, see xref:security-oidc-code-flow-authentication.adoc#user-initiated-logout[OpenID Connect User-Initiated Logout]."
msgstr "某些提供商（如 `Auth0` ）不支持由 RP 发起的标准注销，因此必须配置提供商特定的注销属性才能看到注销选项。更多信息，请参阅 xref:security-oidc-code-flow-authentication.adoc#user-initiated-logout[OpenID Connect 用户主动] 注销。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Similarly, if you'd like to use a `password` or `client_credentials` grant for Dev UI to acquire the tokens then you may have to configure some extra provider specific properties, for example:"
msgstr "同样，如果您想使用 `password` 或 `client_credentials` grant 为 Dev UI 获取令牌，那么您可能需要配置一些额外的提供商特定属性，例如："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Dev Services and UI Support for other OpenID Connect Providers"
msgstr "为其他 OpenID Connect 提供商提供开发服务和用户界面支持"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Your custom extension would need to extend `quarkus-oidc` and add the dependencies required to support your provider to the extension's `deployment` module only."
msgstr "您的自定义扩展需要扩展 `quarkus-oidc` ，并仅在扩展的 `deployment` 模块中添加支持您的提供程序所需的依赖项。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "The build step dealing with the `Dev Services` should additionally register two runtime properties into the \"io.quarkus.quarkus-oidc\" namespace: `oidcProviderName` (for example, `Google`) and `oidcProviderUrlBase` (for example: `mycompany.devservices-google`) for the `OpenID Connect Card` to link to the Dev UI page representing your provider, for example:"
msgstr "处理 `Dev Services` 的构建步骤还应向 \"io.quarkus.quarkus-oidc \"命名空间注册两个运行时属性： `oidcProviderName` （例如： `Google` ）和 `oidcProviderUrlBase` （例如： `mycompany.devservices-google` ），以便 `OpenID Connect Card` 链接到代表你的提供程序的 Dev UI 页面："

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Additionally, the extension should produce a `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` to disable the default `Dev Services for Keycloak`, instead of the users having to type `quarkus.keycloak.devservices.enabled=false`."
msgstr "此外，扩展应生成 `io.quarkus.oidc.deployment.devservices.OidcProviderBuildItem` ，以禁用默认的 `Dev Services for Keycloak` ，而不是让用户键入 `quarkus.keycloak.devservices.enabled=false` 。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Please follow the xref:dev-ui.adoc[Dev UI] tutorial as well as check the `extensions/oidc/deployment` sources for more ideas."
msgstr "请参考 xref:dev-ui.adoc[开发人员用户界面] 教程，并查看 `extensions/oidc/deployment` 源以获取更多想法。"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "Non Application Root Path Considerations"
msgstr "非应用程序根路径考虑因素"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "This document refers to the `http://localhost:8080/q/dev-ui` Dev UI URL in several places where `q` is a default non application root path. If you customize `quarkus.http.root-path` and/or `quarkus.http.non-application-root-path` properties then replace `q` accordingly, please see https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."
msgstr "本文档在多处提及 `http://localhost:8080/q/dev-ui` Dev UI URL，其中 `q` 是默认的非应用程序根路径。If you customize `quarkus.http.root-path` and/or `quarkus.http.non-application-root-path` properties then replace `q` accordingly, please see link:https://quarkus.io/blog/path-resolution-in-quarkus/[Path Resolution in Quarkus] for more information."

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
msgid "References"
msgstr "参考文献"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:dev-ui.adoc[Dev UI]"
msgstr "xref:dev-ui.adoc[开发 UI]"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "https://www.keycloak.org/documentation.html[Keycloak Documentation]"
msgstr "link:https://www.keycloak.org/documentation.html[Keycloak 文档]"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "https://openid.net/connect/[OpenID Connect]"
msgstr "link:https://openid.net/connect/[OpenID Connect]"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security-oidc-bearer-token-authentication.adoc[OIDC Bearer token authentication]"
msgstr "xref:security-oidc-bearer-token-authentication.adoc[OIDC 承载令牌验证]"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security-oidc-code-flow-authentication.adoc[OIDC code flow mechanism for protecting web applications]"
msgstr "xref:security-oidc-code-flow-authentication.adoc[保护网络应用程序的 OIDC 代码流机制]"

#: _versions/3.6/guides/security-openid-connect-dev-services.adoc
#, fuzzy
msgid "xref:security-overview.adoc[Quarkus Security overview]"
msgstr "xref:security-overview.adoc[Quarkus 安全概述]"
