msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/deploying-to-heroku.adoc
msgid "Deploying to Heroku"
msgstr "部署到Heroku"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "In this guide you will learn how to deploy a Quarkus based web application as a web-dyno to Heroku."
msgstr "在本指南中，您将学习如何将基于 Quarkus 的 Web 应用程序作为 Web-dyno 部署到 Heroku。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
msgid "This guide covers:"
msgstr "本指南包括："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Update Quarkus HTTP Port"
msgstr "更新 Quarkus HTTP 端口"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Install the Heroku CLI"
msgstr "安装 Heroku CLI"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Deploy the application to Heroku"
msgstr "将应用程序部署到 Heroku"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Deploy the application as Docker image to Heroku"
msgstr "将应用程序作为 Docker 镜像部署到 Heroku"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Deploy the native application as Docker image to Heroku"
msgstr "将本地应用程序作为 Docker 镜像部署到 Heroku"

#: _versions/3.6/guides/deploying-to-heroku.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "https://www.heroku.com/[A Heroku Account]. Free accounts work."
msgstr "link:https://www.heroku.com/[Heroku 账户] 。免费账户有效。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "https://devcenter.heroku.com/articles/heroku-cli[Heroku CLI installed]"
msgstr "link:https://devcenter.heroku.com/articles/heroku-cli[已安装 Heroku CLI]"

#: _versions/3.6/guides/deploying-to-heroku.adoc
msgid "Introduction"
msgstr "简介"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"Heroku is a platform as a service (PaaS) that enables developers to build, run, and operate applications entirely in the cloud.\n"
"It supports several languages like Java, Ruby, Node.js, Scala, Clojure, Python, PHP, and Go.\n"
"In addition, it offers a container registry that can be used to deploy prebuilt container images."
msgstr "Heroku 是一个平台即服务（PaaS），使开发人员能够完全在云中构建、运行和操作应用程序。它支持多种语言，如 Java、Ruby、Node.js、Scala、Clojure、Python、PHP 和 Go。此外，它还提供一个容器注册中心，可用于部署预构建的容器镜像。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Heroku can be used in different ways to run a Quarkus application:"
msgstr "运行 Quarkus 应用程序时，可以通过不同的方式使用 Heroku："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "As a plain Java program running in a container defined by Heroku's environment"
msgstr "作为在 Heroku 环境定义的容器中运行的普通 Java 程序"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "As a containerized Java program running in a container defined by the Quarkus build process"
msgstr "作为一个容器化 Java 程序，它运行在由 Quarkus 构建流程定义的容器中"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "As a containerized native program running in a container defined by the Quarkus build process"
msgstr "作为一个容器化的本地程序，它运行在由 Quarkus 构建流程定义的容器中"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"All three approaches need to be aware of the port that Heroku assigns to it to handle traffic.\n"
"Luckily, there's a dynamic configuration property for it."
msgstr "这三种方法都需要知道 Heroku 为其分配的端口，以便处理流量。幸运的是，它有一个动态配置属性。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "The guide assumes that you have the https://devcenter.heroku.com/articles/heroku-cli[Heroku CLI] installed."
msgstr "本指南假定您已安装 link:https://devcenter.heroku.com/articles/heroku-cli[Heroku CLI] 。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Common project setup"
msgstr "常见项目设置"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "This guide will take as input an application developed in the xref:getting-started.adoc[Getting Started guide]."
msgstr "本指南将以 xref:getting-started.adoc[入门指南] 中开发的应用程序为输入。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"Make sure you have the getting-started application at hand, or clone the Git repository: `git clone {quickstarts-clone-url}`,\n"
"or download an {quickstarts-archive-url}[archive]. The solution is located in the `getting-started` directory."
msgstr "确保手头有启动程序，或克隆 Git 仓库： `git clone {quickstarts-clone-url}` 或下载 {quickstarts-archive-url}[归档]。解决方案位于 `getting-started` 目录中。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"Heroku can react on changes in your repository, run CI and redeploy your application when your code changes.\n"
"Therefore, we start with a valid repository already."
msgstr "Heroku 可以对版本库中的变化做出反应，在代码发生变化时运行 CI 并重新部署应用程序。因此，我们已经有了一个有效的版本库。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Also, make sure your Heroku CLI is working:"
msgstr "此外，请确保您的 Heroku CLI 正常工作："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Prepare the Quarkus HTTP Port"
msgstr "准备 Quarkus HTTP 端口"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"Heroku picks a random port and assigns it to the container that is eventually running your Quarkus application.\n"
"That port is available as an environment variable under `$PORT`.\n"
"The easiest way to make Quarkus in all deployment scenarios aware of it is using the following configuration:"
msgstr "Heroku 会随机选择一个端口，并将其分配给最终运行 Quarkus 应用程序的容器。该端口可作为 `$PORT` 下的环境变量使用。要让 Quarkus 在所有部署场景中都知道该端口，最简单的方法是使用以下配置："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"This reads as: \"Listen on `$PORT` if this is a defined variable, otherwise listen on 8080 as usual.\"\n"
"Run the following to add this to your `application.properties`:"
msgstr "内容如下\"如果这是一个已定义的变量，则在 `$PORT` 上监听，否则像往常一样在 8080 上监听\"。运行以下程序将其添加到 `application.properties` ："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Deploy the repository and build on Heroku"
msgstr "在 Heroku 上部署版本库并进行构建"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"The first variant uses the Quarkus Maven build to create the _quarkus-app_ application structure containing the runnable \"fast-jar\" as well as all libraries needed\n"
"inside Heroku's build infrastructure and then deploying that result, the other one uses a local build process to create an optimized container."
msgstr "第一个变体使用 Quarkus Maven 构建来创建 _quarkus-app_ 应用程序结构，其中包含可运行的 \"fast-jar \"以及 Heroku 构建基础架构中需要的所有库，然后部署该结果；另一个变体使用本地构建流程来创建优化的容器。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Two additional files are needed in your application's root directory:"
msgstr "在应用程序的根目录中还需要两个文件："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "`system.properties` to configure the Java version"
msgstr "`system.properties` 来配置 Java 版本"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "`Procfile` to configure how Heroku starts your application"
msgstr "`Procfile` 来配置 Heroku 如何启动应用程序"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Quarkus needs JDK 11, so we specify that first:"
msgstr "Quarkus 需要 JDK 11，因此我们首先指定 JDK 11："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "We will deploy a web application so we need to configure the type `web` in the Heroku `Procfile` like this:"
msgstr "我们将部署一个网络应用程序，因此需要像这样在 Heroku `Procfile` 中配置类型 `web` ："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Your application should already be runnable via `heroku local web`."
msgstr "您的应用程序应该已经可以通过 `heroku local web` 运行。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Let's create an application in your account and deploy that repository to it:"
msgstr "让我们在你的账户中创建一个应用程序，并将该资源库部署到它："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "The application will have a generated name and the terminal should output that. `heroku open` opens your default browser to access your new application."
msgstr "应用程序将有一个生成的名称，终端应输出该名称。 `heroku open` 打开默认浏览器，访问新的应用程序。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "To access the REST endpoint via curl, run:"
msgstr "要通过 curl 访问 REST 端点，请运行"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Of course, you can use the Heroku CLI to connect this repo to your GitHub account, too, but this is out of scope for this guide."
msgstr "当然，您也可以使用 Heroku CLI 将此 repo 连接到 GitHub 账户，但这不在本指南的讨论范围之内。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "Deploy as container"
msgstr "作为容器部署"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "The advantage of pushing a whole container is that we are in complete control over its content and maybe even choose to deploy a container with a native executable running on GraalVM."
msgstr "推送整个容器的优势在于我们可以完全控制其内容，甚至可以选择部署一个在 GraalVM 上运行本地可执行文件的容器。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "First, login to Heroku's container registry:"
msgstr "首先，登录 Heroku 的容器注册表："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "We need to add an extension to our project to build container images via the Quarkus Maven plugin:"
msgstr "我们需要为项目添加一个扩展，以便通过 Quarkus Maven 插件构建容器映像："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"The image we are going to build needs to be named accordingly to work with Heroku's registry and deployment.\n"
"We get the generated name via `heroku info` and pass it on to the (local) build:"
msgstr "我们要构建的镜像需要相应地命名，以便与 Heroku 的注册表和部署一起使用。我们通过 `heroku info` 获取生成的名称，并将其传递给（本地）构建："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "With Docker installed, you can now push the image and release it:"
msgstr "安装好 Docker 后，就可以推送并发布镜像了："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "You can and should check the logs to see if your application is now indeed running from the container:"
msgstr "您可以而且应该检查日志，看看应用程序现在是否确实在容器中运行："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"The initial push is rather big, as all layers of the image need to be transferred.\n"
"The following pushes will be smaller."
msgstr "由于需要传输图像的所有图层，最初的推送量相当大。接下来的推送会小一些。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"The biggest advantage we take when deploying our app as a container is to deploy a container with the natively compiled application.\n"
"Why? Because Heroku will stop or sleep the application when there's no incoming traffic.\n"
"A native application will wake up much faster from its sleep."
msgstr "在将应用程序作为容器部署时，我们最大的优势是将容器与本地编译的应用程序一起部署。为什么呢？因为当没有流量进入时，Heroku 会让应用程序停止或休眠。原生应用程序从休眠状态唤醒的速度要快得多。"

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid ""
"The process is pretty much the same.\n"
"We opt in to compiling a native image inside a local container, so that we don't have to deal with installing GraalVM locally:"
msgstr "过程大致相同。我们选择在本地容器中编译本地镜像，这样就不必在本地安装 GraalVM："

#: _versions/3.6/guides/deploying-to-heroku.adoc
#, fuzzy
msgid "After that, push and release again:"
msgstr "之后，再次按下并松开："
