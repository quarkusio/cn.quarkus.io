msgid ""
msgstr ""
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: jekyll-l10n\n"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Getting Started with SmallRye Stork"
msgstr "开始使用 SmallRye Stork"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"The essence of distributed systems resides in the interaction between services.\n"
"In modern architecture, you often have multiple instances of your service to share the load or improve the resilience by redundancy.\n"
"But how do you select the best instance of your service?\n"
"That's where https://smallrye.io/smallrye-stork[SmallRye Stork] helps.\n"
"Stork is going to choose the most appropriate instance.\n"
"It offers:"
msgstr "分布式系统的精髓在于服务之间的交互。在现代架构中，您通常需要多个服务实例来分担负载或通过冗余来提高弹性。但如何选择最佳的服务实例呢？这正是 link:https://smallrye.io/smallrye-stork[SmallRye Stork] 可以提供帮助的地方。Stork 会选择最合适的实例。它提供"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Extensible service discovery mechanisms"
msgstr "可扩展的服务发现机制"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Built-in support for Consul and Kubernetes"
msgstr "对 Consul 和 Kubernetes 的内置支持"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Customizable client load-balancing strategies"
msgstr "可定制的客户负载平衡策略"

#: _versions/3.6/guides/stork.adoc
msgid "Prerequisites"
msgstr "先决条件"

#: _versions/3.6/guides/stork.adoc
msgid "Architecture"
msgstr "架构"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "In this guide, we will build an application composed of:"
msgstr "在本指南中，我们将构建一个由以下内容组成的应用程序："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "A simple blue service exposed on port 9000"
msgstr "在 9000 端口提供简单的蓝色服务"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "A simple red service exposed on port 9001"
msgstr "通过 9001 端口提供简单的红色服务"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "A REST Client calling the blue or red service (the selection is delegated to Stork)"
msgstr "调用蓝色或红色服务的 REST 客户端（选择权委托给 Stork）"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "A REST endpoint using the REST client and calling the services"
msgstr "使用 REST 客户端并调用服务的 REST 端点"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "The blue and red services are registered in https://www.consul.io/[Consul]."
msgstr "蓝色和红色服务在 link:https://www.consul.io/[Consul] 注册。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"For the sake of simplicity, everything (except Consul) will be running in the same Quarkus application.\n"
"Of course, each component will run in its own process in the real world."
msgstr "为简单起见，所有组件（Consul 除外）都将在同一个 Quarkus 应用程序中运行。当然，在现实世界中，每个组件都将在自己的进程中运行。"

#: _versions/3.6/guides/stork.adoc
msgid "Solution"
msgstr "解决方案"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"We recommend that you follow the instructions in the next sections and create the applications step by step.\n"
"However, you can go right to the completed example."
msgstr "我们建议您按照接下来章节的说明逐步创建应用程序。不过，您也可以直接进入已完成的示例。"

#: _versions/3.6/guides/stork.adoc
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库： `git clone {quickstarts-clone-url}` ，或者下载 {quickstarts-archive-url}[存档] 。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "The solution is located in the `stork-quickstart` link:{quickstarts-tree-url}/stork-quickstart[directory]."
msgstr "解决方案位于 `stork-quickstart` link:{quickstarts-tree-url}/stork-quickstart[目录] 中。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Discovery and selection"
msgstr "发现和选择"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Before going further, we need to discuss discovery vs. selection."
msgstr "在进一步讨论之前，我们需要先讨论一下 \"发现 \"与 \"选择\"。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"Service discovery is the process of locating service instances.\n"
"It produces a list of service instances that is potentially empty (if no service matches the request) or contains multiple service instances."
msgstr "服务发现是定位服务实例的过程。它会生成一个服务实例列表，该列表可能为空（如果没有与请求匹配的服务），也可能包含多个服务实例。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"Service selection, also called load-balancing, chooses the best instance from the list returned by the discovery process.\n"
"The result is a single service instance or an exception when no suitable instance can be found."
msgstr "服务选择也称为负载平衡，是从发现过程返回的列表中选择最佳实例。结果是一个服务实例，或者在找不到合适实例时出现异常。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"Stork handles both discovery and selection.\n"
"However, it does not handle the communication with the service but only provides a service instance.\n"
"The various integrations in Quarkus extract the location of the service from that service instance."
msgstr "Stork 同时处理发现和选择。不过，它并不处理与服务的通信，而只是提供一个服务实例。Quarkus 中的各种集成可以从该服务实例中提取服务的位置。"

#: _versions/3.6/guides/stork.adoc
msgid "Bootstrapping the project"
msgstr "创建项目"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Create a Quarkus project importing the quarkus-rest-client-reactive and quarkus-resteasy-reactive extensions using your favorite approach:"
msgstr "创建一个 Quarkus 项目，使用你喜欢的方法导入 quarkus-rest-client-reactive 和 quarkus-resteasy-reactive 扩展："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "In the generated project, also add the following dependencies:"
msgstr "在生成的项目中，还要添加以下依赖项："

#: _versions/3.6/guides/stork.adoc
msgid "pom.xml"
msgstr "pom.xml"

#: _versions/3.6/guides/stork.adoc
msgid "build.gradle"
msgstr "build.gradle"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"`stork-service-discovery-consul` provides an implementation of service discovery for Consul.\n"
"`smallrye-mutiny-vertx-consul-client` is a Consul client which we will use to register our services in Consul."
msgstr "`stork-service-discovery-consul` `smallrye-mutiny-vertx-consul-client` 是一个 Consul 客户端，我们将用它在 Consul 中注册我们的服务。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "The Blue and Red services"
msgstr "蓝色和红色服务"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Let's start with the very beginning: the service we will discover, select and call."
msgstr "让我们从头开始：我们要发现、选择和调用的服务。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Create the `src/main/java/org/acme/services/BlueService.java` with the following content:"
msgstr "创建 `src/main/java/org/acme/services/BlueService.java` ，内容如下："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"It creates a new HTTP server (using Vert.x) and implements our simple service when the application starts.\n"
"For each HTTP request, it sends a response with \"Hello from Blue!\" as the body."
msgstr "它创建了一个新的 HTTP 服务器（使用 Vert.x），并在应用程序启动时实现了我们的简单服务。对于每个 HTTP 请求，它都会发送一个以 \"Hello from Blue!\"为正文的响应。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Following the same logic, create the `src/main/java/org/acme/services/RedService.java` with the following content:"
msgstr "按照同样的逻辑，创建 `src/main/java/org/acme/services/RedService.java` ，内容如下："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "This time, it writes \"Hello from Red!\"."
msgstr "这一次，它写的是 \"你好，来自小红帽！\"。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Service registration in Consul"
msgstr "领事馆服务登记"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Now that we have implemented our services, we need to register them into Consul."
msgstr "既然我们已经实现了服务，就需要将它们注册到 Consul 中。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Stork is not limited to Consul and integrates with other service discovery mechanisms."
msgstr "Stork 并不局限于 Consul，它还与其他服务发现机制集成。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Create the `src/main/java/org/acme/services/Registration.java` file with the following content:"
msgstr "创建 `src/main/java/org/acme/services/Registration.java` 文件，内容如下："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"When the application starts, it connects to Consul using the Vert.x Consul Client and registers our two instances.\n"
"Both registration uses the same name (`my-service`), but different ids to indicate that it's two instances of the same _service_."
msgstr "应用程序启动时，会使用 Vert.x Consul 客户端连接 Consul 并注册两个实例。两个注册使用相同的名称（ `my-service` ），但 ID 不同，以表示这是同一个 _服务_ 的两个实例。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "The REST Client interface and the front end API"
msgstr "REST 客户端界面和前端应用程序接口"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "So far, we didn't use Stork; we just scaffolded the services we will be discovering, selecting, and calling."
msgstr "到目前为止，我们还没有使用 Stork；我们只是为我们将要发现、选择和调用的服务搭建了脚手架。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"We will call the services using the Reactive REST Client.\n"
"Create the `src/main/java/org/acme/MyService.java` file with the following content:"
msgstr "我们将使用 Reactive REST 客户端调用服务。创建 `src/main/java/org/acme/MyService.java` 文件，内容如下："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"It's a straightforward REST client interface containing a single method. However, note the `baseUri` attribute.\n"
"It starts with `stork://`.\n"
"It instructs the REST client to delegate the discovery and selection of the service instances to Stork.\n"
"Notice the `my-service` part in the URL.\n"
"It is the service name we will be using in the application configuration."
msgstr "这是一个直接的 REST 客户端接口，只包含一个方法。不过，请注意 `baseUri` 属性。它以 `stork://` 开头，指示 REST 客户端委托 Stork 发现和选择服务实例。请注意 URL 中的 `my-service` 部分。这是我们将在应用配置中使用的服务名称。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"It does not change how the REST client is used.\n"
"Create the `src/main/java/org/acme/FrontendApi.java` file with the following content:"
msgstr "它不会改变 REST 客户端的使用方式。创建 `src/main/java/org/acme/FrontendApi.java` 文件，内容如下："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "It injects and uses the REST client as usual."
msgstr "它像往常一样注入并使用 REST 客户端。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Stork Filter"
msgstr "斯托克过滤器"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"The `baseUri` configured in the REST client will be processed by `StorkClientRequestFilter` class, this is a https://quarkus.io/specs/jaxrs/2.1/index.html#filters[Jakarta REST filter].\n"
"If you need to process the metadata associated with a message: HTTP headers, query parameters, media type, and other metadata, you can implement another filter to configure what you need.\n"
"Let’s implement a custom filter to add logging capability to our service. We create `CustomLoggingFilter` and annotating it with the @Provider annotation:"
msgstr "REST 客户端配置的 `baseUri` 将由 `StorkClientRequestFilter` 类处理，这是一个 link:https://quarkus.io/specs/jaxrs/2.1/index.html#filters[Jakarta REST 过滤器] 。如果需要处理与消息相关的元数据：HTTP 头信息、查询参数、媒体类型和其他元数据，你可以执行另一个过滤器来配置你需要的内容。让我们实现一个自定义过滤器，为我们的服务添加日志功能。我们创建 `CustomLoggingFilter` ，并使用 @Provider 注解对其进行注解："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"The order in which filters are executed is defined by https://quarkus.io/specs/jaxrs/2.1/index.html#priorities[Priorities].\n"
"Note that `CustomLoggingFilter` is using a default value, so the user-level priority and the `StorkClientRequestFilter` uses the security authentication filter priority. This means that `StorkClientRequestFilter` will be executed before our `CustomLoggingFilter`.\n"
"Use `@Priority` annotation to change this behaviour."
msgstr "过滤器的执行顺序由 link:https://quarkus.io/specs/jaxrs/2.1/index.html#priorities[优先级] 定义。请注意， `CustomLoggingFilter` 使用的是默认值，因此是用户级优先级，而 `StorkClientRequestFilter` 使用的是安全验证过滤器优先级。这意味着 `StorkClientRequestFilter` 将在 `CustomLoggingFilter` 之前执行。使用 `@Priority` 注释可以改变这种行为。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Stork configuration"
msgstr "鹳鸟配置"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "The system is almost complete. We only need to configure Stork and the `Registration` bean."
msgstr "系统已基本完成。我们只需要配置 Stork 和 `Registration` bean。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "In the `src/main/resources/application.properties`, add:"
msgstr "在 `src/main/resources/application.properties` 中，加入"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "The first two lines provide the Consul location used by the `Registration` bean."
msgstr "前两行提供了 `Registration` Bean 使用的 Consul 位置。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"The other properties are related to Stork.\n"
"`stork.my-service.service-discovery` indicates which type of service discovery we will be using to locate the `my-service` service.\n"
"In our case, it's `consul`.\n"
"`quarkus.stork.my-service.service-discovery.consul-host` and `quarkus.stork.my-service.service-discovery.consul-port` configures the access to Consul.\n"
"Finally, `quarkus.stork.my-service.load-balancer.type` configures the service selection.\n"
"In our case, we use a `round-robin`."
msgstr "其他属性与 Stork 有关。 `stork.my-service.service-discovery` 表示我们将使用哪种服务发现类型来定位 `my-service` 服务。在我们的例子中，是 `consul` 。 `quarkus.stork.my-service.service-discovery.consul-host` 和 `quarkus.stork.my-service.service-discovery.consul-port` 配置了对 Consul 的访问。最后， `quarkus.stork.my-service.load-balancer.type` 配置服务选择。在本例中，我们使用的是 `round-robin` 。"

#: _versions/3.6/guides/stork.adoc
msgid "Running the application"
msgstr "运行应用程序"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"We're done!\n"
"So, let's see if it works."
msgstr "我们完成了那么，让我们看看它是否有效。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "First, start Consul:"
msgstr "首先，启动执政官："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "If you start Consul differently, do not forget to edit the application configuration."
msgstr "如果以不同方式启动 Consul，请不要忘记编辑应用程序配置。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "Then, package the application:"
msgstr "然后，打包应用程序："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "And run it:"
msgstr "并运行它："

#: _versions/3.6/guides/stork.adoc
msgid "In another terminal, run:"
msgstr "在另外一个终端中，运行:"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "The responses alternate between `Hello from Red!` and `Hello from Blue!`."
msgstr "答复在 `Hello from Red!` 和 `Hello from Blue!` 之间交替出现。"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "You can compile this application into a native executable:"
msgstr "您可以将此应用程序编译成本地可执行文件："

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "And start it with:"
msgstr "并以"

#: _versions/3.6/guides/stork.adoc
msgid "Going further"
msgstr "进一步探索"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid ""
"This guide has shown how to use SmallRye Stork to discover and select your services.\n"
"You can find more about Stork in:"
msgstr "本指南介绍了如何使用 SmallRye Stork 发现和选择服务。有关 Stork 的更多信息，请参阅"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "the xref:stork-reference.adoc[Stork reference guide],"
msgstr "xref:stork-reference.adoc[鹳鸟参考指南] 、"

#: _versions/3.6/guides/stork.adoc
#, fuzzy
msgid "the https://smallrye.io/smallrye-stork[SmallRye Stork website]."
msgstr "link:https://smallrye.io/smallrye-stork[SmallRye Stork 网站] 。"
