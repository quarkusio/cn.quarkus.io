# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-20 14:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Title =
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:2
#, no-wrap
msgid "Quarkus Security overview"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:7
msgid "Quarkus Security is a framework that provides the architecture, multiple authentication and authorization mechanisms, and other tools for you to build secure and production-quality Java applications."
msgstr "Quarkus Security是一个框架，它提供了架构、多种认证和授权机制以及其他工具，用来为开发者提供构建达到生产级别安全性质量保证的Quarkus应用程序。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:8
#, no-wrap
msgid "Getting started with Quarkus Security"
msgstr "开始使用Quarkus Security"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:11
msgid "Before you start building security into your Quarkus applications, review the overview information to learn about the Quarkus Security architecture and the different authentication and authorization mechanisms that Quarkus supports."
msgstr "在您开始在您的Quarkus应用程序中建立安全机制之前，请回顾一下概述信息，了解Quarkus Security架构以及Quarkus支持的不同认证和授权机制。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:15
msgid "To get started with security in Quarkus, we recommend that you first combine the Quarkus built-in xref:security-basic-authentication-concept.adoc[Basic HTTP authentication] with the JPA identity provider to enable role-based access control (RBAC).  Complete the steps in the xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication] tutorial.  After you have successfully secured your Quarkus application with basic HTTP authentication, you can increase the security further by adding more advanced authentication mechanisms, for example, OpenID Connect (OIDC) authentication."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:16
#, no-wrap
msgid "Security architecture"
msgstr "安全架构"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:19
msgid "The `HttpAuthenticationMechanism` interface is the main entry mechanism for securing HTTP applications in Quarkus."
msgstr "`HttpAuthenticationMechanism` 接口是Quarkus 保护HTTP 程序安全的主要入口机制。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:22
msgid "Quarkus Security uses `HttpAuthenticationMechanism` to extract the authentication credentials from the HTTP request and delegates them to `IdentityProvider` to convert the credentials to `SecurityIdentity`.  For example, the credentials can come from the `Authorization` header, client HTTPS certificates, or cookies."
msgstr "Quarkus Security使用 `HttpAuthenticationMechanism` 从HTTP请求中提取认证凭证，并委托给 `IdentityProvider` 来完成这些凭证到 `SecurityIdentity` 的转换。例如，凭证可能来自于HTTP `Authorization` 头、客户端HTTPS证书或cookies。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:24
msgid "`IdentityProvider` verifies the authentication credentials and maps them to `SecurityIdentity`, which has the username, roles, original authentication credentials, and other attributes."
msgstr "`IdentityProvider` 会验证认证凭证并将其映射到 `SecurityIdentity` ，其中包含用户名、角色、原始认证凭证和其他属性。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:26
msgid "For every authenticated resource, you can inject a `SecurityIdentity` instance to get the authenticated identity information."
msgstr "对于每个认证资源，您可以注入一个 `SecurityIdentity` 实例来获得认证的身份信息。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:29
msgid "In other contexts, it is possible to have other parallel representations of the same information or parts of it, for example, `SecurityContext` for JAX-RS or `JsonWebToken` for JSON Web Tokens (JWT)."
msgstr "在其他一些情况下，您可能有相同信息或部分相同信息的其他不同表示，如JAX-RS的 `SecurityContext` ，或JWT的 `JsonWebToken` 。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:30
#, no-wrap
msgid "Authentication mechanisms"
msgstr "认证机制"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:33
msgid "Quarkus supports multiple authentication mechanisms"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:34
#, no-wrap
msgid "Basic and Form HTTP authentication"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:37
msgid "xref:security-basic-authentication-concept.adoc[Basic HTTP Authentication] and xref:security-built-in-authentication-support-concept.adoc#form-auth[Form HTTP authentication] are the core authentication mechanisms supported in Quarkus."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:38
#, no-wrap
msgid "WebAuthn authentication"
msgstr "WebAuthn认证机制"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:43
msgid "https://webauthn.guide/[WebAuthn] is an authentication mechanism that replaces passwords.  When you write a service for registering new users, or logging them in, instead of asking for a password, you can use WebAuthn, which replaces the password.  For more information, see xref:security-webauthn.adoc[Secure a Quarkus application by using the WebAuthn authentication mechanism]."
msgstr "link:https://webauthn.guide/[WebAuthn] 是一种旨在取代密码的认证机制。简而言之，每当您写一个注册新用户或提供登录的服务，您就可以使用WebAuthn来代替使用密码的方式。更多信息，请参阅 link:security-webauthn.html[使用WebAuthn 认证机制保护 Quarkus 应用程序]."

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:44
#, no-wrap
msgid "Mutual TLS (mTLS) authentication"
msgstr "TLS互认证"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:48
msgid "Quarkus provides mutual TLS (mTLS) authentication so that you can authenticate users based on their X.509 certificates.  For more information, see xref:security-built-in-authentication-support-concept.adoc#mutual-tls[mutual TLS authentication]."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:49
#, no-wrap
msgid "OpenID Connect authentication"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:52
msgid "OpenID Connect (OIDC) is an identity layer that works on top of the OAuth 2.0 protocol. OIDC enables client applications to verify the identity of a user based on the authentication performed by the OIDC provider and to retrieve basic information about that user."
msgstr "OpenID Connect（OIDC）是一个身份层，它工作在OAuth 2.0协议之上。OIDC使客户端应用程序能够根据OIDC提供者进行的认证来验证用户的身份，并获取用户的基本信息。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:57
msgid "The Quarkus `quarkus-oidc` extension provides a reactive, interoperable, multitenant-enabled OIDC adapter that supports Bearer Token and Authorization Code Flow authentication mechanisms.  The Bearer Token mechanism extracts the token from the HTTP Authorization header.  The Authorization Code Flow mechanism redirects the user to an OIDC provider to authenticate the identity of the user.  After the user is redirected back to Quarkus, the mechanism completes the authentication process by exchanging the provided code that was granted for the ID, access, and refresh tokens."
msgstr "`quarkus-oidc` 扩展提供了一个响应式的、可互操作的、支持多租户的OIDC适配器，以支持 `Bearer Token` 和 `Authorization Code Flow` 认证机制。`Bearer Token` 机制从HTTP header中提取token。 `Authorization Code Flow` 机制将用户重定向到OIDC提供者来认证用户身份，并在用户被重定向回Quarkus后，通过将提供的代码授权与ID、访问和刷新token进行交换来完成认证过程。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:60
msgid "You can verify ID and access JWT tokens by using the refreshable JSON Web Key (JWK) set or you can introspect them remotely.  However, opaque (binary) tokens can only be introspected remotely."
msgstr "您可以使用可刷新的 `JWK` 密钥集验证ID和访问 `JWT` token。但JWT和不透明（二进制）token都可以被远程自省(introspect)。"

#. type: delimited block =
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:64
msgid "Using the Quarkus OIDC extension, both Bearer Token and Authorization Code Flow mechanisms use <<smallrye-jwt, SmallRye JWT>> to represent JWT tokens as MicroProfile JWT `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "通过 `Quarkus OIDC` 扩展， `Bearer` 和 `Authorization Code Flow` 认证机制都使用 link:#smallrye-jwt[SmallRye JWT] 来将Microprofile JWT `org.eclipse.microprofile.jwt.JsonWebToken` 表示为JWTtoken。"

#. type: Title ====
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:66
#, no-wrap
msgid "Additional Quarkus resources for OIDC authentication"
msgstr "用于OIDC认证的其他Quarkus资源"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:69
msgid "For more information about OIDC authentication and authorization methods you can use to secure your Quarkus applications, see the following detailed resources:"
msgstr "关于可以应用于保护Quarkus程序的OIDC认证和授权的更多方式，请看以下更详细的资源："

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:72
#, no-wrap
msgid "OIDC topic"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:73
#, no-wrap
msgid "Quarkus information resource"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:73
#, no-wrap
msgid "Bearer Token authentication mechanis"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:74
#, no-wrap
msgid "xref:security-oidc-bearer-authentication-concept.adoc[OIDC Bearer authentication]"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:74
#, no-wrap
msgid "Authorization Code Flow authentication mechanis"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:75
#, no-wrap
msgid "xref:security-openid-connect-web-authentication.adoc[OpenID Connect (OIDC) authorization code flow mechanism]"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:75
#, no-wrap
msgid "Multiple tenants that can support Bearer Token or Authorization Code Flow mechanism"
msgstr "可支持 Bearer Token or Authorization Code Flow 机制的多租户模式"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:76
#, no-wrap
msgid "xref:security-openid-connect-multitenancy.adoc[Using OpenID Connect (OIDC) multi-tenancy]"
msgstr "link:security-openid-connect-multitenancy.html[使用OpenID连接（OIDC）多租户]"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:76
#, no-wrap
msgid "Using Keycloak to centralize authorization"
msgstr "使用Keycloak进行集中授权"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:77
#, no-wrap
msgid "xref:security-keycloak-authorization.adoc[Using OpenID Connect (OIDC) and Keycloak to centralize authorization]"
msgstr "link:security-keycloak-authorization.html[使用OpenID连接（OIDC）和Keycloak来集中授权]"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:77
#, no-wrap
msgid "Configuring Keycloak programmatically"
msgstr "以编程方式配置Keycloak"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:78
#, no-wrap
msgid "xref:security-keycloak-admin-client.adoc[Using the Keycloak admin client]"
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:84
msgid "If you need to enable the Quarkus OIDC extension at runtime, set `quarkus.oidc.tenant-enabled=false` at build time and then re-enable it at runtime by using a system property.  For more information about managing the individual tenant configurations in multitenant OIDC deployments, see the _Disabling tenant configurations_ section in the xref:security-openid-connect-multitenancy.adoc#disable-tenant[Using OpenID Connect (OIDC) multi-tenancy] guide."
msgstr "如果您想在运行时启用Quarkus OIDC扩展，那么在构建时设置 `quarkus.oidc.tenant-enabled=false` ，并在运行时使用系统属性重新启用它。更多关于管理多租户OIDC部署中各个租户配置的信息，请参见 link:security-openid-connect-multitenancy.html#disable-tenant[禁用租户配置] 。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:86
#, no-wrap
msgid "OpenID Connect client and filters"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:89
msgid "The `quarkus-oidc-client` extension provides `OidcClient` for acquiring and refreshing access tokens from OpenID Connect and OAuth2 providers that support the following token grants:"
msgstr "`quarkus-oidc-client` 扩展提供 `OidcClient` ，用于从支持以下token授权的OpenID Connect和OAuth2提供者那里获取和刷新访问token："

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:90
msgid "`client-credentials`"
msgstr "`client-credentials`"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:91
msgid "`password`"
msgstr "`password`"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:92
msgid "`refresh_token`"
msgstr "`refresh_token`"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:96
msgid "The `quarkus-oidc-client-filter` extension requires the `quarkus-oidc-client` extension and provides JAX-RS `OidcClientRequestFilter`, which sets the access token acquired by `OidcClient` as the `Bearer` scheme value of the HTTP `Authorization` header.  This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint, but it is not related to the authentication requirements of this service endpoint.  For example, it can be a public endpoint, or it can be protected with mTLS."
msgstr "`quarkus-oidc-client-filter` 扩展依赖于 `quarkus-oidc-client` 扩展，并提供 JAX-RS `OidcClientRequestFilter` ，它将由 `OidcClient` 获得的访问token设置为 HTTP `Authorization` 头的 `Bearer` scheme值。这个过滤器可以与注入当前 Quarkus 节点的 MP RestClient 实现一起被注册，但它与这个服务节点的认证要求无关。例如，它可以是一个公共节点，也可以用mTLS保护。"

#. type: delimited block =
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:100
msgid "In this scenario, you do not need to protect your Quarkus endpoint by using the Quarkus OpenID Connect adapter."
msgstr "在这种情况下，您不需要通过使用Quarkus OpenID Connect适配器来保护您的Quarkus节点。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:105
msgid "The `quarkus-oidc-token-propagation` extension requires the `quarkus-oidc` extension and provides JAX-RS `TokenCredentialRequestFilter`, which sets the OpenID Connect Bearer or Authorization Code Flow access token as the `Bearer` scheme value of the HTTP `Authorization` header.  This filter can be registered with MP RestClient implementations injected into the current Quarkus endpoint, which in turn must be protected by using the Quarkus OpenID Connect adapter.  This filter can be used to propagate the access token to the downstream services."
msgstr "`quarkus-oidc-token-propagation` 扩展依赖于 `quarkus-oidc` 扩展，并提供 JAX-RS  `TokenCredentialRequestFilter` ，它将 OpenID Connect Bearer 或 Authorization Code Flow 访问token设置为 HTTP `Authorization` 头的 `Bearer` scheme值。这个过滤器可以与注入当前 Quarkus 节点的 MP RestClient 实现一起被注册，并且Quarkus节点本身必须用Quarkus OpenID Connect适配器来保护。这个过滤器可以用来将访问token传播到下游服务中。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:107
msgid "For more information, see the xref:security-openid-connect-client.adoc[OpenID Connect client and token propagation quickstart] and xref:security-openid-connect-client-reference.adoc[OpenID Connect (OIDC) and OAuth2 client and filters reference] guides."
msgstr "更多信息请参见《 link:security-openid-connect-client.html[使用OpenID Connect客户端和token传递quickstart] 》和 《 link:security-openid-connect-client-reference.htmlOpenID Connect (OIDC) 和 OAuth2 客户端以及过滤器参考] 》指南。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:109
#, no-wrap
msgid "SmallRye JWT authentication"
msgstr "SmallRye JWT authentication"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:112
msgid "The `quarkus-smallrye-jwt` extension provides a MicroProfile JSON Web Token (JWT) 1.2.1 implementation and multiple options to verify signed and encrypted `JWT` tokens and represents them as `org.eclipse.microprofile.jwt.JsonWebToken`."
msgstr "`quarkus-smallrye-jwt` 提供Microprofile JWT 1.2.1的实现和更多的选项来验证签名和加密的 `JWT` token，并将其表示为 `org.eclipse.microprofile.jwt.JsonWebToken`。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:115
msgid "`quarkus-smallrye-jwt` is an alternative to the `quarkus-oidc` Bearer Token authentication mechanism, and verifies only `JWT` tokens by using either PEM keys or the refreshable `JWK` key set.  `quarkus-smallrye-jwt` also provides the JWT generation API, which you can use to easily create `signed`, `inner-signed`, and `encrypted` `JWT` tokens."
msgstr "`quarkus-smallrye-jwt` 提供了一个替代 `quarkus-oidc` Bearer Token认证机制的方法，并且目前只能验证使用PEM密钥或可刷新的 `JWK` 密钥集的 `JWT` token。此外，`quarkus-smallrye-jwt` 还提供了 JWT generation API`，以便轻松创建 `signed` 、 `inner-signed` 和 `encrypted` `JWT` token。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:117
msgid "For more information, see xref:security-jwt.adoc[Using SmallRye JWT role-based access control]."
msgstr "更多信息请参见《 link:security-jwt.html[使用SmallRye JWT RBAC] 》指南。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:118
#, no-wrap
msgid "OAuth2 authentication"
msgstr "OAuth2 认证机制"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:122
msgid "`quarkus-elytron-security-oauth2` provides an alternative to the `quarkus-oidc` Bearer Token authentication mechanism. `quarkus-elytron-security-oauth2` is based on `Elytron` and is primarily intended for introspecting opaque tokens remotely.  For more information, see xref:security-oauth2.adoc[Using OAuth2]."
msgstr "`quarkus-elytron-security-oauth2` 提供了一个替代 `quarkus-oidc` Bearer Token认证机制的方法。它基于 `Elytron` 并且主要是为了对不透明的token进行远程自我检查。更多信息请参见 link:security-oauth2.html[使用OAuth2] 指南。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:124
#, no-wrap
msgid "Choosing between OpenID Connect, SmallRye JWT, and OAuth2 authentication mechanisms"
msgstr "在OpenID Connect、SmallRye JWT和OAuth2扩展之间做出选择"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:127
msgid "Use the following information to help you to decide which authentication mechanism to use to secure your Quarkus applications:"
msgstr "使用以下信息来帮助您决定使用哪种认证机制来保护您的Quarkus应用程序："

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:130
msgid "`quarkus-oidc` requires an OpenID Connect provider such as Keycloak, which can be used to verify the Bearer tokens or authenticate the end users with the Authorization Code flow.  In both cases, `quarkus-oidc` requires a connection to the specified OpenID Connect provider."
msgstr "`quarkus-oidc` 扩展需要一个OpenID Connect提供者，如Keycloak，用以验证Bearer tokens或用Authorization Code flow验证终端用户。在这两种情况下 `quarkus-oidc` 需要连接到这个OpenID Connect提供者。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:133
msgid "If the user authentication requires Authorization Code flow or you need to support multiple tenants, use `quarkus-oidc`.  `quarkus-oidc` can also request user information by using both Authorization Code Flow and Bearer access tokens."
msgstr "如果用户认证需要是使用Authorization Code flow或者您需要支持多租户，请使用 `quarkus-oidc` 。 `quarkus-oidc` 也可以通过Authorization Code Flow 和 Bearer access tokens来请求用户信息。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:135
msgid "If your Bearer tokens must be verified, use `quarkus-oidc`, `quarkus-smallrye-jwt`, or `quarkus-elytron-security-oauth2`."
msgstr "当需要验证Bearer tokens时，您可以使用 `quarkus-oidc` , `quarkus-smallrye-jwt` 和 `quarkus-elytron-security-oauth2` 。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:138
msgid "If your Bearer tokens are in a JWT format, you can use either of the three extensions. Both `quarkus-oidc` and `quarkus-smallrye-jwt` support refreshing the JsonWebKey (JWK) set when the OpenID Connect provider rotates the keys.  Therefore, if remote token introspection must be avoided or is unsupported by the providers, use `quarkus-oidc` or `quarkus-smallrye-jwt` for verifying JWT tokens."
msgstr "如果您有JWT格式的 Bearer tokens，那么这三个扩展都可以使用。 `quarkus-oidc` 和 `quarkus-smallrye-jwt` 都支持在OpenID Connect提供者旋转密钥时刷新JsonWebKey（JWK）集，因此，如果必须避免远程token自查或提供者不支持，则应使用 `quarkus-oidc` 或 `quarkus-smallrye-jwt` 来验证JWTtoken。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:141
msgid "If you need to introspect the JWT tokens remotely, you can use either `quarkus-oidc` or `quarkus-elytron-security-oauth2` because they support the verification of the opaque or binary tokens by using remote introspection.  `quarkus-smallrye-jwt` does not support the remote introspection of both opaque or JWT tokens but instead relies on the locally available keys that are usually retrieved from the OpenID Connect provider."
msgstr "如果您需要进行JWT tokens远程自查，您可以使用 `quarkus-oidc` 或 `quarkus-elytron-security-oauth2` ，因为它们支持通过使用远程自查来验证不透明或二进制token。 `quarkus-smallrye-jwt` 不支持对不透明或JWT token进行远程自查，而是依赖于通常从OpenID Connect提供者那里检索的本地可用密钥。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:144
msgid "`quarkus-oidc` and `quarkus-smallrye-jwt` support the injecting of JWT and opaque tokens into the endpoint code.  Injected JWT tokens provide more information about the user. All extensions can have the tokens injected as `Principal`."
msgstr "`quarkus-oidc` 和 `quarkus-smallrye-jwt` 支持将JWT和不透明的token都注入到节点代码中。注入的JWT token可以提供更丰富的用户信息。所有的扩展都可以将 token 以 `Principal` 的形式注入。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:146
msgid "`quarkus-smallrye-jwt` supports more key formats than `quarkus-oidc`. `quarkus-oidc` uses only the JWK-formatted keys that are part of a JWK set, whereas `quarkus-smallrye-jwt` supports PEM keys."
msgstr "`quarkus-smallrye-jwt` 比 `quarkus-oidc` 支持更多的密钥格式。后者只使用属于JWK集的JWK格式的密钥，反之前者还支持PEM密钥。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:149
msgid "`quarkus-smallrye-jwt` handles locally signed, inner-signed-and-encrypted, and encrypted tokens.  While `quarkus-oidc` and `quarkus-elytron-security-oauth2` can also verify such tokens but treats them as opaque tokens and verifies them through remote introspection."
msgstr "`quarkus-smallrye-jwt` 不仅可以在本地处理有签名的 token ，而且还可以处理内部签名并加密(inner-signed-and-encrypted)和单纯加密的 token 。事实上， `quarkus-oidc` 和 `quarkus-elytron-security-oauth2` 也可以验证这样的 token ，但只能把它们当作不透明的 token ，并通过远程自查来验证。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:151
msgid "If you need a lightweight library for the remote introspection of opaque or JWT tokens, use `quarkus-elytron-security-oauth2`."
msgstr "如果您需要一个轻量级的库来进行不透明或JWT token 的远程自查，请使用 `quarkus-elytron-security-oauth2` 。"

#. type: delimited block =
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:158
msgid "Your decision to choose whether to use opaque or JWT token format will be driven by architectural considerations.  Opaque tokens tend to be much shorter than JWT tokens but need most of the token-associated state to be maintained in the provider database.  Opaque tokens are effectively database pointers.  JWT tokens are significantly longer than the opaque tokens but the providers are effectively delegating storing most of the token-associated state to the client by storing it as the token claims and either signing or encrypting them."
msgstr "请注意，选择使用不透明 token 还是JWT token 格式通常是由架构考虑驱动的。不透明 token 通常比JWT token 短得多，但它们需要在提供者的数据库中维护大部分的 token 相关状态。不透明 token 实际上就是数据库指针。JWT token 比不透明 token 要长得多，但提供者通过将大部分 token 相关状态存储为 token 声明并对其进行签名或加密从而有效地将其委托给客户端。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:161
msgid "The following table provides a summary of the options for each authentication mechanism:"
msgstr "下表提供了每种认证机制的选项摘要："

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:163
#, no-wrap
msgid "quarkus-oidc"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:163
#, no-wrap
msgid "quarkus-smallrye-jwt"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:165
#, no-wrap
msgid "quarkus-elytron-security-oauth2"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:166
#, no-wrap
msgid "Requires Bearer JWT verification"
msgstr "需要进行Bearer JWT验证"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:167
#, no-wrap
msgid "Local verification or introspection"
msgstr "本地验证或自查"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:168
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:208
#, no-wrap
msgid "Local verification"
msgstr "本地验证"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:169
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:171
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:173
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:207
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:209
#, no-wrap
msgid "Introspection"
msgstr "自查"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:170
#, no-wrap
msgid "Requires Bearer opaque token verification"
msgstr "需要进行不透明Bearer token验证"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:172
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:177
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:185
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:188
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:189
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:192
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:193
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:196
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:197
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:199
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:201
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:203
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:205
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:211
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:213
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:215
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:217
#, no-wrap
msgid "No"
msgstr "不"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:174
#, no-wrap
msgid "Refreshing `JsonWebKey` set for verifying JWT tokens"
msgstr "刷新 `JsonWebKey` 集以验证JWT tokens"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:175
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:176
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:179
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:180
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:181
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:183
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:184
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:187
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:191
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:195
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:200
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:216
#, no-wrap
msgid "Yes"
msgstr "是"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:178
#, no-wrap
msgid "Represent token as `Principal`"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:182
#, no-wrap
msgid "Inject JWT as MP JSON Web Token (JWT)"
msgstr "将JWT注入为MP Json Web Token（JWT）"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:186
#, no-wrap
msgid "Authorization Code Flow"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:190
#, no-wrap
msgid "Multi-tenancy"
msgstr "多租户"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:194
#, no-wrap
msgid "User info support"
msgstr "支持UserInfo"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:198
#, no-wrap
msgid "PEM key format support"
msgstr "支持Pem密钥格式"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:202
#, no-wrap
msgid "SecretKey support"
msgstr "支持SecretKey"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:204
#, no-wrap
msgid "In JSON Web Key (JWK) format"
msgstr "以JsonWebKey (JWK) 格式"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:206
#, no-wrap
msgid "Inner-signed and encrypted or encrypted tokens"
msgstr "Inner-Signed/Encrypted 或 Encrypted tokens"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:210
#, no-wrap
msgid "Custom token verification"
msgstr "自定义token验证"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:212
#, no-wrap
msgid "With injected JWT parser"
msgstr "使用注入的JWT Parser"

#. type: Table
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:214
#, no-wrap
msgid "Accept JWT as a cookie"
msgstr "接受JWT作为cookie"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:220
#, no-wrap
msgid "Identity providers"
msgstr "身份提供者（Identity Providers）"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:224
msgid "The JPA `IdentityProvider` creates a `SecurityIdentity` instance, which is used during user authentication to verify and authorize access requests making your Quarkus application secure."
msgstr "JPA `IdentityProvider` 创建了一个 `SecurityIdentity` 实例，在用户认证过程中，它被用来验证和授权访问请求以保证您的Quarkus应用程序安全。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:227
msgid "`IdentityProvider` converts the authentication credentials provided by `HttpAuthenticationMechanism` to a `SecurityIdentity` instance."
msgstr "`IdentityProvider` 将 `HttpAuthenticationMechanism` 提供的认证凭证转换为 `SecurityIdentity` 实例。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:230
msgid "Some extensions, for example, `OIDC`, `OAuth2`, and `SmallRye JWT` have inline `IdentityProvider` implementations specific to the supported authentication flow.  For example, `quarkus-oidc` uses its own `IdentityProvider` to convert a token to a `SecurityIdentity` instance."
msgstr "一些扩展如 `OIDC` 、 `OAuth2` 以及 `SmallRye JWT` 有内联的 `IdentityProvider` 实现来针对支持的认证流程的。例如， `quarkus-oidc` 使用它自己的 `IdentityProvider` 来将token转换为 `SecurityIdentity` 实例。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:232
msgid "If you use `Basic` or `Form` HTTP-based authentication then you must add an `IdentityProvider` instance that can convert a username and password to a `SecurityIdentity` instance."
msgstr "如果您使用基于 `Basic` 或 `Form` HTTP的认证，那么您必须添加一个 `IdentityProvider` 实例，它可以将用户名和密码转换成 `SecurityIdentity` 实例。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:234
msgid "For more information about `Basic` or `Form` HTTP-based authentication, see the following resources:"
msgstr "关于基于 `Basic` 或 `Form` HTTP的认证的更多信息，请参阅一下资料："

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:235
msgid "xref:security-basic-authentication-tutorial.adoc[Secure a Quarkus application with Basic authentication]"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:236
msgid "xref:security-jdbc.adoc[Using security with JDBC]"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:237
msgid "xref:security-ldap.adoc[Using security with an LDAP realm]"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:238
#, no-wrap
msgid "Authorization"
msgstr "授权"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:242
msgid "Quarkus also supports role-based access control (RBAC).  For more information about RBAC and other authorization options in Quarkus, see xref:security-authorization-of-web-endpoints-reference.adoc[Security authorization]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:243
#, no-wrap
msgid "Quarkus Security customization"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:246
msgid "Quarkus Security is highly customizable. You can customize the following core security components of Quarkus:"
msgstr "Quarkus Security是高度可定制的。您可以定制Quarkus的以下核心安全组件："

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:248
msgid "`HttpAuthenticationMechanism`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:249
msgid "`IdentityProvider`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:250
msgid "`SecurityidentityAugmentor`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:252
msgid "For more information about customizing Quarkus Security including reactive security, and how to register a security provider, see xref:security-customization.adoc[Security customization]."
msgstr "关于定制Quarkus Security包括响应式Security的更多信息，以及如何注册一个安全提供者，请参见 link:security-customization.html[安全定制] 。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:253
#, no-wrap
msgid "Combining authentication mechanisms"
msgstr "组合认证机制"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:257
msgid "If the user credentials are provided by different sources, you can combine authentication mechanisms.  For example, you can combine built-in `Basic` and `quarkus-oidc` `Bearer` authentication mechanisms."
msgstr "如果用户证书是由不同的来源提供的，您可以使用组合认证机制。例如，您可以结合内置的 `Basic` 和 `quarkus-oidc` `Bearer` 认证机制。"

#. type: delimited block =
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:261
msgid "You cannot combine the `quarkus-oidc` `Bearer` and `smallrye-jwt` authentication mechanisms because both mechanisms attempt to verify the token extracted from the HTTP `Authorization Bearer` scheme."
msgstr "但结合 `quarkus-oidc` `Bearer` 和 `smallrye-jwt` 认证机制是不允许的，因为两者都试图验证从HTTP `Authorization Bearer` scheme中提取的token。"

#. type: Title ===
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:263
#, no-wrap
msgid "Path-specific authentication mechanisms"
msgstr "特定路径认证机制"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:266
msgid "The following configuration example demonstrates how you can enforce a single selectable authentication mechanism for a given request path:"
msgstr "以下配置示例演示了如何强制要求对一个给定的请求路径选择一个认证机制："

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:271
#, no-wrap
msgid ""
"quarkus.http.auth.permission.basic-or-bearer.paths=/service\n"
"quarkus.http.auth.permission.basic-or-bearer.policy=authenticated\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:275
#, no-wrap
msgid ""
"quarkus.http.auth.permission.basic.paths=/basic-only\n"
"quarkus.http.auth.permission.basic.policy=authenticated\n"
"quarkus.http.auth.permission.basic.auth-mechanism=basic\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:279
#, no-wrap
msgid ""
"quarkus.http.auth.permission.bearer.paths=/bearer-only\n"
"quarkus.http.auth.permission.bearer.policy=authenticated\n"
"quarkus.http.auth.permission.bearer.auth-mechanism=bearer\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:282
msgid "Ensure that the value of the `auth-mechanism` property matches the authentication scheme supported by `HttpAuthenticationMechanism`, for example, `basic`, `bearer`, or `form`."
msgstr "`auth-mechanism` 属性值必须与 HttpAuthenticationMechanism 支持的认证方案相匹配，如 `basic` 或 `bearer` 或 `form` 等等。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:283
#, no-wrap
msgid "Proactive authentication"
msgstr "主动认证"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:287
msgid "By default, Quarkus does proactive authentication, which means that all incoming requests with credentials are authenticated regardless of whether the target page requires authentication.  For more information, see xref:security-built-in-authentication-support-concept.adoc#proactive-authentication[Proactive authentication]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:288
#, no-wrap
msgid "Secure connections with SSL/TLS"
msgstr "使用SSL/TLS的安全连接"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:291
msgid "For more information about how Quarkus supports secure connections with SSL/TLS, see the xref:http-reference.adoc#ssl[HTTP reference] information."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:292
#, no-wrap
msgid "Cross-origin resource sharing"
msgstr "Cross-Origin 资源共享"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:296
msgid "To make your Quarkus application accessible to another application running on a different domain, you need to configure cross-origin resource sharing (CORS).  For more information about the CORS filter that is provided by Quarkus, see the xref:http-reference.adoc#cors-filter[HTTP reference] information."
msgstr "如果您打算让您的Quarkus应用程序可以被运行在不同区域的另一个应用程序访问，您将需要配置CORS（Cross-Origin资源共享）。请阅读 link:http-reference.html#cors-filter[TTP reference] 以了解更多关于Quarkus所提供的CORS过滤器信息。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:297
#, no-wrap
msgid "Cross-site Request Forgery (CSRF) prevention"
msgstr "防止跨站请求伪造"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:301
msgid "Quarkus Security provides a RESTEasy Reactive filter that can protect your applications against a https://owasp.org/www-community/attacks/csrf[Cross-Site Request Forgery] attack.  For more information, see xref:security-csrf-prevention.adoc[Cross-Site Request Forgery Prevention]."
msgstr "Quarkus Security提供的RESTEasy Reactive过滤器可以保护您的应用程序免遭 link:https://owasp.org/www-community/attacks/csrf[跨站请求伪造] 攻击。请阅读《 link:security-csrf-prevention.html[跨站请求伪造预防] 指南》以了解更多信息。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:302
#, no-wrap
msgid "SameSite cookies"
msgstr "SameSite cookies"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:306
msgid "You can add a https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite[SameSite] cookie property to any of the cookies set by a Quarkus endpoint.  For more information, see xref:http-reference.adoc#same-site-cookie[SameSite cookies]."
msgstr "您可以在Quarkus终端设置的任何cookie中添加 link:https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite[SameSite] cookie属性的信息，请参见 link:http-reference.html#same-site-cookie[SameSite] 以了解更多信息。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:307
#, no-wrap
msgid "Secret engines"
msgstr "秘密引擎"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:309
msgid "Secrets engines are components that store, generate, or encrypt data."
msgstr "秘密引擎是存储、生成或加密数据的组件。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:312
msgid "Quarkus provides comprehensive HashiCorp Vault support.  For more information, see the link:{vault-guide}[Quarkus and HashiCorp Vault] documentation."
msgstr "Quarkus提供了非常全面的HashiCorp Vault支持，请参见 link:{vault-guide}[Quarkus和HashiCorp Vault] 文档以了解更多信息。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:313
#, no-wrap
msgid "Secure serialization"
msgstr "安全序列化"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:317
msgid "If your Quarkus Security architecture includes RESTEasy Reactive and Jackson, Quarkus can limit the fields that are included in JSON serialization based on the configured security.  For more information, see xref:resteasy-reactive.adoc#secure-serialization[Writing REST services with RESTEasy Reactive]."
msgstr "如果您的Quarkus Security架构包含RESTEasy Reactive和Jackson时，Quarkus可以根据配置的安全性限制包含在JSON序列化中的字段。详情请参见 link:resteasy-reactive.html#secure-serialization[RESTEasy Reactive文档] 。"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:318
#, no-wrap
msgid "Secure auto-generated resources by REST Data with Panache"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:322
msgid "If you're using the REST Data with Panache extension to auto-generate your resources, you can still use the Security annotations within the package `jakarta.annotation.security`.  For more information, see xref:rest-data-panache.adoc#securing-endpoints[Securing auto-generated resources]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:323
#, no-wrap
msgid "National Vulnerability Database"
msgstr "国家安全漏洞数据库"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:327
msgid "Most of the Quarkus tags are registered in the US link:https://nvd.nist.gov[National Vulnerability Database] (NVD) in Common Platform Enumeration (CPE) name format.  To view the registered Quarkus CPE names, use link:https://nvd.nist.gov/products/cpe/search/results?namingFormat=2.3&keyword=quarkus[this search query]."
msgstr "大多数Quarkus标签已经在美国 link:https://nvd.nist.gov[国家漏洞数据库] （NVD）中使用通用平台条目（Common Platform Enumeration，CPE）名称格式注册。所有注册的Quarkus CPE名称都可以通过 link:https://nvd.nist.gov/products/cpe/search/results?namingFormat=2.3&keyword=quarkus[这个搜索查询] 找到。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:329
msgid "If the NVE database flags a CVE against a Quarkus tag, a link that provides more details about the CVE is added to the given CPE name entry."
msgstr "如果NVE数据库针对一个Quarkus tag标记了一个CVE，那么一个提供了这个CVE更多细节的链接就会被添加到给定的CPE名录下。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:331
msgid "The NVD CPE team updates the list regularly, but if you encounter a false positive, report the details by creating an issue in the link:https://github.com/quarkusio/quarkus/issues/2611[quarkusio] repository."
msgstr "NVD CPE团队会定期更新列表，但如果您遇到一个异常，请在 link:https://github.com/quarkusio/quarkus/issues/2611[quarkusio] 仓库中创建一个issue来报告细节。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:333
msgid "You can detect the vulnerabilities at the application build time with an NVD feed by using the Maven link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP Dependency check plugin]."
msgstr "您可以通过使用Maven link:https://jeremylong.github.io/DependencyCheck/dependency-check-maven/[OWASP依赖性检查插件] 在应用构建时用NVD feed来检测漏洞。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:336
msgid "To add the OWASP Dependency check plugin to your Quarkus Maven project, add the following XML configuration to the `pom.xml` file:"
msgstr "要在Quarkus Maven项目中添加OWASP依赖性检查插件，请在 `pom.xml` 文件中添加以下XML配置："

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:344
#, no-wrap
msgid ""
"<plugin>\n"
"    <groupId>org.owasp</groupId>\n"
"    <artifactId>dependency-check-maven</artifactId>\n"
"    <version>${owasp-dependency-check-plugin.version}</version>\n"
"</plugin>\n"
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:349
msgid "Set the `owasp-dependency-check-plugin.version` value to `7.1.1` or later."
msgstr "其中 `owasp-dependency-check-plugin.version` 应该设置为 `7.1.1` 或更高。"

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:352
msgid "Next, configure the plugin as follows:"
msgstr "您可以像这样配置该插件："

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:367
#, no-wrap
msgid ""
"<plugin>\n"
"    <groupId>org.owasp</groupId>\n"
"    <artifactId>dependency-check-maven</artifactId>\n"
"    <version>${owasp-dependency-check-plugin.version}</version>\n"
"    <configuration>\n"
"        <!-- Fail only when detecting High Vulnerability issues -->\n"
"        <failBuildOnCVSS>7</failBuildOnCVSS>\n"
"        <suppressionFiles>\n"
"            <suppressionFile>${project.basedir}/dependency-cpe-suppression.xml</suppressionFile>\n"
"        </suppressionFiles>\n"
"    </configuration>\n"
"</plugin>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:370
msgid "To detect less severe issues, adjust the value of `failBuildOnCVSS` to suppress the false positives, as demonstrated in the following code sample:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:433
#, no-wrap
msgid ""
"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<suppressions xmlns=\"https://jeremylong.github.io/DependencyCheck/dependency-suppression.1.2.xsd\">\n"
"    <!--\n"
"        This is a CPE suppression file for the maven dependency check plugin.\n"
"        Each CPE that is found by error (false positive) needs to be suppressed for a specific jar using its' GAV.\n"
"        See https://jeremylong.github.io/DependencyCheck/general/suppression.html\n"
"     -->\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for netty-tcnative-classes to netty\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.netty:netty-tcnative-classes.*:.*$</gav>\n"
"        <cpe>cpe:/a:netty:netty</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for Quarkus Mutiny to mutiny:mutiny\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.quarkus:quarkus-mutiny.*:.*$</gav>\n"
"        <cpe>cpe:/a:mutiny:mutiny</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for Smallrye Mutiny to mutiny:mutiny\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.smallrye.reactive:mutiny.*:.*$</gav>\n"
"        <cpe>cpe:/a:mutiny:mutiny</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for Smallrye Mutiny to mutiny:mutiny\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.smallrye.reactive:smallrye-mutiny.*:.*$</gav>\n"
"        <cpe>cpe:/a:mutiny:mutiny</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for Smallrye Mutiny to mutiny:mutiny\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^io\\.smallrye.reactive:vertx-mutiny.*:.*$</gav>\n"
"        <cpe>cpe:/a:mutiny:mutiny</cpe>\n"
"    </suppress>\n"
"    <suppress>\n"
"        <notes>\n"
"            <![CDATA[\n"
"                Suppress the false positive CPE for graal-sdk to GraalVM (the JVM distribution)\n"
"            ]]>\n"
"        </notes>\n"
"        <gav regex=\"true\">^org\\.graalvm\\.sdk:g like this\n"
"    </suppress>\n"
"</suppressions>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:437
msgid "Ensure that you review and update the suppression list regularly to ensure that the results are up to date.  You can optionally apply a time limit to individual suppressions by adding an expiry attribute, as outlined in the following example:"
msgstr ""
"确保您会检查和更新这个suppression列表以保证结果是及时更新的。\n"
"您可以选择通过添加过期属性来对单个的suppression项目应用一个时间限制，如下面所示："

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:440
msgid "`<suppress until=\"2022-01-01Z\">...</suppress>` You can adjust the expiry date if you need to."
msgstr ""
"`<suppress until=\"2022-01-01Z\">...</suppress>`\n"
"如果需要您可以调整过期时间。\n"

#. type: Title ==
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:441
#, no-wrap
msgid "Quarkus Security testing"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/security-overview-concept.adoc:444
msgid "When testing Quarkus security, ensure that your `IdentityProvider` is already set with usernames, passwords, and roles in `application.properties`.  For more information about testing Quarkus Security, see xref:security-testing.adoc#configuring-user-information[Configuring user information]."
msgstr "当测试Quarkus Security的时候，请确保您已经在 `application.properties` 设置了 `IdentityProvider` 以及对应的用户名、密码以及角色。请参见 link:security-testing.html#configuring-user-information[设置用户信息] 以了解更多关于测试Quarkus Security的信息。"
