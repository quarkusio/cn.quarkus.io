# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-20 14:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:6
#, no-wrap
msgid "Generating JAX-RS resources with Panache"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:13
msgid "A lot of web applications are monotonous CRUD applications with REST APIs that are tedious to write.  To streamline this task, REST Data with Panache extension can generate the basic CRUD endpoints for your entities and repositories."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:16
msgid "While this extension is still experimental and provides a limited feature set, we hope to get an early feedback for it.  Currently, this extension supports Hibernate ORM and MongoDB with Panache and can generate CRUD resources that work with `application/json` and `application/hal+json` content."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:17
#, no-wrap
msgid "Setting up REST Data with Panache"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:20
msgid "Quarkus provides the following extensions to set up REST Data with Panache. Please, check out the next compatibility table to use the right one according to the technology you're using:"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:21
#, no-wrap
msgid "Compatibility Table"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:23
#, no-wrap
msgid "Extension"
msgstr "扩展"

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:23
#, no-wrap
msgid "Hibernate"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:25
#, no-wrap
msgid "RESTEasy"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:26
#, no-wrap
msgid "<<hr-hibernate-orm, quarkus-hibernate-orm-rest-data-panache>>"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:27
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:35
#, no-wrap
msgid "`ORM`"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:29
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:36
#, no-wrap
msgid "`Classic and Reactive`"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:30
#, no-wrap
msgid "<<hr-hibernate-reactive, quarkus-hibernate-reactive-rest-data-panache>>"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:31
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:33
#, no-wrap
msgid "`Reactive`"
msgstr ""

#. type: Table
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:34
#, no-wrap
msgid "<<hr-mongodb, quarkus-mongodb-rest-data-panache>>"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:39
#, no-wrap
msgid "Hibernate ORM"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:42
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:125
msgid "Add the required dependencies to your build file"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:43
msgid "Hibernate ORM REST Data with Panache extension (`quarkus-hibernate-orm-rest-data-panache`)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:44
msgid "A JDBC driver extension (`quarkus-jdbc-postgresql`, `quarkus-jdbc-h2`, `quarkus-jdbc-mariadb`, ...)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:45
msgid "One of the RESTEasy JSON serialization extensions (the extension supports both RESTEasy Classic and RESTEasy Reactive)"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:47
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:129
#, no-wrap
msgid "pom.xml"
msgstr "pom.xml"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:57
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-hibernate-orm-rest-data-panache</artifactId>\n"
"</dependency>\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-jdbc-postgresql</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:63
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:141
#, no-wrap
msgid ""
"<!-- Use this if you are using RESTEasy Reactive -->\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:71
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:149
#, no-wrap
msgid ""
"<!-- Use this if you are going to use RESTEasy Classic -->\n"
"<!--\n"
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-resteasy-jackson</artifactId>\n"
"</dependency>\n"
"-->\n"
msgstr ""

#. type: Block title
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:74
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:152
#, no-wrap
msgid "build.gradle"
msgstr "build.gradle"

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:78
#, no-wrap
msgid ""
"implementation(\"io.quarkus:quarkus-hibernate-orm-rest-data-panache\")\n"
"implementation(\"io.quarkus:quarkus-jdbc-postgresql\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:81
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:158
#, no-wrap
msgid ""
"// Use this if you are using RESTEasy Reactive\n"
"implementation(\"io.quarkus:quarkus-resteasy-reactive-jackson\")\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:84
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:161
#, no-wrap
msgid ""
"// Use this if you are going to use RESTEasy Classic\n"
"// implementation(\"io.quarkus:quarkus-resteasy-jackson\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:87
msgid "Implement the Panache entities and/or repositories as explained in the xref:hibernate-orm-panache.adoc[Hibernate ORM with Panache guide]."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:88
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:120
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:165
msgid "Define the interfaces for generation as explained in <<hr-generating-resources, the resource generation section>>."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:90
msgid "To see the Hibernate ORM REST Data with Panache in action, you can check out the {quickstarts-tree-url}/hibernate-orm-rest-data-panache-quickstart[hibernate-orm-rest-data-panache-quickstart] quickstart."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:92
#, no-wrap
msgid "Hibernate Reactive"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:95
msgid "Add the required dependencies to your `pom.xml`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:96
msgid "Hibernate Reactive REST Data with Panache extension (`quarkus-hibernate-reactive-rest-data-panache`)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:97
msgid "A Vert.x reactive database driver extension (`quarkus-reactive-pg-client`, `quarkus-reactive-mysql-client`, ...)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:98
msgid "One of the RESTEasy Reactive serialization extensions (`quarkus-resteasy-reactive-jsonb`, `quarkus-resteasy-reactive-jackson`, ...)"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:116
#, no-wrap
msgid ""
"<dependencies>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-hibernate-reactive-rest-data-panache</artifactId>\n"
"    </dependency>\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-reactive-pg-client</artifactId>\n"
"    </dependency>\n"
"   <!-- Use this if you are using RESTEasy Reactive Jackson for serialization -->\n"
"    <dependency>\n"
"        <groupId>io.quarkus</groupId>\n"
"        <artifactId>quarkus-resteasy-reactive-jackson</artifactId>\n"
"    </dependency>\n"
"</dependencies>\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:119
msgid "Implement the Panache entities and/or repositories as explained in the xref:hibernate-reactive-panache.adoc[Hibernate Reactive with Panache guide]."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:122
#, no-wrap
msgid "MongoDB"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:126
msgid "MongoDB REST Data with Panache extension (`quarkus-mongodb-rest-data-panache`)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:127
msgid "One of the RESTEasy JSON serialization extensions (`quarkus-resteasy-reactive-jackson` or `quarkus-resteasy-reactive-jsonb`)"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:135
#, no-wrap
msgid ""
"<dependency>\n"
"    <groupId>io.quarkus</groupId>\n"
"    <artifactId>quarkus-mongodb-rest-data-panache</artifactId>\n"
"</dependency>\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:155
#, no-wrap
msgid "implementation(\"io.quarkus:quarkus-mongodb-rest-data-panache\")\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:164
msgid "Implement the Panache entities and/or repositories as explained in the xref:mongodb-panache.adoc[MongoDB with Panache guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:167
#, no-wrap
msgid "Generating resources"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:172
msgid "REST Data with Panache generates JAX-RS resources based on the interfaces available in your application.  For each entity and repository that you want to generate, provide a resource interface.  _Do not implement these interfaces and don't provide custom methods because they will be ignored._ You can, however, override the methods from the extended interface in order to customize them (see the section at the end)."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:173
#, no-wrap
msgid "PanacheEntityResource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:176
msgid "If your application has an entity (e.g. `Person`) that extends either `PanacheEntity` or `PanacheEntityBase` class, you could instruct REST Data with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:181
#, no-wrap
msgid ""
"public interface PeopleResource extends PanacheEntityResource<Person, Long> {\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:183
#, no-wrap
msgid "PanacheRepositoryResource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:186
msgid "If your application has a simple entity (e.g. `Person`) and a repository (e.g. `PersonRepository`) that implements either `PanacheRepository` or `PanacheRepositoryBase` interface, you could instruct REST Data with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:191
#, no-wrap
msgid ""
"public interface PeopleResource extends PanacheRepositoryResource<PersonRepository, Person, Long> {\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:193
#, no-wrap
msgid "PanacheMongoEntityResource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:196
msgid "If your application has an entity (e.g. `Person`) that extends either `PanacheMongoEntity` or `PanacheMongoEntityBase` class, you could instruct REST Data with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:201
#, no-wrap
msgid ""
"public interface PeopleResource extends PanacheMongoEntityResource<Person, Long> {\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:203
#, no-wrap
msgid "PanacheMongoRepositoryResource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:206
msgid "If your application has a simple entity (e.g. `Person`) and a repository (e.g. `PersonRepository`) that implements either `PanacheMongoRepository` or `PanacheMongoRepositoryBase` interface, you could instruct REST Data with Panache to generate its JAX-RS resource with the following interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:211
#, no-wrap
msgid ""
"public interface PeopleResource extends PanacheMongoRepositoryResource<PersonRepository, Person, Long> {\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:213
#, no-wrap
msgid "The generated resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:217
msgid "The generated resources will be functionally equivalent for both entities and repositories.  The only difference being the particular data access pattern and data storage in use."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:220
msgid "If you have defined one of the `PeopleResource` interfaces mentioned above, this extension will generate its implementation using a particular data access strategy.  The implemented class then will be used by a generated JAX-RS resource, which will look like this:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:226
#, no-wrap
msgid ""
"public class PeopleResourceJaxRs { // The actual class name is going to be unique\n"
"    @Inject\n"
"    PeopleResource resource;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:237
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"{id}\")\n"
"    @Produces(\"application/json\")\n"
"    public Person get(@PathParam(\"id\") Long id){\n"
"        Person person = resource.get(id);\n"
"        if (person == null) {\n"
"            throw new WebApplicationException(404);\n"
"        }\n"
"        return person;\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:248
#, no-wrap
msgid ""
"    @GET\n"
"    @Produces(\"application/json\")\n"
"    public Response list(@QueryParam(\"sort\") List<String> sortQuery,\n"
"            @QueryParam(\"page\") @DefaultValue(\"0\") int pageIndex,\n"
"            @QueryParam(\"size\") @DefaultValue(\"20\") int pageSize) {\n"
"        Page page = Page.of(pageIndex, pageSize);\n"
"        Sort sort = getSortFromQuery(sortQuery);\n"
"        List<Person> people = resource.list(page, sort);\n"
"        // ... build a response with page links and return a 200 response with a list\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:254
#, no-wrap
msgid ""
"    @GET\n"
"    @Path(\"/count\")\n"
"    public long count() {\n"
"        return resource.count();\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:263
#, no-wrap
msgid ""
"    @Transactional\n"
"    @POST\n"
"    @Consumes(\"application/json\")\n"
"    @Produces(\"application/json\")\n"
"    public Response add(Person personToSave) {\n"
"        Person person = resource.add(person);\n"
"        // ... build a new location URL and return 201 response with an entity\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:277
#, no-wrap
msgid ""
"    @Transactional\n"
"    @PUT\n"
"    @Path(\"{id}\")\n"
"    @Consumes(\"application/json\")\n"
"    @Produces(\"application/json\")\n"
"    public Response update(@PathParam(\"id\") Long id, Person personToSave) {\n"
"        if (resource.get(id) == null) {\n"
"            Person person = resource.update(id, personToSave);\n"
"            return Response.status(204).build();\n"
"        }\n"
"        Person person = resource.update(id, personToSave);\n"
"        // ... build a new location URL and return 201 response with an entity\n"
"    }\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:287
#, no-wrap
msgid ""
"    @Transactional\n"
"    @DELETE\n"
"    @Path(\"{id}\")\n"
"    public void delete(@PathParam(\"id\") Long id) {\n"
"        if (!resource.delete(id)) {\n"
"            throw new WebApplicationException(404);\n"
"        }\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:289
#, no-wrap
msgid "Resource customisation"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:293
msgid "REST Data with Panache provides a `@ResourceProperties` and `@MethodProperties` annotations that can be used to customize certain features of the resource.  It can be used in your resource interface:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:300
#, no-wrap
msgid ""
"@ResourceProperties(hal = true, path = \"my-people\")\n"
"public interface PeopleResource extends PanacheEntityResource<Person, Long> {\n"
"    @MethodProperties(path = \"all\")\n"
"    List<Person> list(Page page, Sort sort);\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:304
#, no-wrap
msgid ""
"    @MethodProperties(exposed = false)\n"
"    boolean delete(Long id);\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:306
#, no-wrap
msgid "Available options"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:309
msgid "`@ResourceProperties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:311
msgid "`exposed` - whether resource could be exposed. A global resource property that can be overridden for each method. Default is `true`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:312
msgid "`path` - resource base path. Default path is a hyphenated lowercase resource name without a suffix of `resource` or `controller`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:313
msgid "`rolesAllowed` - List of the security roles permitted to access the resources. It needs a Quarkus security extension to be present, otherwise it will be ignored. Default is empty."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:317
msgid "`paged` - whether collection responses should be paged or not.  First, last, previous and next page URIs are included in the response headers if they exist.  Request page index and size are taken from the `page` and `size` query parameters that default to `0` and `20` respectively.  Default is `true`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:319
msgid "`hal` - in addition to the standard `application/json` responses, generates additional methods that can return `application/hal+json` responses if requested via an `Accept` header.  Default is `false`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:320
msgid "`halCollectionName` - name that should be used when generating a hal collection response. Default name is a hyphenated lowercase resource name without a suffix of `resource` or `controller`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:322
msgid "`@MethodProperties`"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:324
msgid "`exposed` - does not expose a particular HTTP verb when set to `false`. Default is `true`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:325
msgid "`path` - operation path (this is appended to the resource base path). Default is an empty string."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:326
msgid "`rolesAllowed` - List of the security roles permitted to access this operation. It needs a Quarkus security extension to be present, otherwise it will be ignored. Default is empty."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:327
#, no-wrap
msgid "Adding additional methods to the generated resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:330
msgid "You can add additional methods to the generated resources by the REST Data with Panache extension by adding these methods to the resource interface, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:342
#, no-wrap
msgid ""
"@ResourceProperties\n"
"public interface PeopleResource extends PanacheEntityResource<Person, Long> {\n"
"    @GET\n"
"    @Path(\"/name/{name}\")\n"
"    @Produces(\"application/json\")\n"
"    default List<Person> findByName(@PathParam(\"name\") String name) {\n"
"        return Person.find(\"name = :name\", Collections.singletonMap(\"name\", name)).list();\n"
"    }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:345
msgid "And this method will be exposed along with the generated methods using `http://localhost:8080/people/name/Johan`."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:346
#, no-wrap
msgid "Securing endpoints"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:349
msgid "REST Data with Panache will use the Security annotations within the package `jakarta.annotation.security` that are defined on your resource interfaces:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:355
#, no-wrap
msgid ""
"import jakarta.annotation.security.DenyAll;\n"
"import jakarta.annotation.security.RolesAllowed;\n"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:362
#, no-wrap
msgid ""
"@DenyAll\n"
"@ResourceProperties\n"
"public interface PeopleResource extends PanacheEntityResource<Person, Long> {\n"
"    @RolesAllowed(\"superuser\")\n"
"    boolean delete(Long id);\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:365
msgid "Additionally, if you are only interested in specifying the roles that are allowed to use the resources, the `@ResourceProperties` and `@MethodProperties` annotations have the field `rolesAllowed` to list the security roles permitted to access the resource or operation."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:366
#, no-wrap
msgid "Query parameters to list entities"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:369
msgid "REST Data with Panache supports the following query parameters to get the list of entities:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:372
msgid "`page` - a page number which should be returned by a list operation.  It applies to the paged resources only and is a number starting with 0. Default is 0."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:374
msgid "`size` - a page size which should be returned by a list operation.  It applies to the paged resources only and is a number starting with 1. Default is 20."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:377
msgid "`sort` - a comma separated list of fields which should be used for sorting a result of a list operation.  Fields are sorted in the ascending order unless they're prefixed with a `-`.  E.g. `?sort=name,-age` will sort the result by the name ascending by the age descending."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:378
msgid "`namedQuery` - a named query that should be configured at entity level using the annotation `@NamedQuery`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:380
msgid "For example, if you want to get two `People` entities in the first page, you should call `http://localhost:8080/people?page=0&size=2`, and the response should look like:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:395
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:516
#, no-wrap
msgid ""
"[\n"
"  {\n"
"    \"id\": 1,\n"
"    \"name\": \"John Johnson\",\n"
"    \"birth\": \"1988-01-10\"\n"
"  },\n"
"  {\n"
"    \"id\": 2,\n"
"    \"name\": \"Peter Peterson\",\n"
"    \"birth\": \"1986-11-20\"\n"
"  }\n"
"]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:398
msgid "Additionally, you can also filter by the entity fields by adding a query param with the name of the field and the value, for example, calling `http://localhost:8080/people?name=Peter Peterson` would return:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:408
#, no-wrap
msgid ""
"[\n"
"  {\n"
"    \"id\": 2,\n"
"    \"name\": \"Peter Peterson\",\n"
"    \"birth\": \"1986-11-20\"\n"
"  }\n"
"]\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:411
msgid "Filtering by fields is only supported for primitive types."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:412
#, no-wrap
msgid "Complex filtering to list entities using @NamedQuery"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:415
msgid "You can specify a named query to filter when listing the entities. For example, having the following named query in your entity:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:423
#, no-wrap
msgid ""
"@Entity\n"
"@NamedQuery(name = \"Person.containsInName\", query = \"from Person where name like CONCAT('%', CONCAT(:name, '%'))\")\n"
"public class Person extends PanacheEntity {\n"
"  String name;\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:426
msgid "In this example, we have added a named query to list all the persons that contains some text in the `name` field."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:428
msgid "Next, we can set a query param `namedQuery` when listing the entities using the generated resource with the name of the named query that we want to use, for example, calling `http://localhost:8080/people?namedQuery=Person.containsInName&name=ter` would return all the persons which name contains the text \"ter\"."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:430
msgid "For more information about how named queries work, go to https://quarkus.io/guides/hibernate-orm-panache#named-queries[the Hibernate ORM guide] or to https://quarkus.io/guides/hibernate-reactive-panache#named-queries[the Hibernate Reactive guide]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:431
#, no-wrap
msgid "Resource Method Before/After Listeners"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:434
msgid "REST Data with Panache supports the subscription to the following resource method hooks:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:436
msgid "Before/After add resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:437
msgid "Before/After update resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:438
msgid "Before/After delete resource"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:440
msgid "To register your resource method listener, you need to provide a bean that implements the interface `RestDataResourceMethodListener`, for example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:450
#, no-wrap
msgid ""
"@ApplicationScoped\n"
"public class PeopleRestDataResourceMethodListener implements RestDataResourceMethodListener<Person> {\n"
"    @Override\n"
"    public void onBeforeAdd(Person person) {\n"
"        System.out.println(\"Before Save Person: \" + person.name);\n"
"    }\n"
"}\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:452
#, no-wrap
msgid "Response body examples"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:456
msgid "As mentioned above REST Data with Panache supports the `application/json` and `application/hal+json` response content types.  Here are a couple of examples of how a response body would look like for the `get` and `list` operations assuming there are five `Person` records in a database."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:457
#, no-wrap
msgid "GET /people/1"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:460
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:501
msgid "`Accept: application/json`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:468
#, no-wrap
msgid ""
"{\n"
"  \"id\": 1,\n"
"  \"name\": \"John Johnson\",\n"
"  \"birth\": \"1988-01-10\"\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:471
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:520
msgid "`Accept: application/hal+json`"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:496
#, no-wrap
msgid ""
"{\n"
"  \"id\": 1,\n"
"  \"name\": \"John Johnson\",\n"
"  \"birth\": \"1988-01-10\",\n"
"  \"_links\": {\n"
"    \"self\": {\n"
"      \"href\": \"http://example.com/people/1\"\n"
"    },\n"
"    \"remove\": {\n"
"      \"href\": \"http://example.com/people/1\"\n"
"    },\n"
"    \"update\": {\n"
"      \"href\": \"http://example.com/people/1\"\n"
"    },\n"
"    \"add\": {\n"
"      \"href\": \"http://example.com/people\"\n"
"    },\n"
"    \"list\": {\n"
"      \"href\": \"http://example.com/people\"\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:498
#, no-wrap
msgid "GET /people?page=0&size=2"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:588
#, no-wrap
msgid ""
"{\n"
"  \"_embedded\": [\n"
"    {\n"
"      \"id\": 1,\n"
"      \"name\": \"John Johnson\",\n"
"      \"birth\": \"1988-01-10\",\n"
"      \"_links\": {\n"
"        \"self\": {\n"
"          \"href\": \"http://example.com/people/1\"\n"
"        },\n"
"        \"remove\": {\n"
"          \"href\": \"http://example.com/people/1\"\n"
"        },\n"
"        \"update\": {\n"
"          \"href\": \"http://example.com/people/1\"\n"
"        },\n"
"        \"add\": {\n"
"          \"href\": \"http://example.com/people\"\n"
"        },\n"
"        \"list\": {\n"
"          \"href\": \"http://example.com/people\"\n"
"        }\n"
"      }\n"
"    },\n"
"    {\n"
"      \"id\": 2,\n"
"      \"name\": \"Peter Peterson\",\n"
"      \"birth\": \"1986-11-20\",\n"
"      \"_links\": {\n"
"        \"self\": {\n"
"          \"href\": \"http://example.com/people/2\"\n"
"        },\n"
"        \"remove\": {\n"
"          \"href\": \"http://example.com/people/2\"\n"
"        },\n"
"        \"update\": {\n"
"          \"href\": \"http://example.com/people/2\"\n"
"        },\n"
"        \"add\": {\n"
"          \"href\": \"http://example.com/people\"\n"
"        },\n"
"        \"list\": {\n"
"          \"href\": \"http://example.com/people\"\n"
"        }\n"
"      }\n"
"    }\n"
"  ],\n"
"  \"_links\": {\n"
"    \"add\": {\n"
"      \"href\": \"http://example.com/people\"\n"
"    },\n"
"    \"list\": {\n"
"      \"href\": \"http://example.com/people\"\n"
"    },\n"
"    \"first\": {\n"
"      \"href\": \"http://example.com/people?page=0&size=2\"\n"
"    },\n"
"    \"last\": {\n"
"      \"href\": \"http://example.com/people?page=2&size=2\"\n"
"    },\n"
"    \"next\": {\n"
"      \"href\": \"http://example.com/people?page=1&size=2\"\n"
"    }\n"
"  }\n"
"}\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:591
msgid "Both responses would also contain these headers:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:593
msgid "Link: < http://example.com/people?page=0&size=2 >; rel=\"first\""
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:594
msgid "Link: < http://example.com/people?page=2&size=2 >; rel=\"last\""
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:595
msgid "Link: < http://example.com/people?page=1&size=2 >; rel=\"next\""
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/rest-data-panache.adoc:596
msgid "A `previous` link header (and hal link) would not be included, because the previous page does not exist."
msgstr ""
