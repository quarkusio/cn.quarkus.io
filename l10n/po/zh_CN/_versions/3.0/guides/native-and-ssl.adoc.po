# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-01-20 14:14+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. This guide is maintained in the main Quarkus repository
#. and pull requests should be submitted there:
#. https://github.com/quarkusio/quarkus/tree/main/docs/src/main/asciidoc
#. type: Title =
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:6
#, no-wrap
msgid "Using SSL With Native Executables"
msgstr "在原生可执行文件中使用SSL"

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:13
msgid "We are quickly moving to an SSL-everywhere world so being able to use SSL is crucial."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:16
msgid "In this guide, we will discuss how you can get your native executables to support SSL, as native executables don't support it out of the box."
msgstr "在本指南中，我们将讨论如何让你的原生可执行文件支持SSL，因为原生可执行文件并不支持开箱即用。"

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:18
msgid "If you don't plan on using native executables, you can pass your way as in JDK mode, SSL is supported without further manipulations."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:19
#, no-wrap
msgid "Prerequisites"
msgstr "先决条件"

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:22
msgid "To complete this guide, you need:"
msgstr "要完成这个指南，你需要："

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:24
msgid "less than 20 minutes"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:25
msgid "an IDE"
msgstr "一个编辑器"

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:26
msgid "GraalVM installed with `JAVA_HOME` and `GRAALVM_HOME` configured appropriately"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:27
msgid "Apache Maven {maven-version}"
msgstr "Apache Maven {maven-version}"

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:29
msgid "This guide is based on the REST client guide, so you should get this Maven project first."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:31
msgid "Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive]."
msgstr "克隆 Git 仓库: `git clone {quickstarts-clone-url}` ，或者下载一个 {quickstarts-archive-url}[存档]。"

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:33
msgid "The project is located in the `rest-client-quickstart` {quickstarts-tree-url}/rest-client-quickstart[directory]."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:34
#, no-wrap
msgid "Looks like it works out of the box?!?"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:37
msgid "If you open the application's configuration file (`src/main/resources/application.properties`), you can see the following line:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:41
#, no-wrap
msgid "quarkus.rest-client.\"org.acme.rest.client.ExtensionsService\".url=https://stage.code.quarkus.io/api\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:43
msgid "which configures our REST client to connect to an SSL REST service."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:45
msgid "For the purposes of this guide, we also need to remove the configuration that starts the embedded WireMock server that stubs REST client responses so the tests actually propagate calls to the https://stage.code.quarkus.io/api. Update the test file `src/test/java/org/acme/rest/client/ExtensionsResourceTest.java` and remove the line:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:48
#, no-wrap
msgid "@QuarkusTestResource(WireMockExtensions.class)\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:50
msgid "from the `ExtensionsResourceTest` class."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:52
msgid "Now let's build the application as a native executable and run the tests:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:56
msgid "And we obtain the following result:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:62
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:188
#, no-wrap
msgid ""
"[INFO] ------------------------------------------------------------------------\n"
"[INFO] BUILD SUCCESS\n"
"[INFO] ------------------------------------------------------------------------\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:65
msgid "So, yes, it appears it works out of the box and this guide is pretty useless."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:67
msgid "It's not. The magic happens when building the native executable:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:71
#, no-wrap
msgid "[INFO] [io.quarkus.creator.phase.nativeimage.NativeImagePhase] /opt/graalvm/bin/native-image -J-Dsun.nio.ch.maxUpdateArraySize=100 -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dio.netty.leakDetection.level=DISABLED -J-Dio.netty.allocator.maxOrder=3 -J-Dvertx.logger-delegate-factory-class-name=io.quarkus.vertx.core.runtime.VertxLogDelegateFactory -J-Dvertx.disableDnsResolver=true -J-Duser.language=en -J-Duser.country=IE -J-Dfile.encoding=UTF-8 --features=io.quarkus.runner.Feature,io.quarkus.runtime.graal.ResourcesFeature,io.quarkus.runtime.graal.DisableLoggingFeature -J--add-exports=java.security.jgss/sun.security.krb5=ALL-UNNAMED -J--add-opens=java.base/java.text=ALL-UNNAMED -J--add-opens=java.base/java.io=ALL-UNNAMED -J--add-opens=java.base/java.lang.invoke=ALL-UNNAMED -J--add-opens=java.base/java.util=ALL-UNNAMED -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy\\$BySpaceAndTime -H:+AllowFoldMethods -J-Djava.awt.headless=true -H:FallbackThreshold=0 --link-at-build-time -H:+ReportExceptionStackTraces -H:-AddAllCharsets -H:EnableURLProtocols=http,https -H:NativeLinkerOption=-no-pie -H:-UseServiceLoaderFeature -H:+StackTrace -J--add-exports=org.graalvm.sdk/org.graalvm.nativeimage.impl=ALL-UNNAMED -J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk=ALL-UNNAMED -J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.configure=ALL-UNNAMED -J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk.proxy=ALL-UNNAMED -J--add-exports=org.graalvm.nativeimage.builder/com.oracle.svm.core.jdk.localization=ALL-UNNAMED rest-client-quickstart-1.0.0-SNAPSHOT-runner -jar rest-client-quickstart-1.0.0-SNAPSHOT-runner.jar\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:74
msgid "The important part is the following option that was automatically added by Quarkus:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:78
#, no-wrap
msgid "-H:EnableURLProtocols=http,https\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:82
msgid "It enables the native SSL support for your native executable.  But you should not set it manually, we have a nice configuration property for this purpose as described below."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:84
msgid "As SSL is de facto the standard nowadays, we decided to enable its support automatically for some of our extensions:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:86
msgid "the Agroal connection pooling extension (`quarkus-agroal`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:87
msgid "the Amazon Services extension (`quarkus-amazon-*`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:88
msgid "the Consul Config extension (`quarkus-config-consul`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:89
msgid "the Elasticsearch client extensions (`quarkus-elasticsearch-rest-client` and `quarkus-elasticsearch-rest-high-level-client`) and thus the Hibernate Search Elasticsearch extension (`quarkus-hibernate-search-orm-elasticsearch`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:90
msgid "the Elytron Security OAuth2 extension (`quarkus-elytron-security-oauth2`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:91
msgid "the gRPC extension (`quarkus-grpc`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:92
msgid "the Infinispan Client extension (`quarkus-infinispan-client`)."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:93
msgid "the Jaeger extension (`quarkus-jaeger`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:94
msgid "the JGit extension (`quarkus-jgit`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:95
msgid "the JSch extension (`quarkus-jsch`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:96
msgid "the Kafka Client extension (`quarkus-kafka-client`), if Apicurio Registry 2.x Avro library is used"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:97
msgid "the Keycloak Authorization extension (`quarkus-keycloak-authorization`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:98
msgid "the Kubernetes client extension (`quarkus-kubernetes-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:99
msgid "the Logging Sentry extension (`quarkus-logging-sentry`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:100
msgid "the Mailer extension (`quarkus-mailer`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:101
msgid "the MongoDB client extension (`quarkus-mongodb-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:102
msgid "the Neo4j extension (`quarkus-neo4j`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:103
msgid "the OIDC and OIDC client extensions (`quarkus-oidc` and `quarkus-oidc-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:104
msgid "the Reactive client for IBM DB2 extension (`quarkus-reactive-db2-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:105
msgid "the Reactive client for PostgreSQL extension (`quarkus-reactive-pg-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:106
msgid "the Reactive client for MySQL extension (`quarkus-reactive-mysql-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:107
msgid "the Reactive client for Microsoft SQL Server extension (`quarkus-reactive-mssql-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:108
msgid "the Redis client extension (`quarkus-redis-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:109
msgid "the REST Client extension (`quarkus-rest-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:110
msgid "the REST Client Reactive extension (`quarkus-rest-client-reactive`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:111
msgid "the SmallRye GraphQL Client extension (`quarkus-smallrye-graphql-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:112
msgid "the Spring Cloud Config client extension (`quarkus-spring-cloud-config-client`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:113
msgid "the Vault extension (`quarkus-vault`),"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:114
msgid "the Cassandra client extensions (`cassandra-quarkus-client`)"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:116
msgid "As long as you have one of these extensions in your project, the SSL support will be enabled by default."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:118
msgid "If you are not using any of them and you want to enable SSL support anyway, please add the following to your configuration:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:122
#, no-wrap
msgid "quarkus.ssl.native=true\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:125
msgid "Now, let's just check the size of our native executable as it will be useful later:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:130
#, no-wrap
msgid ""
"$ ls -lh target/rest-client-quickstart-1.0.0-SNAPSHOT-runner\n"
"-rwxrwxr-x. 1 gandrian gandrian 46M Jun 11 13:01 target/rest-client-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:132
#, no-wrap
msgid "Let's disable SSL and see how it goes"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:137
msgid "Quarkus has an option to disable the SSL support entirely.  Why? Because it comes at a certain cost.  So if you are sure you don't need it, you can disable it entirely."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:139
msgid "First, let's disable it without changing the REST service URL and see how it goes."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:141
msgid "Open `src/main/resources/application.properties` and add the following line:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:145
#, no-wrap
msgid "quarkus.ssl.native=false\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:148
msgid "And let's try to build again:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:152
msgid "The native executable tests will fail with the following error:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:156
#, no-wrap
msgid "Caused by: java.lang.IllegalArgumentException: https://stage.code.quarkus.io/api requires SSL support but it is disabled. You probably have set quarkus.ssl.native to false.\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:159
msgid "This error is the one you obtain when trying to use SSL while it was not explicitly enabled in your native executable."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:161
msgid "Now, let's change the REST service URL to **not** use SSL in `src/main/resources/application.properties`:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:165
#, no-wrap
msgid "quarkus.rest-client.\"org.acme.rest.client.ExtensionsService\".url=http://stage.code.quarkus.io/api\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:167
msgid "and since http://stage.code.quarkus.io/api responds with 302 status code we need to also skip the tests with `-DskipTests`."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:169
msgid "Now we can build again:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:175
msgid "If you check carefully the native executable build options, you can see that the SSL related options are gone:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:179
#, no-wrap
msgid "[INFO] [io.quarkus.creator.phase.nativeimage.NativeImagePhase] /opt/graalvm/bin/native-image -J-Djava.util.logging.manager=org.jboss.logmanager.LogManager -J-Dcom.sun.xml.internal.bind.v2.bytecode.ClassTailor.noOptimize=true -H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime -jar rest-client-1.0.0-SNAPSHOT-runner.jar -J-Djava.util.concurrent.ForkJoinPool.common.parallelism=1 -H:+PrintAnalysisCallTree -H:EnableURLProtocols=http -H:-SpawnIsolates -H:+JNI --no-server -H:-UseServiceLoaderFeature -H:+StackTrace\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:182
msgid "And we end up with:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:192
msgid "You remember we checked the size of the native executable with SSL enabled? Let's check again with SSL support entirely disabled:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:197
#, no-wrap
msgid ""
"$ ls -lh target/rest-client-quickstart-1.0.0-SNAPSHOT-runner\n"
"-rwxrwxr-x. 1 gandrian gandrian 35M Jun 11 13:06 target/rest-client-quickstart-1.0.0-SNAPSHOT-runner\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:200
msgid "Yes, it is now **35 MB** whereas it used to be **46 MB**. SSL comes with an 11 MB overhead in native executable size."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:202
msgid "And there's more to it."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:203
#, no-wrap
msgid "Let's start again with a clean slate"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:206
msgid "Let's revert the changes we made to the configuration file and go back to SSL with the following command:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:210
#, no-wrap
msgid "git checkout -- src/main/resources/application.properties\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:213
msgid "And let's build the native executable again:"
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:217
#, no-wrap
msgid "The TrustStore path"
msgstr ""

#. type: delimited block =
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:222
msgid "This behavior is new to GraalVM 21.3+."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:225
msgid "GraalVM supports both build time and runtime certificate configuration."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:226
#, no-wrap
msgid "Build time configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:230
msgid "The build time approach favors the principle of \"immutable security\" where the appropriate certificates are added at build time, and can never be changed afterward.  This guarantees that the list of valid certificates cannot be tampered with when the application gets deployed in production."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:232
msgid "However, this comes with a few drawbacks:"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:234
msgid "If you use the same executable in all environments, and a certificate expires, the application needs to be rebuilt, and redeployed into production with the new certificate, which is an inconvenience."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:235
msgid "Even worse, if a certificate gets revoked because of a security breach, all applications that embed this certificate need to be rebuilt and redeployed in a timely manner."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:236
msgid "This requires also to add into the application all certificates for all environments (e.g. DEV, TEST, PROD), which means that a certificate that is required for DEV but should not be used elsewhere, will make its way anyway in production."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:237
msgid "Providing all certificates at build time complicates the CI, specifically in dynamic environments such as Kubernetes where valid certificates are provided by the platform in the `/var/run/secrets/kubernetes.io/serviceaccount/ca.crt` PEM file."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:238
msgid "Lastly, this does not play well with third party software that do not provide a dedicated build for each customer environment."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:241
msgid "Creating a native executable using build time certificates essentially means that the root certificates are fixed at image build time, based on the certificate configuration used at build time (which for Quarkus means when you perform a build having `quarkus.package.type=native` set).  This avoids shipping a `cacerts` file or requiring a system property be set in order to set up root certificates that are provided by the OS where the binary runs."
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:245
msgid "In this situation, system properties such as `javax.net.ssl.trustStore` do not have an effect at run time, so when the defaults need to be changed, these system properties must be provided at image build time.  The easiest way to do so is by setting `quarkus.native.additional-build-args`. For example:"
msgstr ""

#. type: delimited block -
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:249
#, no-wrap
msgid "quarkus.native.additional-build-args=-J-Djavax.net.ssl.trustStore=/tmp/mycerts,-J-Djavax.net.ssl.trustStorePassword=changeit\n"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:253
msgid "will ensure that the certificates of `/tmp/mycerts` are baked into the native binary and used *instead* of the default `cacerts`.  The file containing the custom TrustStore does *not* (and probably should not) have to be present at runtime as its content has been baked into the native binary."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:254
#, no-wrap
msgid "Run time configuration"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:257
msgid "Using the runtime certificate configuration, supported by GraalVM since 21.3 does not require any special or additional configuration compared to regular java programs or Quarkus in jvm mode. See the https://www.graalvm.org/{graalvm-version}/reference-manual/native-image/dynamic-features/CertificateManagement/#runtime-options[GraalVM documentation] for more information."
msgstr ""

#. type: Title ===
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:259
#, no-wrap
msgid "Working with containers"
msgstr ""

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:263
msgid "No special action needs to be taken when running the native binary in a container. If the native binary was properly built with the custom TrustStore as described in the previous section, it will work properly in container as well."
msgstr ""

#. type: Title ==
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:264
#, no-wrap
msgid "Conclusion"
msgstr "解决方案"

#. type: Plain text
#: upstream/_versions/3.0/guides/native-and-ssl.adoc:266
msgid "We make building native executable using SSL easy, and provide several options to cope well with different types of security requirements."
msgstr ""
