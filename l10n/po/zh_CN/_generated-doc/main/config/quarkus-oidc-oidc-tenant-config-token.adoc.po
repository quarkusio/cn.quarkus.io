# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-05 02:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:5
#, fuzzy
msgid "icon:lock[title=Fixed at build time] Configuration property fixed at build time - All other configuration properties are overridable at runtime"
msgstr "[锁定]在构建时固定配置属性 - 在运行时可覆盖所有其他配置属性"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:10
#, no-wrap
msgid "[[quarkus-oidc-oidc-tenant-config-token_configuration]]link:#quarkus-oidc-oidc-tenant-config-token_configuration[Configuration property]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:11
#, no-wrap
msgid "Type"
msgstr "类型"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:13
#, no-wrap
msgid "Default"
msgstr "默认"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:26
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.issuer]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.issuer[quarkus.oidc.token.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected issuer `iss` claim value. Note this property overrides the `issuer` property which may be set in OpenId Connect provider's well-known configuration. If the `iss` claim value varies depending on the host/IP address or tenant id of the provider then you may skip the issuer verification by setting this property to 'any' but it should be done only when other options (such as configuring the provider to use the fixed `iss` claim value) are not possible.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ISSUER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_ISSUER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:27
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:78
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:130
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:200
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:217
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:252
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:320
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:371
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:439
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:491
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:561
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:578
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:613
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:681
#, fuzzy, no-wrap
msgid "string"
msgstr "绳子"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:43
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.audience]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.audience[quarkus.oidc.token.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected audience 'aud' claim value which may be a string or an array of strings. Note the audience claim will be verified for ID tokens by default. ID token audience must be equal to the value of `quarkus.oidc.client-id` property. Use this property to override the expected value if your OpenID Connect provider sets a different audience claim value in ID tokens. Set it to `any` if your provider does not set ID token audience` claim. Audience verification for access tokens will only be done if this property is configured.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AUDIENCE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_AUDIENCE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:44
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:388
#, no-wrap
msgid "list of string"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:60
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.subject-required]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.subject-required[quarkus.oidc.token.subject-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that the token includes a `sub` (subject) claim which is a unique and never reassigned identifier for the current user. Note that if you enable this property and if UserInfo is also required then both the token and UserInfo `sub` claims must be present and match each other.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_SUBJECT_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_SUBJECT_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:61
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:147
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:269
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:286
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:303
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:337
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:405
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:508
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:630
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:647
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:664
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:698
#, fuzzy, no-wrap
msgid "boolean"
msgstr "布尔型"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:64
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:150
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:289
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:340
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:408
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:511
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:650
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:700
#, no-wrap
msgid "`false`"
msgstr "`false` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:77
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.token-type]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.token-type[quarkus.oidc.token.token-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected token type\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_TOKEN_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_TOKEN_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:94
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.lifespan-grace]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.lifespan-grace[quarkus.oidc.token.lifespan-grace]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Life span grace period in seconds. When checking token expiry, current time is allowed to be later than token expiration time by at most the configured number of seconds. When checking token issuance, current time is allowed to be sooner than token issue time by at most the configured number of seconds.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_LIFESPAN_GRACE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_LIFESPAN_GRACE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:95
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:456
#, fuzzy, no-wrap
msgid "int"
msgstr "int"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:111
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.age]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.age[quarkus.oidc.token.age]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token age. It allows for the number of seconds to be specified that must not elapse since the `iat` (issued at) time. A small leeway to account for clock skew which can be configured with 'quarkus.oidc.token.lifespan-grace' to verify the token expiry time can also be used to verify the token age property. Note that setting this property does not relax the requirement that Bearer and Code Flow JWT tokens must have a valid ('exp') expiry claim value. The only exception where setting this property relaxes the requirement is when a logout token is sent with a back-channel logout request since the current OpenId Connect Back-Channel specification does not explicitly require the logout tokens to contain an 'exp' claim. However, even if the current logout token is allowed to have no 'exp' claim, the `exp` claim will be still verified if the logout token contains it.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_AGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:113
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:165
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:183
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:474
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:526
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:544
#, no-wrap
msgid ""
"link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor-{summaryTableId}[icon:question-circle[], title=More information about the Duration format]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:129
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.principal-claim]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.principal-claim[quarkus.oidc.token.principal-claim]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the claim which contains a principal name. By default, the `upn`, `preferred_username` and `sub` claims are checked.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_PRINCIPAL_CLAIM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_PRINCIPAL_CLAIM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:146
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.refresh-expired]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.refresh-expired[quarkus.oidc.token.refresh-expired]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh expired authorization code flow ID or access tokens. If this property is enabled then a refresh token request will be performed if the authorization code ID or access token has expired and, if successful, the local session will be updated with the new set of tokens. Otherwise, the local session will be invalidated and the user redirected to the OpenID Provider to re-authenticate. In this case the user may not be challenged again if the OIDC provider session is still active. For this option be effective the `authentication.session-age-extension` property should also be set to a non-zero value since the refresh token is currently kept in the user session. This option is valid only when the application is of type `ApplicationType++#++WEB_APP`++}++. This property will be enabled if `quarkus.oidc.token.refresh-token-time-skew` is configured, you do not have to enable this property manually in this case.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REFRESH_EXPIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_REFRESH_EXPIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:163
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.refresh-token-time-skew]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.refresh-token-time-skew[quarkus.oidc.token.refresh-token-time-skew]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh token time skew in seconds. If this property is enabled then the configured number of seconds is added to the current time when checking if the authorization code ID or access token should be refreshed. If the sum is greater than the authorization code ID or access token's expiration time then a refresh is going to happen.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REFRESH_TOKEN_TIME_SKEW+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_REFRESH_TOKEN_TIME_SKEW+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:181
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.forced-jwk-refresh-interval]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.forced-jwk-refresh-interval[quarkus.oidc.token.forced-jwk-refresh-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Forced JWK set refresh interval in minutes.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_FORCED_JWK_REFRESH_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_FORCED_JWK_REFRESH_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:186
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:547
#, no-wrap
msgid "`10M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:199
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.header]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.header[quarkus.oidc.token.header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP header that contains a bearer token. This option is valid only when the application is of type `ApplicationType++#++SERVICE`++}++.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:216
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.authorization-scheme]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.authorization-scheme[quarkus.oidc.token.authorization-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"HTTP Authorization header scheme.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AUTHORIZATION_SCHEME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_AUTHORIZATION_SCHEME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:220
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:581
#, no-wrap
msgid "`Bearer`"
msgstr "`Bearer`"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:233
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.signature-algorithm]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.signature-algorithm[quarkus.oidc.token.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Required signature algorithm. OIDC providers support many signature algorithms but if necessary you can restrict Quarkus application to accept tokens signed only using an algorithm configured with this property.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_SIGNATURE_ALGORITHM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_SIGNATURE_ALGORITHM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:235
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:596
#, no-wrap
msgid "`rs256`, `rs384`, `rs512`, `ps256`, `ps384`, `ps512`, `es256`, `es384`, `es512`, `eddsa`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:251
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.decryption-key-location]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.decryption-key-location[quarkus.oidc.token.decryption-key-location]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Decryption key location. JWT tokens can be inner-signed and encrypted by OpenId Connect providers. However, it is not always possible to remotely introspect such tokens because the providers may not control the private decryption keys. In such cases set this property to point to the file containing the decryption private key in PEM or JSON Web Key (JWK) format. Note that if a `private_key_jwt` client authentication method is used then the private key which is used to sign client authentication JWT tokens will be used to try to decrypt an encrypted ID token if this property is not set.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_DECRYPTION_KEY_LOCATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_DECRYPTION_KEY_LOCATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:268
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.allow-jwt-introspection]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.allow-jwt-introspection[quarkus.oidc.token.allow-jwt-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of JWT tokens when no matching JWK key is available. Note this property is set to `true` by default for backward-compatibility reasons and will be set to `false` instead in one of the next releases. Also note this property will be ignored if JWK endpoint URI is not available and introspecting the tokens is the only verification option.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ALLOW_JWT_INTROSPECTION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_ALLOW_JWT_INTROSPECTION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:272
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:306
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:633
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:667
#, no-wrap
msgid "`true`"
msgstr "`true` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:285
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.require-jwt-introspection-only]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.require-jwt-introspection-only[quarkus.oidc.token.require-jwt-introspection-only]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that JWT tokens are only introspected remotely.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:302
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.allow-opaque-token-introspection]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.allow-opaque-token-introspection[quarkus.oidc.token.allow-opaque-token-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of the opaque tokens. Set this property to 'false' if only JWT tokens are expected.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:319
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.customizer-name]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.customizer-name[quarkus.oidc.token.customizer-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token customizer name. Allows to select a tenant specific token customizer as a named bean. Prefer using `TenantFeature` qualifier when registering custom `TokenCustomizer`. Use this property only to refer to `TokenCustomizer` implementations provided by this extension.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_CUSTOMIZER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_CUSTOMIZER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:336
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.verify-access-token-with-user-info]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.verify-access-token-with-user-info[quarkus.oidc.token.verify-access-token-with-user-info]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Indirectly verify that the opaque (binary) access token is valid by using it to request UserInfo. Opaque access token is considered valid if the provider accepted this token and returned a valid UserInfo. You should only enable this option if the opaque access tokens have to be accepted but OpenId Connect provider does not have a token introspection endpoint. This property will have no effect when JWT tokens have to be verified.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:353
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.required-claims-claim-name]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.token.required-claims-claim-name[quarkus.oidc.token.required-claims]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A map of required claims and their expected values. For example, `quarkus.oidc.token.required-claims.org_id = org_xyz` would require tokens to have the `org_id` claim to be present and set to `org_xyz`. Strings are the only supported types. Use `SecurityIdentityAugmentor` to verify claims of other types or complex claims.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REQUIRED_CLAIMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_REQUIRED_CLAIMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:354
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:422
#, no-wrap
msgid "`Map<String,String>`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:370
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.issuer]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.issuer[quarkus.oidc.\"tenant\".token.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected issuer `iss` claim value. Note this property overrides the `issuer` property which may be set in OpenId Connect provider's well-known configuration. If the `iss` claim value varies depending on the host/IP address or tenant id of the provider then you may skip the issuer verification by setting this property to 'any' but it should be done only when other options (such as configuring the provider to use the fixed `iss` claim value) are not possible.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ISSUER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_ISSUER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:387
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.audience]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.audience[quarkus.oidc.\"tenant\".token.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected audience 'aud' claim value which may be a string or an array of strings. Note the audience claim will be verified for ID tokens by default. ID token audience must be equal to the value of `quarkus.oidc.client-id` property. Use this property to override the expected value if your OpenID Connect provider sets a different audience claim value in ID tokens. Set it to `any` if your provider does not set ID token audience` claim. Audience verification for access tokens will only be done if this property is configured.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AUDIENCE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_AUDIENCE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:404
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.subject-required]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.subject-required[quarkus.oidc.\"tenant\".token.subject-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that the token includes a `sub` (subject) claim which is a unique and never reassigned identifier for the current user. Note that if you enable this property and if UserInfo is also required then both the token and UserInfo `sub` claims must be present and match each other.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_SUBJECT_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_SUBJECT_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:421
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.required-claims-claim-name]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.required-claims-claim-name[quarkus.oidc.\"tenant\".token.required-claims]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A map of required claims and their expected values. For example, `quarkus.oidc.token.required-claims.org_id = org_xyz` would require tokens to have the `org_id` claim to be present and set to `org_xyz`. Strings are the only supported types. Use `SecurityIdentityAugmentor` to verify claims of other types or complex claims.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRED_CLAIMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRED_CLAIMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:438
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.token-type]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.token-type[quarkus.oidc.\"tenant\".token.token-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected token type\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_TOKEN_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_TOKEN_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:455
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.lifespan-grace]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.lifespan-grace[quarkus.oidc.\"tenant\".token.lifespan-grace]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Life span grace period in seconds. When checking token expiry, current time is allowed to be later than token expiration time by at most the configured number of seconds. When checking token issuance, current time is allowed to be sooner than token issue time by at most the configured number of seconds.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_LIFESPAN_GRACE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_LIFESPAN_GRACE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:472
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.age]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.age[quarkus.oidc.\"tenant\".token.age]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token age. It allows for the number of seconds to be specified that must not elapse since the `iat` (issued at) time. A small leeway to account for clock skew which can be configured with 'quarkus.oidc.token.lifespan-grace' to verify the token expiry time can also be used to verify the token age property. Note that setting this property does not relax the requirement that Bearer and Code Flow JWT tokens must have a valid ('exp') expiry claim value. The only exception where setting this property relaxes the requirement is when a logout token is sent with a back-channel logout request since the current OpenId Connect Back-Channel specification does not explicitly require the logout tokens to contain an 'exp' claim. However, even if the current logout token is allowed to have no 'exp' claim, the `exp` claim will be still verified if the logout token contains it.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_AGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:490
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.principal-claim]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.principal-claim[quarkus.oidc.\"tenant\".token.principal-claim]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the claim which contains a principal name. By default, the `upn`, `preferred_username` and `sub` claims are checked.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_PRINCIPAL_CLAIM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_PRINCIPAL_CLAIM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:507
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.refresh-expired]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.refresh-expired[quarkus.oidc.\"tenant\".token.refresh-expired]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh expired authorization code flow ID or access tokens. If this property is enabled then a refresh token request will be performed if the authorization code ID or access token has expired and, if successful, the local session will be updated with the new set of tokens. Otherwise, the local session will be invalidated and the user redirected to the OpenID Provider to re-authenticate. In this case the user may not be challenged again if the OIDC provider session is still active. For this option be effective the `authentication.session-age-extension` property should also be set to a non-zero value since the refresh token is currently kept in the user session. This option is valid only when the application is of type `ApplicationType++#++WEB_APP`++}++. This property will be enabled if `quarkus.oidc.token.refresh-token-time-skew` is configured, you do not have to enable this property manually in this case.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_EXPIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_EXPIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:524
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.refresh-token-time-skew]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.refresh-token-time-skew[quarkus.oidc.\"tenant\".token.refresh-token-time-skew]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh token time skew in seconds. If this property is enabled then the configured number of seconds is added to the current time when checking if the authorization code ID or access token should be refreshed. If the sum is greater than the authorization code ID or access token's expiration time then a refresh is going to happen.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_TOKEN_TIME_SKEW+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_TOKEN_TIME_SKEW+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:542
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.forced-jwk-refresh-interval]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.forced-jwk-refresh-interval[quarkus.oidc.\"tenant\".token.forced-jwk-refresh-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Forced JWK set refresh interval in minutes.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_FORCED_JWK_REFRESH_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_FORCED_JWK_REFRESH_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:560
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.header]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.header[quarkus.oidc.\"tenant\".token.header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP header that contains a bearer token. This option is valid only when the application is of type `ApplicationType++#++SERVICE`++}++.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:577
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.authorization-scheme]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.authorization-scheme[quarkus.oidc.\"tenant\".token.authorization-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"HTTP Authorization header scheme.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AUTHORIZATION_SCHEME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_AUTHORIZATION_SCHEME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:594
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.signature-algorithm]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.signature-algorithm[quarkus.oidc.\"tenant\".token.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Required signature algorithm. OIDC providers support many signature algorithms but if necessary you can restrict Quarkus application to accept tokens signed only using an algorithm configured with this property.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_SIGNATURE_ALGORITHM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_SIGNATURE_ALGORITHM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:612
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.decryption-key-location]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.decryption-key-location[quarkus.oidc.\"tenant\".token.decryption-key-location]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Decryption key location. JWT tokens can be inner-signed and encrypted by OpenId Connect providers. However, it is not always possible to remotely introspect such tokens because the providers may not control the private decryption keys. In such cases set this property to point to the file containing the decryption private key in PEM or JSON Web Key (JWK) format. Note that if a `private_key_jwt` client authentication method is used then the private key which is used to sign client authentication JWT tokens will be used to try to decrypt an encrypted ID token if this property is not set.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_DECRYPTION_KEY_LOCATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_DECRYPTION_KEY_LOCATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:629
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.allow-jwt-introspection]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.allow-jwt-introspection[quarkus.oidc.\"tenant\".token.allow-jwt-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of JWT tokens when no matching JWK key is available. Note this property is set to `true` by default for backward-compatibility reasons and will be set to `false` instead in one of the next releases. Also note this property will be ignored if JWK endpoint URI is not available and introspecting the tokens is the only verification option.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_JWT_INTROSPECTION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_JWT_INTROSPECTION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:646
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.require-jwt-introspection-only]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.require-jwt-introspection-only[quarkus.oidc.\"tenant\".token.require-jwt-introspection-only]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that JWT tokens are only introspected remotely.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:663
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.allow-opaque-token-introspection]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.allow-opaque-token-introspection[quarkus.oidc.\"tenant\".token.allow-opaque-token-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of the opaque tokens. Set this property to 'false' if only JWT tokens are expected.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:680
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.customizer-name]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.customizer-name[quarkus.oidc.\"tenant\".token.customizer-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token customizer name. Allows to select a tenant specific token customizer as a named bean. Prefer using `TenantFeature` qualifier when registering custom `TokenCustomizer`. Use this property only to refer to `TokenCustomizer` implementations provided by this extension.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_CUSTOMIZER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_CUSTOMIZER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:697
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.verify-access-token-with-user-info]]`link:#quarkus-oidc-oidc-tenant-config-token_quarkus.oidc.-tenant-.token.verify-access-token-with-user-info[quarkus.oidc.\"tenant\".token.verify-access-token-with-user-info]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Indirectly verify that the opaque (binary) access token is valid by using it to request UserInfo. Opaque access token is considered valid if the provider accepted this token and returned a valid UserInfo. You should only enable this option if the opaque access tokens have to be accepted but OpenId Connect provider does not have a token introspection endpoint. This property will have no effect when JWT tokens have to be verified.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Block title
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:704
#, no-wrap
msgid "About the Duration format"
msgstr ""

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:708
#, fuzzy
msgid "To write duration values, use the standard `java.time.Duration` format.  See the link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/Duration.html#parse(java.lang.CharSequence)[Duration#parse() Java API documentation] for more information."
msgstr "持续时间的格式使用标准的 `java.time.Duration` 格式您可以在 https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-[Duration#parse() javadoc] 中了解更多信息。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:710
#, fuzzy
msgid "You can also use a simplified format, starting with a number:"
msgstr "您也可以使用简化格式，以数字开头："

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:712
#, fuzzy
msgid "If the value is only a number, it represents time in seconds."
msgstr "如果数值只是一个数字，则表示时间（秒）。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:713
#, fuzzy
msgid "If the value is a number followed by `ms`, it represents time in milliseconds."
msgstr "如果数值是一个数字，后跟 `ms` ，则表示时间（毫秒）。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:715
#, fuzzy
msgid "In other cases, the simplified format is translated to the `java.time.Duration` format for parsing:"
msgstr "在其他情况下，简化格式会被翻译成 `java.time.Duration` 格式进行解析："

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:717
#, fuzzy
msgid "If the value is a number followed by `h`, `m`, or `s`, it is prefixed with `PT`."
msgstr "如果数值是一个数字，后面跟 `h` 、 `m` 或 `s` ，则前缀为 `PT` 。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-token.adoc:718
#, fuzzy
msgid "If the value is a number followed by `d`, it is prefixed with `P`."
msgstr "如果数值是一个数字，后面跟 `d` ，则前缀为 `P` 。"

#~ msgid "You can also provide duration values starting with a number.  In this case, if the value consists only of a number, the converter treats the value as seconds.  Otherwise, `PT` is implicitly prepended to the value to obtain a standard `java.time.Duration` format."
#~ msgstr "您还可以提供以数字开头的持续时间值。 在这种情况下，如果该值仅包含一个数字，则转换器将该值视为秒。 否则，`PT` 会隐式添加到值的前面，以获得标准的 `java.time.Duration` 格式。"
