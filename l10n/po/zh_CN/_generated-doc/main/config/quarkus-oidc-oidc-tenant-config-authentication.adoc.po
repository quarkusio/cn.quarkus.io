# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-05 02:20+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:5
#, fuzzy
msgid "icon:lock[title=Fixed at build time] Configuration property fixed at build time - All other configuration properties are overridable at runtime"
msgstr "[锁定]在构建时固定配置属性 - 在运行时可覆盖所有其他配置属性"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:10
#, no-wrap
msgid "[[quarkus-oidc-oidc-tenant-config-authentication_configuration]]link:#quarkus-oidc-oidc-tenant-config-authentication_configuration[Configuration property]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:11
#, no-wrap
msgid "Type"
msgstr "类型"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:13
#, no-wrap
msgid "Default"
msgstr "默认"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:26
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.response-mode]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.response-mode[quarkus.oidc.authentication.response-mode]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Authorization code flow response mode\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_RESPONSE_MODE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_RESPONSE_MODE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:28
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:505
#, no-wrap
msgid "tooltip:query[Authorization response parameters are encoded in the query string added to the `redirect_uri`], tooltip:form-post[Authorization response parameters are encoded as HTML form values that are auto-submitted in the browser and transmitted via the HTTP POST method using the application/x-www-form-urlencoded content type]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:31
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:508
#, no-wrap
msgid "`query`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:44
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.redirect-path]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.redirect-path[quarkus.oidc.authentication.redirect-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path for calculating a `redirect_uri` query parameter. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if the current request URI is 'https://localhost:8080/service' then a `redirect_uri` parameter will be set to 'https://localhost:8080/' if this property is set to '/' and be the same as the request URI if this property has not been configured. Note the original request URI will be restored after the user has authenticated if 'restorePathAfterRedirect' is set to `true`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_REDIRECT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_REDIRECT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:45
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:96
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:232
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:249
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:266
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:283
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:470
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:522
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:573
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:726
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:743
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:760
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:777
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:964
#, fuzzy, no-wrap
msgid "string"
msgstr "绳子"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:61
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.restore-path-after-redirect]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.restore-path-after-redirect[quarkus.oidc.authentication.restore-path-after-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then the original request URI which was used before the authentication will be restored after the user has been redirected back to the application. Note if `redirectPath` property is not set, the original request URI will be restored even if this property is disabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:62
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:79
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:113
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:130
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:164
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:181
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:215
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:318
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:341
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:358
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:395
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:412
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:447
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:539
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:556
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:590
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:607
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:641
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:658
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:709
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:812
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:835
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:852
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:889
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:906
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:941
#, fuzzy, no-wrap
msgid "boolean"
msgstr "布尔型"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:65
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:116
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:133
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:167
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:218
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:344
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:361
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:450
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:542
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:593
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:610
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:644
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:712
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:838
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:855
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:944
#, no-wrap
msgid "`false`"
msgstr "`false` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:78
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.remove-redirect-parameters]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.remove-redirect-parameters[quarkus.oidc.authentication.remove-redirect-parameters]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Remove the query parameters such as 'code' and 'state' set by the OIDC server on the redirect URI after the user has authenticated by redirecting a user to the same URI but without the query parameters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:82
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:184
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:321
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:398
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:415
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:559
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:661
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:815
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:892
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:909
#, no-wrap
msgid "`true`"
msgstr "`true` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:95
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.error-path]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.error-path[quarkus.oidc.authentication.error-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path to the public endpoint which will process the error response from the OIDC authorization endpoint. If the user authentication has failed then the OIDC provider will return an `error` and an optional `error_description` parameters, instead of the expected authorization 'code'. If this property is set then the user will be redirected to the endpoint which can return a user-friendly error description page. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if it is set as '/error' and the current request URI is 'https://localhost:8080/callback?error=invalid_scope' then a redirect will be made to 'https://localhost:8080/error?error=invalid_scope'. If this property is not set then HTTP 401 status will be returned in case of the user authentication failure.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ERROR_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_ERROR_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:112
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.verify-access-token]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.verify-access-token[quarkus.oidc.authentication.verify-access-token]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Both ID and access tokens are fetched from the OIDC provider as part of the authorization code flow. ID token is always verified on every user request as the primary token which is used to represent the principal and extract the roles. Access token is not verified by default since it is meant to be propagated to the downstream services. The verification of the access token should be enabled if it is injected as a JWT token. Access tokens obtained as part of the code flow will always be verified if `quarkus.oidc.roles.source` property is set to `accesstoken` which means the authorization decision will be based on the roles extracted from the access token. Bearer access tokens are always verified.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_VERIFY_ACCESS_TOKEN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_VERIFY_ACCESS_TOKEN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:129
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.force-redirect-https-scheme]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.force-redirect-https-scheme[quarkus.oidc.authentication.force-redirect-https-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Force 'https' as the `redirect_uri` parameter scheme when running behind an SSL/TLS terminating reverse proxy. This property, if enabled, will also affect the logout `post_logout_redirect_uri` and the local redirect requests.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:146
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.scopes]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.scopes[quarkus.oidc.authentication.scopes]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of scopes\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_SCOPES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_SCOPES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:147
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:198
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:624
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:692
#, no-wrap
msgid "list of string"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:163
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.nonce-required]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.nonce-required[quarkus.oidc.authentication.nonce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that ID token includes a `nonce` claim which must match `nonce` authentication request query parameter. Enabling this property can help mitigate replay attacks. Do not enable this property if your OpenId Connect provider does not support setting `nonce` in ID token or if you work with OAuth2 provider such as `GitHub` which does not issue ID tokens.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_NONCE_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_NONCE_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:180
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.add-openid-scope]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.add-openid-scope[quarkus.oidc.authentication.add-openid-scope]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Add the `openid` scope automatically to the list of scopes. This is required for OpenId Connect providers but will not work for OAuth2 providers such as Twitter OAuth2 which does not accept that scope and throws an error.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ADD_OPENID_SCOPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_ADD_OPENID_SCOPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:197
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.forward-params]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.forward-params[quarkus.oidc.authentication.forward-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Request URL query parameters which, if present, will be added to the authentication redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FORWARD_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_FORWARD_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:214
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-force-secure]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-force-secure[quarkus.oidc.authentication.cookie-force-secure]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If enabled the state, session and post logout cookies will have their 'secure' parameter set to `true` when HTTP is used. It may be necessary when running behind an SSL/TLS terminating reverse proxy. The cookies will always be secure if HTTPS is used even if this property is set to false.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_FORCE_SECURE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_FORCE_SECURE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:231
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-suffix]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-suffix[quarkus.oidc.authentication.cookie-suffix]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie name suffix. For example, a session cookie name for the default OIDC tenant is `q_session` but can be changed to `q_session_test` if this property is set to `test`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SUFFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SUFFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:248
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-path]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-path[quarkus.oidc.authentication.cookie-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path parameter value which, if set, will be used to set a path parameter for the session, state and post logout cookies. The `cookie-path-header` property, if set, will be checked first.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:252
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:746
#, fuzzy, no-wrap
msgid "`/`"
msgstr " `/` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:265
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-path-header]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-path-header[quarkus.oidc.authentication.cookie-path-header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path header parameter value which, if set, identifies the incoming HTTP header whose value will be used to set a path parameter for the session, state and post logout cookies. If the header is missing then the `cookie-path` property will be checked.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:282
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-domain]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-domain[quarkus.oidc.authentication.cookie-domain]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie domain parameter value which, if set, will be used for the session, state and post logout cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_DOMAIN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_DOMAIN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:299
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-same-site]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.cookie-same-site[quarkus.oidc.authentication.cookie-same-site]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"SameSite attribute for the session cookie.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SAME_SITE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SAME_SITE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:301
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:795
#, no-wrap
msgid "`strict`, `lax`, `none`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:304
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:798
#, no-wrap
msgid "`lax`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:317
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.allow-multiple-code-flows]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.allow-multiple-code-flows[quarkus.oidc.authentication.allow-multiple-code-flows]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If a state cookie is present then a `state` query parameter must also be present and both the state cookie name suffix and state cookie value have to match the value of the `state` query parameter when the redirect path matches the current path. However, if multiple authentications are attempted from the same browser, for example, from the different browser tabs, then the currently available state cookie may represent the authentication flow initiated from another tab and not related to the current request. Disable this property to permit only a single authorization code flow in the same browser.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:340
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.fail-on-missing-state-param]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.fail-on-missing-state-param[quarkus.oidc.authentication.fail-on-missing-state-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Fail with the HTTP 401 error if the state cookie is present but no state query parameter is present.\n"
"\n"
"When either multiple authentications are disabled or the redirect URL matches the original request URL, the stale state cookie might remain in the browser cache from the earlier failed redirect to an OpenId Connect provider and be visible during the current request. For example, if Single-page application (SPA) uses XHR to handle redirects to the provider which does not support CORS for its authorization endpoint, the browser will block it and the state cookie created by Quarkus will remain in the browser cache. Quarkus will report an authentication failure when it will detect such an old state cookie but find no matching state query parameter.\n"
"\n"
"Reporting HTTP 401 error is usually the right thing to do in such cases, it will minimize a risk of the browser redirect loop but also can identify problems in the way SPA or Quarkus application manage redirects. For example, enabling `java-script-auto-redirect` or having the provider redirect to URL configured with `redirect-path` may be needed to avoid such errors.\n"
"\n"
"However, setting this property to `false` may help if the above options are not suitable. It will cause a new authentication redirect to OpenId Connect provider. Doing so may increase the risk of browser redirect loops.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:357
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.user-info-required]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.user-info-required[quarkus.oidc.authentication.user-info-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then an OIDC UserInfo endpoint will be called. This property will be enabled if `quarkus.oidc.roles.source` is `userinfo` or `quarkus.oidc.token.verify-access-token-with-user-info` is `true` or `quarkus.oidc.authentication.id-token-required` is set to `false`, you do not have to enable this property manually in these cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_USER_INFO_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_USER_INFO_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:374
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.session-age-extension]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.session-age-extension[quarkus.oidc.authentication.session-age-extension]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Session age extension in minutes. The user session age property is set to the value of the ID token life-span by default and the user will be redirected to the OIDC provider to re-authenticate once the session has expired. If this property is set to a non-zero value, then the expired ID token can be refreshed before the session has expired. This property will be ignored if the `token.refresh-expired` property has not been enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_SESSION_AGE_EXTENSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_SESSION_AGE_EXTENSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:376
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:430
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:870
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:924
#, no-wrap
msgid ""
"link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor-{summaryTableId}[icon:question-circle[], title=More information about the Duration format]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:379
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:433
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:873
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:927
#, no-wrap
msgid "`5M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:394
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.java-script-auto-redirect]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.java-script-auto-redirect[quarkus.oidc.authentication.java-script-auto-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then a normal 302 redirect response will be returned if the request was initiated via JavaScript API such as XMLHttpRequest or Fetch and the current user needs to be (re)authenticated which may not be desirable for Single-page applications (SPA) since it automatically following the redirect may not work given that OIDC authorization endpoints typically do not support CORS.\n"
"\n"
"If this property is set to 'false' then a status code of '499' will be returned to allow SPA to handle the redirect manually if a request header identifying current request as a JavaScript request is found. 'X-Requested-With' request header with its value set to either `JavaScript` or `XMLHttpRequest` is expected by default if this property is enabled. You can register a custom `JavaScriptRequestChecker` to do a custom JavaScript request check instead.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:411
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.id-token-required]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.id-token-required[quarkus.oidc.authentication.id-token-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that ID token is available when the authorization code flow completes. Disable this property only when you need to use the authorization code flow with OAuth2 providers which do not return ID token - an internal IdToken will be generated in such cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ID_TOKEN_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_ID_TOKEN_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:428
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.internal-id-token-lifespan]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.internal-id-token-lifespan[quarkus.oidc.authentication.internal-id-token-lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Internal ID token lifespan. This property is only checked when an internal IdToken is generated when Oauth2 providers do not return IdToken.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:446
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.pkce-required]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.pkce-required[quarkus.oidc.authentication.pkce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that a Proof Key for Code Exchange (PKCE) is used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_PKCE_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_PKCE_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:469
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.state-secret]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.state-secret[quarkus.oidc.authentication.state-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret which will be used to encrypt Proof Key for Code Exchange (PKCE) code verifier and/or nonce in the code flow state. This secret should be at least 32 characters long.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` will be checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication will be checked. Client secret will not be used as a state encryption secret if it is less than 32 characters long.\n"
"\n"
"The secret will be auto-generated if it remains uninitialized after checking all of these properties.\n"
"\n"
"Error will be reported if the secret length is less than 16 characters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_STATE_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_STATE_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:486
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.extra-params-extra-params]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.authentication.extra-params-extra-params[quarkus.oidc.authentication.extra-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties which will be added as the query parameters to the authentication redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_EXTRA_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_EXTRA_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:487
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:675
#, no-wrap
msgid "`Map<String,String>`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:503
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.response-mode]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.response-mode[quarkus.oidc.\"tenant\".authentication.response-mode]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Authorization code flow response mode\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESPONSE_MODE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESPONSE_MODE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:521
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.redirect-path]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.redirect-path[quarkus.oidc.\"tenant\".authentication.redirect-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path for calculating a `redirect_uri` query parameter. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if the current request URI is 'https://localhost:8080/service' then a `redirect_uri` parameter will be set to 'https://localhost:8080/' if this property is set to '/' and be the same as the request URI if this property has not been configured. Note the original request URI will be restored after the user has authenticated if 'restorePathAfterRedirect' is set to `true`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REDIRECT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REDIRECT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:538
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.restore-path-after-redirect]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.restore-path-after-redirect[quarkus.oidc.\"tenant\".authentication.restore-path-after-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then the original request URI which was used before the authentication will be restored after the user has been redirected back to the application. Note if `redirectPath` property is not set, the original request URI will be restored even if this property is disabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:555
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.remove-redirect-parameters]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.remove-redirect-parameters[quarkus.oidc.\"tenant\".authentication.remove-redirect-parameters]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Remove the query parameters such as 'code' and 'state' set by the OIDC server on the redirect URI after the user has authenticated by redirecting a user to the same URI but without the query parameters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:572
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.error-path]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.error-path[quarkus.oidc.\"tenant\".authentication.error-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path to the public endpoint which will process the error response from the OIDC authorization endpoint. If the user authentication has failed then the OIDC provider will return an `error` and an optional `error_description` parameters, instead of the expected authorization 'code'. If this property is set then the user will be redirected to the endpoint which can return a user-friendly error description page. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if it is set as '/error' and the current request URI is 'https://localhost:8080/callback?error=invalid_scope' then a redirect will be made to 'https://localhost:8080/error?error=invalid_scope'. If this property is not set then HTTP 401 status will be returned in case of the user authentication failure.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ERROR_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ERROR_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:589
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.verify-access-token]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.verify-access-token[quarkus.oidc.\"tenant\".authentication.verify-access-token]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Both ID and access tokens are fetched from the OIDC provider as part of the authorization code flow. ID token is always verified on every user request as the primary token which is used to represent the principal and extract the roles. Access token is not verified by default since it is meant to be propagated to the downstream services. The verification of the access token should be enabled if it is injected as a JWT token. Access tokens obtained as part of the code flow will always be verified if `quarkus.oidc.roles.source` property is set to `accesstoken` which means the authorization decision will be based on the roles extracted from the access token. Bearer access tokens are always verified.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_VERIFY_ACCESS_TOKEN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_VERIFY_ACCESS_TOKEN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:606
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.force-redirect-https-scheme]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.force-redirect-https-scheme[quarkus.oidc.\"tenant\".authentication.force-redirect-https-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Force 'https' as the `redirect_uri` parameter scheme when running behind an SSL/TLS terminating reverse proxy. This property, if enabled, will also affect the logout `post_logout_redirect_uri` and the local redirect requests.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:623
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.scopes]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.scopes[quarkus.oidc.\"tenant\".authentication.scopes]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of scopes\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SCOPES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SCOPES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:640
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.nonce-required]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.nonce-required[quarkus.oidc.\"tenant\".authentication.nonce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that ID token includes a `nonce` claim which must match `nonce` authentication request query parameter. Enabling this property can help mitigate replay attacks. Do not enable this property if your OpenId Connect provider does not support setting `nonce` in ID token or if you work with OAuth2 provider such as `GitHub` which does not issue ID tokens.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_NONCE_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_NONCE_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:657
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.add-openid-scope]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.add-openid-scope[quarkus.oidc.\"tenant\".authentication.add-openid-scope]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Add the `openid` scope automatically to the list of scopes. This is required for OpenId Connect providers but will not work for OAuth2 providers such as Twitter OAuth2 which does not accept that scope and throws an error.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ADD_OPENID_SCOPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ADD_OPENID_SCOPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:674
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.extra-params-extra-params]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.extra-params-extra-params[quarkus.oidc.\"tenant\".authentication.extra-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties which will be added as the query parameters to the authentication redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_EXTRA_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_EXTRA_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:691
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.forward-params]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.forward-params[quarkus.oidc.\"tenant\".authentication.forward-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Request URL query parameters which, if present, will be added to the authentication redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORWARD_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORWARD_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:708
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-force-secure]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-force-secure[quarkus.oidc.\"tenant\".authentication.cookie-force-secure]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If enabled the state, session and post logout cookies will have their 'secure' parameter set to `true` when HTTP is used. It may be necessary when running behind an SSL/TLS terminating reverse proxy. The cookies will always be secure if HTTPS is used even if this property is set to false.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_FORCE_SECURE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_FORCE_SECURE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:725
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-suffix]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-suffix[quarkus.oidc.\"tenant\".authentication.cookie-suffix]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie name suffix. For example, a session cookie name for the default OIDC tenant is `q_session` but can be changed to `q_session_test` if this property is set to `test`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SUFFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SUFFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:742
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-path]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-path[quarkus.oidc.\"tenant\".authentication.cookie-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path parameter value which, if set, will be used to set a path parameter for the session, state and post logout cookies. The `cookie-path-header` property, if set, will be checked first.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:759
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-path-header]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-path-header[quarkus.oidc.\"tenant\".authentication.cookie-path-header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path header parameter value which, if set, identifies the incoming HTTP header whose value will be used to set a path parameter for the session, state and post logout cookies. If the header is missing then the `cookie-path` property will be checked.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:776
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-domain]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-domain[quarkus.oidc.\"tenant\".authentication.cookie-domain]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie domain parameter value which, if set, will be used for the session, state and post logout cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_DOMAIN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_DOMAIN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:793
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-same-site]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.cookie-same-site[quarkus.oidc.\"tenant\".authentication.cookie-same-site]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"SameSite attribute for the session cookie.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SAME_SITE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SAME_SITE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:811
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.allow-multiple-code-flows]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.allow-multiple-code-flows[quarkus.oidc.\"tenant\".authentication.allow-multiple-code-flows]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If a state cookie is present then a `state` query parameter must also be present and both the state cookie name suffix and state cookie value have to match the value of the `state` query parameter when the redirect path matches the current path. However, if multiple authentications are attempted from the same browser, for example, from the different browser tabs, then the currently available state cookie may represent the authentication flow initiated from another tab and not related to the current request. Disable this property to permit only a single authorization code flow in the same browser.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:834
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.fail-on-missing-state-param]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.fail-on-missing-state-param[quarkus.oidc.\"tenant\".authentication.fail-on-missing-state-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Fail with the HTTP 401 error if the state cookie is present but no state query parameter is present.\n"
"\n"
"When either multiple authentications are disabled or the redirect URL matches the original request URL, the stale state cookie might remain in the browser cache from the earlier failed redirect to an OpenId Connect provider and be visible during the current request. For example, if Single-page application (SPA) uses XHR to handle redirects to the provider which does not support CORS for its authorization endpoint, the browser will block it and the state cookie created by Quarkus will remain in the browser cache. Quarkus will report an authentication failure when it will detect such an old state cookie but find no matching state query parameter.\n"
"\n"
"Reporting HTTP 401 error is usually the right thing to do in such cases, it will minimize a risk of the browser redirect loop but also can identify problems in the way SPA or Quarkus application manage redirects. For example, enabling `java-script-auto-redirect` or having the provider redirect to URL configured with `redirect-path` may be needed to avoid such errors.\n"
"\n"
"However, setting this property to `false` may help if the above options are not suitable. It will cause a new authentication redirect to OpenId Connect provider. Doing so may increase the risk of browser redirect loops.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:851
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.user-info-required]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.user-info-required[quarkus.oidc.\"tenant\".authentication.user-info-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then an OIDC UserInfo endpoint will be called. This property will be enabled if `quarkus.oidc.roles.source` is `userinfo` or `quarkus.oidc.token.verify-access-token-with-user-info` is `true` or `quarkus.oidc.authentication.id-token-required` is set to `false`, you do not have to enable this property manually in these cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_USER_INFO_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_USER_INFO_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:868
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.session-age-extension]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.session-age-extension[quarkus.oidc.\"tenant\".authentication.session-age-extension]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Session age extension in minutes. The user session age property is set to the value of the ID token life-span by default and the user will be redirected to the OIDC provider to re-authenticate once the session has expired. If this property is set to a non-zero value, then the expired ID token can be refreshed before the session has expired. This property will be ignored if the `token.refresh-expired` property has not been enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SESSION_AGE_EXTENSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SESSION_AGE_EXTENSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:888
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.java-script-auto-redirect]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.java-script-auto-redirect[quarkus.oidc.\"tenant\".authentication.java-script-auto-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then a normal 302 redirect response will be returned if the request was initiated via JavaScript API such as XMLHttpRequest or Fetch and the current user needs to be (re)authenticated which may not be desirable for Single-page applications (SPA) since it automatically following the redirect may not work given that OIDC authorization endpoints typically do not support CORS.\n"
"\n"
"If this property is set to 'false' then a status code of '499' will be returned to allow SPA to handle the redirect manually if a request header identifying current request as a JavaScript request is found. 'X-Requested-With' request header with its value set to either `JavaScript` or `XMLHttpRequest` is expected by default if this property is enabled. You can register a custom `JavaScriptRequestChecker` to do a custom JavaScript request check instead.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:905
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.id-token-required]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.id-token-required[quarkus.oidc.\"tenant\".authentication.id-token-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that ID token is available when the authorization code flow completes. Disable this property only when you need to use the authorization code flow with OAuth2 providers which do not return ID token - an internal IdToken will be generated in such cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ID_TOKEN_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ID_TOKEN_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:922
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.internal-id-token-lifespan]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.internal-id-token-lifespan[quarkus.oidc.\"tenant\".authentication.internal-id-token-lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Internal ID token lifespan. This property is only checked when an internal IdToken is generated when Oauth2 providers do not return IdToken.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:940
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.pkce-required]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.pkce-required[quarkus.oidc.\"tenant\".authentication.pkce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that a Proof Key for Code Exchange (PKCE) is used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_PKCE_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_PKCE_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:963
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.state-secret]]`link:#quarkus-oidc-oidc-tenant-config-authentication_quarkus.oidc.-tenant-.authentication.state-secret[quarkus.oidc.\"tenant\".authentication.state-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret which will be used to encrypt Proof Key for Code Exchange (PKCE) code verifier and/or nonce in the code flow state. This secret should be at least 32 characters long.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` will be checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication will be checked. Client secret will not be used as a state encryption secret if it is less than 32 characters long.\n"
"\n"
"The secret will be auto-generated if it remains uninitialized after checking all of these properties.\n"
"\n"
"Error will be reported if the secret length is less than 16 characters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_STATE_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_STATE_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Block title
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:970
#, no-wrap
msgid "About the Duration format"
msgstr ""

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:974
#, fuzzy
msgid "To write duration values, use the standard `java.time.Duration` format.  See the link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/Duration.html#parse(java.lang.CharSequence)[Duration#parse() Java API documentation] for more information."
msgstr "持续时间的格式使用标准的 `java.time.Duration` 格式您可以在 https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-[Duration#parse() javadoc] 中了解更多信息。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:976
#, fuzzy
msgid "You can also use a simplified format, starting with a number:"
msgstr "您也可以使用简化格式，以数字开头："

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:978
#, fuzzy
msgid "If the value is only a number, it represents time in seconds."
msgstr "如果数值只是一个数字，则表示时间（秒）。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:979
#, fuzzy
msgid "If the value is a number followed by `ms`, it represents time in milliseconds."
msgstr "如果数值是一个数字，后跟 `ms` ，则表示时间（毫秒）。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:981
#, fuzzy
msgid "In other cases, the simplified format is translated to the `java.time.Duration` format for parsing:"
msgstr "在其他情况下，简化格式会被翻译成 `java.time.Duration` 格式进行解析："

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:983
#, fuzzy
msgid "If the value is a number followed by `h`, `m`, or `s`, it is prefixed with `PT`."
msgstr "如果数值是一个数字，后面跟 `h` 、 `m` 或 `s` ，则前缀为 `PT` 。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config-authentication.adoc:984
#, fuzzy
msgid "If the value is a number followed by `d`, it is prefixed with `P`."
msgstr "如果数值是一个数字，后面跟 `d` ，则前缀为 `P` 。"

#~ msgid "You can also provide duration values starting with a number.  In this case, if the value consists only of a number, the converter treats the value as seconds.  Otherwise, `PT` is implicitly prepended to the value to obtain a standard `java.time.Duration` format."
#~ msgstr "您还可以提供以数字开头的持续时间值。 在这种情况下，如果该值仅包含一个数字，则转换器将该值视为秒。 否则，`PT` 会隐式添加到值的前面，以获得标准的 `java.time.Duration` 格式。"
