# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-16 02:19+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "[[quarkus-oidc_configuration]]link:#quarkus-oidc_configuration[Configuration property]"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "Type"
msgstr "类型"

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "Default"
msgstr "默认"

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-enabled]]`link:#quarkus-oidc_quarkus-keycloak-devservices-enabled[quarkus.keycloak.devservices.enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Flag to enable (default) or disable Dev Services. When enabled, Dev Services for Keycloak automatically configures and starts Keycloak in Dev or Test mode, and when Docker is running.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_ENABLED+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy, no-wrap
msgid "boolean"
msgstr "布尔型"

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`true`"
msgstr "`true` "

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-image-name]]`link:#quarkus-oidc_quarkus-keycloak-devservices-image-name[quarkus.keycloak.devservices.image-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The container image name for Dev Services providers. Defaults to a Quarkus-based Keycloak image. For a WildFly-based distribution, use an image like `quay.io/keycloak/keycloak:19.0.3-legacy`. Keycloak Quarkus and WildFly images are initialized differently. Dev Services for Keycloak will assume it is a Keycloak Quarkus image unless the image version ends with `-legacy`. Override with `quarkus.keycloak.devservices.keycloak-x-image`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_IMAGE_NAME+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy, no-wrap
msgid "string"
msgstr "绳子"

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "`quay.io/keycloak/keycloak:25.0.0`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-keycloak-x-image]]`link:#quarkus-oidc_quarkus-keycloak-devservices-keycloak-x-image[quarkus.keycloak.devservices.keycloak-x-image]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Indicates if a Keycloak-X image is used. By default, the image is identified by `keycloak-x` in the image name. For custom images, override with `quarkus.keycloak.devservices.keycloak-x-image`. You do not need to set this property if the default check works.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_KEYCLOAK_X_IMAGE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-shared]]`link:#quarkus-oidc_quarkus-keycloak-devservices-shared[quarkus.keycloak.devservices.shared]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Determines if the Keycloak container is shared. When shared, Quarkus uses label-based service discovery to find and reuse a running Keycloak container, so a second one is not started. Otherwise, if a matching container is not is found, a new container is started. The service discovery uses the `quarkus-dev-service-label` label, whose value is set by the `service-name` property. Container sharing is available only in dev mode.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_SHARED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-service-name]]`link:#quarkus-oidc_quarkus-keycloak-devservices-service-name[quarkus.keycloak.devservices.service-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The value of the `quarkus-dev-service-keycloak` label for identifying the Keycloak container. Used in shared mode to locate an existing container with this label. If not found, a new container is initialized with this label. Applicable only in dev mode.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_SERVICE_NAME+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy, no-wrap
msgid "`quarkus`"
msgstr " `quarkus` "

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-realm-path]]`link:#quarkus-oidc_quarkus-keycloak-devservices-realm-path[quarkus.keycloak.devservices.realm-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A comma-separated list of class or file system paths to Keycloak realm files. This list is used to initialize Keycloak. The first value in this list is used to initialize default tenant connection properties.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_REALM_PATH+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "list of string"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-java-opts]]`link:#quarkus-oidc_quarkus-keycloak-devservices-java-opts[quarkus.keycloak.devservices.java-opts]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The `JAVA_OPTS` passed to the keycloak JVM\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_JAVA_OPTS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-show-logs]]`link:#quarkus-oidc_quarkus-keycloak-devservices-show-logs[quarkus.keycloak.devservices.show-logs]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Show Keycloak log messages with a \"Keycloak:\" prefix.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_SHOW_LOGS+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`false`"
msgstr "`false` "

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-start-command]]`link:#quarkus-oidc_quarkus-keycloak-devservices-start-command[quarkus.keycloak.devservices.start-command]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Keycloak start command. Use this property to experiment with Keycloak start options, see `https://www.keycloak.org/server/all-config`. Note, it is ignored when loading legacy Keycloak WildFly images.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_START_COMMAND+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-realm-name]]`link:#quarkus-oidc_quarkus-keycloak-devservices-realm-name[quarkus.keycloak.devservices.realm-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The name of the Keycloak realm. This property is used to create the realm if the realm file pointed to by the `realm-path` property does not exist. The default value is `quarkus` in this case. It is recommended to always set this property so that Dev Services for Keycloak can identify the realm name without parsing the realm file.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_REALM_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-create-realm]]`link:#quarkus-oidc_quarkus-keycloak-devservices-create-realm[quarkus.keycloak.devservices.create-realm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Specifies whether to create the Keycloak realm when no realm file is found at the `realm-path`. Set to `false` if the realm is to be created using either the Keycloak Administration Console or the Keycloak Admin API provided by `io.quarkus.test.common.QuarkusTestResourceLifecycleManager`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_CREATE_REALM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-port]]`link:#quarkus-oidc_quarkus-keycloak-devservices-port[quarkus.keycloak.devservices.port]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The specific port for the dev service to listen on.\n"
"\n"
"If not specified, a random port is selected.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_PORT+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy, no-wrap
msgid "int"
msgstr "int"

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-resource-aliases-alias-name]]`link:#quarkus-oidc_quarkus-keycloak-devservices-resource-aliases-alias-name[quarkus.keycloak.devservices.resource-aliases.\"alias-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Aliases to additional class or file system resources that are used to initialize Keycloak. Each map entry represents a mapping between an alias and a class or file system resource path.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_RESOURCE_ALIASES__ALIAS_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "link:https://docs.oracle.com/javase/8/docs/api/java/lang/String.html[String]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-resource-mappings-resource-name]]`link:#quarkus-oidc_quarkus-keycloak-devservices-resource-mappings-resource-name[quarkus.keycloak.devservices.resource-mappings.\"resource-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional class or file system resources that are used to initialize Keycloak. Each map entry represents a mapping between a class or file system resource path alias and the Keycloak container location.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_RESOURCE_MAPPINGS__RESOURCE_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-users-users]]`link:#quarkus-oidc_quarkus-keycloak-devservices-users-users[quarkus.keycloak.devservices.users.\"users\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A map of Keycloak usernames to passwords. If empty, default users `alice` and `bob` are created with their names as passwords. This map is used for user creation when no realm file is found at the `realm-path`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_USERS__USERS_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-roles-role-name]]`link:#quarkus-oidc_quarkus-keycloak-devservices-roles-role-name[quarkus.keycloak.devservices.roles.\"role-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A map of roles for Keycloak users. If empty, default roles are assigned: `alice` receives `admin` and `user` roles, while other users receive `user` role. This map is used for role creation when no realm file is found at the `realm-path`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_ROLES__ROLE_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "link:https://docs.oracle.com/javase/8/docs/api/java/util/List.html[List]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-keycloak-devservices-container-env-environment-variable-name]]`link:#quarkus-oidc_quarkus-keycloak-devservices-container-env-environment-variable-name[quarkus.keycloak.devservices.container-env.\"environment-variable-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Environment variables to be passed to the container.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_KEYCLOAK_DEVSERVICES_CONTAINER_ENV__ENVIRONMENT_VARIABLE_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-oidc-enabled]]`link:#quarkus-oidc_quarkus-oidc-enabled[quarkus.oidc.enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If the OIDC extension is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ENABLED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-oidc-devui-grant-type]]`link:#quarkus-oidc_quarkus-oidc-devui-grant-type[quarkus.oidc.devui.grant.type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Grant type which will be used to acquire a token to test the OIDC 'service' applications\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_DEVUI_GRANT_TYPE+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "tooltip:client['client_credentials' grant], tooltip:password['password' grant], tooltip:code['authorization_code' grant], tooltip:implicit['implicit' grant]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-oidc-devui-web-client-timeout]]`link:#quarkus-oidc_quarkus-oidc-devui-web-client-timeout[quarkus.oidc.devui.web-client-timeout]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The WebClient timeout. Use this property to configure how long an HTTP client used by Dev UI handlers will wait for a response when requesting tokens from OpenId Connect Provider and sending them to the service endpoint. This timeout is also used by the OIDC dev service admin client.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_DEVUI_WEB_CLIENT_TIMEOUT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor-{summaryTableId}[icon:question-circle[title=More information about the Duration format]]"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`4S`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-oidc-default-token-cache-enabled]]`link:#quarkus-oidc_quarkus-oidc-default-token-cache-enabled[quarkus.oidc.default-token-cache-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Enable the registration of the Default TokenIntrospection and UserInfo Cache implementation bean. Note: This only enables the default implementation. It requires configuration to be activated. See `OidcConfig++#++tokenCache`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_DEFAULT_TOKEN_CACHE_ENABLED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-auth-server-url]]`link:#quarkus-oidc_quarkus-oidc-auth-server-url[quarkus.oidc.auth-server-url]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. Do not set this property if the public key verification (`public-key`) or certificate chain verification only (`certificate-chain`) is required. The OIDC discovery endpoint is called by default by appending a `.well-known/openid-configuration` path to this URL. For Keycloak, use `https://host:port/realms/++{++realm++}++`, replacing `++{++realm++}++` with the Keycloak realm name.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTH_SERVER_URL+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-discovery-enabled]]`link:#quarkus-oidc_quarkus-oidc-discovery-enabled[quarkus.oidc.discovery-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Discovery of the OIDC endpoints. If not enabled, you must configure the OIDC endpoint URLs individually.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_DISCOVERY_ENABLED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-path]]`link:#quarkus-oidc_quarkus-oidc-token-path[quarkus.oidc.token-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The OIDC token endpoint that issues access and refresh tokens; specified as a relative path or absolute URL. Set if `discovery-enabled` is `false` or a discovered token endpoint path must be customized.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-revoke-path]]`link:#quarkus-oidc_quarkus-oidc-revoke-path[quarkus.oidc.revoke-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path or absolute URL of the OIDC token revocation endpoint.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_REVOKE_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-client-id]]`link:#quarkus-oidc_quarkus-oidc-client-id[quarkus.oidc.client-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client id of the application. Each application has a client id that is used to identify the application. Setting the client id is not required if `application-type` is `service` and no token introspection is required.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CLIENT_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-client-name]]`link:#quarkus-oidc_quarkus-oidc-client-name[quarkus.oidc.client-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client name of the application. It is meant to represent a human readable description of the application which you may provide when an application (client) is registered in an OpenId Connect provider's dashboard. For example, you can set this property to have more informative log messages which record an activity of the given client.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CLIENT_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-connection-delay]]`link:#quarkus-oidc_quarkus-oidc-connection-delay[quarkus.oidc.connection-delay]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The duration to attempt the initial connection to an OIDC server. For example, setting the duration to `20S` allows 10 retries, each 2 seconds apart. This property is only effective when the initial OIDC connection is created. For dropped connections, use the `connection-retry-count` property instead.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CONNECTION_DELAY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-connection-retry-count]]`link:#quarkus-oidc_quarkus-oidc-connection-retry-count[quarkus.oidc.connection-retry-count]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The number of times to retry re-establishing an existing OIDC connection if it is temporarily lost. Different from `connection-delay`, which applies only to initial connection attempts. For instance, if a request to the OIDC token endpoint fails due to a connection issue, it will be retried as per this setting.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CONNECTION_RETRY_COUNT+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`3`"
msgstr "`3` "

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-connection-timeout]]`link:#quarkus-oidc_quarkus-oidc-connection-timeout[quarkus.oidc.connection-timeout]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The number of seconds after which the current OIDC connection request times out.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CONNECTION_TIMEOUT+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`10S`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-use-blocking-dns-lookup]]`link:#quarkus-oidc_quarkus-oidc-use-blocking-dns-lookup[quarkus.oidc.use-blocking-dns-lookup]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Whether DNS lookup should be performed on the worker thread. Use this option when you can see logged warnings about blocked Vert.x event loop by HTTP requests to OIDC server.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_USE_BLOCKING_DNS_LOOKUP+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-max-pool-size]]`link:#quarkus-oidc_quarkus-oidc-max-pool-size[quarkus.oidc.max-pool-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The maximum size of the connection pool used by the WebClient.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_MAX_POOL_SIZE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-secret]]`link:#quarkus-oidc_quarkus-oidc-credentials-secret[quarkus.oidc.credentials.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client secret used by the `client_secret_basic` authentication method. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required. You can use `client-secret.value` instead, but both properties are mutually exclusive.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-client-secret-value]]`link:#quarkus-oidc_quarkus-oidc-credentials-client-secret-value[quarkus.oidc.credentials.client-secret.value]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client secret value. This value is ignored if `credentials.secret` is set. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_VALUE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-client-secret-provider-name]]`link:#quarkus-oidc_quarkus-oidc-credentials-client-secret-provider-name[quarkus.oidc.credentials.client-secret.provider.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-client-secret-provider-keyring-name]]`link:#quarkus-oidc_quarkus-oidc-credentials-client-secret-provider-keyring-name[quarkus.oidc.credentials.client-secret.provider.keyring-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_PROVIDER_KEYRING_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-client-secret-provider-key]]`link:#quarkus-oidc_quarkus-oidc-credentials-client-secret-provider-key[quarkus.oidc.credentials.client-secret.provider.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider client secret key\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-client-secret-method]]`link:#quarkus-oidc_quarkus-oidc-credentials-client-secret-method[quarkus.oidc.credentials.client-secret.method]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The authentication method. If the `clientSecret.value` secret is set, this method is `basic` by default.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_METHOD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "tooltip:basic[`client_secret_basic` (default): The client id and secret are submitted with the HTTP Authorization Basic scheme.], tooltip:post[`client_secret_post`: The client id and secret are submitted as the `client_id` and `client_secret` form parameters.], tooltip:post-jwt[`client_secret_jwt`: The client id and generated JWT secret are submitted as the `client_id` and `client_secret` form parameters.], tooltip:query[client id and secret are submitted as HTTP query parameters. This option is only supported by the OIDC extension.]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-source]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-source[quarkus.oidc.credentials.jwt.source]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"JWT token source: OIDC provider client or an existing JWT bearer token.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SOURCE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "`client`, `bearer`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "`client`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-secret]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-secret[quarkus.oidc.credentials.jwt.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a secret key.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-secret-provider-name]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-secret-provider-name[quarkus.oidc.credentials.jwt.secret-provider.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET_PROVIDER_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-secret-provider-keyring-name]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-secret-provider-keyring-name[quarkus.oidc.credentials.jwt.secret-provider.keyring-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET_PROVIDER_KEYRING_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-secret-provider-key]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-secret-provider-key[quarkus.oidc.credentials.jwt.secret-provider.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider client secret key\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET_PROVIDER_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-key]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-key[quarkus.oidc.credentials.jwt.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"String representation of a private key. If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-key-file]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-key-file[quarkus.oidc.credentials.jwt.key-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-key-store-file]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-key-store-file[quarkus.oidc.credentials.jwt.key-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a private key from a keystore.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_STORE_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-key-store-password]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-key-store-password[quarkus.oidc.credentials.jwt.key-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the keystore file.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_STORE_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-key-id]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-key-id[quarkus.oidc.credentials.jwt.key-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The private key id or alias.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-key-password]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-key-password[quarkus.oidc.credentials.jwt.key-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The private key password.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-audience]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-audience[quarkus.oidc.credentials.jwt.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The JWT audience (`aud`) claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_AUDIENCE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-token-key-id]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-token-key-id[quarkus.oidc.credentials.jwt.token-key-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The key identifier of the signing key added as a JWT `kid` header.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_TOKEN_KEY_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-issuer]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-issuer[quarkus.oidc.credentials.jwt.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The issuer of the signing key added as a JWT `iss` claim. The default value is the client id.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_ISSUER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-subject]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-subject[quarkus.oidc.credentials.jwt.subject]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Subject of the signing key added as a JWT `sub` claim The default value is the client id.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SUBJECT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-signature-algorithm]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-signature-algorithm[quarkus.oidc.credentials.jwt.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The signature algorithm used for the `key-file` property. Supported values: `RS256` (default), `RS384`, `RS512`, `PS256`, `PS384`, `PS512`, `ES256`, `ES384`, `ES512`, `HS256`, `HS384`, `HS512`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SIGNATURE_ALGORITHM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-lifespan]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-lifespan[quarkus.oidc.credentials.jwt.lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The JWT lifespan in seconds. This value is added to the time at which the JWT was issued to calculate the expiration time.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_LIFESPAN+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`10`"
msgstr "`10` "

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-assertion]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-assertion[quarkus.oidc.credentials.jwt.assertion]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If true then the client authentication token is a JWT bearer grant assertion. Instead of producing 'client_assertion' and 'client_assertion_type' form properties, only 'assertion' is produced. This option is only supported by the OIDC client extension.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_ASSERTION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-proxy-host]]`link:#quarkus-oidc_quarkus-oidc-proxy-host[quarkus.oidc.proxy.host]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The host name or IP address of the Proxy. +\n"
"Note: If the OIDC adapter requires a Proxy to talk with the OIDC server (Provider), set this value to enable the usage of a Proxy.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROXY_HOST+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-proxy-port]]`link:#quarkus-oidc_quarkus-oidc-proxy-port[quarkus.oidc.proxy.port]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The port number of the Proxy. The default value is `80`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROXY_PORT+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`80`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-proxy-username]]`link:#quarkus-oidc_quarkus-oidc-proxy-username[quarkus.oidc.proxy.username]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The username, if the Proxy needs authentication.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROXY_USERNAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-proxy-password]]`link:#quarkus-oidc_quarkus-oidc-proxy-password[quarkus.oidc.proxy.password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password, if the Proxy needs authentication.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROXY_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-verification]]`link:#quarkus-oidc_quarkus-oidc-tls-verification[quarkus.oidc.tls.verification]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Certificate validation and hostname verification, which can be one of the following `Verification` values. Default is `required`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_VERIFICATION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "tooltip:required[Certificates are validated and hostname verification is enabled. This is the default value.], tooltip:certificate-validation[Certificates are validated but hostname verification is disabled.], tooltip:none[All certificates are trusted and hostname verification is disabled.]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-key-store-file]]`link:#quarkus-oidc_quarkus-oidc-tls-key-store-file[quarkus.oidc.tls.key-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional keystore that holds the certificate information instead of specifying separate files.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_FILE+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy, no-wrap
msgid "path"
msgstr "路"

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-key-store-file-type]]`link:#quarkus-oidc_quarkus-oidc-tls-key-store-file-type[quarkus.oidc.tls.key-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The type of the keystore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_FILE_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-key-store-provider]]`link:#quarkus-oidc_quarkus-oidc-tls-key-store-provider[quarkus.oidc.tls.key-store-provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The provider of the keystore file. If not given, the provider is automatically detected based on the keystore file type.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_PROVIDER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-key-store-password]]`link:#quarkus-oidc_quarkus-oidc-tls-key-store-password[quarkus.oidc.tls.key-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password of the keystore file. If not given, the default value, `password`, is used.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-key-store-key-alias]]`link:#quarkus-oidc_quarkus-oidc-tls-key-store-key-alias[quarkus.oidc.tls.key-store-key-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The alias of a specific key in the keystore. When SNI is disabled, if the keystore contains multiple keys and no alias is specified, the behavior is undefined.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_KEY_ALIAS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-key-store-key-password]]`link:#quarkus-oidc_quarkus-oidc-tls-key-store-key-password[quarkus.oidc.tls.key-store-key-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password of the key, if it is different from the `key-store-password`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_KEY_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-trust-store-file]]`link:#quarkus-oidc_quarkus-oidc-tls-trust-store-file[quarkus.oidc.tls.trust-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The truststore that holds the certificate information of the certificates to trust.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-trust-store-password]]`link:#quarkus-oidc_quarkus-oidc-tls-trust-store-password[quarkus.oidc.tls.trust-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password of the truststore file.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-trust-store-cert-alias]]`link:#quarkus-oidc_quarkus-oidc-tls-trust-store-cert-alias[quarkus.oidc.tls.trust-store-cert-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The alias of the truststore certificate.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_CERT_ALIAS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-trust-store-file-type]]`link:#quarkus-oidc_quarkus-oidc-tls-trust-store-file-type[quarkus.oidc.tls.trust-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The type of the truststore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_FILE_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tls-trust-store-provider]]`link:#quarkus-oidc_quarkus-oidc-tls-trust-store-provider[quarkus.oidc.tls.trust-store-provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The provider of the truststore file. If not given, the provider is automatically detected based on the truststore file type.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_PROVIDER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-id]]`link:#quarkus-oidc_quarkus-oidc-tenant-id[quarkus.oidc.tenant-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A unique tenant identifier. It can be set by `TenantConfigResolver` providers, which resolve the tenant configuration dynamically.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TENANT_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-enabled]]`link:#quarkus-oidc_quarkus-oidc-tenant-enabled[quarkus.oidc.tenant-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this tenant configuration is enabled. The default tenant is disabled if it is not configured but a `TenantConfigResolver` that resolves tenant configurations is registered, or named tenants are configured. In this case, you do not need to disable the default tenant.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TENANT_ENABLED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-application-type]]`link:#quarkus-oidc_quarkus-oidc-application-type[quarkus.oidc.application-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The application type, which can be one of the following `ApplicationType` values.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_APPLICATION_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "tooltip:web-app[A `WEB_APP` is a client that serves pages, usually a front-end application. For this type of client the Authorization Code Flow is defined as the preferred method for authenticating users.], tooltip:service[A `SERVICE` is a client that has a set of protected HTTP resources, usually a backend application following the RESTful Architectural Design. For this type of client, the Bearer Authorization method is defined as the preferred method for authenticating and authorizing users.], tooltip:hybrid[A combined `SERVICE` and `WEB_APP` client. For this type of client, the Bearer Authorization method is used if the Authorization header is set and Authorization Code Flow - if not.]"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`service`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authorization-path]]`link:#quarkus-oidc_quarkus-oidc-authorization-path[quarkus.oidc.authorization-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path or absolute URL of the OpenID Connect (OIDC) authorization endpoint, which authenticates users. You must set this property for `web-app` applications if OIDC discovery is disabled. This property is ignored if OIDC discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHORIZATION_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-user-info-path]]`link:#quarkus-oidc_quarkus-oidc-user-info-path[quarkus.oidc.user-info-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path or absolute URL of the OIDC UserInfo endpoint. You must set this property for `web-app` applications if OIDC discovery is disabled and the `authentication.user-info-required` property is enabled. This property is ignored if OIDC discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_USER_INFO_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-introspection-path]]`link:#quarkus-oidc_quarkus-oidc-introspection-path[quarkus.oidc.introspection-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC RFC7662 introspection endpoint which can introspect both opaque and JSON Web Token (JWT) tokens. This property must be set if OIDC discovery is disabled and 1) the opaque bearer access tokens must be verified or 2) JWT tokens must be verified while the cached JWK verification set with no matching JWK is being refreshed. This property is ignored if the discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_INTROSPECTION_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-jwks-path]]`link:#quarkus-oidc_quarkus-oidc-jwks-path[quarkus.oidc.jwks-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC JSON Web Key Set (JWKS) endpoint which returns a JSON Web Key Verification Set. This property should be set if OIDC discovery is disabled and the local JWT verification is required. This property is ignored if the discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-end-session-path]]`link:#quarkus-oidc_quarkus-oidc-end-session-path[quarkus.oidc.end-session-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC end_session_endpoint. This property must be set if OIDC discovery is disabled and RP Initiated Logout support for the `web-app` applications is required. This property is ignored if the discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_END_SESSION_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-paths]]`link:#quarkus-oidc_quarkus-oidc-tenant-paths[quarkus.oidc.tenant-paths]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The paths which must be secured by this tenant. Tenant with the most specific path wins.\n"
"Please see the xref:security-openid-connect-multitenancy.adoc#configure-tenant-paths[Configure tenant paths]\n"
"section of the OIDC multitenancy guide for explanation of allowed path patterns.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TENANT_PATHS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-public-key]]`link:#quarkus-oidc_quarkus-oidc-public-key[quarkus.oidc.public-key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The public key for the local JWT token verification. OIDC server connection is not created when this property is set.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PUBLIC_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-introspection-credentials-name]]`link:#quarkus-oidc_quarkus-oidc-introspection-credentials-name[quarkus.oidc.introspection-credentials.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-introspection-credentials-secret]]`link:#quarkus-oidc_quarkus-oidc-introspection-credentials-secret[quarkus.oidc.introspection-credentials.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-introspection-credentials-include-client-id]]`link:#quarkus-oidc_quarkus-oidc-introspection-credentials-include-client-id[quarkus.oidc.introspection-credentials.include-client-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Include OpenId Connect Client ID configured with `quarkus.oidc.client-id`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_INCLUDE_CLIENT_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-roles-role-claim-path]]`link:#quarkus-oidc_quarkus-oidc-roles-role-claim-path[quarkus.oidc.roles.role-claim-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A list of paths to claims containing an array of groups. Each path starts from the top level JWT JSON object and can contain multiple segments. Each segment represents a JSON object name only; for example: \"realm/groups\". Use double quotes with the namespace-qualified claim names. This property can be used if a token has no `groups` claim but has the groups set in one or more different claims.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ROLES_ROLE_CLAIM_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-roles-role-claim-separator]]`link:#quarkus-oidc_quarkus-oidc-roles-role-claim-separator[quarkus.oidc.roles.role-claim-separator]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The separator for splitting strings that contain multiple group values. It is only used if the \"role-claim-path\" property points to one or more custom claims whose values are strings. A single space is used by default because the standard `scope` claim can contain a space-separated sequence.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ROLES_ROLE_CLAIM_SEPARATOR+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-roles-source]]`link:#quarkus-oidc_quarkus-oidc-roles-source[quarkus.oidc.roles.source]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Source of the principal roles.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ROLES_SOURCE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "tooltip:idtoken[ID Token - the default value for the `web-app` applications.], tooltip:accesstoken[Access Token - the default value for the `service` applications; can also be used as the source of roles for the `web-app` applications.], tooltip:userinfo[User Info]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-issuer]]`link:#quarkus-oidc_quarkus-oidc-token-issuer[quarkus.oidc.token.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The expected issuer `iss` claim value. This property overrides the `issuer` property, which might be set in OpenId Connect provider's well-known configuration. If the `iss` claim value varies depending on the host, IP address, or tenant id of the provider, you can skip the issuer verification by setting this property to `any`, but it should be done only when other options (such as configuring the provider to use the fixed `iss` claim value) are not possible.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ISSUER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-audience]]`link:#quarkus-oidc_quarkus-oidc-token-audience[quarkus.oidc.token.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The expected audience `aud` claim value, which can be a string or an array of strings. Note the audience claim is verified for ID tokens by default. ID token audience must be equal to the value of `quarkus.oidc.client-id` property. Use this property to override the expected value if your OpenID Connect provider sets a different audience claim value in ID tokens. Set it to `any` if your provider does not set ID token audience` claim. Audience verification for access tokens is only done if this property is configured.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AUDIENCE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-subject-required]]`link:#quarkus-oidc_quarkus-oidc-token-subject-required[quarkus.oidc.token.subject-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that the token includes a `sub` (subject) claim which is a unique and never reassigned identifier for the current user. Note that if you enable this property and if UserInfo is also required, both the token and UserInfo `sub` claims must be present and match each other.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_SUBJECT_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-token-type]]`link:#quarkus-oidc_quarkus-oidc-token-token-type[quarkus.oidc.token.token-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected token type\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_TOKEN_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-lifespan-grace]]`link:#quarkus-oidc_quarkus-oidc-token-lifespan-grace[quarkus.oidc.token.lifespan-grace]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Life span grace period in seconds. When checking token expiry, current time is allowed to be later than token expiration time by at most the configured number of seconds. When checking token issuance, current time is allowed to be sooner than token issue time by at most the configured number of seconds.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_LIFESPAN_GRACE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-age]]`link:#quarkus-oidc_quarkus-oidc-token-age[quarkus.oidc.token.age]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token age. It allows for the number of seconds to be specified that must not elapse since the `iat` (issued at) time. A small leeway to account for clock skew which can be configured with `quarkus.oidc.token.lifespan-grace` to verify the token expiry time can also be used to verify the token age property. Note that setting this property does not relax the requirement that Bearer and Code Flow JWT tokens must have a valid (`exp`) expiry claim value. The only exception where setting this property relaxes the requirement is when a logout token is sent with a back-channel logout request since the current OpenId Connect Back-Channel specification does not explicitly require the logout tokens to contain an `exp` claim. However, even if the current logout token is allowed to have no `exp` claim, the `exp` claim is still verified if the logout token contains it.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AGE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-issued-at-required]]`link:#quarkus-oidc_quarkus-oidc-token-issued-at-required[quarkus.oidc.token.issued-at-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that the token includes a `iat` (issued at) claim Set this property to `false` if your JWT token does not contain an `iat` (issued at) claim. Note that ID token is always required to have an `iat` claim and therefore this property has no impact on the ID token verification process.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ISSUED_AT_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-principal-claim]]`link:#quarkus-oidc_quarkus-oidc-token-principal-claim[quarkus.oidc.token.principal-claim]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the claim which contains a principal name. By default, the `upn`, `preferred_username` and `sub` claims are checked.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_PRINCIPAL_CLAIM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-refresh-expired]]`link:#quarkus-oidc_quarkus-oidc-token-refresh-expired[quarkus.oidc.token.refresh-expired]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh expired authorization code flow ID or access tokens. If this property is enabled, a refresh token request is performed if the authorization code ID or access token has expired and, if successful, the local session is updated with the new set of tokens. Otherwise, the local session is invalidated and the user redirected to the OpenID Provider to re-authenticate. In this case, the user might not be challenged again if the OIDC provider session is still active. For this option be effective the `authentication.session-age-extension` property should also be set to a nonzero value since the refresh token is currently kept in the user session. This option is valid only when the application is of type `ApplicationType++#++WEB_APP`++}++. This property is enabled if `quarkus.oidc.token.refresh-token-time-skew` is configured, you do not need to enable this property manually in this case.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REFRESH_EXPIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-refresh-token-time-skew]]`link:#quarkus-oidc_quarkus-oidc-token-refresh-token-time-skew[quarkus.oidc.token.refresh-token-time-skew]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The refresh token time skew, in seconds. If this property is enabled, the configured number of seconds is added to the current time when checking if the authorization code ID or access token should be refreshed. If the sum is greater than the authorization code ID or access token's expiration time, a refresh is going to happen.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REFRESH_TOKEN_TIME_SKEW+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-forced-jwk-refresh-interval]]`link:#quarkus-oidc_quarkus-oidc-token-forced-jwk-refresh-interval[quarkus.oidc.token.forced-jwk-refresh-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The forced JWK set refresh interval in minutes.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_FORCED_JWK_REFRESH_INTERVAL+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`10M`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-header]]`link:#quarkus-oidc_quarkus-oidc-token-header[quarkus.oidc.token.header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP header that contains a bearer token. This option is valid only when the application is of type `ApplicationType++#++SERVICE`++}++.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_HEADER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-authorization-scheme]]`link:#quarkus-oidc_quarkus-oidc-token-authorization-scheme[quarkus.oidc.token.authorization-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"HTTP Authorization header scheme.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AUTHORIZATION_SCHEME+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`Bearer`"
msgstr "`Bearer`"

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-signature-algorithm]]`link:#quarkus-oidc_quarkus-oidc-token-signature-algorithm[quarkus.oidc.token.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Required signature algorithm. OIDC providers support many signature algorithms but if necessary you can restrict Quarkus application to accept tokens signed only using an algorithm configured with this property.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_SIGNATURE_ALGORITHM+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`rs256`, `rs384`, `rs512`, `ps256`, `ps384`, `ps512`, `es256`, `es384`, `es512`, `eddsa`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-decryption-key-location]]`link:#quarkus-oidc_quarkus-oidc-token-decryption-key-location[quarkus.oidc.token.decryption-key-location]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Decryption key location. JWT tokens can be inner-signed and encrypted by OpenId Connect providers. However, it is not always possible to remotely introspect such tokens because the providers might not control the private decryption keys. In such cases set this property to point to the file containing the decryption private key in PEM or JSON Web Key (JWK) format. If this property is not set and the `private_key_jwt` client authentication method is used, the private key used to sign the client authentication JWT tokens are also used to decrypt the encrypted ID tokens.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_DECRYPTION_KEY_LOCATION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-allow-jwt-introspection]]`link:#quarkus-oidc_quarkus-oidc-token-allow-jwt-introspection[quarkus.oidc.token.allow-jwt-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of JWT tokens when no matching JWK key is available. This property is set to `true` by default for backward-compatibility reasons. It is planned that this default value will be changed to `false` in an upcoming release. Also note this property is ignored if JWK endpoint URI is not available and introspecting the tokens is the only verification option.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ALLOW_JWT_INTROSPECTION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-require-jwt-introspection-only]]`link:#quarkus-oidc_quarkus-oidc-token-require-jwt-introspection-only[quarkus.oidc.token.require-jwt-introspection-only]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that JWT tokens are only introspected remotely.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-allow-opaque-token-introspection]]`link:#quarkus-oidc_quarkus-oidc-token-allow-opaque-token-introspection[quarkus.oidc.token.allow-opaque-token-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of the opaque tokens. Set this property to `false` if only JWT tokens are expected.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-customizer-name]]`link:#quarkus-oidc_quarkus-oidc-token-customizer-name[quarkus.oidc.token.customizer-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token customizer name. Allows to select a tenant specific token customizer as a named bean. Prefer using `TenantFeature` qualifier when registering custom `TokenCustomizer`. Use this property only to refer to `TokenCustomizer` implementations provided by this extension.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_CUSTOMIZER_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-verify-access-token-with-user-info]]`link:#quarkus-oidc_quarkus-oidc-token-verify-access-token-with-user-info[quarkus.oidc.token.verify-access-token-with-user-info]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Indirectly verify that the opaque (binary) access token is valid by using it to request UserInfo. Opaque access token is considered valid if the provider accepted this token and returned a valid UserInfo. You should only enable this option if the opaque access tokens must be accepted but OpenId Connect provider does not have a token introspection endpoint. This property has no effect when JWT tokens must be verified.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-path]]`link:#quarkus-oidc_quarkus-oidc-logout-path[quarkus.oidc.logout.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the logout endpoint at the application. If provided, the application is able to initiate the logout through this endpoint in conformance with the OpenID Connect RP-Initiated Logout specification.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-post-logout-path]]`link:#quarkus-oidc_quarkus-oidc-logout-post-logout-path[quarkus.oidc.logout.post-logout-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path of the application endpoint where the user should be redirected to after logging out from the OpenID Connect Provider. This endpoint URI must be properly registered at the OpenID Connect Provider as a valid redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_POST_LOGOUT_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-post-logout-uri-param]]`link:#quarkus-oidc_quarkus-oidc-logout-post-logout-uri-param[quarkus.oidc.logout.post-logout-uri-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the post logout URI parameter which is added as a query parameter to the logout redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_POST_LOGOUT_URI_PARAM+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`post_logout_redirect_uri`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-backchannel-path]]`link:#quarkus-oidc_quarkus-oidc-logout-backchannel-path[quarkus.oidc.logout.backchannel.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the Back-Channel Logout endpoint at the application.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-backchannel-token-cache-size]]`link:#quarkus-oidc_quarkus-oidc-logout-backchannel-token-cache-size[quarkus.oidc.logout.backchannel.token-cache-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of logout tokens that can be cached before they are matched against ID tokens stored in session cookies.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_TOKEN_CACHE_SIZE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-backchannel-token-cache-time-to-live]]`link:#quarkus-oidc_quarkus-oidc-logout-backchannel-token-cache-time-to-live[quarkus.oidc.logout.backchannel.token-cache-time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Number of minutes a logout token can be cached for.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_TOKEN_CACHE_TIME_TO_LIVE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-backchannel-clean-up-timer-interval]]`link:#quarkus-oidc_quarkus-oidc-logout-backchannel-clean-up-timer-interval[quarkus.oidc.logout.backchannel.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token cache timer interval. If this property is set, a timer checks and removes the stale entries periodically.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-backchannel-logout-token-key]]`link:#quarkus-oidc_quarkus-oidc-logout-backchannel-logout-token-key[quarkus.oidc.logout.backchannel.logout-token-key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Logout token claim whose value is used as a key for caching the tokens. Only `sub` (subject) and `sid` (session id) claims can be used as keys. Set it to `sid` only if ID tokens issued by the OIDC provider have no `sub` but have `sid` claim.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_LOGOUT_TOKEN_KEY+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`sub`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-frontchannel-path]]`link:#quarkus-oidc_quarkus-oidc-logout-frontchannel-path[quarkus.oidc.logout.frontchannel.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the Front-Channel Logout endpoint at the application.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_FRONTCHANNEL_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-certificate-chain-leaf-certificate-name]]`link:#quarkus-oidc_quarkus-oidc-certificate-chain-leaf-certificate-name[quarkus.oidc.certificate-chain.leaf-certificate-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Common name of the leaf certificate. It must be set if the `trust-store-file` does not have this certificate imported.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_LEAF_CERTIFICATE_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-certificate-chain-trust-store-file]]`link:#quarkus-oidc_quarkus-oidc-certificate-chain-trust-store-file[quarkus.oidc.certificate-chain.trust-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Truststore file which keeps thumbprints of the trusted certificates.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-certificate-chain-trust-store-password]]`link:#quarkus-oidc_quarkus-oidc-certificate-chain-trust-store-password[quarkus.oidc.certificate-chain.trust-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the truststore file if it is configured with `trust-store-file`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-certificate-chain-trust-store-cert-alias]]`link:#quarkus-oidc_quarkus-oidc-certificate-chain-trust-store-cert-alias[quarkus.oidc.certificate-chain.trust-store-cert-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the alias of the truststore certificate.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_CERT_ALIAS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-certificate-chain-trust-store-file-type]]`link:#quarkus-oidc_quarkus-oidc-certificate-chain-trust-store-file-type[quarkus.oidc.certificate-chain.trust-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the truststore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_FILE_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-response-mode]]`link:#quarkus-oidc_quarkus-oidc-authentication-response-mode[quarkus.oidc.authentication.response-mode]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Authorization code flow response mode.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_RESPONSE_MODE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "tooltip:query[Authorization response parameters are encoded in the query string added to the `redirect_uri`], tooltip:form-post[Authorization response parameters are encoded as HTML form values that are auto-submitted in the browser and transmitted by the HTTP POST method using the application/x-www-form-urlencoded content type]"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`query`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-redirect-path]]`link:#quarkus-oidc_quarkus-oidc-authentication-redirect-path[quarkus.oidc.authentication.redirect-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path for calculating a `redirect_uri` query parameter. It has to start from a forward slash and is appended to the request URI's host and port. For example, if the current request URI is `https://localhost:8080/service`, a `redirect_uri` parameter is set to `https://localhost:8080/` if this property is set to `/` and be the same as the request URI if this property has not been configured. Note the original request URI is restored after the user has authenticated if `restorePathAfterRedirect` is set to `true`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_REDIRECT_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-restore-path-after-redirect]]`link:#quarkus-oidc_quarkus-oidc-authentication-restore-path-after-redirect[quarkus.oidc.authentication.restore-path-after-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true`, the original request URI which was used before the authentication is restored after the user has been redirected back to the application. Note if `redirectPath` property is not set, the original request URI is restored even if this property is disabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-remove-redirect-parameters]]`link:#quarkus-oidc_quarkus-oidc-authentication-remove-redirect-parameters[quarkus.oidc.authentication.remove-redirect-parameters]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Remove the query parameters such as `code` and `state` set by the OIDC server on the redirect URI after the user has authenticated by redirecting a user to the same URI but without the query parameters.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-error-path]]`link:#quarkus-oidc_quarkus-oidc-authentication-error-path[quarkus.oidc.authentication.error-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path to the public endpoint which processes the error response from the OIDC authorization endpoint. If the user authentication has failed, the OIDC provider returns an `error` and an optional `error_description` parameters, instead of the expected authorization `code`. If this property is set, the user is redirected to the endpoint which can return a user-friendly error description page. It has to start from a forward slash and is appended to the request URI's host and port. For example, if it is set as `/error` and the current request URI is `https://localhost:8080/callback?error=invalid_scope`, a redirect is made to `https://localhost:8080/error?error=invalid_scope`. If this property is not set, HTTP 401 status is returned in case of the user authentication failure.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ERROR_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-session-expired-path]]`link:#quarkus-oidc_quarkus-oidc-authentication-session-expired-path[quarkus.oidc.authentication.session-expired-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path to the public endpoint which an authenticated user is redirected to when the session has expired.\n"
"\n"
"When the OIDC session has expired and the session can not be refreshed, a user is redirected to the OIDC provider to re-authenticate. The user experience may not be ideal in this case as it may not be obvious to the authenticated user why an authentication challenge is returned.\n"
"\n"
"Set this property if you would like the user whose session has expired be redirected to a public application specific page instead, which can inform that the session has expired and advise the user to re-authenticated by following a link to the secured initial entry page.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_SESSION_EXPIRED_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-verify-access-token]]`link:#quarkus-oidc_quarkus-oidc-authentication-verify-access-token[quarkus.oidc.authentication.verify-access-token]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Both ID and access tokens are fetched from the OIDC provider as part of the authorization code flow.\n"
"\n"
"ID token is always verified on every user request as the primary token which is used to represent the principal and extract the roles.\n"
"\n"
"Authorization code flow access token is meant to be propagated to downstream services and is not verified by default unless `quarkus.oidc.roles.source` property is set to `accesstoken` which means the authorization decision is based on the roles extracted from the access token.\n"
"\n"
"Authorization code flow access token verification is also enabled if this token is injected as JsonWebToken. Set this property to `false` if it is not required.\n"
"\n"
"Bearer access token is always verified.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_VERIFY_ACCESS_TOKEN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-force-redirect-https-scheme]]`link:#quarkus-oidc_quarkus-oidc-authentication-force-redirect-https-scheme[quarkus.oidc.authentication.force-redirect-https-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Force `https` as the `redirect_uri` parameter scheme when running behind an SSL/TLS terminating reverse proxy. This property, if enabled, also affects the logout `post_logout_redirect_uri` and the local redirect requests.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-scopes]]`link:#quarkus-oidc_quarkus-oidc-authentication-scopes[quarkus.oidc.authentication.scopes]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of scopes\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_SCOPES+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-scope-separator]]`link:#quarkus-oidc_quarkus-oidc-authentication-scope-separator[quarkus.oidc.authentication.scope-separator]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The separator which is used when more than one scope is configured. A single space is used by default.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_SCOPE_SEPARATOR+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-nonce-required]]`link:#quarkus-oidc_quarkus-oidc-authentication-nonce-required[quarkus.oidc.authentication.nonce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that ID token includes a `nonce` claim which must match `nonce` authentication request query parameter. Enabling this property can help mitigate replay attacks. Do not enable this property if your OpenId Connect provider does not support setting `nonce` in ID token or if you work with OAuth2 provider such as `GitHub` which does not issue ID tokens.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_NONCE_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-add-openid-scope]]`link:#quarkus-oidc_quarkus-oidc-authentication-add-openid-scope[quarkus.oidc.authentication.add-openid-scope]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Add the `openid` scope automatically to the list of scopes. This is required for OpenId Connect providers, but does not work for OAuth2 providers such as Twitter OAuth2, which do not accept this scope and throw errors.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ADD_OPENID_SCOPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-forward-params]]`link:#quarkus-oidc_quarkus-oidc-authentication-forward-params[quarkus.oidc.authentication.forward-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Request URL query parameters which, if present, are added to the authentication redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FORWARD_PARAMS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-cookie-force-secure]]`link:#quarkus-oidc_quarkus-oidc-authentication-cookie-force-secure[quarkus.oidc.authentication.cookie-force-secure]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If enabled the state, session, and post logout cookies have their `secure` parameter set to `true` when HTTP is used. It might be necessary when running behind an SSL/TLS terminating reverse proxy. The cookies are always secure if HTTPS is used, even if this property is set to false.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_FORCE_SECURE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-cookie-suffix]]`link:#quarkus-oidc_quarkus-oidc-authentication-cookie-suffix[quarkus.oidc.authentication.cookie-suffix]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie name suffix. For example, a session cookie name for the default OIDC tenant is `q_session` but can be changed to `q_session_test` if this property is set to `test`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SUFFIX+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-cookie-path]]`link:#quarkus-oidc_quarkus-oidc-authentication-cookie-path[quarkus.oidc.authentication.cookie-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path parameter value which, if set, is used to set a path parameter for the session, state and post logout cookies. The `cookie-path-header` property, if set, is checked first.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy, no-wrap
msgid "`/`"
msgstr " `/` "

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-cookie-path-header]]`link:#quarkus-oidc_quarkus-oidc-authentication-cookie-path-header[quarkus.oidc.authentication.cookie-path-header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path header parameter value which, if set, identifies the incoming HTTP header whose value is used to set a path parameter for the session, state and post logout cookies. If the header is missing, the `cookie-path` property is checked.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH_HEADER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-cookie-domain]]`link:#quarkus-oidc_quarkus-oidc-authentication-cookie-domain[quarkus.oidc.authentication.cookie-domain]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie domain parameter value which, if set, is used for the session, state and post logout cookies.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_DOMAIN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-cookie-same-site]]`link:#quarkus-oidc_quarkus-oidc-authentication-cookie-same-site[quarkus.oidc.authentication.cookie-same-site]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"SameSite attribute for the session cookie.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SAME_SITE+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`strict`, `lax`, `none`"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`lax`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-allow-multiple-code-flows]]`link:#quarkus-oidc_quarkus-oidc-authentication-allow-multiple-code-flows[quarkus.oidc.authentication.allow-multiple-code-flows]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If a state cookie is present, a `state` query parameter must also be present and both the state cookie name suffix and state cookie value must match the value of the `state` query parameter when the redirect path matches the current path. However, if multiple authentications are attempted from the same browser, for example, from the different browser tabs, then the currently available state cookie might represent the authentication flow initiated from another tab and not related to the current request. Disable this property to permit only a single authorization code flow in the same browser.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-fail-on-missing-state-param]]`link:#quarkus-oidc_quarkus-oidc-authentication-fail-on-missing-state-param[quarkus.oidc.authentication.fail-on-missing-state-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Fail with the HTTP 401 error if the state cookie is present but no state query parameter is present.\n"
"\n"
"When either multiple authentications are disabled or the redirect URL matches the original request URL, the stale state cookie might remain in the browser cache from the earlier failed redirect to an OpenId Connect provider and be visible during the current request. For example, if Single-page application (SPA) uses XHR to handle redirects to the provider which does not support CORS for its authorization endpoint, the browser blocks it and the state cookie created by Quarkus remains in the browser cache. Quarkus reports an authentication failure when it detects such an old state cookie but find no matching state query parameter.\n"
"\n"
"Reporting HTTP 401 error is usually the right thing to do in such cases, it minimizes a risk of the browser redirect loop but also can identify problems in the way SPA or Quarkus application manage redirects. For example, enabling `java-script-auto-redirect` or having the provider redirect to URL configured with `redirect-path` might be needed to avoid such errors.\n"
"\n"
"However, setting this property to `false` might help if the above options are not suitable. It causes a new authentication redirect to OpenId Connect provider. Doing so might increase the risk of browser redirect loops.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-user-info-required]]`link:#quarkus-oidc_quarkus-oidc-authentication-user-info-required[quarkus.oidc.authentication.user-info-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true`, an OIDC UserInfo endpoint is called.\n"
"\n"
"This property is enabled automatically if `quarkus.oidc.roles.source` is set to `userinfo` or `quarkus.oidc.token.verify-access-token-with-user-info` is set to `true` or `quarkus.oidc.authentication.id-token-required` is set to `false`, the current OIDC tenant must support a UserInfo endpoint in these cases.\n"
"\n"
"It is also enabled automatically if `io.quarkus.oidc.UserInfo` injection point is detected but only if the current OIDC tenant supports a UserInfo endpoint.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_USER_INFO_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "`true when UserInfo bean is injected, false otherwise`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-session-age-extension]]`link:#quarkus-oidc_quarkus-oidc-authentication-session-age-extension[quarkus.oidc.authentication.session-age-extension]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Session age extension in minutes. The user session age property is set to the value of the ID token life-span by default and the user is redirected to the OIDC provider to re-authenticate once the session has expired. If this property is set to a nonzero value, then the expired ID token can be refreshed before the session has expired. This property is ignored if the `token.refresh-expired` property has not been enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_SESSION_AGE_EXTENSION+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`5M`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-state-cookie-age]]`link:#quarkus-oidc_quarkus-oidc-authentication-state-cookie-age[quarkus.oidc.authentication.state-cookie-age]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"State cookie age in minutes. State cookie is created every time a new authorization code flow redirect starts and removed when this flow is completed. State cookie name is unique by default, see `allow-multiple-code-flows`. Keep its age to the reasonable minimum value such as 5 minutes or less.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_STATE_COOKIE_AGE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-java-script-auto-redirect]]`link:#quarkus-oidc_quarkus-oidc-authentication-java-script-auto-redirect[quarkus.oidc.authentication.java-script-auto-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true`, a normal 302 redirect response is returned if the request was initiated by a JavaScript API such as XMLHttpRequest or Fetch and the current user needs to be (re)authenticated, which might not be desirable for Single-page applications (SPA) since it automatically following the redirect might not work given that OIDC authorization endpoints typically do not support CORS.\n"
"\n"
"If this property is set to `false`, a status code of `499` is returned to allow SPA to handle the redirect manually if a request header identifying current request as a JavaScript request is found. `X-Requested-With` request header with its value set to either `JavaScript` or `XMLHttpRequest` is expected by default if this property is enabled. You can register a custom `JavaScriptRequestChecker` to do a custom JavaScript request check instead.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-id-token-required]]`link:#quarkus-oidc_quarkus-oidc-authentication-id-token-required[quarkus.oidc.authentication.id-token-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that ID token is available when the authorization code flow completes. Disable this property only when you need to use the authorization code flow with OAuth2 providers which do not return ID token - an internal IdToken is generated in such cases.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ID_TOKEN_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-internal-id-token-lifespan]]`link:#quarkus-oidc_quarkus-oidc-authentication-internal-id-token-lifespan[quarkus.oidc.authentication.internal-id-token-lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Internal ID token lifespan. This property is only checked when an internal IdToken is generated when Oauth2 providers do not return IdToken.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-pkce-required]]`link:#quarkus-oidc_quarkus-oidc-authentication-pkce-required[quarkus.oidc.authentication.pkce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that a Proof Key for Code Exchange (PKCE) is used.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_PKCE_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-state-secret]]`link:#quarkus-oidc_quarkus-oidc-authentication-state-secret[quarkus.oidc.authentication.state-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret used to encrypt Proof Key for Code Exchange (PKCE) code verifier and/or nonce in the code flow state. This secret should be at least 32 characters long.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` is checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication is checked. A client secret is not be used as a state encryption secret if it is less than 32 characters long.\n"
"\n"
"The secret is auto-generated if it remains uninitialized after checking all of these properties.\n"
"\n"
"Error is reported if the secret length is less than 16 characters.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_STATE_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-state-manager-strategy]]`link:#quarkus-oidc_quarkus-oidc-token-state-manager-strategy[quarkus.oidc.token-state-manager.strategy]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Default TokenStateManager strategy.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_STRATEGY+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "tooltip:keep-all-tokens[Keep ID, access and refresh tokens.], tooltip:id-token[Keep ID token only], tooltip:id-refresh-tokens[Keep ID and refresh tokens only]"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`keep-all-tokens`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-state-manager-split-tokens]]`link:#quarkus-oidc_quarkus-oidc-token-state-manager-split-tokens[quarkus.oidc.token-state-manager.split-tokens]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Default TokenStateManager keeps all tokens (ID, access and refresh) returned in the authorization code grant response in a single session cookie by default. Enable this property to minimize a session cookie size\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_SPLIT_TOKENS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-state-manager-encryption-required]]`link:#quarkus-oidc_quarkus-oidc-token-state-manager-encryption-required[quarkus.oidc.token-state-manager.encryption-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Mandates that the Default TokenStateManager encrypt the session cookie that stores the tokens.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_ENCRYPTION_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-state-manager-encryption-secret]]`link:#quarkus-oidc_quarkus-oidc-token-state-manager-encryption-secret[quarkus.oidc.token-state-manager.encryption-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The secret used by the Default TokenStateManager to encrypt the session cookie storing the tokens when `encryption-required` property is enabled.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` is checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication is checked. The secret is auto-generated every time an application starts if it remains uninitialized after checking all of these properties. Generated secret can not decrypt the session cookie encrypted before the restart, therefore a user re-authentication will be required.\n"
"\n"
"The length of the secret used to encrypt the tokens should be at least 32 characters long. A warning is logged if the secret length is less than 16 characters.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_ENCRYPTION_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-state-manager-encryption-algorithm]]`link:#quarkus-oidc_quarkus-oidc-token-state-manager-encryption-algorithm[quarkus.oidc.token-state-manager.encryption-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Session cookie key encryption algorithm\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_ENCRYPTION_ALGORITHM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "tooltip:a256-gcmkw[Content encryption key will be generated and encrypted using the A256GCMKW algorithm and the configured encryption secret. The generated content encryption key will be used to encrypt the session cookie content.], tooltip:dir[The configured key encryption secret will be used as the content encryption key to encrypt the session cookie content. Using the direct encryption avoids a content encryption key generation step and will make the encrypted session cookie sequence slightly shorter.  Avoid using the direct encryption if the encryption secret is less than 32 characters long.]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "`a256-gcmkw`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-allow-token-introspection-cache]]`link:#quarkus-oidc_quarkus-oidc-allow-token-introspection-cache[quarkus.oidc.allow-token-introspection-cache]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow caching the token introspection data. Note enabling this property does not enable the cache itself but only permits to cache the token introspection for a given tenant. If the default token cache can be used, see `OidcConfig.TokenCache` to enable it.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ALLOW_TOKEN_INTROSPECTION_CACHE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-allow-user-info-cache]]`link:#quarkus-oidc_quarkus-oidc-allow-user-info-cache[quarkus.oidc.allow-user-info-cache]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow caching the user info data. Note enabling this property does not enable the cache itself but only permits to cache the user info data for a given tenant. If the default token cache can be used, see `OidcConfig.TokenCache` to enable it.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ALLOW_USER_INFO_CACHE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-cache-user-info-in-idtoken]]`link:#quarkus-oidc_quarkus-oidc-cache-user-info-in-idtoken[quarkus.oidc.cache-user-info-in-idtoken]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow inlining UserInfo in IdToken instead of caching it in the token cache. This property is only checked when an internal IdToken is generated when OAuth2 providers do not return IdToken. Inlining UserInfo in the generated IdToken allows to store it in the session cookie and avoids introducing a cached state.\n"
"\n"
"Inlining UserInfo in the generated IdToken is enabled if the session cookie is encrypted and the UserInfo cache is not enabled or caching UserInfo is disabled for the current tenant with the `allow-user-info-cache` property set to `false`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CACHE_USER_INFO_IN_IDTOKEN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-jwks-resolve-early]]`link:#quarkus-oidc_quarkus-oidc-jwks-resolve-early[quarkus.oidc.jwks.resolve-early]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If JWK verification keys should be fetched at the moment a connection to the OIDC provider is initialized.\n"
"\n"
"Disabling this property delays the key acquisition until the moment the current token has to be verified. Typically it can only be necessary if the token or other telated request properties provide an additional context which is required to resolve the keys correctly.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_RESOLVE_EARLY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-jwks-cache-size]]`link:#quarkus-oidc_quarkus-oidc-jwks-cache-size[quarkus.oidc.jwks.cache-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of JWK keys that can be cached. This property is ignored if the `resolve-early` property is set to true.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_CACHE_SIZE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-jwks-cache-time-to-live]]`link:#quarkus-oidc_quarkus-oidc-jwks-cache-time-to-live[quarkus.oidc.jwks.cache-time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Number of minutes a JWK key can be cached for. This property is ignored if the `resolve-early` property is set to true.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_CACHE_TIME_TO_LIVE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-jwks-clean-up-timer-interval]]`link:#quarkus-oidc_quarkus-oidc-jwks-clean-up-timer-interval[quarkus.oidc.jwks.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cache timer interval. If this property is set, a timer checks and removes the stale entries periodically. This property is ignored if the `resolve-early` property is set to true.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-provider]]`link:#quarkus-oidc_quarkus-oidc-provider[quarkus.oidc.provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Well known OpenId Connect provider identifier\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROVIDER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "`apple`, `discord`, `facebook`, `github`, `google`, `linkedin`, `mastodon`, `microsoft`, `spotify`, `strava`, `twitch`, `twitter`, `x`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-cache-max-size]]`link:#quarkus-oidc_quarkus-oidc-token-cache-max-size[quarkus.oidc.token-cache.max-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of cache entries. Set it to a positive value if the cache has to be enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_CACHE_MAX_SIZE+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`0`"
msgstr "`0`"

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-cache-time-to-live]]`link:#quarkus-oidc_quarkus-oidc-token-cache-time-to-live[quarkus.oidc.token-cache.time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum amount of time a given cache entry is valid for.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_CACHE_TIME_TO_LIVE+++[]\n"
"--"
msgstr ""

#. type: Table
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "`3M`"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-cache-clean-up-timer-interval]]`link:#quarkus-oidc_quarkus-oidc-token-cache-clean-up-timer-interval[quarkus.oidc.token-cache.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Clean up timer interval. If this property is set then a timer will check and remove the stale entries periodically.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_CACHE_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-resolve-tenants-with-issuer]]`link:#quarkus-oidc_quarkus-oidc-resolve-tenants-with-issuer[quarkus.oidc.resolve-tenants-with-issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If OIDC tenants should be resolved using the bearer access token's issuer (`iss`) claim value.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_RESOLVE_TENANTS_WITH_ISSUER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"icon:lock[title=Fixed at build time] [[quarkus-oidc_quarkus-oidc-devui-grant-options-option-name]]`link:#quarkus-oidc_quarkus-oidc-devui-grant-options-option-name[quarkus.oidc.devui.grant-options.\"option-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Grant options\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_DEVUI_GRANT_OPTIONS__OPTION_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "link:https://docs.oracle.com/javase/8/docs/api/java/util/Map.html[Map]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-credentials-jwt-claims-claim-name]]`link:#quarkus-oidc_quarkus-oidc-credentials-jwt-claims-claim-name[quarkus.oidc.credentials.jwt.claims.\"claim-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional claims.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_CLAIMS__CLAIM_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-token-required-claims-claim-name]]`link:#quarkus-oidc_quarkus-oidc-token-required-claims-claim-name[quarkus.oidc.token.required-claims.\"claim-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A map of required claims and their expected values. For example, `quarkus.oidc.token.required-claims.org_id = org_xyz` would require tokens to have the `org_id` claim to be present and set to `org_xyz`. Strings are the only supported types. Use `SecurityIdentityAugmentor` to verify claims of other types or complex claims.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REQUIRED_CLAIMS__CLAIM_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-logout-extra-params-query-parameter-name]]`link:#quarkus-oidc_quarkus-oidc-logout-extra-params-query-parameter-name[quarkus.oidc.logout.extra-params.\"query-parameter-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties which is added as the query parameters to the logout redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_EXTRA_PARAMS__QUERY_PARAMETER_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-authentication-extra-params-parameter-name]]`link:#quarkus-oidc_quarkus-oidc-authentication-extra-params-parameter-name[quarkus.oidc.authentication.extra-params.\"parameter-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties added as query parameters to the authentication redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_EXTRA_PARAMS__PARAMETER_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-code-grant-extra-params-parameter-name]]`link:#quarkus-oidc_quarkus-oidc-code-grant-extra-params-parameter-name[quarkus.oidc.code-grant.extra-params.\"parameter-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional parameters, in addition to the required `code` and `redirect-uri` parameters, which must be included to complete the authorization code grant request.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CODE_GRANT_EXTRA_PARAMS__PARAMETER_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-code-grant-headers-header-name]]`link:#quarkus-oidc_quarkus-oidc-code-grant-headers-header-name[quarkus.oidc.code-grant.headers.\"header-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP headers which must be sent to complete the authorization code grant request.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CODE_GRANT_HEADERS__HEADER_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid "[[quarkus-oidc_quarkus-oidc-named-tenants-additional-named-tenants]]link:#quarkus-oidc_quarkus-oidc-named-tenants-additional-named-tenants[Additional named tenants]"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-auth-server-url]]`link:#quarkus-oidc_quarkus-oidc-tenant-auth-server-url[quarkus.oidc.\"tenant\".auth-server-url]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. Do not set this property if the public key verification (`public-key`) or certificate chain verification only (`certificate-chain`) is required. The OIDC discovery endpoint is called by default by appending a `.well-known/openid-configuration` path to this URL. For Keycloak, use `https://host:port/realms/++{++realm++}++`, replacing `++{++realm++}++` with the Keycloak realm name.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTH_SERVER_URL+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-discovery-enabled]]`link:#quarkus-oidc_quarkus-oidc-tenant-discovery-enabled[quarkus.oidc.\"tenant\".discovery-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Discovery of the OIDC endpoints. If not enabled, you must configure the OIDC endpoint URLs individually.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__DISCOVERY_ENABLED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-path[quarkus.oidc.\"tenant\".token-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The OIDC token endpoint that issues access and refresh tokens; specified as a relative path or absolute URL. Set if `discovery-enabled` is `false` or a discovered token endpoint path must be customized.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-revoke-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-revoke-path[quarkus.oidc.\"tenant\".revoke-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path or absolute URL of the OIDC token revocation endpoint.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__REVOKE_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-client-id]]`link:#quarkus-oidc_quarkus-oidc-tenant-client-id[quarkus.oidc.\"tenant\".client-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client id of the application. Each application has a client id that is used to identify the application. Setting the client id is not required if `application-type` is `service` and no token introspection is required.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CLIENT_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-client-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-client-name[quarkus.oidc.\"tenant\".client-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client name of the application. It is meant to represent a human readable description of the application which you may provide when an application (client) is registered in an OpenId Connect provider's dashboard. For example, you can set this property to have more informative log messages which record an activity of the given client.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CLIENT_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-connection-delay]]`link:#quarkus-oidc_quarkus-oidc-tenant-connection-delay[quarkus.oidc.\"tenant\".connection-delay]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The duration to attempt the initial connection to an OIDC server. For example, setting the duration to `20S` allows 10 retries, each 2 seconds apart. This property is only effective when the initial OIDC connection is created. For dropped connections, use the `connection-retry-count` property instead.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CONNECTION_DELAY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-connection-retry-count]]`link:#quarkus-oidc_quarkus-oidc-tenant-connection-retry-count[quarkus.oidc.\"tenant\".connection-retry-count]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The number of times to retry re-establishing an existing OIDC connection if it is temporarily lost. Different from `connection-delay`, which applies only to initial connection attempts. For instance, if a request to the OIDC token endpoint fails due to a connection issue, it will be retried as per this setting.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CONNECTION_RETRY_COUNT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-connection-timeout]]`link:#quarkus-oidc_quarkus-oidc-tenant-connection-timeout[quarkus.oidc.\"tenant\".connection-timeout]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The number of seconds after which the current OIDC connection request times out.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CONNECTION_TIMEOUT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-use-blocking-dns-lookup]]`link:#quarkus-oidc_quarkus-oidc-tenant-use-blocking-dns-lookup[quarkus.oidc.\"tenant\".use-blocking-dns-lookup]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Whether DNS lookup should be performed on the worker thread. Use this option when you can see logged warnings about blocked Vert.x event loop by HTTP requests to OIDC server.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__USE_BLOCKING_DNS_LOOKUP+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-max-pool-size]]`link:#quarkus-oidc_quarkus-oidc-tenant-max-pool-size[quarkus.oidc.\"tenant\".max-pool-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The maximum size of the connection pool used by the WebClient.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__MAX_POOL_SIZE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-secret]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-secret[quarkus.oidc.\"tenant\".credentials.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client secret used by the `client_secret_basic` authentication method. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required. You can use `client-secret.value` instead, but both properties are mutually exclusive.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-value]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-value[quarkus.oidc.\"tenant\".credentials.client-secret.value]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client secret value. This value is ignored if `credentials.secret` is set. Must be set unless a secret is set in `client-secret` or `jwt` client authentication is required.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_VALUE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-provider-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-provider-name[quarkus.oidc.\"tenant\".credentials.client-secret.provider.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-provider-keyring-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-provider-keyring-name[quarkus.oidc.\"tenant\".credentials.client-secret.provider.keyring-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_PROVIDER_KEYRING_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-provider-key]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-provider-key[quarkus.oidc.\"tenant\".credentials.client-secret.provider.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider client secret key\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-method]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-client-secret-method[quarkus.oidc.\"tenant\".credentials.client-secret.method]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The authentication method. If the `clientSecret.value` secret is set, this method is `basic` by default.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_METHOD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-source]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-source[quarkus.oidc.\"tenant\".credentials.jwt.source]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"JWT token source: OIDC provider client or an existing JWT bearer token.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SOURCE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-secret]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-secret[quarkus.oidc.\"tenant\".credentials.jwt.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a secret key.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-secret-provider-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-secret-provider-name[quarkus.oidc.\"tenant\".credentials.jwt.secret-provider.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider bean name, which should only be set if more than one CredentialsProvider is registered\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET_PROVIDER_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-secret-provider-keyring-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-secret-provider-keyring-name[quarkus.oidc.\"tenant\".credentials.jwt.secret-provider.keyring-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider keyring name. The keyring name is only required when the CredentialsProvider being used requires the keyring name to look up the secret, which is often the case when a CredentialsProvider is shared by multiple extensions to retrieve credentials from a more dynamic source like a vault instance or secret manager\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET_PROVIDER_KEYRING_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-secret-provider-key]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-secret-provider-key[quarkus.oidc.\"tenant\".credentials.jwt.secret-provider.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider client secret key\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET_PROVIDER_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key[quarkus.oidc.\"tenant\".credentials.jwt.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"String representation of a private key. If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-file]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-file[quarkus.oidc.\"tenant\".credentials.jwt.key-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to override the default key algorithm, `RS256`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-store-file]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-store-file[quarkus.oidc.\"tenant\".credentials.jwt.key-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a private key from a keystore.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_STORE_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-store-password]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-store-password[quarkus.oidc.\"tenant\".credentials.jwt.key-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the keystore file.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_STORE_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-id]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-id[quarkus.oidc.\"tenant\".credentials.jwt.key-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The private key id or alias.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-password]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-key-password[quarkus.oidc.\"tenant\".credentials.jwt.key-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The private key password.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-audience]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-audience[quarkus.oidc.\"tenant\".credentials.jwt.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The JWT audience (`aud`) claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_AUDIENCE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-token-key-id]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-token-key-id[quarkus.oidc.\"tenant\".credentials.jwt.token-key-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The key identifier of the signing key added as a JWT `kid` header.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_TOKEN_KEY_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-issuer]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-issuer[quarkus.oidc.\"tenant\".credentials.jwt.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The issuer of the signing key added as a JWT `iss` claim. The default value is the client id.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_ISSUER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-subject]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-subject[quarkus.oidc.\"tenant\".credentials.jwt.subject]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Subject of the signing key added as a JWT `sub` claim The default value is the client id.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SUBJECT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-claims-claim-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-claims-claim-name[quarkus.oidc.\"tenant\".credentials.jwt.claims.\"claim-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional claims.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_CLAIMS__CLAIM_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-signature-algorithm]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-signature-algorithm[quarkus.oidc.\"tenant\".credentials.jwt.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The signature algorithm used for the `key-file` property. Supported values: `RS256` (default), `RS384`, `RS512`, `PS256`, `PS384`, `PS512`, `ES256`, `ES384`, `ES512`, `HS256`, `HS384`, `HS512`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SIGNATURE_ALGORITHM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-lifespan]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-lifespan[quarkus.oidc.\"tenant\".credentials.jwt.lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The JWT lifespan in seconds. This value is added to the time at which the JWT was issued to calculate the expiration time.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_LIFESPAN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-assertion]]`link:#quarkus-oidc_quarkus-oidc-tenant-credentials-jwt-assertion[quarkus.oidc.\"tenant\".credentials.jwt.assertion]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If true then the client authentication token is a JWT bearer grant assertion. Instead of producing 'client_assertion' and 'client_assertion_type' form properties, only 'assertion' is produced. This option is only supported by the OIDC client extension.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_ASSERTION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-proxy-host]]`link:#quarkus-oidc_quarkus-oidc-tenant-proxy-host[quarkus.oidc.\"tenant\".proxy.host]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The host name or IP address of the Proxy. +\n"
"Note: If the OIDC adapter requires a Proxy to talk with the OIDC server (Provider), set this value to enable the usage of a Proxy.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROXY_HOST+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-proxy-port]]`link:#quarkus-oidc_quarkus-oidc-tenant-proxy-port[quarkus.oidc.\"tenant\".proxy.port]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The port number of the Proxy. The default value is `80`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROXY_PORT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-proxy-username]]`link:#quarkus-oidc_quarkus-oidc-tenant-proxy-username[quarkus.oidc.\"tenant\".proxy.username]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The username, if the Proxy needs authentication.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROXY_USERNAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-proxy-password]]`link:#quarkus-oidc_quarkus-oidc-tenant-proxy-password[quarkus.oidc.\"tenant\".proxy.password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password, if the Proxy needs authentication.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROXY_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-verification]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-verification[quarkus.oidc.\"tenant\".tls.verification]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Certificate validation and hostname verification, which can be one of the following `Verification` values. Default is `required`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_VERIFICATION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-key-store-file]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-key-store-file[quarkus.oidc.\"tenant\".tls.key-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional keystore that holds the certificate information instead of specifying separate files.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-key-store-file-type]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-key-store-file-type[quarkus.oidc.\"tenant\".tls.key-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The type of the keystore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_FILE_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-key-store-provider]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-key-store-provider[quarkus.oidc.\"tenant\".tls.key-store-provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The provider of the keystore file. If not given, the provider is automatically detected based on the keystore file type.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_PROVIDER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-key-store-password]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-key-store-password[quarkus.oidc.\"tenant\".tls.key-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password of the keystore file. If not given, the default value, `password`, is used.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-key-store-key-alias]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-key-store-key-alias[quarkus.oidc.\"tenant\".tls.key-store-key-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The alias of a specific key in the keystore. When SNI is disabled, if the keystore contains multiple keys and no alias is specified, the behavior is undefined.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_KEY_ALIAS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-key-store-key-password]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-key-store-key-password[quarkus.oidc.\"tenant\".tls.key-store-key-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password of the key, if it is different from the `key-store-password`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_KEY_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-file]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-file[quarkus.oidc.\"tenant\".tls.trust-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The truststore that holds the certificate information of the certificates to trust.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-password]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-password[quarkus.oidc.\"tenant\".tls.trust-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password of the truststore file.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-cert-alias]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-cert-alias[quarkus.oidc.\"tenant\".tls.trust-store-cert-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The alias of the truststore certificate.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_CERT_ALIAS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-file-type]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-file-type[quarkus.oidc.\"tenant\".tls.trust-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The type of the truststore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_FILE_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-provider]]`link:#quarkus-oidc_quarkus-oidc-tenant-tls-trust-store-provider[quarkus.oidc.\"tenant\".tls.trust-store-provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The provider of the truststore file. If not given, the provider is automatically detected based on the truststore file type.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_PROVIDER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tenant-id]]`link:#quarkus-oidc_quarkus-oidc-tenant-tenant-id[quarkus.oidc.\"tenant\".tenant-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A unique tenant identifier. It can be set by `TenantConfigResolver` providers, which resolve the tenant configuration dynamically.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TENANT_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tenant-enabled]]`link:#quarkus-oidc_quarkus-oidc-tenant-tenant-enabled[quarkus.oidc.\"tenant\".tenant-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this tenant configuration is enabled. The default tenant is disabled if it is not configured but a `TenantConfigResolver` that resolves tenant configurations is registered, or named tenants are configured. In this case, you do not need to disable the default tenant.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TENANT_ENABLED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-application-type]]`link:#quarkus-oidc_quarkus-oidc-tenant-application-type[quarkus.oidc.\"tenant\".application-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The application type, which can be one of the following `ApplicationType` values.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__APPLICATION_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authorization-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-authorization-path[quarkus.oidc.\"tenant\".authorization-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path or absolute URL of the OpenID Connect (OIDC) authorization endpoint, which authenticates users. You must set this property for `web-app` applications if OIDC discovery is disabled. This property is ignored if OIDC discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHORIZATION_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-user-info-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-user-info-path[quarkus.oidc.\"tenant\".user-info-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path or absolute URL of the OIDC UserInfo endpoint. You must set this property for `web-app` applications if OIDC discovery is disabled and the `authentication.user-info-required` property is enabled. This property is ignored if OIDC discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__USER_INFO_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-introspection-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-introspection-path[quarkus.oidc.\"tenant\".introspection-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC RFC7662 introspection endpoint which can introspect both opaque and JSON Web Token (JWT) tokens. This property must be set if OIDC discovery is disabled and 1) the opaque bearer access tokens must be verified or 2) JWT tokens must be verified while the cached JWK verification set with no matching JWK is being refreshed. This property is ignored if the discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__INTROSPECTION_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-jwks-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-jwks-path[quarkus.oidc.\"tenant\".jwks-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC JSON Web Key Set (JWKS) endpoint which returns a JSON Web Key Verification Set. This property should be set if OIDC discovery is disabled and the local JWT verification is required. This property is ignored if the discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-end-session-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-end-session-path[quarkus.oidc.\"tenant\".end-session-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC end_session_endpoint. This property must be set if OIDC discovery is disabled and RP Initiated Logout support for the `web-app` applications is required. This property is ignored if the discovery is enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__END_SESSION_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-tenant-paths]]`link:#quarkus-oidc_quarkus-oidc-tenant-tenant-paths[quarkus.oidc.\"tenant\".tenant-paths]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The paths which must be secured by this tenant. Tenant with the most specific path wins.\n"
"Please see the xref:security-openid-connect-multitenancy.adoc#configure-tenant-paths[Configure tenant paths]\n"
"section of the OIDC multitenancy guide for explanation of allowed path patterns.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TENANT_PATHS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-public-key]]`link:#quarkus-oidc_quarkus-oidc-tenant-public-key[quarkus.oidc.\"tenant\".public-key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The public key for the local JWT token verification. OIDC server connection is not created when this property is set.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PUBLIC_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-introspection-credentials-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-introspection-credentials-name[quarkus.oidc.\"tenant\".introspection-credentials.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-introspection-credentials-secret]]`link:#quarkus-oidc_quarkus-oidc-tenant-introspection-credentials-secret[quarkus.oidc.\"tenant\".introspection-credentials.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-introspection-credentials-include-client-id]]`link:#quarkus-oidc_quarkus-oidc-tenant-introspection-credentials-include-client-id[quarkus.oidc.\"tenant\".introspection-credentials.include-client-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Include OpenId Connect Client ID configured with `quarkus.oidc.client-id`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_INCLUDE_CLIENT_ID+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-roles-role-claim-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-roles-role-claim-path[quarkus.oidc.\"tenant\".roles.role-claim-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A list of paths to claims containing an array of groups. Each path starts from the top level JWT JSON object and can contain multiple segments. Each segment represents a JSON object name only; for example: \"realm/groups\". Use double quotes with the namespace-qualified claim names. This property can be used if a token has no `groups` claim but has the groups set in one or more different claims.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ROLES_ROLE_CLAIM_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-roles-role-claim-separator]]`link:#quarkus-oidc_quarkus-oidc-tenant-roles-role-claim-separator[quarkus.oidc.\"tenant\".roles.role-claim-separator]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The separator for splitting strings that contain multiple group values. It is only used if the \"role-claim-path\" property points to one or more custom claims whose values are strings. A single space is used by default because the standard `scope` claim can contain a space-separated sequence.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ROLES_ROLE_CLAIM_SEPARATOR+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-roles-source]]`link:#quarkus-oidc_quarkus-oidc-tenant-roles-source[quarkus.oidc.\"tenant\".roles.source]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Source of the principal roles.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ROLES_SOURCE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-issuer]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-issuer[quarkus.oidc.\"tenant\".token.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The expected issuer `iss` claim value. This property overrides the `issuer` property, which might be set in OpenId Connect provider's well-known configuration. If the `iss` claim value varies depending on the host, IP address, or tenant id of the provider, you can skip the issuer verification by setting this property to `any`, but it should be done only when other options (such as configuring the provider to use the fixed `iss` claim value) are not possible.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ISSUER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-audience]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-audience[quarkus.oidc.\"tenant\".token.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The expected audience `aud` claim value, which can be a string or an array of strings. Note the audience claim is verified for ID tokens by default. ID token audience must be equal to the value of `quarkus.oidc.client-id` property. Use this property to override the expected value if your OpenID Connect provider sets a different audience claim value in ID tokens. Set it to `any` if your provider does not set ID token audience` claim. Audience verification for access tokens is only done if this property is configured.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AUDIENCE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-subject-required]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-subject-required[quarkus.oidc.\"tenant\".token.subject-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that the token includes a `sub` (subject) claim which is a unique and never reassigned identifier for the current user. Note that if you enable this property and if UserInfo is also required, both the token and UserInfo `sub` claims must be present and match each other.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_SUBJECT_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-required-claims-claim-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-required-claims-claim-name[quarkus.oidc.\"tenant\".token.required-claims.\"claim-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A map of required claims and their expected values. For example, `quarkus.oidc.token.required-claims.org_id = org_xyz` would require tokens to have the `org_id` claim to be present and set to `org_xyz`. Strings are the only supported types. Use `SecurityIdentityAugmentor` to verify claims of other types or complex claims.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRED_CLAIMS__CLAIM_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-token-type]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-token-type[quarkus.oidc.\"tenant\".token.token-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected token type\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_TOKEN_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-lifespan-grace]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-lifespan-grace[quarkus.oidc.\"tenant\".token.lifespan-grace]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Life span grace period in seconds. When checking token expiry, current time is allowed to be later than token expiration time by at most the configured number of seconds. When checking token issuance, current time is allowed to be sooner than token issue time by at most the configured number of seconds.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_LIFESPAN_GRACE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-age]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-age[quarkus.oidc.\"tenant\".token.age]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token age. It allows for the number of seconds to be specified that must not elapse since the `iat` (issued at) time. A small leeway to account for clock skew which can be configured with `quarkus.oidc.token.lifespan-grace` to verify the token expiry time can also be used to verify the token age property. Note that setting this property does not relax the requirement that Bearer and Code Flow JWT tokens must have a valid (`exp`) expiry claim value. The only exception where setting this property relaxes the requirement is when a logout token is sent with a back-channel logout request since the current OpenId Connect Back-Channel specification does not explicitly require the logout tokens to contain an `exp` claim. However, even if the current logout token is allowed to have no `exp` claim, the `exp` claim is still verified if the logout token contains it.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AGE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-issued-at-required]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-issued-at-required[quarkus.oidc.\"tenant\".token.issued-at-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that the token includes a `iat` (issued at) claim Set this property to `false` if your JWT token does not contain an `iat` (issued at) claim. Note that ID token is always required to have an `iat` claim and therefore this property has no impact on the ID token verification process.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ISSUED_AT_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-principal-claim]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-principal-claim[quarkus.oidc.\"tenant\".token.principal-claim]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the claim which contains a principal name. By default, the `upn`, `preferred_username` and `sub` claims are checked.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_PRINCIPAL_CLAIM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-refresh-expired]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-refresh-expired[quarkus.oidc.\"tenant\".token.refresh-expired]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh expired authorization code flow ID or access tokens. If this property is enabled, a refresh token request is performed if the authorization code ID or access token has expired and, if successful, the local session is updated with the new set of tokens. Otherwise, the local session is invalidated and the user redirected to the OpenID Provider to re-authenticate. In this case, the user might not be challenged again if the OIDC provider session is still active. For this option be effective the `authentication.session-age-extension` property should also be set to a nonzero value since the refresh token is currently kept in the user session. This option is valid only when the application is of type `ApplicationType++#++WEB_APP`++}++. This property is enabled if `quarkus.oidc.token.refresh-token-time-skew` is configured, you do not need to enable this property manually in this case.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_EXPIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-refresh-token-time-skew]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-refresh-token-time-skew[quarkus.oidc.\"tenant\".token.refresh-token-time-skew]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The refresh token time skew, in seconds. If this property is enabled, the configured number of seconds is added to the current time when checking if the authorization code ID or access token should be refreshed. If the sum is greater than the authorization code ID or access token's expiration time, a refresh is going to happen.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_TOKEN_TIME_SKEW+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-forced-jwk-refresh-interval]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-forced-jwk-refresh-interval[quarkus.oidc.\"tenant\".token.forced-jwk-refresh-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The forced JWK set refresh interval in minutes.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_FORCED_JWK_REFRESH_INTERVAL+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-header]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-header[quarkus.oidc.\"tenant\".token.header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP header that contains a bearer token. This option is valid only when the application is of type `ApplicationType++#++SERVICE`++}++.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_HEADER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-authorization-scheme]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-authorization-scheme[quarkus.oidc.\"tenant\".token.authorization-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"HTTP Authorization header scheme.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AUTHORIZATION_SCHEME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-signature-algorithm]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-signature-algorithm[quarkus.oidc.\"tenant\".token.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Required signature algorithm. OIDC providers support many signature algorithms but if necessary you can restrict Quarkus application to accept tokens signed only using an algorithm configured with this property.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_SIGNATURE_ALGORITHM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-decryption-key-location]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-decryption-key-location[quarkus.oidc.\"tenant\".token.decryption-key-location]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Decryption key location. JWT tokens can be inner-signed and encrypted by OpenId Connect providers. However, it is not always possible to remotely introspect such tokens because the providers might not control the private decryption keys. In such cases set this property to point to the file containing the decryption private key in PEM or JSON Web Key (JWK) format. If this property is not set and the `private_key_jwt` client authentication method is used, the private key used to sign the client authentication JWT tokens are also used to decrypt the encrypted ID tokens.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_DECRYPTION_KEY_LOCATION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-allow-jwt-introspection]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-allow-jwt-introspection[quarkus.oidc.\"tenant\".token.allow-jwt-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of JWT tokens when no matching JWK key is available. This property is set to `true` by default for backward-compatibility reasons. It is planned that this default value will be changed to `false` in an upcoming release. Also note this property is ignored if JWK endpoint URI is not available and introspecting the tokens is the only verification option.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_JWT_INTROSPECTION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-require-jwt-introspection-only]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-require-jwt-introspection-only[quarkus.oidc.\"tenant\".token.require-jwt-introspection-only]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that JWT tokens are only introspected remotely.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-allow-opaque-token-introspection]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-allow-opaque-token-introspection[quarkus.oidc.\"tenant\".token.allow-opaque-token-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of the opaque tokens. Set this property to `false` if only JWT tokens are expected.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-customizer-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-customizer-name[quarkus.oidc.\"tenant\".token.customizer-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token customizer name. Allows to select a tenant specific token customizer as a named bean. Prefer using `TenantFeature` qualifier when registering custom `TokenCustomizer`. Use this property only to refer to `TokenCustomizer` implementations provided by this extension.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_CUSTOMIZER_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-verify-access-token-with-user-info]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-verify-access-token-with-user-info[quarkus.oidc.\"tenant\".token.verify-access-token-with-user-info]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Indirectly verify that the opaque (binary) access token is valid by using it to request UserInfo. Opaque access token is considered valid if the provider accepted this token and returned a valid UserInfo. You should only enable this option if the opaque access tokens must be accepted but OpenId Connect provider does not have a token introspection endpoint. This property has no effect when JWT tokens must be verified.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-path[quarkus.oidc.\"tenant\".logout.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the logout endpoint at the application. If provided, the application is able to initiate the logout through this endpoint in conformance with the OpenID Connect RP-Initiated Logout specification.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-post-logout-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-post-logout-path[quarkus.oidc.\"tenant\".logout.post-logout-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path of the application endpoint where the user should be redirected to after logging out from the OpenID Connect Provider. This endpoint URI must be properly registered at the OpenID Connect Provider as a valid redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_POST_LOGOUT_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-post-logout-uri-param]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-post-logout-uri-param[quarkus.oidc.\"tenant\".logout.post-logout-uri-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the post logout URI parameter which is added as a query parameter to the logout redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_POST_LOGOUT_URI_PARAM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-extra-params-query-parameter-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-extra-params-query-parameter-name[quarkus.oidc.\"tenant\".logout.extra-params.\"query-parameter-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties which is added as the query parameters to the logout redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_EXTRA_PARAMS__QUERY_PARAMETER_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-path[quarkus.oidc.\"tenant\".logout.backchannel.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the Back-Channel Logout endpoint at the application.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-token-cache-size]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-token-cache-size[quarkus.oidc.\"tenant\".logout.backchannel.token-cache-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of logout tokens that can be cached before they are matched against ID tokens stored in session cookies.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_TOKEN_CACHE_SIZE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-token-cache-time-to-live]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-token-cache-time-to-live[quarkus.oidc.\"tenant\".logout.backchannel.token-cache-time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Number of minutes a logout token can be cached for.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_TOKEN_CACHE_TIME_TO_LIVE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-clean-up-timer-interval]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-clean-up-timer-interval[quarkus.oidc.\"tenant\".logout.backchannel.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token cache timer interval. If this property is set, a timer checks and removes the stale entries periodically.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-logout-token-key]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-backchannel-logout-token-key[quarkus.oidc.\"tenant\".logout.backchannel.logout-token-key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Logout token claim whose value is used as a key for caching the tokens. Only `sub` (subject) and `sid` (session id) claims can be used as keys. Set it to `sid` only if ID tokens issued by the OIDC provider have no `sub` but have `sid` claim.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_LOGOUT_TOKEN_KEY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-logout-frontchannel-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-logout-frontchannel-path[quarkus.oidc.\"tenant\".logout.frontchannel.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the Front-Channel Logout endpoint at the application.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_FRONTCHANNEL_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-certificate-chain-leaf-certificate-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-certificate-chain-leaf-certificate-name[quarkus.oidc.\"tenant\".certificate-chain.leaf-certificate-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Common name of the leaf certificate. It must be set if the `trust-store-file` does not have this certificate imported.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_LEAF_CERTIFICATE_NAME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-certificate-chain-trust-store-file]]`link:#quarkus-oidc_quarkus-oidc-tenant-certificate-chain-trust-store-file[quarkus.oidc.\"tenant\".certificate-chain.trust-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Truststore file which keeps thumbprints of the trusted certificates.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_FILE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-certificate-chain-trust-store-password]]`link:#quarkus-oidc_quarkus-oidc-tenant-certificate-chain-trust-store-password[quarkus.oidc.\"tenant\".certificate-chain.trust-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the truststore file if it is configured with `trust-store-file`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_PASSWORD+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-certificate-chain-trust-store-cert-alias]]`link:#quarkus-oidc_quarkus-oidc-tenant-certificate-chain-trust-store-cert-alias[quarkus.oidc.\"tenant\".certificate-chain.trust-store-cert-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the alias of the truststore certificate.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_CERT_ALIAS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-certificate-chain-trust-store-file-type]]`link:#quarkus-oidc_quarkus-oidc-tenant-certificate-chain-trust-store-file-type[quarkus.oidc.\"tenant\".certificate-chain.trust-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the truststore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_FILE_TYPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-response-mode]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-response-mode[quarkus.oidc.\"tenant\".authentication.response-mode]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Authorization code flow response mode.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESPONSE_MODE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-redirect-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-redirect-path[quarkus.oidc.\"tenant\".authentication.redirect-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path for calculating a `redirect_uri` query parameter. It has to start from a forward slash and is appended to the request URI's host and port. For example, if the current request URI is `https://localhost:8080/service`, a `redirect_uri` parameter is set to `https://localhost:8080/` if this property is set to `/` and be the same as the request URI if this property has not been configured. Note the original request URI is restored after the user has authenticated if `restorePathAfterRedirect` is set to `true`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REDIRECT_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-restore-path-after-redirect]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-restore-path-after-redirect[quarkus.oidc.\"tenant\".authentication.restore-path-after-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true`, the original request URI which was used before the authentication is restored after the user has been redirected back to the application. Note if `redirectPath` property is not set, the original request URI is restored even if this property is disabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-remove-redirect-parameters]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-remove-redirect-parameters[quarkus.oidc.\"tenant\".authentication.remove-redirect-parameters]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Remove the query parameters such as `code` and `state` set by the OIDC server on the redirect URI after the user has authenticated by redirecting a user to the same URI but without the query parameters.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-error-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-error-path[quarkus.oidc.\"tenant\".authentication.error-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path to the public endpoint which processes the error response from the OIDC authorization endpoint. If the user authentication has failed, the OIDC provider returns an `error` and an optional `error_description` parameters, instead of the expected authorization `code`. If this property is set, the user is redirected to the endpoint which can return a user-friendly error description page. It has to start from a forward slash and is appended to the request URI's host and port. For example, if it is set as `/error` and the current request URI is `https://localhost:8080/callback?error=invalid_scope`, a redirect is made to `https://localhost:8080/error?error=invalid_scope`. If this property is not set, HTTP 401 status is returned in case of the user authentication failure.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ERROR_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-session-expired-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-session-expired-path[quarkus.oidc.\"tenant\".authentication.session-expired-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path to the public endpoint which an authenticated user is redirected to when the session has expired.\n"
"\n"
"When the OIDC session has expired and the session can not be refreshed, a user is redirected to the OIDC provider to re-authenticate. The user experience may not be ideal in this case as it may not be obvious to the authenticated user why an authentication challenge is returned.\n"
"\n"
"Set this property if you would like the user whose session has expired be redirected to a public application specific page instead, which can inform that the session has expired and advise the user to re-authenticated by following a link to the secured initial entry page.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SESSION_EXPIRED_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-verify-access-token]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-verify-access-token[quarkus.oidc.\"tenant\".authentication.verify-access-token]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Both ID and access tokens are fetched from the OIDC provider as part of the authorization code flow.\n"
"\n"
"ID token is always verified on every user request as the primary token which is used to represent the principal and extract the roles.\n"
"\n"
"Authorization code flow access token is meant to be propagated to downstream services and is not verified by default unless `quarkus.oidc.roles.source` property is set to `accesstoken` which means the authorization decision is based on the roles extracted from the access token.\n"
"\n"
"Authorization code flow access token verification is also enabled if this token is injected as JsonWebToken. Set this property to `false` if it is not required.\n"
"\n"
"Bearer access token is always verified.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_VERIFY_ACCESS_TOKEN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-force-redirect-https-scheme]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-force-redirect-https-scheme[quarkus.oidc.\"tenant\".authentication.force-redirect-https-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Force `https` as the `redirect_uri` parameter scheme when running behind an SSL/TLS terminating reverse proxy. This property, if enabled, also affects the logout `post_logout_redirect_uri` and the local redirect requests.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-scopes]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-scopes[quarkus.oidc.\"tenant\".authentication.scopes]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of scopes\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SCOPES+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-scope-separator]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-scope-separator[quarkus.oidc.\"tenant\".authentication.scope-separator]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The separator which is used when more than one scope is configured. A single space is used by default.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SCOPE_SEPARATOR+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-nonce-required]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-nonce-required[quarkus.oidc.\"tenant\".authentication.nonce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that ID token includes a `nonce` claim which must match `nonce` authentication request query parameter. Enabling this property can help mitigate replay attacks. Do not enable this property if your OpenId Connect provider does not support setting `nonce` in ID token or if you work with OAuth2 provider such as `GitHub` which does not issue ID tokens.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_NONCE_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-add-openid-scope]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-add-openid-scope[quarkus.oidc.\"tenant\".authentication.add-openid-scope]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Add the `openid` scope automatically to the list of scopes. This is required for OpenId Connect providers, but does not work for OAuth2 providers such as Twitter OAuth2, which do not accept this scope and throw errors.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ADD_OPENID_SCOPE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-extra-params-parameter-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-extra-params-parameter-name[quarkus.oidc.\"tenant\".authentication.extra-params.\"parameter-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties added as query parameters to the authentication redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_EXTRA_PARAMS__PARAMETER_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-forward-params]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-forward-params[quarkus.oidc.\"tenant\".authentication.forward-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Request URL query parameters which, if present, are added to the authentication redirect URI.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORWARD_PARAMS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-force-secure]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-force-secure[quarkus.oidc.\"tenant\".authentication.cookie-force-secure]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If enabled the state, session, and post logout cookies have their `secure` parameter set to `true` when HTTP is used. It might be necessary when running behind an SSL/TLS terminating reverse proxy. The cookies are always secure if HTTPS is used, even if this property is set to false.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_FORCE_SECURE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-suffix]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-suffix[quarkus.oidc.\"tenant\".authentication.cookie-suffix]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie name suffix. For example, a session cookie name for the default OIDC tenant is `q_session` but can be changed to `q_session_test` if this property is set to `test`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SUFFIX+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-path]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-path[quarkus.oidc.\"tenant\".authentication.cookie-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path parameter value which, if set, is used to set a path parameter for the session, state and post logout cookies. The `cookie-path-header` property, if set, is checked first.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-path-header]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-path-header[quarkus.oidc.\"tenant\".authentication.cookie-path-header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path header parameter value which, if set, identifies the incoming HTTP header whose value is used to set a path parameter for the session, state and post logout cookies. If the header is missing, the `cookie-path` property is checked.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH_HEADER+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-domain]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-domain[quarkus.oidc.\"tenant\".authentication.cookie-domain]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie domain parameter value which, if set, is used for the session, state and post logout cookies.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_DOMAIN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-same-site]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-cookie-same-site[quarkus.oidc.\"tenant\".authentication.cookie-same-site]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"SameSite attribute for the session cookie.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SAME_SITE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-allow-multiple-code-flows]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-allow-multiple-code-flows[quarkus.oidc.\"tenant\".authentication.allow-multiple-code-flows]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If a state cookie is present, a `state` query parameter must also be present and both the state cookie name suffix and state cookie value must match the value of the `state` query parameter when the redirect path matches the current path. However, if multiple authentications are attempted from the same browser, for example, from the different browser tabs, then the currently available state cookie might represent the authentication flow initiated from another tab and not related to the current request. Disable this property to permit only a single authorization code flow in the same browser.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-fail-on-missing-state-param]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-fail-on-missing-state-param[quarkus.oidc.\"tenant\".authentication.fail-on-missing-state-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Fail with the HTTP 401 error if the state cookie is present but no state query parameter is present.\n"
"\n"
"When either multiple authentications are disabled or the redirect URL matches the original request URL, the stale state cookie might remain in the browser cache from the earlier failed redirect to an OpenId Connect provider and be visible during the current request. For example, if Single-page application (SPA) uses XHR to handle redirects to the provider which does not support CORS for its authorization endpoint, the browser blocks it and the state cookie created by Quarkus remains in the browser cache. Quarkus reports an authentication failure when it detects such an old state cookie but find no matching state query parameter.\n"
"\n"
"Reporting HTTP 401 error is usually the right thing to do in such cases, it minimizes a risk of the browser redirect loop but also can identify problems in the way SPA or Quarkus application manage redirects. For example, enabling `java-script-auto-redirect` or having the provider redirect to URL configured with `redirect-path` might be needed to avoid such errors.\n"
"\n"
"However, setting this property to `false` might help if the above options are not suitable. It causes a new authentication redirect to OpenId Connect provider. Doing so might increase the risk of browser redirect loops.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-user-info-required]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-user-info-required[quarkus.oidc.\"tenant\".authentication.user-info-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true`, an OIDC UserInfo endpoint is called.\n"
"\n"
"This property is enabled automatically if `quarkus.oidc.roles.source` is set to `userinfo` or `quarkus.oidc.token.verify-access-token-with-user-info` is set to `true` or `quarkus.oidc.authentication.id-token-required` is set to `false`, the current OIDC tenant must support a UserInfo endpoint in these cases.\n"
"\n"
"It is also enabled automatically if `io.quarkus.oidc.UserInfo` injection point is detected but only if the current OIDC tenant supports a UserInfo endpoint.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_USER_INFO_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-session-age-extension]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-session-age-extension[quarkus.oidc.\"tenant\".authentication.session-age-extension]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Session age extension in minutes. The user session age property is set to the value of the ID token life-span by default and the user is redirected to the OIDC provider to re-authenticate once the session has expired. If this property is set to a nonzero value, then the expired ID token can be refreshed before the session has expired. This property is ignored if the `token.refresh-expired` property has not been enabled.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SESSION_AGE_EXTENSION+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-state-cookie-age]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-state-cookie-age[quarkus.oidc.\"tenant\".authentication.state-cookie-age]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"State cookie age in minutes. State cookie is created every time a new authorization code flow redirect starts and removed when this flow is completed. State cookie name is unique by default, see `allow-multiple-code-flows`. Keep its age to the reasonable minimum value such as 5 minutes or less.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_STATE_COOKIE_AGE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-java-script-auto-redirect]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-java-script-auto-redirect[quarkus.oidc.\"tenant\".authentication.java-script-auto-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true`, a normal 302 redirect response is returned if the request was initiated by a JavaScript API such as XMLHttpRequest or Fetch and the current user needs to be (re)authenticated, which might not be desirable for Single-page applications (SPA) since it automatically following the redirect might not work given that OIDC authorization endpoints typically do not support CORS.\n"
"\n"
"If this property is set to `false`, a status code of `499` is returned to allow SPA to handle the redirect manually if a request header identifying current request as a JavaScript request is found. `X-Requested-With` request header with its value set to either `JavaScript` or `XMLHttpRequest` is expected by default if this property is enabled. You can register a custom `JavaScriptRequestChecker` to do a custom JavaScript request check instead.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-id-token-required]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-id-token-required[quarkus.oidc.\"tenant\".authentication.id-token-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that ID token is available when the authorization code flow completes. Disable this property only when you need to use the authorization code flow with OAuth2 providers which do not return ID token - an internal IdToken is generated in such cases.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ID_TOKEN_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-internal-id-token-lifespan]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-internal-id-token-lifespan[quarkus.oidc.\"tenant\".authentication.internal-id-token-lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Internal ID token lifespan. This property is only checked when an internal IdToken is generated when Oauth2 providers do not return IdToken.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-pkce-required]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-pkce-required[quarkus.oidc.\"tenant\".authentication.pkce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that a Proof Key for Code Exchange (PKCE) is used.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_PKCE_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-authentication-state-secret]]`link:#quarkus-oidc_quarkus-oidc-tenant-authentication-state-secret[quarkus.oidc.\"tenant\".authentication.state-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret used to encrypt Proof Key for Code Exchange (PKCE) code verifier and/or nonce in the code flow state. This secret should be at least 32 characters long.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` is checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication is checked. A client secret is not be used as a state encryption secret if it is less than 32 characters long.\n"
"\n"
"The secret is auto-generated if it remains uninitialized after checking all of these properties.\n"
"\n"
"Error is reported if the secret length is less than 16 characters.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_STATE_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-code-grant-extra-params-parameter-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-code-grant-extra-params-parameter-name[quarkus.oidc.\"tenant\".code-grant.extra-params.\"parameter-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional parameters, in addition to the required `code` and `redirect-uri` parameters, which must be included to complete the authorization code grant request.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CODE_GRANT_EXTRA_PARAMS__PARAMETER_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-code-grant-headers-header-name]]`link:#quarkus-oidc_quarkus-oidc-tenant-code-grant-headers-header-name[quarkus.oidc.\"tenant\".code-grant.headers.\"header-name\"]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP headers which must be sent to complete the authorization code grant request.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CODE_GRANT_HEADERS__HEADER_NAME_+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-state-manager-strategy]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-state-manager-strategy[quarkus.oidc.\"tenant\".token-state-manager.strategy]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Default TokenStateManager strategy.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_STRATEGY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-state-manager-split-tokens]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-state-manager-split-tokens[quarkus.oidc.\"tenant\".token-state-manager.split-tokens]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Default TokenStateManager keeps all tokens (ID, access and refresh) returned in the authorization code grant response in a single session cookie by default. Enable this property to minimize a session cookie size\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_SPLIT_TOKENS+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-state-manager-encryption-required]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-state-manager-encryption-required[quarkus.oidc.\"tenant\".token-state-manager.encryption-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Mandates that the Default TokenStateManager encrypt the session cookie that stores the tokens.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_ENCRYPTION_REQUIRED+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-state-manager-encryption-secret]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-state-manager-encryption-secret[quarkus.oidc.\"tenant\".token-state-manager.encryption-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The secret used by the Default TokenStateManager to encrypt the session cookie storing the tokens when `encryption-required` property is enabled.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` is checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication is checked. The secret is auto-generated every time an application starts if it remains uninitialized after checking all of these properties. Generated secret can not decrypt the session cookie encrypted before the restart, therefore a user re-authentication will be required.\n"
"\n"
"The length of the secret used to encrypt the tokens should be at least 32 characters long. A warning is logged if the secret length is less than 16 characters.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_ENCRYPTION_SECRET+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-token-state-manager-encryption-algorithm]]`link:#quarkus-oidc_quarkus-oidc-tenant-token-state-manager-encryption-algorithm[quarkus.oidc.\"tenant\".token-state-manager.encryption-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Session cookie key encryption algorithm\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_ENCRYPTION_ALGORITHM+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-allow-token-introspection-cache]]`link:#quarkus-oidc_quarkus-oidc-tenant-allow-token-introspection-cache[quarkus.oidc.\"tenant\".allow-token-introspection-cache]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow caching the token introspection data. Note enabling this property does not enable the cache itself but only permits to cache the token introspection for a given tenant. If the default token cache can be used, see `OidcConfig.TokenCache` to enable it.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ALLOW_TOKEN_INTROSPECTION_CACHE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-allow-user-info-cache]]`link:#quarkus-oidc_quarkus-oidc-tenant-allow-user-info-cache[quarkus.oidc.\"tenant\".allow-user-info-cache]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow caching the user info data. Note enabling this property does not enable the cache itself but only permits to cache the user info data for a given tenant. If the default token cache can be used, see `OidcConfig.TokenCache` to enable it.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ALLOW_USER_INFO_CACHE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-cache-user-info-in-idtoken]]`link:#quarkus-oidc_quarkus-oidc-tenant-cache-user-info-in-idtoken[quarkus.oidc.\"tenant\".cache-user-info-in-idtoken]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow inlining UserInfo in IdToken instead of caching it in the token cache. This property is only checked when an internal IdToken is generated when OAuth2 providers do not return IdToken. Inlining UserInfo in the generated IdToken allows to store it in the session cookie and avoids introducing a cached state.\n"
"\n"
"Inlining UserInfo in the generated IdToken is enabled if the session cookie is encrypted and the UserInfo cache is not enabled or caching UserInfo is disabled for the current tenant with the `allow-user-info-cache` property set to `false`.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CACHE_USER_INFO_IN_IDTOKEN+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-jwks-resolve-early]]`link:#quarkus-oidc_quarkus-oidc-tenant-jwks-resolve-early[quarkus.oidc.\"tenant\".jwks.resolve-early]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If JWK verification keys should be fetched at the moment a connection to the OIDC provider is initialized.\n"
"\n"
"Disabling this property delays the key acquisition until the moment the current token has to be verified. Typically it can only be necessary if the token or other telated request properties provide an additional context which is required to resolve the keys correctly.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_RESOLVE_EARLY+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-jwks-cache-size]]`link:#quarkus-oidc_quarkus-oidc-tenant-jwks-cache-size[quarkus.oidc.\"tenant\".jwks.cache-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of JWK keys that can be cached. This property is ignored if the `resolve-early` property is set to true.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_CACHE_SIZE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-jwks-cache-time-to-live]]`link:#quarkus-oidc_quarkus-oidc-tenant-jwks-cache-time-to-live[quarkus.oidc.\"tenant\".jwks.cache-time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Number of minutes a JWK key can be cached for. This property is ignored if the `resolve-early` property is set to true.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_CACHE_TIME_TO_LIVE+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-jwks-clean-up-timer-interval]]`link:#quarkus-oidc_quarkus-oidc-tenant-jwks-clean-up-timer-interval[quarkus.oidc.\"tenant\".jwks.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cache timer interval. If this property is set, a timer checks and removes the stale entries periodically. This property is ignored if the `resolve-early` property is set to true.\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"--"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"[[quarkus-oidc_quarkus-oidc-tenant-provider]]`link:#quarkus-oidc_quarkus-oidc-tenant-provider[quarkus.oidc.\"tenant\".provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Well known OpenId Connect provider identifier\n"
"\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROVIDER+++[]\n"
"--"
msgstr ""

#. type: Block title
#: _generated-doc/main/config/quarkus-oidc.adoc
#, no-wrap
msgid "About the Duration format"
msgstr ""

#: _generated-doc/main/config/quarkus-oidc.adoc
msgid ""
"To write duration values, use the standard `java.time.Duration` format.\n"
"See the link:https://docs.oracle.com/en/java/javase/17/docs/api/java.base/java/time/Duration.html#parse(java.lang.CharSequence)[Duration#parse() Java API documentation] for more information."
msgstr ""

#. type: delimited block =
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy
msgid "You can also use a simplified format, starting with a number:"
msgstr "您也可以使用简化格式，以数字开头："

#. type: delimited block =
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy
msgid "If the value is only a number, it represents time in seconds."
msgstr "如果数值只是一个数字，则表示时间（秒）。"

#. type: delimited block =
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy
msgid "If the value is a number followed by `ms`, it represents time in milliseconds."
msgstr "如果数值是一个数字，后跟 `ms` ，则表示时间（毫秒）。"

#. type: delimited block =
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy
msgid "In other cases, the simplified format is translated to the `java.time.Duration` format for parsing:"
msgstr "在其他情况下，简化格式会被翻译成 `java.time.Duration` 格式进行解析："

#. type: delimited block =
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy
msgid "If the value is a number followed by `h`, `m`, or `s`, it is prefixed with `PT`."
msgstr "如果数值是一个数字，后面跟 `h` 、 `m` 或 `s` ，则前缀为 `PT` 。"

#. type: delimited block =
#: _generated-doc/main/config/quarkus-oidc.adoc
#, fuzzy
msgid "If the value is a number followed by `d`, it is prefixed with `P`."
msgstr "如果数值是一个数字，后面跟 `d` ，则前缀为 `P` 。"
