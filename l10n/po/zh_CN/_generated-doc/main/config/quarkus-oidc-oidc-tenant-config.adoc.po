# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-12-15 02:21+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:5
#, fuzzy
msgid "icon:lock[title=Fixed at build time] Configuration property fixed at build time - All other configuration properties are overridable at runtime"
msgstr "[锁定]在构建时固定配置属性 - 在运行时可覆盖所有其他配置属性"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:10
#, no-wrap
msgid "[[quarkus-oidc-oidc-tenant-config_configuration]]link:#quarkus-oidc-oidc-tenant-config_configuration[Configuration property]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:11
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2352
#, no-wrap
msgid "Type"
msgstr "类型"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:13
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2354
#, no-wrap
msgid "Default"
msgstr "默认"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:26
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.auth-server-url]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.auth-server-url[quarkus.oidc.auth-server-url]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. OIDC discovery endpoint will be called by default by appending a '.well-known/openid-configuration' path to this URL. Note if you work with Keycloak OIDC server, make sure the base URL is in the following format: `https://host:port/realms/++{++realm++}++` where `++{++realm++}++` has to be replaced by the name of the Keycloak realm.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTH_SERVER_URL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTH_SERVER_URL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:27
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:61
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:78
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:95
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:182
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:199
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:216
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:233
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:268
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:285
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:302
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:319
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:336
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:353
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:370
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:387
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:404
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:421
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:438
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:455
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:472
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:507
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:541
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:558
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:610
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:627
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:644
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:661
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:678
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:712
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:729
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:746
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:763
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:780
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:832
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:849
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:866
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:883
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:900
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:917
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:934
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:951
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1002
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1037
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1088
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1140
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1210
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1227
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1262
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1330
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1364
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1381
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1398
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1415
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1485
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1502
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1536
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1553
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1570
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1605
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1656
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1792
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1809
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1826
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1843
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2030
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2103
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2368
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2402
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2419
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2436
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2523
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2540
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2557
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2574
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2609
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2626
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2643
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2660
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2677
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2694
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2711
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2728
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2745
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2762
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2779
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2796
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2830
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2865
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2899
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2916
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2968
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2985
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3002
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3019
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3036
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3070
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3087
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3104
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3121
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3138
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3190
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3207
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3224
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3241
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3258
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3275
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3292
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3309
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3360
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3395
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3463
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3515
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3585
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3602
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3637
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3705
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3739
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3756
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3773
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3807
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3877
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3894
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3928
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3945
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3962
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3997
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4048
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4201
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4218
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4235
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4252
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4439
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4546
#, fuzzy, no-wrap
msgid "string"
msgstr "绳子"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:43
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.discovery-enabled]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.discovery-enabled[quarkus.oidc.discovery-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Enables OIDC discovery. If the discovery is disabled then the OIDC endpoint URLs must be configured individually.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_DISCOVERY_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_DISCOVERY_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:44
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:797
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:968
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1071
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1157
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1279
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1296
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1313
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1347
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1622
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1639
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1673
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1690
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1724
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1741
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1775
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1878
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1901
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1918
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1955
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1972
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2007
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2065
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2082
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2120
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2137
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2154
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2173
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2385
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3155
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3326
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3429
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3532
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3654
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3671
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3688
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3722
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4014
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4031
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4065
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4082
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4116
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4133
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4184
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4287
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4310
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4327
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4364
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4381
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4416
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4508
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4525
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4563
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4580
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4597
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4616
#, fuzzy, no-wrap
msgid "boolean"
msgstr "布尔型"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:47
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:800
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:971
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1282
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1316
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1642
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1744
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1881
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1958
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1975
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2085
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2123
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2140
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2176
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2388
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3158
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3329
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3657
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3691
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4034
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4136
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4290
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4367
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4384
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4528
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4566
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4583
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4619
#, no-wrap
msgid "`true`"
msgstr "`true` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:60
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-path[quarkus.oidc.token-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC token endpoint which issues access and refresh tokens.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:77
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.revoke-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.revoke-path[quarkus.oidc.revoke-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC token revocation endpoint.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_REVOKE_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_REVOKE_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:94
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.client-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.client-id[quarkus.oidc.client-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client-id of the application. Each application has a client-id that is used to identify the application\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CLIENT_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CLIENT_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:111
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.connection-delay]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.connection-delay[quarkus.oidc.connection-delay]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The maximum amount of time connecting to the currently unavailable OIDC server will be attempted for. The number of times the connection request will be repeated is calculated by dividing the value of this property by 2. For example, setting it to `20S` will allow for requesting the connection up to 10 times with a 2 seconds delay between the retries. Note this property is only effective when the initial OIDC connection is created, for example, when requesting a well-known OIDC configuration. Use the 'connection-retry-count' property to support trying to re-establish an already available connection which may have been dropped.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CONNECTION_DELAY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CONNECTION_DELAY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:113
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:148
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1123
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1175
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1193
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1450
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1468
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1936
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1990
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2208
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2226
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2454
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2489
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3498
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3550
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3568
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3842
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3860
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4345
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4399
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4651
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4669
#, no-wrap
msgid ""
"link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor-{summaryTableId}[icon:question-circle[], title=More information about the Duration format]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:129
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.connection-retry-count]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.connection-retry-count[quarkus.oidc.connection-retry-count]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The number of times an attempt to re-establish an already available connection will be repeated. Note this property is different from the `connection-delay` property, which is only effective during the initial OIDC connection creation. This property is used to try to recover an existing connection that may have been temporarily lost. For example, if a request to the OIDC token endpoint fails due to a connection exception, then the request will be retried the number of times configured by this property.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CONNECTION_RETRY_COUNT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CONNECTION_RETRY_COUNT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:130
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:165
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:489
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:524
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1105
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1432
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2190
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2471
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2506
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2847
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2882
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3480
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3824
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4633
#, fuzzy, no-wrap
msgid "int"
msgstr "int"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:133
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2474
#, no-wrap
msgid "`3`"
msgstr "`3` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:146
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.connection-timeout]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.connection-timeout[quarkus.oidc.connection-timeout]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The amount of time after which the current OIDC connection request will time out.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CONNECTION_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CONNECTION_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:151
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2492
#, no-wrap
msgid "`10S`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:164
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.max-pool-size]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.max-pool-size[quarkus.oidc.max-pool-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The maximum size of the connection pool used by the WebClient\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_MAX_POOL_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_MAX_POOL_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:181
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.secret[quarkus.oidc.credentials.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Client secret which is used for a `client_secret_basic` authentication method. Note that a 'client-secret.value' can be used instead but both properties are mutually exclusive.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:198
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.client-secret.value]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.client-secret.value[quarkus.oidc.credentials.client-secret.value]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client secret value - it will be ignored if 'credentials.secret' is set\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_VALUE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_VALUE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:215
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.client-secret.provider.name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.client-secret.provider.name[quarkus.oidc.credentials.client-secret.provider.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider name which should only be set if more than one CredentialsProvider is registered\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:232
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.client-secret.provider.key]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.client-secret.provider.key[quarkus.oidc.credentials.client-secret.provider.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider client secret key\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:249
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.client-secret.method]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.client-secret.method[quarkus.oidc.credentials.client-secret.method]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Authentication method.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_METHOD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_CLIENT_SECRET_METHOD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:251
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2592
#, no-wrap
msgid "tooltip:basic[client_secret_basic (default): client id and secret are submitted with the HTTP Authorization Basic scheme], tooltip:post[client_secret_post: client id and secret are submitted as the `client_id` and `client_secret` form parameters.], tooltip:post-jwt[client_secret_jwt: client id and generated JWT secret are submitted as the `client_id` and `client_secret` form parameters.]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:267
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.secret[quarkus.oidc.credentials.jwt.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a secret key\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:284
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.secret-provider.name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.secret-provider.name[quarkus.oidc.credentials.jwt.secret-provider.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider name which should only be set if more than one CredentialsProvider is registered\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET_PROVIDER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET_PROVIDER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:301
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.secret-provider.key]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.secret-provider.key[quarkus.oidc.credentials.jwt.secret-provider.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider client secret key\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET_PROVIDER_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_SECRET_PROVIDER_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:318
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-file[quarkus.oidc.credentials.jwt.key-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to specify the key algorithm.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:335
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-store-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-store-file[quarkus.oidc.credentials.jwt.key-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a private key from a keystore\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:352
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-store-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-store-password[quarkus.oidc.credentials.jwt.key-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the keystore file.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:369
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-id[quarkus.oidc.credentials.jwt.key-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The private key id/alias\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:386
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.key-password[quarkus.oidc.credentials.jwt.key-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The private key password\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_KEY_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:403
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.audience]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.audience[quarkus.oidc.credentials.jwt.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"JWT audience ('aud') claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_AUDIENCE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_AUDIENCE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:420
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.token-key-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.token-key-id[quarkus.oidc.credentials.jwt.token-key-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Key identifier of the signing key added as a JWT 'kid' header\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_TOKEN_KEY_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_TOKEN_KEY_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:437
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.issuer]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.issuer[quarkus.oidc.credentials.jwt.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Issuer of the signing key added as a JWT `iss` claim (default: client id)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_ISSUER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_ISSUER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:454
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.subject]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.subject[quarkus.oidc.credentials.jwt.subject]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Subject of the signing key added as a JWT 'sub' claim (default: client id)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SUBJECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_SUBJECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:471
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.signature-algorithm]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.signature-algorithm[quarkus.oidc.credentials.jwt.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Signature algorithm, also used for the `key-file` property. Supported values: RS256, RS384, RS512, PS256, PS384, PS512, ES256, ES384, ES512, HS256, HS384, HS512.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_SIGNATURE_ALGORITHM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_SIGNATURE_ALGORITHM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:488
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.lifespan]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.lifespan[quarkus.oidc.credentials.jwt.lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"JWT life-span in seconds. It will be added to the time it was issued at to calculate the expiration time.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_LIFESPAN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_LIFESPAN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:492
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1435
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2193
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2850
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3827
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4636
#, no-wrap
msgid "`10`"
msgstr "`10` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:506
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.proxy.host]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.proxy.host[quarkus.oidc.proxy.host]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The host (name or IP address) of the Proxy. +\n"
"Note: If OIDC adapter needs to use a Proxy to talk with OIDC server (Provider), then at least the \"host\" config item must be configured to enable the usage of a Proxy.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROXY_HOST+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_PROXY_HOST+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:523
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.proxy.port]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.proxy.port[quarkus.oidc.proxy.port]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The port number of the Proxy. Default value is 80.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROXY_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_PROXY_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:527
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2885
#, no-wrap
msgid "`80`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:540
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.proxy.username]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.proxy.username[quarkus.oidc.proxy.username]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The username, if Proxy needs authentication.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROXY_USERNAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_PROXY_USERNAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:557
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.proxy.password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.proxy.password[quarkus.oidc.proxy.password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password, if Proxy needs authentication.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROXY_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_PROXY_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:574
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.verification]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.verification[quarkus.oidc.tls.verification]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Certificate validation and hostname verification, which can be one of the following `Verification` values. Default is required.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_VERIFICATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_VERIFICATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:576
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2934
#, no-wrap
msgid "tooltip:required[Certificates are validated and hostname verification is enabled. This is the default value.], tooltip:certificate-validation[Certificates are validated but hostname verification is disabled.], tooltip:none[All certificated are trusted and hostname verification is disabled.]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:592
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-file[quarkus.oidc.tls.key-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional keystore which holds the certificate information instead of specifying separate files.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_KEY_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:593
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:695
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1519
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2951
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3053
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3911
#, fuzzy, no-wrap
msgid "path"
msgstr "路"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:609
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-file-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-file-type[quarkus.oidc.tls.key-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the keystore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_KEY_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:626
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-provider]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-provider[quarkus.oidc.tls.key-store-provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify a provider of the keystore file. If not given, the provider is automatically detected based on the keystore file type.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_KEY_STORE_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:643
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-password[quarkus.oidc.tls.key-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the keystore file. If not given, the default (\"password\") is used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_KEY_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:660
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-key-alias]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-key-alias[quarkus.oidc.tls.key-store-key-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to select a specific key in the keystore. When SNI is disabled, if the keystore contains multiple keys and no alias is specified, the behavior is undefined.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_KEY_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_KEY_STORE_KEY_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:677
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-key-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.key-store-key-password[quarkus.oidc.tls.key-store-key-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to define the password for the key, in case it's different from `key-store-password`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_KEY_STORE_KEY_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_KEY_STORE_KEY_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:694
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-file[quarkus.oidc.tls.trust-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional truststore which holds the certificate information of the certificates to trust\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_TRUST_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:711
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-password[quarkus.oidc.tls.trust-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the truststore file.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_TRUST_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:728
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-cert-alias]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-cert-alias[quarkus.oidc.tls.trust-store-cert-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the alias of the truststore certificate.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_CERT_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_TRUST_STORE_CERT_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:745
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-file-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-file-type[quarkus.oidc.tls.trust-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the truststore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_TRUST_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:762
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-provider]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tls.trust-store-provider[quarkus.oidc.tls.trust-store-provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify a provider of the truststore file. If not given, the provider is automatically detected based on the truststore file type.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TLS_TRUST_STORE_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TLS_TRUST_STORE_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:779
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tenant-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tenant-id[quarkus.oidc.tenant-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A unique tenant identifier. It must be set by `TenantConfigResolver` providers which resolve the tenant configuration dynamically and is optional in all other cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TENANT_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TENANT_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:796
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.tenant-enabled]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.tenant-enabled[quarkus.oidc.tenant-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this tenant configuration is enabled. Note that the default tenant will be disabled if it is not configured but either `TenantConfigResolver` which will resolve tenant configurations is registered or named tenants are configured. You do not have to disable the default tenant in this case.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TENANT_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TENANT_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:813
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.application-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.application-type[quarkus.oidc.application-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The application type, which can be one of the following `ApplicationType` values.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_APPLICATION_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_APPLICATION_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:815
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3173
#, no-wrap
msgid "tooltip:web-app[A `WEB_APP` is a client that serves pages, usually a front-end application. For this type of client the Authorization Code Flow is defined as the preferred method for authenticating users.], tooltip:service[A `SERVICE` is a client that has a set of protected HTTP resources, usually a backend application following the RESTful Architectural Design. For this type of client, the Bearer Authorization method is defined as the preferred method for authenticating and authorizing users.], tooltip:hybrid[A combined `SERVICE` and `WEB_APP` client. For this type of client, the Bearer Authorization method will be used if the Authorization header is set and Authorization Code Flow - if not.]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:818
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3176
#, no-wrap
msgid "`service`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:831
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authorization-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authorization-path[quarkus.oidc.authorization-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC authorization endpoint which authenticates the users. This property must be set for the 'web-app' applications if OIDC discovery is disabled. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHORIZATION_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHORIZATION_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:848
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.user-info-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.user-info-path[quarkus.oidc.user-info-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC UserInfo endpoint. This property must only be set for the 'web-app' applications if OIDC discovery is disabled and `authentication.user-info-required` property is enabled. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_USER_INFO_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_USER_INFO_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:865
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.introspection-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.introspection-path[quarkus.oidc.introspection-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC RFC7662 introspection endpoint which can introspect both opaque and JWT tokens. This property must be set if OIDC discovery is disabled and 1) the opaque bearer access tokens have to be verified or 2) JWT tokens have to be verified while the cached JWK verification set with no matching JWK is being refreshed. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_INTROSPECTION_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_INTROSPECTION_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:882
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks-path[quarkus.oidc.jwks-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC JWKS endpoint which returns a JSON Web Key Verification Set. This property should be set if OIDC discovery is disabled and the local JWT verification is required. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_JWKS_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:899
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.end-session-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.end-session-path[quarkus.oidc.end-session-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC end_session_endpoint. This property must be set if OIDC discovery is disabled and RP Initiated Logout support for the 'web-app' applications is required. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_END_SESSION_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_END_SESSION_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:916
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.public-key]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.public-key[quarkus.oidc.public-key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Public key for the local JWT token verification. OIDC server connection will not be created when this property is set.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PUBLIC_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_PUBLIC_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:933
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.introspection-credentials.name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.introspection-credentials.name[quarkus.oidc.introspection-credentials.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:950
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.introspection-credentials.secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.introspection-credentials.secret[quarkus.oidc.introspection-credentials.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:967
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.introspection-credentials.include-client-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.introspection-credentials.include-client-id[quarkus.oidc.introspection-credentials.include-client-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Include OpenId Connect Client ID configured with 'quarkus.oidc.client-id'\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_INCLUDE_CLIENT_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_INTROSPECTION_CREDENTIALS_INCLUDE_CLIENT_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:984
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.roles.role-claim-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.roles.role-claim-path[quarkus.oidc.roles.role-claim-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of paths to claims containing an array of groups. Each path starts from the top level JWT JSON object and can contain multiple segments where each segment represents a JSON object name only, example: \"realm/groups\". Use double quotes with the namespace qualified claim names. This property can be used if a token has no 'groups' claim but has the groups set in one or more different claims.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ROLES_ROLE_CLAIM_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_ROLES_ROLE_CLAIM_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:985
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1054
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1707
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1758
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3343
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3412
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4099
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4167
#, no-wrap
msgid "list of string"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1001
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.roles.role-claim-separator]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.roles.role-claim-separator[quarkus.oidc.roles.role-claim-separator]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Separator for splitting a string which may contain multiple group values. It will only be used if the \"role-claim-path\" property points to one or more custom claims whose values are strings. A single space will be used by default because the standard 'scope' claim may contain a space separated sequence.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ROLES_ROLE_CLAIM_SEPARATOR+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_ROLES_ROLE_CLAIM_SEPARATOR+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1018
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.roles.source]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.roles.source[quarkus.oidc.roles.source]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Source of the principal roles.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ROLES_SOURCE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_ROLES_SOURCE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1020
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3378
#, no-wrap
msgid "tooltip:idtoken[ID Token - the default value for the 'web-app' applications.], tooltip:accesstoken[Access Token - the default value for the 'service' applications; can also be used as the source of roles for the 'web-app' applications.], tooltip:userinfo[User Info]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1036
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.issuer]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.issuer[quarkus.oidc.token.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected issuer `iss` claim value. Note this property overrides the `issuer` property which may be set in OpenId Connect provider's well-known configuration. If the `iss` claim value varies depending on the host/IP address or tenant id of the provider then you may skip the issuer verification by setting this property to 'any' but it should be done only when other options (such as configuring the provider to use the fixed `iss` claim value) are not possible.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ISSUER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_ISSUER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1053
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.audience]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.audience[quarkus.oidc.token.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected audience 'aud' claim value which may be a string or an array of strings. Note the audience claim will be verified for ID tokens by default. ID token audience must be equal to the value of `quarkus.oidc.client-id` property. Use this property to override the expected value if your OpenID Connect provider sets a different audience claim value in ID tokens. Set it to `any` if your provider does not set ID token audience` claim. Audience verification for access tokens will only be done if this property is configured.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AUDIENCE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_AUDIENCE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1070
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.subject-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.subject-required[quarkus.oidc.token.subject-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that the token includes a `sub` (subject) claim which is a unique and never reassigned identifier for the current user. Note that if you enable this property and if UserInfo is also required then both the token and UserInfo `sub` claims must be present and match each other.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_SUBJECT_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_SUBJECT_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1074
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1160
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1299
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1350
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1625
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1676
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1693
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1727
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1778
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1904
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1921
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2010
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2068
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2157
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3432
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3535
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3674
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3725
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4017
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4068
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4085
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4119
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4187
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4313
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4330
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4419
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4511
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4600
#, no-wrap
msgid "`false`"
msgstr "`false` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1087
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.token-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.token-type[quarkus.oidc.token.token-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected token type\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_TOKEN_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_TOKEN_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1104
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.lifespan-grace]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.lifespan-grace[quarkus.oidc.token.lifespan-grace]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Life span grace period in seconds. When checking token expiry, current time is allowed to be later than token expiration time by at most the configured number of seconds. When checking token issuance, current time is allowed to be sooner than token issue time by at most the configured number of seconds.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_LIFESPAN_GRACE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_LIFESPAN_GRACE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1121
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.age]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.age[quarkus.oidc.token.age]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token age. It allows for the number of seconds to be specified that must not elapse since the `iat` (issued at) time. A small leeway to account for clock skew which can be configured with 'quarkus.oidc.token.lifespan-grace' to verify the token expiry time can also be used to verify the token age property. Note that setting this property does not relax the requirement that Bearer and Code Flow JWT tokens must have a valid ('exp') expiry claim value. The only exception where setting this property relaxes the requirement is when a logout token is sent with a back-channel logout request since the current OpenId Connect Back-Channel specification does not explicitly require the logout tokens to contain an 'exp' claim. However, even if the current logout token is allowed to have no 'exp' claim, the `exp` claim will be still verified if the logout token contains it.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_AGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1139
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.principal-claim]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.principal-claim[quarkus.oidc.token.principal-claim]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the claim which contains a principal name. By default, the `upn`, `preferred_username` and `sub` claims are checked.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_PRINCIPAL_CLAIM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_PRINCIPAL_CLAIM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1156
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.refresh-expired]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.refresh-expired[quarkus.oidc.token.refresh-expired]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh expired authorization code flow ID or access tokens. If this property is enabled then a refresh token request will be performed if the authorization code ID or access token has expired and, if successful, the local session will be updated with the new set of tokens. Otherwise, the local session will be invalidated and the user redirected to the OpenID Provider to re-authenticate. In this case the user may not be challenged again if the OIDC provider session is still active. For this option be effective the `authentication.session-age-extension` property should also be set to a non-zero value since the refresh token is currently kept in the user session. This option is valid only when the application is of type `ApplicationType++#++WEB_APP`++}++. This property will be enabled if `quarkus.oidc.token.refresh-token-time-skew` is configured, you do not have to enable this property manually in this case.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REFRESH_EXPIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_REFRESH_EXPIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1173
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.refresh-token-time-skew]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.refresh-token-time-skew[quarkus.oidc.token.refresh-token-time-skew]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh token time skew in seconds. If this property is enabled then the configured number of seconds is added to the current time when checking if the authorization code ID or access token should be refreshed. If the sum is greater than the authorization code ID or access token's expiration time then a refresh is going to happen.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REFRESH_TOKEN_TIME_SKEW+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_REFRESH_TOKEN_TIME_SKEW+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1191
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.forced-jwk-refresh-interval]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.forced-jwk-refresh-interval[quarkus.oidc.token.forced-jwk-refresh-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Forced JWK set refresh interval in minutes.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_FORCED_JWK_REFRESH_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_FORCED_JWK_REFRESH_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1196
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1453
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2211
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3571
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3845
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4654
#, no-wrap
msgid "`10M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1209
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.header]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.header[quarkus.oidc.token.header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP header that contains a bearer token. This option is valid only when the application is of type `ApplicationType++#++SERVICE`++}++.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1226
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.authorization-scheme]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.authorization-scheme[quarkus.oidc.token.authorization-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"HTTP Authorization header scheme.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_AUTHORIZATION_SCHEME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_AUTHORIZATION_SCHEME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1230
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3605
#, no-wrap
msgid "`Bearer`"
msgstr "`Bearer`"

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1243
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.signature-algorithm]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.signature-algorithm[quarkus.oidc.token.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Required signature algorithm. OIDC providers support many signature algorithms but if necessary you can restrict Quarkus application to accept tokens signed only using an algorithm configured with this property.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_SIGNATURE_ALGORITHM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_SIGNATURE_ALGORITHM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1245
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3620
#, no-wrap
msgid "`rs256`, `rs384`, `rs512`, `ps256`, `ps384`, `ps512`, `es256`, `es384`, `es512`, `eddsa`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1261
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.decryption-key-location]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.decryption-key-location[quarkus.oidc.token.decryption-key-location]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Decryption key location. JWT tokens can be inner-signed and encrypted by OpenId Connect providers. However, it is not always possible to remotely introspect such tokens because the providers may not control the private decryption keys. In such cases set this property to point to the file containing the decryption private key in PEM or JSON Web Key (JWK) format. Note that if a `private_key_jwt` client authentication method is used then the private key which is used to sign client authentication JWT tokens will be used to try to decrypt an encrypted ID token if this property is not set.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_DECRYPTION_KEY_LOCATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_DECRYPTION_KEY_LOCATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1278
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.allow-jwt-introspection]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.allow-jwt-introspection[quarkus.oidc.token.allow-jwt-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of JWT tokens when no matching JWK key is available. Note this property is set to `true` by default for backward-compatibility reasons and will be set to `false` instead in one of the next releases. Also note this property will be ignored if JWK endpoint URI is not available and introspecting the tokens is the only verification option.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ALLOW_JWT_INTROSPECTION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_ALLOW_JWT_INTROSPECTION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1295
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.require-jwt-introspection-only]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.require-jwt-introspection-only[quarkus.oidc.token.require-jwt-introspection-only]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that JWT tokens are only introspected remotely.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1312
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.allow-opaque-token-introspection]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.allow-opaque-token-introspection[quarkus.oidc.token.allow-opaque-token-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of the opaque tokens. Set this property to 'false' if only JWT tokens are expected.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1329
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.customizer-name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.customizer-name[quarkus.oidc.token.customizer-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token customizer name. Allows to select a tenant specific token customizer as a named bean. Prefer using `TenantFeature` qualifier when registering custom `TokenCustomizer`. Use this property only to refer to `TokenCustomizer` implementations provided by this extension.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_CUSTOMIZER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_CUSTOMIZER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1346
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.verify-access-token-with-user-info]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.verify-access-token-with-user-info[quarkus.oidc.token.verify-access-token-with-user-info]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Indirectly verify that the opaque (binary) access token is valid by using it to request UserInfo. Opaque access token is considered valid if the provider accepted this token and returned a valid UserInfo. You should only enable this option if the opaque access tokens have to be accepted but OpenId Connect provider does not have a token introspection endpoint. This property will have no effect when JWT tokens have to be verified.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1363
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.path[quarkus.oidc.logout.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the logout endpoint at the application. If provided, the application is able to initiate the logout through this endpoint in conformance with the OpenID Connect RP-Initiated Logout specification.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1380
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.post-logout-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.post-logout-path[quarkus.oidc.logout.post-logout-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path of the application endpoint where the user should be redirected to after logging out from the OpenID Connect Provider. This endpoint URI must be properly registered at the OpenID Connect Provider as a valid redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_POST_LOGOUT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_POST_LOGOUT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1397
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.post-logout-uri-param]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.post-logout-uri-param[quarkus.oidc.logout.post-logout-uri-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the post logout URI parameter which will be added as a query parameter to the logout redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_POST_LOGOUT_URI_PARAM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_POST_LOGOUT_URI_PARAM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1401
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3776
#, no-wrap
msgid "`post_logout_redirect_uri`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1414
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.path[quarkus.oidc.logout.backchannel.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the Back-Channel Logout endpoint at the application.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1431
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.token-cache-size]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.token-cache-size[quarkus.oidc.logout.backchannel.token-cache-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of logout tokens that can be cached before they are matched against ID tokens stored in session cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_TOKEN_CACHE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_TOKEN_CACHE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1448
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.token-cache-time-to-live]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.token-cache-time-to-live[quarkus.oidc.logout.backchannel.token-cache-time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Number of minutes a logout token can be cached for.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_TOKEN_CACHE_TIME_TO_LIVE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_TOKEN_CACHE_TIME_TO_LIVE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1466
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.clean-up-timer-interval]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.clean-up-timer-interval[quarkus.oidc.logout.backchannel.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token cache timer interval. If this property is set then a timer will check and remove the stale entries periodically.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_CLEAN_UP_TIMER_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1484
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.logout-token-key]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.backchannel.logout-token-key[quarkus.oidc.logout.backchannel.logout-token-key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Logout token claim whose value will be used as a key for caching the tokens. Only `sub` (subject) and `sid` (session id) claims can be used as keys. Set it to `sid` only if ID tokens issued by the OIDC provider have no `sub` but have `sid` claim.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_LOGOUT_TOKEN_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_BACKCHANNEL_LOGOUT_TOKEN_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1488
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3880
#, no-wrap
msgid "`sub`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1501
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.frontchannel.path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.frontchannel.path[quarkus.oidc.logout.frontchannel.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the Front-Channel Logout endpoint at the application.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_FRONTCHANNEL_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_FRONTCHANNEL_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1518
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.certificate-chain.trust-store-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.certificate-chain.trust-store-file[quarkus.oidc.certificate-chain.trust-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Truststore file which keeps thumbprints of the trusted certificates\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1535
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.certificate-chain.trust-store-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.certificate-chain.trust-store-password[quarkus.oidc.certificate-chain.trust-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the truststore file if it is configured with `trust-store-file`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1552
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.certificate-chain.trust-store-cert-alias]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.certificate-chain.trust-store-cert-alias[quarkus.oidc.certificate-chain.trust-store-cert-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the alias of the truststore certificate.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_CERT_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_CERT_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1569
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.certificate-chain.trust-store-file-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.certificate-chain.trust-store-file-type[quarkus.oidc.certificate-chain.trust-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the truststore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CERTIFICATE_CHAIN_TRUST_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1586
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.response-mode]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.response-mode[quarkus.oidc.authentication.response-mode]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Authorization code flow response mode\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_RESPONSE_MODE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_RESPONSE_MODE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1588
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3980
#, no-wrap
msgid "tooltip:query[Authorization response parameters are encoded in the query string added to the `redirect_uri`], tooltip:form-post[Authorization response parameters are encoded as HTML form values that are auto-submitted in the browser and transmitted via the HTTP POST method using the application/x-www-form-urlencoded content type]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1591
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3983
#, no-wrap
msgid "`query`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1604
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.redirect-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.redirect-path[quarkus.oidc.authentication.redirect-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path for calculating a `redirect_uri` query parameter. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if the current request URI is 'https://localhost:8080/service' then a `redirect_uri` parameter will be set to 'https://localhost:8080/' if this property is set to '/' and be the same as the request URI if this property has not been configured. Note the original request URI will be restored after the user has authenticated if 'restorePathAfterRedirect' is set to `true`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_REDIRECT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_REDIRECT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1621
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.restore-path-after-redirect]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.restore-path-after-redirect[quarkus.oidc.authentication.restore-path-after-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then the original request URI which was used before the authentication will be restored after the user has been redirected back to the application. Note if `redirectPath` property is not set, the original request URI will be restored even if this property is disabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1638
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.remove-redirect-parameters]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.remove-redirect-parameters[quarkus.oidc.authentication.remove-redirect-parameters]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Remove the query parameters such as 'code' and 'state' set by the OIDC server on the redirect URI after the user has authenticated by redirecting a user to the same URI but without the query parameters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1655
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.error-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.error-path[quarkus.oidc.authentication.error-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path to the public endpoint which will process the error response from the OIDC authorization endpoint. If the user authentication has failed then the OIDC provider will return an `error` and an optional `error_description` parameters, instead of the expected authorization 'code'. If this property is set then the user will be redirected to the endpoint which can return a user-friendly error description page. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if it is set as '/error' and the current request URI is 'https://localhost:8080/callback?error=invalid_scope' then a redirect will be made to 'https://localhost:8080/error?error=invalid_scope'. If this property is not set then HTTP 401 status will be returned in case of the user authentication failure.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ERROR_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_ERROR_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1672
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.verify-access-token]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.verify-access-token[quarkus.oidc.authentication.verify-access-token]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Both ID and access tokens are fetched from the OIDC provider as part of the authorization code flow. ID token is always verified on every user request as the primary token which is used to represent the principal and extract the roles. Access token is not verified by default since it is meant to be propagated to the downstream services. The verification of the access token should be enabled if it is injected as a JWT token. Access tokens obtained as part of the code flow will always be verified if `quarkus.oidc.roles.source` property is set to `accesstoken` which means the authorization decision will be based on the roles extracted from the access token. Bearer access tokens are always verified.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_VERIFY_ACCESS_TOKEN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_VERIFY_ACCESS_TOKEN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1689
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.force-redirect-https-scheme]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.force-redirect-https-scheme[quarkus.oidc.authentication.force-redirect-https-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Force 'https' as the `redirect_uri` parameter scheme when running behind an SSL/TLS terminating reverse proxy. This property, if enabled, will also affect the logout `post_logout_redirect_uri` and the local redirect requests.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1706
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.scopes]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.scopes[quarkus.oidc.authentication.scopes]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of scopes\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_SCOPES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_SCOPES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1723
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.nonce-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.nonce-required[quarkus.oidc.authentication.nonce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that ID token includes a `nonce` claim which must match `nonce` authentication request query parameter. Enabling this property can help mitigate replay attacks. Do not enable this property if your OpenId Connect provider does not support setting `nonce` in ID token or if you work with OAuth2 provider such as `GitHub` which does not issue ID tokens.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_NONCE_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_NONCE_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1740
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.add-openid-scope]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.add-openid-scope[quarkus.oidc.authentication.add-openid-scope]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Add the `openid` scope automatically to the list of scopes. This is required for OpenId Connect providers but will not work for OAuth2 providers such as Twitter OAuth2 which does not accept that scope and throws an error.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ADD_OPENID_SCOPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_ADD_OPENID_SCOPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1757
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.forward-params]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.forward-params[quarkus.oidc.authentication.forward-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Request URL query parameters which, if present, will be added to the authentication redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FORWARD_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_FORWARD_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1774
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-force-secure]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-force-secure[quarkus.oidc.authentication.cookie-force-secure]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If enabled the state, session and post logout cookies will have their 'secure' parameter set to `true` when HTTP is used. It may be necessary when running behind an SSL/TLS terminating reverse proxy. The cookies will always be secure if HTTPS is used even if this property is set to false.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_FORCE_SECURE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_FORCE_SECURE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1791
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-suffix]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-suffix[quarkus.oidc.authentication.cookie-suffix]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie name suffix. For example, a session cookie name for the default OIDC tenant is `q_session` but can be changed to `q_session_test` if this property is set to `test`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SUFFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SUFFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1808
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-path[quarkus.oidc.authentication.cookie-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path parameter value which, if set, will be used to set a path parameter for the session, state and post logout cookies. The `cookie-path-header` property, if set, will be checked first.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1812
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4221
#, fuzzy, no-wrap
msgid "`/`"
msgstr " `/` "

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1825
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-path-header]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-path-header[quarkus.oidc.authentication.cookie-path-header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path header parameter value which, if set, identifies the incoming HTTP header whose value will be used to set a path parameter for the session, state and post logout cookies. If the header is missing then the `cookie-path` property will be checked.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_PATH_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1842
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-domain]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-domain[quarkus.oidc.authentication.cookie-domain]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie domain parameter value which, if set, will be used for the session, state and post logout cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_DOMAIN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_DOMAIN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1859
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-same-site]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.cookie-same-site[quarkus.oidc.authentication.cookie-same-site]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"SameSite attribute for the session cookie.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SAME_SITE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_COOKIE_SAME_SITE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1861
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4270
#, no-wrap
msgid "`strict`, `lax`, `none`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1864
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4273
#, no-wrap
msgid "`lax`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1877
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.allow-multiple-code-flows]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.allow-multiple-code-flows[quarkus.oidc.authentication.allow-multiple-code-flows]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If a state cookie is present then a `state` query parameter must also be present and both the state cookie name suffix and state cookie value have to match the value of the `state` query parameter when the redirect path matches the current path. However, if multiple authentications are attempted from the same browser, for example, from the different browser tabs, then the currently available state cookie may represent the authentication flow initiated from another tab and not related to the current request. Disable this property to permit only a single authorization code flow in the same browser.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1900
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.fail-on-missing-state-param]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.fail-on-missing-state-param[quarkus.oidc.authentication.fail-on-missing-state-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Fail with the HTTP 401 error if the state cookie is present but no state query parameter is present.\n"
"\n"
"When either multiple authentications are disabled or the redirect URL matches the original request URL, the stale state cookie might remain in the browser cache from the earlier failed redirect to an OpenId Connect provider and be visible during the current request. For example, if Single-page application (SPA) uses XHR to handle redirects to the provider which does not support CORS for its authorization endpoint, the browser will block it and the state cookie created by Quarkus will remain in the browser cache. Quarkus will report an authentication failure when it will detect such an old state cookie but find no matching state query parameter.\n"
"\n"
"Reporting HTTP 401 error is usually the right thing to do in such cases, it will minimize a risk of the browser redirect loop but also can identify problems in the way SPA or Quarkus application manage redirects. For example, enabling `java-script-auto-redirect` or having the provider redirect to URL configured with `redirect-path` may be needed to avoid such errors.\n"
"\n"
"However, setting this property to `false` may help if the above options are not suitable. It will cause a new authentication redirect to OpenId Connect provider. Doing so may increase the risk of browser redirect loops.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1917
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.user-info-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.user-info-required[quarkus.oidc.authentication.user-info-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then an OIDC UserInfo endpoint will be called. This property will be enabled if `quarkus.oidc.roles.source` is `userinfo` or `quarkus.oidc.token.verify-access-token-with-user-info` is `true` or `quarkus.oidc.authentication.id-token-required` is set to `false`, you do not have to enable this property manually in these cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_USER_INFO_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_USER_INFO_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1934
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.session-age-extension]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.session-age-extension[quarkus.oidc.authentication.session-age-extension]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Session age extension in minutes. The user session age property is set to the value of the ID token life-span by default and the user will be redirected to the OIDC provider to re-authenticate once the session has expired. If this property is set to a non-zero value, then the expired ID token can be refreshed before the session has expired. This property will be ignored if the `token.refresh-expired` property has not been enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_SESSION_AGE_EXTENSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_SESSION_AGE_EXTENSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1939
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1993
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4348
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4402
#, no-wrap
msgid "`5M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1954
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.java-script-auto-redirect]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.java-script-auto-redirect[quarkus.oidc.authentication.java-script-auto-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then a normal 302 redirect response will be returned if the request was initiated via JavaScript API such as XMLHttpRequest or Fetch and the current user needs to be (re)authenticated which may not be desirable for Single-page applications (SPA) since it automatically following the redirect may not work given that OIDC authorization endpoints typically do not support CORS.\n"
"\n"
"If this property is set to 'false' then a status code of '499' will be returned to allow SPA to handle the redirect manually if a request header identifying current request as a JavaScript request is found. 'X-Requested-With' request header with its value set to either `JavaScript` or `XMLHttpRequest` is expected by default if this property is enabled. You can register a custom `JavaScriptRequestChecker` to do a custom JavaScript request check instead.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1971
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.id-token-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.id-token-required[quarkus.oidc.authentication.id-token-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that ID token is available when the authorization code flow completes. Disable this property only when you need to use the authorization code flow with OAuth2 providers which do not return ID token - an internal IdToken will be generated in such cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_ID_TOKEN_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_ID_TOKEN_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:1988
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.internal-id-token-lifespan]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.internal-id-token-lifespan[quarkus.oidc.authentication.internal-id-token-lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Internal ID token lifespan. This property is only checked when an internal IdToken is generated when Oauth2 providers do not return IdToken.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2006
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.pkce-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.pkce-required[quarkus.oidc.authentication.pkce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that a Proof Key for Code Exchange (PKCE) is used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_PKCE_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_PKCE_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2029
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.state-secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.state-secret[quarkus.oidc.authentication.state-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret which will be used to encrypt Proof Key for Code Exchange (PKCE) code verifier and/or nonce in the code flow state. This secret should be at least 32 characters long.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` will be checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication will be checked. Client secret will not be used as a state encryption secret if it is less than 32 characters long.\n"
"\n"
"The secret will be auto-generated if it remains uninitialized after checking all of these properties.\n"
"\n"
"Error will be reported if the secret length is less than 16 characters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_STATE_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_STATE_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2046
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-state-manager.strategy]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-state-manager.strategy[quarkus.oidc.token-state-manager.strategy]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Default TokenStateManager strategy.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_STRATEGY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_STRATEGY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2048
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4491
#, no-wrap
msgid "tooltip:keep-all-tokens[Keep ID, access and refresh tokens.], tooltip:id-token[Keep ID token only], tooltip:id-refresh-tokens[Keep ID and refresh tokens only]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2051
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4494
#, no-wrap
msgid "`keep-all-tokens`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2064
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-state-manager.split-tokens]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-state-manager.split-tokens[quarkus.oidc.token-state-manager.split-tokens]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Default TokenStateManager keeps all tokens (ID, access and refresh) returned in the authorization code grant response in a single session cookie by default. Enable this property to minimize a session cookie size\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_SPLIT_TOKENS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_SPLIT_TOKENS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2081
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-state-manager.encryption-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-state-manager.encryption-required[quarkus.oidc.token-state-manager.encryption-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Mandates that the Default TokenStateManager will encrypt the session cookie that stores the tokens.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_ENCRYPTION_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_ENCRYPTION_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2102
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-state-manager.encryption-secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token-state-manager.encryption-secret[quarkus.oidc.token-state-manager.encryption-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret which will be used by the Default TokenStateManager to encrypt the session cookie storing the tokens when `encryption-required` property is enabled.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` will be checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication will be checked. The secret will be auto-generated if it remains uninitialized after checking all of these properties.\n"
"\n"
"The length of the secret which will be used to encrypt the tokens should be at least 32 characters long. Warning will be logged if the secret length is less than 16 characters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_ENCRYPTION_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_STATE_MANAGER_ENCRYPTION_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2119
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.allow-token-introspection-cache]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.allow-token-introspection-cache[quarkus.oidc.allow-token-introspection-cache]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow caching the token introspection data. Note enabling this property does not enable the cache itself but only permits to cache the token introspection for a given tenant. If the default token cache can be used, see `OidcConfig.TokenCache` to enable it.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ALLOW_TOKEN_INTROSPECTION_CACHE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_ALLOW_TOKEN_INTROSPECTION_CACHE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2136
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.allow-user-info-cache]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.allow-user-info-cache[quarkus.oidc.allow-user-info-cache]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow caching the user info data. Note enabling this property does not enable the cache itself but only permits to cache the user info data for a given tenant. If the default token cache can be used, see `OidcConfig.TokenCache` to enable it.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_ALLOW_USER_INFO_CACHE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_ALLOW_USER_INFO_CACHE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2153
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.cache-user-info-in-idtoken]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.cache-user-info-in-idtoken[quarkus.oidc.cache-user-info-in-idtoken]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow inlining UserInfo in IdToken instead of caching it in the token cache. This property is only checked when an internal IdToken is generated when Oauth2 providers do not return IdToken. Inlining UserInfo in the generated IdToken allows to store it in the session cookie and avoids introducing a cached state.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CACHE_USER_INFO_IN_IDTOKEN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CACHE_USER_INFO_IN_IDTOKEN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2172
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks.resolve-early]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks.resolve-early[quarkus.oidc.jwks.resolve-early]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If JWK verification keys should be fetched at the moment a connection to the OIDC provider is initialized.\n"
"\n"
"Disabling this property will delay the key acquisition until the moment the current token has to be verified. Typically it can only be necessary if the token or other telated request properties provide an additional context which is required to resolve the keys correctly.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_RESOLVE_EARLY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_JWKS_RESOLVE_EARLY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2189
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks.cache-size]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks.cache-size[quarkus.oidc.jwks.cache-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of JWK keys that can be cached. This property will be ignored if the `resolve-early` property is set to true.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_CACHE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_JWKS_CACHE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2206
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks.cache-time-to-live]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks.cache-time-to-live[quarkus.oidc.jwks.cache-time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Number of minutes a JWK key can be cached for. This property will be ignored if the `resolve-early` property is set to true.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_CACHE_TIME_TO_LIVE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_JWKS_CACHE_TIME_TO_LIVE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2224
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks.clean-up-timer-interval]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.jwks.clean-up-timer-interval[quarkus.oidc.jwks.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cache timer interval. If this property is set then a timer will check and remove the stale entries periodically. This property will be ignored if the `resolve-early` property is set to true.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_JWKS_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_JWKS_CLEAN_UP_TIMER_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2242
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.provider]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.provider[quarkus.oidc.provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Well known OpenId Connect provider identifier\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2244
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4687
#, no-wrap
msgid "`apple`, `discord`, `facebook`, `github`, `google`, `linkedin`, `mastodon`, `microsoft`, `spotify`, `twitch`, `twitter`, `x`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2260
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.claims-claims]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.credentials.jwt.claims-claims[quarkus.oidc.credentials.jwt.claims]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional claims.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CREDENTIALS_JWT_CLAIMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CREDENTIALS_JWT_CLAIMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2261
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2278
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2295
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2312
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2329
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2346
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2813
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3446
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3790
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4150
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4456
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4473
#, no-wrap
msgid "`Map<String,String>`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2277
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.required-claims-claim-name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.token.required-claims-claim-name[quarkus.oidc.token.required-claims]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A map of required claims and their expected values. For example, `quarkus.oidc.token.required-claims.org_id = org_xyz` would require tokens to have the `org_id` claim to be present and set to `org_xyz`. Strings are the only supported types. Use `SecurityIdentityAugmentor` to verify claims of other types or complex claims.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_TOKEN_REQUIRED_CLAIMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_TOKEN_REQUIRED_CLAIMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2294
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.extra-params-extra-params]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.logout.extra-params-extra-params[quarkus.oidc.logout.extra-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties which will be added as the query parameters to the logout redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_LOGOUT_EXTRA_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_LOGOUT_EXTRA_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2311
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.extra-params-extra-params]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.authentication.extra-params-extra-params[quarkus.oidc.authentication.extra-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties which will be added as the query parameters to the authentication redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_AUTHENTICATION_EXTRA_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_AUTHENTICATION_EXTRA_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2328
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.code-grant.extra-params-extra-params]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.code-grant.extra-params-extra-params[quarkus.oidc.code-grant.extra-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional parameters, in addition to the required `code` and `redirect-uri` parameters, which have to be included to complete the authorization code grant request.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CODE_GRANT_EXTRA_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CODE_GRANT_EXTRA_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2345
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.code-grant.headers-headers]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.code-grant.headers-headers[quarkus.oidc.code-grant.headers]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP headers which have to be sent to complete the authorization code grant request.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC_CODE_GRANT_HEADERS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC_CODE_GRANT_HEADERS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2351
#, no-wrap
msgid "[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.named-tenants-additional-named-tenants]]link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.named-tenants-additional-named-tenants[Additional named tenants]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2367
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.auth-server-url]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.auth-server-url[quarkus.oidc.\"tenant\".auth-server-url]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The base URL of the OpenID Connect (OIDC) server, for example, `https://host:port/auth`. OIDC discovery endpoint will be called by default by appending a '.well-known/openid-configuration' path to this URL. Note if you work with Keycloak OIDC server, make sure the base URL is in the following format: `https://host:port/realms/++{++realm++}++` where `++{++realm++}++` has to be replaced by the name of the Keycloak realm.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTH_SERVER_URL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTH_SERVER_URL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2384
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.discovery-enabled]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.discovery-enabled[quarkus.oidc.\"tenant\".discovery-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Enables OIDC discovery. If the discovery is disabled then the OIDC endpoint URLs must be configured individually.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__DISCOVERY_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__DISCOVERY_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2401
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-path[quarkus.oidc.\"tenant\".token-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC token endpoint which issues access and refresh tokens.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2418
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.revoke-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.revoke-path[quarkus.oidc.\"tenant\".revoke-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC token revocation endpoint.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__REVOKE_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__REVOKE_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2435
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.client-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.client-id[quarkus.oidc.\"tenant\".client-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client-id of the application. Each application has a client-id that is used to identify the application\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CLIENT_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CLIENT_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2452
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.connection-delay]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.connection-delay[quarkus.oidc.\"tenant\".connection-delay]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The maximum amount of time connecting to the currently unavailable OIDC server will be attempted for. The number of times the connection request will be repeated is calculated by dividing the value of this property by 2. For example, setting it to `20S` will allow for requesting the connection up to 10 times with a 2 seconds delay between the retries. Note this property is only effective when the initial OIDC connection is created, for example, when requesting a well-known OIDC configuration. Use the 'connection-retry-count' property to support trying to re-establish an already available connection which may have been dropped.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CONNECTION_DELAY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CONNECTION_DELAY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2470
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.connection-retry-count]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.connection-retry-count[quarkus.oidc.\"tenant\".connection-retry-count]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The number of times an attempt to re-establish an already available connection will be repeated. Note this property is different from the `connection-delay` property, which is only effective during the initial OIDC connection creation. This property is used to try to recover an existing connection that may have been temporarily lost. For example, if a request to the OIDC token endpoint fails due to a connection exception, then the request will be retried the number of times configured by this property.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CONNECTION_RETRY_COUNT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CONNECTION_RETRY_COUNT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2487
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.connection-timeout]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.connection-timeout[quarkus.oidc.\"tenant\".connection-timeout]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The amount of time after which the current OIDC connection request will time out.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CONNECTION_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CONNECTION_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2505
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.max-pool-size]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.max-pool-size[quarkus.oidc.\"tenant\".max-pool-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The maximum size of the connection pool used by the WebClient\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__MAX_POOL_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__MAX_POOL_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2522
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.secret[quarkus.oidc.\"tenant\".credentials.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Client secret which is used for a `client_secret_basic` authentication method. Note that a 'client-secret.value' can be used instead but both properties are mutually exclusive.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2539
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.client-secret.value]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.client-secret.value[quarkus.oidc.\"tenant\".credentials.client-secret.value]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The client secret value - it will be ignored if 'credentials.secret' is set\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_VALUE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_VALUE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2556
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.client-secret.provider.name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.client-secret.provider.name[quarkus.oidc.\"tenant\".credentials.client-secret.provider.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider name which should only be set if more than one CredentialsProvider is registered\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_PROVIDER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2573
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.client-secret.provider.key]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.client-secret.provider.key[quarkus.oidc.\"tenant\".credentials.client-secret.provider.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider client secret key\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_PROVIDER_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2590
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.client-secret.method]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.client-secret.method[quarkus.oidc.\"tenant\".credentials.client-secret.method]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Authentication method.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_METHOD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_CLIENT_SECRET_METHOD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2608
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.secret[quarkus.oidc.\"tenant\".credentials.jwt.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a secret key\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2625
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.secret-provider.name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.secret-provider.name[quarkus.oidc.\"tenant\".credentials.jwt.secret-provider.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider name which should only be set if more than one CredentialsProvider is registered\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET_PROVIDER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET_PROVIDER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2642
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.secret-provider.key]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.secret-provider.key[quarkus.oidc.\"tenant\".credentials.jwt.secret-provider.key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The CredentialsProvider client secret key\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET_PROVIDER_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SECRET_PROVIDER_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2659
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-file[quarkus.oidc.\"tenant\".credentials.jwt.key-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a private key in PEM or JWK format. You can use the `signature-algorithm` property to specify the key algorithm.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2676
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-store-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-store-file[quarkus.oidc.\"tenant\".credentials.jwt.key-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If provided, indicates that JWT is signed using a private key from a keystore\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2693
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-store-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-store-password[quarkus.oidc.\"tenant\".credentials.jwt.key-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the keystore file.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2710
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-id[quarkus.oidc.\"tenant\".credentials.jwt.key-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The private key id/alias\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2727
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.key-password[quarkus.oidc.\"tenant\".credentials.jwt.key-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The private key password\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_KEY_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2744
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.audience]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.audience[quarkus.oidc.\"tenant\".credentials.jwt.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"JWT audience ('aud') claim value. By default, the audience is set to the address of the OpenId Connect Provider's token endpoint.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_AUDIENCE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_AUDIENCE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2761
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.token-key-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.token-key-id[quarkus.oidc.\"tenant\".credentials.jwt.token-key-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Key identifier of the signing key added as a JWT 'kid' header\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_TOKEN_KEY_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_TOKEN_KEY_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2778
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.issuer]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.issuer[quarkus.oidc.\"tenant\".credentials.jwt.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Issuer of the signing key added as a JWT `iss` claim (default: client id)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_ISSUER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_ISSUER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2795
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.subject]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.subject[quarkus.oidc.\"tenant\".credentials.jwt.subject]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Subject of the signing key added as a JWT 'sub' claim (default: client id)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SUBJECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SUBJECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2812
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.claims-claims]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.claims-claims[quarkus.oidc.\"tenant\".credentials.jwt.claims]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional claims.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_CLAIMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_CLAIMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2829
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.signature-algorithm]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.signature-algorithm[quarkus.oidc.\"tenant\".credentials.jwt.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Signature algorithm, also used for the `key-file` property. Supported values: RS256, RS384, RS512, PS256, PS384, PS512, ES256, ES384, ES512, HS256, HS384, HS512.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SIGNATURE_ALGORITHM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_SIGNATURE_ALGORITHM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2846
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.lifespan]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.credentials.jwt.lifespan[quarkus.oidc.\"tenant\".credentials.jwt.lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"JWT life-span in seconds. It will be added to the time it was issued at to calculate the expiration time.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_LIFESPAN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CREDENTIALS_JWT_LIFESPAN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2864
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.proxy.host]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.proxy.host[quarkus.oidc.\"tenant\".proxy.host]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The host (name or IP address) of the Proxy. +\n"
"Note: If OIDC adapter needs to use a Proxy to talk with OIDC server (Provider), then at least the \"host\" config item must be configured to enable the usage of a Proxy.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROXY_HOST+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__PROXY_HOST+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2881
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.proxy.port]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.proxy.port[quarkus.oidc.\"tenant\".proxy.port]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The port number of the Proxy. Default value is 80.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROXY_PORT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__PROXY_PORT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2898
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.proxy.username]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.proxy.username[quarkus.oidc.\"tenant\".proxy.username]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The username, if Proxy needs authentication.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROXY_USERNAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__PROXY_USERNAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2915
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.proxy.password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.proxy.password[quarkus.oidc.\"tenant\".proxy.password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The password, if Proxy needs authentication.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROXY_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__PROXY_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2932
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.verification]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.verification[quarkus.oidc.\"tenant\".tls.verification]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Certificate validation and hostname verification, which can be one of the following `Verification` values. Default is required.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_VERIFICATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_VERIFICATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2950
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-file[quarkus.oidc.\"tenant\".tls.key-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional keystore which holds the certificate information instead of specifying separate files.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2967
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-file-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-file-type[quarkus.oidc.\"tenant\".tls.key-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the keystore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:2984
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-provider]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-provider[quarkus.oidc.\"tenant\".tls.key-store-provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify a provider of the keystore file. If not given, the provider is automatically detected based on the keystore file type.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3001
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-password[quarkus.oidc.\"tenant\".tls.key-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the keystore file. If not given, the default (\"password\") is used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3018
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-key-alias]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-key-alias[quarkus.oidc.\"tenant\".tls.key-store-key-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to select a specific key in the keystore. When SNI is disabled, if the keystore contains multiple keys and no alias is specified, the behavior is undefined.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_KEY_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_KEY_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3035
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-key-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.key-store-key-password[quarkus.oidc.\"tenant\".tls.key-store-key-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to define the password for the key, in case it's different from `key-store-password`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_KEY_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_KEY_STORE_KEY_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3052
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-file[quarkus.oidc.\"tenant\".tls.trust-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional truststore which holds the certificate information of the certificates to trust\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3069
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-password[quarkus.oidc.\"tenant\".tls.trust-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the truststore file.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3086
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-cert-alias]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-cert-alias[quarkus.oidc.\"tenant\".tls.trust-store-cert-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the alias of the truststore certificate.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_CERT_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_CERT_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3103
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-file-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-file-type[quarkus.oidc.\"tenant\".tls.trust-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the truststore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3120
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-provider]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tls.trust-store-provider[quarkus.oidc.\"tenant\".tls.trust-store-provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify a provider of the truststore file. If not given, the provider is automatically detected based on the truststore file type.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TLS_TRUST_STORE_PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3137
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tenant-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tenant-id[quarkus.oidc.\"tenant\".tenant-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A unique tenant identifier. It must be set by `TenantConfigResolver` providers which resolve the tenant configuration dynamically and is optional in all other cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TENANT_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TENANT_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3154
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tenant-enabled]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.tenant-enabled[quarkus.oidc.\"tenant\".tenant-enabled]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this tenant configuration is enabled. Note that the default tenant will be disabled if it is not configured but either `TenantConfigResolver` which will resolve tenant configurations is registered or named tenants are configured. You do not have to disable the default tenant in this case.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TENANT_ENABLED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TENANT_ENABLED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3171
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.application-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.application-type[quarkus.oidc.\"tenant\".application-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The application type, which can be one of the following `ApplicationType` values.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__APPLICATION_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__APPLICATION_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3189
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authorization-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authorization-path[quarkus.oidc.\"tenant\".authorization-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC authorization endpoint which authenticates the users. This property must be set for the 'web-app' applications if OIDC discovery is disabled. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHORIZATION_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHORIZATION_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3206
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.user-info-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.user-info-path[quarkus.oidc.\"tenant\".user-info-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC UserInfo endpoint. This property must only be set for the 'web-app' applications if OIDC discovery is disabled and `authentication.user-info-required` property is enabled. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__USER_INFO_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__USER_INFO_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3223
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.introspection-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.introspection-path[quarkus.oidc.\"tenant\".introspection-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC RFC7662 introspection endpoint which can introspect both opaque and JWT tokens. This property must be set if OIDC discovery is disabled and 1) the opaque bearer access tokens have to be verified or 2) JWT tokens have to be verified while the cached JWK verification set with no matching JWK is being refreshed. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__INTROSPECTION_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__INTROSPECTION_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3240
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks-path[quarkus.oidc.\"tenant\".jwks-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC JWKS endpoint which returns a JSON Web Key Verification Set. This property should be set if OIDC discovery is disabled and the local JWT verification is required. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__JWKS_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3257
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.end-session-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.end-session-path[quarkus.oidc.\"tenant\".end-session-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path or absolute URL of the OIDC end_session_endpoint. This property must be set if OIDC discovery is disabled and RP Initiated Logout support for the 'web-app' applications is required. This property will be ignored if the discovery is enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__END_SESSION_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__END_SESSION_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3274
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.public-key]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.public-key[quarkus.oidc.\"tenant\".public-key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Public key for the local JWT token verification. OIDC server connection will not be created when this property is set.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PUBLIC_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__PUBLIC_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3291
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.introspection-credentials.name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.introspection-credentials.name[quarkus.oidc.\"tenant\".introspection-credentials.name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3308
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.introspection-credentials.secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.introspection-credentials.secret[quarkus.oidc.\"tenant\".introspection-credentials.secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3325
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.introspection-credentials.include-client-id]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.introspection-credentials.include-client-id[quarkus.oidc.\"tenant\".introspection-credentials.include-client-id]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Include OpenId Connect Client ID configured with 'quarkus.oidc.client-id'\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_INCLUDE_CLIENT_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__INTROSPECTION_CREDENTIALS_INCLUDE_CLIENT_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3342
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.roles.role-claim-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.roles.role-claim-path[quarkus.oidc.\"tenant\".roles.role-claim-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of paths to claims containing an array of groups. Each path starts from the top level JWT JSON object and can contain multiple segments where each segment represents a JSON object name only, example: \"realm/groups\". Use double quotes with the namespace qualified claim names. This property can be used if a token has no 'groups' claim but has the groups set in one or more different claims.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ROLES_ROLE_CLAIM_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__ROLES_ROLE_CLAIM_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3359
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.roles.role-claim-separator]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.roles.role-claim-separator[quarkus.oidc.\"tenant\".roles.role-claim-separator]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Separator for splitting a string which may contain multiple group values. It will only be used if the \"role-claim-path\" property points to one or more custom claims whose values are strings. A single space will be used by default because the standard 'scope' claim may contain a space separated sequence.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ROLES_ROLE_CLAIM_SEPARATOR+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__ROLES_ROLE_CLAIM_SEPARATOR+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3376
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.roles.source]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.roles.source[quarkus.oidc.\"tenant\".roles.source]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Source of the principal roles.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ROLES_SOURCE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__ROLES_SOURCE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3394
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.issuer]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.issuer[quarkus.oidc.\"tenant\".token.issuer]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected issuer `iss` claim value. Note this property overrides the `issuer` property which may be set in OpenId Connect provider's well-known configuration. If the `iss` claim value varies depending on the host/IP address or tenant id of the provider then you may skip the issuer verification by setting this property to 'any' but it should be done only when other options (such as configuring the provider to use the fixed `iss` claim value) are not possible.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ISSUER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_ISSUER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3411
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.audience]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.audience[quarkus.oidc.\"tenant\".token.audience]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected audience 'aud' claim value which may be a string or an array of strings. Note the audience claim will be verified for ID tokens by default. ID token audience must be equal to the value of `quarkus.oidc.client-id` property. Use this property to override the expected value if your OpenID Connect provider sets a different audience claim value in ID tokens. Set it to `any` if your provider does not set ID token audience` claim. Audience verification for access tokens will only be done if this property is configured.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AUDIENCE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_AUDIENCE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3428
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.subject-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.subject-required[quarkus.oidc.\"tenant\".token.subject-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that the token includes a `sub` (subject) claim which is a unique and never reassigned identifier for the current user. Note that if you enable this property and if UserInfo is also required then both the token and UserInfo `sub` claims must be present and match each other.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_SUBJECT_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_SUBJECT_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3445
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.required-claims-claim-name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.required-claims-claim-name[quarkus.oidc.\"tenant\".token.required-claims]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A map of required claims and their expected values. For example, `quarkus.oidc.token.required-claims.org_id = org_xyz` would require tokens to have the `org_id` claim to be present and set to `org_xyz`. Strings are the only supported types. Use `SecurityIdentityAugmentor` to verify claims of other types or complex claims.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRED_CLAIMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRED_CLAIMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3462
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.token-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.token-type[quarkus.oidc.\"tenant\".token.token-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Expected token type\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_TOKEN_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_TOKEN_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3479
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.lifespan-grace]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.lifespan-grace[quarkus.oidc.\"tenant\".token.lifespan-grace]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Life span grace period in seconds. When checking token expiry, current time is allowed to be later than token expiration time by at most the configured number of seconds. When checking token issuance, current time is allowed to be sooner than token issue time by at most the configured number of seconds.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_LIFESPAN_GRACE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_LIFESPAN_GRACE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3496
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.age]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.age[quarkus.oidc.\"tenant\".token.age]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token age. It allows for the number of seconds to be specified that must not elapse since the `iat` (issued at) time. A small leeway to account for clock skew which can be configured with 'quarkus.oidc.token.lifespan-grace' to verify the token expiry time can also be used to verify the token age property. Note that setting this property does not relax the requirement that Bearer and Code Flow JWT tokens must have a valid ('exp') expiry claim value. The only exception where setting this property relaxes the requirement is when a logout token is sent with a back-channel logout request since the current OpenId Connect Back-Channel specification does not explicitly require the logout tokens to contain an 'exp' claim. However, even if the current logout token is allowed to have no 'exp' claim, the `exp` claim will be still verified if the logout token contains it.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_AGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3514
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.principal-claim]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.principal-claim[quarkus.oidc.\"tenant\".token.principal-claim]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the claim which contains a principal name. By default, the `upn`, `preferred_username` and `sub` claims are checked.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_PRINCIPAL_CLAIM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_PRINCIPAL_CLAIM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3531
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.refresh-expired]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.refresh-expired[quarkus.oidc.\"tenant\".token.refresh-expired]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh expired authorization code flow ID or access tokens. If this property is enabled then a refresh token request will be performed if the authorization code ID or access token has expired and, if successful, the local session will be updated with the new set of tokens. Otherwise, the local session will be invalidated and the user redirected to the OpenID Provider to re-authenticate. In this case the user may not be challenged again if the OIDC provider session is still active. For this option be effective the `authentication.session-age-extension` property should also be set to a non-zero value since the refresh token is currently kept in the user session. This option is valid only when the application is of type `ApplicationType++#++WEB_APP`++}++. This property will be enabled if `quarkus.oidc.token.refresh-token-time-skew` is configured, you do not have to enable this property manually in this case.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_EXPIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_EXPIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3548
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.refresh-token-time-skew]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.refresh-token-time-skew[quarkus.oidc.\"tenant\".token.refresh-token-time-skew]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Refresh token time skew in seconds. If this property is enabled then the configured number of seconds is added to the current time when checking if the authorization code ID or access token should be refreshed. If the sum is greater than the authorization code ID or access token's expiration time then a refresh is going to happen.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_TOKEN_TIME_SKEW+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_REFRESH_TOKEN_TIME_SKEW+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3566
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.forced-jwk-refresh-interval]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.forced-jwk-refresh-interval[quarkus.oidc.\"tenant\".token.forced-jwk-refresh-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Forced JWK set refresh interval in minutes.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_FORCED_JWK_REFRESH_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_FORCED_JWK_REFRESH_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3584
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.header]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.header[quarkus.oidc.\"tenant\".token.header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP header that contains a bearer token. This option is valid only when the application is of type `ApplicationType++#++SERVICE`++}++.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3601
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.authorization-scheme]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.authorization-scheme[quarkus.oidc.\"tenant\".token.authorization-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"HTTP Authorization header scheme.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_AUTHORIZATION_SCHEME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_AUTHORIZATION_SCHEME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3618
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.signature-algorithm]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.signature-algorithm[quarkus.oidc.\"tenant\".token.signature-algorithm]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Required signature algorithm. OIDC providers support many signature algorithms but if necessary you can restrict Quarkus application to accept tokens signed only using an algorithm configured with this property.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_SIGNATURE_ALGORITHM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_SIGNATURE_ALGORITHM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3636
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.decryption-key-location]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.decryption-key-location[quarkus.oidc.\"tenant\".token.decryption-key-location]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Decryption key location. JWT tokens can be inner-signed and encrypted by OpenId Connect providers. However, it is not always possible to remotely introspect such tokens because the providers may not control the private decryption keys. In such cases set this property to point to the file containing the decryption private key in PEM or JSON Web Key (JWK) format. Note that if a `private_key_jwt` client authentication method is used then the private key which is used to sign client authentication JWT tokens will be used to try to decrypt an encrypted ID token if this property is not set.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_DECRYPTION_KEY_LOCATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_DECRYPTION_KEY_LOCATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3653
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.allow-jwt-introspection]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.allow-jwt-introspection[quarkus.oidc.\"tenant\".token.allow-jwt-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of JWT tokens when no matching JWK key is available. Note this property is set to `true` by default for backward-compatibility reasons and will be set to `false` instead in one of the next releases. Also note this property will be ignored if JWK endpoint URI is not available and introspecting the tokens is the only verification option.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_JWT_INTROSPECTION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_JWT_INTROSPECTION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3670
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.require-jwt-introspection-only]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.require-jwt-introspection-only[quarkus.oidc.\"tenant\".token.require-jwt-introspection-only]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that JWT tokens are only introspected remotely.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_REQUIRE_JWT_INTROSPECTION_ONLY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3687
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.allow-opaque-token-introspection]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.allow-opaque-token-introspection[quarkus.oidc.\"tenant\".token.allow-opaque-token-introspection]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow the remote introspection of the opaque tokens. Set this property to 'false' if only JWT tokens are expected.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_ALLOW_OPAQUE_TOKEN_INTROSPECTION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3704
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.customizer-name]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.customizer-name[quarkus.oidc.\"tenant\".token.customizer-name]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token customizer name. Allows to select a tenant specific token customizer as a named bean. Prefer using `TenantFeature` qualifier when registering custom `TokenCustomizer`. Use this property only to refer to `TokenCustomizer` implementations provided by this extension.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_CUSTOMIZER_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_CUSTOMIZER_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3721
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.verify-access-token-with-user-info]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token.verify-access-token-with-user-info[quarkus.oidc.\"tenant\".token.verify-access-token-with-user-info]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Indirectly verify that the opaque (binary) access token is valid by using it to request UserInfo. Opaque access token is considered valid if the provider accepted this token and returned a valid UserInfo. You should only enable this option if the opaque access tokens have to be accepted but OpenId Connect provider does not have a token introspection endpoint. This property will have no effect when JWT tokens have to be verified.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_VERIFY_ACCESS_TOKEN_WITH_USER_INFO+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3738
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.path[quarkus.oidc.\"tenant\".logout.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the logout endpoint at the application. If provided, the application is able to initiate the logout through this endpoint in conformance with the OpenID Connect RP-Initiated Logout specification.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3755
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.post-logout-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.post-logout-path[quarkus.oidc.\"tenant\".logout.post-logout-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path of the application endpoint where the user should be redirected to after logging out from the OpenID Connect Provider. This endpoint URI must be properly registered at the OpenID Connect Provider as a valid redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_POST_LOGOUT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_POST_LOGOUT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3772
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.post-logout-uri-param]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.post-logout-uri-param[quarkus.oidc.\"tenant\".logout.post-logout-uri-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Name of the post logout URI parameter which will be added as a query parameter to the logout redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_POST_LOGOUT_URI_PARAM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_POST_LOGOUT_URI_PARAM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3789
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.extra-params-extra-params]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.extra-params-extra-params[quarkus.oidc.\"tenant\".logout.extra-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties which will be added as the query parameters to the logout redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_EXTRA_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_EXTRA_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3806
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.path[quarkus.oidc.\"tenant\".logout.backchannel.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the Back-Channel Logout endpoint at the application.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3823
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.token-cache-size]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.token-cache-size[quarkus.oidc.\"tenant\".logout.backchannel.token-cache-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of logout tokens that can be cached before they are matched against ID tokens stored in session cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_TOKEN_CACHE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_TOKEN_CACHE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3840
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.token-cache-time-to-live]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.token-cache-time-to-live[quarkus.oidc.\"tenant\".logout.backchannel.token-cache-time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Number of minutes a logout token can be cached for.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_TOKEN_CACHE_TIME_TO_LIVE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_TOKEN_CACHE_TIME_TO_LIVE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3858
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.clean-up-timer-interval]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.clean-up-timer-interval[quarkus.oidc.\"tenant\".logout.backchannel.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Token cache timer interval. If this property is set then a timer will check and remove the stale entries periodically.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_CLEAN_UP_TIMER_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3876
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.logout-token-key]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.backchannel.logout-token-key[quarkus.oidc.\"tenant\".logout.backchannel.logout-token-key]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Logout token claim whose value will be used as a key for caching the tokens. Only `sub` (subject) and `sid` (session id) claims can be used as keys. Set it to `sid` only if ID tokens issued by the OIDC provider have no `sub` but have `sid` claim.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_LOGOUT_TOKEN_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_BACKCHANNEL_LOGOUT_TOKEN_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3893
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.frontchannel.path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.logout.frontchannel.path[quarkus.oidc.\"tenant\".logout.frontchannel.path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The relative path of the Front-Channel Logout endpoint at the application.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__LOGOUT_FRONTCHANNEL_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__LOGOUT_FRONTCHANNEL_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3910
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.certificate-chain.trust-store-file]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.certificate-chain.trust-store-file[quarkus.oidc.\"tenant\".certificate-chain.trust-store-file]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Truststore file which keeps thumbprints of the trusted certificates\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_FILE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_FILE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3927
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.certificate-chain.trust-store-password]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.certificate-chain.trust-store-password[quarkus.oidc.\"tenant\".certificate-chain.trust-store-password]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the password of the truststore file if it is configured with `trust-store-file`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_PASSWORD+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_PASSWORD+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3944
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.certificate-chain.trust-store-cert-alias]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.certificate-chain.trust-store-cert-alias[quarkus.oidc.\"tenant\".certificate-chain.trust-store-cert-alias]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"A parameter to specify the alias of the truststore certificate.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_CERT_ALIAS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_CERT_ALIAS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3961
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.certificate-chain.trust-store-file-type]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.certificate-chain.trust-store-file-type[quarkus.oidc.\"tenant\".certificate-chain.trust-store-file-type]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"An optional parameter to specify type of the truststore file. If not given, the type is automatically detected based on the file name.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_FILE_TYPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CERTIFICATE_CHAIN_TRUST_STORE_FILE_TYPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3978
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.response-mode]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.response-mode[quarkus.oidc.\"tenant\".authentication.response-mode]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Authorization code flow response mode\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESPONSE_MODE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESPONSE_MODE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:3996
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.redirect-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.redirect-path[quarkus.oidc.\"tenant\".authentication.redirect-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path for calculating a `redirect_uri` query parameter. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if the current request URI is 'https://localhost:8080/service' then a `redirect_uri` parameter will be set to 'https://localhost:8080/' if this property is set to '/' and be the same as the request URI if this property has not been configured. Note the original request URI will be restored after the user has authenticated if 'restorePathAfterRedirect' is set to `true`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REDIRECT_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REDIRECT_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4013
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.restore-path-after-redirect]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.restore-path-after-redirect[quarkus.oidc.\"tenant\".authentication.restore-path-after-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then the original request URI which was used before the authentication will be restored after the user has been redirected back to the application. Note if `redirectPath` property is not set, the original request URI will be restored even if this property is disabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_RESTORE_PATH_AFTER_REDIRECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4030
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.remove-redirect-parameters]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.remove-redirect-parameters[quarkus.oidc.\"tenant\".authentication.remove-redirect-parameters]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Remove the query parameters such as 'code' and 'state' set by the OIDC server on the redirect URI after the user has authenticated by redirecting a user to the same URI but without the query parameters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_REMOVE_REDIRECT_PARAMETERS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4047
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.error-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.error-path[quarkus.oidc.\"tenant\".authentication.error-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Relative path to the public endpoint which will process the error response from the OIDC authorization endpoint. If the user authentication has failed then the OIDC provider will return an `error` and an optional `error_description` parameters, instead of the expected authorization 'code'. If this property is set then the user will be redirected to the endpoint which can return a user-friendly error description page. It has to start from a forward slash and will be appended to the request URI's host and port. For example, if it is set as '/error' and the current request URI is 'https://localhost:8080/callback?error=invalid_scope' then a redirect will be made to 'https://localhost:8080/error?error=invalid_scope'. If this property is not set then HTTP 401 status will be returned in case of the user authentication failure.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ERROR_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ERROR_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4064
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.verify-access-token]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.verify-access-token[quarkus.oidc.\"tenant\".authentication.verify-access-token]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Both ID and access tokens are fetched from the OIDC provider as part of the authorization code flow. ID token is always verified on every user request as the primary token which is used to represent the principal and extract the roles. Access token is not verified by default since it is meant to be propagated to the downstream services. The verification of the access token should be enabled if it is injected as a JWT token. Access tokens obtained as part of the code flow will always be verified if `quarkus.oidc.roles.source` property is set to `accesstoken` which means the authorization decision will be based on the roles extracted from the access token. Bearer access tokens are always verified.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_VERIFY_ACCESS_TOKEN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_VERIFY_ACCESS_TOKEN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4081
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.force-redirect-https-scheme]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.force-redirect-https-scheme[quarkus.oidc.\"tenant\".authentication.force-redirect-https-scheme]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Force 'https' as the `redirect_uri` parameter scheme when running behind an SSL/TLS terminating reverse proxy. This property, if enabled, will also affect the logout `post_logout_redirect_uri` and the local redirect requests.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORCE_REDIRECT_HTTPS_SCHEME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4098
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.scopes]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.scopes[quarkus.oidc.\"tenant\".authentication.scopes]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"List of scopes\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SCOPES+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SCOPES+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4115
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.nonce-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.nonce-required[quarkus.oidc.\"tenant\".authentication.nonce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Require that ID token includes a `nonce` claim which must match `nonce` authentication request query parameter. Enabling this property can help mitigate replay attacks. Do not enable this property if your OpenId Connect provider does not support setting `nonce` in ID token or if you work with OAuth2 provider such as `GitHub` which does not issue ID tokens.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_NONCE_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_NONCE_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4132
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.add-openid-scope]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.add-openid-scope[quarkus.oidc.\"tenant\".authentication.add-openid-scope]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Add the `openid` scope automatically to the list of scopes. This is required for OpenId Connect providers but will not work for OAuth2 providers such as Twitter OAuth2 which does not accept that scope and throws an error.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ADD_OPENID_SCOPE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ADD_OPENID_SCOPE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4149
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.extra-params-extra-params]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.extra-params-extra-params[quarkus.oidc.\"tenant\".authentication.extra-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional properties which will be added as the query parameters to the authentication redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_EXTRA_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_EXTRA_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4166
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.forward-params]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.forward-params[quarkus.oidc.\"tenant\".authentication.forward-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Request URL query parameters which, if present, will be added to the authentication redirect URI.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORWARD_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FORWARD_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4183
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-force-secure]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-force-secure[quarkus.oidc.\"tenant\".authentication.cookie-force-secure]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If enabled the state, session and post logout cookies will have their 'secure' parameter set to `true` when HTTP is used. It may be necessary when running behind an SSL/TLS terminating reverse proxy. The cookies will always be secure if HTTPS is used even if this property is set to false.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_FORCE_SECURE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_FORCE_SECURE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4200
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-suffix]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-suffix[quarkus.oidc.\"tenant\".authentication.cookie-suffix]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie name suffix. For example, a session cookie name for the default OIDC tenant is `q_session` but can be changed to `q_session_test` if this property is set to `test`.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SUFFIX+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SUFFIX+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4217
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-path]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-path[quarkus.oidc.\"tenant\".authentication.cookie-path]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path parameter value which, if set, will be used to set a path parameter for the session, state and post logout cookies. The `cookie-path-header` property, if set, will be checked first.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4234
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-path-header]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-path-header[quarkus.oidc.\"tenant\".authentication.cookie-path-header]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie path header parameter value which, if set, identifies the incoming HTTP header whose value will be used to set a path parameter for the session, state and post logout cookies. If the header is missing then the `cookie-path` property will be checked.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH_HEADER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_PATH_HEADER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4251
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-domain]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-domain[quarkus.oidc.\"tenant\".authentication.cookie-domain]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cookie domain parameter value which, if set, will be used for the session, state and post logout cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_DOMAIN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_DOMAIN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4268
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-same-site]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.cookie-same-site[quarkus.oidc.\"tenant\".authentication.cookie-same-site]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"SameSite attribute for the session cookie.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SAME_SITE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_COOKIE_SAME_SITE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4286
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.allow-multiple-code-flows]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.allow-multiple-code-flows[quarkus.oidc.\"tenant\".authentication.allow-multiple-code-flows]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If a state cookie is present then a `state` query parameter must also be present and both the state cookie name suffix and state cookie value have to match the value of the `state` query parameter when the redirect path matches the current path. However, if multiple authentications are attempted from the same browser, for example, from the different browser tabs, then the currently available state cookie may represent the authentication flow initiated from another tab and not related to the current request. Disable this property to permit only a single authorization code flow in the same browser.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ALLOW_MULTIPLE_CODE_FLOWS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4309
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.fail-on-missing-state-param]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.fail-on-missing-state-param[quarkus.oidc.\"tenant\".authentication.fail-on-missing-state-param]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Fail with the HTTP 401 error if the state cookie is present but no state query parameter is present.\n"
"\n"
"When either multiple authentications are disabled or the redirect URL matches the original request URL, the stale state cookie might remain in the browser cache from the earlier failed redirect to an OpenId Connect provider and be visible during the current request. For example, if Single-page application (SPA) uses XHR to handle redirects to the provider which does not support CORS for its authorization endpoint, the browser will block it and the state cookie created by Quarkus will remain in the browser cache. Quarkus will report an authentication failure when it will detect such an old state cookie but find no matching state query parameter.\n"
"\n"
"Reporting HTTP 401 error is usually the right thing to do in such cases, it will minimize a risk of the browser redirect loop but also can identify problems in the way SPA or Quarkus application manage redirects. For example, enabling `java-script-auto-redirect` or having the provider redirect to URL configured with `redirect-path` may be needed to avoid such errors.\n"
"\n"
"However, setting this property to `false` may help if the above options are not suitable. It will cause a new authentication redirect to OpenId Connect provider. Doing so may increase the risk of browser redirect loops.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_FAIL_ON_MISSING_STATE_PARAM+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4326
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.user-info-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.user-info-required[quarkus.oidc.\"tenant\".authentication.user-info-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then an OIDC UserInfo endpoint will be called. This property will be enabled if `quarkus.oidc.roles.source` is `userinfo` or `quarkus.oidc.token.verify-access-token-with-user-info` is `true` or `quarkus.oidc.authentication.id-token-required` is set to `false`, you do not have to enable this property manually in these cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_USER_INFO_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_USER_INFO_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4343
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.session-age-extension]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.session-age-extension[quarkus.oidc.\"tenant\".authentication.session-age-extension]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Session age extension in minutes. The user session age property is set to the value of the ID token life-span by default and the user will be redirected to the OIDC provider to re-authenticate once the session has expired. If this property is set to a non-zero value, then the expired ID token can be refreshed before the session has expired. This property will be ignored if the `token.refresh-expired` property has not been enabled.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SESSION_AGE_EXTENSION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_SESSION_AGE_EXTENSION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4363
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.java-script-auto-redirect]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.java-script-auto-redirect[quarkus.oidc.\"tenant\".authentication.java-script-auto-redirect]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If this property is set to `true` then a normal 302 redirect response will be returned if the request was initiated via JavaScript API such as XMLHttpRequest or Fetch and the current user needs to be (re)authenticated which may not be desirable for Single-page applications (SPA) since it automatically following the redirect may not work given that OIDC authorization endpoints typically do not support CORS.\n"
"\n"
"If this property is set to 'false' then a status code of '499' will be returned to allow SPA to handle the redirect manually if a request header identifying current request as a JavaScript request is found. 'X-Requested-With' request header with its value set to either `JavaScript` or `XMLHttpRequest` is expected by default if this property is enabled. You can register a custom `JavaScriptRequestChecker` to do a custom JavaScript request check instead.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_JAVA_SCRIPT_AUTO_REDIRECT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4380
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.id-token-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.id-token-required[quarkus.oidc.\"tenant\".authentication.id-token-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that ID token is available when the authorization code flow completes. Disable this property only when you need to use the authorization code flow with OAuth2 providers which do not return ID token - an internal IdToken will be generated in such cases.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ID_TOKEN_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_ID_TOKEN_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4397
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.internal-id-token-lifespan]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.internal-id-token-lifespan[quarkus.oidc.\"tenant\".authentication.internal-id-token-lifespan]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Internal ID token lifespan. This property is only checked when an internal IdToken is generated when Oauth2 providers do not return IdToken.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_INTERNAL_ID_TOKEN_LIFESPAN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4415
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.pkce-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.pkce-required[quarkus.oidc.\"tenant\".authentication.pkce-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Requires that a Proof Key for Code Exchange (PKCE) is used.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_PKCE_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_PKCE_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4438
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.state-secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.authentication.state-secret[quarkus.oidc.\"tenant\".authentication.state-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret which will be used to encrypt Proof Key for Code Exchange (PKCE) code verifier and/or nonce in the code flow state. This secret should be at least 32 characters long.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` will be checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication will be checked. Client secret will not be used as a state encryption secret if it is less than 32 characters long.\n"
"\n"
"The secret will be auto-generated if it remains uninitialized after checking all of these properties.\n"
"\n"
"Error will be reported if the secret length is less than 16 characters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__AUTHENTICATION_STATE_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__AUTHENTICATION_STATE_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4455
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.code-grant.extra-params-extra-params]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.code-grant.extra-params-extra-params[quarkus.oidc.\"tenant\".code-grant.extra-params]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Additional parameters, in addition to the required `code` and `redirect-uri` parameters, which have to be included to complete the authorization code grant request.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CODE_GRANT_EXTRA_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CODE_GRANT_EXTRA_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4472
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.code-grant.headers-headers]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.code-grant.headers-headers[quarkus.oidc.\"tenant\".code-grant.headers]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Custom HTTP headers which have to be sent to complete the authorization code grant request.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CODE_GRANT_HEADERS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CODE_GRANT_HEADERS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4489
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-state-manager.strategy]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-state-manager.strategy[quarkus.oidc.\"tenant\".token-state-manager.strategy]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Default TokenStateManager strategy.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_STRATEGY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_STRATEGY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4507
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-state-manager.split-tokens]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-state-manager.split-tokens[quarkus.oidc.\"tenant\".token-state-manager.split-tokens]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Default TokenStateManager keeps all tokens (ID, access and refresh) returned in the authorization code grant response in a single session cookie by default. Enable this property to minimize a session cookie size\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_SPLIT_TOKENS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_SPLIT_TOKENS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4524
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-state-manager.encryption-required]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-state-manager.encryption-required[quarkus.oidc.\"tenant\".token-state-manager.encryption-required]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Mandates that the Default TokenStateManager will encrypt the session cookie that stores the tokens.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_ENCRYPTION_REQUIRED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_ENCRYPTION_REQUIRED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4545
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-state-manager.encryption-secret]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.token-state-manager.encryption-secret[quarkus.oidc.\"tenant\".token-state-manager.encryption-secret]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Secret which will be used by the Default TokenStateManager to encrypt the session cookie storing the tokens when `encryption-required` property is enabled.\n"
"\n"
"If this secret is not set, the client secret configured with either `quarkus.oidc.credentials.secret` or `quarkus.oidc.credentials.client-secret.value` will be checked. Finally, `quarkus.oidc.credentials.jwt.secret` which can be used for `client_jwt_secret` authentication will be checked. The secret will be auto-generated if it remains uninitialized after checking all of these properties.\n"
"\n"
"The length of the secret which will be used to encrypt the tokens should be at least 32 characters long. Warning will be logged if the secret length is less than 16 characters.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_ENCRYPTION_SECRET+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__TOKEN_STATE_MANAGER_ENCRYPTION_SECRET+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4562
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.allow-token-introspection-cache]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.allow-token-introspection-cache[quarkus.oidc.\"tenant\".allow-token-introspection-cache]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow caching the token introspection data. Note enabling this property does not enable the cache itself but only permits to cache the token introspection for a given tenant. If the default token cache can be used, see `OidcConfig.TokenCache` to enable it.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ALLOW_TOKEN_INTROSPECTION_CACHE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__ALLOW_TOKEN_INTROSPECTION_CACHE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4579
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.allow-user-info-cache]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.allow-user-info-cache[quarkus.oidc.\"tenant\".allow-user-info-cache]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow caching the user info data. Note enabling this property does not enable the cache itself but only permits to cache the user info data for a given tenant. If the default token cache can be used, see `OidcConfig.TokenCache` to enable it.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__ALLOW_USER_INFO_CACHE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__ALLOW_USER_INFO_CACHE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4596
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.cache-user-info-in-idtoken]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.cache-user-info-in-idtoken[quarkus.oidc.\"tenant\".cache-user-info-in-idtoken]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Allow inlining UserInfo in IdToken instead of caching it in the token cache. This property is only checked when an internal IdToken is generated when Oauth2 providers do not return IdToken. Inlining UserInfo in the generated IdToken allows to store it in the session cookie and avoids introducing a cached state.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__CACHE_USER_INFO_IN_IDTOKEN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__CACHE_USER_INFO_IN_IDTOKEN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4615
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks.resolve-early]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks.resolve-early[quarkus.oidc.\"tenant\".jwks.resolve-early]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"If JWK verification keys should be fetched at the moment a connection to the OIDC provider is initialized.\n"
"\n"
"Disabling this property will delay the key acquisition until the moment the current token has to be verified. Typically it can only be necessary if the token or other telated request properties provide an additional context which is required to resolve the keys correctly.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_RESOLVE_EARLY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__JWKS_RESOLVE_EARLY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4632
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks.cache-size]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks.cache-size[quarkus.oidc.\"tenant\".jwks.cache-size]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Maximum number of JWK keys that can be cached. This property will be ignored if the `resolve-early` property is set to true.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_CACHE_SIZE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__JWKS_CACHE_SIZE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4649
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks.cache-time-to-live]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks.cache-time-to-live[quarkus.oidc.\"tenant\".jwks.cache-time-to-live]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Number of minutes a JWK key can be cached for. This property will be ignored if the `resolve-early` property is set to true.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_CACHE_TIME_TO_LIVE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__JWKS_CACHE_TIME_TO_LIVE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4667
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks.clean-up-timer-interval]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.jwks.clean-up-timer-interval[quarkus.oidc.\"tenant\".jwks.clean-up-timer-interval]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Cache timer interval. If this property is set then a timer will check and remove the stale entries periodically. This property will be ignored if the `resolve-early` property is set to true.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__JWKS_CLEAN_UP_TIMER_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__JWKS_CLEAN_UP_TIMER_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4685
#, no-wrap
msgid ""
"[[quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.provider]]`link:#quarkus-oidc-oidc-tenant-config_quarkus.oidc.-tenant-.provider[quarkus.oidc.\"tenant\".provider]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Well known OpenId Connect provider identifier\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_OIDC__TENANT__PROVIDER+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_OIDC__TENANT__PROVIDER+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Block title
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4693
#, no-wrap
msgid "About the Duration format"
msgstr ""

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4697
#, fuzzy
msgid "To write duration values, use the standard `java.time.Duration` format.  See the link:https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/time/Duration.html#parse(java.lang.CharSequence)[Duration#parse() Java API documentation] for more information."
msgstr "持续时间的格式使用标准的 `java.time.Duration` 格式您可以在 https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-[Duration#parse() javadoc] 中了解更多信息。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4699
#, fuzzy
msgid "You can also use a simplified format, starting with a number:"
msgstr "您也可以使用简化格式，以数字开头："

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4701
#, fuzzy
msgid "If the value is only a number, it represents time in seconds."
msgstr "如果数值只是一个数字，则表示时间（秒）。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4702
#, fuzzy
msgid "If the value is a number followed by `ms`, it represents time in milliseconds."
msgstr "如果数值是一个数字，后跟 `ms` ，则表示时间（毫秒）。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4704
#, fuzzy
msgid "In other cases, the simplified format is translated to the `java.time.Duration` format for parsing:"
msgstr "在其他情况下，简化格式会被翻译成 `java.time.Duration` 格式进行解析："

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4706
#, fuzzy
msgid "If the value is a number followed by `h`, `m`, or `s`, it is prefixed with `PT`."
msgstr "如果数值是一个数字，后面跟 `h` 、 `m` 或 `s` ，则前缀为 `PT` 。"

#. type: delimited block =
#: upstream/_generated-doc/main/config/quarkus-oidc-oidc-tenant-config.adoc:4707
#, fuzzy
msgid "If the value is a number followed by `d`, it is prefixed with `P`."
msgstr "如果数值是一个数字，后面跟 `d` ，则前缀为 `P` 。"

#~ msgid "You can also provide duration values starting with a number.  In this case, if the value consists only of a number, the converter treats the value as seconds.  Otherwise, `PT` is implicitly prepended to the value to obtain a standard `java.time.Duration` format."
#~ msgstr "您还可以提供以数字开头的持续时间值。 在这种情况下，如果该值仅包含一个数字，则转换器将该值视为秒。 否则，`PT` 会隐式添加到值的前面，以获得标准的 `java.time.Duration` 格式。"

#~ msgid "`password`"
#~ msgstr "`password`"
