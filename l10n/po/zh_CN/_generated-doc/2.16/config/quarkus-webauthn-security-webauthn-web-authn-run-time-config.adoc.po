# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-05-05 19:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:5
#, fuzzy
msgid "icon:lock[title=Fixed at build time] Configuration property fixed at build time - All other configuration properties are overridable at runtime"
msgstr "[锁定]在构建时固定配置属性 - 在运行时可覆盖所有其他配置属性"

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:10
#, no-wrap
msgid "[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_configuration]]link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_configuration[Configuration property]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:11
#, no-wrap
msgid "Type"
msgstr "类型"

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:13
#, no-wrap
msgid "Default"
msgstr "默认"

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:25
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.origin]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.origin[quarkus.webauthn.origin]`\n"
"\n"
"[.description]\n"
"--\n"
"The origin of the application. The origin is basically protocol, host and port. If you are calling WebAuthn API while your application is located at `https://example.com/login`, then origin will be `https://example.com`. If you are calling from `http://localhost:2823/test`, then the origin will be `http://localhost:2823`. Please note that WebAuthn API will not work on pages loaded over HTTP, unless it is localhost, which is considered secure context.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_ORIGIN+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_ORIGIN+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:26
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:63
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:79
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:221
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:271
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:304
#, fuzzy, no-wrap
msgid "string"
msgstr "绳子"

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:45
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.transports]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.transports[quarkus.webauthn.transports]`\n"
"\n"
"[.description]\n"
"--\n"
"Authenticator Transports allowed by the application. Authenticators can interact with the user web browser through several transports. Applications may want to restrict the transport protocols for extra security hardening reasons. By default, all transports should be allowed. If your application is to be used by mobile phone users, you may want to restrict only the `INTERNAL` authenticator to be allowed. Permitted values are:  \n"
" - `USB` - USB connected authenticators (e.g.: Yubikey's) \n"
" - `NFC` - NFC connected authenticators (e.g.: Yubikey's) \n"
" - `BLE` - Bluetooth LE connected authenticators \n"
" - `INTERNAL` - Hardware security chips (e.g.: Intel TPM2.0)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_TRANSPORTS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_TRANSPORTS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:47
#, no-wrap
msgid "list of link:https://vertx.io/docs/apidocs/io/vertx/ext/auth/webauthn/AuthenticatorTransport.html[AuthenticatorTransport]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:50
#, no-wrap
msgid "`USB,NFC,BLE,INTERNAL`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:62
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.relying-party.id]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.relying-party.id[quarkus.webauthn.relying-party.id]`\n"
"\n"
"[.description]\n"
"--\n"
"The id (or domain name of your server)\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_RELYING_PARTY_ID+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_RELYING_PARTY_ID+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:78
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.relying-party.name]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.relying-party.name[quarkus.webauthn.relying-party.name]`\n"
"\n"
"[.description]\n"
"--\n"
"A user friendly name for your server\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_RELYING_PARTY_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_RELYING_PARTY_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:82
#, no-wrap
msgid "`Quarkus server`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:96
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.authenticator-attachment]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.authenticator-attachment[quarkus.webauthn.authenticator-attachment]`\n"
"\n"
"[.description]\n"
"--\n"
"Kind of Authenticator Attachment allowed. Authenticators can connect to your device in two forms:  \n"
" - `PLATFORM` - The Authenticator is built-in to your device (e.g.: Security chip) \n"
" - `CROSS_PLATFORM` - The Authenticator can roam across devices (e.g.: USB Authenticator)  For security reasons your application may choose to restrict to a specific attachment mode. If omitted, then any mode is permitted.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_AUTHENTICATOR_ATTACHMENT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_AUTHENTICATOR_ATTACHMENT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:98
#, no-wrap
msgid "`platform`, `cross-platform`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:113
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.require-resident-key]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.require-resident-key[quarkus.webauthn.require-resident-key]`\n"
"\n"
"[.description]\n"
"--\n"
"Resident key required. A resident (private) key, is a key that cannot leave your authenticator device, this means that you cannot reuse the authenticator to log into a second computer.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_REQUIRE_RESIDENT_KEY+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_REQUIRE_RESIDENT_KEY+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:114
#, fuzzy, no-wrap
msgid "boolean"
msgstr "布尔型"

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:117
#, no-wrap
msgid "`false`"
msgstr "`false` "

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:132
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.user-verification]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.user-verification[quarkus.webauthn.user-verification]`\n"
"\n"
"[.description]\n"
"--\n"
"User Verification requirements. Webauthn applications may choose `REQUIRED` verification to assert that the user is present during the authentication ceremonies, but in some cases, applications may want to reduce the interactions with the user, i.e.: prevent the use of pop-ups. Valid values are:  \n"
" - `REQUIRED` - User must always interact with the browser \n"
" - `PREFERRED` - User should always interact with the browser \n"
" - `DISCOURAGED` - User should avoid interact with the browser\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_USER_VERIFICATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_USER_VERIFICATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:134
#, no-wrap
msgid "`required`, `preferred`, `discouraged`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:137
#, no-wrap
msgid "`required`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:149
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.timeout]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.timeout[quarkus.webauthn.timeout]`\n"
"\n"
"[.description]\n"
"--\n"
"Non-negative User Verification timeout. Authentication must occur within the timeout, this will prevent the user browser from being blocked with a pop-up required user verification, and the whole ceremony must be completed within the timeout period. After the timeout, any previously issued challenge is automatically invalidated.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:151
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:238
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:255
#, no-wrap
msgid ""
"link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html[Duration]\n"
"  link:#duration-note-anchor-{summaryTableId}[icon:question-circle[], title=More information about the Duration format]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:154
#, no-wrap
msgid "`60s`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:170
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.attestation]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.attestation[quarkus.webauthn.attestation]`\n"
"\n"
"[.description]\n"
"--\n"
"Device Attestation Preference. During registration, applications may want to attest the device. Attestation is a cryptographic verification of the authenticator hardware. Attestation implies that the privacy of the users may be exposed and browsers might override the desired configuration on the user's behalf. Valid values are:  \n"
" - `NONE` - no attestation data is sent with registration \n"
" - `INDIRECT` - attestation data is sent with registration, yielding anonymized data by a trusted CA \n"
" - `DIRECT` - attestation data is sent with registration \n"
" - `ENTERPRISE` - no attestation data is sent with registration. The device AAGUID is returned unaltered.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_ATTESTATION+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_ATTESTATION+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:172
#, no-wrap
msgid "`none`, `indirect`, `direct`, `enterprise`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:175
#, fuzzy, no-wrap
msgid "`none`"
msgstr "`none`"

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:187
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.pub-key-cred-params]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.pub-key-cred-params[quarkus.webauthn.pub-key-cred-params]`\n"
"\n"
"[.description]\n"
"--\n"
"Allowed Public Key Credential algorithms by preference order. Webauthn mandates that all authenticators must support at least the following 2 algorithms: `ES256` and `RS256`. Applications may require stronger keys and algorithms, for example: `ES512` or `EdDSA`. Note that the use of stronger algorithms, e.g.: `EdDSA` may require Java 15 or a cryptographic `JCE` provider that implements the algorithms.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_PUB_KEY_CRED_PARAMS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_PUB_KEY_CRED_PARAMS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:189
#, no-wrap
msgid "list of link:https://vertx.io/docs/apidocs/io/vertx/ext/auth/webauthn/PublicKeyCredential.html[PublicKeyCredential]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:192
#, no-wrap
msgid "`ES256,RS256`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:204
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.challenge-length]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.challenge-length[quarkus.webauthn.challenge-length]`\n"
"\n"
"[.description]\n"
"--\n"
"Length of the challenges exchanged between the application and the browser. Challenges must be at least 32 bytes.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_CHALLENGE_LENGTH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_CHALLENGE_LENGTH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:205
#, fuzzy, no-wrap
msgid "int"
msgstr "int"

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:208
#, no-wrap
msgid "`64`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:220
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.login-page]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.login-page[quarkus.webauthn.login-page]`\n"
"\n"
"[.description]\n"
"--\n"
"The login page\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_LOGIN_PAGE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_LOGIN_PAGE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:224
#, no-wrap
msgid "`/login.html`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:236
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.session-timeout]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.session-timeout[quarkus.webauthn.session-timeout]`\n"
"\n"
"[.description]\n"
"--\n"
"The inactivity (idle) timeout When inactivity timeout is reached, cookie is not renewed and a new login is enforced.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_SESSION_TIMEOUT+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_SESSION_TIMEOUT+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:241
#, no-wrap
msgid "`PT30M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:253
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.new-cookie-interval]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.new-cookie-interval[quarkus.webauthn.new-cookie-interval]`\n"
"\n"
"[.description]\n"
"--\n"
"How old a cookie can get before it will be replaced with a new cookie with an updated timeout, also referred to as \"renewal-timeout\". Note that smaller values will result in slightly more server load (as new encrypted cookies will be generated more often), however larger values affect the inactivity timeout as the timeout is set when a cookie is generated. For example if this is set to 10 minutes, and the inactivity timeout is 30m, if a users last request is when the cookie is 9m old then the actual timeout will happen 21m after the last request, as the timeout is only refreshed when a new cookie is generated. In other words, no timeout is tracked on the server side; the timestamp is encoded and encrypted in the cookie itself, and it is decrypted and parsed with each request.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_NEW_COOKIE_INTERVAL+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_NEW_COOKIE_INTERVAL+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:258
#, no-wrap
msgid "`PT1M`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:270
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.cookie-name]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.cookie-name[quarkus.webauthn.cookie-name]`\n"
"\n"
"[.description]\n"
"--\n"
"The cookie that is used to store the persistent session\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_COOKIE_NAME+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_COOKIE_NAME+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:274
#, no-wrap
msgid "`quarkus-credential`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:286
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.cookie-same-site]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.cookie-same-site[quarkus.webauthn.cookie-same-site]`\n"
"\n"
"[.description]\n"
"--\n"
"SameSite attribute for the session cookie.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_COOKIE_SAME_SITE+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_COOKIE_SAME_SITE+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:288
#, no-wrap
msgid "`strict`, `lax`, `none`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:291
#, no-wrap
msgid "`strict`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:303
#, no-wrap
msgid ""
"[[quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.cookie-path]]`link:#quarkus-webauthn-security-webauthn-web-authn-run-time-config_quarkus.webauthn.cookie-path[quarkus.webauthn.cookie-path]`\n"
"\n"
"[.description]\n"
"--\n"
"The cookie path for the session cookies.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_WEBAUTHN_COOKIE_PATH+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_WEBAUTHN_COOKIE_PATH+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:306
#, fuzzy, no-wrap
msgid "`/`"
msgstr " `/` "

#. type: Block title
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:310
#, no-wrap
msgid "About the Duration format"
msgstr ""

#. type: delimited block =
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:314
msgid "The format for durations uses the standard `java.time.Duration` format.  You can learn more about it in the link:https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-[Duration#parse() javadoc]."
msgstr "持续时间的格式使用标准的 `java.time.Duration` 格式您可以在 https://docs.oracle.com/javase/8/docs/api/java/time/Duration.html#parse-java.lang.CharSequence-[Duration#parse() javadoc] 中了解更多信息。"

#. type: delimited block =
#: upstream/_generated-doc/2.16/config/quarkus-webauthn-security-webauthn-web-authn-run-time-config.adoc:318
msgid "You can also provide duration values starting with a number.  In this case, if the value consists only of a number, the converter treats the value as seconds.  Otherwise, `PT` is implicitly prepended to the value to obtain a standard `java.time.Duration` format."
msgstr "您还可以提供以数字开头的持续时间值。 在这种情况下，如果该值仅包含一个数字，则转换器将该值视为秒。 否则，`PT` 会隐式添加到值的前面，以获得标准的 `java.time.Duration` 格式。"
