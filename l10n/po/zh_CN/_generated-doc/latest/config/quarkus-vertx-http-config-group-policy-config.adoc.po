# SOME DESCRIPTIVE TITLE
# Copyright (C) YEAR Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2023-11-29 11:05+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. type: Plain text
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:5
#, fuzzy
msgid "icon:lock[title=Fixed at build time] Configuration property fixed at build time - All other configuration properties are overridable at runtime"
msgstr "[锁定]在构建时固定配置属性 - 在运行时可覆盖所有其他配置属性"

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:10
#, no-wrap
msgid "[[quarkus-vertx-http-config-group-policy-config_configuration]]link:#quarkus-vertx-http-config-group-policy-config_configuration[Configuration property]"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:11
#, no-wrap
msgid "Type"
msgstr "类型"

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:13
#, no-wrap
msgid "Default"
msgstr "默认"

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:26
#, no-wrap
msgid ""
"[[quarkus-vertx-http-config-group-policy-config_quarkus.http.auth.policy.-role-policy-.roles-allowed]]`link:#quarkus-vertx-http-config-group-policy-config_quarkus.http.auth.policy.-role-policy-.roles-allowed[quarkus.http.auth.policy.\"role-policy\".roles-allowed]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The roles that are allowed to access resources protected by this policy. By default, access is allowed to any authenticated user.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:27
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:78
#, no-wrap
msgid "list of string"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:30
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:81
#, no-wrap
msgid "`**`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:43
#, no-wrap
msgid ""
"[[quarkus-vertx-http-config-group-policy-config_quarkus.http.auth.policy.-role-policy-.permissions-role1]]`link:#quarkus-vertx-http-config-group-policy-config_quarkus.http.auth.policy.-role-policy-.permissions-role1[quarkus.http.auth.policy.\"role-policy\".permissions]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Permissions granted to the `SecurityIdentity` if this policy is applied successfully (the policy allows request to proceed) and the authenticated request has required role. For example, you can map permission `perm1` with actions `action1` and `action2` to role `admin` by setting `quarkus.http.auth.policy.role-policy1.permissions.admin=perm1:action1,perm1:action2` configuration property. Granted permissions are used for authorization with the `@PermissionsAllowed` annotation.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__PERMISSIONS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__PERMISSIONS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:44
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:95
#, no-wrap
msgid "`Map<String,List<String>>`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:60
#, no-wrap
msgid ""
"[[quarkus-vertx-http-config-group-policy-config_quarkus.http.auth.policy.-role-policy-.permission-class]]`link:#quarkus-vertx-http-config-group-policy-config_quarkus.http.auth.policy.-role-policy-.permission-class[quarkus.http.auth.policy.\"role-policy\".permission-class]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Permissions granted by this policy will be created with a `java.security.Permission` implementation specified by this configuration property. The permission class must declare exactly one constructor that accepts permission name (`String`) or permission name and actions (`String`, `String++[]++`). Permission class must be registered for reflection if you run your application in a native mode.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_HTTP_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:61
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:112
#, fuzzy, no-wrap
msgid "string"
msgstr "绳子"

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:64
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:114
#, no-wrap
msgid "`io.quarkus.security.StringPermission`"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:77
#, no-wrap
msgid ""
"[[quarkus-vertx-http-config-group-policy-config_quarkus.management.auth.policy.-role-policy-.roles-allowed]]`link:#quarkus-vertx-http-config-group-policy-config_quarkus.management.auth.policy.-role-policy-.roles-allowed[quarkus.management.auth.policy.\"role-policy\".roles-allowed]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"The roles that are allowed to access resources protected by this policy. By default, access is allowed to any authenticated user.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__ROLES_ALLOWED+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:94
#, no-wrap
msgid ""
"[[quarkus-vertx-http-config-group-policy-config_quarkus.management.auth.policy.-role-policy-.permissions-role1]]`link:#quarkus-vertx-http-config-group-policy-config_quarkus.management.auth.policy.-role-policy-.permissions-role1[quarkus.management.auth.policy.\"role-policy\".permissions]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Permissions granted to the `SecurityIdentity` if this policy is applied successfully (the policy allows request to proceed) and the authenticated request has required role. For example, you can map permission `perm1` with actions `action1` and `action2` to role `admin` by setting `quarkus.http.auth.policy.role-policy1.permissions.admin=perm1:action1,perm1:action2` configuration property. Granted permissions are used for authorization with the `@PermissionsAllowed` annotation.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSIONS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSIONS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""

#. type: Table
#: upstream/_generated-doc/latest/config/quarkus-vertx-http-config-group-policy-config.adoc:111
#, no-wrap
msgid ""
"[[quarkus-vertx-http-config-group-policy-config_quarkus.management.auth.policy.-role-policy-.permission-class]]`link:#quarkus-vertx-http-config-group-policy-config_quarkus.management.auth.policy.-role-policy-.permission-class[quarkus.management.auth.policy.\"role-policy\".permission-class]`\n"
"\n"
"\n"
"[.description]\n"
"--\n"
"Permissions granted by this policy will be created with a `java.security.Permission` implementation specified by this configuration property. The permission class must declare exactly one constructor that accepts permission name (`String`) or permission name and actions (`String`, `String++[]++`). Permission class must be registered for reflection if you run your application in a native mode.\n"
"\n"
"ifdef::add-copy-button-to-env-var[]\n"
"Environment variable: env_var_with_copy_button:+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS+++[]\n"
"endif::add-copy-button-to-env-var[]\n"
"ifndef::add-copy-button-to-env-var[]\n"
"Environment variable: `+++QUARKUS_MANAGEMENT_AUTH_POLICY__ROLE_POLICY__PERMISSION_CLASS+++`\n"
"endif::add-copy-button-to-env-var[]\n"
"--"
msgstr ""
